{"version":3,"sources":["modules/ForwardingNumber/index.js"],"names":["ForwardingNumber","deps","dep","optional","client","rolesAndPermissions","options","fetchFunction","params","_client","account","extension","forwardingNumber","list","lists","map","number","forbiddenHandler","readyCheckFn","_rolesAndPermissions","ready","cleanOnReset","ensureExist","permissions","ReadUserForwardingFlipNumbers","DataFetcher","selector","data","numbers","phoneNumbers","filter","p","features","indexOf","phoneNumber"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,gB;AAXrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,yBAAP;AAAkCC,IAAAA,QAAQ,EAAE;AAA5C,GAHI;AADA,CAAP,C;;;;;AAQC;;;;;AAKA,kCAAyD;AAAA;;AAAA;;AAAA,QAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCC,mBAAmC,QAAnCA,mBAAmC;AAAA,QAAXC,OAAW;;AAAA;;AACvD;AACEF,MAAAA,MAAM,EAANA,MADF;AAEEG,MAAAA,aAAa,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACO,2BAAU,UAACC,MAAD;AAAA,yBAC5B,MAAKC,OAAL,CACGC,OADH,GAEGC,SAFH,GAGGC,gBAHH,GAIGC,IAJH,CAIQL,MAJR,CAD4B;AAAA,iBAAV,CADP;;AAAA;AACPM,gBAAAA,KADO;AAAA,iDAQNA,KAAK,CAACC,GAAN,CAAU,UAACC,MAAD;AAAA,yBAAY,2BAAUA,MAAV,CAAZ;AAAA,iBAAV,CARM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFjB;AAYEC,MAAAA,gBAAgB,EAAE;AAAA,eAAM,EAAN;AAAA,OAZpB;AAaEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA,OAbhB;AAcEC,MAAAA,YAAY,EAAE;AAdhB,OAeKf,OAfL;;AADuD;;AAAA;;AAAA;;AAkBvD,UAAKa,oBAAL,GAA4B,4CAAMG,uBAAN,kBAC1BjB,mBAD0B,EAE1B,qBAF0B,CAA5B;AAlBuD;AAsBxD;;;;wBAEW;AACV,aAAO,kBAAP;AACD;;;wBAuBoB;AACnB,aAAO,CAAC,CAAC,KAAKc,oBAAL,CAA0BI,WAA1B,CACNC,6BADH;AAED;;;;EA1D2CC,wB,mFAkC3CC,kB;;;;;;;WACS,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C;;gFAETD,kB;;;;;;;WACa,CACZ;AAAA,aAAM,MAAI,CAACE,OAAX;AAAA,KADY,EAEZ,UAACC,YAAD;AAAA,aACEA,YAAY,CAACC,MAAb,CACE,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,QAAF,CAAWC,OAAX,CAAmB,UAAnB,MAAmC,CAAC,CAApC,IAAyCF,CAAC,CAACG,WAAlD;AAAA,OADF,CADF;AAAA,KAFY,C;;sFAQbR,kB;;;;;;;WACmB,CAClB;AAAA,aAAM,MAAI,CAACE,OAAX;AAAA,KADkB,EAElB,UAACC,YAAD;AAAA,aACEA,YAAY,CAACC,MAAb,CACE,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,QAAF,CAAWC,OAAX,CAAmB,gBAAnB,MAAyC,CAAC,CAA1C,IAA+CF,CAAC,CAACG,WAAxD;AAAA,OADF,CADF;AAAA,KAFkB,C","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\nimport removeUri from '../../lib/removeUri';\n\n/**\n * @class\n * @description Extension forwarding number list module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'ForwardingNumberOptions', optional: true },\n  ],\n})\nexport default class ForwardingNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, rolesAndPermissions, ...options }) {\n    super({\n      client,\n      fetchFunction: async () => {\n        const lists = await fetchList((params) =>\n          this._client\n            .account()\n            .extension()\n            .forwardingNumber()\n            .list(params),\n        );\n        return lists.map((number) => removeUri(number));\n      },\n      forbiddenHandler: () => [],\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      cleanOnReset: true,\n      ...options,\n    });\n    this._rolesAndPermissions = this::ensureExist(\n      rolesAndPermissions,\n      'rolesAndPermissions',\n    );\n  }\n\n  get _name() {\n    return 'forwardingNumber';\n  }\n\n  @selector\n  numbers = [() => this.data, (data) => data || []];\n\n  @selector\n  flipNumbers = [\n    () => this.numbers,\n    (phoneNumbers) =>\n      phoneNumbers.filter(\n        (p) => p.features.indexOf('CallFlip') !== -1 && p.phoneNumber,\n      ),\n  ];\n\n  @selector\n  forwardingNumbers = [\n    () => this.numbers,\n    (phoneNumbers) =>\n      phoneNumbers.filter(\n        (p) => p.features.indexOf('CallForwarding') !== -1 && p.phoneNumber,\n      ),\n  ];\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions\n      .ReadUserForwardingFlipNumbers;\n  }\n}\n"],"file":"index.js"}