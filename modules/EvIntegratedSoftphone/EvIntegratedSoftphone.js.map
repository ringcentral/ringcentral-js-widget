{"version":3,"sources":["modules/EvIntegratedSoftphone/EvIntegratedSoftphone.ts"],"names":["EvIntegratedSoftphone","name","deps","dep","optional","locale","routerInteraction","evSessionConfig","evSubscription","evSettings","evClient","storage","presence","modal","alert","enableCache","modules","storageKey","autoAnswerCheckFn","_audio","_eventEmitter","EventEmitter","_answerModalId","sipRegistering","_initAudio","state","muteActive","softphoneRegistered","_modules","onTriggerConfig","push","isIntegrated","_bindingIntegratedSoftphone","setSoftphoneRegistered","askAudioPermission","sipToggleMute","navigator","mediaDevices","getUserMedia","audio","danger","message","EvSoftphoneEvents","AUDIO_STREAM_REJECTED","backdrop","Error","_registerSoftphone","subscribe","EvCallbackTypes","SIP_REGISTERED","console","log","emit","REGISTERED","SIP_UNREGISTERED","SIP_REGISTRATION_FAILED","ttl","SIP_RINGING","ringingCall","_sipAnswer","_showRingingModal","SIP_CONNECTED","setOffhook","reset","SIP_ENDED","_closeRingingModal","SIP_MUTE","setMuteActive","SIP_UNMUTE","_playAudioLoop","displayName","data","request","from","confirm","title","i18n","getString","currentLocale","content","okText","cancelText","onOK","_resetRingingModal","onCancel","showOffHookInitError","sipReject","CALL_REJECTED","info","close","_stopAudio","sipInit","sipRegister","Promise","resolve","once","timeout","sipAnswer","document","createElement","type","loop","_playAudio","currentTime","src","audios","play","pause","RcModuleV2","action"],"mappings":"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","sourcesContent":["import {\n  RcModuleState,\n  RcModuleV2,\n  state,\n  action,\n  storage,\n} from '@ringcentral-integration/core';\nimport EventEmitter from 'events';\nimport formatMessage from 'format-message';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport { EvCallbackTypes } from '../../lib/EvClient/enums';\nimport { audios } from './audios';\nimport {\n  DepsModules,\n  State,\n  IntegratedSoftphone,\n} from './EvIntegratedSoftphone.interface';\nimport i18n from './i18n';\nimport { EvSoftphoneEvents } from '../../enums';\nimport { raceTimeout } from '../../lib/time';\n\ntype EvIntegratedSoftphoneState = RcModuleState<EvIntegratedSoftphone, State>;\n\n@Module({\n  name: 'EvIntegratedSoftphone',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'EvSessionConfig',\n    'EvSubscription',\n    'EvSettings',\n    'EvClient',\n    'Presence',\n    'Storage',\n    'Modal',\n    'Alert',\n    { dep: 'EvIntegratedSoftphoneOptions', optional: true },\n  ],\n})\nclass EvIntegratedSoftphone\n  extends RcModuleV2<DepsModules, EvIntegratedSoftphoneState>\n  implements IntegratedSoftphone {\n  autoAnswerCheckFn: () => boolean;\n\n  private _audio: HTMLAudioElement;\n\n  private _eventEmitter = new EventEmitter();\n\n  private _answerModalId: string = null;\n\n  private sipRegistering = false;\n\n  constructor({\n    locale,\n    routerInteraction,\n    evSessionConfig,\n    evSubscription,\n    evSettings,\n    evClient,\n    storage,\n    presence,\n    modal,\n    alert,\n    enableCache = true,\n  }) {\n    super({\n      modules: {\n        locale,\n        routerInteraction,\n        evSessionConfig,\n        evSubscription,\n        evSettings,\n        evClient,\n        storage,\n        presence,\n        modal,\n        alert,\n      },\n      enableCache,\n      storageKey: 'EvIntegratedSoftphone',\n    });\n\n    this._initAudio();\n  }\n\n  // @state\n  // dtmfString: string = '';\n\n  @storage\n  @state\n  muteActive: boolean = false;\n\n  @storage\n  @state\n  softphoneRegistered: boolean = false;\n\n  // this is for dialPad click when on call\n  // @action\n  // sipSendDTMF(dtmf: string) {\n  //   this.state.dtmfString += dtmf;\n  //   this._modules.evClient.sipSendDTMF(dtmf);\n  // }\n\n  @action\n  reset() {\n    // this.state.dtmfString = '';\n    this.state.muteActive = false;\n  }\n\n  @action\n  setMuteActive(state: boolean) {\n    this.state.muteActive = state;\n  }\n\n  @action\n  setSoftphoneRegistered(state: boolean) {\n    this.state.softphoneRegistered = state;\n  }\n\n  onInitOnce() {\n    this._modules.evSessionConfig.onTriggerConfig.push(async () => {\n      if (this._modules.evSessionConfig.isIntegrated) {\n        this._bindingIntegratedSoftphone();\n        // when init set register to be false\n        this.setSoftphoneRegistered(false);\n        await this.askAudioPermission();\n      }\n    });\n  }\n\n  sipToggleMute(state: boolean) {\n    this._modules.evClient.sipToggleMute(state);\n  }\n\n  async askAudioPermission() {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: true,\n      });\n    } catch (error) {\n      this._modules.alert.danger({\n        message: EvSoftphoneEvents.AUDIO_STREAM_REJECTED,\n        backdrop: true,\n      });\n\n      throw new Error('Need Audio permission');\n    }\n\n    if (!this.softphoneRegistered) {\n      await this._registerSoftphone();\n    }\n  }\n\n  private _bindingIntegratedSoftphone() {\n    this._modules.evSubscription.subscribe(\n      EvCallbackTypes.SIP_REGISTERED,\n      () => {\n        console.log('!!!!!!!SIP_REGISTERED');\n        this.setSoftphoneRegistered(true);\n        this._eventEmitter.emit(EvSoftphoneEvents.REGISTERED);\n      },\n    );\n\n    this._modules.evSubscription.subscribe(\n      EvCallbackTypes.SIP_UNREGISTERED,\n      () => {\n        console.log('!!!!!!!SIP_UNREGISTERED');\n        this.setSoftphoneRegistered(false);\n      },\n    );\n\n    this._modules.evSubscription.subscribe(\n      EvCallbackTypes.SIP_REGISTRATION_FAILED,\n      () => {\n        console.log('!!!!!!!SIP_REGISTRATION_FAILED');\n        this._modules.alert.danger({\n          message: EvCallbackTypes.SIP_REGISTRATION_FAILED,\n          backdrop: true,\n          ttl: 0,\n        });\n      },\n    );\n\n    this._modules.evSubscription.subscribe(\n      EvCallbackTypes.SIP_RINGING,\n      (ringingCall) => {\n        console.log('!!!!!!!SIP_RINGING');\n        if (this.autoAnswerCheckFn()) {\n          return this._sipAnswer();\n        }\n        this._showRingingModal(ringingCall);\n      },\n    );\n\n    this._modules.evSubscription.subscribe(\n      EvCallbackTypes.SIP_CONNECTED,\n      () => {\n        // console.info('!!!!!!!SIP_CONNECTED');\n        this._modules.evSettings.setOffhook(true);\n        // When connected reset all state\n        this.reset();\n      },\n    );\n\n    this._modules.evSubscription.subscribe(EvCallbackTypes.SIP_ENDED, () => {\n      // console.info('!!!!!!!SIP_ENDED');\n      this._closeRingingModal();\n      this._modules.evSettings.setOffhook(false);\n    });\n\n    this._modules.evSubscription.subscribe(EvCallbackTypes.SIP_MUTE, () => {\n      this.setMuteActive(true);\n    });\n\n    this._modules.evSubscription.subscribe(EvCallbackTypes.SIP_UNMUTE, () => {\n      this.setMuteActive(false);\n    });\n\n    // TODO: that is update session config related feature\n    // triggered by agentSDK if dial destination is changed on softphone registration\n    // pass in autoStartOH, maintainOH and dial destination, needed for reconnect logic\n    // this._modules.evSubscription.subscribe(\n    //   EvCallbackTypes.SIP_DIAL_DEST_CHANGED,\n    //   (data) => {\n    //     console.info('!!!!!!!SIP_DIAL_DEST_CHANGED');\n    //     // AgentSvc.setDialDest(data.dialDest),\n    //     //   SessionSvc.attemptingSoftphoneReconnect &&\n    //     //     (data.autoStartOH\n    //     //       ? AgentSvc.offhookInit().then(\n    //     //           function(result) {\n    //     //             data.maintainOH && (AgentSvc.systemInitOffhook = !1);\n    //     //           },\n    //     //           function(err) {\n    //     //             SessionSvc.showOffhookError(err.detail, data.maintainOH);\n    //     //           },\n    //     //         )\n    //     //       : ($timeout(function() {\n    //     //           'RNA-STATE' === AgentSvc.currentAgentState.baseState &&\n    //     //             AgentSvc.setAgentState('AVAILABLE');\n    //     //         }, 1e3),\n    //     //         (SessionSvc.attemptingSoftphoneReconnect = !1),\n    //     //         (SessionSvc.manualSoftphoneReconnect = !1)));\n    //   },\n    // );\n  }\n\n  private _showRingingModal(ringingCall: any) {\n    this._playAudioLoop('ringtone');\n    const { displayName } = ringingCall.data.request.from;\n    this._answerModalId = this._modules.modal.confirm({\n      title: i18n.getString(\n        'inviteModalTitle',\n        this._modules.locale.currentLocale,\n      ),\n      content: formatMessage(\n        i18n.getString(\n          'inviteModalContent',\n          this._modules.locale.currentLocale,\n        ),\n        {\n          displayName,\n        },\n      ),\n      okText: i18n.getString(\n        'inviteModalAnswer',\n        this._modules.locale.currentLocale,\n      ),\n      cancelText: i18n.getString(\n        'inviteModalReject',\n        this._modules.locale.currentLocale,\n      ),\n      onOK: () => {\n        this._resetRingingModal();\n        this._sipAnswer();\n      },\n      onCancel: () => {\n        // when reject not show init fail\n        this._resetRingingModal();\n        this._modules.presence.showOffHookInitError = false;\n        this._modules.evClient.sipReject();\n        this._eventEmitter.emit(EvSoftphoneEvents.CALL_REJECTED);\n      },\n    });\n  }\n\n  private _closeRingingModal() {\n    // if there is modal there, mean another cancel this call\n    if (this._answerModalId) {\n      this._modules.alert.info({\n        message: EvSoftphoneEvents.CALL_REJECTED,\n        ttl: 0,\n      });\n      this._modules.modal.close(this._answerModalId);\n      this._answerModalId = null;\n      this._stopAudio();\n    }\n  }\n\n  private async _registerSoftphone() {\n    if (!this.sipRegistering) {\n      this.sipRegistering = true;\n      this._modules.evClient.sipInit();\n      this._modules.evClient.sipRegister();\n\n      try {\n        await raceTimeout(\n          new Promise((resolve) =>\n            this._eventEmitter.once(EvSoftphoneEvents.REGISTERED, resolve),\n          ),\n          {\n            timeout: 10 * 1000,\n          },\n        );\n      } catch (error) {\n        this._modules.evSubscription.emit(\n          EvCallbackTypes.SIP_REGISTRATION_FAILED,\n          null,\n        );\n      }\n\n      this.sipRegistering = false;\n    }\n\n    throw new Error('Sip is registering');\n  }\n\n  private _resetRingingModal() {\n    this._stopAudio();\n    this._answerModalId = null;\n  }\n\n  private _sipAnswer() {\n    this._modules.evClient.sipAnswer();\n  }\n\n  private _initAudio() {\n    if (typeof document !== 'undefined' && document.createElement) {\n      this._audio = document.createElement('audio');\n    }\n  }\n\n  private _playAudioLoop(type: keyof typeof audios) {\n    this._audio.loop = true;\n    this._playAudio(type);\n  }\n\n  private _playAudio(type: keyof typeof audios) {\n    this._audio.currentTime = 0;\n    this._audio.src = audios[type];\n    this._audio.play();\n  }\n\n  private _stopAudio() {\n    this._audio.loop = false;\n    this._audio.pause();\n  }\n}\n\nexport { EvIntegratedSoftphone };\n"],"file":"EvIntegratedSoftphone.js"}