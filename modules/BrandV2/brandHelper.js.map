{"version":3,"sources":["modules/BrandV2/brandHelper.ts"],"names":["camelcase","str","pascalCase","Array","isArray","map","x","trim","filter","length","join","replace","$1","slice","toLowerCase","toUpperCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAqC;AAAA,MAAvBC,UAAuB,uEAAV,KAAU;;AAC5D,MAAIC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;AACtBA,IAAAA,GAAG,GAAGA,GAAG,CACNI,GADG,CACC,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAF,EAAP;AAAA,KADD,EAEHC,MAFG,CAEI,UAACF,CAAD;AAAA,aAAOA,CAAC,CAACG,MAAT;AAAA,KAFJ,EAGHC,IAHG,CAGE,GAHF,CAAN;AAID,GALD,MAKO;AACLT,IAAAA,GAAG,GAAGA,GAAG,CAACM,IAAJ,EAAN;AACD;;AAED,SAAON,GAAG,CACPU,OADI,CACI,iBADJ,EACuB,UAACC,EAAD,EAAQ;AAClC;AACA,qBAAUA,EAAE,CAACC,KAAH,CAAS,CAAT,EAAYD,EAAE,CAACH,MAAH,GAAY,CAAxB,CAAV,cAAwCG,EAAE,CAACC,KAAH,CAASD,EAAE,CAACH,MAAH,GAAY,CAArB,CAAxC;AACD,GAJI,EAKJE,OALI,CAKI,aALJ,EAKmB,UAACC,EAAD,EAAQ;AAC9B;AACA,qBAAUA,EAAE,CAACC,KAAH,CAAS,CAAT,EAAYD,EAAE,CAACH,MAAH,GAAY,CAAxB,CAAV,cAAwCG,EAAE,CAACC,KAAH,CAASD,EAAE,CAACH,MAAH,GAAY,CAArB,CAAxC;AACD,GARI,EASJE,OATI,CASI,QATJ,EASc,GATd,EASmB;AATnB,GAUJG,WAVI,GAWJH,OAXI,CAWI,QAXJ,EAWc,UAACC,EAAD,EAAQ;AACzB,WAAOA,EAAE,CAACG,WAAH,EAAP,CADyB,CACA;AAC1B,GAbI,EAcJJ,OAdI,CAcI,WAdJ,EAciB,UAACC,EAAD;AAAA,WAAQA,EAAE,CAACG,WAAH,EAAR;AAAA,GAdjB,EAeJJ,OAfI,CAeI,KAfJ,EAeW,EAfX,EAee;AAff,GAgBJA,OAhBI,CAgBI,MAhBJ,EAgBY,UAACC,EAAD,EAAQ;AACvB,WAAOV,UAAU,GAAGU,EAAE,CAACG,WAAH,EAAH,GAAsBH,EAAE,CAACE,WAAH,EAAvC,CADuB,CACkC;AAC1D,GAlBI,CAAP;AAmBD,CA7BM","sourcesContent":["export const camelcase = (str: string, pascalCase = false) => {\n  if (Array.isArray(str)) {\n    str = str\n      .map((x) => x.trim())\n      .filter((x) => x.length)\n      .join(' ');\n  } else {\n    str = str.trim();\n  }\n\n  return str\n    .replace(/[A-Z]{2,}[a-z]/g, ($1) => {\n      // if there is 2 or more upper chars and next char is lower, preserve the penult\n      return `${$1.slice(0, $1.length - 2)}-${$1.slice($1.length - 2)}`;\n    })\n    .replace(/[a-z][A-Z]/g, ($1) => {\n      // if the prefix is lower and current is upper, preserve it\n      return `${$1.slice(0, $1.length - 1)}-${$1.slice($1.length - 1)}`;\n    })\n    .replace(/[_-]+/g, ' ') // replace '-_' with space\n    .toLowerCase()\n    .replace(/\\s(.)/g, ($1) => {\n      return $1.toUpperCase(); // use camelcase for every split string\n    })\n    .replace(/\\d+[a-z]/g, ($1) => $1.toUpperCase())\n    .replace(/\\s/g, '') // combine\n    .replace(/^(.)/, ($1) => {\n      return pascalCase ? $1.toUpperCase() : $1.toLowerCase(); // option for first char is upper or not\n    });\n};\n"],"file":"brandHelper.js"}