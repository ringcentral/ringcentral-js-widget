{"version":3,"sources":["modules/RcVideoV2/RcVideo.ts"],"names":["RcVideo","name","deps","dep","optional","that","status","videoStatus","creating","analytics","target","getTrackTarget","trackEvents","clickMeetingSchedulePage","router","_deps","locale","currentLocale","preferences","isInstantMeeting","settingLocks","personalMeeting","initialVideoSetting","transformedPreferences","transformedSettingLocks","currentUser","defaultTopic","extensionName","brandName","extensionId","accountId","delegator","loginUser","enableCache","storageKey","_showSaveAsDefault","_isInstantMeeting","_enableWaitingRoom","_enablePersonalMeeting","_enableScheduleOnBehalf","_enableHostCountryDialinNumbers","_enableReloadAfterSchedule","_enableInvitationApi","_currentLocale","_createMeetingPromise","rcVideoOptions","enableInvitationApi","showSaveAsDefault","enableWaitingRoom","enablePersonalMeeting","enableScheduleOnBehalf","enableHostCountryDialinNumbers","enableReloadAfterSchedule","DEFAULT_LOCALE","settings","personalVideo","savedDefaultSetting","info","patch","meeting","videoConfiguration","isRCV","ready","isPreferencesChanged","delegatorList","delegators","isChanged","hasSettingsChanged","_initMeeting","_initDelegators","updateDelegator","onInit","usePersonalMeetingId","_initMeetingSettings","_updateDelegator","userExtensionId","length","user","Number","_updateVideoStatus","initializing","_initPersonalMeeting","_initPreferences","initialized","_getPreferences","password_instant","_updatePreference","_updateMeetingSettingLocks","console","log","client","service","platform","get","meetingResult","json","_savePersonalMeeting","error","_resetPersonalMeeting","_errorHandle","result","processedDelegators","unshift","_updateDelegatorList","allowJoinBeforeHost","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","muteAudio","muteVideo","isMeetingSecret","notShowAgain","waitingRoomMode","updateInfo","_saved","_saveDefaultVideoSetting","password","isSecret","isAlertSuccess","meetingDetail","saveAsDefault","saveAsDefaultSetting","RCV_WAITTING_ROOM_API_KEYS","post","newMeeting","updateMeetingSettings","_getDialinNumbers","dialInNumber","getExtensionInfo","extensionInfo","getMeetingInvitation","hostName","meetingName","meetingId","id","meetingUrl","joinUri","participantCode","mainPhoneNumber","meetingPassword","dialInPassword","meetingPasswordPSTN","premiumNumbers","invitationInfo","savePreferencesChanges","setTimeout","alert","success","message","meetingStatus","scheduledSuccess","created","_updateHasSettingsChanged","meetingResponse","idle","isScheduling","createMeetingDirectly","createMeeting","expiresIn","type","RcVideoTypes","invitationRequest","apiResponse","warn","phoneNumbers","Array","isArray","countryDialinNumbers","obj","country","isoCode","defaultPhoneNumber","phoneNumber","RCV_PREFERENCES_IDS","res","list","forEach","value","readOnly","account","extension","_updateMeetingPreferences","preferenceId","send","method","url","body","isOverwrite","preferencesPayload","dirtyPreferences","Object","entries","filter","kvPairs","newValue","oldValue","isLocked","Promise","all","map","_saveSinglePreference","shortId","updating","updatedSuccess","updated","personalVideoSetting","defaultVideoSetting","processedMeeting","_updateMeetingSettings","_comparePreferences","_updateIsPreferencesChanged","errors","MeetingErrors","warning","response","clone","errorCode","permissionName","danger","insufficientPermissions","payload","availabilityMonitor","checkIfHAError","internalError","accountInfo","brand","processedSettings","isMeetingPasswordValid","settingLock","savedSetting","savedDefaultVideoSetting","startTime","topic","Date","ASSISTED_USERS_MYSELF","isLoginUser","RcModuleV2","storage","state","action","proxify","background"],"mappings":"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","sourcesContent":["import {\n  state,\n  action,\n  computed,\n  RcModuleV2,\n  storage,\n  track,\n} from '@ringcentral-integration/core';\nimport { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { filter, find, omit } from 'ramda';\nimport { DEFAULT_LOCALE } from '@ringcentral-integration/i18n';\nimport { Module } from '../../lib/di';\nimport { Deps, RcvDelegator } from './RcVideo.interface';\nimport background from '../../lib/background';\nimport { proxify } from '../../lib/proxy/proxify';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport { videoStatus } from './videoStatus';\nimport { MeetingErrors } from '../Meeting';\nimport { ASSISTED_USERS_MYSELF, RcvWaitingRoomModeProps } from './constants';\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\nimport {\n  getDefaultVideoSettings,\n  validatePasswordSettings,\n  generateRandomPassword,\n  getTopic,\n  pruneMeetingObject,\n  RcVideoTypes,\n  transformPreferences,\n  reversePreferences,\n  comparePreferences,\n  transformSettingLocks,\n  getLockedPreferences,\n  RCV_PREFERENCES_IDS,\n  RCV_WAITTING_ROOM_API_KEYS,\n  patchWaitingRoomRelated,\n  assignObject,\n  formatPremiumNumbers,\n  formatMainPhoneNumber,\n} from './videoHelper';\nimport {\n  RcVideoAPI,\n  RcVMeetingModel,\n  RcVSettingLocks,\n  RcVPreferencesGET,\n  RcVSettingLocksGET,\n  RcVPreferences,\n  RcVDialInNumberGET,\n  RcVPreferencesAPIResult,\n  RcVPreferenceDataItem,\n  RcVDialInNumberObj,\n  RcvInvitationInfo,\n  RcvInvitationRequest,\n} from '../../interfaces/Rcv.model';\nimport { IMeeting } from '../../interfaces/Meeting.interface';\nimport { trackEvents } from '../Analytics';\n\n@Module({\n  name: 'RcVideo',\n  deps: [\n    'Alert',\n    'Client',\n    'Brand',\n    'Storage',\n    'AccountInfo',\n    'ExtensionInfo',\n    'VideoConfiguration',\n    'Locale',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'RcVideoOptions', optional: true },\n  ],\n})\nexport class RcVideo extends RcModuleV2<Deps> implements IMeeting {\n  protected _showSaveAsDefault: boolean;\n  protected _isInstantMeeting: boolean;\n  protected _enableWaitingRoom: boolean;\n  protected _enablePersonalMeeting: boolean;\n  protected _enableScheduleOnBehalf: boolean;\n  protected _enableHostCountryDialinNumbers: boolean;\n  protected _enableReloadAfterSchedule: boolean;\n  protected _enableInvitationApi: boolean;\n  protected _currentLocale: string;\n  private _createMeetingPromise: any = null;\n\n  constructor(deps: Deps) {\n    super({\n      enableCache: true,\n      storageKey: 'RcVideo',\n      deps,\n    });\n\n    this._enableInvitationApi =\n      this._deps.rcVideoOptions?.enableInvitationApi ?? false;\n    this._showSaveAsDefault =\n      this._deps.rcVideoOptions?.showSaveAsDefault ?? false;\n    this._isInstantMeeting =\n      this._deps.rcVideoOptions?.isInstantMeeting ?? false;\n    this._enableWaitingRoom =\n      this._deps.rcVideoOptions?.enableWaitingRoom ?? false;\n    this._enablePersonalMeeting =\n      this._deps.rcVideoOptions?.enablePersonalMeeting ?? false;\n    this._enableScheduleOnBehalf =\n      this._deps.rcVideoOptions?.enableScheduleOnBehalf ?? false;\n    this._enableHostCountryDialinNumbers =\n      this._deps.rcVideoOptions?.enableHostCountryDialinNumbers ?? false;\n    this._enableReloadAfterSchedule =\n      this._deps.rcVideoOptions?.enableReloadAfterSchedule ?? true;\n    this._currentLocale = this._deps.locale?.currentLocale ?? DEFAULT_LOCALE;\n  }\n\n  get enableScheduleOnBehalf() {\n    return this._enableScheduleOnBehalf;\n  }\n\n  @storage\n  @state\n  personalVideo: Partial<RcVideoAPI> = null;\n\n  // when migrate to rcv v2, computed defaultVideoSetting has conflict with storage key 'defaultVideoSetting'\n  // rcv save as default toggle has not opened yet, so change the key into 'savedDefaultSetting'\n  @storage\n  @state\n  savedDefaultSetting: Partial<RcVMeetingModel> = {};\n\n  @state\n  meeting: Partial<RcVMeetingModel> = null;\n\n  @state\n  videoStatus: ObjectMapValue<typeof videoStatus> = videoStatus.idle;\n\n  @state\n  preferences: RcVPreferencesGET = {};\n\n  @state\n  isPreferencesChanged: boolean = false;\n\n  @state\n  settingLocks: RcVSettingLocksGET = {};\n\n  @state\n  delegator: RcvDelegator = null;\n\n  @state\n  delegators: RcvDelegator[] = [];\n\n  @state\n  hasSettingsChanged: boolean = false;\n\n  @action\n  protected _savePersonalMeeting(settings: Partial<RcVideoAPI>) {\n    this.personalVideo = {\n      ...this.personalVideo,\n      ...settings,\n    };\n  }\n\n  @action\n  protected _resetPersonalMeeting() {\n    this.personalVideo = {};\n  }\n\n  @action\n  protected _saveDefaultVideoSetting(settings: Partial<RcVMeetingModel>) {\n    this.savedDefaultSetting = {\n      ...this.savedDefaultSetting,\n      ...settings,\n    };\n  }\n\n  @action\n  protected _updateMeetingSettings(\n    info: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    this.meeting = patch\n      ? {\n          ...this.meeting,\n          ...info,\n        }\n      : (info as RcVMeetingModel);\n  }\n\n  _shouldInit() {\n    return super._shouldInit() && this._deps.videoConfiguration.isRCV;\n  }\n\n  _shouldReset() {\n    return (\n      super._shouldReset() ||\n      (this.ready && !this._deps.videoConfiguration.isRCV)\n    );\n  }\n\n  @track((that: RcVideo, status: string) => {\n    if (status !== videoStatus.creating) return;\n    return (analytics) => {\n      const target = analytics.getTrackTarget();\n      if (target) {\n        return [\n          trackEvents.clickMeetingSchedulePage,\n          { router: target.router },\n        ];\n      }\n    };\n  })\n  @action\n  protected _updateVideoStatus(status: ObjectMapValue<typeof videoStatus>) {\n    this.videoStatus = status;\n  }\n\n  @action\n  protected _updateMeetingPreferences(preferences: RcVPreferencesGET) {\n    this.preferences = preferences;\n  }\n\n  @action\n  protected _updateIsPreferencesChanged(isPreferencesChanged: boolean) {\n    this.isPreferencesChanged = isPreferencesChanged;\n  }\n\n  @action\n  protected _updateMeetingSettingLocks(settingLocks: RcVSettingLocksGET) {\n    this.settingLocks = settingLocks;\n  }\n\n  @action\n  protected _updateDelegator(delegator: RcvDelegator) {\n    this.delegator = delegator;\n  }\n\n  @action\n  protected _updateDelegatorList(delegatorList: RcvDelegator[]) {\n    this.delegators = delegatorList;\n  }\n\n  @action\n  protected _updateHasSettingsChanged(isChanged: boolean) {\n    this.hasSettingsChanged = isChanged;\n  }\n\n  @proxify\n  async onInit() {\n    await this._initMeeting();\n    if (this._enableScheduleOnBehalf) {\n      await this._initDelegators();\n      this.updateDelegator(this.loginUser);\n    }\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    await this.onInit();\n  }\n\n  @proxify\n  async reload() {\n    await this.onInit();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this._initMeetingSettings(usePersonalMeetingId);\n  }\n\n  @proxify\n  async updateDelegator(delegator: RcvDelegator) {\n    this._updateDelegator(delegator);\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string) {\n    if (!userExtensionId || !this.delegators || this.delegators.length === 0) {\n      return;\n    }\n\n    const delegator: RcvDelegator = find(\n      (user: RcvDelegator) => user.extensionId === userExtensionId,\n      this.delegators,\n    );\n\n    if (!delegator) {\n      return;\n    }\n\n    this.updateDelegator(delegator);\n\n    await this._initMeeting(Number(delegator.extensionId));\n  }\n\n  protected async _initMeeting(extensionId = this.extensionId) {\n    this._updateVideoStatus(videoStatus.initializing);\n\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting(this.accountId, extensionId);\n    }\n    await this._initPreferences(this.accountId, extensionId);\n\n    this._initMeetingSettings(false);\n\n    this._updateVideoStatus(videoStatus.initialized);\n  }\n\n  async _initPreferences(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ) {\n    try {\n      const { preferences, settingLocks } = await this._getPreferences(\n        accountId,\n        extensionId,\n      );\n      // TODO Remove the next line after rcv implement ui to manage password_instant\n      preferences.password_instant = false;\n\n      this._updatePreference(preferences);\n      this._updateMeetingSettingLocks(settingLocks);\n    } catch (errors) {\n      console.log('preference error:', errors);\n      // this._errorHandle(errors);\n    }\n  }\n\n  async _initPersonalMeeting(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ) {\n    try {\n      const meetingResult = await this._deps.client.service\n        .platform()\n        .get('/rcvideo/v1/bridges', {\n          default: true,\n          accountId,\n          extensionId,\n        });\n      const meeting = (await meetingResult.json()) as RcVideoAPI;\n      this._savePersonalMeeting(meeting);\n    } catch (errors) {\n      console.error('fetch personal meeting error:', errors);\n      this._resetPersonalMeeting();\n      this._errorHandle(errors);\n    }\n  }\n\n  protected async _initDelegators() {\n    try {\n      const result = await this._deps.client.service\n        .platform()\n        .get('/rcvideo/v1/accounts/~/extensions/~/delegators');\n      const delegators = (await result.json()) as RcvDelegator[];\n      // to make sure it will equal to v1\n      const processedDelegators = delegators;\n      if (processedDelegators.length) {\n        processedDelegators.unshift(this.loginUser);\n      }\n      this._updateDelegatorList(processedDelegators);\n    } catch (errors) {\n      this._errorHandle(errors);\n    }\n  }\n\n  saveAsDefaultSetting(meeting: RcVMeetingModel) {\n    const {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      notShowAgain,\n      waitingRoomMode,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHost: boolean;\n      isOnlyAuthUserJoin: boolean;\n      isOnlyCoworkersJoin: boolean;\n      allowScreenSharing: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      isMeetingSecret: boolean;\n      waitingRoomMode: RcvWaitingRoomModeProps;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      waitingRoomMode,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n\n    this._saveDefaultVideoSetting(updateInfo);\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  @proxify\n  async createMeetingDirectly(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this._updateVideoStatus(videoStatus.creating);\n\n      let meetingDetail: RcVideoAPI = pruneMeetingObject(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      if (!this.enableWaitingRoom) {\n        meetingDetail = omit([RCV_WAITTING_ROOM_API_KEYS], meetingDetail);\n      }\n\n      const result = await this._deps.client.service\n        .platform()\n        .post('/rcvideo/v1/bridges', meetingDetail);\n\n      const newMeeting = await result.json();\n\n      this.updateMeetingSettings({\n        ...meeting,\n        saveAsDefault: false,\n      });\n\n      // After Create\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        meetingName: newMeeting.name,\n        meetingId: newMeeting.id,\n        meetingUrl: newMeeting.joinUri,\n        participantCode: newMeeting.participantCode,\n        mainPhoneNumber: formatMainPhoneNumber(dialInNumber),\n        password: newMeeting.meetingPassword,\n        dialInPassword: newMeeting.meetingPasswordPSTN,\n        premiumNumbers: formatPremiumNumbers(dialInNumber),\n      });\n\n      // sync preferences changes to rcv backend\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting);\n      }\n      // this will also fetch preference from rcv backend\n      if (this._enableReloadAfterSchedule) {\n        await this._initMeeting(Number(this.currentUser.extensionId));\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      this._updateVideoStatus(videoStatus.created);\n      this._updateHasSettingsChanged(false);\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      console.log('failed to create rcv:', errors);\n      this._updateVideoStatus(videoStatus.idle);\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  async createMeeting(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this.isScheduling) return this._createMeetingPromise;\n\n    this._createMeetingPromise = this.createMeetingDirectly(meeting, {\n      isAlertSuccess,\n    });\n    const result = await this._createMeetingPromise;\n    this._createMeetingPromise = null;\n    return result;\n  }\n\n  async startMeeting(\n    meeting: RcVMeetingModel,\n    isAlertSuccess: boolean = true,\n  ): Promise<any> {\n    // When user click on button \"start\", client create bridge type=0, but doesn't send time-to-life for this bridge. Backend has default ttl = 24 hours.\n    return this.createMeeting(\n      {\n        ...meeting,\n        expiresIn: null,\n        type: RcVideoTypes.meeting,\n      },\n      { isAlertSuccess },\n    );\n  }\n\n  @proxify\n  async getMeetingInvitation(\n    invitationRequest: RcvInvitationRequest,\n  ): Promise<RcvInvitationInfo> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n\n    try {\n      const apiResponse = await this._deps.client.service\n        .platform()\n        .post('/rcvideo/v1/invitations/render', invitationRequest);\n      return await apiResponse.json();\n    } catch (ex) {\n      console.warn('failed to get invitation', ex);\n      return null;\n    }\n  }\n\n  @proxify\n  protected async _getDialinNumbers(): Promise<string | RcVDialInNumberObj[]> {\n    const result = await this._deps.client.service\n      .platform()\n      .get('/rcvideo/v1/dial-in-numbers');\n    const { phoneNumbers } = (await result.json()) as RcVDialInNumberGET;\n    if (Array.isArray(phoneNumbers)) {\n      if (this._enableHostCountryDialinNumbers) {\n        const countryDialinNumbers = filter(\n          (obj) => obj?.country?.isoCode === this.country.isoCode,\n          phoneNumbers,\n        );\n        if (countryDialinNumbers.length > 0) {\n          return countryDialinNumbers;\n        }\n      }\n\n      const defaultPhoneNumber = find((obj) => obj.default, phoneNumbers);\n      if (defaultPhoneNumber) {\n        return defaultPhoneNumber.phoneNumber;\n      }\n    }\n    return [];\n  }\n\n  protected async _getPreferences(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ): Promise<RcVPreferencesAPIResult> {\n    const res = await this._deps.client.service\n      .platform()\n      .get(\n        `/rcvideo/v1/account/${accountId}/extension/${extensionId}/preferences`,\n        {\n          id: RCV_PREFERENCES_IDS,\n        },\n      );\n    const list: Array<RcVPreferenceDataItem> = await res.json();\n    const preferences: RcVPreferencesGET = {};\n    const settingLocks: RcVSettingLocksGET = {};\n\n    list.forEach(({ id, value, readOnly }) => {\n      assignObject(preferences, value, id);\n      assignObject(settingLocks, readOnly, id);\n    });\n    return { preferences, settingLocks };\n  }\n\n  @proxify\n  async getExtensionInfo(extensionId: string) {\n    if (Number(extensionId) === this.extensionId) {\n      return this._deps.extensionInfo.info;\n    }\n    return this._deps.client.account().extension(extensionId).get();\n  }\n\n  protected _updatePreference(preferences: Partial<RcVPreferencesGET>) {\n    this._updateMeetingPreferences(preferences);\n  }\n\n  protected async _saveSinglePreference(\n    preferenceId: keyof RcVPreferencesGET,\n    value: boolean,\n  ): Promise<void> {\n    return this._deps.client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/account/~/extension/~/preferences/${preferenceId}`,\n      body: { value },\n    });\n  }\n\n  /**\n   * Determined the different between client and server, then save them to the server.\n   * @param preferences preference fileds in meeting object\n   * @param isOverwrite if true, dispatch updateMeetingPreferences on success\n   */\n  async savePreferencesChanges(\n    preferences: RcVPreferences,\n    isOverwrite = false,\n  ): Promise<void> {\n    const preferencesPayload = reversePreferences(\n      preferences,\n      this._isInstantMeeting,\n    );\n    type PreferenceEntries = [keyof RcVPreferencesGET, boolean];\n    const dirtyPreferences = Object.entries(preferencesPayload).filter(\n      (kvPairs): kvPairs is PreferenceEntries => {\n        const [preferenceId, newValue] = kvPairs as PreferenceEntries;\n        const oldValue = this.preferences[preferenceId];\n        const isLocked = this.settingLocks[preferenceId];\n        // hack for watingRoom, it will change locked option\n        return newValue !== oldValue && !isLocked;\n      },\n    );\n    try {\n      await Promise.all(\n        dirtyPreferences.map(([preferenceId, newValue]: PreferenceEntries) => {\n          return this._saveSinglePreference(preferenceId, newValue);\n        }),\n      );\n      if (isOverwrite) {\n        this._updatePreference(preferencesPayload);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async getMeeting(\n    meetingId: string,\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ): Promise<RcVideoAPI> {\n    const result = await this._deps.client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', {\n        shortId: meetingId,\n        accountId,\n        extensionId,\n      });\n    const meeting = (await result.json()) as RcVideoAPI;\n    return meeting;\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this._updateVideoStatus(videoStatus.updating);\n\n      let meetingDetail: RcVideoAPI = pruneMeetingObject(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      if (!this.enableWaitingRoom) {\n        meetingDetail = omit([RCV_WAITTING_ROOM_API_KEYS], meetingDetail);\n      }\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n      const meetingResult = await this._deps.client.service.platform().send({\n        method: 'PATCH',\n        url: `/rcvideo/v1/bridges/${meeting.id}`,\n        body: meetingDetail,\n      });\n      const newMeeting = await meetingResult.json();\n\n      // After Update\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        meetingName: newMeeting.name,\n        meetingId: newMeeting.id,\n        meetingUrl: newMeeting.joinUri,\n        participantCode: newMeeting.participantCode,\n        mainPhoneNumber: formatMainPhoneNumber(dialInNumber),\n        password: newMeeting.meetingPassword,\n        dialInPassword: newMeeting.meetingPasswordPSTN,\n        premiumNumbers: formatPremiumNumbers(dialInNumber),\n      });\n\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting, true);\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n\n      this._updateVideoStatus(videoStatus.updated);\n      this._updateHasSettingsChanged(false);\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this._savePersonalMeeting(newMeeting);\n      }\n      return meetingResponse;\n    } catch (errors) {\n      this._updateVideoStatus(videoStatus.idle);\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  protected _initMeetingSettings(usePersonalMeetingId: boolean) {\n    if (usePersonalMeetingId) {\n      this.updateMeetingSettings({\n        ...this.personalVideoSetting,\n      });\n    } else {\n      this.updateMeetingSettings({\n        ...this.defaultVideoSetting,\n      });\n    }\n  }\n\n  @proxify\n  async updateMeetingSettings(\n    meeting: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    let processedMeeting = meeting;\n    if (this.enableWaitingRoom) {\n      processedMeeting = {\n        ...meeting,\n        ...patchWaitingRoomRelated(\n          {\n            ...(this.meeting as RcVMeetingModel),\n            ...meeting,\n          },\n          this.transformedPreferences,\n          true,\n        ),\n      };\n    }\n    this._updateMeetingSettings(processedMeeting, patch);\n    this._comparePreferences();\n  }\n\n  protected _comparePreferences() {\n    this._updateIsPreferencesChanged(\n      comparePreferences(\n        this.transformedPreferences,\n        this.meeting as RcVMeetingModel,\n      ),\n    );\n  }\n\n  updateHasSettingsChanged(isChanged: boolean) {\n    this._updateHasSettingsChanged(isChanged);\n  }\n\n  protected async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._deps.alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._deps.alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._deps.availabilityMonitor ||\n        !(await this._deps.availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._deps.alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._deps.alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  get personalMeeting(): Partial<RcVideoAPI> {\n    return this._enablePersonalMeeting ? this.personalVideo : null;\n  }\n\n  get savedDefaultVideoSetting(): Partial<RcVMeetingModel> {\n    return this._showSaveAsDefault ? this.savedDefaultSetting : null;\n  }\n\n  get country() {\n    return this._deps.extensionInfo.country;\n  }\n\n  get extensionName(): string {\n    return this._deps.extensionInfo.info?.name;\n  }\n\n  get extensionId(): number {\n    return this._deps.extensionInfo.info.id;\n  }\n\n  get accountId(): number {\n    return this._deps.accountInfo.id;\n  }\n\n  get brandName(): string {\n    return this._deps.brand.name;\n  }\n\n  get isInitializing(): boolean {\n    return this.videoStatus === videoStatus.initializing;\n  }\n\n  get isScheduling(): boolean {\n    return this.videoStatus === videoStatus.creating;\n  }\n\n  get showSaveAsDefault(): boolean {\n    return this._showSaveAsDefault;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get enableWaitingRoom(): boolean {\n    return this._enableWaitingRoom;\n  }\n\n  get isInstantMeeting(): boolean {\n    return this._isInstantMeeting;\n  }\n\n  @computed((that: RcVideo) => [that._deps.locale.currentLocale])\n  get currentLocale() {\n    return this._deps.locale.currentLocale || DEFAULT_LOCALE;\n  }\n\n  @computed(({ preferences, isInstantMeeting }: RcVideo) => [\n    preferences,\n    isInstantMeeting,\n  ])\n  get transformedPreferences(): RcVPreferences {\n    return transformPreferences(this.preferences, this.isInstantMeeting);\n  }\n\n  @computed(({ settingLocks, isInstantMeeting }: RcVideo) => [\n    settingLocks,\n    isInstantMeeting,\n  ])\n  get transformedSettingLocks(): RcVSettingLocks {\n    return transformSettingLocks(this.settingLocks, this.isInstantMeeting);\n  }\n\n  @computed(\n    ({\n      personalMeeting,\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    }: RcVideo) => [\n      personalMeeting,\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    ],\n  )\n  get personalVideoSetting() {\n    if (!this.personalMeeting) {\n      return null;\n    }\n    const processedSettings = {\n      ...this.initialVideoSetting,\n      ...this.personalMeeting,\n      ...getLockedPreferences(\n        this.transformedSettingLocks,\n        this.transformedPreferences,\n      ),\n      meetingPassword:\n        this.personalMeeting.meetingPassword || generateRandomPassword(10),\n      isMeetingPasswordValid: true, // assume personal meeting password is valid\n      id: this.personalMeeting.id,\n      usePersonalMeetingId: true,\n      settingLock: {\n        ...this.transformedSettingLocks,\n      },\n    } as RcVMeetingModel;\n    if (this.enableWaitingRoom) {\n      return {\n        ...processedSettings,\n        ...patchWaitingRoomRelated(\n          processedSettings,\n          this.transformedPreferences,\n        ),\n      };\n    }\n    return processedSettings;\n  }\n\n  @computed(\n    ({\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    }: RcVideo) => [\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    ],\n  )\n  get defaultVideoSetting(): RcVMeetingModel {\n    const savedSetting = this._showSaveAsDefault\n      ? this.savedDefaultVideoSetting\n      : null;\n    return {\n      ...this.initialVideoSetting,\n      ...savedSetting,\n      ...this.transformedPreferences,\n      meetingPassword: generateRandomPassword(10),\n      isMeetingPasswordValid: true, // generated random password is valid\n      id: null,\n      usePersonalMeetingId: false,\n      settingLock: {\n        ...this.transformedSettingLocks,\n      },\n    };\n  }\n\n  @computed(({ currentUser, defaultTopic }: RcVideo) => [\n    currentUser,\n    defaultTopic,\n  ])\n  get initialVideoSetting(): RcVMeetingModel {\n    const startTime = getInitializedStartTime();\n    return getDefaultVideoSettings({\n      topic: this.defaultTopic,\n      startTime: new Date(startTime),\n      accountId: this.currentUser.accountId,\n      extensionId: this.currentUser.extensionId,\n    });\n  }\n\n  @computed(\n    ({ currentUser, extensionName, brandName, currentLocale }: RcVideo) => [\n      currentUser,\n      extensionName,\n      brandName,\n      currentLocale,\n    ],\n  )\n  get defaultTopic(): string {\n    let extensionName = this.extensionName;\n    if (this.currentUser?.extensionId !== `${this.extensionId}`) {\n      extensionName = this.currentUser?.name;\n    }\n    return getTopic(extensionName, this.brandName, this.currentLocale);\n  }\n\n  @computed(({ extensionId, accountId }: RcVideo) => [extensionId, accountId])\n  get loginUser(): RcvDelegator {\n    return {\n      name: ASSISTED_USERS_MYSELF,\n      id: `${this.extensionId}`,\n      extensionId: `${this.extensionId}`,\n      accountId: `${this.accountId}`,\n      isLoginUser: true,\n    };\n  }\n\n  @computed(({ delegator, loginUser }: RcVideo) => [delegator, loginUser])\n  get currentUser(): RcvDelegator {\n    return this.delegator || this.loginUser;\n  }\n}\n"],"file":"RcVideo.js"}