{"version":3,"sources":["modules/CallHistory/index.js"],"names":["CallHistory","deps","dep","optional","accountInfo","callLog","callMonitor","locale","storage","activityMatcher","contactMatcher","tabManager","options","_accountInfo","ensureExist","_callLog","_storage","_activityMatcher","_contactMatcher","_callMonitor","_tabManager","_locale","_debouncedSearch","callsSearch","_reducer","actionTypes","_endedCallsStorageKey","registerReducer","key","reducer","endedCalls","addQuerySource","getQueriesFn","uniqueNumbers","readyCheckFn","ready","sessionIds","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","_processCallHistory","pending","_lastProcessedNumbers","active","_lastProcessedIds","monitorCalls","calls","callLogCalls","_lastProcessedMonitorCalls","filter","call","find","currentCall","sessionId","currentCalls","_lastProcessedCalls","ids","forEach","recentlyEndedCalls","_shouldTriggerContactMatch","triggerMatch","_shouldTriggerActivityMatch","_getEndedCalls","length","_addEndedCalls","shouldRemove","_shouldRemoveEndedCalls","_removeEndedCalls","dispatch","type","init","initSuccess","reset","resetSuccess","map","result","addEndedCalls","timestamp","Date","now","sync","removeEndedCalls","clickToSMS","clickToCall","input","updateSearchInput","args","apply","searchInput","data","effectSearchStr","toLowerCase","trim","phoneNumber","matches","matchesMatched","some","entities","id","name","indexOf","phone","sort","sortByStartTime","filterSuccess","state","status","moduleStatuses","filterCalls","getItem","RcModule","proxify","selector","countryCode","callFrom","from","callTo","to","normalizedCalls","dataMapping","callMatched","contactMapping","activityMapping","fromNumber","extensionNumber","toNumber","fromMatches","toMatches","activityMatches","matched","toNumberEntity","filteredEndedCalls","newCalls","output","numberMap","addIfNotExist","number","push","addNumbersFromCall","concat"],"mappings":"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","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport {\n  sortByStartTime,\n  getPhoneNumberMatches,\n} from '../../lib/callLogHelpers';\nimport actionTypes from './actionTypes';\nimport getCallHistoryReducer, {\n  getEndedCallsReducer,\n} from './getCallHistoryReducer';\nimport ensureExist from '../../lib/ensureExist';\nimport normalizeNumber from '../../lib/normalizeNumber';\nimport proxify from '../../lib/proxy/proxify';\nimport debounce from '../../lib/debounce';\nimport { selector } from '../../lib/selector';\n\n// const DEBOUNDCE_THRESHOLD = 800;\n// const DEBOUNDCE_IMMEDIATE = false;\n\n/**\n * @class\n * @description Call history managing module\n */\n@Module({\n  deps: [\n    'AccountInfo',\n    'CallLog',\n    'CallMonitor',\n    'Locale',\n    { dep: 'Storage', optional: true },\n    { dep: 'ActivityMatcher', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'CallHistoryOptions', optional: true },\n    { dep: 'TabManager', optional: true },\n  ],\n})\nexport default class CallHistory extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {AccountInfo} params.accountInfo - accountInfo module instance\n   * @param {CallLog} params.callLog - callLog module instance\n   * @param {CallMonitor} params.callMonitor - callMonitor module instance\n   * @param {ActivityMatcher} params.activityMatcher - activityMatcher module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance\n   */\n  constructor({\n    accountInfo,\n    callLog,\n    callMonitor,\n    locale,\n    storage,\n    activityMatcher,\n    contactMatcher,\n    tabManager,\n    // debThreshold,\n    // debImmediate,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._accountInfo = this::ensureExist(accountInfo, 'accountInfo');\n    this._callLog = this::ensureExist(callLog, 'callLog');\n    this._storage = storage;\n    this._activityMatcher = activityMatcher;\n    this._contactMatcher = contactMatcher;\n    this._callMonitor = callMonitor;\n    this._tabManager = tabManager;\n    this._locale = locale;\n    this._debouncedSearch = debounce(this.callsSearch, 230, false);\n\n    if (this._storage) {\n      this._reducer = getCallHistoryReducer(this.actionTypes);\n      this._endedCallsStorageKey = 'callHistoryEndedCalls';\n      this._storage.registerReducer({\n        key: this._endedCallsStorageKey,\n        reducer: getEndedCallsReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getCallHistoryReducer(this.actionTypes, {\n        endedCalls: getEndedCallsReducer(this.actionTypes),\n      });\n    }\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: () => this.uniqueNumbers,\n        readyCheckFn: () =>\n          (!this._callMonitor || this._callMonitor.ready) &&\n          (!this._tabManager || this._tabManager.ready) &&\n          this._callLog.ready &&\n          this._accountInfo.ready,\n      });\n    }\n    if (this._activityMatcher) {\n      this._activityMatcher.addQuerySource({\n        getQueriesFn: () => this.sessionIds,\n        readyCheckFn: () =>\n          (!this._callMonitor || this._callMonitor.ready) &&\n          (!this._tabManager || this._tabManager.ready) &&\n          this._callLog.ready,\n      });\n    }\n  }\n\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    } else if (this.ready) {\n      this._processCallHistory();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._callLog.ready &&\n      (!this._callMonitor || this._callMonitor.ready) &&\n      this._accountInfo.ready &&\n      (!this._contactMatcher || this._contactMatcher.ready) &&\n      (!this._activityMatcher || this._activityMatcher.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._callLog.ready ||\n        (this._callMonitor && !this._callMonitor.ready) ||\n        !this._accountInfo.ready ||\n        (this._contactMatcher && !this._contactMatcher.ready) ||\n        (this._tabManager && !this._tabManager.ready) ||\n        (this._activityMatcher && !this._activityMatcher.ready)) &&\n      this.ready\n    );\n  }\n\n  _shouldTriggerContactMatch(uniqueNumbers) {\n    if (\n      this._lastProcessedNumbers !== uniqueNumbers &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._lastProcessedNumbers = uniqueNumbers;\n      if (this._contactMatcher && this._contactMatcher.ready) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _shouldTriggerActivityMatch(sessionIds) {\n    if (\n      this._lastProcessedIds !== sessionIds &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._lastProcessedIds = sessionIds;\n      if (this._activityMatcher && this._activityMatcher.ready) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _getEndedCalls() {\n    if (this._callMonitor) {\n      const monitorCalls = this._callMonitor.calls;\n      const callLogCalls = this._callLog.calls;\n      if (this._lastProcessedMonitorCalls !== monitorCalls) {\n        const endedCalls = (this._lastProcessedMonitorCalls || []).filter(\n          (call) =>\n            !monitorCalls.find(\n              (currentCall) => call.sessionId === currentCall.sessionId,\n            ) &&\n            // if the call's callLog has been fetch, skip\n            !callLogCalls.find(\n              (currentCall) => call.sessionId === currentCall.sessionId,\n            ),\n        );\n        this._lastProcessedMonitorCalls = monitorCalls;\n        return endedCalls;\n      }\n    }\n    return null;\n  }\n\n  _shouldRemoveEndedCalls() {\n    const currentCalls = this._callLog.calls;\n    if (currentCalls !== this._lastProcessedCalls) {\n      this._lastProcessedCalls = currentCalls;\n      const ids = {};\n      currentCalls.forEach((call) => {\n        ids[call.sessionId] = true;\n      });\n      return this.recentlyEndedCalls.filter((call) => ids[call.sessionId]);\n    }\n    return null;\n  }\n\n  _processCallHistory() {\n    const uniqueNumbers = this.uniqueNumbers;\n    if (this._shouldTriggerContactMatch(uniqueNumbers)) {\n      this._contactMatcher.triggerMatch();\n    }\n    const sessionIds = this.sessionIds;\n    if (this._shouldTriggerActivityMatch(sessionIds)) {\n      this._activityMatcher.triggerMatch();\n    }\n\n    const endedCalls = this._getEndedCalls();\n    if (endedCalls && endedCalls.length) {\n      this._addEndedCalls(endedCalls);\n    }\n\n    const shouldRemove = this._shouldRemoveEndedCalls();\n    if (shouldRemove && shouldRemove.length) {\n      this._removeEndedCalls(shouldRemove);\n    }\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._lastProcessedCalls = null;\n    this._lastProcessedIds = null;\n    this._lastProcessedMonitorCalls = null;\n    this._lastProcessedNumbers = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _addEndedCalls(endedCalls) {\n    endedCalls.map((call) => {\n      call.result = 'Disconnected';\n      return call;\n    });\n    this.store.dispatch({\n      type: this.actionTypes.addEndedCalls,\n      endedCalls,\n      timestamp: Date.now(),\n    });\n    this._callLog.sync();\n  }\n\n  _removeEndedCalls(endedCalls) {\n    this.store.dispatch({\n      type: this.actionTypes.removeEndedCalls,\n      endedCalls,\n    });\n  }\n\n  // for track click to sms in call history\n  @proxify\n  onClickToSMS() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToSMS,\n    });\n  }\n  // for track click to call in call history\n  @proxify\n  onClickToCall() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToCall,\n    });\n  }\n\n  @proxify\n  updateSearchInput(input) {\n    this.store.dispatch({\n      type: this.actionTypes.updateSearchInput,\n      input,\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  @selector\n  normalizedCalls = [\n    () => this._callLog.calls,\n    () => this._accountInfo.countryCode,\n    (calls, countryCode) =>\n      calls\n        .map((call) => {\n          const callFrom = {\n            ...call.from,\n          };\n          if (callFrom.phoneNumber) {\n            callFrom.phoneNumber = normalizeNumber({\n              phoneNumber: callFrom.phoneNumber,\n              countryCode,\n            });\n          }\n          const callTo = {\n            ...call.to,\n          };\n          if (callTo.phoneNumber) {\n            callTo.phoneNumber = normalizeNumber({\n              phoneNumber: callTo.phoneNumber,\n              countryCode,\n            });\n          }\n          return {\n            ...call,\n            from: callFrom,\n            to: callTo,\n          };\n        })\n        .sort(sortByStartTime),\n  ];\n\n  @selector\n  calls = [\n    () => this.normalizedCalls,\n    () => this.recentlyEndedCalls,\n    () => this._contactMatcher && this._contactMatcher.dataMapping,\n    () => this._activityMatcher && this._activityMatcher.dataMapping,\n    () => this._callMonitor && this._callMonitor.callMatched,\n    (\n      normalizedCalls,\n      endedCalls,\n      contactMapping = {},\n      activityMapping = {},\n      callMatched = {},\n    ) => {\n      const sessionIds = {};\n      const calls = normalizedCalls.map((call) => {\n        sessionIds[call.sessionId] = true;\n        const fromNumber =\n          call.from && (call.from.phoneNumber || call.from.extensionNumber);\n        const toNumber =\n          call.to && (call.to.phoneNumber || call.to.extensionNumber);\n        const fromMatches = (fromNumber && contactMapping[fromNumber]) || [];\n        const toMatches = (toNumber && contactMapping[toNumber]) || [];\n        const activityMatches = activityMapping[call.sessionId] || [];\n        const matched = callMatched[call.sessionId];\n        return {\n          ...call,\n          fromMatches,\n          toMatches,\n          activityMatches,\n          toNumberEntity: matched,\n        };\n      });\n      const filteredEndedCalls = endedCalls\n        .filter((call) => !sessionIds[call.sessionId])\n        .map((call) => {\n          const activityMatches = activityMapping[call.sessionId] || [];\n          const fromNumber =\n            call.from && (call.from.phoneNumber || call.from.extensionNumber);\n          const toNumber =\n            call.to && (call.to.phoneNumber || call.to.extensionNumber);\n          const fromMatches = (fromNumber && contactMapping[fromNumber]) || [];\n          const toMatches = (toNumber && contactMapping[toNumber]) || [];\n          return {\n            ...call,\n            activityMatches,\n            fromMatches,\n            toMatches,\n          };\n        });\n      return [...filteredEndedCalls, ...calls].sort(sortByStartTime);\n    },\n  ];\n\n  @proxify\n  debouncedSearch(...args) {\n    this._debouncedSearch.apply(this, args);\n  }\n\n  @proxify\n  callsSearch() {\n    if (this.searchInput === '') {\n      return;\n    }\n    const calls = this.calls;\n    const searchInput = this.searchInput;\n    let data = [];\n    const effectSearchStr = searchInput.toLowerCase().trim();\n\n    data = calls\n      .filter((call) => {\n        const { phoneNumber, matches } = getPhoneNumberMatches(call);\n        const matchesMatched = matches.some((entities) => {\n          if (!entities || !entities.id) return false;\n          if (\n            entities.name &&\n            entities.name.toLowerCase().indexOf(effectSearchStr) > -1\n          )\n            return true;\n          if (entities.phone && entities.phone.indexOf(effectSearchStr) > -1)\n            return true;\n          return false;\n        });\n\n        if (matchesMatched) {\n          return true;\n        }\n        if (phoneNumber && phoneNumber.indexOf(effectSearchStr) > -1) {\n          return true;\n        }\n        return false;\n      })\n      .sort(sortByStartTime);\n\n    this.store.dispatch({\n      type: this.actionTypes.filterSuccess,\n      data,\n    });\n  }\n\n  @selector\n  latestCalls = [\n    () => this.filterCalls,\n    () => this._activityMatcher && this._activityMatcher.dataMapping,\n    (calls, dataMapping) => {\n      if (dataMapping) {\n        const newCalls = calls.map((call) => ({\n          ...call,\n          activityMatches: dataMapping[call.sessionId] || [],\n        }));\n        return newCalls;\n      }\n      return calls;\n    },\n  ];\n\n  @selector\n  uniqueNumbers = [\n    () => this.normalizedCalls,\n    () => this.recentlyEndedCalls,\n    (normalizedCalls, endedCalls) => {\n      const output = [];\n      const numberMap = {};\n      function addIfNotExist(number) {\n        if (!numberMap[number]) {\n          output.push(number);\n          numberMap[number] = true;\n        }\n      }\n      function addNumbersFromCall(call) {\n        if (call.from && call.from.phoneNumber) {\n          addIfNotExist(call.from.phoneNumber);\n        } else if (call.from && call.from.extensionNumber) {\n          addIfNotExist(call.from.extensionNumber);\n        }\n        if (call.to && call.to.phoneNumber) {\n          addIfNotExist(call.to.phoneNumber);\n        } else if (call.to && call.to.extensionNumber) {\n          addIfNotExist(call.to.extensionNumber);\n        }\n      }\n      normalizedCalls.forEach(addNumbersFromCall);\n      endedCalls.forEach(addNumbersFromCall);\n      return output;\n    },\n  ];\n\n  @selector\n  sessionIds = [\n    () => this._callLog.calls,\n    () => this.recentlyEndedCalls,\n    (calls, endedCalls) => {\n      const sessionIds = {};\n      return calls\n        .map((call) => {\n          sessionIds[call.sessionId] = true;\n          return call.sessionId;\n        })\n        .concat(\n          endedCalls\n            .filter((call) => !sessionIds[call.sessionId])\n            .map((call) => call.sessionId),\n        );\n    },\n  ];\n\n  get filterCalls() {\n    if (this.searchInput === '') {\n      return this.calls;\n    }\n    return this.state.filterCalls;\n  }\n\n  get searchInput() {\n    return this.state.searchInput;\n  }\n\n  get recentlyEndedCalls() {\n    if (this._storage) {\n      return this._storage.getItem(this._endedCallsStorageKey);\n    }\n    return this.state.endedCalls;\n  }\n}\n"],"file":"index.js"}