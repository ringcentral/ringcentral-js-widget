{"version":3,"sources":["modules/AccountInfoV2/AccountInfo.ts"],"names":["AccountInfo","name","deps","dep","optional","data","info","serviceInfo","_source","DataSource","accountInfoOptions","key","fetchFunction","_deps","client","account","get","readyCheckFunction","rolesAndPermissions","ready","permissionCheckFunction","_checkPermission","cleanOnReset","dataFetcherV2","register","permissions","ReadCompanyInfo","parentModule","analytics","_identify","userId","auth","ownerId","accountId","id","servicePlanId","servicePlan","edition","CRMEnabled","tierEnabled","loginStatus","loggedIn","logout","alert","danger","message","permissionsMessages","insufficientPrivilege","ttl","billingPlan","brand","homeCountry","country","isoCode","mainNumber","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcaA,W,WAXZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,aADA;AAENC,EAAAA,IAAI,EAAE,CACJ,MADI,EAEJ,QAFI,EAGJ,qBAHI,EAIJ,OAJI,EAKJ,eALI,EAMJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GANI;AAFA,CAAP,C,UA4DE,oBAAsB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc,CAACA,IAAD,CAAd;AAAA,CAAtB,C,UAKA,oBAAsB;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,SAAc,CAACA,IAAD,CAAd;AAAA,CAAtB,C,UAKA,oBAAsB;AAAA,MAAGC,WAAH,SAAGA,WAAH;AAAA,SAAqB,CAACA,WAAD,CAArB;AAAA,CAAtB,C,UAKA,oBAAsB;AAAA,MAAGA,WAAH,SAAGA,WAAH;AAAA,SAAqB,CAACA,WAAD,CAArB;AAAA,CAAtB,C;;;;;AA5DD,uBAAYL,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AAGA,UAAKM,OAAL,GAAe,IAAIC,wBAAJ,iCACVP,IAAI,CAACQ,kBADK;AAEbC,MAAAA,GAAG,EAAE,aAFQ;AAGbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACN,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,GAA4BC,GAA5B,EADM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHA;AAKbC,MAAAA,kBAAkB,EAAE;AAAA,eAAM,CAAC,CAAC,MAAKJ,KAAL,CAAWK,mBAAX,CAA+BC,KAAvC;AAAA,OALP;AAMbC,MAAAA,uBAAuB,EAAE;AAAA,eAAM,MAAKC,gBAAL,EAAN;AAAA,OANZ;AAObC,MAAAA,YAAY,EAAE;AAPD,OAAf;;AASA,UAAKT,KAAL,CAAWU,aAAX,CAAyBC,QAAzB,CAAkC,MAAKhB,OAAvC;;AAbsB;AAcvB;;;;uCAE4B;AAAA;;AAC3B,aAAO,CAAC,2BAAC,KAAKK,KAAL,CAAWK,mBAAX,CAA+BO,WAAhC,0DAAC,sBAA4CC,eAA7C,CAAR;AACD;;;oCAEe;AAAA;;AACd;AACA,oBAAC,KAAKC,YAAN,CAA2BC,SAA3B,kFAAsCC,SAAtC,+FAAkD;AAChDC,QAAAA,MAAM,sBAAE,KAAKjB,KAAL,CAAWkB,IAAb,qDAAE,iBAAiBC,OADuB;AAEhDC,QAAAA,SAAS,EAAE,KAAKC,EAFgC;AAGhDC,QAAAA,aAAa,EAAE,KAAKC,WAAL,CAAiBF,EAHgB;AAIhDG,QAAAA,OAAO,EAAE,KAAKD,WAAL,CAAiBC,OAJsB;AAKhDC,QAAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWK,mBAAX,CAA+BqB;AALK,OAAlD;AAOD;;;;;;;;;sBAIG,KAAK1B,KAAL,CAAWkB,IAAX,CAAgBS,WAAhB,KAAgCA,mBAAYC,QAA5C,IACA,KAAKtB,KADL,IAEA,CAAC,KAAKE,gBAAL,E;;;;;;uBAEK,KAAKR,KAAL,CAAWkB,IAAX,CAAgBW,MAAhB,E;;;AACN,qBAAK7B,KAAL,CAAW8B,KAAX,CAAiBC,MAAjB,CAAwB;AACtBC,kBAAAA,OAAO,EAAEC,yCAAoBC,qBADP;AAEtBC,kBAAAA,GAAG,EAAE;AAFiB,iBAAxB;;;;;;;;;;;;;;;;;;wBAQO;AAAA;;AACT,2BAAO,KAAK3C,IAAZ,mDAAoB,EAApB;AACD;;;wBAGiB;AAAA;;AAChB,sCAAO,KAAKC,IAAL,CAAUC,WAAjB,yEAAgC,EAAhC;AACD;;;wBAGiB;AAAA;;AAChB,sCAAO,KAAKA,WAAL,CAAiB6B,WAAxB,yEAAuC,EAAvC;AACD;;;wBAGiB;AAAA;;AAChB,sCAAO,KAAK7B,WAAL,CAAiB0C,WAAxB,yEAAuC,EAAvC;AACD;;;wBAEQ;AACP,aAAO,KAAK3C,IAAL,CAAU4B,EAAjB;AACD;;;wBAEa;AAAA;;AACZ,sCAAO,KAAK3B,WAAL,CAAiB2C,KAAxB,0DAAO,sBAAwBC,WAA/B;AACD;;;wBAEiB;AAAA;;AAChB,uDAAO,KAAKC,OAAZ,kDAAO,cAAcC,OAArB,yEAAgC,IAAhC;AACD;;;wBAEuB;AACtB,aAAO,KAAK/C,IAAL,CAAUgD,UAAjB;AACD;;;;EAnF8BC,mC","sourcesContent":["import { GetAccountInfoResponse } from '@rc-ex/core/definitions';\nimport { computed } from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport { loginStatus } from '../AuthV2';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { permissionsMessages } from '../RolesAndPermissions/permissionsMessages';\nimport { Deps } from './AccountInfo.interfaces';\n\n@Module({\n  name: 'AccountInfo',\n  deps: [\n    'Auth',\n    'Client',\n    'RolesAndPermissions',\n    'Alert',\n    'DataFetcherV2',\n    { dep: 'AccountInfoOptions', optional: true },\n  ],\n})\nexport class AccountInfo extends DataFetcherV2Consumer<\n  Deps,\n  GetAccountInfoResponse\n> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.accountInfoOptions,\n      key: 'accountInfo',\n      fetchFunction: async () =>\n        (await this._deps.client.account().get()) as GetAccountInfoResponse,\n      readyCheckFunction: () => !!this._deps.rolesAndPermissions.ready,\n      permissionCheckFunction: () => this._checkPermission(),\n      cleanOnReset: true,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  protected _checkPermission() {\n    return !!this._deps.rolesAndPermissions.permissions?.ReadCompanyInfo;\n  }\n\n  onInitSuccess() {\n    // TODO: refactor for Analytics V2\n    (this.parentModule as any).analytics?._identify?.({\n      userId: this._deps.auth?.ownerId,\n      accountId: this.id,\n      servicePlanId: this.servicePlan.id,\n      edition: this.servicePlan.edition,\n      CRMEnabled: this._deps.rolesAndPermissions.tierEnabled,\n    });\n  }\n\n  async onStateChange() {\n    if (\n      this._deps.auth.loginStatus === loginStatus.loggedIn &&\n      this.ready &&\n      !this._checkPermission()\n    ) {\n      await this._deps.auth.logout();\n      this._deps.alert.danger({\n        message: permissionsMessages.insufficientPrivilege,\n        ttl: 0,\n      });\n    }\n  }\n\n  @computed<AccountInfo>(({ data }) => [data])\n  get info() {\n    return this.data ?? {};\n  }\n\n  @computed<AccountInfo>(({ info }) => [info])\n  get serviceInfo() {\n    return this.info.serviceInfo ?? {};\n  }\n\n  @computed<AccountInfo>(({ serviceInfo }) => [serviceInfo])\n  get servicePlan() {\n    return this.serviceInfo.servicePlan ?? {};\n  }\n\n  @computed<AccountInfo>(({ serviceInfo }) => [serviceInfo])\n  get billingPlan() {\n    return this.serviceInfo.billingPlan ?? {};\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get country() {\n    return this.serviceInfo.brand?.homeCountry;\n  }\n\n  get countryCode() {\n    return this.country?.isoCode ?? 'US';\n  }\n\n  get mainCompanyNumber() {\n    return this.info.mainNumber;\n  }\n}\n"],"file":"AccountInfo.js"}