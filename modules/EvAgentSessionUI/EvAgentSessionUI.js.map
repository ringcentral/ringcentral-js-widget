{"version":3,"sources":["modules/EvAgentSessionUI/EvAgentSessionUI.ts"],"names":["EvAgentSessionUI","name","deps","dep","optional","that","_deps","locale","currentLocale","evAgentSession","inboundQueues","formGroup","selectedInboundQueueIds","enableCache","storageKey","isLoading","setIsLoading","configureAgent","console","error","routerInteraction","push","modal","confirm","title","i18n","getString","content","okText","cancelText","onOK","onSaveUpdate","onCancel","resetFormGroup","goToSettingsPage","isSessionChanged","showSaveEditionModal","updateAgent","voiceConnectionChanged","gateId","inboundQueuesState","setInboundQueuesState","index","findIndex","option","selectedInboundQueue","checked","severalAssign","map","goBack","queues","cb","inboundQueue","setFormGroup","skillProfileList","loginTypeList","isExternalPhone","selectedSkillProfileId","loginType","extensionNumber","inboundQueuesFieldText","isExtensionNumber","isWide","environment","setSkillProfileId","setLoginType","setExtensionNumber","submitInboundQueues","setConfigure","goToSessionUpdatePage","goToSettingsPageWhetherSessionChanged","searchOption","text","gateName","toLowerCase","includes","getAssignedInboundQueues","filter","isAllAssign","assignedInboundQueues","length","isSeveralAssign","checkBoxOnChange","_checkBoxOnChange","allCheckBoxOnChange","_allCheckBoxOnChange","find","dropDownOptions","None","id","RcUIModuleV2","storage","state","action"],"mappings":"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","sourcesContent":["import {\n  action,\n  computed,\n  RcUIModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport { dropDownOptions } from '../../enums';\nimport {\n  ChangeQueueStateFn,\n  EvAgentSessionUIFunctions,\n  EvAgentSessionUIProps,\n} from '../../interfaces/EvAgentSessionUI.interface';\nimport { AvailableQueue } from '../../interfaces/SelectableQueue.interface';\nimport { sortByName } from '../../lib/sortByName';\nimport { Deps, SessionConfigUI } from './EvAgentSessionUI.interface';\nimport i18n from './i18n';\n\n@Module({\n  name: 'EvAgentSessionUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'EvAuth',\n    'EvAgentSession',\n    'EvSettings',\n    'EvWorkingState',\n    'Storage',\n    'Modal',\n    'Environment',\n    'EvCallMonitor',\n    { dep: 'EvAgentSessionUIOptions', optional: true },\n  ],\n})\nclass EvAgentSessionUI extends RcUIModuleV2<Deps> implements SessionConfigUI {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvAgentSessionUI',\n    });\n  }\n\n  @storage\n  @state\n  isLoading = false;\n\n  @computed((that: EvAgentSessionUI) => [\n    that._deps.locale.currentLocale,\n    that._deps.evAgentSession.inboundQueues,\n    that._deps.evAgentSession.formGroup.selectedInboundQueueIds,\n  ])\n  get inboundQueuesFieldText() {\n    const { selectedInboundQueueIds } = this._deps.evAgentSession.formGroup;\n    const { inboundQueues } = this._deps.evAgentSession;\n    const { currentLocale } = this._deps.locale;\n\n    if (selectedInboundQueueIds.length === 1) {\n      const selectedInboundQueue = inboundQueues.find(\n        (inboundQueue) => inboundQueue.gateId === selectedInboundQueueIds[0],\n      );\n      return selectedInboundQueue.gateName;\n    }\n\n    if (selectedInboundQueueIds.length > 1) {\n      return `${i18n.getString('multiple', currentLocale)} (${\n        selectedInboundQueueIds.length\n      })`;\n    }\n\n    return i18n.getString(dropDownOptions.None, currentLocale);\n  }\n\n  @action\n  setIsLoading(isLoading: boolean) {\n    this.isLoading = isLoading;\n  }\n\n  onInit() {\n    this.setIsLoading(false);\n  }\n\n  async setConfigure() {\n    this.setIsLoading(true);\n    try {\n      await this._deps.evAgentSession.configureAgent();\n    } catch (e) {\n      console.error(e);\n      return;\n    } finally {\n      this.setIsLoading(false);\n    }\n  }\n\n  goToSessionUpdatePage() {\n    this._deps.routerInteraction.push('/sessionUpdate');\n  }\n\n  private showSaveEditionModal() {\n    const { currentLocale } = this._deps.locale;\n\n    this._deps.modal.confirm({\n      title: i18n.getString('saveEditionModalTitle', currentLocale),\n      content: i18n.getString('saveEditionModalContent', currentLocale),\n      okText: i18n.getString('save', currentLocale),\n      cancelText: i18n.getString('cancel', currentLocale),\n      onOK: () => {\n        this.onSaveUpdate();\n      },\n      onCancel: () => {\n        this._deps.evAgentSession.resetFormGroup();\n        this._deps.evAgentSession.goToSettingsPage();\n      },\n    });\n  }\n\n  goToSettingsPageWhetherSessionChanged() {\n    if (this._deps.evAgentSession.isSessionChanged) {\n      return this.showSaveEditionModal();\n    }\n    this._deps.evAgentSession.goToSettingsPage();\n  }\n\n  get voiceConnectionChanged() {\n    return (\n      this._deps.evAgentSession.loginType !==\n      this._deps.evAgentSession.formGroup.loginType\n    );\n  }\n\n  async onSaveUpdate() {\n    try {\n      if (!this._deps.evAgentSession.isSessionChanged) {\n        return this._deps.evAgentSession.goToSettingsPage();\n      }\n\n      await this._deps.evAgentSession.updateAgent(this.voiceConnectionChanged);\n    } catch (error) {\n      console.error('error', error);\n    }\n  }\n\n  // Inboudqueue Panel\n  @computed((that: EvAgentSessionUI) => [\n    that._deps.evAgentSession.selectedInboundQueueIds,\n    that._deps.evAgentSession.inboundQueues,\n  ])\n  get inboundQueues() {\n    const {\n      inboundQueues,\n      selectedInboundQueueIds,\n    } = this._deps.evAgentSession;\n\n    return sortByName(\n      inboundQueues.map((inboundQueue) => {\n        return {\n          ...inboundQueue,\n          checked: !!selectedInboundQueueIds.find(\n            (id) => id === inboundQueue.gateId,\n          ),\n        };\n      }),\n      'gateName',\n    );\n  }\n\n  private _checkBoxOnChange(\n    gateId: string,\n    inboundQueuesState: AvailableQueue[],\n    setInboundQueuesState: ChangeQueueStateFn,\n  ) {\n    const inboundQueues = [...inboundQueuesState];\n    const index = inboundQueues.findIndex((option) => option.gateId === gateId);\n    const selectedInboundQueue = inboundQueues[index];\n\n    inboundQueues[index] = {\n      ...selectedInboundQueue,\n      checked: !selectedInboundQueue.checked,\n    };\n\n    setInboundQueuesState(inboundQueues);\n  }\n\n  private _allCheckBoxOnChange(\n    severalAssign: boolean,\n    inboundQueuesState: AvailableQueue[],\n    setInboundQueuesState: ChangeQueueStateFn,\n  ) {\n    const inboundQueues = [...inboundQueuesState].map((option) => {\n      return {\n        ...option,\n        // new object\n        checked: severalAssign || !option.checked,\n      };\n    });\n    setInboundQueuesState(inboundQueues);\n  }\n\n  goBack() {\n    this._deps.routerInteraction.goBack();\n  }\n\n  submitInboundQueues(queues: AvailableQueue[], cb: () => void) {\n    const selectedInboundQueueIds = queues.map(\n      (inboundQueue) => inboundQueue.gateId,\n    );\n    this._deps.evAgentSession.setFormGroup({ selectedInboundQueueIds });\n    cb();\n  }\n\n  getUIProps(): EvAgentSessionUIProps {\n    const {\n      skillProfileList,\n      loginTypeList,\n      isExternalPhone,\n      // takingCall,\n      // autoAnswer,\n    } = this._deps.evAgentSession;\n    const {\n      selectedSkillProfileId,\n      loginType,\n      extensionNumber,\n    } = this._deps.evAgentSession.formGroup;\n    return {\n      selectedSkillProfileId,\n      loginType,\n      extensionNumber,\n      inboundQueuesFieldText: this.inboundQueuesFieldText,\n      // takingCall,\n      // autoAnswer,\n      skillProfileList,\n      loginTypeList,\n      isExtensionNumber: isExternalPhone,\n      isLoading: this.isLoading,\n      currentLocale: this._deps.locale.currentLocale,\n      // Inboudqueue Panel\n      inboundQueues: this.inboundQueues,\n      voiceConnectionChanged: this.voiceConnectionChanged,\n      isWide: this._deps.environment.isWide,\n    };\n  }\n\n  getUIFunctions(): EvAgentSessionUIFunctions {\n    return {\n      setSkillProfileId: (selectedSkillProfileId) =>\n        this._deps.evAgentSession.setFormGroup({ selectedSkillProfileId }),\n      setLoginType: (loginType) =>\n        this._deps.evAgentSession.setFormGroup({ loginType }),\n      setExtensionNumber: (extensionNumber) =>\n        this._deps.evAgentSession.setFormGroup({ extensionNumber }),\n      submitInboundQueues: (queues, cb) => this.submitInboundQueues(queues, cb),\n      resetFormGroup: () => this._deps.evAgentSession.resetFormGroup(),\n      // setTakingCall: (takingCall) =>\n      //   this._deps.evAgentSession.setTakingCall(takingCall),\n      // setAutoAnswer: (autoAnswer) =>\n      //   this._deps.evAgentSession.setAutoAnswer(autoAnswer),\n      setConfigure: () => this.setConfigure(),\n      goToSettingsPage: () => this._deps.evAgentSession.goToSettingsPage(),\n      goToSessionUpdatePage: () => this.goToSessionUpdatePage(),\n      goToSettingsPageWhetherSessionChanged: () =>\n        this.goToSettingsPageWhetherSessionChanged(),\n      onSaveUpdate: () => this.onSaveUpdate(),\n      // Inboudqueue Panel\n      searchOption: (option, text) =>\n        option.gateName &&\n        option.gateName.toLowerCase().includes(text.toLowerCase()),\n      goBack: () => this.goBack(),\n      getAssignedInboundQueues: (inboundQueues) =>\n        inboundQueues.filter(({ checked }) => checked),\n      isAllAssign: (assignedInboundQueues, inboundQueues) =>\n        !!assignedInboundQueues.length &&\n        assignedInboundQueues.length === inboundQueues.length,\n      isSeveralAssign: (assignedInboundQueues, inboundQueues) =>\n        !!assignedInboundQueues.length &&\n        assignedInboundQueues.length !== inboundQueues.length,\n      checkBoxOnChange: (...args) => this._checkBoxOnChange(...args),\n      allCheckBoxOnChange: (...args) => this._allCheckBoxOnChange(...args),\n    };\n  }\n}\nexport { EvAgentSessionUI };\n"],"file":"EvAgentSessionUI.js"}