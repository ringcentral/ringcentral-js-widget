{"version":3,"sources":["modules/Modal/Modal.tsx"],"names":["Modal","name","deps","id","data","open","state","modalIds","push","modalMapping","_setListItem","filter","modalId","props","_getId","_open","onOK","rest","Promise","resolve","alert","e","onCancel","cancelText","_close","confirm","disableBackdropClick","fullScreen","size","okText","onExited","_removeListItem","uuid","v4","RcModuleV2","storage","computed","map","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAQA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBaA,K,WAJZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,OADA;AAENC,EAAAA,IAAI,EAAE;AAFA,CAAP,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCAqBsBC,E,EAAYC,I,EAAiB;AAChD,UAAIA,IAAI,CAACC,IAAT,EAAe;AACb,aAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBL,EAAzB;AACD;;AACD,WAAKG,KAAL,CAAWG,YAAX,CAAwBN,EAAxB,IAA8BC,IAA9B;AACD;;;2BAEcD,E,EAAY;AACzB,UAAI,KAAKM,YAAL,CAAkBN,EAAlB,CAAJ,EAA2B;AACzB,aAAKO,YAAL,CAAkBP,EAAlB,oBAA2B,KAAKM,YAAL,CAAkBN,EAAlB,CAA3B;AAAkDE,UAAAA,IAAI,EAAE;AAAxD;AACD;AACF;;;oCAGuBF,E,EAAY;AAClC,WAAKG,KAAL,CAAWC,QAAX,GAAsB,KAAKD,KAAL,CAAWC,QAAX,CAAoBI,MAApB,CACpB,UAACC,OAAD;AAAA,eAAaA,OAAO,KAAKT,EAAzB;AAAA,OADoB,CAAtB;AAGA,aAAO,KAAKG,KAAL,CAAWG,YAAX,CAAwBN,EAAxB,CAAP;AACD;;;0BAEKU,K,EAAwB;AAC5B,UAAMV,EAAE,GAAG,KAAKW,MAAL,EAAX;;AACA,aAAO,KAAKC,KAAL,CAAWZ,EAAX,EAAeU,KAAf,CAAP;AACD;AAED;;;;;;oCAG8C;AAAA;;AAAA,UAAlCG,KAAkC,QAAlCA,IAAkC;AAAA,UAAzBC,IAAyB;;AAC5C,aAAO,IAAIC,OAAJ,CAAoB,UAACC,OAAD,EAAa;AACtC,YAAMhB,EAAE,GAAG,MAAI,CAACiB,KAAL,mBACNH,IADM;AAETD,UAAAA,IAAI,EAAE,cAAOK,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDACEL,KAAI,CAACK,CAAD,CADN;;AAAA;AAEJF,oBAAAA,OAAO,CAAChB,EAAD,CAAP;;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFG,WAAX;AAOD,OARM,CAAP;AASD;;;mCAEiD;AAAA;;AAAA,UAAxCmB,SAAwC,SAAxCA,QAAwC;AAAA,UAA3BL,IAA2B;;AAChD,UAAMd,EAAE,GAAG,KAAKW,MAAL,EAAX;;AACA,aAAO,KAAKC,KAAL,CAAWZ,EAAX;AACLoB,QAAAA,UAAU,EAAE,QADP;AAELD,QAAAA,QAAQ,EAAE,kBAACD,CAAD,EAAO;AACf,cAAIC,SAAJ,EAAcA,SAAQ,CAACD,CAAD,CAAR;;AACd,UAAA,MAAI,CAACG,MAAL,CAAYrB,EAAZ;AACD;AALI,SAMFc,IANE,EAAP;AAQD;AAED;;;;;;uCAG4D;AAAA;;AAAA,UAA9CK,UAA8C,SAA9CA,QAA8C;AAAA,UAApCN,MAAoC,SAApCA,IAAoC;AAAA,UAA3BC,IAA2B;;AAC1D,aAAO,IAAIC,OAAJ,CAAoB,UAACC,OAAD,EAAa;AACtC,YAAMhB,EAAE,GAAG,MAAI,CAACsB,OAAL,mBACNR,IADM;AAETD,UAAAA,IAAI,EAAE,cAAOK,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDACEL,MAAI,CAACK,CAAD,CADN;;AAAA;AAEJF,oBAAAA,OAAO,CAAChB,EAAD,CAAP;;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFG;AAMTmB,UAAAA,QAAQ,EAAE,kBAACD,CAAD,EAAO;AACf,gBAAIC,UAAJ,EAAcA,UAAQ,CAACD,CAAD,CAAR;AACdF,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AATQ,WAAX;AAWD,OAZM,CAAP;AAaD;;;0BAEKhB,E,EAAY;AAChB,WAAKqB,MAAL,CAAYrB,EAAZ;AACD;;;0BAEaA,E,SAA0C;AAAA;;AAAA,UAA5Ba,MAA4B,SAA5BA,IAA4B;AAAA,UAAnBC,IAAmB;;AACtD,WAAKP,YAAL,CAAkBP,EAAlB;AACE;AACAuB,QAAAA,oBAAoB,EAAE,IAFxB;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEtB,QAAAA,IAAI,EAAE,IAJR;AAKEuB,QAAAA,IAAI,EAAE,QALR;AAMEC,QAAAA,MAAM,EAAE;AANV,SAOKZ,IAPL;AAQED,QAAAA,IAAI,EAAE,cAACK,CAAD,EAAO;AACXL,UAAAA,MAAI,CAACK,CAAD,CAAJ;;AACA,UAAA,MAAI,CAACG,MAAL,CAAYrB,EAAZ;AACD,SAXH;AAYE2B,QAAAA,QAAQ,EAAE,oBAAM;AACd,UAAA,MAAI,CAACC,eAAL,CAAqB5B,EAArB;AACD;AAdH;;AAgBA,aAAOA,EAAP;AACD;;;6BAEgB;AACf,aAAO6B,iBAAKC,EAAL,EAAP;AACD;;;;EAnHwBC,gB,oFACxBC,a,EACA7B,W;;;;;WACoB,E;;iFAEpBA,W;;;;;WACgC,E;;2EAEhC8B,c;;;;;;;WACqB,CACpB;AAAA,aAAM,MAAI,CAAC7B,QAAX;AAAA,KADoB,EAEpB;AAAA,aAAM,MAAI,CAACE,YAAX;AAAA,KAFoB,EAGpB,UAACF,QAAD,EAAqBE,YAArB;AAAA,aACEF,QAAQ,CAAC8B,GAAT,CAAa,UAAClC,EAAD;AAAA,eAAQM,YAAY,CAACN,EAAD,CAApB;AAAA,OAAb,CADF;AAAA,KAHoB,C;;kEAOrBmC,Y,4JAcAA,Y","sourcesContent":["import {\n  action,\n  computed,\n  RcModuleState,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport uuid from 'uuid';\n\nimport {\n  AlertModalProps,\n  ConfirmModalProps,\n  DepsModules,\n  ModalItem,\n  ModalMappingType,\n  State,\n} from './Modal.interface';\n\ntype ModalState = RcModuleState<Modal, State>;\n\n@Module({\n  name: 'Modal',\n  deps: [],\n})\nexport class Modal extends RcModuleV2<DepsModules, ModalState> {\n  @storage\n  @state\n  modalIds: string[] = [];\n\n  @state\n  modalMapping: ModalMappingType = {};\n\n  @computed\n  modals: ModalItem[] = [\n    () => this.modalIds,\n    () => this.modalMapping,\n    (modalIds: string[], modalMapping: ModalMappingType) =>\n      modalIds.map((id) => modalMapping[id]),\n  ] as any;\n\n  @action\n  private _setListItem(id: string, data: ModalItem) {\n    if (data.open) {\n      this.state.modalIds.push(id);\n    }\n    this.state.modalMapping[id] = data;\n  }\n\n  private _close(id: string) {\n    if (this.modalMapping[id]) {\n      this._setListItem(id, { ...this.modalMapping[id], open: false });\n    }\n  }\n\n  @action\n  private _removeListItem(id: string) {\n    this.state.modalIds = this.state.modalIds.filter(\n      (modalId) => modalId !== id,\n    );\n    delete this.state.modalMapping[id];\n  }\n\n  alert(props: AlertModalProps) {\n    const id = this._getId();\n    return this._open(id, props);\n  }\n\n  /**\n   * ### This will be a `promise method`, resolve when `onOK` complete.\n   */\n  alertSync({ onOK, ...rest }: AlertModalProps) {\n    return new Promise<string>((resolve) => {\n      const id = this.alert({\n        ...rest,\n        onOK: async (e) => {\n          await onOK(e);\n          resolve(id);\n        },\n      });\n    });\n  }\n\n  confirm({ onCancel, ...rest }: ConfirmModalProps) {\n    const id = this._getId();\n    return this._open(id, {\n      cancelText: 'cancel',\n      onCancel: (e) => {\n        if (onCancel) onCancel(e);\n        this._close(id);\n      },\n      ...rest,\n    });\n  }\n\n  /**\n   * ### This will be a `promise method`, resolve when `onOK` or `onCancel` complete.\n   */\n  confirmSync({ onCancel, onOK, ...rest }: ConfirmModalProps) {\n    return new Promise<string>((resolve) => {\n      const id = this.confirm({\n        ...rest,\n        onOK: async (e) => {\n          await onOK(e);\n          resolve(id);\n        },\n        onCancel: (e) => {\n          if (onCancel) onCancel(e);\n          resolve(null);\n        },\n      });\n    });\n  }\n\n  close(id: string) {\n    this._close(id);\n  }\n\n  private _open(id: string, { onOK, ...rest }: ModalItem) {\n    this._setListItem(id, {\n      // default modal props\n      disableBackdropClick: true,\n      fullScreen: false,\n      open: true,\n      size: 'xsmall',\n      okText: 'ok',\n      ...rest,\n      onOK: (e) => {\n        onOK(e);\n        this._close(id);\n      },\n      onExited: () => {\n        this._removeListItem(id);\n      },\n    });\n    return id;\n  }\n\n  private _getId() {\n    return uuid.v4();\n  }\n}\n"],"file":"Modal.js"}