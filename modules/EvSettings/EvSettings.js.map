{"version":3,"sources":["modules/EvSettings/EvSettings.ts"],"names":["EvSettings","name","deps","dep","optional","evClient","evAuth","evSessionConfig","storage","enableCache","modules","storageKey","getOffhookState","isOffhooking","isOffhook","config","state","isManualOffhook","status","offhooking","_modules","isFreshLogin","tabManagerEnabled","isConfigSuccessByLocal","offhookTermHandle","setOffhooking","setIsManualOffhook","offhookTerm","offhookInit","loginType","RcModuleV2","action"],"mappings":"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","sourcesContent":["import {\n  action,\n  RcModuleState,\n  RcModuleV2,\n  state,\n  storage,\n  createSelector,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport { DepsModules, Settings, State } from './EvSettings.interface';\n\ntype EvSettingsState = RcModuleState<EvSettings, State>;\n\n@Module({\n  name: 'EvSettings',\n  deps: [\n    'EvClient',\n    'EvAuth',\n    'EvSessionConfig',\n    'Storage',\n    { dep: 'EvSettingsOptions', optional: true },\n  ],\n})\nclass EvSettings extends RcModuleV2<DepsModules, EvSettingsState>\n  implements Settings {\n  constructor({\n    evClient,\n    evAuth,\n    evSessionConfig,\n    storage,\n    enableCache = true,\n  }) {\n    super({\n      modules: {\n        evClient,\n        evAuth,\n        evSessionConfig,\n        storage,\n      },\n      enableCache,\n      storageKey: 'EvSettings',\n    });\n  }\n\n  @storage\n  @state\n  isOffhook = false;\n\n  @storage\n  @state\n  isManualOffhook = false;\n\n  @storage\n  @state\n  isOffhooking = false;\n\n  @storage\n  @state\n  config = {};\n\n  get loginType() {\n    return this._modules.evSessionConfig.loginType;\n  }\n\n  getOffhookState = createSelector(\n    () => this.isOffhooking,\n    () => this.isOffhook,\n    (isOffhooking, isOffhook) => {\n      if (isOffhooking) {\n        return isOffhook ? 'disconnecting' : 'connecting';\n      }\n\n      return isOffhook ? 'connected' : 'disconnected';\n    },\n  );\n\n  @action\n  setConfig(config) {\n    this.state.config = config;\n  }\n\n  @action\n  setIsManualOffhook(isManualOffhook: boolean) {\n    this.state.isManualOffhook = isManualOffhook;\n  }\n\n  @action\n  setOffhook(status: boolean) {\n    this.state.isOffhook = status;\n  }\n\n  @action\n  setOffhooking(offhooking: boolean) {\n    this.state.isOffhooking = offhooking;\n  }\n\n  @action\n  offhookInitHandle() {\n    this.state.isOffhooking = false;\n    this.state.isOffhook = true;\n  }\n\n  @action\n  offhookTermHandle() {\n    this.state.isOffhooking = false;\n    this.state.isOffhook = false;\n    this.state.isManualOffhook = false;\n  }\n\n  onInit() {\n    if (\n      this._modules.evAuth.isFreshLogin ||\n      (this._modules.evSessionConfig.tabManagerEnabled &&\n        !this._modules.evSessionConfig.isConfigSuccessByLocal)\n    ) {\n      this.offhookTermHandle();\n    }\n  }\n\n  offHook() {\n    this.setOffhooking(true);\n    if (this.state.isOffhook) {\n      this.setIsManualOffhook(false);\n      this._modules.evClient.offhookTerm();\n    } else {\n      this.setIsManualOffhook(true);\n      this._modules.evClient.offhookInit();\n    }\n  }\n}\n\nexport { EvSettings };\n"],"file":"EvSettings.js"}