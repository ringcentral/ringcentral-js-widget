{"version":3,"sources":["modules/ConferenceUI/index.js"],"names":["ConferenceUI","name","deps","conference","regionSettings","locale","composeText","extensionFeatures","brand","alert","routerInteraction","call","options","_conference","_regionSettings","_locale","_composeText","_extensionFeatures","_brand","_alert","_routerInteraction","_call","phoneNumbers","countryCounter","acc","item","country","isoCode","countryName","countryNames","getString","currentLocale","region","location","phoneNumber","data","hostCode","participantCode","allowJoinBeforeHost","dialInNumbers","getDialInNumbers","dialInNumber","additionalNumbers","disableTxtBtn","hasOutboundSMSPermission","hasInternalSMSPermission","countryCode","areaCode","code","showSpinner","ready","showSaveAsDefault","enableAutoEnterHostKey","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","push","joinAsHost","onJoinAsHost","history","theDialInNumber","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","RcUIModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBqBA,Y,WAdpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,cADA;AAENC,EAAAA,IAAI,EAAE,CACJ,YADI,EAEJ,gBAFI,EAGJ,QAHI,EAIJ,aAJI,EAKJ,mBALI,EAMJ,OANI,EAOJ,OAPI,EAQJ,mBARI,EASJ,MATI;AAFA,CAAP,C;;;;;AAeC,8BAWG;AAAA;;AAAA,QAVDC,UAUC,QAVDA,UAUC;AAAA,QATDC,cASC,QATDA,cASC;AAAA,QARDC,MAQC,QARDA,MAQC;AAAA,QAPDC,WAOC,QAPDA,WAOC;AAAA,QANDC,iBAMC,QANDA,iBAMC;AAAA,QALDC,KAKC,QALDA,KAKC;AAAA,QAJDC,KAIC,QAJDA,KAIC;AAAA,QAHDC,iBAGC,QAHDA,iBAGC;AAAA,QAFDC,IAEC,QAFDA,IAEC;AAAA,QADEC,OACF;;AAAA;;AACD,gDACKA,OADL;AAGA,UAAKC,WAAL,GAAmBV,UAAnB;AACA,UAAKW,eAAL,GAAuBV,cAAvB;AACA,UAAKW,OAAL,GAAeV,MAAf;AACA,UAAKW,YAAL,GAAoBV,WAApB;AACA,UAAKW,kBAAL,GAA0BV,iBAA1B;AACA,UAAKW,MAAL,GAAcV,KAAd;AACA,UAAKW,MAAL,GAAcV,KAAd;AACA,UAAKW,kBAAL,GAA0BV,iBAA1B;AACA,UAAKW,KAAL,GAAaV,IAAb;AAZC;AAaF;;;;qCAEgBW,Y,EAAc;AAAA;;AAC7B,UAAMC,cAAc,GAAG,mBACrB,UAACC,GAAD,EAAMC,IAAN,EAAe;AACb,YAAI,CAACD,GAAG,CAACC,IAAI,CAACC,OAAL,CAAaC,OAAd,CAAR,EAAgC;AAC9BH,UAAAA,GAAG,CAACC,IAAI,CAACC,OAAL,CAAaC,OAAd,CAAH,GAA4B,CAA5B;AACD,SAFD,MAEO;AACLH,UAAAA,GAAG,CAACC,IAAI,CAACC,OAAL,CAAaC,OAAd,CAAH,IAA6B,CAA7B;AACD;;AACD,eAAOH,GAAP;AACD,OARoB,EASrB,EATqB,EAUrBF,YAVqB,CAAvB;AAYA,aAAO,gBAAI,UAACG,IAAD,EAAU;AACnB,YAAMG,WAAW,GAAGC,yBAAaC,SAAb,CAClBL,IAAI,CAACC,OAAL,CAAaC,OADK,EAElB,MAAI,CAACZ,OAAL,CAAagB,aAFK,CAApB,CADmB,CAKnB;;;AACA,eAAO;AACLC,UAAAA,MAAM,EACJT,cAAc,CAACE,IAAI,CAACC,OAAL,CAAaC,OAAd,CAAd,GAAuC,CAAvC,aACOC,WADP,eACuBH,IAAI,CAACQ,QAD5B,IAEIL,WAJD;AAKLM,UAAAA,WAAW,EAAET,IAAI,CAACS;AALb,SAAP;AAOD,OAbM,EAaJZ,YAbI,CAAP;AAcD;;;iCAEY;AAAA,kBAMP,KAAKT,WAAL,CAAiBsB,IAAjB,IAAyB,EANlB;AAAA,iCAETC,QAFS;AAAA,UAETA,QAFS,+BAEE,EAFF;AAAA,wCAGTC,eAHS;AAAA,UAGTA,eAHS,sCAGS,EAHT;AAAA,wCAITC,mBAJS;AAAA,UAITA,mBAJS,sCAIa,KAJb;AAAA,qCAKThB,YALS;AAAA,UAKTA,YALS,mCAKM,EALN;;AAOX,aAAO;AACLiB,QAAAA,aAAa,EAAE,KAAKC,gBAAL,CAAsBlB,YAAtB,CADV;AAELmB,QAAAA,YAAY,EAAE,KAAK5B,WAAL,CAAiB4B,YAAjB,IAAiC,EAF1C;AAGLL,QAAAA,QAAQ,EAARA,QAHK;AAILC,QAAAA,eAAe,EAAfA,eAJK;AAKLC,QAAAA,mBAAmB,EAAnBA,mBALK;AAMLI,QAAAA,iBAAiB,EAAE,KAAK7B,WAAL,CAAiB6B,iBAN/B;AAOLC,QAAAA,aAAa,EAAE,EACb,KAAK1B,kBAAL,CAAwB2B,wBAAxB,IACA,KAAK3B,kBAAL,CAAwB4B,wBAFX,CAPV;AAWLC,QAAAA,WAAW,EAAE,KAAKhC,eAAL,CAAqBgC,WAX7B;AAYLC,QAAAA,QAAQ,EAAE,KAAKjC,eAAL,CAAqBiC,QAZ1B;AAaLhB,QAAAA,aAAa,EAAE,KAAKhB,OAAL,CAAagB,aAbvB;AAcLvB,QAAAA,KAAK,EAAE;AACLwC,UAAAA,IAAI,EAAE,KAAK9B,MAAL,CAAY8B,IADb;AAEL/C,UAAAA,IAAI,EAAE,KAAKiB,MAAL,CAAYjB;AAFb,SAdF;AAkBLgD,QAAAA,WAAW,EAAE,EACX,KAAKpC,WAAL,CAAiBqC,KAAjB,IACA,KAAKpC,eAAL,CAAqBoC,KADrB,IAEA,KAAKnC,OAAL,CAAamC,KAFb,IAGA,KAAKlC,YAAL,CAAkBkC,KAJP,CAlBR;AAwBLC,QAAAA,iBAAiB,EAAE,KAAKtC,WAAL,CAAiBsC;AAxB/B,OAAP;AA0BD;;;0CAEkD;AAAA;;AAAA,wCAAlCC,sBAAkC;AAAA,UAAlCA,sBAAkC,sCAAT,KAAS;AACjD,aAAO;AACL3C,QAAAA,KAAK,EAAE,eAAC4C,GAAD,EAAS;AACd,UAAA,MAAI,CAAClC,MAAL,CAAYmC,OAAZ,CAAoB;AAAEC,YAAAA,OAAO,EAAEF;AAAX,WAApB;AACD,SAHI;AAILG,QAAAA,kBAAkB,EAAE,4BAACf,YAAD,EAAkB;AACpC,UAAA,MAAI,CAAC5B,WAAL,CAAiB2C,kBAAjB,CAAoCf,YAApC;AACD,SANI;AAOLgB,QAAAA,uBAAuB,EAAE,iCAACC,uBAAD,EAA6B;AACpD,UAAA,MAAI,CAAC7C,WAAL,CAAiB4C,uBAAjB,CAAyCC,uBAAzC;AACD,SATI;AAULC,QAAAA,cAAc,EAAE,wBAACC,IAAD,EAAU;AACxB,UAAA,MAAI,CAAC5C,YAAL,CAAkB6C,iBAAlB,CAAoCD,IAApC,EADwB,CAExB;;;AACA,UAAA,MAAI,CAAC/C,WAAL,CAAiBiD,gBAAjB;;AACA,UAAA,MAAI,CAAC1C,kBAAL,CAAwB2C,IAAxB,CAA6B,cAA7B,EAJwB,CAKxB;;AACD,SAhBI;AAiBLC,QAAAA,UAAU,EAAE,oBAACvB,YAAD,EAAkB;AAC5B;AACA,UAAA,MAAI,CAAC5B,WAAL,CAAiBoD,YAAjB;;AACA,UAAA,MAAI,CAAC7C,kBAAL,CAAwB8C,OAAxB,CAAgCH,IAAhC,CAAqC,SAArC;;AACA,cAAMI,eAAe,GAAG1B,YAAY,IAAI,MAAI,CAAC5B,WAAL,CAAiB4B,YAAzD;AACA,cAAMP,WAAW,GAAGkB,sBAAsB,aACnCe,eADmC,eACf,MAAI,CAACtD,WAAL,CAAiBsB,IAAjB,CAAsBC,QADP,SAEtC+B,eAFJ;;AAGA,UAAA,MAAI,CAAC9C,KAAL,CAAWV,IAAX,CAAgB;AAAEuB,YAAAA,WAAW,EAAXA;AAAF,WAAhB;AACD,SA1BI;AA2BLkC,QAAAA,2BAA2B,EAAE,qCAAC9B,mBAAD,EAAyB;AACpD,UAAA,MAAI,CAACzB,WAAL,CAAiBwD,0BAAjB,CAA4C/B,mBAA5C;AACD,SA7BI;AA8BLgC,QAAAA,gBAAgB,EAAE,4BAAM;AACtB,UAAA,MAAI,CAAClD,kBAAL,CAAwB2C,IAAxB,CAA6B,sBAA7B;AACD;AAhCI,OAAP;AAkCD;;;;EA9HuCQ,uB","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { reduce, map } from 'ramda';\nimport RcUIModule from '../../lib/RcUIModule';\nimport countryNames from '../../lib/countryNames';\n\n@Module({\n  name: 'ConferenceUI',\n  deps: [\n    'Conference',\n    'RegionSettings',\n    'Locale',\n    'ComposeText',\n    'ExtensionFeatures',\n    'Brand',\n    'Alert',\n    'RouterInteraction',\n    'Call',\n  ],\n})\nexport default class ConferenceUI extends RcUIModule {\n  constructor({\n    conference,\n    regionSettings,\n    locale,\n    composeText,\n    extensionFeatures,\n    brand,\n    alert,\n    routerInteraction,\n    call,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._conference = conference;\n    this._regionSettings = regionSettings;\n    this._locale = locale;\n    this._composeText = composeText;\n    this._extensionFeatures = extensionFeatures;\n    this._brand = brand;\n    this._alert = alert;\n    this._routerInteraction = routerInteraction;\n    this._call = call;\n  }\n\n  getDialInNumbers(phoneNumbers) {\n    const countryCounter = reduce(\n      (acc, item) => {\n        if (!acc[item.country.isoCode]) {\n          acc[item.country.isoCode] = 1;\n        } else {\n          acc[item.country.isoCode] += 1;\n        }\n        return acc;\n      },\n      {},\n      phoneNumbers,\n    );\n    return map((item) => {\n      const countryName = countryNames.getString(\n        item.country.isoCode,\n        this._locale.currentLocale,\n      );\n      // only show the provinces of canada\n      return {\n        region:\n          countryCounter[item.country.isoCode] > 1\n            ? `${countryName}, ${item.location}`\n            : countryName,\n        phoneNumber: item.phoneNumber,\n      };\n    }, phoneNumbers);\n  }\n\n  getUIProps() {\n    const {\n      hostCode = '',\n      participantCode = '',\n      allowJoinBeforeHost = false,\n      phoneNumbers = [],\n    } = this._conference.data || {};\n    return {\n      dialInNumbers: this.getDialInNumbers(phoneNumbers),\n      dialInNumber: this._conference.dialInNumber || '',\n      hostCode,\n      participantCode,\n      allowJoinBeforeHost,\n      additionalNumbers: this._conference.additionalNumbers,\n      disableTxtBtn: !(\n        this._extensionFeatures.hasOutboundSMSPermission ||\n        this._extensionFeatures.hasInternalSMSPermission\n      ),\n      countryCode: this._regionSettings.countryCode,\n      areaCode: this._regionSettings.areaCode,\n      currentLocale: this._locale.currentLocale,\n      brand: {\n        code: this._brand.code,\n        name: this._brand.name,\n      },\n      showSpinner: !(\n        this._conference.ready &&\n        this._regionSettings.ready &&\n        this._locale.ready &&\n        this._composeText.ready\n      ),\n      showSaveAsDefault: this._conference.showSaveAsDefault,\n    };\n  }\n\n  getUIFunctions({ enableAutoEnterHostKey = false }) {\n    return {\n      alert: (msg) => {\n        this._alert.warning({ message: msg });\n      },\n      updateDialInNumber: (dialInNumber) => {\n        this._conference.updateDialInNumber(dialInNumber);\n      },\n      updateAdditionalNumbers: (additionalDialInNumbers) => {\n        this._conference.updateAdditionalNumbers(additionalDialInNumbers);\n      },\n      inviteWithText: (text) => {\n        this._composeText.updateMessageText(text);\n        // for track\n        this._conference.onInviteWithText();\n        this._routerInteraction.push('/composeText');\n        // update settings\n      },\n      joinAsHost: (dialInNumber) => {\n        // for track\n        this._conference.onJoinAsHost();\n        this._routerInteraction.history.push('/dialer');\n        const theDialInNumber = dialInNumber || this._conference.dialInNumber;\n        const phoneNumber = enableAutoEnterHostKey\n          ? `${theDialInNumber},,${this._conference.data.hostCode}#`\n          : theDialInNumber;\n        this._call.call({ phoneNumber });\n      },\n      onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n        this._conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n      },\n      showHelpCommands: () => {\n        this._routerInteraction.push('/conference/commands');\n      },\n    };\n  }\n}\n"],"file":"index.js"}