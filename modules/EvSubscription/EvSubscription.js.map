{"version":3,"sources":["modules/EvSubscription/EvSubscription.ts"],"names":["EvSubscription","name","deps","dep","optional","evClient","modules","eventEmitters","EventEmitter","event","value","emit","listener","_modules","getEventCallback","on","args","RcModuleV2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWMA,c,WAJL,gBAAO;AACNC,EAAAA,IAAI,EAAE,gBADA;AAENC,EAAAA,IAAI,EAAE,CAAC,UAAD,EAAa;AAAEC,IAAAA,GAAG,EAAE,uBAAP;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAAb;AAFA,CAAP,C;;;;;AAOC,gCAA0B;AAAA;;AAAA,QAAZC,QAAY,QAAZA,QAAY;;AAAA;;AACxB,8BAAM;AACJC,MAAAA,OAAO,EAAE;AACPD,QAAAA,QAAQ,EAARA;AADO;AADL,KAAN;AADwB,UAFhBE,aAEgB,GAFA,IAAIC,kBAAJ,EAEA;AAAA;AAMzB;;;;yBAGCC,K,EACAC,K,EACA;AACA,WAAKH,aAAL,CAAmBI,IAAnB,CAAwBF,KAAxB,EAA+BC,KAA/B;AACD;;;8BAKCD,K,EAAUG,Q,EAA6B;AAAA;;AACvC,UAAI,CAAC,KAAKC,QAAL,CAAcR,QAAd,CAAuBS,gBAAvB,CAAwCL,KAAxC,CAAL,EAAqD;AACnD,aAAKI,QAAL,CAAcR,QAAd,CAAuBU,EAAvB,CAA0BN,KAA1B,EAAiC,YAAoB;AAAA;;AAAA,4CAAhBO,IAAgB;AAAhBA,YAAAA,IAAgB;AAAA;;AACnD,kCAAA,MAAI,CAACT,aAAL,EAAmBI,IAAnB,8BAAwBF,KAAxB,SAAkCO,IAAlC;AACD,SAFD;AAGD;;AACD,WAAKT,aAAL,CAAmBQ,EAAnB,CAAsBN,KAAtB,EAA6BG,QAA7B;AACD;;;;EA5B0BK,gB","sourcesContent":["import { RcModuleV2 } from '@ringcentral-integration/core';\nimport EventEmitter from 'events';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport {\n  EvClientCallBackValueType,\n  EvClientCallMapping,\n} from '../../lib/EvClient/interfaces';\nimport { DepsModules, Subscription } from './EvSubscription.interface';\n\n@Module({\n  name: 'EvSubscription',\n  deps: ['EvClient', { dep: 'EvSubscriptionOptions', optional: true }],\n})\nclass EvSubscription extends RcModuleV2<DepsModules> implements Subscription {\n  protected eventEmitters = new EventEmitter();\n\n  constructor({ evClient }) {\n    super({\n      modules: {\n        evClient,\n      },\n    });\n  }\n\n  emit<T extends EvClientCallBackValueType, K extends EvClientCallMapping[T]>(\n    event: T,\n    value: K,\n  ) {\n    this.eventEmitters.emit(event, value);\n  }\n\n  subscribe<\n    T extends EvClientCallBackValueType,\n    K extends EvClientCallMapping[T]\n  >(event: T, listener: (data?: K) => any) {\n    if (!this._modules.evClient.getEventCallback(event)) {\n      this._modules.evClient.on(event, (...args: any[]) => {\n        this.eventEmitters.emit(event, ...args);\n      });\n    }\n    this.eventEmitters.on(event, listener);\n  }\n}\n\nexport { EvSubscription };\n"],"file":"EvSubscription.js"}