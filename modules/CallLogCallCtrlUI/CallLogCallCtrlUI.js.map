{"version":3,"sources":["modules/CallLogCallCtrlUI/CallLogCallCtrlUI.ts"],"names":["CallLogCallCtrlUI","name","deps","activeCallControl","connectivityMonitor","rateLimiter","routerInteraction","callingSettings","options","_activeCallControl","_connectivityMonitor","_rateLimiter","_routerInteraction","_callingSettings","onTransfer","telephonySessionId","push","isWebphone","callingMode","callingModes","webphone","currentSession","getActiveSession","disableLinks","connectivity","throttling","mute","bind","unmute","hangUp","reject","onHold","hold","onUnHold","unhold","startRecord","stopRecord","sendDTMF","dtmfValue","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'CallLogCallCtrlUI',\n  deps: [\n    'ActiveCallControl',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    'RouterInteraction',\n    'CallingSettings',\n  ],\n})\nexport default class CallLogCallCtrlUI extends RcUIModule {\n  private _activeCallControl: any;\n  private _connectivityMonitor: any;\n  private _rateLimiter: any;\n  private _routerInteraction: any;\n  private _callingSettings: any;\n  constructor({\n    activeCallControl,\n    connectivityMonitor,\n    rateLimiter,\n    routerInteraction,\n    callingSettings,\n    ...options\n  }) {\n    super({ ...options });\n    this._activeCallControl = activeCallControl;\n    this._connectivityMonitor = connectivityMonitor;\n    this._rateLimiter = rateLimiter;\n    this._routerInteraction = routerInteraction;\n    this._callingSettings = callingSettings;\n  }\n\n  private onTransfer = (telephonySessionId: string) => {\n    return this._routerInteraction.push(\n      `/transfer/${telephonySessionId}/active`,\n    );\n  };\n\n  getUIProps({ telephonySessionId }: { telephonySessionId: string }) {\n    const isWebphone =\n      this._callingSettings.callingMode === callingModes.webphone;\n    const currentSession = this._activeCallControl.getActiveSession(\n      telephonySessionId,\n    );\n    return {\n      isWebphone,\n      currentSession,\n      disableLinks:\n        !this._connectivityMonitor.connectivity || this._rateLimiter.throttling,\n      telephonySessionId,\n    };\n  }\n\n  getUIFunctions() {\n    return {\n      mute: this._activeCallControl.mute.bind(this._activeCallControl),\n      unmute: this._activeCallControl.unmute.bind(this._activeCallControl),\n      hangUp: this._activeCallControl.hangUp.bind(this._activeCallControl),\n      reject: this._activeCallControl.reject.bind(this._activeCallControl),\n      onHold: this._activeCallControl.hold.bind(this._activeCallControl),\n      onUnHold: this._activeCallControl.unhold.bind(this._activeCallControl),\n      startRecord: this._activeCallControl.startRecord.bind(\n        this._activeCallControl,\n      ),\n      stopRecord: this._activeCallControl.stopRecord.bind(\n        this._activeCallControl,\n      ),\n      onTransfer: this.onTransfer,\n      sendDTMF: (dtmfValue: string, telephonySessionId: string) =>\n        this._activeCallControl.sendDTMF(dtmfValue, telephonySessionId),\n    };\n  }\n}\n"],"file":"CallLogCallCtrlUI.js"}