{"version":3,"sources":["modules/CallLogCallCtrlUI/CallLogCallCtrlUI.ts"],"names":["CallLogCallCtrlUI","name","deps","activeCallControl","connectivityMonitor","rateLimiter","routerInteraction","callingSettings","forwardingNumber","callMonitor","options","_activeCallControl","_connectivityMonitor","_rateLimiter","_routerInteraction","_callingSettings","_forwardingNumber","_callMonitor","onTransfer","telephonySessionId","push","isWebphone","callingMode","callingModes","webphone","currentSession","getActiveSession","activeOnHoldCalls","activeCurrentCalls","otherActiveCalls","concat","filter","call","sessionId","length","disableLinks","connectivity","throttling","forwardingNumbers","mute","bind","unmute","hangUp","reject","onHold","hold","onUnHold","unhold","startRecord","stopRecord","sendDTMF","dtmfValue","answer","forward","phoneNumber","ignore","answerAndHold","answerAndEnd","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'CallLogCallCtrlUI',\n  deps: [\n    'ActiveCallControl',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    'RouterInteraction',\n    'CallingSettings',\n    'ForwardingNumber',\n    'CallMonitor',\n  ],\n})\nexport default class CallLogCallCtrlUI extends RcUIModule {\n  private _activeCallControl: any;\n  private _connectivityMonitor: any;\n  private _rateLimiter: any;\n  private _routerInteraction: any;\n  private _callingSettings: any;\n  private _forwardingNumber: any;\n  private _callMonitor: any;\n\n  constructor({\n    activeCallControl,\n    connectivityMonitor,\n    rateLimiter,\n    routerInteraction,\n    callingSettings,\n    forwardingNumber,\n    callMonitor,\n    ...options\n  }) {\n    super({ ...options });\n    this._activeCallControl = activeCallControl;\n    this._connectivityMonitor = connectivityMonitor;\n    this._rateLimiter = rateLimiter;\n    this._routerInteraction = routerInteraction;\n    this._callingSettings = callingSettings;\n    this._forwardingNumber = forwardingNumber;\n    this._callMonitor = callMonitor;\n  }\n\n  private onTransfer = (telephonySessionId: string) => {\n    return this._routerInteraction.push(\n      `/transfer/${telephonySessionId}/active`,\n    );\n  };\n\n  getUIProps({ telephonySessionId }: { telephonySessionId: string }) {\n    const isWebphone =\n      this._callingSettings.callingMode === callingModes.webphone;\n    const currentSession = this._activeCallControl.getActiveSession(\n      telephonySessionId,\n    );\n    const { activeOnHoldCalls, activeCurrentCalls } = this._callMonitor;\n    const otherActiveCalls =\n      currentSession &&\n      !!activeOnHoldCalls\n        .concat(activeCurrentCalls)\n        .filter((call: any) => call.sessionId !== currentSession.sessionId)\n        .length;\n    return {\n      isWebphone,\n      currentSession,\n      disableLinks:\n        !this._connectivityMonitor.connectivity || this._rateLimiter.throttling,\n      telephonySessionId,\n      forwardingNumbers: this._forwardingNumber.forwardingNumbers,\n      otherActiveCalls,\n    };\n  }\n\n  getUIFunctions() {\n    return {\n      mute: this._activeCallControl.mute.bind(this._activeCallControl),\n      unmute: this._activeCallControl.unmute.bind(this._activeCallControl),\n      hangUp: this._activeCallControl.hangUp.bind(this._activeCallControl),\n      reject: this._activeCallControl.reject.bind(this._activeCallControl),\n      onHold: this._activeCallControl.hold.bind(this._activeCallControl),\n      onUnHold: this._activeCallControl.unhold.bind(this._activeCallControl),\n      startRecord: this._activeCallControl.startRecord.bind(\n        this._activeCallControl,\n      ),\n      stopRecord: this._activeCallControl.stopRecord.bind(\n        this._activeCallControl,\n      ),\n      onTransfer: this.onTransfer,\n      sendDTMF: (dtmfValue: string, telephonySessionId: string) =>\n        this._activeCallControl.sendDTMF(dtmfValue, telephonySessionId),\n      answer: this._activeCallControl.answer.bind(this._activeCallControl),\n      forward: (phoneNumber: string, telephonySessionId: string) => {\n        if (phoneNumber === 'custom') {\n          this._routerInteraction.push(`/forward/${telephonySessionId}`);\n        } else {\n          this._activeCallControl.forward.call(\n            this._activeCallControl,\n            phoneNumber,\n            telephonySessionId,\n          );\n        }\n      },\n      ignore: this._activeCallControl.ignore.bind(this._activeCallControl),\n      answerAndHold: this._activeCallControl.answerAndHold.bind(\n        this._activeCallControl,\n      ),\n      answerAndEnd: this._activeCallControl.answerAndEnd.bind(\n        this._activeCallControl,\n      ),\n    };\n  }\n}\n"],"file":"CallLogCallCtrlUI.js"}