{"version":3,"sources":["modules/ActiveCallControlV2/helpers.ts"],"names":["isHangUp","code","callResults","disconnected","isRejectCode","direction","callDirections","inbound","activeCallControlStatus","setUp","proceeding","isOnRecording","recordings","length","recording","active","normalizeSession","session","party","creationTime","sessionId","partyId","id","from","to","status","muted","formatValue","telephonySessionId","phoneNumber","fromNumber","fromUserName","name","toNumber","toUserName","callStatus","startTime","Date","getTime","isOnMute","isForwarded","isOnFlip","isOnHold","hold","isOnTransfer","isReplied","isToVoicemail","lastHoldingTime","minimized","recordStatus","idle","removed","isReject","conflictError","message","response","conflictErrRgx","conflictMsgRgx","test","_text","isRinging","telephonySession","PartyStatusCode","setup","isHolding","isRecording","isForwardedToVoiceMail","isOnSetupStage","isAtMainNumberPromptToneStage","otherParties","outbound","answered","getInboundSwitchedParty","parties","result","reason","filterDisconnectedCalls","callDirection","inboundSwitchedParty","normalizeTelephonySession","accountId","data","extensionId","origin","requestOptions","serverId","voiceCallToken"],"mappings":"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","sourcesContent":["import { CallRecording } from '@rc-ex/core/definitions';\nimport {\n  Party,\n  PartyStatusCode,\n  Session as TelephonySession,\n} from 'ringcentral-call-control/lib/Session';\nimport { Session } from 'ringcentral-call/lib/Session';\n// eslint-disable-next-line import/no-named-as-default\nimport { find } from 'ramda';\nimport { recordStatus } from '../Webphone/recordStatus';\n// eslint-disable-next-line import/no-named-as-default\nimport callResults from '../../enums/callResults';\nimport callDirections, { callDirection } from '../../enums/callDirections';\n// eslint-disable-next-line import/no-named-as-default\nimport activeCallControlStatus from '../../enums/activeCallControlStatus';\nimport { mapTelephonyStatus } from '../CallMonitor/callMonitorHelper';\nimport { ActiveCallControlSessionData } from './ActiveCallControl.interface';\n\nexport function isHangUp(code: string) {\n  return code === callResults.disconnected;\n}\n\nexport function isRejectCode({\n  direction,\n  code,\n}: {\n  direction: string;\n  code: string;\n}) {\n  return (\n    direction === callDirections.inbound &&\n    (code === activeCallControlStatus.setUp ||\n      code === activeCallControlStatus.proceeding)\n  );\n}\n\nexport function isOnRecording(recordings: Array<CallRecording>) {\n  if (!recordings || recordings.length === 0) {\n    return false;\n  }\n  const recording = recordings[0];\n  return recording.active;\n}\n\n// TODO: add call type in callMonitor module\nexport function normalizeSession({\n  session,\n}: {\n  session: ActiveCallControlSessionData;\n}) {\n  const { party, creationTime, sessionId } = session;\n  const { id: partyId, direction, from, to, status, recordings, muted } = party;\n\n  const formatValue = {\n    telephonySessionId: session.id,\n    partyId,\n    direction,\n    from: from?.phoneNumber,\n    fromNumber: from?.phoneNumber,\n    fromUserName: from?.name,\n    to: to?.phoneNumber,\n    toNumber: to?.phoneNumber,\n    toUserName: to?.name,\n    id: session.id,\n    sessionId,\n    callStatus: mapTelephonyStatus(status?.code),\n    startTime: new Date(creationTime).getTime(),\n    creationTime,\n    isOnMute: muted,\n    isForwarded: false,\n    isOnFlip: false,\n    isOnHold: status?.code === activeCallControlStatus.hold,\n    isOnTransfer: false,\n    isReplied: false,\n    isToVoicemail: false,\n    lastHoldingTime: 0,\n    minimized: false,\n    recordStatus: isOnRecording(recordings)\n      ? recordStatus.recording\n      : recordStatus.idle,\n    removed: false,\n    isReject: isRejectCode({ direction, code: status?.code }),\n  };\n  return formatValue;\n}\n\nexport function conflictError({\n  message,\n  response,\n}: {\n  message: string;\n  response: any;\n}) {\n  const conflictErrRgx = /409/g;\n  const conflictMsgRgx = /Incorrect State/g;\n  return (\n    conflictErrRgx.test(message) &&\n    conflictMsgRgx.test(response && response._text)\n  );\n}\n\nexport function isRinging(telephonySession: any) {\n  return (\n    telephonySession &&\n    (telephonySession.status === PartyStatusCode.proceeding ||\n      telephonySession.status === PartyStatusCode.setup) &&\n    telephonySession.direction === callDirections.inbound\n  );\n}\n\nexport function isHolding(telephonySession: any) {\n  return telephonySession.status === PartyStatusCode.hold;\n}\n\nexport function isRecording(session: ActiveCallControlSessionData) {\n  const { party } = session;\n  return isOnRecording(party.recordings);\n}\n\nexport function isForwardedToVoiceMail(session: any) {\n  // TODO: fix this for call control js\n  // return session.status === PartyStatusCode.voicemail;\n  return session.status === 'Voicemail';\n}\n\nexport function isOnSetupStage(session: any) {\n  return session.status === PartyStatusCode.setup;\n}\n\n// call to main company number but still at inputting extension number prompt tone stage\nexport function isAtMainNumberPromptToneStage(session: Session) {\n  if (!session) return false;\n  const { otherParties = [], direction, status } = session;\n  if (\n    direction === callDirections.outbound &&\n    status === PartyStatusCode.answered &&\n    !otherParties.length\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function getInboundSwitchedParty(parties: Party[]) {\n  if (!parties.length) return false;\n  const result = find((party: Party) => {\n    return (\n      party.direction === callDirections.inbound &&\n      party.status.code === PartyStatusCode.disconnected &&\n      party.status.reason === 'CallSwitch'\n    );\n  }, parties);\n  return result;\n}\n\nexport function filterDisconnectedCalls(\n  session: Session | ActiveCallControlSessionData,\n) {\n  // workaround of bug:\n  // switch an inbound call then call direction will change to outbound\n  const { party, otherParties, direction, status } = session;\n  if (\n    direction === callDirection.outbound &&\n    status !== PartyStatusCode.disconnected\n  ) {\n    const inboundSwitchedParty = getInboundSwitchedParty(otherParties);\n    if (inboundSwitchedParty) {\n      party.direction = inboundSwitchedParty.direction;\n      party.to = inboundSwitchedParty.to;\n      party.from = inboundSwitchedParty.from;\n    }\n  }\n  return session.status !== PartyStatusCode.disconnected;\n}\n\nexport function normalizeTelephonySession(session?: TelephonySession) {\n  if (!session) {\n    return {};\n  }\n  return {\n    accountId: session.accountId,\n    creationTime: session.creationTime,\n    data: session.data,\n    extensionId: session.extensionId,\n    id: session.id,\n    origin: session.origin,\n    otherParties: session.otherParties,\n    parties: session.parties,\n    party: session.party,\n    recordings: session.recordings,\n    requestOptions: session.requestOptions,\n    serverId: session.serverId,\n    sessionId: session.sessionId,\n    voiceCallToken: session.voiceCallToken,\n  };\n}\n"],"file":"helpers.js"}