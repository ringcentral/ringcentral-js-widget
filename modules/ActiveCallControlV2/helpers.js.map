{"version":3,"sources":["modules/ActiveCallControlV2/helpers.ts"],"names":["isHangUp","code","callResults","disconnected","isRejectCode","direction","callDirections","inbound","activeCallControlStatus","setUp","proceeding","isOnRecording","recordings","length","recording","active","getSessionsParty","session","extensionId","parties","find","p","normalizeSession","call","party","partyId","id","from","to","status","muted","startTime","sessionId","formatValue","telephonySessionId","phoneNumber","fromNumber","fromUserName","name","toNumber","toUserName","callStatus","telephonyStatus","creationTime","isOnMute","isForwarded","isOnFlip","isOnHold","hold","isOnTransfer","isReplied","isToVoicemail","lastHoldingTime","minimized","recordStatus","idle","removed","isReject","conflictError","error","conflictErrRgx","conflictMsgRgx","test","message","errorCode","isRinging","telephonySession","PartyStatusCode","setup","isHolding","isRecording","isForwardedToVoiceMail","isOnSetupStage"],"mappings":"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","sourcesContent":["import { Session } from 'ringcentral-call/lib/Session';\nimport { CallRecording, Error } from '@rc-ex/core/definitions';\nimport {\n  SessionData,\n  Party,\n  PartyStatusCode,\n} from 'ringcentral-call-control/lib/Session';\n// eslint-disable-next-line import/no-named-as-default\nimport recordStatus from '../Webphone/recordStatus';\n// eslint-disable-next-line import/no-named-as-default\nimport callResults from '../../enums/callResults';\nimport callDirections from '../../enums/callDirections';\n// eslint-disable-next-line import/no-named-as-default\nimport activeCallControlStatus from '../../enums/activeCallControlStatus';\n\nexport function isHangUp(code: string) {\n  return code === callResults.disconnected;\n}\n\nexport function isRejectCode({\n  direction,\n  code,\n}: {\n  direction: string;\n  code: string;\n}) {\n  return (\n    direction === callDirections.inbound &&\n    (code === activeCallControlStatus.setUp ||\n      code === activeCallControlStatus.proceeding)\n  );\n}\n\nexport function isOnRecording(recordings: Array<CallRecording>) {\n  if (!recordings || recordings.length === 0) {\n    return false;\n  }\n  const recording = recordings[0];\n  return recording.active;\n}\n\nexport function getSessionsParty(session: SessionData) {\n  const extensionId = session.extensionId;\n  return session.parties.find((p: Party) => {\n    return p.extensionId === extensionId;\n  });\n}\n\n// TODO: add call type in callMonitor module\nexport function normalizeSession({\n  session,\n  call,\n}: {\n  session: SessionData;\n  call: any;\n}) {\n  const party: Party = getSessionsParty(session);\n  const { id: partyId, direction, from, to, status, recordings, muted } = party;\n\n  const { startTime, sessionId } = call;\n  const formatValue = {\n    telephonySessionId: session.id,\n    partyId,\n    direction,\n    from: from?.phoneNumber,\n    fromNumber: from?.phoneNumber,\n    fromUserName: from?.name,\n    to: to?.phoneNumber,\n    toNumber: to?.phoneNumber,\n    toUserName: to?.name,\n    id: session.id,\n    sessionId,\n    callStatus: call?.telephonyStatus,\n    startTime,\n    creationTime: startTime,\n    isOnMute: muted,\n    isForwarded: false,\n    isOnFlip: false,\n    isOnHold: status.code === activeCallControlStatus.hold,\n    isOnTransfer: false,\n    isReplied: false,\n    isToVoicemail: false,\n    lastHoldingTime: 0,\n    minimized: false,\n    recordStatus: isOnRecording(recordings)\n      ? recordStatus.recording\n      : recordStatus.idle,\n    removed: false,\n    isReject: isRejectCode({ direction, code: status.code }),\n  };\n  return formatValue;\n}\n\nexport async function conflictError(error: Error): Promise<boolean> {\n  const conflictErrRgx = /409/g;\n  const conflictMsgRgx = /Incorrect State/g;\n  return !!(\n    conflictErrRgx.test(error.message) && conflictMsgRgx.test(error.errorCode)\n  );\n}\n\nexport function isRinging(telephonySession: any) {\n  return (\n    telephonySession &&\n    (telephonySession.status === PartyStatusCode.proceeding ||\n      telephonySession.status === PartyStatusCode.setup) &&\n    telephonySession.direction === callDirections.inbound\n  );\n}\n\nexport function isHolding(telephonySession: any) {\n  return telephonySession.status === PartyStatusCode.hold;\n}\n\nexport function isRecording(telephonySession: any) {\n  const party: Party = getSessionsParty(telephonySession);\n  return isOnRecording(party.recordings);\n}\n\nexport function isForwardedToVoiceMail(session: any) {\n  // TODO: fix this for call control js\n  // return session.status === PartyStatusCode.voicemail;\n  return session.status === 'Voicemail';\n}\n\nexport function isOnSetupStage(session: any) {\n  return session.status === PartyStatusCode.setup;\n}\n"],"file":"helpers.js"}