{"version":3,"sources":["modules/ActiveCalls/index.js"],"names":["presenceRegExp","FETCH_DELAY","DEFAULT_TTL","ActiveCalls","deps","dep","optional","client","extensionFeatures","tabManager","fetchDelay","ttl","options","getDataReducer","subscriptionFilters","detailedPresence","subscriptionHandler","message","test","event","ownerId","_auth","_fetchDelay","fetchData","fetchFunction","params","_client","account","extension","activeCalls","list","console","warn","_extensionFeatures","ready","features","ReadExtensionCallLog","available","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG,yCAAvB;AACA,IAAMC,WAAW,GAAG,IAApB;AACA,IAAMC,WAAW,GAAG,IAAI,EAAJ,GAAS,IAA7B;AAEA;AACA;AACA;AACA;AACA;;IASqBC,W,WARpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAHI,EAIJ;AAAED,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAJI;AADA,CAAP,C;;;;;AASC;AACF;AACA;AACA;AACA;AACA;AACE,6BAOG;AAAA;;AAAA,QANDC,MAMC,QANDA,MAMC;AAAA,QALDC,iBAKC,QALDA,iBAKC;AAAA,QAJDC,UAIC,QAJDA,UAIC;AAAA,+BAHDC,UAGC;AAAA,QAHDA,UAGC,gCAHYT,WAGZ;AAAA,wBAFDU,GAEC;AAAA,QAFDA,GAEC,yBAFKT,WAEL;AAAA,QADEU,OACF;;AAAA;;AACD,8DACKA,OADL;AAEEL,MAAAA,MAAM,EAANA,MAFF;AAGEI,MAAAA,GAAG,EAAHA,GAHF;AAIEE,MAAAA,cAAc,EAAdA,qCAJF;AAKEC,MAAAA,mBAAmB,EAAE,CAACA,gCAAoBC,gBAArB,CALvB;AAMEC,MAAAA,mBAAmB;AAAA,2FAAE,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACfjB,cAAc,CAACkB,IAAf,CAAoBD,OAAO,CAACE,KAA5B,CADe;AAAA;AAAA;AAAA;;AAETC,kBAAAA,OAFS,GAEG,MAAKC,KAFR,CAETD,OAFS;AAAA;AAAA,yBAGX,uBAAM,MAAKE,WAAX,CAHW;;AAAA;AAAA,wBAIbF,OAAO,KAAK,MAAKC,KAAL,CAAWD,OAJV;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAKT,MAAKG,SAAL,EALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SANrB;AAeEC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,oDACb,2BAAU,UAACC,MAAD;AAAA,2BACR,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,WAAnC,GAAiDC,IAAjD,CAAsDL,MAAtD,CADQ;AAAA,mBAAV,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAff;;AADC;;AAqBDM,IAAAA,OAAO,CAACC,IAAR,CACE,iFADF;AAGA,UAAKV,WAAL,GAAmBZ,UAAnB;AACA,UAAKuB,kBAAL,GAA0BzB,iBAA1B;AAzBC;AA0BF;;;;kCAMa;AACZ,aAAO,gFAAuB,KAAKyB,kBAAL,CAAwBC,KAAtD;AACD;;;wBANW;AACV,aAAO,aAAP;AACD;;;wBAMoB;AAAA;;AACnB,gEACE,KAAKD,kBAAL,CAAwBE,QAD1B,qFACE,uBAAkCC,oBADpC,2DACE,uBAAwDC,SAD1D,yEACuE,KADvE;AAGD;;;;EAtDsCC,wB,yEAwDtCC,kB;;;;;;;WACO,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C","sourcesContent":["import { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\nimport DataFetcher from '../../lib/DataFetcher';\nimport sleep from '../../lib/sleep';\nimport fetchList from '../../lib/fetchList';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport { getDataReducer } from './getActiveCallsReducer';\n\nconst presenceRegExp = /\\/presence\\?detailedTelephonyState=true/;\nconst FETCH_DELAY = 1000;\nconst DEFAULT_TTL = 5 * 60 * 1000;\n\n/**\n * @deprecated Presence module with detailed mode also maintains an active calls list\n * @class\n * @description Active calls list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    { dep: 'TabManager', optional: true },\n    { dep: 'ActiveCallsOptions', optional: true },\n  ],\n})\nexport default class ActiveCalls extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Number} params.ttl - local cache timestamp, default 5 mins.\n   */\n  constructor({\n    client,\n    extensionFeatures,\n    tabManager, // do not pass tabManager to DataFetcher as data is not shared in localStorage\n    fetchDelay = FETCH_DELAY,\n    ttl = DEFAULT_TTL,\n    ...options\n  }) {\n    super({\n      ...options,\n      client,\n      ttl,\n      getDataReducer,\n      subscriptionFilters: [subscriptionFilters.detailedPresence],\n      subscriptionHandler: async (message) => {\n        if (presenceRegExp.test(message.event)) {\n          const { ownerId } = this._auth;\n          await sleep(this._fetchDelay);\n          if (ownerId === this._auth.ownerId) {\n            await this.fetchData();\n          }\n        }\n      },\n      fetchFunction: async () =>\n        fetchList((params) =>\n          this._client.account().extension().activeCalls().list(params),\n        ),\n    });\n    console.warn(\n      'ActiveCalls module is deprecated, please use Presence module with detailed mode',\n    );\n    this._fetchDelay = fetchDelay;\n    this._extensionFeatures = extensionFeatures;\n  }\n\n  get _name() {\n    return 'activeCalls';\n  }\n\n  _shouldInit() {\n    return super._shouldInit() && this._extensionFeatures.ready;\n  }\n\n  get _hasPermission() {\n    return (\n      this._extensionFeatures.features?.ReadExtensionCallLog?.available ?? false\n    );\n  }\n\n  @selector\n  calls = [() => this.data, (data) => data || []];\n}\n"],"file":"index.js"}