{"version":3,"sources":["modules/CallerIdV2/CallerId.ts"],"names":["CallerId","name","deps","dep","optional","data","byFeature","_source","DataSource","callerIdOptions","key","cleanOnReset","fetchFunction","_deps","client","service","platform","get","response","json","dataFetcherV2","register","byDevice","item","feature","callerId","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOaA,Q,WAJZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,UADA;AAENC,EAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,eAAX,EAA4B;AAAEC,IAAAA,GAAG,EAAE,iBAAP;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAA5B;AAFA,CAAP,C,UA0BE,oBAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAwB,CAACA,IAAD,CAAxB;AAAA,CAAT,C,UAKA,oBAAS;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAwB,CAACA,IAAD,CAAxB;AAAA,CAAT,C,UAKA,oBAAS;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,SAA6B,CAACA,SAAD,CAA7B;AAAA,CAAT,C;;;;;AA5BD,oBAAYJ,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AAGA,UAAKK,OAAL,GAAe,IAAIC,wBAAJ,iCACVN,IAAI,CAACO,eADK;AAEbC,MAAAA,GAAG,EAAE,UAFQ;AAGbC,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACU,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,CACpBC,QADoB,GAEpBC,GAFoB,CAEhB,+CAFgB,CADV;;AAAA;AACPC,kBAAAA,QADO;AAAA,mDAINA,QAAQ,CAACC,IAAT,EAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJA,OAAf;;AAWA,UAAKN,KAAL,CAAWO,aAAX,CAAyBC,QAAzB,CAAkC,MAAKd,OAAvC;;AAfsB;AAgBvB;;;;wBAGc;AAAA;;AACb,kDAAO,KAAKF,IAAZ,+CAAO,WAAWiB,QAAlB,qEAA8B,EAA9B;AACD;;;wBAGe;AAAA;;AACd,oDAAO,KAAKjB,IAAZ,gDAAO,YAAWC,SAAlB,uEAA+B,EAA/B;AACD;;;wBAGa;AAAA;;AACZ,sBAAO,iBAAK,UAACiB,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAL,KAAiB,SAA3B;AAAA,OAAL,EAA2C,KAAKlB,SAAhD,CAAP,0CAAO,MAA4DmB,QAAnE;AACD;;;;EAnC2BC,mC","sourcesContent":["import { ExtensionCallerIdInfo } from '@rc-ex/core/definitions';\nimport { computed } from '@ringcentral-integration/core';\nimport { find } from 'ramda';\n\nimport { Module } from '../../lib/di';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './CallerId.interface';\n\n@Module({\n  name: 'CallerId',\n  deps: ['Client', 'DataFetcherV2', { dep: 'CallerIdOptions', optional: true }],\n})\nexport class CallerId extends DataFetcherV2Consumer<\n  Deps,\n  ExtensionCallerIdInfo\n> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.callerIdOptions,\n      key: 'callerId',\n      cleanOnReset: true,\n      fetchFunction: async (): Promise<ExtensionCallerIdInfo> => {\n        const response = await this._deps.client.service\n          .platform()\n          .get('/restapi/v1.0/account/~/extension/~/caller-id');\n        return response.json();\n      },\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed(({ data }: CallerId) => [data])\n  get byDevice() {\n    return this.data?.byDevice ?? [];\n  }\n\n  @computed(({ data }: CallerId) => [data])\n  get byFeature() {\n    return this.data?.byFeature ?? [];\n  }\n\n  @computed(({ byFeature }: CallerId) => [byFeature])\n  get ringOut() {\n    return find((item) => item.feature === 'RingOut', this.byFeature)?.callerId;\n  }\n}\n"],"file":"CallerId.js"}