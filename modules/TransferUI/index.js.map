{"version":3,"sources":["modules/TransferUI/index.ts"],"names":["TransferUI","name","deps","dep","optional","locale","activeCallControl","webphone","contactSearch","regionSettings","routerInteraction","options","_locale","_activeCallControl","_webphone","_contactSearch","_regionSettings","_routerInteraction","params","sessionId","type","enableWarmTransfer","session","activeSession","sessions","find","id","currentLocale","searchContactList","sortedResult","controlBusy","busy","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","phoneTypeRenderer","setActiveSessionId","onTransfer","transferNumber","transfer","onWarmTransfer","startWarmTransfer","onBack","goBack","onCallEnd","replace","formatPhone","phoneNumber","areaCode","countryCode","searchContact","searchString","debouncedSearch","RcUIModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,U,WAXpB,wBAAO;AACNC,EAAAA,IAAI,EAAE,YADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,gBAFI,EAGJ,mBAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,eAAP;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAJI,EAKJ;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GALI,EAMJ;AAAED,IAAAA,GAAG,EAAE,mBAAP;AAA4BC,IAAAA,QAAQ,EAAE;AAAtC,GANI;AAFA,CAAP,C;;;;;AAYC,4BAQG;AAAA;;AAAA,QAPDC,MAOC,QAPDA,MAOC;AAAA,QANDC,iBAMC,QANDA,iBAMC;AAAA,QALDC,QAKC,QALDA,QAKC;AAAA,QAJDC,aAIC,QAJDA,aAIC;AAAA,QAHDC,cAGC,QAHDA,cAGC;AAAA,QAFDC,iBAEC,QAFDA,iBAEC;AAAA,QADEC,OACF;;AAAA;;AACD,gDACKA,OADL;AAGA,UAAKC,OAAL,GAAeP,MAAf;AACA,UAAKQ,kBAAL,GAA0BP,iBAA1B;AACA,UAAKQ,SAAL,GAAiBP,QAAjB;AACA,UAAKQ,cAAL,GAAsBP,aAAtB;AACA,UAAKQ,eAAL,GAAuBP,cAAvB;AACA,UAAKQ,kBAAL,GAA0BP,iBAA1B;AATC;AAUF;;;;sCAKE;AAAA,+BAFDQ,MAEC;AAAA,UAFSC,SAET,gBAFSA,SAET;AAAA,2CAFoBC,IAEpB;AAAA,UAFoBA,IAEpB,kCAF2B,QAE3B;AAAA,wCADDC,kBACC;AAAA,UADDA,kBACC,sCADoB,KACpB;AACD,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAIF,IAAI,KAAK,QAAT,IAAqB,KAAKP,kBAA9B,EAAkD;AAChDS,QAAAA,OAAO,GAAG,KAAKT,kBAAL,CAAwBU,aAAlC;AACD,OAFD,MAEO,IAAIH,IAAI,KAAK,UAAT,IAAuB,KAAKN,SAAhC,EAA2C;AAChDQ,QAAAA,OAAO,GAAG,KAAKR,SAAL,CAAeU,QAAf,CAAwBC,IAAxB,CACR,UAACH,OAAD;AAAA,iBAAaA,OAAO,CAACI,EAAR,KAAeP,SAA5B;AAAA,SADQ,CAAV;AAGD;;AAED,aAAO;AACLA,QAAAA,SAAS,EAATA,SADK;AAELQ,QAAAA,aAAa,EAAE,KAAKf,OAAL,CAAae,aAFvB;AAGLC,QAAAA,iBAAiB,EACf,KAAKb,cAAL,IAAuB,KAAKA,cAAL,CAAoBc,YAJxC;AAKLP,QAAAA,OAAO,EAAPA,OALK;AAMLQ,QAAAA,WAAW,EACR,KAAKjB,kBAAL,IAA2B,KAAKA,kBAAL,CAAwBkB,IAApD,IAA6D,KAP1D;AAQLV,QAAAA,kBAAkB,EAChBA,kBAAkB,IAAID,IAAI,KAAK,UAA/B,IAA6C,CAAC,CAAC,KAAKN;AATjD,OAAP;AAWD;;;0CAQE;AAAA;;AAAA,oCALDI,MAKC,CALSE,IAKT;AAAA,UALSA,IAKT,kCALgB,QAKhB;AAAA,UAJDY,uBAIC,SAJDA,uBAIC;AAAA,UAHDC,6BAGC,SAHDA,6BAGC;AAAA,UAFDC,8BAEC,SAFDA,8BAEC;AAAA,UADDC,iBACC,SADDA,iBACC;AACD,aAAO;AACLC,QAAAA,kBAAkB,EAAE,4BAACjB,SAAD,EAAuB;AACzC,cAAIC,IAAI,KAAK,QAAT,IAAqB,MAAI,CAACP,kBAA9B,EAAkD;AAChD,YAAA,MAAI,CAACA,kBAAL,CAAwBuB,kBAAxB,CAA2CjB,SAA3C;AACD;AACF,SALI;AAMLkB,QAAAA,UAAU,EAAE,oBAACC,cAAD,EAAyBnB,SAAzB,EAA+C;AACzD,cAAIC,IAAI,KAAK,QAAT,IAAqB,MAAI,CAACP,kBAA9B,EAAkD;AAChD,YAAA,MAAI,CAACA,kBAAL,CAAwB0B,QAAxB,CAAiCD,cAAjC,EAAiDnB,SAAjD;AACD,WAFD,MAEO,IAAIC,IAAI,KAAK,UAAT,IAAuB,MAAI,CAACN,SAAhC,EAA2C;AAChD,YAAA,MAAI,CAACA,SAAL,CAAeyB,QAAf,CAAwBD,cAAxB,EAAwCnB,SAAxC;AACD;AACF,SAZI;AAaLqB,QAAAA,cAAc,EAAE,wBAACF,cAAD,EAAyBnB,SAAzB,EAA+C;AAC7D,cAAI,MAAI,CAACL,SAAT,EAAoB;AAClB,YAAA,MAAI,CAACA,SAAL,CAAe2B,iBAAf,CAAiCH,cAAjC,EAAiDnB,SAAjD;AACD;AACF,SAjBI;AAkBLuB,QAAAA,MAAM,EAAE,kBAAM;AACZ,UAAA,MAAI,CAACzB,kBAAL,CAAwB0B,MAAxB;AACD,SApBI;AAqBLC,QAAAA,SAAS,EAAE,qBAAM;AACf,cAAIxB,IAAI,KAAK,QAAb,EAAuB;AACrB,YAAA,MAAI,CAACH,kBAAL,CAAwB4B,OAAxB,CAAgC,QAAhC;AACD,WAFD,MAEO;AACL,YAAA,MAAI,CAAC5B,kBAAL,CAAwB4B,OAAxB,CAAgC,SAAhC;AACD;AACF,SA3BI;AA4BLC,QAAAA,WAAW,EAAE,qBAACC,WAAD;AAAA,iBACX,8BAAa;AACXA,YAAAA,WAAW,EAAXA,WADW;AAEXC,YAAAA,QAAQ,EAAE,MAAI,CAAChC,eAAL,CAAqBgC,QAFpB;AAGXC,YAAAA,WAAW,EAAE,MAAI,CAACjC,eAAL,CAAqBiC;AAHvB,WAAb,CADW;AAAA,SA5BR;AAkCLC,QAAAA,aAAa,EAAE,uBAACC,YAAD,EAAkB;AAC/B,cAAI,MAAI,CAACpC,cAAT,EAAyB;AACvB,YAAA,MAAI,CAACA,cAAL,CAAoBqC,eAApB,CAAoC;AAAED,cAAAA,YAAY,EAAZA;AAAF,aAApC;AACD;AACF,SAtCI;AAuCLhB,QAAAA,iBAAiB,EAAjBA,iBAvCK;AAwCLH,QAAAA,uBAAuB,EAAvBA,uBAxCK;AAyCLC,QAAAA,6BAA6B,EAA7BA,6BAzCK;AA0CLC,QAAAA,8BAA8B,EAA9BA;AA1CK,OAAP;AA4CD;;;;EAlGqCmB,uB","sourcesContent":["import Module from 'ringcentral-integration/lib/di/decorators/module';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'TransferUI',\n  deps: [\n    'Locale',\n    'RegionSettings',\n    'RouterInteraction',\n    { dep: 'ContactSearch', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'ActiveCallControl', optional: true },\n  ],\n})\nexport default class TransferUI extends RcUIModule {\n  constructor({\n    locale,\n    activeCallControl,\n    webphone,\n    contactSearch,\n    regionSettings,\n    routerInteraction,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._locale = locale;\n    this._activeCallControl = activeCallControl;\n    this._webphone = webphone;\n    this._contactSearch = contactSearch;\n    this._regionSettings = regionSettings;\n    this._routerInteraction = routerInteraction;\n  }\n\n  getUIProps({\n    params: { sessionId, type = 'active' },\n    enableWarmTransfer = false,\n  }) {\n    let session = null;\n    if (type === 'active' && this._activeCallControl) {\n      session = this._activeCallControl.activeSession;\n    } else if (type === 'webphone' && this._webphone) {\n      session = this._webphone.sessions.find(\n        (session) => session.id === sessionId,\n      );\n    }\n\n    return {\n      sessionId,\n      currentLocale: this._locale.currentLocale,\n      searchContactList:\n        this._contactSearch && this._contactSearch.sortedResult,\n      session,\n      controlBusy:\n        (this._activeCallControl && this._activeCallControl.busy) || false,\n      enableWarmTransfer:\n        enableWarmTransfer && type === 'webphone' && !!this._webphone,\n    };\n  }\n\n  getUIFunctions({\n    params: { type = 'active' },\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n    phoneTypeRenderer,\n  }) {\n    return {\n      setActiveSessionId: (sessionId: string) => {\n        if (type === 'active' && this._activeCallControl) {\n          this._activeCallControl.setActiveSessionId(sessionId);\n        }\n      },\n      onTransfer: (transferNumber: string, sessionId: string) => {\n        if (type === 'active' && this._activeCallControl) {\n          this._activeCallControl.transfer(transferNumber, sessionId);\n        } else if (type === 'webphone' && this._webphone) {\n          this._webphone.transfer(transferNumber, sessionId);\n        }\n      },\n      onWarmTransfer: (transferNumber: string, sessionId: string) => {\n        if (this._webphone) {\n          this._webphone.startWarmTransfer(transferNumber, sessionId);\n        }\n      },\n      onBack: () => {\n        this._routerInteraction.goBack();\n      },\n      onCallEnd: () => {\n        if (type === 'active') {\n          this._routerInteraction.replace('/calls');\n        } else {\n          this._routerInteraction.replace('/dialer');\n        }\n      },\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._regionSettings.areaCode,\n          countryCode: this._regionSettings.countryCode,\n        }),\n      searchContact: (searchString) => {\n        if (this._contactSearch) {\n          this._contactSearch.debouncedSearch({ searchString });\n        }\n      },\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      recipientsContactInfoRenderer,\n      recipientsContactPhoneRenderer,\n    };\n  }\n}\n"],"file":"index.js"}