{"version":3,"sources":["modules/RingCentralExtensions/RingCentralExtensions.ts"],"names":["RingCentralExtensions","name","deps","dep","optional","_sdk","_core","_webSocketExtension","_currentWs","_onSignedIn","_setLoggedIn","_onSignedOff","_syncWsStatusHandler","_syncWebSocketReadyState","CoreExtension","debugMode","debugExtension","DebugExtension","_deps","ringCentralExtensionsOptions","debugOptions","installExtension","client","service","rcSdkExtension","RcSdkExtension","rcSdk","WebSocketExtension","webSocketOptions","console","warn","platform","addListener","events","loginSuccess","loginError","logoutSuccess","logoutError","refreshSuccess","refreshError","removeListener","_setupInfra","_exposeConnectionEvents","options","autoRecover","eventEmitter","on","Events","autoRecoverSuccess","autoRecoverFailed","sleepDetector","detected","ready","recoverWebSocketConnection","isLoggedIn","_bindPlatformEvents","loggedIn","_unbindPlatformEvents","recover","revoke","removeEventListener","ws","addEventListener","readyState","WebSocket","CONNECTING","webSocketReadyState","webSocketReadyStates","connecting","OPEN","open","CLOSING","closing","CLOSED","closed","log","RcModuleV2","action","state","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAMA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcaA,qB,WARZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,uBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ;AAAEC,IAAAA,GAAG,EAAE,eAAP;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAFI,EAGJ;AAAED,IAAAA,GAAG,EAAE,8BAAP;AAAuCC,IAAAA,QAAQ,EAAE;AAAjD,GAHI;AAFA,CAAP,C;;;;;AASC;AAIA;AAGA,iCAAYF,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AADsB,UANhBG,IAMgB;AAAA,UALhBC,KAKgB;AAAA,UAJhBC,mBAIgB;AAAA,UAFhBC,UAEgB;;AAAA,UAmChBC,WAnCgB,GAmCF,YAAM;AAC1B,YAAKC,YAAL,CAAkB,IAAlB;AACD,KArCuB;;AAAA,UAuChBC,YAvCgB,GAuCD,YAAM;AAC3B,YAAKD,YAAL,CAAkB,KAAlB;AACD,KAzCuB;;AAAA;;AAAA,UAyJhBE,oBAzJgB,GAyJO,YAAM;AACnC,YAAKC,wBAAL;AACD,KA3JuB;;AAAA;;AAAA;AAIvB;;;;;;;;;;;;;;AAGC,qBAAKP,KAAL,GAAa,IAAIQ,gBAAJ,EAAb,C,CAEA;;qBACI,KAAKC,S;;;;;AACDC,gBAAAA,c,GAAiB,IAAIC,iBAAJ,0BACrB,KAAKC,KAAL,CAAWC,4BADU,0DACrB,sBAAyCC,YADpB,C;;uBAGjB,KAAKd,KAAL,CAAWe,gBAAX,CAA4BL,cAA5B,C;;;AAGR;AACA,qBAAKX,IAAL,GAAY,KAAKa,KAAL,CAAWI,MAAX,CAAkBC,OAA9B;AACMC,gBAAAA,c,GAAiB,IAAIC,iBAAJ,CAAmB;AAAEC,kBAAAA,KAAK,EAAE,KAAKrB;AAAd,iBAAnB,C;;uBACjB,KAAKC,KAAL,CAAWe,gBAAX,CAA4BG,cAA5B,C;;;AAEN;AACA,qBAAKjB,mBAAL,GAA2B,IAAIoB,cAAJ,2BACzB,KAAKT,KAAL,CAAWC,4BADc,2DACzB,uBAAyCS,gBADhB,CAA3B;;;uBAIQ,KAAKtB,KAAL,CAAWe,gBAAX,CAA4B,KAAKd,mBAAjC,C;;;;;;;;;AAEN;AACA;AACAsB,gBAAAA,OAAO,CAACC,IAAR,CAAa,oDAAb;;;;;;;;;;;;;;;;;;0CAY0B;AAC5B,UAAMC,QAAQ,GAAG,KAAK1B,IAAL,CAAU0B,QAAV,EAAjB;;AACAA,MAAAA,QAAQ,CAACC,WAAT,CAAqBD,QAAQ,CAACE,MAAT,CAAgBC,YAArC,EAAmD,KAAKzB,WAAxD;AACAsB,MAAAA,QAAQ,CAACC,WAAT,CAAqBD,QAAQ,CAACE,MAAT,CAAgBE,UAArC,EAAiD,KAAKxB,YAAtD;AACAoB,MAAAA,QAAQ,CAACC,WAAT,CAAqBD,QAAQ,CAACE,MAAT,CAAgBG,aAArC,EAAoD,KAAKzB,YAAzD;AACAoB,MAAAA,QAAQ,CAACC,WAAT,CAAqBD,QAAQ,CAACE,MAAT,CAAgBI,WAArC,EAAkD,KAAK1B,YAAvD;AACAoB,MAAAA,QAAQ,CAACC,WAAT,CAAqBD,QAAQ,CAACE,MAAT,CAAgBK,cAArC,EAAqD,KAAK7B,WAA1D;AACAsB,MAAAA,QAAQ,CAACC,WAAT,CAAqBD,QAAQ,CAACE,MAAT,CAAgBM,YAArC,EAAmD,KAAK5B,YAAxD;AACD;;;4CAE+B;AAC9B,UAAMoB,QAAQ,GAAG,KAAK1B,IAAL,CAAU0B,QAAV,EAAjB;;AACAA,MAAAA,QAAQ,CAACS,cAAT,CAAwBT,QAAQ,CAACE,MAAT,CAAgBC,YAAxC,EAAsD,KAAKzB,WAA3D;AACAsB,MAAAA,QAAQ,CAACS,cAAT,CAAwBT,QAAQ,CAACE,MAAT,CAAgBE,UAAxC,EAAoD,KAAKxB,YAAzD;AACAoB,MAAAA,QAAQ,CAACS,cAAT,CAAwBT,QAAQ,CAACE,MAAT,CAAgBG,aAAxC,EAAuD,KAAKzB,YAA5D;AACAoB,MAAAA,QAAQ,CAACS,cAAT,CAAwBT,QAAQ,CAACE,MAAT,CAAgBI,WAAxC,EAAqD,KAAK1B,YAA1D;AACAoB,MAAAA,QAAQ,CAACS,cAAT,CAAwBT,QAAQ,CAACE,MAAT,CAAgBK,cAAxC,EAAwD,KAAK7B,WAA7D;AACAsB,MAAAA,QAAQ,CAACS,cAAT,CAAwBT,QAAQ,CAACE,MAAT,CAAgBM,YAAxC,EAAsD,KAAK5B,YAA3D;AACD;;;;;;;;;;;;;uBAGO,KAAK8B,WAAL,E;;;AAEN;AACA,qBAAKC,uBAAL;;AACA,oBAAI,KAAKnC,mBAAL,CAAyBoC,OAAzB,CAAiCC,WAArC,EAAkD;AAChD,uBAAKrC,mBAAL,CAAyBsC,YAAzB,CAAsCC,EAAtC,CACEC,WAAOC,kBADT,EAEE,YAAM;AACJ,oBAAA,MAAI,CAACN,uBAAL;AACD,mBAJH;;AAMA,uBAAKnC,mBAAL,CAAyBsC,YAAzB,CAAsCC,EAAtC,CAAyCC,WAAOE,iBAAhD,EAAmE,YAAM;AACvE,oBAAA,MAAI,CAACP,uBAAL;AACD,mBAFD;AAGD,iB,CAED;;;AACA,8CAAKxB,KAAL,CAAWgC,aAAX,gFAA0BJ,EAA1B,CACE,KAAK5B,KAAL,CAAWgC,aAAX,CAAyBjB,MAAzB,CAAgCkB,QADlC,uEAEE;AAAA;AAAA;AAAA;AAAA;AAAA,+BACM,MAAI,CAACC,KADX;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAEU,MAAI,CAACC,0BAAL,EAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AASA,kCACE,IADF,EAEE;AAAA,yBAAM,MAAI,CAACC,UAAX;AAAA,iBAFF,EAGE,YAAM;AACJ,sBAAI,CAAC,MAAI,CAACF,KAAV,EAAiB;AACf;AACD;;AACD,sBAAI,MAAI,CAACE,UAAT,EAAqB;AACnB,oBAAA,MAAI,CAACD,0BAAL;AACD,mBAFD,MAEO,CACL;AACD;AACF,iBAZH;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,qBAAKE,mBAAL;;AACMxB,gBAAAA,Q,GAAW,KAAK1B,IAAL,CAAU0B,QAAV,E;;uBACMA,QAAQ,CAACyB,QAAT,E;;;AAAjBA,gBAAAA,Q;;AACN,qBAAK9C,YAAL,CAAkB8C,QAAlB;;;;;;;;;;;;;;;;;;;;;;;;AAIA,qBAAKC,qBAAL;;;;;;;;;;;;;;;;;;iCAImBD,Q,EAAmB;AACtC,WAAKF,UAAL,GAAkBE,QAAlB;AACD;;;;;;;;;;uBAOO,KAAKjD,mBAAL,CAAyBmD,OAAzB,E;;;AACN,qBAAKhB,uBAAL;;;;;;;;;;;;;;;;;;;;;;;;;uBAKM,KAAKnC,mBAAL,CAAyBoD,MAAzB,E;;;AACN,qBAAKjB,uBAAL;;;;;;;;;;;;;;;;;;8CAGgC;AAChC,UAAI,KAAKlC,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBoD,mBAAhB,CAAoC,OAApC,EAA6C,KAAKhD,oBAAlD;;AACA,aAAKJ,UAAL,CAAgBoD,mBAAhB,CAAoC,MAApC,EAA4C,KAAKhD,oBAAjD;;AACA,aAAKJ,UAAL,CAAgBoD,mBAAhB,CAAoC,OAApC,EAA6C,KAAKhD,oBAAlD;;AACA,aAAKJ,UAAL,GAAkB,IAAlB;AACD;;AACD,WAAKA,UAAL,GAAkB,KAAKD,mBAAL,CAAyBsD,EAA3C;;AACA,UAAI,KAAKrD,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBsD,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKlD,oBAA/C;;AACA,aAAKJ,UAAL,CAAgBsD,gBAAhB,CAAiC,MAAjC,EAAyC,KAAKlD,oBAA9C;;AACA,aAAKJ,UAAL,CAAgBsD,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKlD,oBAA/C;AACD;;AACD,WAAKC,wBAAL;AACD;;;+CAOkC;AAAA;;AACjC,UAAMkD,UAAU,4BAAG,KAAKxD,mBAAL,CAAyBsD,EAA5B,0DAAG,sBAA6BE,UAAhD;;AACA,cAAQA,UAAR;AACE,aAAKC,yBAAUC,UAAf;AACE,eAAKC,mBAAL,GAA2BC,2CAAqBC,UAAhD;AACA;;AACF,aAAKJ,yBAAUK,IAAf;AACE,eAAKH,mBAAL,GAA2BC,2CAAqBG,IAAhD;AACA;;AACF,aAAKN,yBAAUO,OAAf;AACE,eAAKL,mBAAL,GAA2BC,2CAAqBK,OAAhD;AACA;;AACF,aAAKR,yBAAUS,MAAf;AACE,eAAKP,mBAAL,GAA2BC,2CAAqBO,MAAhD;AACA;;AACF;AACE,eAAKR,mBAAL,GAA2B,IAA3B;AACA;AAfJ;;AAiBArC,MAAAA,OAAO,CAAC8C,GAAR,2DACqD,KAAKT,mBAD1D;AAGD;;;wBAKwB;AAAA;;AACvB,iEAAO,KAAKhD,KAAL,CAAWC,4BAAlB,2DAAO,uBAAyCJ,SAAhD,2EAA6D,KAA7D;AACD;;;wBAEc;AACb,aAAO,KAAKV,IAAZ;AACD;;;wBAEyB;AACxB,aAAO,KAAKC,KAAZ;AACD;;;wBAE4C;AAC3C,aAAO,KAAKC,mBAAZ;AACD;;;;EA/MwCqE,iB,0EA6HxCC,a,qKAKAC,Y;;;;;WACqB,K;;gFAErBC,mB,oLAMAA,mB,kLA0BAF,a,2LAyBAC,Y;;;;;WAC2C,I","sourcesContent":["import { SDK } from '@ringcentral/sdk';\nimport CoreExtension from '@rc-ex/core';\nimport DebugExtension from '@rc-ex/debug';\nimport RcSdkExtension from '@rc-ex/rcsdk';\nimport WebSocketExtension, { Events } from '@rc-ex/ws';\n\nimport {\n  RcModuleV2,\n  state,\n  action,\n  watch,\n} from '@ringcentral-integration/core';\nimport WebSocket from 'isomorphic-ws';\nimport proxify from '../../lib/proxy/proxify';\nimport { Module } from '../../lib/di';\nimport {\n  WebSocketReadyState,\n  webSocketReadyStates,\n} from './webSocketReadyStates';\nimport { Deps } from './RingCentralExtensions.interface';\n\n@Module({\n  name: 'RingCentralExtensions',\n  deps: [\n    'Client',\n    { dep: 'SleepDetector', optional: true },\n    { dep: 'RingCentralExtensionsOptions', optional: true },\n  ],\n})\nexport class RingCentralExtensions extends RcModuleV2<Deps> {\n  // infra\n  private _sdk: SDK;\n  private _core: CoreExtension;\n  private _webSocketExtension: WebSocketExtension;\n  // refs\n  private _currentWs: WebSocket;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  private async _setupInfra() {\n    this._core = new CoreExtension();\n\n    // install DebugExtension\n    if (this.debugMode) {\n      const debugExtension = new DebugExtension(\n        this._deps.ringCentralExtensionsOptions?.debugOptions,\n      );\n      await this._core.installExtension(debugExtension);\n    }\n\n    // install RcSdkExtension\n    this._sdk = this._deps.client.service;\n    const rcSdkExtension = new RcSdkExtension({ rcSdk: this._sdk });\n    await this._core.installExtension(rcSdkExtension);\n\n    // install WebSocketExtension\n    this._webSocketExtension = new WebSocketExtension(\n      this._deps.ringCentralExtensionsOptions?.webSocketOptions,\n    );\n    try {\n      await this._core.installExtension(this._webSocketExtension);\n    } catch (ex) {\n      // It tries to establish connection on install.\n      // Catch the connection issue and ignore.\n      console.warn('[RingCentralExtensions] Establish websocket failed', ex);\n    }\n  }\n\n  private _onSignedIn = () => {\n    this._setLoggedIn(true);\n  };\n\n  private _onSignedOff = () => {\n    this._setLoggedIn(false);\n  };\n\n  private _bindPlatformEvents() {\n    const platform = this._sdk.platform();\n    platform.addListener(platform.events.loginSuccess, this._onSignedIn);\n    platform.addListener(platform.events.loginError, this._onSignedOff);\n    platform.addListener(platform.events.logoutSuccess, this._onSignedOff);\n    platform.addListener(platform.events.logoutError, this._onSignedOff);\n    platform.addListener(platform.events.refreshSuccess, this._onSignedIn);\n    platform.addListener(platform.events.refreshError, this._onSignedOff);\n  }\n\n  private _unbindPlatformEvents() {\n    const platform = this._sdk.platform();\n    platform.removeListener(platform.events.loginSuccess, this._onSignedIn);\n    platform.removeListener(platform.events.loginError, this._onSignedOff);\n    platform.removeListener(platform.events.logoutSuccess, this._onSignedOff);\n    platform.removeListener(platform.events.logoutError, this._onSignedOff);\n    platform.removeListener(platform.events.refreshSuccess, this._onSignedIn);\n    platform.removeListener(platform.events.refreshError, this._onSignedOff);\n  }\n\n  async onInitOnce() {\n    await this._setupInfra();\n\n    // expose WebSocket events\n    this._exposeConnectionEvents();\n    if (this._webSocketExtension.options.autoRecover) {\n      this._webSocketExtension.eventEmitter.on(\n        Events.autoRecoverSuccess,\n        () => {\n          this._exposeConnectionEvents();\n        },\n      );\n      this._webSocketExtension.eventEmitter.on(Events.autoRecoverFailed, () => {\n        this._exposeConnectionEvents();\n      });\n    }\n\n    // register SleepDetector\n    this._deps.sleepDetector?.on(\n      this._deps.sleepDetector.events.detected,\n      async () => {\n        if (this.ready) {\n          await this.recoverWebSocketConnection();\n        }\n      },\n    );\n\n    watch(\n      this,\n      () => this.isLoggedIn,\n      () => {\n        if (!this.ready) {\n          return;\n        }\n        if (this.isLoggedIn) {\n          this.recoverWebSocketConnection();\n        } else {\n          // this.revokeWebSocketConnection();\n        }\n      },\n    );\n  }\n\n  async onInit() {\n    this._bindPlatformEvents();\n    const platform = this._sdk.platform();\n    const loggedIn = await platform.loggedIn();\n    this._setLoggedIn(loggedIn);\n  }\n\n  async onReset() {\n    this._unbindPlatformEvents();\n  }\n\n  @action\n  private _setLoggedIn(loggedIn: boolean) {\n    this.isLoggedIn = loggedIn;\n  }\n\n  @state\n  isLoggedIn: boolean = false;\n\n  @proxify\n  async recoverWebSocketConnection() {\n    await this._webSocketExtension.recover();\n    this._exposeConnectionEvents();\n  }\n\n  @proxify\n  async revokeWebSocketConnection() {\n    await this._webSocketExtension.revoke();\n    this._exposeConnectionEvents();\n  }\n\n  private _exposeConnectionEvents() {\n    if (this._currentWs) {\n      this._currentWs.removeEventListener('close', this._syncWsStatusHandler);\n      this._currentWs.removeEventListener('open', this._syncWsStatusHandler);\n      this._currentWs.removeEventListener('error', this._syncWsStatusHandler);\n      this._currentWs = null;\n    }\n    this._currentWs = this._webSocketExtension.ws;\n    if (this._currentWs) {\n      this._currentWs.addEventListener('close', this._syncWsStatusHandler);\n      this._currentWs.addEventListener('open', this._syncWsStatusHandler);\n      this._currentWs.addEventListener('error', this._syncWsStatusHandler);\n    }\n    this._syncWebSocketReadyState();\n  }\n\n  private _syncWsStatusHandler = () => {\n    this._syncWebSocketReadyState();\n  };\n\n  @action\n  private _syncWebSocketReadyState() {\n    const readyState = this._webSocketExtension.ws?.readyState;\n    switch (readyState) {\n      case WebSocket.CONNECTING:\n        this.webSocketReadyState = webSocketReadyStates.connecting;\n        break;\n      case WebSocket.OPEN:\n        this.webSocketReadyState = webSocketReadyStates.open;\n        break;\n      case WebSocket.CLOSING:\n        this.webSocketReadyState = webSocketReadyStates.closing;\n        break;\n      case WebSocket.CLOSED:\n        this.webSocketReadyState = webSocketReadyStates.closed;\n        break;\n      default:\n        this.webSocketReadyState = null;\n        break;\n    }\n    console.log(\n      `[RingCentralExtensions] > webSocketReadyState > ${this.webSocketReadyState}`,\n    );\n  }\n\n  @state\n  webSocketReadyState?: WebSocketReadyState = null;\n\n  get debugMode(): boolean {\n    return this._deps.ringCentralExtensionsOptions?.debugMode ?? false;\n  }\n\n  get sdk(): SDK {\n    return this._sdk;\n  }\n\n  get core(): CoreExtension {\n    return this._core;\n  }\n\n  get webSocketExtension(): WebSocketExtension {\n    return this._webSocketExtension;\n  }\n}\n"],"file":"RingCentralExtensions.js"}