{"version":3,"sources":["modules/DialingPlanV2/DialingPlan.ts"],"names":["DialingPlan","name","deps","dep","optional","data","dialingPlanOptions","polling","_source","DataSource","key","cleanOnReset","fetchFunction","params","_deps","client","service","platform","get","response","json","readyCheckFunction","rolesAndPermissions","ready","permissionCheckFunction","permissions","ReadCompanyInfo","dataFetcherV2","register","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,W,WATZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,aADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ,eAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAJI;AAFA,CAAP,C,UAkCE,oBAAsB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc,CAACA,IAAD,CAAd;AAAA,CAAtB,C;;;;;AAxBD,uBAAYH,IAAZ,EAAwB;AAAA;;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;;AADsB,yCAIKA,IAAI,CAACI,kBAJV,yEAIgC,EAJhC;AAAA,8BAIdC,OAJc;AAAA,QAIdA,OAJc,8BAIJ,IAJI;;AAKtB,UAAKC,OAAL,GAAe,IAAIC,wBAAJ,iCACVP,IAAI,CAACI,kBADK;AAEbI,MAAAA,GAAG,EAAE,aAFQ;AAGbH,MAAAA,OAAO,EAAPA,OAHa;AAIbI,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,oDACb;AAAA,wFAAU,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACe,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,CACpBC,QADoB,GAEpBC,GAFoB,CAEhB,sCAFgB,EAEwBL,MAFxB,CADf;;AAAA;AACFM,8BAAAA,QADE;AAAA,+DAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAV;;AAAA;AAAA;AAAA;AAAA,sBADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SALA;AAYbC,MAAAA,kBAAkB,EAAE;AAAA,eAAM,MAAKP,KAAL,CAAWQ,mBAAX,CAA+BC,KAArC;AAAA,OAZP;AAabC,MAAAA,uBAAuB,EAAE;AAAA,eACvB,CAAC,CAAC,MAAKV,KAAL,CAAWQ,mBAAX,CAA+BG,WAA/B,CAA2CC,eADtB;AAAA;AAbZ,OAAf;;AAgBA,UAAKZ,KAAL,CAAWa,aAAX,CAAyBC,QAAzB,CAAkC,MAAKpB,OAAvC;;AArBsB;AAsBvB;;;;wBAGW;AAAA;;AACV,2BAAO,KAAKH,IAAZ,mDAAoB,EAApB;AACD;;;;EA5B8BwB,mC","sourcesContent":["import { CountryInfo } from '@rc-ex/core/definitions';\nimport { computed } from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './DialingPlan.interface';\n\n@Module({\n  name: 'DialingPlan',\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    'DataFetcherV2',\n    { dep: 'DialingPlanOptions', optional: true },\n  ],\n})\nexport class DialingPlan extends DataFetcherV2Consumer<Deps, CountryInfo[]> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    const { polling = true } = deps.dialingPlanOptions ?? {};\n    this._source = new DataSource({\n      ...deps.dialingPlanOptions,\n      key: 'dialingPlan',\n      polling,\n      cleanOnReset: true,\n      fetchFunction: async () =>\n        fetchList(async (params: any) => {\n          const response = await this._deps.client.service\n            .platform()\n            .get('/restapi/v1.0/account/~/dialing-plan', params);\n          return response.json();\n        }),\n      readyCheckFunction: () => this._deps.rolesAndPermissions.ready,\n      permissionCheckFunction: () =>\n        !!this._deps.rolesAndPermissions.permissions.ReadCompanyInfo,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed<DialingPlan>(({ data }) => [data])\n  get plans() {\n    return this.data ?? [];\n  }\n}\n"],"file":"DialingPlan.js"}