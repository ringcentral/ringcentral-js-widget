{"version":3,"sources":["modules/StorageV2/Storage.ts"],"names":["Storage","name","deps","dep","optional","StorageProvider","storageOptions","migrationMapping","_disableInactiveTabsWrite","_storage","_storageHandler","_deps","disableInactiveTabsWrite","storedData","store","subscribe","auth","loginStatus","loggedIn","tabManager","ready","pending","dispatch","type","_storageActionTypes","init","storageKey","prefix","ownerId","_StorageProvider","getData","newKey","oldKey","index","setItem","key","_storageReducers","removeItem","initSuccess","data","value","sync","on","notLoggedIn","resetStorage","status","moduleStatuses","active","currentData","reset","off","removeListener","destroy","resetSuccess","StorageBase"],"mappings":"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","sourcesContent":["import { Module } from '../../lib/di';\nimport { StorageBase, IStorage } from '../../lib/StorageBaseV2';\nimport loginStatus from '../Auth/loginStatus';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { Deps } from './Storage.interface';\n\n@Module({\n  name: 'Storage',\n  deps: [\n    'Auth',\n    { dep: 'TabManager', optional: true },\n    { dep: 'StorageOptions', optional: true },\n  ],\n})\nexport class Storage<T = {}> extends StorageBase<Deps & T> {\n  /* migration storage v1 to v2 */\n  public migrationMapping: Record<string, string | Record<string, string>> = {};\n  /* migration storage v1 to v2 */\n  protected _disableInactiveTabsWrite: boolean;\n  protected _storage: IStorage;\n  protected _storageHandler: ({\n    key,\n    value,\n  }: {\n    key: string;\n    value: unknown;\n  }) => void = null;\n\n  constructor(deps: Deps) {\n    super(deps, {\n      name: 'storage',\n      StorageProvider: deps.storageOptions?.StorageProvider,\n    });\n    this._disableInactiveTabsWrite =\n      this._deps.storageOptions?.disableInactiveTabsWrite ?? true;\n  }\n\n  // overridden RcModuleV2 `initModule`\n  async initModule() {\n    let storedData: Record<string, unknown> = null;\n    this.store.subscribe(async () => {\n      if (\n        this._deps.auth.loginStatus === loginStatus.loggedIn &&\n        (!this._deps.tabManager || this._deps.tabManager.ready) &&\n        this.pending\n      ) {\n        this.store.dispatch({\n          type: this._storageActionTypes.init,\n        });\n        const storageKey = `${this.prefix ? `${this.prefix}-` : ''}storage-${\n          this._deps.auth.ownerId\n        }`;\n        this._storage = new this._StorageProvider({\n          storageKey,\n        });\n        storedData = await this._storage.getData();\n        /* migration storage v1 to v2 */\n        /* eslint-disable */\n        for (const newKey in this.migrationMapping) {\n          const oldKey = this.migrationMapping[newKey];\n          if (typeof oldKey === 'string') {\n            if (storedData[oldKey]) {\n              storedData[newKey] = storedData[oldKey];\n            }\n          } else if (typeof oldKey === 'object') {\n            for (const index in oldKey) {\n              if (storedData[oldKey[index]]) {\n                storedData[newKey] = storedData[newKey] ?? {};\n                (storedData[newKey] as Record<string, any>)[index] =\n                  storedData[oldKey[index]];\n              }\n            }\n          }\n          this._storage.setItem(newKey, storedData[newKey]);\n        }\n        /* eslint-enable */\n        /* migration storage v1 to v2 */\n        for (const key in storedData) {\n          if (!this._storageReducers[key]) {\n            delete storedData[key];\n            await this._storage.removeItem(key);\n          }\n        }\n        this.store.dispatch({\n          type: this._storageActionTypes.initSuccess,\n          // storageKey,\n          // To fix same reference in redux store with storedData\n          data: {\n            ...storedData,\n          },\n        });\n        this._storageHandler = ({ key, value }) => {\n          if (this.ready) {\n            storedData[key] = value;\n            this.store.dispatch({\n              type: this._storageActionTypes.sync,\n              key,\n              value,\n            });\n          }\n        };\n        this._storage.on('storage', this._storageHandler);\n      } else if (\n        ((!!this._deps.tabManager && !this._deps.tabManager.ready) ||\n          this._deps.auth.notLoggedIn) &&\n        this.ready\n      ) {\n        this.resetStorage();\n      }\n      if (\n        this.status === moduleStatuses.ready &&\n        (!this._disableInactiveTabsWrite ||\n          !this._deps.tabManager ||\n          this._deps.tabManager.active)\n      ) {\n        // save new data to storage when changed\n        const currentData = this.data;\n        for (const key in currentData) {\n          if (storedData[key] !== currentData[key]) {\n            this._storage.setItem(key, currentData[key]);\n            storedData[key] = currentData[key];\n          }\n        }\n      }\n    });\n  }\n\n  public resetStorage() {\n    this.store.dispatch({\n      type: this._storageActionTypes.reset,\n    });\n    if (this._storageHandler) {\n      if (this._storage.off) {\n        this._storage.off('storage', this._storageHandler);\n      } else if (this._storage.removeListener) {\n        this._storage.removeListener('storage', this._storageHandler);\n      }\n      this._storageHandler = null;\n    }\n    if (this._storage) {\n      this._storage.destroy();\n      this._storage = null;\n    }\n    this.store.dispatch({\n      type: this._storageActionTypes.resetSuccess,\n    });\n  }\n}\n"],"file":"Storage.js"}