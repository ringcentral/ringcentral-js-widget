{"version":3,"sources":["modules/CallLogUI/CallLogUI.tsx"],"names":["CallLogUI","name","deps","dep","optional","locale","callLogger","rateLimiter","regionSettings","dateTimeFormat","callLogSection","routerInteraction","activeCallControl","environmentOptions","rolesAndPermissions","connectivityMonitor","modules","props","_modules","currentNotificationIdentify","currentIdentify","isInTransferPage","currentPath","match","currentLocale","header","showSpinner","ready","disableLinks","connectivity","throttling","isWide","app","isLightning","currentSession","getActiveSession","sessionIdToTelephonySessionIdMapping","formatPhone","phoneNumber","areaCode","countryCode","goBack","closeLogSection","renderCallLogCallControl","status","currentTelephonySessionId","onSaveNotification","saveAndHandleNotification","onDiscardNotification","discardAndHandleNotification","onCloseNotification","closeLogNotification","onExpandNotification","expandLogNotification","onReject","sessionId","telephonySessionId","reject","onHangup","hangUp","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { RcUIModuleV2 } from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport React from 'react';\nimport {\n  CallLogUIInterface,\n  DepsModules,\n  CallLogUIProps,\n  CallLogUIFunctions,\n} from './CallLogUI.interface';\n\nimport CallLogCallCtrlContainer from '../../containers/CallLogCallCtrlContainer';\n\n@Module({\n  name: 'CallLogUI',\n  deps: [\n    'Locale',\n    'CallLogger',\n    'RateLimiter',\n    'RegionSettings',\n    'DateTimeFormat',\n    'CallLogSection',\n    'RouterInteraction',\n    'ActiveCallControl',\n    'EnvironmentOptions',\n    'RolesAndPermissions',\n    'ConnectivityMonitor',\n    { dep: 'CallLogUIOptions', optional: true },\n  ],\n})\nclass CallLogUI<T extends DepsModules> extends RcUIModuleV2<T>\n  implements CallLogUIInterface {\n  constructor({\n    locale,\n    callLogger,\n    rateLimiter,\n    regionSettings,\n    dateTimeFormat,\n    callLogSection,\n    routerInteraction,\n    activeCallControl,\n    environmentOptions,\n    rolesAndPermissions,\n    connectivityMonitor,\n    // child modules\n    modules = {},\n    ...props\n  }) {\n    super({\n      modules: {\n        locale,\n        callLogger,\n        rateLimiter,\n        regionSettings,\n        dateTimeFormat,\n        callLogSection,\n        routerInteraction,\n        activeCallControl,\n        environmentOptions,\n        rolesAndPermissions,\n        connectivityMonitor,\n        ...modules,\n      },\n      ...props,\n    });\n  }\n\n  getUIProps(): CallLogUIProps {\n    const {\n      locale,\n      callLogger,\n      rateLimiter,\n      regionSettings,\n      dateTimeFormat,\n      callLogSection,\n      routerInteraction,\n      activeCallControl,\n      environmentOptions,\n      rolesAndPermissions,\n      connectivityMonitor,\n    } = this._modules;\n    const { currentNotificationIdentify, currentIdentify } = callLogSection;\n    const isInTransferPage =\n      routerInteraction.currentPath.match('^/transfer/') !== null;\n\n    return {\n      currentLocale: locale.currentLocale,\n      header: true,\n      showSpinner: !(\n        locale.ready &&\n        regionSettings.ready &&\n        dateTimeFormat.ready &&\n        (!rolesAndPermissions || rolesAndPermissions.ready) &&\n        (!callLogger || callLogger.ready)\n      ),\n      isInTransferPage,\n      disableLinks: !connectivityMonitor.connectivity || rateLimiter.throttling,\n      isWide:\n        environmentOptions &&\n        environmentOptions.app &&\n        environmentOptions.app.isLightning,\n      currentIdentify,\n      // notification props\n      currentNotificationIdentify,\n      currentSession: activeCallControl.getActiveSession(\n        activeCallControl.sessionIdToTelephonySessionIdMapping[\n          currentNotificationIdentify\n        ],\n      ),\n    };\n  }\n\n  getUIFunctions(): CallLogUIFunctions {\n    const {\n      regionSettings,\n      callLogSection,\n      locale,\n      activeCallControl,\n    } = this._modules;\n    return {\n      formatPhone: (phoneNumber: string) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: regionSettings.areaCode,\n          countryCode: regionSettings.countryCode,\n        }) || 'Unknown',\n      goBack: () => callLogSection.closeLogSection(),\n      renderCallLogCallControl: (status, currentTelephonySessionId, isWide) => (\n        <CallLogCallCtrlContainer\n          currentLocale={locale.currentLocale}\n          telephonySessionId={currentTelephonySessionId}\n          isWide={isWide}\n        />\n      ),\n      // notification props\n      onSaveNotification: () => callLogSection.saveAndHandleNotification(),\n      onDiscardNotification: () =>\n        callLogSection.discardAndHandleNotification(),\n      onCloseNotification: () => callLogSection.closeLogNotification(),\n      onExpandNotification: () => callLogSection.expandLogNotification(),\n      onReject(sessionId) {\n        const telephonySessionId =\n          activeCallControl.sessionIdToTelephonySessionIdMapping[sessionId];\n        return activeCallControl.reject(telephonySessionId);\n      },\n      onHangup(sessionId) {\n        const telephonySessionId =\n          activeCallControl.sessionIdToTelephonySessionIdMapping[sessionId];\n        return activeCallControl.hangUp(telephonySessionId);\n      },\n    };\n  }\n}\n\nexport { CallLogUI };\n"],"file":"CallLogUI.js"}