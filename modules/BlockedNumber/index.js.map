{"version":3,"sources":["modules/BlockedNumber/index.js"],"names":["BlockedNumber","deps","dep","optional","client","rolesAndPermissions","options","fetchFunction","params","_client","account","extension","blockedNumber","list","readyCheckFn","_rolesAndPermissions","ready","cleanOnReset","ensureExist","call","permissions","ReadBlockedNumbers","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYqBA,a;AAXrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAHI;AADA,CAAP,C;;;;;AAQC;;;;;AAKA,+BAAyD;AAAA;;AAAA,QAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCC,mBAAmC,QAAnCA,mBAAmC;AAAA,QAAXC,OAAW;;AAAA;;AACvD,8DACKA,OADL;AAEEF,MAAAA,MAAM,EAANA,MAFF;AAGEG,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mDACb,2BAAU,UAACC,MAAD;AAAA,2BACR,MAAKC,OAAL,CACGC,OADH,GAEGC,SAFH,GAGGC,aAHH,GAIGC,IAJH,CAIQL,MAJR,CADQ;AAAA,mBAAV,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHf;AAWEM,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA,OAXhB;AAYEC,MAAAA,YAAY,EAAE;AAZhB;;AADuD;;AAgBvD,UAAKF,oBAAL,GAA4BG,wBAAYC,IAAZ,gCAE1Bd,mBAF0B,EAG1B,qBAH0B,CAA5B;AAhBuD;AAqBxD;;;;wBAEW;AACV,aAAO,eAAP;AACD;;;wBAKoB;AACnB,aAAO,CAAC,CAAC,KAAKU,oBAAL,CAA0BK,WAA1B,CAAsCC,kBAA/C;AACD;;;;EAtCwCC,wB,mFAiCxCC,kB;;;;;;;WACS,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\n/**\n * @class\n * @description Blocked number list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'BlockedNumberOptions', optional: true },\n  ],\n})\nexport default class BlockedNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, rolesAndPermissions, ...options }) {\n    super({\n      ...options,\n      client,\n      fetchFunction: async () =>\n        fetchList((params) =>\n          this._client\n            .account()\n            .extension()\n            .blockedNumber()\n            .list(params),\n        ),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      cleanOnReset: true,\n    });\n\n    this._rolesAndPermissions = ensureExist.call(\n      this,\n      rolesAndPermissions,\n      'rolesAndPermissions',\n    );\n  }\n\n  get _name() {\n    return 'blockedNumber';\n  }\n\n  @selector\n  numbers = [() => this.data, (data) => data || []];\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadBlockedNumbers;\n  }\n}\n"],"file":"index.js"}