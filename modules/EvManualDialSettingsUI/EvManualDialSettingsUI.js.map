{"version":3,"sources":["modules/EvManualDialSettingsUI/EvManualDialSettingsUI.ts"],"names":["EvManualDialSettingsUI","name","deps","locale","routerInteraction","evCall","evAuth","modules","_renderProps","getCallerId","_modules","formGroup","dialoutCallerId","getCallerIds","callerId","callerIds","find","number","getQueue","dialoutQueueId","availableQueues","queueId","queue","gateId","getCountry","dialoutCountryId","getAvailableCountries","countryId","countries","country","getSettingFields","ringTime","ringTimeLimit","agentPermissions","allowManualOutboundGates","allowManualIntlCalls","availableCountries","dataSign","value","onChange","_validate","setFormGroup","select","label","i18n","getString","currentLocale","required","options","getItemValue","itemRenderer","renderCallerIdLabel","renderValue","description","searchOption","text","_searchMethod","gateName","renderQueueLabel","countryName","dialoutRingTime","onBlur","checkDialoutRingTime","input","type","placeholder","push","toLowerCase","includes","props","settingFields","init","resetForm","goBack","_navigateToDialer","save","saveForm","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { RcUIModuleV2, createSelector } from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport {\n  EvManualDialSettingsUIFunctions,\n  EvManualDialSettingsUIProps,\n} from '../../interfaces/EvManualDialSettingsUI.interface';\nimport {\n  EvAvailableCountry,\n  EvAvailableQueue,\n  EvCallerId,\n} from '../../lib/EvClient';\nimport { EvCall } from '../EvCall';\nimport {\n  DepsModules,\n  EvManualDialSettingsRenderProps,\n  ManualDialSettingsUI,\n} from './EvManualDialSettingsUI.interface';\nimport i18n from './i18n';\n\n@Module({\n  name: 'EvManualDialSettingsUI',\n  deps: ['Locale', 'RouterInteraction', 'EvCall', 'EvAuth'],\n})\nclass EvManualDialSettingsUI extends RcUIModuleV2<DepsModules>\n  implements ManualDialSettingsUI {\n  private _renderProps: EvManualDialSettingsRenderProps;\n\n  constructor({ locale, routerInteraction, evCall, evAuth }) {\n    super({\n      modules: {\n        locale,\n        routerInteraction,\n        evCall,\n        evAuth,\n      },\n    });\n  }\n\n  getCallerId = createSelector(\n    () => this._modules.evCall.formGroup.dialoutCallerId,\n    () => this._modules.evAuth.getCallerIds(),\n    (callerId, callerIds) =>\n      callerIds.find(({ number }) => number === callerId),\n  );\n\n  getQueue = createSelector(\n    () => this._modules.evCall.formGroup.dialoutQueueId,\n    () => this._modules.evAuth.availableQueues,\n    (queueId, availableQueues) =>\n      availableQueues.find((queue) => queue.gateId === queueId),\n  );\n\n  getCountry = createSelector(\n    () => this._modules.evCall.formGroup.dialoutCountryId,\n    () => this._modules.evAuth.getAvailableCountries(),\n    (countryId, countries) =>\n      countries.find((country) => country.countryId === countryId),\n  );\n\n  getSettingFields = createSelector(\n    () => this.getCallerId(),\n    () => this._modules.evAuth.getCallerIds(),\n    () => this._modules.evAuth.availableQueues,\n    () => this.getQueue(),\n    () => this.getCountry(),\n    () => this._modules.evAuth.getAvailableCountries(),\n    () => this._modules.evCall.ringTime,\n    () => this._modules.evCall.ringTimeLimit,\n    () => this._modules.evAuth.agentPermissions.allowManualOutboundGates,\n    () => this._modules.evAuth.agentPermissions.allowManualIntlCalls,\n    (\n      callerId,\n      callerIds,\n      availableQueues,\n      queue,\n      country,\n      availableCountries,\n      ringTime,\n      ringTimeLimit,\n      allowManualOutboundGates,\n      allowManualIntlCalls,\n    ) => {\n      return [\n        {\n          dataSign: 'callerId',\n          value: callerId.number,\n          onChange: (dialoutCallerId) => {\n            if (this._validate(dialoutCallerId)) {\n              this._modules.evCall.setFormGroup({\n                dialoutCallerId,\n              });\n            }\n          },\n          select: {\n            label: i18n.getString(\n              'callerId',\n              this._modules.locale.currentLocale,\n            ),\n            required: true,\n            options: callerIds,\n            getItemValue: (value: EvCallerId) => value.number,\n            itemRenderer: this._renderProps.renderCallerIdLabel,\n            renderValue: callerId.description,\n            searchOption: (value: EvCallerId, text: string) => {\n              return this._searchMethod(\n                `${value.description} ${value.number}`,\n                text,\n              );\n            },\n          },\n        },\n        ...(allowManualOutboundGates\n          ? [\n              {\n                dataSign: 'queue',\n                value: queue.gateId,\n\n                onChange: (dialoutQueueId) => {\n                  if (this._validate(dialoutQueueId)) {\n                    this._modules.evCall.setFormGroup({\n                      dialoutQueueId,\n                    });\n                  }\n                },\n                select: {\n                  label: i18n.getString(\n                    'queue',\n                    this._modules.locale.currentLocale,\n                  ),\n                  required: true,\n                  options: availableQueues,\n                  renderValue: queue.gateName,\n                  itemRenderer: (value) =>\n                    this._renderProps.renderQueueLabel({\n                      ...value,\n                      currentLocale: this._modules.locale.currentLocale,\n                    }),\n                  getItemValue: (value: EvAvailableQueue) => value.gateId,\n                  searchOption: (value: EvAvailableQueue, text: string) => {\n                    return this._searchMethod(\n                      `${value.gateName} ${value.gateId}`,\n                      text,\n                    );\n                  },\n                },\n              },\n            ]\n          : []),\n        ...(allowManualIntlCalls\n          ? [\n              {\n                dataSign: 'country',\n                value: country.countryId,\n                onChange: (dialoutCountryId: string) => {\n                  if (this._validate(dialoutCountryId)) {\n                    this._modules.evCall.setFormGroup({\n                      dialoutCountryId,\n                    });\n                  }\n                },\n                select: {\n                  label: i18n.getString(\n                    'country',\n                    this._modules.locale.currentLocale,\n                  ),\n                  required: true,\n                  options: availableCountries,\n                  renderValue: `${country.countryName} (${country.countryId})`,\n                  getItemValue: (value: EvAvailableCountry) => value.countryId,\n                  itemRenderer: ({ countryId, countryName }) =>\n                    `${countryName} (${countryId})`,\n                  searchOption: (value: EvAvailableCountry, text: string) => {\n                    return this._searchMethod(\n                      `${value.countryName}(${value.countryId})`,\n                      text,\n                    );\n                  },\n                },\n              },\n            ]\n          : []),\n        {\n          dataSign: 'ringTime',\n          value: ringTime,\n          onChange: (dialoutRingTime) => {\n            this._modules.evCall.setFormGroup({\n              dialoutRingTime,\n            });\n          },\n          onBlur: () => {\n            this._modules.evCall.checkDialoutRingTime();\n          },\n          input: {\n            type: 'number',\n            label: i18n.getString(\n              'ringTime',\n              this._modules.locale.currentLocale,\n            ),\n            required: true,\n            placeholder: i18n.getString(\n              'ringTime',\n              this._modules.locale.currentLocale,\n            ),\n            ...ringTimeLimit,\n          },\n        },\n      ];\n    },\n  );\n\n  private _validate(value: string) {\n    return !(typeof value === 'undefined' || value === null);\n  }\n\n  private _navigateToDialer() {\n    this._modules.routerInteraction.push('/dialer');\n  }\n\n  private _searchMethod(value: string, text: string) {\n    return value.toLowerCase().includes(text.toLowerCase());\n  }\n\n  getUIProps(\n    props: EvManualDialSettingsRenderProps = {},\n  ): EvManualDialSettingsUIProps {\n    this._renderProps = props;\n    return {\n      currentLocale: this._modules.locale.currentLocale,\n      settingFields: this.getSettingFields(),\n    };\n  }\n\n  getUIFunctions(): EvManualDialSettingsUIFunctions {\n    return {\n      init: () => {\n        this._modules.evCall.resetForm();\n      },\n      goBack: () => this._navigateToDialer(),\n      save: () => {\n        this._modules.evCall.saveForm();\n        this._navigateToDialer();\n      },\n    };\n  }\n}\n\nexport { EvManualDialSettingsUI };\n"],"file":"EvManualDialSettingsUI.js"}