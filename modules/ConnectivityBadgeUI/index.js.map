{"version":3,"sources":["modules/ConnectivityBadgeUI/index.ts"],"names":["ConnectivityBadgeUI","name","deps","locale","connectivityManager","options","_locale","_connectivityManager","currentLocale","mode","ready","webphoneConnecting","hasLimitedStatusError","onClick","isWebphoneUnavailableMode","checkWebphoneAndConnect","checkStatus","showConnectivityAlert","showBadgeAlert","RcUIModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMqBA,mB,WAJpB,wBAAO;AACNC,EAAAA,IAAI,EAAE,qBADA;AAENC,EAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,qBAAX;AAFA,CAAP,C;;;;;AASC,qCAAyD;AAAA;;AAAA,QAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCC,mBAAmC,QAAnCA,mBAAmC;AAAA,QAAXC,OAAW;;AAAA;;AACvD,gDACKA,OADL;AADuD,UAJzDC,OAIyD;AAAA,UAFzDC,oBAEyD;AAKvD,UAAKD,OAAL,GAAeH,MAAf;AACA,UAAKI,oBAAL,GAA4BH,mBAA5B;AANuD;AAOxD;;;;iCAEY;AACX,aAAO;AACLI,QAAAA,aAAa,EAAE,KAAKF,OAAL,CAAaE,aADvB;AAELC,QAAAA,IAAI,EACD,KAAKF,oBAAL,CAA0BG,KAA1B,IAAmC,KAAKH,oBAAL,CAA0BE,IAA9D,IACA,IAJG;AAKLE,QAAAA,kBAAkB,EAChB,KAAKJ,oBAAL,CAA0BG,KAA1B,IACA,KAAKH,oBAAL,CAA0BI,kBAPvB;AAQLC,QAAAA,qBAAqB,EACnB,KAAKL,oBAAL,CAA0BG,KAA1B,IACA,KAAKH,oBAAL,CAA0BK;AAVvB,OAAP;AAYD;;;qCAEgB;AACf,UAAMR,mBAAmB,GAAG,KAAKG,oBAAjC;AACA,aAAO;AACLM,QAAAA,OADK,qBACK;AACR,cAAIT,mBAAmB,CAACU,yBAAxB,EAAmD;AACjDV,YAAAA,mBAAmB,CAACW,uBAApB;AACD,WAFD,MAEO,IAAIX,mBAAmB,CAACQ,qBAAxB,EAA+C;AACpDR,YAAAA,mBAAmB,CAACY,WAApB;AACD,WAFM,MAEA;AACLZ,YAAAA,mBAAmB,CAACa,qBAApB;AACD;AACF,SATI;AAULC,QAAAA,cAVK,4BAUY;AACfd,UAAAA,mBAAmB,CAACa,qBAApB;AACD;AAZI,OAAP;AAcD;;;;EA7C8CE,uB","sourcesContent":["import Module from '@ringcentral-integration/commons/lib/di/decorators/module';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'ConnectivityBadgeUI',\n  deps: ['Locale', 'ConnectivityManager'],\n})\nexport default class ConnectivityBadgeUI extends RcUIModule {\n  _locale: any;\n\n  _connectivityManager: any;\n\n  constructor({ locale, connectivityManager, ...options }) {\n    super({\n      ...options,\n    });\n\n    this._locale = locale;\n    this._connectivityManager = connectivityManager;\n  }\n\n  getUIProps() {\n    return {\n      currentLocale: this._locale.currentLocale,\n      mode:\n        (this._connectivityManager.ready && this._connectivityManager.mode) ||\n        null,\n      webphoneConnecting:\n        this._connectivityManager.ready &&\n        this._connectivityManager.webphoneConnecting,\n      hasLimitedStatusError:\n        this._connectivityManager.ready &&\n        this._connectivityManager.hasLimitedStatusError,\n    };\n  }\n\n  getUIFunctions() {\n    const connectivityManager = this._connectivityManager;\n    return {\n      onClick() {\n        if (connectivityManager.isWebphoneUnavailableMode) {\n          connectivityManager.checkWebphoneAndConnect();\n        } else if (connectivityManager.hasLimitedStatusError) {\n          connectivityManager.checkStatus();\n        } else {\n          connectivityManager.showConnectivityAlert();\n        }\n      },\n      showBadgeAlert() {\n        connectivityManager.showConnectivityAlert();\n      },\n    };\n  }\n}\n"],"file":"index.js"}