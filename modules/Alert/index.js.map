{"version":3,"sources":["modules/Alert/index.js"],"names":["Alert","deps","dep","optional","ttl","options","_autoDismiss","now","Date","ids","state","messages","filter","item","timestamp","map","id","length","dismiss","_reducer","actionTypes","_ttl","message","payload","level","alertLevels","info","allowDuplicates","store","dispatch","type","alert","uuid","v4","setTimeout","danger","warning","success","concat","dismissAll","moduleStatuses","ready","RcModule","proxify"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport alertLevels from './alertLevels';\nimport getAlertReducer from './getAlertReducer';\nimport proxify from '../../lib/proxy/proxify';\n\n/**\n * @class\n * @description Alert messages managing module.\n */\n@Module({\n  deps: [{ dep: 'AlertOptions', optional: true }],\n})\nexport default class Alert extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Number} params.ttl - Default time-to-live for alert messages.\n   */\n  constructor({ ttl = 5000, ...options }) {\n    super({\n      ...options,\n    });\n    this._reducer = getAlertReducer(this.actionTypes);\n    this._ttl = ttl;\n  }\n\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  _onStateChange() {\n    /* do nothing */\n  }\n\n  // this module has no dependency, and is always ready\n  // eslint-disable-next-line class-methods-use-this\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get ready() {\n    return true;\n  }\n\n  get messages() {\n    return this.state.messages;\n  }\n\n  /**\n   * @function\n   * @description Scans the messages for expired ones and dismiss them.\n   */\n  _autoDismiss = () => {\n    const now = Date.now();\n    const ids = this.state.messages\n      .filter((item) => item.ttl > 0 && now - item.timestamp > item.ttl)\n      .map((item) => item.id);\n    if (ids.length) {\n      this.dismiss(ids);\n    }\n  };\n\n  /**\n   * @function\n   * @description Add alert message to the state.\n   * @param {String} options.message\n   * @param {Any} options.payload\n   * @param {alertLevels} options.level\n   * @param {Number} options.ttl - optional, set ttl to 0 to disable auto dismiss\n   */\n  @proxify\n  async alert({\n    message,\n    payload,\n    level = alertLevels.info,\n    ttl = this._ttl,\n    allowDuplicates = true,\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.alert,\n      message,\n      payload,\n      level,\n      ttl,\n      allowDuplicates,\n      id: uuid.v4(),\n      timestamp: Date.now(),\n    });\n    if (ttl > 0) {\n      setTimeout(this._autoDismiss, ttl + 10);\n    }\n  }\n\n  /**\n   * @function\n   * @description Add alert message of alertLevel \"danger\" to the state.\n   * @param {String} options.message\n   * @param {Any} options.payload\n   * @param {Number} options.ttl - optional, set ttl to 0 to disable auto dismiss\n   */\n  danger(options) {\n    this.alert({\n      ...options,\n      level: alertLevels.danger,\n    });\n  }\n\n  /**\n   * @function\n   * @description Add alert message of alertLevel \"warning\" to the state.\n   * @param {String} options.message\n   * @param {Any} options.payload\n   * @param {Number} options.ttl - optional, set ttl to 0 to disable auto dismiss\n   */\n  warning(options) {\n    this.alert({\n      ...options,\n      level: alertLevels.warning,\n    });\n  }\n\n  /**\n   * @function\n   * @description Add alert message of alertLevel \"info\" to the state.\n   * @param {String} options.message\n   * @param {Any} options.payload\n   * @param {Number} options.ttl - optional, set ttl to 0 to disable auto dismiss\n   */\n  info(options) {\n    this.alert({\n      ...options,\n      level: alertLevels.info,\n    });\n  }\n\n  /**\n   * @function\n   * @description Add alert message of alertLevel \"success\" to the state.\n   * @param {String} options.message\n   * @param {Any} options.payload\n   * @param {Number} options.ttl - optional, set ttl to 0 to disable auto dismiss\n   */\n  success(options) {\n    this.alert({\n      ...options,\n      level: alertLevels.success,\n    });\n  }\n\n  /**\n   * @function\n   * @description Dismiss the message from the state.\n   * @param {Array<String>|String} ids - The id, or array of ids to be dismissed.\n   */\n  @proxify\n  async dismiss(ids) {\n    this.store.dispatch({\n      type: this.actionTypes.dismiss,\n      ids: [].concat(ids),\n    });\n  }\n\n  /**\n   * @function\n   * @description Dismiss all messages.\n   */\n  @proxify\n  async dismissAll() {\n    this.store.dispatch({\n      type: this.actionTypes.dismissAll,\n    });\n  }\n}\n"],"file":"index.js"}