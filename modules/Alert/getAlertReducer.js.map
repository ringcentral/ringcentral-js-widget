{"version":3,"sources":["modules/Alert/getAlertReducer.ts"],"names":["getMessagesReducer","types","state","type","message","payload","ttl","level","ids","timestamp","id","allowDuplicates","loading","backdrop","classes","onBackdropClick","action","alert","find","item","update","map","dismiss","filter","indexOf","dismissAll","getAlertReducer","messages"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACxC,SAAO,YAkBF;AAAA,QAjBHC,KAiBG,uEAjBK,EAiBL;;AAAA;AAAA,QAfDC,IAeC,QAfDA,IAeC;AAAA,QAdDC,OAcC,QAdDA,OAcC;AAAA,QAbDC,OAaC,QAbDA,OAaC;AAAA,QAZDC,GAYC,QAZDA,GAYC;AAAA,QAXDC,KAWC,QAXDA,KAWC;AAAA,QAVDC,GAUC,QAVDA,GAUC;AAAA,QATDC,SASC,QATDA,SASC;AAAA,QARDC,EAQC,QARDA,EAQC;AAAA,QAPDC,eAOC,QAPDA,eAOC;AAAA,QANDC,OAMC,QANDA,OAMC;AAAA,QALDC,QAKC,QALDA,QAKC;AAAA,QAJDC,OAIC,QAJDA,OAIC;AAAA,QAHDC,eAGC,QAHDA,eAGC;AAAA,QAFDC,MAEC,QAFDA,MAEC;;AACH,YAAQb,IAAR;AACE,WAAKF,KAAK,CAACgB,KAAX;AACE,YACE,CAACN,eAAD,IACAT,KAAK,CAACgB,IAAN,CAAW,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACf,OAAL,KAAiBA,OAAjB,IAA4Be,IAAI,CAACZ,KAAL,KAAeA,KAArD;AAAA,SAAX,CAFF,EAGE;AACA,iBAAOL,KAAP;AACD;;AACD,4CACKA,KADL,IAEE;AACEQ,UAAAA,EAAE,EAAFA,EADF;AAEEN,UAAAA,OAAO,EAAPA,OAFF;AAGEC,UAAAA,OAAO,EAAPA,OAHF;AAIEC,UAAAA,GAAG,EAAHA,GAJF;AAKEC,UAAAA,KAAK,EAALA,KALF;AAMEE,UAAAA,SAAS,EAATA,SANF;AAOEG,UAAAA,OAAO,EAAPA,OAPF;AAQEC,UAAAA,QAAQ,EAARA,QARF;AASEC,UAAAA,OAAO,EAAPA,OATF;AAUEC,UAAAA,eAAe,EAAfA,eAVF;AAWEC,UAAAA,MAAM,EAANA;AAXF,SAFF;;AAgBF,WAAKf,KAAK,CAACmB,MAAX;AACE,eAAOlB,KAAK,CAACmB,GAAN,CAAU,UAACF,IAAD;AAAA,iBACfA,IAAI,CAACT,EAAL,KAAYA,EAAZ,mCAESS,IAFT;AAGMf,YAAAA,OAAO,EAAPA,OAHN;AAIMQ,YAAAA,OAAO,EAAPA,OAJN;AAKMI,YAAAA,MAAM,EAANA;AALN,eAOIG,IARW;AAAA,SAAV,CAAP;;AAWF,WAAKlB,KAAK,CAACqB,OAAX;AACE,eAAOpB,KAAK,CAACqB,MAAN,CAAa,UAACJ,IAAD;AAAA,iBAAUX,GAAG,CAACgB,OAAJ,CAAYL,IAAI,CAACT,EAAjB,MAAyB,CAAC,CAApC;AAAA,SAAb,CAAP;;AACF,WAAKT,KAAK,CAACwB,UAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAOvB,KAAP;AAzCJ;AA2CD,GA9DD;AA+DD;;AAEc,SAASwB,eAAT,CAAyBzB,KAAzB,EAAgC;AAC7C,SAAO,4BAAgB;AACrB0B,IAAAA,QAAQ,EAAE3B,kBAAkB,CAACC,KAAD;AADP,GAAhB,CAAP;AAGD","sourcesContent":["import { combineReducers } from 'redux';\n\nexport function getMessagesReducer(types) {\n  return (\n    state = [],\n    {\n      type,\n      message,\n      payload,\n      ttl,\n      level,\n      ids,\n      timestamp,\n      id,\n      allowDuplicates,\n      loading,\n      backdrop,\n      classes,\n      onBackdropClick,\n      action,\n    },\n  ) => {\n    switch (type) {\n      case types.alert:\n        if (\n          !allowDuplicates &&\n          state.find((item) => item.message === message && item.level === level)\n        ) {\n          return state;\n        }\n        return [\n          ...state,\n          {\n            id,\n            message,\n            payload,\n            ttl,\n            level,\n            timestamp,\n            loading,\n            backdrop,\n            classes,\n            onBackdropClick,\n            action,\n          },\n        ];\n      case types.update:\n        return state.map((item) =>\n          item.id === id\n            ? {\n                ...item,\n                message,\n                loading,\n                action,\n              }\n            : item,\n        );\n\n      case types.dismiss:\n        return state.filter((item) => ids.indexOf(item.id) === -1);\n      case types.dismissAll:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAlertReducer(types) {\n  return combineReducers({\n    messages: getMessagesReducer(types),\n  });\n}\n"],"file":"getAlertReducer.js"}