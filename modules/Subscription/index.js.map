{"version":3,"sources":["modules/Subscription/index.js"],"names":["DEFAULT_TIME_TO_RETRY","Subscription","deps","dep","optional","auth","client","storage","timeToRetry","options","actionTypes","_auth","_client","_storage","_timeToRetry","_cacheStorageKey","_reducer","registerReducer","key","reducer","_resetPromise","_removePromise","_retryTimeoutId","_registerTimeoutId","store","subscribe","loginStatus","loggedIn","ready","status","moduleStatuses","pending","_startSleepDetection","dispatch","type","initSuccess","notLoggedIn","reset","addBeforeLogoutHandler","_stopSleepDetection","_detectSleep","_sleepTimeout","clearTimeout","t","Date","now","setTimeout","_subscription","console","log","remove","_subscribe","sdk","service","subscriptions","Subscriptions","createSubscription","cachedSubscription","setSubscription","error","on","events","notification","message","removeSuccess","removeError","renewSuccess","subscription","renewError","_retry","subscribeSuccess","subscribeError","delay","normalizeEventFilter","eventFilters","sort","filters","setEventFilters","register","_createSubscription","_register","oldFilters","addFilters","concat","length","removeFilters","_stopRetry","_remove","resetSuccess","_reset","state","subscriptionStatus","getItem","_pubnub","RcModule","proxify"],"mappings":"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","sourcesContent":["import { Subscriptions } from '@ringcentral/subscriptions';\nimport { equals, map } from 'ramda';\n\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport loginStatus from '../Auth/loginStatus';\nimport { actionTypes } from './actionTypes';\nimport getSubscriptionReducer, {\n  getCachedSubscriptionReducer,\n} from './getSubscriptionReducer';\nimport { normalizeEventFilter } from './normalizeEventFilter';\n\nconst DEFAULT_TIME_TO_RETRY = 60 * 1000;\n\n/**\n * @class\n * @description Subscription module to subscibe notification\n */\n@Module({\n  deps: [\n    'Auth',\n    'Client',\n    'Storage',\n    { dep: 'SubscriptionOptions', optional: true },\n  ],\n})\nexport default class Subscription extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {Number} params.timeToRetry - time to retry, default 60 seconds\n   */\n  constructor({\n    auth,\n    client,\n    storage,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._storage = storage;\n    this._timeToRetry = timeToRetry;\n    this._cacheStorageKey = 'cachedSubscription';\n    this._reducer = getSubscriptionReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._cacheStorageKey,\n      reducer: getCachedSubscriptionReducer(this.actionTypes),\n    });\n\n    this._resetPromise = null;\n    this._removePromise = null;\n    this._retryTimeoutId = null;\n    this._registerTimeoutId = null;\n  }\n\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this._startSleepDetection();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (this._auth.loginStatus === loginStatus.notLoggedIn ||\n          !this._storage.ready) &&\n        this.ready\n      ) {\n        this.reset();\n      }\n    });\n    this._auth.addBeforeLogoutHandler(async () => {\n      if (this.ready) {\n        await this.reset();\n      }\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get filters() {\n    return this.state.filters;\n  }\n\n  get message() {\n    return this.state.message;\n  }\n\n  get subscriptionStatus() {\n    return this.state.subscriptionStatus;\n  }\n\n  get cachedSubscription() {\n    return this._storage.getItem(this._cacheStorageKey);\n  }\n\n  _startSleepDetection() {\n    this._stopSleepDetection();\n    this._detectSleep();\n  }\n\n  // TODO Use SleepDetector module after\n  _stopSleepDetection() {\n    if (this._sleepTimeout) {\n      clearTimeout(this._sleepTimeout);\n      this._sleepTimeout = null;\n    }\n  }\n\n  _detectSleep() {\n    const t = Date.now();\n    this._sleepTimeout = setTimeout(async () => {\n      // For chrome 88 timer-throttling https://developer.chrome.com/blog/timer-throttling-in-chrome-88/\n      // need to make sure time diff is more than 1 min\n      if (this.ready && this._subscription && Date.now() - t > 75 * 1000) {\n        console.log('==== Sleep Detected ====');\n        await this.remove();\n        await this._subscribe();\n      }\n      this._detectSleep();\n    }, 20 * 1000);\n  }\n\n  _createSubscription() {\n    const sdk = this._client.service;\n    const subscriptions = new Subscriptions({ sdk });\n    this._subscription = subscriptions.createSubscription();\n    if (this.cachedSubscription) {\n      try {\n        this._subscription.setSubscription(this.cachedSubscription);\n      } catch (error) {\n        this._subscription = subscriptions.createSubscription();\n      }\n    }\n    this._subscription.on(this._subscription.events.notification, (message) => {\n      this.store.dispatch({\n        type: this.actionTypes.notification,\n        message,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.removeSuccess,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.removeError,\n        error,\n      });\n    });\n    this._subscription.on(this._subscription.events.renewSuccess, () => {\n      if (this._subscription) {\n        this.store.dispatch({\n          type: this.actionTypes.renewSuccess,\n          subscription: this._subscription.subscription(),\n        });\n      }\n    });\n    this._subscription.on(this._subscription.events.renewError, (error) => {\n      if (this._subscription) {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.renewError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        // immediately start the retry process after the first renewError\n        this._retry(0);\n      }\n    });\n    this._subscription.on(this._subscription.events.subscribeSuccess, () => {\n      if (this._subscription) {\n        this.store.dispatch({\n          type: this.actionTypes.subscribeSuccess,\n          subscription: this._subscription.subscription(),\n        });\n      }\n    });\n    this._subscription.on(this._subscription.events.subscribeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.subscribeError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        this._retry();\n      }\n    });\n  }\n\n  _register(delay = 2000) {\n    if (this._registerTimeoutId) {\n      clearTimeout(this._registerTimeoutId);\n    }\n    this._registerTimeoutId = setTimeout(() => {\n      this._registerTimeoutId = null;\n      this.store.dispatch({\n        type: this.actionTypes.subscribe,\n      });\n      if (\n        this._subscription &&\n        !equals(\n          map(normalizeEventFilter, this._subscription.eventFilters()).sort(),\n          map(normalizeEventFilter, this.filters).sort(),\n        )\n      ) {\n        this._subscription.setEventFilters(this.filters);\n        this._subscription.register();\n      }\n    }, delay);\n  }\n\n  _subscribe(delay) {\n    if (!this._subscription) {\n      this._createSubscription();\n    }\n    this._register(delay);\n  }\n\n  @proxify\n  async subscribe(events = [], delay = 2000) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.addFilters,\n        filters: [].concat(events),\n      });\n      if (oldFilters.length !== this.filters.length) {\n        await this._subscribe(delay);\n      }\n    }\n  }\n\n  @proxify\n  async unsubscribe(events = []) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.removeFilters,\n        filters: [].concat(events),\n      });\n      if (this.filters.length === 0) {\n        this.remove();\n      } else if (oldFilters.length !== this.filters.length) {\n        this._subscribe();\n      }\n    }\n  }\n\n  async _stopRetry() {\n    if (this._retryTimeoutId) {\n      clearTimeout(this._retryTimeoutId);\n      this._retryTimeoutId = null;\n    }\n  }\n\n  async _retry(t = this._timeToRetry) {\n    this._stopRetry();\n    this._retryTimeoutId = setTimeout(() => {\n      if (this.ready) {\n        this._subscribe();\n      }\n    }, t);\n  }\n\n  async _remove() {\n    if (this._subscription) {\n      try {\n        this.store.dispatch({\n          type: this.actionTypes.remove,\n        });\n        await this._subscription.remove();\n      } catch (error) {\n        /* falls through */\n      }\n      if (this._subscription) {\n        // check again in case subscription object was removed while waiting\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this._removePromise = null;\n    }\n  }\n\n  @proxify\n  async remove() {\n    if (!this._removePromise) {\n      this._removePromise = this._remove();\n    }\n    return this._removePromise;\n  }\n\n  async _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._stopSleepDetection();\n    this._stopRetry();\n    if (this._subscription) {\n      if (this._auth.loggedIn) {\n        try {\n          await this.remove();\n        } catch (error) {\n          /* falls through */\n        }\n      } else {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n    }\n    this._resetPromise = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async reset() {\n    if (!this._resetPromise) {\n      this._resetPromise = this._reset();\n    }\n    return this._resetPromise;\n  }\n\n  get pubnub() {\n    return this._subscription && this._subscription._pubnub;\n  }\n}\n"],"file":"index.js"}