{"version":3,"sources":["modules/TabManagerV2/TabManager.ts"],"names":["TabManager","name","deps","dep","optional","enableGlobalCache","tabManagerOptions","enableCache","tabbie","Tabbie","prefix","_deps","brand","id","active","event","args","actionTypes","state","action","type","indexOf","states","_setId","enabled","checkIsMain","_setActive","on","events","mainTabIdChanged","_setEvent","send","checkTabAliveById","hasMultipleTabs","tabs","isFirstTab","RcModuleV2","proxify"],"mappings":"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","sourcesContent":["import { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport { AnyAction } from 'redux';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport { Tabbie } from '../../lib/Tabbie';\nimport { Deps, TabEvent } from './TabManager.interface';\n\n@Module({\n  name: 'TabManager',\n  deps: ['Brand', { dep: 'TabManagerOptions', optional: true }],\n})\nexport class TabManager extends RcModuleV2<Deps> {\n  public tabbie: Tabbie;\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableGlobalCache: deps.tabManagerOptions?.enableCache ?? false,\n    });\n    this.tabbie = new Tabbie({\n      prefix: this._deps.brand.prefix,\n    });\n  }\n\n  @state\n  id: string = null;\n\n  @action\n  protected _setId(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * Default to true. If tabbie cannot be enabled due to env, the runtime\n   * should assume active.\n   */\n  @state\n  active = true;\n\n  @action\n  protected _setActive(active: boolean) {\n    this.active = active;\n  }\n\n  @state\n  event: TabEvent = null;\n\n  @action\n  protected _setEvent(event: string, args: any[]) {\n    this.event = {\n      name: event,\n      args,\n    };\n  }\n\n  public getReducers(actionTypes: Record<string, string>) {\n    return {\n      ...super.getReducers(actionTypes),\n      event: (state: TabEvent = null, action: AnyAction) => {\n        if (\n          actionTypes.event &&\n          action.type.indexOf(actionTypes.event) > -1 &&\n          action.states\n        ) {\n          return action.states.event;\n        }\n        return null;\n      },\n    };\n  }\n\n  async onInitOnce() {\n    this._setId(this.tabbie.id);\n    if (this.tabbie.enabled) {\n      this._setActive(await this.tabbie.checkIsMain());\n      this.tabbie.on(this.tabbie.events.mainTabIdChanged, async () => {\n        this._setActive(await this.tabbie.checkIsMain());\n      });\n      this.tabbie.on(\n        this.tabbie.events.event,\n        (event: string, ...args: any[]) => {\n          this._setEvent(event, args);\n        },\n      );\n    }\n  }\n\n  @proxify\n  async send(event: string, ...args: any[]) {\n    this.tabbie.send(event, ...args);\n  }\n\n  @proxify\n  async checkIsMain() {\n    return this.tabbie.checkIsMain();\n  }\n\n  @proxify\n  async checkTabAliveById(id: string) {\n    return this.tabbie.checkTabAliveById(id);\n  }\n\n  get hasMultipleTabs() {\n    return this.tabbie?.hasMultipleTabs ?? false;\n  }\n\n  get tabs() {\n    return this.tabbie?.tabs ?? [];\n  }\n\n  get isFirstTab() {\n    return this.tabbie?.isFirstTab ?? true;\n  }\n\n  get enable() {\n    return this.tabbie?.enabled;\n  }\n}\n"],"file":"TabManager.js"}