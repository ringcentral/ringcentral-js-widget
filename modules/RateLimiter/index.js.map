{"version":3,"sources":["modules/RateLimiter/index.js"],"names":["DEFAULT_THROTTLE_DURATION","DEFAULT_ALERT_TTL","RateLimiter","deps","dep","optional","alert","client","environment","globalStorage","throttleDuration","options","actionTypes","_beforeRequestHandler","throttling","Error","errorMessages","rateLimitReached","_checkTimestamp","store","dispatch","type","stopThrottle","_requestErrorHandler","error","message","_throttleDuration","response","retryAfter","headers","get","Number","parseInt","wasThrottling","startThrottle","timestamp","Date","now","showAlert","setTimeout","_alert","_client","_environment","_storage","_storageKey","_reducer","registerReducer","key","reducer","_timeoutId","_lastEnvironmentCounter","subscribe","ready","_bindHandlers","initSuccess","changeCounter","warning","ttl","allowDuplicates","_unbindHandlers","service","on","events","requestError","beforeRequest","removeListener","state","status","getItem","moduleStatuses","RcModule","proxify"],"mappings":"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","sourcesContent":["import { pathOr } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport actionTypes from './actionTypes';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport getRateLimiterReducer, {\n  getTimestampReducer,\n} from './getRateLimiterReducer';\nimport errorMessages from './errorMessages';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_THROTTLE_DURATION = 61 * 1000;\nconst DEFAULT_ALERT_TTL = 5 * 1000;\n\n/**\n * @class\n * @description Rate limiter managing module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    { dep: 'Environment', optional: true },\n    'GlobalStorage',\n    { dep: 'RateLimiterOptions', optional: true },\n  ],\n})\nexport default class RateLimiter extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Client} params.client - client module instance\n   * @param {Environment} params.environment - environment module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {Number} params.throttleDuration - throttle duration, default 61 seconds\n   */\n  constructor({\n    alert,\n    client,\n    environment,\n    globalStorage,\n    throttleDuration = DEFAULT_THROTTLE_DURATION,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._environment = environment;\n    this._storage = globalStorage;\n    this._throttleDuration = throttleDuration;\n    this._storageKey = 'rateLimiterTimestamp';\n    this._reducer = getRateLimiterReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getTimestampReducer(this.actionTypes),\n    });\n    this._timeoutId = null;\n    this._lastEnvironmentCounter = 0;\n  }\n\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        !this.ready &&\n        this._storage.ready &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this._bindHandlers();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindHandlers();\n      }\n    });\n  }\n\n  /**\n   * If the app is throttling, an incoming request will lead to an exception\n   */\n  _beforeRequestHandler = () => {\n    if (this.throttling) {\n      throw new Error(errorMessages.rateLimitReached);\n    }\n  };\n\n  _checkTimestamp = () => {\n    if (!this.throttling) {\n      this.store.dispatch({\n        type: this.actionTypes.stopThrottle,\n      });\n    }\n  };\n\n  @proxify\n  async showAlert() {\n    if (!this.throttling || !this._alert) {\n      return;\n    }\n\n    this._alert.warning({\n      message: errorMessages.rateLimitReached,\n      ttl: DEFAULT_THROTTLE_DURATION,\n      allowDuplicates: false,\n    });\n  }\n\n  _requestErrorHandler = (error) => {\n    if (\n      !(error instanceof Error) ||\n      error.message !== 'Request rate exceeded'\n    ) {\n      return;\n    }\n\n    // Get `retry-after` from response headers first\n    this._throttleDuration = DEFAULT_THROTTLE_DURATION;\n    if (error.response) {\n      const retryAfter = error.response.headers.get('retry-after');\n      if (retryAfter) {\n        this._throttleDuration = 1000 * Number.parseInt(retryAfter, 10);\n      }\n    }\n\n    const wasThrottling = this.throttling;\n    this.store.dispatch({\n      type: this.actionTypes.startThrottle,\n      timestamp: Date.now(),\n    });\n    if (!wasThrottling) {\n      this.showAlert();\n    }\n    setTimeout(this._checkTimestamp, this._throttleDuration);\n  };\n\n  _bindHandlers() {\n    if (this._unbindHandlers) {\n      this._unbindHandlers();\n    }\n    const client = this._client.service.client();\n    // TODO: Bind the `rateLimitError` event instead\n    client.on(client.events.requestError, this._requestErrorHandler);\n    client.on(client.events.beforeRequest, this._beforeRequestHandler);\n    this._unbindHandlers = () => {\n      client.removeListener(\n        client.events.requestError,\n        this._requestErrorHandler,\n      );\n      client.removeListener(\n        client.events.beforeRequest,\n        this._beforeRequestHandler,\n      );\n      this._unbindHandlers = null;\n    };\n  }\n\n  get ttl() {\n    return this.throttling\n      ? this._throttleDuration - (Date.now() - this.timestamp)\n      : 0;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get timestamp() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get throttleDuration() {\n    return this._throttleDuration;\n  }\n\n  /**\n   * Is in throttling status\n   */\n  get throttling() {\n    return (\n      Date.now() - this._storage.getItem(this._storageKey) <=\n      this._throttleDuration\n    );\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n}\n"],"file":"index.js"}