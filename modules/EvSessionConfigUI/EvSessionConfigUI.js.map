{"version":3,"sources":["modules/EvSessionConfigUI/EvSessionConfigUI.ts"],"names":["EvSessionConfigUI","name","deps","dep","optional","locale","routerInteraction","evAuth","evSessionConfig","evClient","evSettings","evWorkingState","storage","enableCache","modules","storageKey","getInboundQueuesFieldText","_modules","currentLocale","selectedInboundQueueIds","getInboundQueues","inboundQueues","length","selectedInboundQueue","find","inboundQueue","gateId","gateName","i18n","getString","dropDownOptions","None","isLoading","state","setIsLoading","configureAgent","console","error","selectedSkillProfileId","getSkillProfileList","getLoginTypeList","loginType","extensionNumber","isExternalPhone","takingCall","autoAnswer","skillProfileList","loginTypeList","isExtensionNumber","inboundQueuesFieldText","navigateToInboundQueuesPage","push","setSkillProfileId","profile","setLoginType","setExtensionNumber","setTakingCall","setAutoAnswer","setConfigure","RcUIModuleV2","action"],"mappings":"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","sourcesContent":["import {\n  action,\n  RcModuleState,\n  RcUIModuleV2,\n  state,\n  storage,\n  createSelector,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport { dropDownOptions } from '../../enums';\nimport {\n  EvSessionConfigUIFunctions,\n  EvSessionConfigUIProps,\n} from '../../interfaces/EvSessionConfigUI.interface';\nimport {\n  DepsModules,\n  SessionConfigUI,\n  State,\n} from './EvSessionConfigUI.interface';\nimport i18n from './i18n';\n\ntype EvSessionConfigUIState = RcModuleState<EvSessionConfigUI, State>;\n\n@Module({\n  name: 'EvSessionConfigUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'EvAuth',\n    'EvSessionConfig',\n    'EvClient',\n    'EvSettings',\n    'EvWorkingState',\n    'Storage',\n    { dep: 'EvSessionConfigUIOptions', optional: true },\n  ],\n})\nclass EvSessionConfigUI\n  extends RcUIModuleV2<DepsModules, EvSessionConfigUIState>\n  implements SessionConfigUI {\n  constructor({\n    locale,\n    routerInteraction,\n    evAuth,\n    evSessionConfig,\n    evClient,\n    evSettings,\n    evWorkingState,\n    storage,\n    enableCache = true,\n  }) {\n    super({\n      modules: {\n        locale,\n        routerInteraction,\n        evAuth,\n        evClient,\n        evSessionConfig,\n        evSettings,\n        evWorkingState,\n        storage,\n      },\n      enableCache,\n      storageKey: 'EvSessionConfigUI',\n    });\n  }\n\n  @storage\n  @state\n  isLoading = false;\n\n  getInboundQueuesFieldText = createSelector(\n    () => this._modules.locale.currentLocale,\n    () => this._modules.evSessionConfig.selectedInboundQueueIds,\n    () => this._modules.evSessionConfig.getInboundQueues(),\n    (currentLocale, selectedInboundQueueIds, inboundQueues) => {\n      if (selectedInboundQueueIds.length === 1) {\n        const selectedInboundQueue = inboundQueues.find(\n          (inboundQueue) => inboundQueue.gateId === selectedInboundQueueIds[0],\n        );\n        return selectedInboundQueue.gateName;\n      }\n\n      if (selectedInboundQueueIds.length > 1) {\n        return `${i18n.getString('multiple', currentLocale)} (${\n          selectedInboundQueueIds.length\n        })`;\n      }\n\n      return i18n.getString(dropDownOptions.None, currentLocale);\n    },\n  );\n\n  @action\n  setIsLoading(isLoading: boolean) {\n    this.state.isLoading = isLoading;\n  }\n\n  onInit() {\n    this.setIsLoading(false);\n  }\n\n  async setConfigure() {\n    this.setIsLoading(true);\n    try {\n      await this._modules.evSessionConfig.configureAgent();\n    } catch (e) {\n      console.error(e);\n      return;\n    } finally {\n      this.setIsLoading(false);\n    }\n  }\n\n  getUIProps(): EvSessionConfigUIProps {\n    const {\n      selectedSkillProfileId,\n      getSkillProfileList,\n      getLoginTypeList,\n      loginType,\n      extensionNumber,\n      isExternalPhone,\n      takingCall,\n      autoAnswer,\n    } = this._modules.evSessionConfig;\n    return {\n      selectedSkillProfileId,\n      skillProfileList: getSkillProfileList(),\n      loginTypeList: getLoginTypeList(),\n      loginType,\n      takingCall,\n      autoAnswer,\n      extensionNumber,\n      isExtensionNumber: isExternalPhone,\n      isLoading: this.isLoading,\n      inboundQueuesFieldText: this.getInboundQueuesFieldText(),\n      currentLocale: this._modules.locale.currentLocale,\n    };\n  }\n\n  getUIFunctions(): EvSessionConfigUIFunctions {\n    return {\n      navigateToInboundQueuesPage: () => {\n        this._modules.routerInteraction.push('/sessionConfig/inboundQueues');\n      },\n      setSkillProfileId: (profile) => {\n        this._modules.evSessionConfig.setSkillProfileId(profile);\n      },\n      setLoginType: (loginType) => {\n        this._modules.evSessionConfig.setLoginType(loginType);\n      },\n      setExtensionNumber: (extensionNumber) => {\n        this._modules.evSessionConfig.setExtensionNumber(extensionNumber);\n      },\n      setTakingCall: (takingCall) => {\n        this._modules.evSessionConfig.setTakingCall(takingCall);\n      },\n      setAutoAnswer: (autoAnswer) => {\n        this._modules.evSessionConfig.setAutoAnswer(autoAnswer);\n      },\n      setConfigure: async () => {\n        await this.setConfigure();\n      },\n    };\n  }\n}\nexport { EvSessionConfigUI };\n"],"file":"EvSessionConfigUI.js"}