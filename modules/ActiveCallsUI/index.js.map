{"version":3,"sources":["modules/ActiveCallsUI/index.jsx"],"names":["ModalContentRendererID","ActiveCallsUI","name","deps","dep","optional","brand","locale","webphone","callLogger","callMonitor","rateLimiter","composeText","contactSearch","regionSettings","conferenceCall","contactMatcher","callingSettings","contactDetailsUI","activeCallControl","routerInteraction","rolesAndPermissions","connectivityMonitor","modalUI","options","_brand","_locale","_webphone","_callLogger","_callMonitor","_rateLimiter","_composeText","_contactSearch","_regionSettings","_conferenceCall","_contactMatcher","_callingSettings","_contactDetailsUI","_activeCallControl","_routerInteraction","_rolesAndPermissions","_connectivityMonitor","_modalUI","registerRenderer","currentLocale","contactName","showContactDisplayPlaceholder","showRingoutCallControl","showSwitchCall","showTransferCall","showHoldOnOtherDevice","useV2","useCallControl","isWebRTC","callingMode","callingModes","controlBusy","busy","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","countryCode","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","showSpinner","isMerging","fullName","connected","autoLog","conferenceCallParties","partyProfiles","disableLinks","connectivity","throttling","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onCallsEmpty","onViewContact","showViewContact","getAvatarUrl","_useCallControlSDK","modalConfirm","props","confirm","content","modalClose","id","close","formatPhone","phoneNumber","webphoneAnswer","sessionId","telephonySessionId","isHoldAndAnswer","answerAndHold","answer","session","sessions","find","direction","callDirections","inbound","closeMergingPair","webphoneToVoicemail","reject","toVoiceMail","webphoneReject","webphoneHangup","allCallsClickHangupTrack","hangUp","hangup","webphoneResume","unhold","resume","currentPath","push","webphoneHold","allCallsClickHoldTrack","hold","webphoneSwitchCall","activeCall","switchCall","homeCountryId","webphoneIgnore","ignore","ringoutHangup","ringoutTransfer","ringoutReject","allCallsClickRejectTrack","contact","type","showContactDetails","direct","onClickToSms","isDummyContact","clean","updateTypingToNumber","search","searchString","addToRecipients","undefined","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","call","redirect","logCall","length","isSessionAConferenceCall","isConferenceSession","onCallItemClick","webphoneSession","callItemClickTrack","toggleMinimized","updateSessionMatchedContact","isOnHold","calls","x","telephonySession","clickSwitchTrack","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport { isRingingInboundCall } from 'ringcentral-integration/lib/callLogHelpers';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport { isOnHold } from 'ringcentral-integration/modules/Webphone/webphoneHelper';\nimport { isHolding } from 'ringcentral-integration/modules/ActiveCallControlV2/helpers';\nimport RcUIModule from '../../lib/RcUIModule';\nimport { ModalContent } from '../../components/ActiveCallItemV2';\n\nconst ModalContentRendererID = 'ActiveCallsUI.ModalContentRenderer';\n@Module({\n  name: 'ActiveCallsUI',\n  deps: [\n    'Brand',\n    'Locale',\n    'CallMonitor',\n    'RateLimiter',\n    'ContactSearch',\n    'RegionSettings',\n    'ContactMatcher',\n    'CallingSettings',\n    'RouterInteraction',\n    'RolesAndPermissions',\n    'ConnectivityMonitor',\n    { dep: 'ModalUI', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'CallLogger', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'ContactDetailsUI', optional: true },\n    { dep: 'ActiveCallControl', optional: true },\n  ],\n})\nexport default class ActiveCallsUI extends RcUIModule {\n  constructor({\n    brand,\n    locale,\n    webphone,\n    callLogger,\n    callMonitor,\n    rateLimiter,\n    composeText,\n    contactSearch,\n    regionSettings,\n    conferenceCall,\n    contactMatcher,\n    callingSettings,\n    contactDetailsUI,\n    activeCallControl,\n    routerInteraction,\n    rolesAndPermissions,\n    connectivityMonitor,\n    modalUI,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._brand = brand;\n    this._locale = locale;\n    this._webphone = webphone;\n    this._callLogger = callLogger;\n    this._callMonitor = callMonitor;\n    this._rateLimiter = rateLimiter;\n    this._composeText = composeText;\n    this._contactSearch = contactSearch;\n    this._regionSettings = regionSettings;\n    this._conferenceCall = conferenceCall;\n    this._contactMatcher = contactMatcher;\n    this._callingSettings = callingSettings;\n    this._contactDetailsUI = contactDetailsUI;\n    this._activeCallControl = activeCallControl;\n    this._routerInteraction = routerInteraction;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._connectivityMonitor = connectivityMonitor;\n    this._modalUI = modalUI;\n    this._modalUI?.registerRenderer(\n      ModalContentRendererID,\n      ({ currentLocale, contactName }) => (\n        <ModalContent currentLocale={currentLocale} contactName={contactName} />\n      ),\n    );\n  }\n\n  getUIProps({\n    showContactDisplayPlaceholder = false,\n    showRingoutCallControl = false,\n    showSwitchCall = false,\n    showTransferCall = true,\n    showHoldOnOtherDevice = false,\n    useV2,\n    useCallControl,\n  }) {\n    const isWebRTC =\n      this._callingSettings.callingMode === callingModes.webphone;\n    const controlBusy =\n      (this._activeCallControl && this._activeCallControl.busy) || false;\n    return {\n      currentLocale: this._locale.currentLocale,\n      activeRingCalls: this._callMonitor.activeRingCalls,\n      activeOnHoldCalls: this._callMonitor.activeOnHoldCalls,\n      activeCurrentCalls: this._callMonitor.activeCurrentCalls,\n      otherDeviceCalls: this._callMonitor.otherDeviceCalls,\n      areaCode: this._regionSettings.areaCode,\n      countryCode: this._regionSettings.countryCode,\n      outboundSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.InternalSMS\n      ),\n      showSpinner: !!(this._conferenceCall && this._conferenceCall.isMerging),\n      brand: this._brand.fullName,\n      showContactDisplayPlaceholder,\n      showRingoutCallControl,\n      showTransferCall,\n      showHoldOnOtherDevice,\n      showSwitchCall:\n        showSwitchCall &&\n        isWebRTC &&\n        this._webphone &&\n        this._webphone.connected,\n      autoLog: !!(this._callLogger && this._callLogger.autoLog),\n      isWebRTC,\n      conferenceCallParties: this._conferenceCall\n        ? this._conferenceCall.partyProfiles\n        : null,\n      useV2,\n      disableLinks:\n        !this._connectivityMonitor.connectivity ||\n        this._rateLimiter.throttling ||\n        controlBusy,\n      useCallControl,\n    };\n  }\n\n  getUIFunctions({\n    composeTextRoute = '/composeText',\n    callCtrlRoute = '/calls/active',\n    onCreateContact,\n    onLogCall,\n    isLoggedContact,\n    onCallsEmpty,\n    onViewContact,\n    showViewContact = true,\n    getAvatarUrl,\n    useV2,\n    useCallControl,\n  }) {\n    // Toggle to control if use new call control API, should using the ActiveCallControlV2 module same time,\n    // when you set this toggle to true (https://developers.ringcentral.com/api-reference/Call-Control/createCallOutCallSession)\n    this._useCallControlSDK = useCallControl && this._activeCallControl;\n    return {\n      modalConfirm: (props) =>\n        this._modalUI &&\n        this._modalUI.confirm({ ...props, content: ModalContentRendererID }),\n      modalClose: (id) => this._modalUI && this._modalUI.close(id),\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._regionSettings.areaCode,\n          countryCode: this._regionSettings.countryCode,\n        }),\n      webphoneAnswer: async (\n        sessionId,\n        telephonySessionId,\n        isHoldAndAnswer = false,\n      ) => {\n        if (this._useCallControlSDK) {\n          isHoldAndAnswer && this._activeCallControl.answerAndHold\n            ? this._activeCallControl.answerAndHold(telephonySessionId)\n            : this._activeCallControl.answer(telephonySessionId);\n        } else {\n          if (!this._webphone) {\n            return;\n          }\n\n          const session = this._webphone.sessions.find(\n            (session) => session.id === sessionId,\n          );\n          if (\n            this._conferenceCall &&\n            session &&\n            session.direction === callDirections.inbound\n          ) {\n            this._conferenceCall.closeMergingPair();\n          }\n\n          this._webphone.answer(sessionId);\n        }\n      },\n      webphoneToVoicemail: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.reject(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.toVoiceMail(sessionId);\n      },\n      webphoneReject: async (sessionId) => {\n        return this._webphone && this._webphone.reject(sessionId);\n      },\n\n      webphoneHangup: async (sessionId, telephonySessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.hangUp(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.hangup(sessionId);\n      },\n      webphoneResume: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.unhold(telephonySessionId)\n          );\n        }\n        if (!this._webphone) {\n          return;\n        }\n        await this._webphone.resume(sessionId);\n        if (this._routerInteraction.currentPath !== callCtrlRoute && !useV2) {\n          this._routerInteraction.push(callCtrlRoute);\n        }\n      },\n      webphoneHold: async (sessionId, telephonySessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickHoldTrack();\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.hold(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.hold(sessionId);\n      },\n      webphoneSwitchCall: async (activeCall) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.switch(activeCall.telephonySessionId)\n          );\n        }\n        if (!this._webphone) {\n          return;\n        }\n        const session = await this._webphone.switchCall(\n          activeCall,\n          this._regionSettings.homeCountryId,\n        );\n        return session;\n      },\n      webphoneIgnore: async (telephonySessionId) => {\n        return this._activeCallControl?.ignore(telephonySessionId);\n      },\n      ringoutHangup: async (...args) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        return (\n          this._activeCallControl && this._activeCallControl.hangUp(...args)\n        );\n      },\n      ringoutTransfer: async (sessionId) => {\n        this._routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      ringoutReject: async (sessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickRejectTrack();\n        return (\n          this._activeCallControl && this._activeCallControl.reject(sessionId)\n        );\n      },\n      onViewContact: showViewContact\n        ? onViewContact ||\n          (({ contact }) => {\n            const { id, type } = contact;\n            if (this._contactDetailsUI) {\n              this._contactDetailsUI.showContactDetails({\n                type,\n                id,\n                direct: true,\n              });\n            }\n          })\n        : null,\n      onClickToSms: this._composeText\n        ? async (contact, isDummyContact = false) => {\n            if (this._routerInteraction) {\n              this._routerInteraction.push(composeTextRoute);\n            }\n            this._composeText.clean();\n            if (contact.name && contact.phoneNumber && isDummyContact) {\n              this._composeText.updateTypingToNumber(contact.name);\n              this._contactSearch.search({ searchString: contact.name });\n            } else {\n              this._composeText.addToRecipients(contact);\n            }\n          }\n        : undefined,\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }) => {\n            const hasMatchNumber = await this._contactMatcher.hasMatchNumber({\n              phoneNumber,\n              ignoreCache: true,\n            });\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await this._contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (this._callLogger &&\n          (async ({ call, contact, redirect = true }) => {\n            await this._callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n      onCallsEmpty:\n        onCallsEmpty ||\n        (() => {\n          const isWebRTC =\n            this._callingSettings.callingMode === callingModes.webphone;\n\n          if (isWebRTC && !this._webphone.sessions.length) {\n            this._routerInteraction.push('/dialer');\n          }\n        }),\n      isSessionAConferenceCall: (sessionId) =>\n        !!(\n          this._conferenceCall &&\n          this._conferenceCall.isConferenceSession(sessionId)\n        ),\n      onCallItemClick: (call) => {\n        if (!call.webphoneSession) {\n          // For ringout call\n          if (isRingingInboundCall(call)) {\n            return;\n          }\n\n          const { telephonySessionId } = call;\n          // to track the call item be clicked.\n          this._callMonitor.callItemClickTrack();\n          this._routerInteraction.push(\n            `/simplifycallctrl/${telephonySessionId}`,\n          );\n        } else {\n          // For webphone call\n          // show the ring call modal when click a ringing call.\n          if (isRingingInboundCall(call)) {\n            this._webphone.toggleMinimized(call.webphoneSession.id);\n            return;\n          }\n          if (call.webphoneSession && call.webphoneSession.id) {\n            // to track the call item be clicked.\n            this._callMonitor.callItemClickTrack();\n            this._routerInteraction.push(\n              `${callCtrlRoute}/${call.webphoneSession.id}`,\n            );\n          }\n        }\n      },\n      getAvatarUrl,\n      updateSessionMatchedContact: (sessionId, contact) =>\n        this._webphone.updateSessionMatchedContact(sessionId, contact),\n      // function to check if a call is on hold status\n      isOnHold: (webphoneSession) => {\n        if (this._useCallControlSDK) {\n          const call =\n            this._callMonitor.calls.find(\n              (x) => x.webphoneSession === webphoneSession,\n            ) || {};\n          const { telephonySession } = call;\n          return isHolding(telephonySession);\n        }\n        return isOnHold(webphoneSession);\n      },\n      clickSwitchTrack: () => {\n        this._activeCallControl?.clickSwitchTrack?.();\n      },\n    };\n  }\n}\n"],"file":"index.js"}