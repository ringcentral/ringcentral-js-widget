{"version":3,"sources":["modules/ActiveCallsUI/index.js"],"names":["ActiveCallsUI","name","deps","dep","optional","brand","locale","webphone","callLogger","callMonitor","rateLimiter","composeText","contactSearch","regionSettings","conferenceCall","contactMatcher","callingSettings","contactDetailsUI","activeCallControl","routerInteraction","rolesAndPermissions","connectivityMonitor","modal","options","_brand","_locale","_webphone","_callLogger","_callMonitor","_rateLimiter","_composeText","_contactSearch","_regionSettings","_conferenceCall","_contactMatcher","_callingSettings","_contactDetailsUI","_activeCallControl","_routerInteraction","_rolesAndPermissions","_connectivityMonitor","_modal","showContactDisplayPlaceholder","showRingoutCallControl","showSwitchCall","showTransferCall","showHoldOnOtherDevice","useV2","useCallControl","isWebRTC","callingMode","callingModes","controlBusy","busy","currentLocale","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","countryCode","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","showSpinner","isMerging","fullName","connected","autoLog","conferenceCallParties","partyProfiles","disableLinks","connectivity","throttling","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onCallsEmpty","onViewContact","showViewContact","getAvatarUrl","_useCallControlSDK","modalConfirm","props","confirm","modalClose","id","close","formatPhone","phoneNumber","webphoneAnswer","sessionId","telephonySessionId","answer","session","sessions","find","direction","callDirections","inbound","closeMergingPair","webphoneToVoicemail","reject","toVoiceMail","webphoneReject","webphoneHangup","allCallsClickHangupTrack","hangUp","hangup","webphoneResume","unhold","resume","currentPath","push","webphoneHold","allCallsClickHoldTrack","hold","webphoneSwitchCall","activeCall","switchCall","homeCountryId","webphoneIgnore","ignore","ringoutHangup","ringoutTransfer","ringoutReject","allCallsClickRejectTrack","contact","type","showContactDetails","direct","onClickToSms","isDummyContact","clean","updateTypingToNumber","search","searchString","addToRecipients","undefined","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","call","redirect","logCall","length","isSessionAConferenceCall","isConferenceSession","onCallItemClick","webphoneSession","callItemClickTrack","toggleMinimized","updateSessionMatchedContact","isOnHold","calls","x","telephonySession","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport { isRingingInboundCall } from 'ringcentral-integration/lib/callLogHelpers';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport { isOnHold } from 'ringcentral-integration/modules/Webphone/webphoneHelper';\nimport { isHolding } from 'ringcentral-integration/modules/ActiveCallControlV2/helpers';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'ActiveCallsUI',\n  deps: [\n    'Brand',\n    'Locale',\n    'CallMonitor',\n    'RateLimiter',\n    'ContactSearch',\n    'RegionSettings',\n    'ContactMatcher',\n    'CallingSettings',\n    'RouterInteraction',\n    'RolesAndPermissions',\n    'ConnectivityMonitor',\n    { dep: 'Modal', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'CallLogger', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'ContactDetailsUI', optional: true },\n    { dep: 'ActiveCallControl', optional: true },\n  ],\n})\nexport default class ActiveCallsUI extends RcUIModule {\n  constructor({\n    brand,\n    locale,\n    webphone,\n    callLogger,\n    callMonitor,\n    rateLimiter,\n    composeText,\n    contactSearch,\n    regionSettings,\n    conferenceCall,\n    contactMatcher,\n    callingSettings,\n    contactDetailsUI,\n    activeCallControl,\n    routerInteraction,\n    rolesAndPermissions,\n    connectivityMonitor,\n    modal,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._brand = brand;\n    this._locale = locale;\n    this._webphone = webphone;\n    this._callLogger = callLogger;\n    this._callMonitor = callMonitor;\n    this._rateLimiter = rateLimiter;\n    this._composeText = composeText;\n    this._contactSearch = contactSearch;\n    this._regionSettings = regionSettings;\n    this._conferenceCall = conferenceCall;\n    this._contactMatcher = contactMatcher;\n    this._callingSettings = callingSettings;\n    this._contactDetailsUI = contactDetailsUI;\n    this._activeCallControl = activeCallControl;\n    this._routerInteraction = routerInteraction;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._connectivityMonitor = connectivityMonitor;\n    this._modal = modal;\n  }\n\n  getUIProps({\n    showContactDisplayPlaceholder = false,\n    showRingoutCallControl = false,\n    showSwitchCall = false,\n    showTransferCall = true,\n    showHoldOnOtherDevice = false,\n    useV2,\n    useCallControl,\n  }) {\n    const isWebRTC =\n      this._callingSettings.callingMode === callingModes.webphone;\n    const controlBusy =\n      (this._activeCallControl && this._activeCallControl.busy) || false;\n    return {\n      currentLocale: this._locale.currentLocale,\n      activeRingCalls: this._callMonitor.activeRingCalls,\n      activeOnHoldCalls: this._callMonitor.activeOnHoldCalls,\n      activeCurrentCalls: this._callMonitor.activeCurrentCalls,\n      otherDeviceCalls: this._callMonitor.otherDeviceCalls,\n      areaCode: this._regionSettings.areaCode,\n      countryCode: this._regionSettings.countryCode,\n      outboundSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.InternalSMS\n      ),\n      showSpinner: !!(this._conferenceCall && this._conferenceCall.isMerging),\n      brand: this._brand.fullName,\n      showContactDisplayPlaceholder,\n      showRingoutCallControl,\n      showTransferCall,\n      showHoldOnOtherDevice,\n      showSwitchCall:\n        showSwitchCall &&\n        isWebRTC &&\n        this._webphone &&\n        this._webphone.connected,\n      autoLog: !!(this._callLogger && this._callLogger.autoLog),\n      isWebRTC,\n      conferenceCallParties: this._conferenceCall\n        ? this._conferenceCall.partyProfiles\n        : null,\n      useV2,\n      disableLinks:\n        !this._connectivityMonitor.connectivity ||\n        this._rateLimiter.throttling ||\n        controlBusy,\n      useCallControl,\n    };\n  }\n\n  getUIFunctions({\n    composeTextRoute = '/composeText',\n    callCtrlRoute = '/calls/active',\n    onCreateContact,\n    onLogCall,\n    isLoggedContact,\n    onCallsEmpty,\n    onViewContact,\n    showViewContact = true,\n    getAvatarUrl,\n    useV2,\n    useCallControl,\n  }) {\n    // Toggle to control if use new call control API, should using the ActiveCallControlV2 module same time,\n    // when you set this toggle to true (https://developers.ringcentral.com/api-reference/Call-Control/createCallOutCallSession)\n    this._useCallControlSDK = useCallControl && this._activeCallControl;\n    return {\n      modalConfirm: (props) => this._modal && this._modal.confirm(props),\n      modalClose: (id) => this._modal && this._modal.close(id),\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._regionSettings.areaCode,\n          countryCode: this._regionSettings.countryCode,\n        }),\n      webphoneAnswer: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          this._activeCallControl.answer(telephonySessionId);\n        } else {\n          if (!this._webphone) {\n            return;\n          }\n\n          const session = this._webphone.sessions.find(\n            (session) => session.id === sessionId,\n          );\n          if (\n            this._conferenceCall &&\n            session &&\n            session.direction === callDirections.inbound\n          ) {\n            this._conferenceCall.closeMergingPair();\n          }\n\n          this._webphone.answer(sessionId);\n        }\n      },\n      webphoneToVoicemail: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.reject(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.toVoiceMail(sessionId);\n      },\n      webphoneReject: async (sessionId) => {\n        return this._webphone && this._webphone.reject(sessionId);\n      },\n\n      webphoneHangup: async (sessionId, telephonySessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.hangUp(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.hangup(sessionId);\n      },\n      webphoneResume: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.unhold(telephonySessionId)\n          );\n        }\n        if (!this._webphone) {\n          return;\n        }\n        await this._webphone.resume(sessionId);\n        if (this._routerInteraction.currentPath !== callCtrlRoute && !useV2) {\n          this._routerInteraction.push(callCtrlRoute);\n        }\n      },\n      webphoneHold: async (sessionId, telephonySessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickHoldTrack();\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.hold(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.hold(sessionId);\n      },\n      webphoneSwitchCall: async (activeCall) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.switch(activeCall.telephonySessionId)\n          );\n        }\n        if (!this._webphone) {\n          return;\n        }\n        const session = await this._webphone.switchCall(\n          activeCall,\n          this._regionSettings.homeCountryId,\n        );\n        return session;\n      },\n      webphoneIgnore: async (telephonySessionId) => {\n        return this._activeCallControl?.ignore(telephonySessionId);\n      },\n      ringoutHangup: async (...args) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        return (\n          this._activeCallControl && this._activeCallControl.hangUp(...args)\n        );\n      },\n      ringoutTransfer: async (sessionId) => {\n        this._routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      ringoutReject: async (sessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickRejectTrack();\n        return (\n          this._activeCallControl && this._activeCallControl.reject(sessionId)\n        );\n      },\n      onViewContact: showViewContact\n        ? onViewContact ||\n          (({ contact }) => {\n            const { id, type } = contact;\n            if (this._contactDetailsUI) {\n              this._contactDetailsUI.showContactDetails({\n                type,\n                id,\n                direct: true,\n              });\n            }\n          })\n        : null,\n      onClickToSms: this._composeText\n        ? async (contact, isDummyContact = false) => {\n            if (this._routerInteraction) {\n              this._routerInteraction.push(composeTextRoute);\n            }\n            this._composeText.clean();\n            if (contact.name && contact.phoneNumber && isDummyContact) {\n              this._composeText.updateTypingToNumber(contact.name);\n              this._contactSearch.search({ searchString: contact.name });\n            } else {\n              this._composeText.addToRecipients(contact);\n            }\n          }\n        : undefined,\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }) => {\n            const hasMatchNumber = await this._contactMatcher.hasMatchNumber({\n              phoneNumber,\n              ignoreCache: true,\n            });\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await this._contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (this._callLogger &&\n          (async ({ call, contact, redirect = true }) => {\n            await this._callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n      onCallsEmpty:\n        onCallsEmpty ||\n        (() => {\n          const isWebRTC =\n            this._callingSettings.callingMode === callingModes.webphone;\n\n          if (isWebRTC && !this._webphone.sessions.length) {\n            this._routerInteraction.push('/dialer');\n          }\n        }),\n      isSessionAConferenceCall: (sessionId) =>\n        !!(\n          this._conferenceCall &&\n          this._conferenceCall.isConferenceSession(sessionId)\n        ),\n      onCallItemClick: (call) => {\n        if (!call.webphoneSession) {\n          // For ringout call\n          if (isRingingInboundCall(call)) {\n            return;\n          }\n\n          const { telephonySessionId } = call;\n          // to track the call item be clicked.\n          this._callMonitor.callItemClickTrack();\n          this._routerInteraction.push(\n            `/simplifycallctrl/${telephonySessionId}`,\n          );\n        } else {\n          // For webphone call\n          // show the ring call modal when click a ringing call.\n          if (isRingingInboundCall(call)) {\n            this._webphone.toggleMinimized(call.webphoneSession.id);\n            return;\n          }\n          if (call.webphoneSession && call.webphoneSession.id) {\n            // to track the call item be clicked.\n            this._callMonitor.callItemClickTrack();\n            this._routerInteraction.push(\n              `${callCtrlRoute}/${call.webphoneSession.id}`,\n            );\n          }\n        }\n      },\n      getAvatarUrl,\n      updateSessionMatchedContact: (sessionId, contact) =>\n        this._webphone.updateSessionMatchedContact(sessionId, contact),\n      // function to check if a call is on hold status\n      isOnHold: (webphoneSession) => {\n        if (this._useCallControlSDK) {\n          const call =\n            this._callMonitor.calls.find(\n              (x) => x.webphoneSession === webphoneSession,\n            ) || {};\n          const { telephonySession } = call;\n          return isHolding(telephonySession);\n        }\n        return isOnHold(webphoneSession);\n      },\n    };\n  }\n}\n"],"file":"index.js"}