{"version":3,"sources":["modules/ActiveCallsUI/index.js"],"names":["ActiveCallsUI","name","deps","dep","optional","brand","locale","webphone","callLogger","callMonitor","rateLimiter","composeText","contactSearch","regionSettings","conferenceCall","contactMatcher","callingSettings","contactDetailsUI","activeCallControl","routerInteraction","rolesAndPermissions","connectivityMonitor","options","_brand","_locale","_webphone","_callLogger","_callMonitor","_rateLimiter","_composeText","_contactSearch","_regionSettings","_conferenceCall","_contactMatcher","_callingSettings","_contactDetailsUI","_activeCallControl","_routerInteraction","_rolesAndPermissions","_connectivityMonitor","showContactDisplayPlaceholder","showRingoutCallControl","showSwitchCall","useV2","useCallControl","isWebRTC","callingMode","callingModes","controlBusy","busy","currentLocale","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","countryCode","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","showSpinner","isMerging","fullName","connected","autoLog","conferenceCallParties","partyProfiles","disableLinks","connectivity","throttling","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onCallsEmpty","onViewContact","showViewContact","getAvatarUrl","_useCallControlSDK","formatPhone","phoneNumber","webphoneAnswer","sessionId","telephonySessionId","answer","session","sessions","find","id","direction","callDirections","inbound","closeMergingPair","webphoneToVoicemail","reject","toVoiceMail","webphoneReject","webphoneHangup","allCallsClickHangupTrack","hangUp","hangup","webphoneResume","unhold","resume","currentPath","push","webphoneHold","hold","webphoneSwitchCall","activeCall","switchCall","homeCountryId","ringoutHangup","ringoutTransfer","ringoutReject","allCallsClickRejectTrack","contact","type","showContactDetails","direct","onClickToSms","isDummyContact","clean","updateTypingToNumber","search","searchString","addToRecipients","undefined","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","call","redirect","logCall","length","isSessionAConferenceCall","isConferenceSession","onCallItemClick","webphoneSession","callItemClickTrack","toggleMinimized","updateSessionMatchedContact","isOnHold","calls","x","telephonySession","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport { isRingingInboundCall } from 'ringcentral-integration/lib/callLogHelpers';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport { isOnHold } from 'ringcentral-integration/modules/Webphone/webphoneHelper';\nimport { isHolding } from 'ringcentral-integration/modules/ActiveCallControlV2/helpers';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'ActiveCallsUI',\n  deps: [\n    'Brand',\n    'Locale',\n    'CallMonitor',\n    'RateLimiter',\n    'ContactSearch',\n    'RegionSettings',\n    'ContactMatcher',\n    'CallingSettings',\n    'RouterInteraction',\n    'RolesAndPermissions',\n    'ConnectivityMonitor',\n    { dep: 'Webphone', optional: true },\n    { dep: 'CallLogger', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'ContactDetailsUI', optional: true },\n    { dep: 'ActiveCallControl', optional: true },\n  ],\n})\nexport default class ActiveCallsUI extends RcUIModule {\n  constructor({\n    brand,\n    locale,\n    webphone,\n    callLogger,\n    callMonitor,\n    rateLimiter,\n    composeText,\n    contactSearch,\n    regionSettings,\n    conferenceCall,\n    contactMatcher,\n    callingSettings,\n    contactDetailsUI,\n    activeCallControl,\n    routerInteraction,\n    rolesAndPermissions,\n    connectivityMonitor,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._brand = brand;\n    this._locale = locale;\n    this._webphone = webphone;\n    this._callLogger = callLogger;\n    this._callMonitor = callMonitor;\n    this._rateLimiter = rateLimiter;\n    this._composeText = composeText;\n    this._contactSearch = contactSearch;\n    this._regionSettings = regionSettings;\n    this._conferenceCall = conferenceCall;\n    this._contactMatcher = contactMatcher;\n    this._callingSettings = callingSettings;\n    this._contactDetailsUI = contactDetailsUI;\n    this._activeCallControl = activeCallControl;\n    this._routerInteraction = routerInteraction;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._connectivityMonitor = connectivityMonitor;\n  }\n\n  getUIProps({\n    showContactDisplayPlaceholder = false,\n    showRingoutCallControl = false,\n    showSwitchCall = false,\n    useV2,\n    useCallControl,\n  }) {\n    const isWebRTC =\n      this._callingSettings.callingMode === callingModes.webphone;\n    const controlBusy =\n      (this._activeCallControl && this._activeCallControl.busy) || false;\n\n    return {\n      currentLocale: this._locale.currentLocale,\n      activeRingCalls: this._callMonitor.activeRingCalls,\n      activeOnHoldCalls: this._callMonitor.activeOnHoldCalls,\n      activeCurrentCalls: this._callMonitor.activeCurrentCalls,\n      otherDeviceCalls: this._callMonitor.otherDeviceCalls,\n      areaCode: this._regionSettings.areaCode,\n      countryCode: this._regionSettings.countryCode,\n      outboundSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.InternalSMS\n      ),\n      showSpinner: !!(this._conferenceCall && this._conferenceCall.isMerging),\n      brand: this._brand.fullName,\n      showContactDisplayPlaceholder,\n      showRingoutCallControl,\n      showSwitchCall:\n        showSwitchCall &&\n        isWebRTC &&\n        this._webphone &&\n        this._webphone.connected,\n      autoLog: !!(this._callLogger && this._callLogger.autoLog),\n      isWebRTC,\n      conferenceCallParties: this._conferenceCall\n        ? this._conferenceCall.partyProfiles\n        : null,\n      useV2,\n      disableLinks:\n        !this._connectivityMonitor.connectivity ||\n        this._rateLimiter.throttling ||\n        controlBusy,\n      useCallControl,\n    };\n  }\n\n  getUIFunctions({\n    composeTextRoute = '/composeText',\n    callCtrlRoute = '/calls/active',\n    onCreateContact,\n    onLogCall,\n    isLoggedContact,\n    onCallsEmpty,\n    onViewContact,\n    showViewContact = true,\n    getAvatarUrl,\n    useV2,\n    useCallControl,\n  }) {\n    // Toggle to control if use new call control API, should using the ActiveCallControlV2 module same time,\n    // when you set this toggle to true (https://developers.ringcentral.com/api-reference/Call-Control/createCallOutCallSession)\n    this._useCallControlSDK = useCallControl && this._activeCallControl;\n    return {\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._regionSettings.areaCode,\n          countryCode: this._regionSettings.countryCode,\n        }),\n      webphoneAnswer: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          this._activeCallControl.answer(telephonySessionId);\n        } else {\n          if (!this._webphone) {\n            return;\n          }\n\n          const session = this._webphone.sessions.find(\n            (session) => session.id === sessionId,\n          );\n          if (\n            this._conferenceCall &&\n            session &&\n            session.direction === callDirections.inbound\n          ) {\n            this._conferenceCall.closeMergingPair();\n          }\n\n          this._webphone.answer(sessionId);\n        }\n      },\n      webphoneToVoicemail: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.reject(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.toVoiceMail(sessionId);\n      },\n      webphoneReject: async (sessionId) => {\n        return this._webphone && this._webphone.reject(sessionId);\n      },\n\n      webphoneHangup: async (sessionId, telephonySessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.hangUp(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.hangup(sessionId);\n      },\n      webphoneResume: async (sessionId, telephonySessionId) => {\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.unhold(telephonySessionId)\n          );\n        }\n        if (!this._webphone) {\n          return;\n        }\n        await this._webphone.resume(sessionId);\n        if (this._routerInteraction.currentPath !== callCtrlRoute && !useV2) {\n          this._routerInteraction.push(callCtrlRoute);\n        }\n      },\n      webphoneHold: async (sessionId, telephonySessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        if (this._useCallControlSDK) {\n          return (\n            this._activeCallControl &&\n            this._activeCallControl.hold(telephonySessionId)\n          );\n        }\n        return this._webphone && this._webphone.hold(sessionId);\n      },\n      webphoneSwitchCall: async (activeCall) => {\n        if (!this._webphone) {\n          return;\n        }\n        const session = await this._webphone.switchCall(\n          activeCall,\n          this._regionSettings.homeCountryId,\n        );\n        return session;\n      },\n      ringoutHangup: async (...args) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        return (\n          this._activeCallControl && this._activeCallControl.hangUp(...args)\n        );\n      },\n      ringoutTransfer: async (sessionId) => {\n        this._routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      ringoutReject: async (sessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickRejectTrack();\n        return (\n          this._activeCallControl && this._activeCallControl.reject(sessionId)\n        );\n      },\n      onViewContact: showViewContact\n        ? onViewContact ||\n          (({ contact }) => {\n            const { id, type } = contact;\n            if (this._contactDetailsUI) {\n              this._contactDetailsUI.showContactDetails({\n                type,\n                id,\n                direct: true,\n              });\n            }\n          })\n        : null,\n      onClickToSms: this._composeText\n        ? async (contact, isDummyContact = false) => {\n            if (this._routerInteraction) {\n              this._routerInteraction.push(composeTextRoute);\n            }\n            this._composeText.clean();\n            if (contact.name && contact.phoneNumber && isDummyContact) {\n              this._composeText.updateTypingToNumber(contact.name);\n              this._contactSearch.search({ searchString: contact.name });\n            } else {\n              this._composeText.addToRecipients(contact);\n            }\n          }\n        : undefined,\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }) => {\n            const hasMatchNumber = await this._contactMatcher.hasMatchNumber({\n              phoneNumber,\n              ignoreCache: true,\n            });\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await this._contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (this._callLogger &&\n          (async ({ call, contact, redirect = true }) => {\n            await this._callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n      onCallsEmpty:\n        onCallsEmpty ||\n        (() => {\n          const isWebRTC =\n            this._callingSettings.callingMode === callingModes.webphone;\n\n          if (isWebRTC && !this._webphone.sessions.length) {\n            this._routerInteraction.push('/dialer');\n          }\n        }),\n      isSessionAConferenceCall: (sessionId) =>\n        !!(\n          this._conferenceCall &&\n          this._conferenceCall.isConferenceSession(sessionId)\n        ),\n      onCallItemClick: (call) => {\n        if (!call.webphoneSession) {\n          // For ringout call\n          if (isRingingInboundCall(call)) {\n            return;\n          }\n\n          const { telephonySessionId } = call;\n          // to track the call item be clicked.\n          this._callMonitor.callItemClickTrack();\n          this._routerInteraction.push(\n            `/simplifycallctrl/${telephonySessionId}`,\n          );\n        } else {\n          // For webphone call\n          // show the ring call modal when click a ringing call.\n          if (isRingingInboundCall(call)) {\n            this._webphone.toggleMinimized(call.webphoneSession.id);\n            return;\n          }\n          if (call.webphoneSession && call.webphoneSession.id) {\n            // to track the call item be clicked.\n            this._callMonitor.callItemClickTrack();\n            this._routerInteraction.push(\n              `${callCtrlRoute}/${call.webphoneSession.id}`,\n            );\n          }\n        }\n      },\n      getAvatarUrl,\n      updateSessionMatchedContact: (sessionId, contact) =>\n        this._webphone.updateSessionMatchedContact(sessionId, contact),\n      // function to check if a call is on hold status\n      isOnHold: (webphoneSession) => {\n        if (this._useCallControlSDK) {\n          const call =\n            this._callMonitor.calls.find(\n              (x) => x.webphoneSession === webphoneSession,\n            ) || {};\n          const { telephonySession } = call;\n          return isHolding(telephonySession);\n        }\n        return isOnHold(webphoneSession);\n      },\n    };\n  }\n}\n"],"file":"index.js"}