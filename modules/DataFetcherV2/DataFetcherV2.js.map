{"version":3,"sources":["modules/DataFetcherV2/DataFetcherV2.ts"],"names":["DataFetcherV2","name","deps","dep","optional","storageKey","enableCache","_sources","Set","_timeoutIds","Map","_promises","_deps","sleepDetector","on","events","detected","_handleSleepDetected","auth","loggedIn","ready","source","isFetching","key","data","timestamp","Date","now","disableCache","timestamps","cachedData","cachedTimestamps","_setData","_setFetching","ownerId","fetchFunction","polling","_startPolling","timeToRetry","_retry","has","clearTimeout","get","t","getTimestamp","pollingInterval","_clearTimeout","set","setTimeout","_checkIsActiveTab","readyCheckFunction","permissionCheckFunction","_expired","fetchData","_fetchData","ttl","isFreshLogin","tabManager","active","getSourceStatus","sourceStatus","pending","_setSourceStatus","initializing","_shouldFetch","getData","status","readyCheck","permissionCheck","_tryInitializeSource","cleanOnReset","Array","from","keys","forEach","add","registeredKeys","_getRegisteredKeys","k","Object","prototype","hasOwnProperty","call","_deleteKeys","_getInvalidCachedKeys","_cleanCache","_processSources","RcModuleV2","state","storage","action","proxify"],"mappings":"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","sourcesContent":["import {\n  RcModuleV2,\n  state,\n  storage,\n  action,\n} from '@ringcentral-integration/core';\nimport { forEach } from 'ramda';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport { Deps } from './DataFetcherV2.interface';\nimport { SourceStatusType, sourceStatus } from './sourceStatus';\nimport { DataSource } from './DataSource';\n\n@Module({\n  name: 'DataFetcherV2',\n  deps: [\n    'Auth',\n    'Storage',\n    'SleepDetector',\n    { dep: 'TabManager', optional: true },\n    { dep: 'DataFetcherV2Options', optional: true },\n  ],\n})\nexport class DataFetcherV2 extends RcModuleV2<Deps> {\n  protected _sources = new Set<DataSource<any>>();\n  protected _timeoutIds = new Map<string, NodeJS.Timeout>();\n  protected _promises = new Map<string, Promise<void>>();\n\n  constructor(deps: Deps) {\n    super({\n      storageKey: 'dataFetcherV2',\n      enableCache: true,\n      deps,\n    });\n    this._deps.sleepDetector.on(this._deps.sleepDetector.events.detected, () =>\n      this._handleSleepDetected(),\n    );\n  }\n\n  _shouldInit() {\n    return this._deps.auth.loggedIn && super._shouldInit();\n  }\n\n  _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this._deps.auth.loggedIn)\n    );\n  }\n\n  @state\n  sourceStatus: Record<string, SourceStatusType> = {};\n\n  @storage\n  @state\n  cachedData: Record<string, any> = {};\n\n  @storage\n  @state\n  cachedTimestamps: Record<string, number> = {};\n\n  @state\n  data: Record<string, any> = {};\n\n  @state\n  timestamps: Record<string, number> = {};\n\n  @state\n  isFetching: Record<string, boolean> = {};\n\n  @action\n  protected _setFetching(source: DataSource<any>, isFetching: boolean) {\n    this.isFetching[source.key] = isFetching;\n  }\n\n  getFetching<T>(source: DataSource<T>) {\n    return !!this.isFetching[source.key];\n  }\n\n  @action\n  protected _setData<T>(\n    source: DataSource<T>,\n    data: T,\n    timestamp = Date.now(),\n  ): void {\n    if (source.disableCache) {\n      this.data[source.key] = data;\n      this.timestamps[source.key] = timestamp;\n    } else {\n      this.cachedData[source.key] = data;\n      this.cachedTimestamps[source.key] = timestamp;\n    }\n  }\n\n  updateData<T>(source: DataSource<T>, data: T, timestamp: number): void {\n    this._setData(source, data, timestamp);\n  }\n\n  @proxify\n  protected async _fetchData<T>(source: DataSource<T>): Promise<void> {\n    this._setFetching(source, true);\n    const { ownerId } = this._deps.auth;\n    try {\n      const data = await source.fetchFunction();\n      if (this._deps.auth.ownerId === ownerId) {\n        this._setData(source, data, Date.now());\n        this._setFetching(source, false);\n        if (source.polling) {\n          this._startPolling(source);\n        }\n        this._promises.delete(source.key);\n      }\n    } catch (error) {\n      if (this._deps.auth.ownerId === ownerId) {\n        this._promises.delete(source.key);\n        this._setFetching(source, false);\n        if (source.polling) {\n          this._startPolling(source, source.timeToRetry);\n        } else {\n          this._retry(source);\n        }\n        throw error;\n      }\n    }\n  }\n\n  protected _clearTimeout<T>(source: DataSource<T>) {\n    if (this._timeoutIds.has(source.key)) {\n      clearTimeout(this._timeoutIds.get(source.key));\n      this._timeoutIds.delete(source.key);\n    }\n  }\n\n  protected _startPolling<T>(\n    source: DataSource<T>,\n    t = this.getTimestamp(source) + source.pollingInterval + 10 - Date.now(),\n  ) {\n    this._clearTimeout(source);\n    this._timeoutIds.set(\n      source.key,\n      setTimeout(() => {\n        this._timeoutIds.delete(source.key);\n        if (\n          this.ready &&\n          this._checkIsActiveTab(source) &&\n          source.readyCheckFunction() &&\n          source.permissionCheckFunction()\n        ) {\n          if (this._expired(source)) {\n            this.fetchData(source);\n          } else {\n            this._startPolling(source);\n          }\n        } else if (!this._expired(source)) {\n          this._startPolling(source);\n        } else {\n          this._startPolling(source, source.timeToRetry);\n        }\n      }, t),\n    );\n  }\n\n  protected _retry<T>(source: DataSource<T>, t = source.timeToRetry) {\n    this._clearTimeout(source);\n    this._timeoutIds.set(\n      source.key,\n      setTimeout(() => {\n        if (this._expired(source)) {\n          if (\n            this.ready &&\n            this._checkIsActiveTab(source) &&\n            source.readyCheckFunction() &&\n            source.permissionCheckFunction()\n          ) {\n            this.fetchData(source);\n          } else {\n            this._retry(source);\n          }\n        }\n      }, t),\n    );\n  }\n\n  @proxify\n  async fetchData(source: DataSource<any>): Promise<void> {\n    if (!this._promises.get(source.key)) {\n      this._promises.set(source.key, this._fetchData(source));\n    }\n    return this._promises.get(source.key);\n  }\n\n  getTimestamp<T>(source: DataSource<T>) {\n    if (source.disableCache) {\n      return this.timestamps[source.key] || null;\n    }\n    return this.cachedTimestamps[source.key] || null;\n  }\n\n  get sources() {\n    return this._sources;\n  }\n\n  protected _expired<T>(source: DataSource<T>) {\n    return Date.now() - this.getTimestamp(source) > source.ttl;\n  }\n\n  protected _shouldFetch<T>(source: DataSource<T>, isFreshLogin = false) {\n    return (\n      this._checkIsActiveTab<T>(source) &&\n      (isFreshLogin || this._expired(source))\n    );\n  }\n\n  private _checkIsActiveTab<T>(source: DataSource<T>) {\n    // if cache is disabled, then each tab should fetch its own data\n    // therefore tabManager should be ignored\n    return (\n      source.disableCache ||\n      !this._deps.tabManager ||\n      this._deps.tabManager.active\n    );\n  }\n\n  protected async _tryInitializeSource<T>(\n    source: DataSource<T>,\n  ): Promise<void> {\n    if (this.getSourceStatus(source) === sourceStatus.pending) {\n      this._setSourceStatus(source, sourceStatus.initializing);\n      if (this._shouldFetch(source)) {\n        try {\n          await this.fetchData(source);\n        } catch {\n          this._retry(source);\n        }\n      } else if (source.polling) {\n        this._startPolling(source);\n      } else {\n        this._retry(source);\n      }\n      return;\n    }\n    if (this.getData(source) !== null && this.getTimestamp(source) !== null) {\n      this._setSourceStatus(source, sourceStatus.ready);\n    }\n  }\n\n  @action\n  protected _setSourceStatus<T>(\n    source: DataSource<T>,\n    status: SourceStatusType,\n  ) {\n    this.sourceStatus[source.key] = status;\n  }\n\n  getSourceStatus<T>(source: DataSource<T>) {\n    return this.sourceStatus[source.key];\n  }\n\n  protected _processSources() {\n    if (this.ready) {\n      forEach((source) => {\n        if (!this.getSourceStatus(source)) {\n          this._setSourceStatus(source, sourceStatus.pending);\n        }\n        const status = this.getSourceStatus(source);\n        const readyCheck = this.ready && source.readyCheckFunction();\n        const permissionCheck = readyCheck && source.permissionCheckFunction();\n        if (readyCheck) {\n          if (\n            status === sourceStatus.pending ||\n            status === sourceStatus.initializing\n          ) {\n            // if user has no permission to fetch data, bypass the initialization process\n            if (!permissionCheck) {\n              this._setSourceStatus(source, sourceStatus.ready);\n              this._setData(source, null, 0);\n            } else {\n              this._tryInitializeSource(source);\n            }\n          } else if (status === sourceStatus.ready) {\n            if (\n              !permissionCheck &&\n              this.getData(source) !== null &&\n              this.getTimestamp(source) !== null\n            ) {\n              // no permission but has data, set data to null\n              // use 0 for timestamp so we know this is on purpose\n              this._setData(source, null, 0);\n            } else if (\n              permissionCheck &&\n              this.getData(source) === null &&\n              this.getTimestamp(source) === 0 &&\n              !this._promises.get(source.key)\n            ) {\n              // if the data set to null due to permission before\n              // but now there is permission, then fetch data\n              this.fetchData(source);\n            }\n          }\n        } else if (status === sourceStatus.ready) {\n          this._setSourceStatus(source, sourceStatus.pending);\n          if (source.cleanOnReset) {\n            this._setData(source, null, null);\n          }\n        }\n      }, Array.from(this._sources));\n    }\n  }\n\n  protected _handleSleepDetected() {\n    forEach((source) => {\n      if (this._shouldFetch(source)) {\n        this.fetchData(source);\n      }\n    }, Array.from(this._sources));\n  }\n\n  protected _getRegisteredKeys() {\n    const keys = new Set<string>();\n    this._sources.forEach((source) => {\n      keys.add(source.key);\n    });\n    return keys;\n  }\n\n  protected _getInvalidCachedKeys() {\n    const registeredKeys = this._getRegisteredKeys();\n    const keys = new Set<string>();\n    for (const k in this.cachedData) {\n      if (\n        Object.prototype.hasOwnProperty.call(this.cachedData, k) &&\n        !registeredKeys.has(k)\n      ) {\n        keys.add(k);\n      }\n    }\n    for (const k in this.cachedTimestamps) {\n      if (\n        Object.prototype.hasOwnProperty.call(this.cachedTimestamps, k) &&\n        !registeredKeys.has(k)\n      ) {\n        keys.add(k);\n      }\n    }\n    return keys;\n  }\n\n  @action\n  protected _deleteKeys(keys: Set<string>) {\n    keys.forEach((k) => {\n      delete this.cachedData[k];\n      delete this.cachedTimestamps[k];\n    });\n  }\n\n  protected _cleanCache() {\n    this._deleteKeys(this._getInvalidCachedKeys());\n  }\n\n  onInit() {\n    // clean up cached sources that are no longer exist\n    this._cleanCache();\n  }\n\n  onReset() {\n    forEach((source) => {\n      // clear all pollings or retries\n      this._clearTimeout(source);\n      // clear all pending requests\n      this._promises.delete(source.key);\n      // reset isFetching\n      this._setFetching(source, false);\n      if (this.getSourceStatus(source) !== sourceStatus.pending) {\n        this._setSourceStatus(source, sourceStatus.pending);\n      }\n      if (\n        source.cleanOnReset &&\n        this.getData(source) !== null &&\n        this.getTimestamp(source) !== null\n      ) {\n        this._setData(source, null, null);\n      }\n    }, Array.from(this._sources));\n  }\n\n  onStateChange() {\n    this._processSources();\n  }\n\n  register<T>(source: DataSource<T>) {\n    this._sources.add(source);\n  }\n\n  getData<T>(source: DataSource<T>): T {\n    if (this._sources.has(source)) {\n      if (source.disableCache) {\n        return this.data[source.key] || null;\n      }\n      return this.cachedData[source.key] || null;\n    }\n    return null;\n  }\n}\n"],"file":"DataFetcherV2.js"}