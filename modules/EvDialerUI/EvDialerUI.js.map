{"version":3,"sources":["modules/EvDialerUI/EvDialerUI.ts"],"names":["EvDialerUI","name","deps","dep","optional","that","_deps","evCall","dialoutStatus","evIntegratedSoftphone","connectingAlertId","enableCache","storageKey","toNumber","latestDialoutNumber","value","evAuth","beforeAgentLogout","reset","evCallMonitor","calls","call","isPendingDisposition","evWorkingState","id","callLogsIds","evClient","encodeUii","session","routerInteraction","push","currentLocale","locale","size","environment","isWide","hasDialer","agentPermissions","allowManualCalls","dialButtonDisabled","setToNumber","dialout","setLatestDialoutNumber","goToManualDialSettings","checkOnCall","hangup","evSettings","isManualOffhook","offhookTerm","RcUIModuleV2","storage","state","action"],"mappings":"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","sourcesContent":["import {\n  action,\n  computed,\n  RcUIModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport {\n  EvDialerUIFunctions,\n  EvDialerUIProps,\n} from '../../interfaces/EvDialerUI.interface';\nimport { Deps, DialerUI } from './EvDialerUI.interface';\n\n@Module({\n  name: 'EvDialerUI',\n  deps: [\n    'EvCall',\n    'Locale',\n    'Storage',\n    'EvAuth',\n    'RouterInteraction',\n    'EvSettings',\n    'EvClient',\n    'EvCallMonitor',\n    'EvWorkingState',\n    'EvAgentSession',\n    'EvIntegratedSoftphone',\n    'Environment',\n    { dep: 'EvDialerUIOptions', optional: true },\n  ],\n})\nclass EvDialerUI extends RcUIModuleV2<Deps> implements DialerUI {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvDialerUI',\n    });\n  }\n\n  @storage\n  @state\n  toNumber = '';\n\n  @storage\n  @state\n  latestDialoutNumber = '';\n\n  @action\n  reset() {\n    this.toNumber = '';\n    this.latestDialoutNumber = '';\n  }\n\n  @action\n  setToNumber(value: string) {\n    this.toNumber = value;\n  }\n\n  @action\n  setLatestDialoutNumber() {\n    this.latestDialoutNumber = this.toNumber;\n  }\n\n  @computed((that: EvDialerUI) => [\n    that._deps.evCall.dialoutStatus,\n    that._deps.evIntegratedSoftphone.connectingAlertId,\n  ])\n  get dialButtonDisabled() {\n    return (\n      this._deps.evCall.dialoutStatus === 'dialing' ||\n      !!this._deps.evIntegratedSoftphone.connectingAlertId\n    );\n  }\n\n  onInitOnce() {\n    this._deps.evAuth.beforeAgentLogout(() => {\n      this.reset();\n    });\n  }\n\n  async checkOnCall() {\n    // onCall or not yet disposed call, it should navigate to the `activityCallLog/:id` router.\n    const [call] = this._deps.evCallMonitor.calls;\n    const { isPendingDisposition } = this._deps.evWorkingState;\n    let id: string;\n    if (isPendingDisposition) {\n      id = this._deps.evCallMonitor.callLogsIds[0];\n    }\n    if (call) {\n      id = this._deps.evClient.encodeUii(call.session);\n    }\n    if (id) {\n      this._deps.routerInteraction.push(`/activityCallLog/${id}`);\n    }\n  }\n\n  getUIProps(): EvDialerUIProps {\n    return {\n      toNumber: this.toNumber,\n      currentLocale: this._deps.locale.currentLocale,\n      size: this._deps.environment.isWide ? 'medium' : 'small',\n      dialoutStatus: this._deps.evCall.dialoutStatus,\n      hasDialer: this._deps.evAuth.agentPermissions.allowManualCalls,\n      dialButtonDisabled: this.dialButtonDisabled,\n    };\n  }\n\n  getUIFunctions(): EvDialerUIFunctions {\n    return {\n      setToNumber: (value: string) => this.setToNumber(value),\n      dialout: () => {\n        if (this.toNumber) {\n          this.setLatestDialoutNumber();\n        } else if (this.latestDialoutNumber) {\n          this.setToNumber(this.latestDialoutNumber);\n          return;\n        }\n\n        this._deps.evCall.dialout(this.toNumber);\n      },\n      goToManualDialSettings: () => {\n        this._deps.routerInteraction.push('/manualDialSettings');\n      },\n      checkOnCall: () => this.checkOnCall(),\n      hangup: () => {\n        if (!this._deps.evSettings.isManualOffhook) {\n          this._deps.evClient.offhookTerm();\n        }\n      },\n    };\n  }\n}\n\nexport { EvDialerUI };\n"],"file":"EvDialerUI.js"}