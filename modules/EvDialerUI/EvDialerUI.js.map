{"version":3,"sources":["modules/EvDialerUI/EvDialerUI.ts"],"names":["EvDialerUI","name","deps","dep","optional","evCall","locale","storage","evAuth","routerInteraction","evSettings","evClient","evCallMonitor","evWorkingState","evSessionConfig","enableCache","environment","modules","storageKey","value","state","toNumber","latestDialoutNumber","_modules","calls","call","isPendingDisposition","id","callLogsIds","encodeUii","session","tabManagerEnabled","isConfigSuccessByLocal","push","currentLocale","size","isWide","dialoutStatus","hasDialer","agentPermissions","allowManualCalls","setToNumber","dialout","setLatestDialoutNumber","goToManualDialSettings","checkOnCall","hangup","isManualOffhook","offhookTerm","RcUIModuleV2","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BMA,U,WAjBL,gBAAO;AACNC,EAAAA,IAAI,EAAE,YADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,QAFI,EAGJ,SAHI,EAIJ,QAJI,EAKJ,mBALI,EAMJ,YANI,EAOJ,UAPI,EAQJ,eARI,EASJ,gBATI,EAUJ,iBAVI,EAWJ,aAXI,EAYJ;AAAEC,IAAAA,GAAG,EAAE,mBAAP;AAA4BC,IAAAA,QAAQ,EAAE;AAAtC,GAZI;AAFA,CAAP,C;;;;;AAmBC,4BAaG;AAAA;;AAAA,QAZDC,MAYC,QAZDA,MAYC;AAAA,QAXDC,MAWC,QAXDA,MAWC;AAAA,QAVDC,OAUC,QAVDA,OAUC;AAAA,QATDC,MASC,QATDA,MASC;AAAA,QARDC,iBAQC,QARDA,iBAQC;AAAA,QAPDC,UAOC,QAPDA,UAOC;AAAA,QANDC,QAMC,QANDA,QAMC;AAAA,QALDC,aAKC,QALDA,aAKC;AAAA,QAJDC,cAIC,QAJDA,cAIC;AAAA,QAHDC,eAGC,QAHDA,eAGC;AAAA,gCAFDC,WAEC;AAAA,QAFDA,WAEC,iCAFa,IAEb;AAAA,QADDC,WACC,QADDA,WACC;;AAAA;;AACD,8BAAM;AACJC,MAAAA,OAAO,EAAE;AACPZ,QAAAA,MAAM,EAANA,MADO;AAEPC,QAAAA,MAAM,EAANA,MAFO;AAGPC,QAAAA,OAAO,EAAPA,OAHO;AAIPC,QAAAA,MAAM,EAANA,MAJO;AAKPC,QAAAA,iBAAiB,EAAjBA,iBALO;AAMPC,QAAAA,UAAU,EAAVA,UANO;AAOPC,QAAAA,QAAQ,EAARA,QAPO;AAQPC,QAAAA,aAAa,EAAbA,aARO;AASPC,QAAAA,cAAc,EAAdA,cATO;AAUPC,QAAAA,eAAe,EAAfA,eAVO;AAWPE,QAAAA,WAAW,EAAXA;AAXO,OADL;AAcJD,MAAAA,WAAW,EAAXA,WAdI;AAeJG,MAAAA,UAAU,EAAE;AAfR,KAAN;;AADC;;AAAA;;AAAA;AAkBF;;;;gCAWWC,K,EAAe;AACzB,WAAKC,KAAL,CAAWC,QAAX,GAAsBF,KAAtB;AACD;;;6CAGwB;AACvB,WAAKC,KAAL,CAAWE,mBAAX,GAAiC,KAAKD,QAAtC;AACD;;;kCAEa;AACZ;AADY,iDAEG,KAAKE,QAAL,CAAcX,aAAd,CAA4BY,KAF/B;AAAA,UAELC,IAFK;;AAAA,UAGJC,oBAHI,GAGqB,KAAKH,QAAL,CAAcV,cAHnC,CAGJa,oBAHI;AAIZ,UAAIC,EAAJ;;AACA,UAAID,oBAAJ,EAA0B;AACxBC,QAAAA,EAAE,GAAG,KAAKJ,QAAL,CAAcX,aAAd,CAA4BgB,WAA5B,CAAwC,CAAxC,CAAL;AACD;;AACD,UAAIH,IAAJ,EAAU;AACRE,QAAAA,EAAE,GAAG,KAAKJ,QAAL,CAAcZ,QAAd,CAAuBkB,SAAvB,CAAiCJ,IAAI,CAACK,OAAtC,CAAL;AACD;;AACD,UACEH,EAAE,KACD,CAAC,KAAKJ,QAAL,CAAcT,eAAd,CAA8BiB,iBAA/B,IACC,KAAKR,QAAL,CAAcT,eAAd,CAA8BkB,sBAF9B,CADJ,EAIE;AACA,aAAKT,QAAL,CAAcd,iBAAd,CAAgCwB,IAAhC,4BAAyDN,EAAzD;AACD;AACF;;;iCAE6B;AAC5B,aAAO;AACLN,QAAAA,QAAQ,EAAE,KAAKA,QADV;AAELa,QAAAA,aAAa,EAAE,KAAKX,QAAL,CAAcjB,MAAd,CAAqB4B,aAF/B;AAGLC,QAAAA,IAAI,EAAE,KAAKZ,QAAL,CAAcP,WAAd,CAA0BoB,MAA1B,GAAmC,QAAnC,GAA8C,OAH/C;AAILC,QAAAA,aAAa,EAAE,KAAKd,QAAL,CAAclB,MAAd,CAAqBgC,aAJ/B;AAKLC,QAAAA,SAAS,EAAE,KAAKf,QAAL,CAAcf,MAAd,CAAqB+B,gBAArB,CAAsCC;AAL5C,OAAP;AAOD;;;qCAEqC;AAAA;;AACpC,aAAO;AACLC,QAAAA,WAAW,EAAE,qBAACtB,KAAD;AAAA,iBAAmB,MAAI,CAACsB,WAAL,CAAiBtB,KAAjB,CAAnB;AAAA,SADR;AAELuB,QAAAA,OAAO;AAAA,iFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,yBACH,MAAI,CAACrB,QADF;AAAA;AAAA;AAAA;;AAEL,oBAAA,MAAI,CAACsB,sBAAL;;AAFK;AAAA,2BAGC,MAAI,CAACpB,QAAL,CAAclB,MAAd,CAAqBqC,OAArB,CAA6B,MAAI,CAACrB,QAAlC,CAHD;;AAAA;AAAA;AAAA;;AAAA;AAKL,oBAAA,MAAI,CAACoB,WAAL,CAAiB,MAAI,CAACnB,mBAAtB;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAFF;AAULsB,QAAAA,sBAAsB,EAAE,kCAAM;AAC5B,UAAA,MAAI,CAACrB,QAAL,CAAcd,iBAAd,CAAgCwB,IAAhC,CAAqC,qBAArC;AACD,SAZI;AAaLY,QAAAA,WAAW,EAAE;AAAA,iBAAM,MAAI,CAACA,WAAL,EAAN;AAAA,SAbR;AAcLC,QAAAA,MAAM,EAAE,kBAAM;AACZ,cAAI,CAAC,MAAI,CAACvB,QAAL,CAAcb,UAAd,CAAyBqC,eAA9B,EAA+C;AAC7C,YAAA,MAAI,CAACxB,QAAL,CAAcZ,QAAd,CAAuBqC,WAAvB;AACD;AACF;AAlBI,OAAP;AAoBD;;;;EAxGsBC,kB,oFAmCtB1C,a,EACAa,W;;;;;WACU,E;;wFAEVb,a,EACAa,W;;;;;WACqB,E;;iEAErB8B,Y,kKAKAA,Y","sourcesContent":["import {\n  action,\n  RcModuleState,\n  RcUIModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport {\n  EvDialerUIFunctions,\n  EvDialerUIProps,\n} from '../../interfaces/EvDialerUI.interface';\nimport { DepsModules, DialerUI, State } from './EvDialerUI.interface';\n\ntype EvDialerUIState = RcModuleState<EvDialerUI, State>;\n\n@Module({\n  name: 'EvDialerUI',\n  deps: [\n    'EvCall',\n    'Locale',\n    'Storage',\n    'EvAuth',\n    'RouterInteraction',\n    'EvSettings',\n    'EvClient',\n    'EvCallMonitor',\n    'EvWorkingState',\n    'EvSessionConfig',\n    'Environment',\n    { dep: 'EvDialerUIOptions', optional: true },\n  ],\n})\nclass EvDialerUI extends RcUIModuleV2<DepsModules, EvDialerUIState>\n  implements DialerUI {\n  constructor({\n    evCall,\n    locale,\n    storage,\n    evAuth,\n    routerInteraction,\n    evSettings,\n    evClient,\n    evCallMonitor,\n    evWorkingState,\n    evSessionConfig,\n    enableCache = true,\n    environment,\n  }) {\n    super({\n      modules: {\n        evCall,\n        locale,\n        storage,\n        evAuth,\n        routerInteraction,\n        evSettings,\n        evClient,\n        evCallMonitor,\n        evWorkingState,\n        evSessionConfig,\n        environment,\n      },\n      enableCache,\n      storageKey: 'EvDialerUI',\n    });\n  }\n\n  @storage\n  @state\n  toNumber = '';\n\n  @storage\n  @state\n  latestDialoutNumber = '';\n\n  @action\n  setToNumber(value: string) {\n    this.state.toNumber = value;\n  }\n\n  @action\n  setLatestDialoutNumber() {\n    this.state.latestDialoutNumber = this.toNumber;\n  }\n\n  checkOnCall() {\n    // onCall or not yet disposed call, it should navigate to the `activityCallLog/:id` router.\n    const [call] = this._modules.evCallMonitor.calls;\n    const { isPendingDisposition } = this._modules.evWorkingState;\n    let id: string;\n    if (isPendingDisposition) {\n      id = this._modules.evCallMonitor.callLogsIds[0];\n    }\n    if (call) {\n      id = this._modules.evClient.encodeUii(call.session);\n    }\n    if (\n      id &&\n      (!this._modules.evSessionConfig.tabManagerEnabled ||\n        this._modules.evSessionConfig.isConfigSuccessByLocal)\n    ) {\n      this._modules.routerInteraction.push(`/activityCallLog/${id}`);\n    }\n  }\n\n  getUIProps(): EvDialerUIProps {\n    return {\n      toNumber: this.toNumber,\n      currentLocale: this._modules.locale.currentLocale,\n      size: this._modules.environment.isWide ? 'medium' : 'small',\n      dialoutStatus: this._modules.evCall.dialoutStatus,\n      hasDialer: this._modules.evAuth.agentPermissions.allowManualCalls,\n    };\n  }\n\n  getUIFunctions(): EvDialerUIFunctions {\n    return {\n      setToNumber: (value: string) => this.setToNumber(value),\n      dialout: async () => {\n        if (this.toNumber) {\n          this.setLatestDialoutNumber();\n          await this._modules.evCall.dialout(this.toNumber);\n        } else {\n          this.setToNumber(this.latestDialoutNumber);\n        }\n      },\n      goToManualDialSettings: () => {\n        this._modules.routerInteraction.push('/manualDialSettings');\n      },\n      checkOnCall: () => this.checkOnCall(),\n      hangup: () => {\n        if (!this._modules.evSettings.isManualOffhook) {\n          this._modules.evClient.offhookTerm();\n        }\n      },\n    };\n  }\n}\n\nexport { EvDialerUI };\n"],"file":"EvDialerUI.js"}