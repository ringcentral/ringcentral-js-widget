{"version":3,"sources":["modules/MeetingV2/Meeting.ts"],"names":["Meeting","name","deps","dep","optional","that","userSettings","scheduleMeeting","enablePersonalMeeting","enableServiceWebSettings","scheduleUserSettings","usePmiForScheduledMeetings","extensionInfo","info","id","lockedSettings","scheduleLockedSettings","personalMeeting","_deps","locale","currentLocale","isScheduling","target","parentModule","analytics","_getTrackTarget","trackEvents","clickMeetingSchedulePage","router","enableCache","storageKey","_fetchDelegatorsTimeout","_fetchPersonMeetingTimeout","_createMeetingPromise","savedSetting","showSaveAsDefault","savedDefaultMeetingSetting","lastMeetingSetting","initialMeetingSetting","meetingType","MeetingType","SCHEDULED","_initDefaultData","settingLock","defaultLockedSettings","commonUserSettings","personalMeetingSettings","commonPersonalMeetingSettings","meetingName","enableScheduleOnBehalf","meeting","delegators","startTime","hostId","setting","DEFAULT_LOCK_SETTINGS","_pmiPassword","preferences","isPreferencesChanged","updatingStatus","_init","videoConfiguration","isRCM","ready","clearTimeout","getDelegators","records","length","updateDelegators","loginUser","console","error","warn","setTimeout","_initScheduleFor","extensionId","Promise","all","_initPersonalMeeting","_updateServiceWebSettings","_initMeeting","onInit","_initMeetingSettings","update","defaultMeetingSetting","host","updatePreferences","_updatePreferences","_updateIsPreferencesChanged","_meeting","combineWithSettings","finalMeeting","isMeetingPasswordValid","validatePasswordSettings","password","_requireMeetingPassword","updateMeetingState","_comparePreferences","updateIsPreferencesChanged","isSecret","RCM_PASSWORD_REGEX","test","_combineWithSWSettings","usePersonalMeetingId","processedMeeting","allowJoinBeforeHost","requirePasswordForPmiMeetings","lockedRequirePasswordForPmiMeetings","PMIRequirePassword","JBH_ONLY","_lockRequireMeetingPassword","fetchPersonalMeeting","meetingInfoResponse","formatPersonalMeeting","updatePersonalMeeting","resetPersonalMeeting","getUserSettings","getLockedSettings","updateUserSettings","updateLockedSettings","pmiDefaultSettings","getGeneralDefaultSettings","formattedMeeting","_format","updateSavedDefaultMeetingSetting","_saved","notShowAgain","isAlertSuccess","updateIsScheduling","_validate","saveAsDefault","saveAsDefaultSetting","postMeeting","getMeetingServiceInfo","resp","serviceInfo","getMeetingInvitation","invitationInfo","updateLastMeetingSetting","_createDialingNumberTpl","result","enableReloadAfterSchedule","externalUserInfo","personalMeetingId","alert","success","message","meetingStatus","scheduledSuccess","_errorHandle","scheduleDirectly","meetingId","_isUpdating","updateMeeting","_promise","addUpdatingStatus","putMeeting","updatedSuccess","removeUpdatingStatus","userExtensionId","user","item","_updateDelegators","_updateUserSettings","_updateLockedSettings","_updatePersonalMeeting","_updateMeetingState","_updateUpdatingStatus","finalStatus","obj","LAST_MEETING_SETTINGS","_updateLastMeetingSetting","savedDefaulteSetting","SAVED_DEFAULT_MEETING_SETTINGS","_updateSavedDefaultMeetingSetting","_updateIsScheduling","getMeeting","Error","client","account","extension","get","post","put","isAlertError","settings","response","clone","json","errorCode","log","isMeetingDeleted","indexOf","danger","meetingIsDeleted","service","platform","res","send","method","url","apiResponse","recording","startParticipantsVideo","startParticipantVideo","restScheduleOptions","processedScheduleMeeting","DEFAULT_LOCALE","enableInvitationApi","brand","code","language","invitation","meetingInfo","shortId","MeetingErrors","invalidMeetingInfo","topic","schedule","errors","push","emptyTopic","noPassword","durationInMinutes","durationIncorrect","startHostVideo","audioOptions","recurrence","formatted","RECURRING","_schedule","timeZone","enableCustomTimezone","UTC_TIMEZONE_ID","moment","utc","format","until","PMI","mobileDialingNumberTpl","dialInNumbers","phoneDialingNumberTpl","warning","permissionName","insufficientPermissions","payload","availabilityMonitor","checkIfHAError","internalError","usePmi","pmiRequiresPwd","NONE","ALL","pmiRequiresPwdLocked","requirePasswordForSchedulingNewMeetings","lockedRequirePasswordForSchedulingNewMeetings","ASSISTED_USERS_MYSELF","isLoginUser","COMMON_SETTINGS","initialSetting","usePmiDefaultFromSW","generalDefaultSettings","getInitialMeetingSetting","meetingOptions","putRecurringMeetingInMiddle","RcModuleV2","state","storage","action","background","proxify"],"mappings":"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","sourcesContent":["import { MeetingServiceInfoResource } from '@rc-ex/core/definitions';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n} from '@ringcentral-integration/core';\nimport moment from 'moment';\nimport { filter, find, isEmpty, pick } from 'ramda';\nimport { DEFAULT_LOCALE } from '@ringcentral-integration/i18n';\n\nimport {\n  comparePreferences,\n  generateRandomPassword,\n  getDefaultMeetingSettings,\n  getInitializedStartTime,\n  getMobileDialingNumberTpl,\n  getPhoneDialingNumberTpl,\n  MeetingType,\n  prunePreferencesObject,\n  UTC_TIMEZONE_ID,\n} from '../../helpers/meetingHelper';\nimport { IMeeting } from '../../interfaces/Meeting.interface';\nimport background from '../../lib/background';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  ASSISTED_USERS_MYSELF,\n  COMMON_SETTINGS,\n  DEFAULT_LOCK_SETTINGS,\n  LAST_MEETING_SETTINGS,\n  PMIRequirePassword,\n  RCM_PASSWORD_REGEX,\n  SAVED_DEFAULT_MEETING_SETTINGS,\n} from './constants';\nimport { getExtensionName, getHostId } from './helper';\nimport {\n  CommonPersonalMeetingSettings,\n  DefaultScheduleLockedSettings,\n  Deps,\n  EffectiveScheduleUserSettings,\n  LastMeetingSetting,\n  LockedSettings,\n  MeetingDelegator,\n  MeetingDelegatorsResponse,\n  MeetingInfoResponse,\n  MeetingInitialExtraData,\n  MeetingScheduleResource,\n  Preferences,\n  RcmInvitationInfo,\n  RcMMeetingModel,\n  SavedDefaultMeetingSetting,\n  ScheduleMeetingLockedSettings,\n  ScheduleMeetingResponse,\n  UpdatingStatus,\n  UserScheduleMeetingSettingResponse,\n  UserSettings,\n} from './Meeting.interface';\nimport { MeetingErrors } from './meetingErrors';\nimport { meetingStatus } from './meetingStatus';\nimport { trackEvents } from '../Analytics';\n\n@Module({\n  name: 'Meeting',\n  deps: [\n    'Brand',\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    'VideoConfiguration',\n    'Locale',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true },\n  ],\n})\nexport class Meeting extends RcModuleV2<Deps> implements IMeeting {\n  protected _fetchDelegatorsTimeout: NodeJS.Timeout = null;\n  private _fetchPersonMeetingTimeout: NodeJS.Timeout = null;\n  private _createMeetingPromise: Promise<ScheduleMeetingResponse>;\n\n  constructor(deps: Deps) {\n    super({ deps, enableCache: true, storageKey: 'Meeting' });\n  }\n\n  @state\n  meeting: RcMMeetingModel = null;\n\n  @state\n  isScheduling: boolean = false;\n\n  @state\n  // including meetingId whose are in updating status\n  updatingStatus: UpdatingStatus = [];\n\n  @storage\n  @state\n  personalMeeting: Partial<RcMMeetingModel> = {};\n\n  @storage\n  @state\n  savedDefaultMeetingSetting: SavedDefaultMeetingSetting = {};\n\n  @storage\n  @state\n  lastMeetingSetting: LastMeetingSetting = {};\n\n  @state\n  delegators: MeetingDelegator[] = [];\n\n  @state\n  userSettings: Partial<UserSettings> = {};\n\n  @state\n  lockedSettings: Partial<LockedSettings> = {};\n\n  @state\n  preferences: Partial<Preferences> = {};\n\n  @state\n  isPreferencesChanged: boolean = false;\n\n  @computed<Meeting>((that) => [that.userSettings?.scheduleMeeting])\n  get scheduleUserSettings(): Partial<UserScheduleMeetingSettingResponse> {\n    return this.userSettings?.scheduleMeeting || {};\n  }\n\n  @computed<Meeting>((that) => [\n    that.enablePersonalMeeting,\n    that.enableServiceWebSettings,\n    that.scheduleUserSettings.usePmiForScheduledMeetings,\n  ])\n  get usePmiDefaultFromSW(): boolean {\n    return (\n      this.enablePersonalMeeting &&\n      this.enableServiceWebSettings &&\n      this.scheduleUserSettings.usePmiForScheduledMeetings\n    );\n  }\n\n  @computed<Meeting>((that) => [that.extensionInfo.info.id])\n  get loginUser(): MeetingDelegator {\n    return {\n      id: `${this.extensionInfo.info.id}`,\n      name: ASSISTED_USERS_MYSELF,\n      isLoginUser: true,\n    };\n  }\n\n  @computed<Meeting>((that) => [that.lockedSettings?.scheduleMeeting])\n  get scheduleLockedSettings(): Partial<ScheduleMeetingLockedSettings> {\n    return this.lockedSettings?.scheduleMeeting || {};\n  }\n\n  @computed<Meeting>((that) => [\n    that.enableServiceWebSettings,\n    that.scheduleLockedSettings,\n  ])\n  get defaultLockedSettings(): DefaultScheduleLockedSettings {\n    if (!this.enableServiceWebSettings || !this.scheduleLockedSettings) {\n      return {};\n    }\n    return pick(COMMON_SETTINGS, this.scheduleLockedSettings);\n  }\n\n  @computed<Meeting>((that) => [\n    that.enableServiceWebSettings,\n    that.scheduleUserSettings,\n  ])\n  get commonUserSettings(): EffectiveScheduleUserSettings {\n    if (!this.enableServiceWebSettings) {\n      return {};\n    }\n    return pick(COMMON_SETTINGS, this.scheduleUserSettings);\n  }\n\n  @computed<Meeting>((that) => [\n    that.enablePersonalMeeting,\n    that.personalMeeting,\n  ])\n  get commonPersonalMeetingSettings(): CommonPersonalMeetingSettings {\n    if (!this.enablePersonalMeeting) {\n      return {};\n    }\n    return pick([...COMMON_SETTINGS, 'password'], this.personalMeeting);\n  }\n\n  @computed<Meeting>((that) => [that._deps.locale.currentLocale])\n  get currentLocale() {\n    return this._deps.locale.currentLocale || DEFAULT_LOCALE;\n  }\n\n  get pmiDefaultSettings(): Partial<RcMMeetingModel> {\n    if (!this.enableServiceWebSettings) {\n      return this.personalMeeting;\n    }\n\n    return this._initDefaultData(\n      {\n        ...this.initialMeetingSetting,\n        settingLock: this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      true,\n    );\n  }\n\n  getGeneralDefaultSettings(): RcMMeetingModel {\n    if (!this.enableServiceWebSettings) {\n      const savedSetting = this.showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return {\n        ...this.initialMeetingSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n    }\n\n    return this._initDefaultData(\n      {\n        ...this.initialMeetingSetting,\n        settingLock: this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      false,\n    );\n  }\n\n  get defaultMeetingSetting(): Partial<RcMMeetingModel> {\n    const initialSetting = this.initialMeetingSetting;\n    const usePmi = this.usePmiDefaultFromSW;\n    const userSettings = this.userSettings;\n    const pmiDefaultSettings = this.pmiDefaultSettings;\n    const generalDefaultSettings = this.getGeneralDefaultSettings();\n    const savedSetting = this.showSaveAsDefault\n      ? this.savedDefaultMeetingSetting\n      : this.lastMeetingSetting;\n\n    if (this.enableServiceWebSettings) {\n      if (!isEmpty(userSettings)) {\n        return usePmi ? pmiDefaultSettings : generalDefaultSettings;\n      }\n      return initialSetting;\n    }\n    const meeting = {\n      ...initialSetting,\n      ...savedSetting,\n      meetingType: MeetingType.SCHEDULED,\n    };\n    return meeting;\n  }\n\n  getInitialMeetingSetting() {\n    const meetingName = getExtensionName({\n      extensionInfo: this.extensionInfo,\n      enableScheduleOnBehalf: this.enableScheduleOnBehalf,\n      meeting: this.meeting,\n      delegators: this.delegators,\n    });\n    const startTime = getInitializedStartTime();\n    const hostId = getHostId({\n      enableScheduleOnBehalf: this.enableScheduleOnBehalf,\n      meeting: this.meeting,\n      extensionInfo: this.extensionInfo,\n    });\n    const setting = getDefaultMeetingSettings(\n      meetingName,\n      this.currentLocale,\n      startTime,\n      hostId,\n    );\n    if (!this.enableServiceWebSettings) {\n      return setting;\n    }\n    return {\n      ...setting,\n      ...DEFAULT_LOCK_SETTINGS,\n      _pmiPassword: '',\n    };\n  }\n\n  get initialMeetingSetting(): RcMMeetingModel {\n    return this.getInitialMeetingSetting();\n  }\n\n  get extensionInfo() {\n    return this._deps.extensionInfo;\n  }\n\n  get showSaveAsDefault() {\n    return this._deps.meetingOptions?.showSaveAsDefault ?? false;\n  }\n\n  get enableInvitationApi() {\n    return this._deps.meetingOptions?.enableInvitationApi ?? false;\n  }\n\n  get enablePersonalMeeting() {\n    return this._deps.meetingOptions?.enablePersonalMeeting ?? false;\n  }\n\n  get enableReloadAfterSchedule() {\n    return this._deps.meetingOptions?.enableReloadAfterSchedule ?? true;\n  }\n\n  get enableServiceWebSettings() {\n    return this._deps.meetingOptions?.enableServiceWebSettings ?? false;\n  }\n\n  get putRecurringMeetingInMiddle() {\n    return this._deps.meetingOptions?.putRecurringMeetingInMiddle ?? false;\n  }\n\n  get enableScheduleOnBehalf() {\n    return this._deps.meetingOptions?.enableScheduleOnBehalf ?? false;\n  }\n\n  get enableCustomTimezone() {\n    return this._deps.meetingOptions?.enableCustomTimezone ?? false;\n  }\n\n  @action\n  protected _updateDelegators(delegators: MeetingDelegator[]) {\n    this.delegators = delegators;\n  }\n\n  @action\n  protected _updateUserSettings(userSettings: UserSettings) {\n    this.userSettings = userSettings;\n  }\n\n  @action\n  protected _updateLockedSettings(lockedSettings: LockedSettings) {\n    this.lockedSettings = lockedSettings;\n  }\n\n  @action\n  protected _updatePersonalMeeting(personalMeeting: Partial<RcMMeetingModel>) {\n    this.personalMeeting = personalMeeting;\n  }\n\n  @action\n  protected _updatePreferences(preferences: Preferences) {\n    this.preferences = preferences;\n  }\n\n  @action\n  protected _updateIsPreferencesChanged(isPreferencesChanged: boolean) {\n    this.isPreferencesChanged = isPreferencesChanged;\n  }\n\n  @action\n  protected _updateMeetingState(meeting: RcMMeetingModel) {\n    this.meeting = meeting;\n  }\n\n  @action\n  protected _updateUpdatingStatus(updatingStatus: UpdatingStatus) {\n    this.updatingStatus = updatingStatus;\n  }\n\n  @action\n  protected _updateLastMeetingSetting(lastMeetingSetting: LastMeetingSetting) {\n    this.lastMeetingSetting = lastMeetingSetting;\n  }\n\n  @action\n  protected _updateSavedDefaultMeetingSetting(\n    savedDefaultMeetingSetting: SavedDefaultMeetingSetting,\n  ) {\n    this.savedDefaultMeetingSetting = savedDefaultMeetingSetting;\n  }\n\n  @track((that: Meeting, isScheduling: boolean) => {\n    if (!isScheduling) return;\n    // TODO: fix analytics V2\n    const target = (that.parentModule as any).analytics?._getTrackTarget();\n    if (target) {\n      return [trackEvents.clickMeetingSchedulePage, { router: target.router }];\n    }\n  })\n  @action\n  protected _updateIsScheduling(isScheduling: boolean) {\n    this.isScheduling = isScheduling;\n  }\n\n  protected async onInit() {\n    await this._init();\n  }\n\n  _shouldInit() {\n    return super._shouldInit() && this._deps.videoConfiguration.isRCM;\n  }\n\n  _shouldReset() {\n    return (\n      super._shouldReset() ||\n      (this.ready && !this._deps.videoConfiguration.isRCM)\n    );\n  }\n\n  protected async _initScheduleFor() {\n    if (!this.enableScheduleOnBehalf) {\n      return;\n    }\n    if (this._fetchDelegatorsTimeout) {\n      clearTimeout(this._fetchDelegatorsTimeout);\n    }\n    try {\n      const { records } = await this.getDelegators();\n      if (!records || records.length === 0) {\n        this.updateDelegators([]);\n        return;\n      }\n      this.updateDelegators([this.loginUser, ...records]);\n    } catch (e) {\n      console.error('fetch delegators error:', e);\n      console.warn('retry after 10s');\n      this._fetchDelegatorsTimeout = setTimeout(() => {\n        this._initScheduleFor();\n      }, 10000);\n    }\n  }\n\n  protected async _initMeetingSettings(extensionId?: string) {\n    await Promise.all([\n      this._initPersonalMeeting(extensionId),\n      this._updateServiceWebSettings(extensionId),\n    ]);\n\n    await this._initMeeting(extensionId);\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    await this.onInit();\n  }\n\n  @proxify\n  async reload() {\n    await this.onInit();\n  }\n\n  @proxify\n  async _init() {\n    await Promise.all([this._initMeetingSettings(), this._initScheduleFor()]);\n  }\n\n  @proxify\n  protected async _initMeeting(extensionId?: string) {\n    this.update({\n      ...this.defaultMeetingSetting,\n      host: {\n        id: extensionId || this.loginUser.id,\n      },\n    });\n\n    this.updatePreferences(prunePreferencesObject(this.meeting));\n  }\n\n  @proxify\n  async updatePreferences(preferences: Preferences) {\n    this._updatePreferences(preferences);\n  }\n\n  @proxify\n  async updateIsPreferencesChanged(isPreferencesChanged: boolean) {\n    this._updateIsPreferencesChanged(isPreferencesChanged);\n  }\n\n  @proxify\n  async update(_meeting: RcMMeetingModel) {\n    let meeting = _meeting;\n    if (this.enableServiceWebSettings) {\n      meeting = this.combineWithSettings(_meeting);\n    }\n    const finalMeeting = {\n      ...meeting,\n      isMeetingPasswordValid: this.validatePasswordSettings(\n        _meeting.password,\n        _meeting._requireMeetingPassword,\n      ),\n    };\n    this.updateMeetingState(finalMeeting);\n    this._comparePreferences(finalMeeting);\n  }\n\n  private _comparePreferences(meeting: RcMMeetingModel) {\n    this.updateIsPreferencesChanged(\n      comparePreferences(this.preferences, meeting),\n    );\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    if (!isSecret) {\n      return true;\n    }\n    if (password && RCM_PASSWORD_REGEX.test(password)) {\n      return true;\n    }\n    return false;\n  }\n\n  combineWithSettings(_meeting: RcMMeetingModel) {\n    return this._combineWithSWSettings(_meeting);\n  }\n\n  _combineWithSWSettings(meeting: RcMMeetingModel): RcMMeetingModel {\n    if (!meeting.usePersonalMeetingId) {\n      return meeting;\n    }\n\n    const processedMeeting = { ...meeting };\n    const { allowJoinBeforeHost } = processedMeeting;\n    const { requirePasswordForPmiMeetings } = this.scheduleUserSettings;\n    const {\n      requirePasswordForPmiMeetings: lockedRequirePasswordForPmiMeetings,\n    } = this.scheduleLockedSettings;\n\n    if (\n      lockedRequirePasswordForPmiMeetings &&\n      requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY\n    ) {\n      if (allowJoinBeforeHost && !processedMeeting._requireMeetingPassword) {\n        processedMeeting._requireMeetingPassword = true;\n        processedMeeting.password =\n          processedMeeting._pmiPassword || generateRandomPassword();\n      }\n      processedMeeting._lockRequireMeetingPassword = allowJoinBeforeHost;\n    }\n    return processedMeeting;\n  }\n\n  @proxify\n  async _initPersonalMeeting(extensionId?: string) {\n    if (!this.enablePersonalMeeting) {\n      return;\n    }\n    if (this._fetchPersonMeetingTimeout) {\n      clearTimeout(this._fetchPersonMeetingTimeout);\n    }\n    try {\n      const meetingInfoResponse = await this.fetchPersonalMeeting(extensionId);\n      const meeting = this.formatPersonalMeeting(meetingInfoResponse);\n      this.updatePersonalMeeting(meeting);\n    } catch (e) {\n      console.error('fetch personal meeting error:', e);\n      this.resetPersonalMeeting();\n      console.warn('retry after 10s');\n      this._fetchPersonMeetingTimeout = setTimeout(() => {\n        this._initPersonalMeeting(extensionId);\n      }, 10000);\n    }\n  }\n\n  @proxify\n  async _updateServiceWebSettings(extensionId?: string) {\n    if (!this.enableServiceWebSettings) {\n      return;\n    }\n    try {\n      const [userSettings, lockedSettings] = await Promise.all([\n        this.getUserSettings(extensionId),\n        this.getLockedSettings(),\n      ]);\n      this.updateUserSettings(userSettings);\n      this.updateLockedSettings(lockedSettings);\n    } catch (e) {\n      console.error('error:', e);\n    }\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this.update(\n      usePersonalMeetingId\n        ? this.pmiDefaultSettings\n        : this.getGeneralDefaultSettings(),\n    );\n  }\n\n  @proxify\n  async saveAsDefaultSetting(meeting: RcMMeetingModel) {\n    const formattedMeeting = this._format(meeting);\n    this.updateSavedDefaultMeetingSetting({\n      ...formattedMeeting,\n      _saved: meeting.notShowAgain,\n      _requireMeetingPassword: meeting._requireMeetingPassword,\n    });\n  }\n\n  @proxify\n  async scheduleDirectly(\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ): Promise<ScheduleMeetingResponse> {\n    try {\n      meeting = meeting || this.meeting;\n      this.updateIsScheduling(true);\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      if (this.showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const [resp, serviceInfo] = await Promise.all([\n        this.postMeeting(formattedMeeting),\n        this.getMeetingServiceInfo(meeting.host?.id),\n      ]);\n\n      const invitationInfo = await this.getMeetingInvitation(\n        resp.id,\n        this.currentLocale,\n      );\n      this.updateLastMeetingSetting({\n        ...formattedMeeting,\n        _saved: meeting._saved,\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this.enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this.enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.updatePersonalMeeting(\n          this.formatPersonalMeeting(\n            resp,\n            serviceInfo.externalUserInfo.personalMeetingId,\n          ),\n        );\n        if (this.enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      this.updateIsScheduling(false);\n    }\n  }\n\n  @proxify\n  async schedule(\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ): Promise<ScheduleMeetingResponse> {\n    if (this.isScheduling) return this._createMeetingPromise;\n\n    this._createMeetingPromise = this.scheduleDirectly(meeting, {\n      isAlertSuccess,\n    });\n\n    const result = await this._createMeetingPromise;\n    this._createMeetingPromise = null;\n    return result;\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this._isUpdating(meetingId)) {\n      return (this.updateMeeting as any)._promise;\n    }\n    meeting = meeting || this.meeting;\n    try {\n      this.addUpdatingStatus(meetingId);\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this.showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this.updateMeeting as any)._promise = Promise.all([\n        this.putMeeting(meetingId, formattedMeeting),\n        this.getMeetingServiceInfo(meeting.host?.id),\n      ]);\n\n      const [resp, serviceInfo] = await (this.updateMeeting as any)._promise;\n\n      const invitationInfo = await this.getMeetingInvitation(\n        meetingId,\n        this.currentLocale,\n      );\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this.enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this.enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.updatePersonalMeeting(\n          this.formatPersonalMeeting(\n            resp,\n            serviceInfo.externalUserInfo.personalMeetingId,\n          ),\n        );\n        if (this.enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.updateMeeting as any)._promise;\n      this.removeUpdatingStatus(meetingId);\n    }\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string | number) {\n    if (!userExtensionId || !this.delegators || this.delegators.length === 0) {\n      return;\n    }\n    const hostId = `${userExtensionId}`;\n    const user = find((item) => item.id === hostId, this.delegators);\n\n    if (user) {\n      await this._initMeetingSettings(hostId);\n    }\n  }\n\n  @proxify\n  async updateDelegators(delegators: MeetingDelegator[]) {\n    this._updateDelegators(delegators);\n  }\n\n  @proxify\n  async updateUserSettings(userSettings: UserSettings) {\n    this._updateUserSettings(userSettings);\n  }\n\n  @proxify\n  async updateLockedSettings(lockedSettings: LockedSettings) {\n    this._updateLockedSettings(lockedSettings);\n  }\n\n  @proxify\n  async updatePersonalMeeting(meeting: RcMMeetingModel) {\n    this._updatePersonalMeeting(meeting);\n  }\n\n  @proxify\n  async resetPersonalMeeting() {\n    this._updatePersonalMeeting({});\n  }\n\n  @proxify\n  async updateMeetingState(meeting: RcMMeetingModel) {\n    this._updateMeetingState(meeting);\n  }\n\n  @proxify\n  async addUpdatingStatus(meetingId: string) {\n    this._updateUpdatingStatus([...this.updatingStatus, { meetingId }]);\n  }\n\n  @proxify\n  async removeUpdatingStatus(meetingId: string) {\n    const finalStatus = filter(\n      (obj) => obj.meetingId !== meetingId,\n      this.updatingStatus,\n    );\n    this._updateUpdatingStatus(finalStatus);\n  }\n\n  @proxify\n  async updateLastMeetingSetting(meeting: RcMMeetingModel) {\n    const lastMeetingSetting = pick(LAST_MEETING_SETTINGS, meeting || {});\n    this._updateLastMeetingSetting(lastMeetingSetting);\n  }\n\n  @proxify\n  async updateSavedDefaultMeetingSetting(meeting: RcMMeetingModel) {\n    const savedDefaulteSetting = pick(\n      SAVED_DEFAULT_MEETING_SETTINGS,\n      meeting || {},\n    );\n    this._updateSavedDefaultMeetingSetting(savedDefaulteSetting);\n  }\n\n  @proxify\n  async updateIsScheduling(isScheduling: boolean) {\n    this._updateIsScheduling(isScheduling);\n  }\n\n  @proxify\n  private async fetchPersonalMeeting(extensionId?: string) {\n    const serviceInfo = await this.getMeetingServiceInfo(extensionId);\n    const personalMeetingId = serviceInfo.externalUserInfo.personalMeetingId;\n    const meetingInfoResponse = await this.getMeeting(personalMeetingId);\n    if (!meetingInfoResponse) {\n      throw new Error(\n        `failed to get personal meeting ${personalMeetingId} info`,\n      );\n    }\n    return meetingInfoResponse;\n  }\n\n  @proxify\n  async getMeetingServiceInfo(extensionId?: string) {\n    return this._deps.client\n      .account()\n      .extension(extensionId)\n      .meeting()\n      .serviceInfo()\n      .get();\n  }\n\n  @proxify\n  async postMeeting(formattedMeeting: RcMMeetingModel) {\n    return this._deps.client\n      .account()\n      .extension()\n      .meeting()\n      .post(formattedMeeting);\n  }\n\n  @proxify\n  async putMeeting(meetingId: string, formattedMeeting: RcMMeetingModel) {\n    return this._deps.client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .put(formattedMeeting);\n  }\n\n  @proxify\n  async getMeeting(meetingId: string, { isAlertError = true } = {}) {\n    try {\n      const settings = await this._deps.client\n        .account()\n        .extension()\n        .meeting(meetingId)\n        .get();\n      return {\n        ...settings,\n        // TODO: can we remove this?\n        _requireMeetingPassword: !!settings.password,\n      };\n    } catch (e) {\n      const { errorCode, message } = await e.response.clone().json();\n      console.log(\n        `failed to get meeting info: ${meetingId}, ${errorCode}, ${message}`,\n      );\n      const isMeetingDeleted =\n        errorCode === 'CMN-102' &&\n        message.indexOf('[meetingId] is not found') > -1;\n      if (isAlertError && isMeetingDeleted) {\n        setTimeout(() => {\n          this._deps.alert.danger({\n            message: meetingStatus.meetingIsDeleted,\n          });\n        }, 50);\n      }\n      throw e;\n    }\n  }\n\n  @proxify\n  async getDelegators(): Promise<MeetingDelegatorsResponse> {\n    const res = await this._deps.client.service\n      .platform()\n      .get(\n        '/restapi/v1.0/account/~/extension/~/meetings-configuration/assisted',\n      );\n    return res.json();\n  }\n\n  @proxify\n  async getUserSettings(extensionId = '~'): Promise<UserSettings> {\n    try {\n      const platform = this._deps.client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: `/restapi/v1.0/account/~/extension/${extensionId}/meeting/user-settings`,\n      });\n      return apiResponse.json();\n    } catch (e) {\n      console.warn('failed to get user setting', e);\n      return null;\n    }\n  }\n\n  @proxify\n  async getLockedSettings() {\n    try {\n      const platform = this._deps.client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: '/restapi/v1.0/account/~/meeting/locked-settings',\n      });\n      const { recording = {}, scheduleMeeting = {} } = await apiResponse.json();\n      const {\n        startParticipantsVideo,\n        startParticipantVideo,\n        ...restScheduleOptions\n      } = scheduleMeeting;\n      const processedScheduleMeeting = {\n        ...restScheduleOptions,\n        // TODO: update this when api is stable\n        startParticipantsVideo:\n          startParticipantsVideo || startParticipantVideo || false,\n      };\n      return {\n        recording,\n        scheduleMeeting: processedScheduleMeeting,\n      };\n    } catch (e) {\n      console.warn('failed to get lock settings', e);\n      return null;\n    }\n  }\n\n  @proxify\n  async getMeetingInvitation(\n    meetingId: string,\n    locale = DEFAULT_LOCALE,\n  ): Promise<RcmInvitationInfo> {\n    if (!this.enableInvitationApi) {\n      return null;\n    }\n    // only rc brand is supported for now\n    if (this._deps.brand.code !== 'rc') {\n      return null;\n    }\n    try {\n      const apiResponse = await this._deps.client.service\n        .platform()\n        .get(\n          `/restapi/v1.0/account/~/extension/~/meeting/${meetingId}/invitation`,\n          {\n            language: locale,\n          },\n        );\n      const { invitation } = await apiResponse.json();\n      return {\n        invitation,\n      };\n    } catch (ex) {\n      console.warn('failed to get invitation', ex);\n      return null;\n    }\n  }\n\n  protected formatPersonalMeeting(\n    meetingInfo: MeetingInfoResponse,\n    shortId?: string, // TODO: do we need this param `shortId`?\n  ): RcMMeetingModel {\n    const settings = {\n      ...this.initialMeetingSetting,\n      ...meetingInfo,\n      shortId: shortId || meetingInfo.id,\n      usePersonalMeetingId: true,\n    };\n    return {\n      ...settings,\n      _requireMeetingPassword: !!settings.password,\n    };\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting: RcMMeetingModel) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const { topic, password, schedule, _requireMeetingPassword } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting: RcMMeetingModel): RcMMeetingModel {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n      recurrence,\n      usePersonalMeetingId,\n      _requireMeetingPassword,\n      host,\n    } = meeting;\n    const formatted = {\n      host,\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password: _requireMeetingPassword ? password : '',\n      recurrence,\n      usePersonalMeetingId,\n    } as RcMMeetingModel;\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule: MeetingScheduleResource = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: {\n          id: this.enableCustomTimezone\n            ? schedule.timeZone.id\n            : UTC_TIMEZONE_ID,\n        },\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = this.enableCustomTimezone\n          ? schedule.startTime\n          : moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n\n      if (recurrence && recurrence.until) {\n        formatted.recurrence.until = moment.utc(recurrence.until).format();\n      }\n    }\n\n    // For PMI\n    formatted.meetingType =\n      formatted.meetingType === MeetingType.PMI\n        ? MeetingType.SCHEDULED\n        : formatted.meetingType;\n    return formatted;\n  }\n\n  async _createDialingNumberTpl(\n    serviceInfo: MeetingServiceInfoResource,\n    resp: any,\n    invitationInfo: RcmInvitationInfo,\n  ) {\n    const result = {\n      meeting: resp,\n      serviceInfo: {\n        ...serviceInfo,\n        mobileDialingNumberTpl: getMobileDialingNumberTpl(\n          serviceInfo.dialInNumbers,\n          resp.id,\n        ),\n        phoneDialingNumberTpl: getPhoneDialingNumberTpl(\n          serviceInfo.dialInNumbers,\n        ),\n      },\n      extensionInfo: this.extensionInfo.info,\n      invitationInfo,\n    };\n    return result;\n  }\n\n  async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._deps.alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        message,\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._deps.alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        errorCode === 'CMN-102' &&\n        message.indexOf('[meetingId] is not found') > -1\n      ) {\n        this._deps.alert.danger({\n          message: meetingStatus.meetingIsDeleted,\n        });\n      } else if (\n        !this._deps.availabilityMonitor ||\n        !(await this._deps.availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._deps.alert.danger({ message: meetingStatus.internalError });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._deps.alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  _initDefaultData(\n    meeting: RcMMeetingModel,\n    { userSettings, personalMeetingSettings }: MeetingInitialExtraData,\n    usePmi: boolean,\n  ): RcMMeetingModel {\n    if (!this.enableServiceWebSettings) {\n      return meeting;\n    }\n\n    const processedMeeting = {\n      ...meeting,\n      ...(usePmi ? personalMeetingSettings : userSettings),\n      usePersonalMeetingId: usePmi,\n    };\n\n    // For PMI meetings\n    if (usePmi) {\n      const { allowJoinBeforeHost, password = '' } = processedMeeting;\n      const requirePasswordForPmiMeetings = this.scheduleUserSettings\n        .requirePasswordForPmiMeetings;\n\n      if (password !== '') {\n        processedMeeting._pmiPassword = password;\n      }\n\n      let pmiRequiresPwd;\n      switch (requirePasswordForPmiMeetings) {\n        case PMIRequirePassword.NONE:\n          pmiRequiresPwd = password !== '';\n          break;\n        case PMIRequirePassword.ALL:\n          pmiRequiresPwd = true;\n          break;\n        case PMIRequirePassword.JBH_ONLY:\n          pmiRequiresPwd = allowJoinBeforeHost || password !== '';\n          break;\n        default:\n          pmiRequiresPwd = processedMeeting._requireMeetingPassword;\n      }\n\n      const lockedRequirePasswordForPmiMeetings = this.scheduleLockedSettings\n        .requirePasswordForPmiMeetings;\n      let pmiRequiresPwdLocked = processedMeeting._lockRequireMeetingPassword;\n      if (requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY) {\n        pmiRequiresPwdLocked =\n          lockedRequirePasswordForPmiMeetings && allowJoinBeforeHost;\n      } else if (\n        requirePasswordForPmiMeetings !== PMIRequirePassword.JBH_ONLY\n      ) {\n        pmiRequiresPwdLocked = lockedRequirePasswordForPmiMeetings;\n      }\n\n      processedMeeting._requireMeetingPassword = pmiRequiresPwd;\n      processedMeeting._lockRequireMeetingPassword = pmiRequiresPwdLocked;\n    } else {\n      // For non-PMI meetings\n      const {\n        requirePasswordForSchedulingNewMeetings = false,\n      } = this.scheduleUserSettings;\n      if (requirePasswordForSchedulingNewMeetings) {\n        processedMeeting._requireMeetingPassword = true;\n      }\n      const lockedRequirePasswordForSchedulingNewMeetings = this\n        .scheduleLockedSettings.requirePasswordForSchedulingNewMeetings;\n      if (lockedRequirePasswordForSchedulingNewMeetings) {\n        processedMeeting._lockRequireMeetingPassword = true;\n      }\n    }\n    return {\n      ...processedMeeting,\n      password:\n        processedMeeting._requireMeetingPassword && !processedMeeting.password\n          ? generateRandomPassword()\n          : processedMeeting.password,\n    };\n  }\n\n  // use to check meeting is in updating status or not\n  _isUpdating(meetingId: string) {\n    return (\n      this.updatingStatus &&\n      find((obj: any) => obj.meetingId === meetingId, this.updatingStatus)\n    );\n  }\n}\n"],"file":"Meeting.js"}