{"version":3,"sources":["modules/EvTransferCallUI/EvTransferCallUI.ts"],"names":["EvTransferCallUI","name","deps","dep","optional","locale","routerInteraction","evCall","evTransferCall","evAuth","environment","evRequeueCall","modules","routerQueueGroupId","getSelectedQueueGroup","_modules","agent","agentConfig","inboundSettings","availableRequeueQueues","selectedQueueGroupId","availableRequeueQueue","queueGroupId","length","find","queue","gateGroupId","getSelectedGate","selectedGateId","selectedQueueGroup","gates","gateId","goToActivityCallLogPage","push","callId","goToRequeueCallPage","_redirectRequeueCall","goToRequeueGroupPage","selectQueueGroupDisabled","goToRequeueGroupDetailPage","groupId","isCheckDisable","gateDisabled","getTransferOptions","currentLocale","allowInternalTransfer","getSelectedCallRecipient","selectedCallRecipient","selectedGate","number","getNumber","currentRouteUrl","noTransferType","transferType","noSelectedQueueGroup","type","transferTypes","internal","label","i18n","getString","textFields","router","placeholder","value","disabled","readonly","phoneBook","groupName","gateName","manualEntry","transferAgentList","transferAgentId","getTransferPhoneBook","transferPhoneBookSelectedIndex","transferRecipientNumber","transferRecipientCountryId","getAvailableCountries","transferPhoneBook","transferPhoneBookSelected","availableCountries","selectedAgent","agentId","countryId","country","countryName","getTransferCallDisabled","isQueueTransfer","getCurrentCall","transferring","requeueCallDisabled","endedCall","allowTransfer","getTextFields","transferOptions","getStayOnCall","stayOnCall","evRequeueCallStayOnCall","evTransferCallStayOnCall","onTransferSuccess","test","currentPath","url","fromText","text","toLowerCase","includes","queueId","setStatus","requeueCall","goBack","id","_submitRequeueCall","transfer","options","firstName","lastName","blankRegex","username","replace","keywords","trim","split","filter","keyword","option","destination","_parsedDestination","changeTransferType","goalTransferOption","transferOption","clickCallRecipient","activityCallId","isStayOnCall","selectedTransferType","transferAgentListUpdateTTL","transferCountryOptions","allowManualInternationalTransfer","transferCallDisabled","isWide","requeuing","queueGroups","getAvailableRequeueQueues","clickTransferTypeFiled","_clickTransferTypeFiled","setStayOnCall","status","changeStayOnCall","fetchAgentList","changeRecipientNumber","recipientNumber","gotoTransferCallPage","changeTransferPhoneBookSelected","index","changeRecipientCountryId","changeTransferAgentId","transferCall","setCancelTemplate","templates","cancelTransfer","cancelTransferPage","gotoActivityCallLogPage","searchAgent","_searchAgent","searchPhoneBook","_searchPhoneBook","searchGroup","_searchQueue","searchGate","submitSelection","_submitSelection","agentPermissions","allowCrossQueueRequeue","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { RcUIModuleV2, createSelector } from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport { transferTypes } from '../../enums/transferTypes';\nimport {\n  EvTransferCallUIFunctions,\n  EvTransferCallUIProps,\n  TextField,\n  GoToRequeueGroupDetailPageParams,\n} from '../../interfaces/EvTransferCallUI.interface';\nimport {\n  EvDirectAgentListItem,\n  EvTransferPhoneBookItem,\n} from '../../lib/EvClient';\nimport { DepsModules, TransferCallUI } from './EvTransferCallUI.interface';\nimport i18n from './i18n';\nimport { getInternalTransferName } from './util';\n\n@Module({\n  name: 'EvTransferCallUI',\n  deps: [\n    'RouterInteraction',\n    'Locale',\n    'EvCall',\n    'EvTransferCall',\n    'EvAuth',\n    'Environment',\n    'EvRequeueCall',\n    { dep: 'EvTransferCallUIOptions', optional: true },\n  ],\n})\nclass EvTransferCallUI extends RcUIModuleV2<DepsModules>\n  implements TransferCallUI {\n  routerQueueGroupId: string;\n\n  constructor({\n    locale,\n    routerInteraction,\n    evCall,\n    evTransferCall,\n    evAuth,\n    environment,\n    evRequeueCall,\n  }) {\n    super({\n      modules: {\n        locale,\n        routerInteraction,\n        evCall,\n        evTransferCall,\n        evAuth,\n        environment,\n        evRequeueCall,\n      },\n    });\n    this.evTransferCall.onTransferSuccess(() => {\n      if (\n        /^\\/activityCallLog\\/.+\\/transferCall$/.test(\n          this._modules.routerInteraction.currentPath,\n        )\n      ) {\n        this.goToActivityCallLogPage();\n      }\n    });\n  }\n\n  get selectQueueGroupDisabled() {\n    return !this._modules.evAuth.agentPermissions.allowCrossQueueRequeue;\n  }\n\n  get gateDisabled() {\n    return !(\n      this._modules.evRequeueCall.selectedQueueGroupId &&\n      this._modules.evAuth.agentPermissions.allowCrossQueueRequeue\n    );\n  }\n\n  get requeueCallDisabled() {\n    return (\n      this._modules.evRequeueCall.requeuing ||\n      !this._modules.evRequeueCall.selectedGateId ||\n      !!this._modules.evCall.getCurrentCall().endedCall\n    );\n  }\n\n  getSelectedQueueGroup = createSelector(\n    () =>\n      this._modules.evAuth.agent.agentConfig.inboundSettings\n        .availableRequeueQueues,\n    () => this._modules.evRequeueCall.selectedQueueGroupId,\n    () => this.routerQueueGroupId,\n    (availableRequeueQueue, selectedQueueGroupId, routerQueueGroupId) => {\n      const queueGroupId = routerQueueGroupId || selectedQueueGroupId;\n      if (\n        queueGroupId &&\n        availableRequeueQueue &&\n        availableRequeueQueue.length > 0\n      ) {\n        return availableRequeueQueue.find(\n          (queue) => queue.gateGroupId === queueGroupId,\n        );\n      }\n      return null;\n    },\n  );\n\n  getSelectedGate = createSelector(\n    () => this.getSelectedQueueGroup(),\n    () => this._modules.evRequeueCall.selectedGateId,\n    (selectedQueueGroup, selectedGateId) => {\n      if (selectedQueueGroup && selectedGateId) {\n        const { gates } = selectedQueueGroup;\n        if (gates && gates.length > 0) {\n          return gates.find((queue) => queue.gateId === selectedGateId);\n        }\n      }\n      return null;\n    },\n  );\n\n  goToActivityCallLogPage = () => {\n    this._modules.routerInteraction.push(`/activityCallLog/${this.callId}`);\n  };\n\n  goToRequeueCallPage = () => {\n    this._redirectRequeueCall();\n  };\n\n  goToRequeueGroupPage = () => {\n    if (this.selectQueueGroupDisabled) return;\n    this._redirectRequeueCall(`/queueGroup`);\n  };\n\n  goToRequeueGroupDetailPage = ({\n    groupId,\n    isCheckDisable,\n  }: GoToRequeueGroupDetailPageParams) => {\n    if (isCheckDisable && this.gateDisabled) return;\n\n    this._redirectRequeueCall(`/queueGroup/${groupId}`);\n  };\n\n  private _redirectRequeueCall(url: string = '') {\n    this._modules.routerInteraction.push(\n      `/activityCallLog/${this.callId}/transferCall${url}`,\n    );\n  }\n\n  private _searchQueue(fromText: string, text: string) {\n    return (\n      fromText && text && fromText.toLowerCase().includes(text.toLowerCase())\n    );\n  }\n\n  private _submitSelection(queueId: string) {\n    this._modules.evRequeueCall.setStatus({\n      selectedQueueGroupId: this.routerQueueGroupId,\n      selectedGateId: queueId,\n    });\n    this.goToRequeueCallPage();\n  }\n\n  private async _submitRequeueCall() {\n    if (!this.requeueCallDisabled) {\n      await this._modules.evRequeueCall.requeueCall();\n      this.goToActivityCallLogPage();\n    }\n  }\n\n  get callId() {\n    return this._modules.evCall.activityCallId;\n  }\n\n  get evTransferCall() {\n    return this._modules.evTransferCall;\n  }\n\n  getTransferOptions = createSelector(\n    () => this._modules.locale.currentLocale,\n    () => this.evTransferCall.allowInternalTransfer,\n    () => this.getSelectedCallRecipient(),\n    () => this.getSelectedQueueGroup(),\n    () => this.getSelectedGate(),\n    () => this.callId,\n    () => this._modules.evRequeueCall.selectedQueueGroupId,\n    (\n      currentLocale,\n      allowInternalTransfer,\n      selectedCallRecipient,\n      selectedQueueGroup,\n      selectedGate,\n      callId,\n      selectedQueueGroupId,\n    ) => {\n      const number = this.evTransferCall.getNumber() || '';\n      const currentRouteUrl = `/activityCallLog/${callId}/transferCall`;\n      const noTransferType = !this.evTransferCall.transferType;\n      const noSelectedQueueGroup = !selectedQueueGroup;\n      return [\n        ...(allowInternalTransfer\n          ? [\n              {\n                type: transferTypes.internal,\n                label: i18n.getString(transferTypes.internal, currentLocale),\n                textFields: [\n                  {\n                    router: `${currentRouteUrl}/internal`,\n                    label: i18n.getString('callRecipientName', currentLocale),\n                    placeholder: i18n.getString(\n                      'callRecipientNamePlaceholder',\n                      currentLocale,\n                    ),\n                    value: selectedCallRecipient,\n                    disabled: noTransferType,\n                    readonly: noTransferType,\n                  },\n                ],\n              },\n            ]\n          : []),\n        {\n          type: transferTypes.phoneBook,\n          label: i18n.getString(transferTypes.phoneBook, currentLocale),\n          textFields: [\n            {\n              router: `${currentRouteUrl}/phoneBook`,\n              label: i18n.getString('callRecipientName', currentLocale),\n              placeholder: i18n.getString(\n                'callRecipientNamePlaceholder',\n                currentLocale,\n              ),\n              value: selectedCallRecipient,\n              disabled: noTransferType,\n              readonly: noTransferType,\n            },\n            {\n              label: i18n.getString('callRecipientNumber', currentLocale),\n              placeholder: i18n.getString(\n                'callRecipientNumberPlaceholder',\n                currentLocale,\n              ),\n              value: number,\n              readonly: true,\n            },\n          ],\n        },\n        {\n          type: transferTypes.queue,\n          label: i18n.getString(transferTypes.queue, currentLocale),\n          textFields: [\n            {\n              router: `${currentRouteUrl}/queueGroup`,\n              label: i18n.getString('queueGroup', currentLocale),\n              placeholder: i18n.getString(\n                'callRecipientNamePlaceholder',\n                currentLocale,\n              ),\n              value: selectedQueueGroup?.groupName,\n              disabled: noTransferType,\n              readonly: noTransferType,\n            },\n            {\n              router: `${currentRouteUrl}/queueGroup/${selectedQueueGroupId}`,\n              label: i18n.getString('queueDetail', currentLocale),\n              placeholder: i18n.getString(\n                'callRecipientNamePlaceholder',\n                currentLocale,\n              ),\n              value: selectedGate?.gateName,\n              disabled: noTransferType || noSelectedQueueGroup,\n              readonly: noTransferType || noSelectedQueueGroup,\n            },\n          ],\n        },\n        {\n          type: transferTypes.manualEntry,\n          label: i18n.getString(transferTypes.manualEntry, currentLocale),\n          textFields: [\n            {\n              router: `${currentRouteUrl}/manualEntry`,\n              label: i18n.getString('phoneNumber', currentLocale),\n              placeholder: i18n.getString(\n                'enterThePhoneNumberPlaceholder',\n                currentLocale,\n              ),\n              value: selectedCallRecipient,\n              disabled: noTransferType,\n              readonly: noTransferType,\n            },\n          ],\n        },\n      ];\n    },\n  );\n\n  get isQueueTransfer() {\n    return this.evTransferCall.transferType === transferTypes.queue;\n  }\n\n  getSelectedCallRecipient = createSelector(\n    () => this.evTransferCall.transferType,\n    () => this.evTransferCall.transferAgentList,\n    () => this.evTransferCall.transferAgentId,\n    () => this.evTransferCall.getTransferPhoneBook(),\n    () => this.evTransferCall.transferPhoneBookSelectedIndex,\n    () => this.evTransferCall.transferRecipientNumber,\n    () => this.evTransferCall.transferRecipientCountryId,\n    () => this._modules.evAuth.getAvailableCountries(),\n    (\n      transferType,\n      transferAgentList,\n      transferAgentId,\n      transferPhoneBook,\n      transferPhoneBookSelected,\n      transferRecipientNumber,\n      transferRecipientCountryId,\n      availableCountries,\n    ) => {\n      if (transferType === transferTypes.internal && transferAgentId) {\n        const selectedAgent = transferAgentList.find(\n          ({ agentId }) => agentId === transferAgentId,\n        );\n        return selectedAgent ? getInternalTransferName(selectedAgent) : '';\n      }\n      if (\n        transferType === transferTypes.phoneBook &&\n        typeof transferPhoneBookSelected !== 'undefined' &&\n        transferPhoneBookSelected !== null\n      ) {\n        const phoneBook = transferPhoneBook[transferPhoneBookSelected];\n        if (phoneBook.countryId === 'USA') {\n          return phoneBook.name;\n        }\n        const country = availableCountries.find(\n          ({ countryId }) => countryId === phoneBook.countryId,\n        );\n        if (country) {\n          return `${phoneBook.name} (${country.countryName ||\n            country.countryId})`;\n        }\n        return `${phoneBook.name} (${phoneBook.countryId})`;\n      }\n      if (\n        transferType === transferTypes.manualEntry &&\n        transferRecipientNumber\n      ) {\n        if (transferRecipientCountryId === 'USA') {\n          return `${transferRecipientNumber}`;\n        }\n        const country = availableCountries.find(\n          ({ countryId }) => countryId === transferRecipientCountryId,\n        );\n        return `${transferRecipientNumber} (${country.countryName ||\n          country.countryId})`;\n      }\n      return '';\n    },\n  );\n\n  getTransferCallDisabled = createSelector(\n    () => this.isQueueTransfer,\n    () => this._modules.evCall.getCurrentCall(),\n    () => this.getSelectedCallRecipient(),\n    () => this.evTransferCall.transferring,\n    () => this.requeueCallDisabled,\n    (\n      isQueueTransfer,\n      { endedCall, allowTransfer },\n      selectedCallRecipient,\n      transferring,\n      requeueCallDisabled,\n    ) => {\n      return isQueueTransfer\n        ? requeueCallDisabled\n        : !allowTransfer ||\n            !selectedCallRecipient ||\n            !!endedCall ||\n            transferring;\n    },\n  );\n\n  getTextFields = createSelector(\n    () => this.getTransferOptions(),\n    () => this.evTransferCall.transferType,\n    (\n      transferOptions: EvTransferCallUIProps['transferOptions'],\n      transferType: string,\n    ): TextField[] => {\n      const { textFields } = transferOptions.find(\n        ({ type }) => type === transferType,\n      );\n      return textFields;\n    },\n  );\n\n  goBack() {\n    this._modules.routerInteraction.goBack();\n  }\n\n  clickCallRecipient(router: string) {\n    if (router) {\n      this._modules.routerInteraction.push(router);\n    }\n  }\n\n  gotoActivityCallLogPage(id: string = this.callId) {\n    this._modules.routerInteraction.push(`/activityCallLog/${id}`);\n  }\n\n  gotoTransferCallPage(id: string = this.callId) {\n    this._modules.routerInteraction.push(`/activityCallLog/${id}/transferCall`);\n  }\n\n  transferCall() {\n    return this.isQueueTransfer\n      ? this._submitRequeueCall()\n      : this.evTransferCall.transfer();\n  }\n\n  protected _searchAgent(options: EvDirectAgentListItem, text: string) {\n    const firstName = options.firstName ?? '';\n    const lastName = options.lastName ?? '';\n    const blankRegex = /\\s+/g;\n    // when there is not have firstName and lastName, use username to search\n    const name = (`${firstName}${lastName}` || options.username)\n      .replace(blankRegex, '')\n      .toLowerCase();\n    const keywords = text\n      .toLowerCase()\n      .trim()\n      .split(blankRegex);\n\n    return (\n      keywords.length > 0 &&\n      keywords.filter((keyword) => name.includes(keyword)).length > 0\n    );\n  }\n\n  protected _searchPhoneBook(option: EvTransferPhoneBookItem, text: string) {\n    return (\n      (text && option.name?.toLowerCase().includes(text.toLowerCase())) ||\n      option.destination?.includes(text) || // TODO: think about `trim`?\n      (option._parsedDestination && option._parsedDestination.includes(text))\n    );\n  }\n\n  getStayOnCall = createSelector(\n    () => this.isQueueTransfer,\n    () => this._modules.evRequeueCall.stayOnCall,\n    () => this.evTransferCall.stayOnCall,\n    (isQueueTransfer, evRequeueCallStayOnCall, evTransferCallStayOnCall) => {\n      return isQueueTransfer\n        ? evRequeueCallStayOnCall\n        : evTransferCallStayOnCall;\n    },\n  );\n\n  private _clickTransferTypeFiled(type: string) {\n    this.evTransferCall.changeTransferType(type);\n    if (type !== transferTypes.queue) {\n      const goalTransferOption = this.getTransferOptions().find(\n        (transferOption) => transferOption.type === type,\n      );\n      this.clickCallRecipient(goalTransferOption?.textFields[0]?.router);\n    }\n  }\n\n  getUIProps({\n    id,\n    groupId,\n  }: {\n    id: string;\n    groupId?: string;\n  }): EvTransferCallUIProps {\n    this._modules.evCall.activityCallId = id;\n    this.routerQueueGroupId = groupId;\n    return {\n      currentLocale: this._modules.locale.currentLocale,\n      transferOptions: this.getTransferOptions(),\n      transferring: this.evTransferCall.transferring,\n      transferRecipientCountryId: this.evTransferCall\n        .transferRecipientCountryId,\n      transferRecipientNumber: this.evTransferCall.transferRecipientNumber,\n      transferPhoneBookSelectedIndex: this.evTransferCall\n        .transferPhoneBookSelectedIndex,\n      transferAgentId: this.evTransferCall.transferAgentId,\n      isStayOnCall: this.getStayOnCall(),\n      selectedTransferType: this.evTransferCall.transferType,\n      transferAgentList: this.evTransferCall.transferAgentList,\n      transferPhoneBook: this.evTransferCall.getTransferPhoneBook(),\n      transferAgentListUpdateTTL: 3000,\n      transferCountryOptions: this._modules.evAuth.getAvailableCountries(),\n      allowManualInternationalTransfer: this.evTransferCall\n        .allowManualInternationalTransfer,\n      textFields: this.getTextFields(),\n      transferCallDisabled: this.getTransferCallDisabled(),\n      isWide: this._modules.environment.isWide,\n\n      // requeuing state\n      requeuing: this._modules.evRequeueCall.requeuing,\n      // availableRequeueQueues\n      queueGroups: this._modules.evAuth.getAvailableRequeueQueues(),\n      selectedQueueGroupId: this._modules.evRequeueCall.selectedQueueGroupId,\n      selectedGateId: this._modules.evRequeueCall.selectedGateId,\n      // selected object\n      selectedQueueGroup: this.getSelectedQueueGroup(),\n      selectedGate: this.getSelectedGate(),\n      // disabled\n      gateDisabled: this.gateDisabled,\n      selectQueueGroupDisabled: this.selectQueueGroupDisabled,\n    };\n  }\n\n  getUIFunctions(): EvTransferCallUIFunctions {\n    return {\n      goBack: () => this.goBack(),\n      clickCallRecipient: (router) => this.clickCallRecipient(router),\n      clickTransferTypeFiled: (type) => this._clickTransferTypeFiled(type),\n      setStayOnCall: (status) =>\n        this.isQueueTransfer\n          ? this._modules.evRequeueCall.setStatus({ stayOnCall: !status })\n          : this.evTransferCall.changeStayOnCall(status),\n      fetchAgentList: () => this.evTransferCall.fetchAgentList(),\n      changeRecipientNumber: (recipientNumber) => {\n        this.evTransferCall.changeRecipientNumber(recipientNumber);\n        this.evTransferCall.changeTransferType(transferTypes.manualEntry);\n        this.gotoTransferCallPage();\n      },\n      changeTransferPhoneBookSelected: (index) => {\n        this.evTransferCall.changeTransferPhoneBookSelected(index);\n        this.evTransferCall.changeTransferType(transferTypes.phoneBook);\n        this.gotoTransferCallPage();\n      },\n      changeRecipientCountryId: (countryId) =>\n        this.evTransferCall.changeRecipientCountryId(countryId),\n      changeTransferAgentId: (agentId) => {\n        this.evTransferCall.changeTransferAgentId(agentId);\n        this.evTransferCall.changeTransferType(transferTypes.internal);\n        this.gotoTransferCallPage();\n      },\n      transferCall: () => this.transferCall(),\n      setCancelTemplate: (templates: React.ReactNode) =>\n        this.evTransferCall.setCancelTemplate(templates),\n      cancelTransfer: () => this.evTransferCall.cancelTransfer(),\n      cancelTransferPage: () => this.gotoActivityCallLogPage(),\n\n      goToActivityCallLogPage: this.goToActivityCallLogPage,\n      goToRequeueCallPage: this.goToRequeueCallPage,\n      goToRequeueGroupPage: this.goToRequeueGroupPage,\n      goToRequeueGroupDetailPage: this.goToRequeueGroupDetailPage,\n      searchAgent: (option, text) => this._searchAgent(option, text),\n      searchPhoneBook: (option, text) => this._searchPhoneBook(option, text),\n      searchGroup: (option, text) => this._searchQueue(option.groupName, text),\n      searchGate: (option, text) => this._searchQueue(option.gateName, text),\n      submitSelection: (queueId) => this._submitSelection(queueId),\n    };\n  }\n}\n\nexport { EvTransferCallUI };\n"],"file":"EvTransferCallUI.js"}