{"version":3,"sources":["modules/ComposeTextUI/index.js"],"names":["ComposeTextUI","name","deps","phone","brand","locale","composeText","messageSender","connectivityMonitor","rateLimiter","rolesAndPermissions","contactSearch","inputExpandable","fullName","currentLocale","sendButtonDisabled","ready","idle","messageText","length","toNumbers","typingToNumber","connectivity","throttling","senderNumbers","senderNumbersList","senderNumber","outboundSMS","permissions","OutboundSMS","searchContactList","sortedResult","showSpinner","regionSettings","routerInteraction","messageStore","conversations","formatContactPhone","phoneNumber","areaCode","countryCode","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","send","timeout","setTimeout","currentPath","alertMessageSending","clearTimeout","then","responses","dismissMessageSending","pushMessages","conversationId","conversation","id","push","relateCorrespondentEntity","clean","formatPhone","detectPhoneNumbers","input","detectedNumbers","forEach","item","addToNumber","searchContact","searchString","debouncedSearch","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","removeToNumber","updateMessageText","RcUIModule"],"mappings":"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","sourcesContent":["import Module from 'ringcentral-integration/lib/di/decorators/module';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport detect from '@ringcentral-integration/phone-number/lib/detect';\n\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'ComposeTextUI',\n  deps: [\n    'Brand',\n    'ComposeText',\n    'ConnectivityMonitor',\n    'ContactSearch',\n    'Conversations',\n    'Locale',\n    'MessageSender',\n    'MessageStore',\n    'RateLimiter',\n    'RegionSettings',\n    'RolesAndPermissions',\n    'RouterInteraction',\n  ],\n})\nexport default class ComposeTextUI extends RcUIModule {\n  getUIProps({\n    phone: {\n      brand,\n      locale,\n      composeText,\n      messageSender,\n      connectivityMonitor,\n      rateLimiter,\n      rolesAndPermissions,\n      contactSearch,\n    },\n    inputExpandable,\n  }) {\n    return {\n      brand: brand.fullName,\n      currentLocale: locale.currentLocale,\n      sendButtonDisabled:\n        !(composeText.ready && messageSender.idle) ||\n        composeText.messageText.length === 0 ||\n        (composeText.toNumbers.length === 0 &&\n          composeText.typingToNumber.length === 0) ||\n        !connectivityMonitor.connectivity ||\n        rateLimiter.throttling,\n      senderNumbers: messageSender.senderNumbersList,\n      senderNumber: composeText.senderNumber,\n      typingToNumber: composeText.typingToNumber,\n      toNumbers: composeText.toNumbers,\n      messageText: composeText.messageText,\n      outboundSMS: rolesAndPermissions.permissions.OutboundSMS,\n      searchContactList: contactSearch.sortedResult,\n      showSpinner: !(\n        composeText.ready &&\n        locale.ready &&\n        messageSender.ready &&\n        rolesAndPermissions.ready &&\n        contactSearch.ready\n      ),\n      inputExpandable,\n    };\n  }\n\n  getUIFunctions({\n    phone: {\n      regionSettings,\n      routerInteraction,\n      composeText,\n      messageStore,\n      contactSearch,\n      conversations,\n    },\n    formatContactPhone = (phoneNumber) =>\n      formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  }) {\n    return {\n      send() {\n        let timeout = setTimeout(() => {\n          if (routerInteraction.currentPath === '/composeText') {\n            composeText.alertMessageSending();\n          }\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = null;\n          }\n        }, 10000);\n        composeText.send().then(\n          (responses) => {\n            if (timeout) {\n              clearTimeout(timeout);\n              timeout = null;\n            }\n            composeText.dismissMessageSending();\n            if (!responses || responses.length === 0) {\n              return null;\n            }\n            messageStore.pushMessages(responses);\n            if (responses.length === 1) {\n              const conversationId =\n                responses[0] &&\n                responses[0].conversation &&\n                responses[0].conversation.id;\n              if (!conversationId) {\n                return null;\n              }\n              routerInteraction.push(`/conversations/${conversationId}`);\n            } else {\n              routerInteraction.push('/messages');\n            }\n            conversations.relateCorrespondentEntity(responses);\n            composeText.clean();\n            return null;\n          },\n          () => {\n            if (timeout) {\n              clearTimeout(timeout);\n              timeout = null;\n            }\n          },\n        );\n      },\n      formatPhone: formatContactPhone,\n      formatContactPhone,\n      detectPhoneNumbers(input) {\n        const detectedNumbers = detect({\n          input,\n          countryCode: regionSettings.countryCode,\n          areaCode: regionSettings.areaCode,\n        });\n        if (detectedNumbers.length) {\n          detectedNumbers.forEach((item) => {\n            composeText.addToNumber({\n              phoneNumber: item.phoneNumber,\n            });\n          });\n          return true;\n        }\n        return false;\n      },\n      searchContact: (searchString) =>\n        contactSearch.debouncedSearch({ searchString }),\n      updateSenderNumber: ({ phoneNumber }) =>\n        composeText.updateSenderNumber(phoneNumber),\n      updateTypingToNumber: (...args) =>\n        composeText.updateTypingToNumber(...args),\n      cleanTypingToNumber: (...args) =>\n        composeText.cleanTypingToNumber(...args),\n      addToNumber: (...args) => composeText.addToNumber(...args),\n      removeToNumber: (...args) => composeText.removeToNumber(...args),\n      updateMessageText: (...args) => composeText.updateMessageText(...args),\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      recipientsContactInfoRenderer,\n      recipientsContactPhoneRenderer,\n    };\n  }\n}\n"],"file":"index.js"}