{"version":3,"sources":["modules/VideoConfiguration/VideoConfiguration.ts"],"names":["DEFAULT_FETCH_DELAY","VideoConfiguration","name","deps","dep","optional","_stopWatching","_debouncedFetchData","_source","DataSource","videoConfigurationOptions","key","cleanOnReset","fetchFunction","_deps","client","service","platform","get","response","json","readyCheckFunction","rolesAndPermissions","ready","subscription","permissionCheckFunction","hasMeetingsPermission","dataFetcherV2","register","fn","fetchData","threshold","_fetchDelay","message","body","hints","includes","subscriptionHints","videoConfiguration","disableCache","tabManager","active","subscribe","subscriptionFilters","extensionInfo","_handleSubscription","cancel","Math","max","fetchDelay","provider","videoProviders","RCVideo","RCMeetings","None","data","DataFetcherV2Consumer"],"mappings":"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","sourcesContent":["import {\n  ExtensionInfoEvent,\n  UserVideoConfiguration,\n} from '@rc-ex/core/definitions';\nimport { watch } from '@ringcentral-integration/core';\nimport { Unsubscribe } from 'redux';\n\nimport { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport { subscriptionHints } from '../../enums/subscriptionHints';\nimport { debounce, DebouncedFunction } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { videoProviders } from '../MeetingProvider/videoProviders';\nimport { Deps } from './VideoConfiguration.interface';\n\nconst DEFAULT_FETCH_DELAY = 5 * 1000;\n\n@Module({\n  name: 'VideoConfiguration',\n  deps: [\n    'Client',\n    'DataFetcherV2',\n    'RolesAndPermissions',\n    'Subscription',\n    { dep: 'TabManager', optional: true },\n    { dep: 'VideoConfigurationOptions', optional: true },\n  ],\n})\nexport class VideoConfiguration extends DataFetcherV2Consumer<\n  Deps,\n  UserVideoConfiguration\n> {\n  protected _stopWatching: Unsubscribe = null;\n  protected _debouncedFetchData: DebouncedFunction<\n    VideoConfiguration['fetchData']\n  >;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.videoConfigurationOptions,\n      key: 'videoConfiguration',\n      cleanOnReset: true,\n      fetchFunction: async (): Promise<UserVideoConfiguration> => {\n        const response = await this._deps.client.service\n          .platform()\n          .get('/restapi/v1.0/account/~/extension/~/video-configuration');\n        return response.json();\n      },\n      readyCheckFunction: () =>\n        this._deps.rolesAndPermissions.ready && this._deps.subscription.ready,\n      permissionCheckFunction: () =>\n        !!this._deps.rolesAndPermissions.hasMeetingsPermission,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n    this._debouncedFetchData = debounce({\n      fn: this.fetchData,\n      threshold: this._fetchDelay,\n    });\n  }\n\n  protected get _fetchDelay() {\n    return Math.max(\n      0,\n      this._deps.videoConfigurationOptions?.fetchDelay ?? DEFAULT_FETCH_DELAY,\n    );\n  }\n\n  protected async _handleSubscription(message: ExtensionInfoEvent) {\n    if (\n      this.ready &&\n      message?.body?.hints?.includes(subscriptionHints.videoConfiguration) &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true))\n    ) {\n      this._debouncedFetchData();\n    }\n  }\n\n  onInit() {\n    this._deps.subscription.subscribe([subscriptionFilters.extensionInfo]);\n    this._stopWatching = watch(\n      this,\n      () => this._deps.subscription.message,\n      (message) => this._handleSubscription(message),\n    );\n  }\n\n  onReset() {\n    this._stopWatching?.();\n    this._stopWatching = null;\n    this._debouncedFetchData.cancel();\n  }\n\n  get isRCV() {\n    return this.provider === videoProviders.RCVideo;\n  }\n\n  get isRCM() {\n    return (\n      this.provider === videoProviders.RCMeetings ||\n      this.provider === videoProviders.None\n    );\n  }\n\n  get provider() {\n    return this.data?.provider || null;\n  }\n}\n"],"file":"VideoConfiguration.js"}