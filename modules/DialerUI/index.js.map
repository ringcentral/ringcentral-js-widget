{"version":3,"sources":["modules/DialerUI/index.js"],"names":["DialerUI","name","deps","dep","optional","alert","audioSettings","call","callingSettings","conferenceCall","connectivityManager","contactSearch","locale","rateLimiter","regionSettings","useV2","options","_alert","_audioSettings","_call","_callingSettings","_conferenceCall","_connectivityManager","_contactSearch","_locale","_rateLimiter","_regionSettings","_reducer","actionTypes","_useV2","_callHooks","store","dispatch","type","clearToNumberField","phoneNumber","fromDialPad","toNumberField","setToNumberField","length","debouncedSearch","searchString","recipient","shouldClean","setRecipient","clearRecipient","fromNumber","hook","triggerHook","callSuccess","callError","error","lastRecipient","lastPhoneNumber","warning","message","callErrors","noToNumber","loadLastCallState","fromSessionId","trim","_loadLastPhoneNumber","_onBeforeCall","closeMergingPair","currentLocale","callingMode","isWebphoneMode","callButtonDisabled","isCallButtonDisabled","fromNumbers","toNumber","recipients","searchContactList","showSpinner","dialButtonVolume","dialButtonMuted","isLastInputFromDialpad","onToNumberChange","clearToNumber","onCallButtonClick","changeFromNumber","updateFromNumber","formatPhone","areaCode","countryCode","searchContact","ObjectMap","prefixKeys","state","isIdle","isOfflineMode","isWebphoneUnavailableMode","isWebphoneInitializing","throttling","ready","RcUIModule","proxify","selector","sortedResult","slice"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport { selector } from 'ringcentral-integration/lib/selector';\nimport RcUIModule from '../../lib/RcUIModule';\nimport getReducer from './getReducer';\n\n@Module({\n  name: 'DialerUI',\n  deps: [\n    'CallingSettings',\n    { dep: 'AudioSettings', optional: true },\n    'CallingSettings',\n    'ConnectivityManager',\n    { dep: 'ContactSearch', optional: true },\n    'Locale',\n    'RateLimiter',\n    'RegionSettings',\n    'Alert',\n    'Call',\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'DialerUIOptions', optional: true },\n  ],\n})\nexport default class DialerUI extends RcUIModule {\n  constructor({\n    alert,\n    audioSettings,\n    call,\n    callingSettings,\n    conferenceCall,\n    connectivityManager,\n    contactSearch,\n    locale,\n    rateLimiter,\n    regionSettings,\n    useV2 = false,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._alert = alert;\n    this._audioSettings = audioSettings;\n    this._call = call;\n    this._callingSettings = callingSettings;\n    this._conferenceCall = conferenceCall;\n    this._connectivityManager = connectivityManager;\n    this._contactSearch = contactSearch;\n    this._locale = locale;\n    this._rateLimiter = rateLimiter;\n    this._regionSettings = regionSettings;\n    this._reducer = getReducer(this.actionTypes);\n    this._useV2 = useV2;\n    this._callHooks = [];\n  }\n\n  get _actionTypes() {\n    return ObjectMap.prefixKeys(\n      [\n        'setToNumberField',\n        'clearToNumberField',\n        'setRecipient',\n        'clearRecipient',\n        'loadLastCallState',\n        'call',\n        'callError',\n        'callSuccess',\n      ],\n      'dialerUI',\n    );\n  }\n\n  @proxify\n  async clearToNumberField() {\n    this.store.dispatch({\n      type: this.actionTypes.clearToNumberField,\n    });\n  }\n\n  @proxify\n  async setToNumberField(phoneNumber, fromDialPad = false) {\n    if (this.toNumberField !== phoneNumber) {\n      this.store.dispatch({\n        type: this.actionTypes.setToNumberField,\n        phoneNumber,\n        fromDialPad,\n      });\n      if (\n        this._useV2 &&\n        this.toNumberField &&\n        this.toNumberField.length >= 3 &&\n        this._contactSearch\n      ) {\n        this._contactSearch.debouncedSearch({\n          searchString: this.toNumberField,\n        });\n      }\n    }\n  }\n\n  @proxify\n  async setRecipient(recipient, shouldClean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.setRecipient,\n      recipient,\n    });\n    if (shouldClean) {\n      await this.clearToNumberField();\n    }\n  }\n\n  @proxify\n  async clearRecipient() {\n    this.store.dispatch({\n      type: this.actionTypes.clearRecipient,\n    });\n  }\n\n  async triggerHook({ phoneNumber = '', recipient = null, fromNumber = null }) {\n    for (const hook of this._callHooks) {\n      await hook({\n        phoneNumber,\n        recipient,\n        fromNumber,\n      });\n    }\n  }\n\n  @proxify\n  async call({ phoneNumber = '', recipient = null, fromNumber = null }) {\n    if (phoneNumber || recipient) {\n      this.store.dispatch({\n        type: this.actionTypes.call,\n        phoneNumber,\n        recipient,\n      });\n      await this.triggerHook({ phoneNumber, recipient, fromNumber });\n      try {\n        await this._call.call({\n          phoneNumber: this.toNumberField,\n          recipient: this.recipient,\n          fromNumber,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.callSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actionTypes.callError,\n          error,\n        });\n      }\n    }\n  }\n\n  _loadLastPhoneNumber() {\n    if (!this._call.lastRecipient && !this._call.lastPhoneNumber) {\n      this._alert.warning({\n        message: callErrors.noToNumber,\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.loadLastCallState,\n        phoneNumber: this._call.lastPhoneNumber,\n        recipient: this._call.lastRecipient,\n      });\n    }\n  }\n\n  @proxify\n  async onCallButtonClick({ fromNumber, fromSessionId } = {}) {\n    if (`${this.toNumberField}`.trim().length === 0 && !this.recipient) {\n      this._loadLastPhoneNumber();\n    } else {\n      this._onBeforeCall(fromSessionId);\n      await this.call({\n        phoneNumber: this.toNumberField,\n        recipient: this.recipient,\n        fromNumber,\n      });\n    }\n  }\n\n  _onBeforeCall() {\n    if (this._conferenceCall) {\n      this._conferenceCall.closeMergingPair();\n    }\n  }\n\n  get toNumberField() {\n    return this.state.toNumberField;\n  }\n\n  get recipient() {\n    return this.state.recipient;\n  }\n\n  @selector\n  recipients = [\n    () => this.recipient,\n    (recipient) => {\n      if (recipient) {\n        return [recipient];\n      }\n      return [];\n    },\n  ];\n\n  get isCallButtonDisabled() {\n    return (\n      !this._call.isIdle ||\n      this._connectivityManager.isOfflineMode ||\n      this._connectivityManager.isWebphoneUnavailableMode ||\n      this._connectivityManager.isWebphoneInitializing ||\n      this._rateLimiter.throttling\n    );\n  }\n\n  get showSpinner() {\n    return !(\n      this._call.ready &&\n      this._callingSettings.ready &&\n      this._locale.ready &&\n      this._connectivityManager.ready &&\n      (!this._audioSettings || this._audioSettings.ready) &&\n      !this._connectivityManager.isWebphoneInitializing\n    );\n  }\n\n  @selector\n  searchContactList = [\n    () => this._contactSearch && this._contactSearch.sortedResult,\n    () => this.toNumberField,\n    (sortedResult, toNumberField) =>\n      (toNumberField.length >= 3 && sortedResult.slice(0, 50)) || [],\n  ];\n\n  get isLastInputFromDialpad() {\n    return this.state.isLastInputFromDialpad;\n  }\n\n  getUIProps() {\n    return {\n      currentLocale: this._locale.currentLocale,\n      callingMode: this._callingSettings.callingMode,\n      isWebphoneMode: this._callingSettings.isWebphoneMode,\n      callButtonDisabled: this.isCallButtonDisabled,\n      fromNumber: this._callingSettings.fromNumber,\n      fromNumbers: this._callingSettings.fromNumbers,\n      toNumber: this.toNumberField,\n      recipient: this.recipient,\n      recipients: this.recipients,\n      searchContactList: this.searchContactList,\n      showSpinner: this.showSpinner,\n      dialButtonVolume: this._audioSettings\n        ? this._audioSettings.dialButtonVolume\n        : 1,\n      dialButtonMuted: this._audioSettings\n        ? this._audioSettings.dialButtonMuted\n        : false,\n      isLastInputFromDialpad: this.isLastInputFromDialpad,\n      useV2: this._useV2,\n    };\n  }\n\n  getUIFunctions() {\n    return {\n      onToNumberChange: (...props) => this.setToNumberField(...props),\n      clearToNumber: () => this.clearToNumberField(),\n      onCallButtonClick: () => this.onCallButtonClick(),\n      changeFromNumber: (...args) =>\n        this._callingSettings.updateFromNumber(...args),\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._regionSettings.areaCode,\n          countryCode: this._regionSettings.countryCode,\n        }),\n      setRecipient: (recipient) => this.setRecipient(recipient),\n      clearRecipient: () => this.clearRecipient(),\n      searchContact: (searchString) =>\n        this._contactSearch &&\n        this._contactSearch.debouncedSearch({ searchString }),\n    };\n  }\n}\n"],"file":"index.js"}