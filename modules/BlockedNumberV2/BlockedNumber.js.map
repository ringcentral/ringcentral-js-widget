{"version":3,"sources":["modules/BlockedNumberV2/BlockedNumber.ts"],"names":["BlockedNumber","name","deps","dep","optional","data","_source","DataSource","blockedNumberOptions","key","cleanOnReset","fetchFunction","params","_deps","client","account","extension","blockedNumber","list","readyCheckFunction","rolesAndPermissions","ready","dataFetcherV2","permissionCheckFunction","permissions","ReadBlockedNumbers","register","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,a,WATZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,eADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,eAFI,EAGJ,qBAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAJI;AAFA,CAAP,C,UAuCE,oBAAwB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc,CAACA,IAAD,CAAd;AAAA,CAAxB,C;;;;;AA1BD,yBAAYH,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AAGA,UAAKI,OAAL,GAAe,IAAIC,wBAAJ,iCACVL,IAAI,CAACM,oBADK;AAEbC,MAAAA,GAAG,EAAE,eAFQ;AAGbC,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mDACb,2BAAU,UAACC,MAAD;AAAA,2BACR,MAAKC,KAAL,CAAWC,MAAX,CACGC,OADH,GAEGC,SAFH,GAGGC,aAHH,GAIGC,IAJH,CAIQN,MAJR,CADQ;AAAA,mBAAV,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAJA;AAYbO,MAAAA,kBAAkB,EAAE;AAAA,eAClB,CAAC,EACC,MAAKN,KAAL,CAAWO,mBAAX,CAA+BC,KAA/B,IAAwC,MAAKR,KAAL,CAAWS,aAAX,CAAyBD,KADlE,CADiB;AAAA,OAZP;AAgBbE,MAAAA,uBAAuB,EAAE;AAAA,eACvB,CAAC,CAAC,MAAKV,KAAL,CAAWO,mBAAX,CAA+BI,WAA/B,CAA2CC,kBADtB;AAAA;AAhBZ,OAAf;;AAmBA,UAAKZ,KAAL,CAAWS,aAAX,CAAyBI,QAAzB,CAAkC,MAAKpB,OAAvC;;AAvBsB;AAwBvB;;;;wBAGa;AAAA;;AACZ,2BAAO,KAAKD,IAAZ,mDAAoB,EAApB;AACD;;;;EAjCgCsB,mC","sourcesContent":["import { computed } from '@ringcentral-integration/core';\nimport BlockedNumberInfo from 'ringcentral-client/build/definitions/BlockedNumberInfo';\n\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './BlockedNumber.interface';\n\n@Module({\n  name: 'BlockedNumber',\n  deps: [\n    'Client',\n    'DataFetcherV2',\n    'RolesAndPermissions',\n    { dep: 'BlockedNumberOptions', optional: true },\n  ],\n})\nexport class BlockedNumber extends DataFetcherV2Consumer<\n  Deps,\n  BlockedNumberInfo[]\n> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.blockedNumberOptions,\n      key: 'blockedNumber',\n      cleanOnReset: true,\n      fetchFunction: async (): Promise<BlockedNumberInfo[]> =>\n        fetchList((params: any) =>\n          this._deps.client\n            .account()\n            .extension()\n            .blockedNumber()\n            .list(params),\n        ),\n      readyCheckFunction: () =>\n        !!(\n          this._deps.rolesAndPermissions.ready && this._deps.dataFetcherV2.ready\n        ),\n      permissionCheckFunction: () =>\n        !!this._deps.rolesAndPermissions.permissions.ReadBlockedNumbers,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed<BlockedNumber>(({ data }) => [data])\n  get numbers() {\n    return this.data ?? [];\n  }\n}\n"],"file":"BlockedNumber.js"}