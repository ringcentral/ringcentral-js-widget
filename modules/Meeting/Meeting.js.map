{"version":3,"sources":["modules/Meeting/Meeting.ts"],"names":["Meeting","deps","dep","optional","_enableServiceWebSettings","scheduleUserSettings","_enablePersonalMeeting","personalMeeting","scheduleLockedSettings","initialMeetingSetting","defaultLockedSettings","commonUserSettings","commonPersonalMeetingSettings","savedDefaultMeetingSetting","lastMeetingSetting","userSettings","lockedSettings","state","loginUser","extensionInfo","brand","alert","client","storage","availabilityMonitor","reducers","meetingProvider","showSaveAsDefault","enableInvitationApi","enablePersonalMeeting","enableReloadAfterSchedule","enableServiceWebSettings","enableScheduleOnBehalf","enableCustomTimezone","options","actionTypes","_brand","_alert","_client","_extensionInfo","_storage","_availabilityMonitor","_lastMeetingSettingKey","_defaultMeetingSettingKey","_showSaveAsDefault","_enableInvitationApi","_personalMeetingKey","_enableReloadAfterSchedule","_enableScheduleOnBehalf","_fetchPersonMeetingTimeout","_meetingProvider","_fetchdelegatorsTimeout","_enableCustomTimezone","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","isRCM","dispatch","type","init","_initPersonalMeeting","_updateServiceWebSettings","_initMeeting","_initScheduleFor","initSuccess","resetSuccess","update","defaultMeetingSetting","_updatePreferences","clearTimeout","setPersonalMeeting","console","error","warn","setTimeout","setdelegators","_meeting","meeting","_combineWithSWSettings","isMeetingPasswordValid","validatePasswordSettings","password","_requireMeetingPassword","combineWithSettings","updateMeeting","_comparePreferences","usePersonalMeetingId","pmiDefaultSettings","generalDefaultSettings","userExtensionId","hostId","user","item","id","delegators","isMySelf","host","switchUsePersonalMeetingId","usePmiDefaultFromSW","updateMeetingPreferences","preferences","saveMeetingPreferencesState","isPreferencesChanged","Promise","all","getUserSettings","getLockedSettings","updateUserSettings","updateLockedSettings","usePmi","personalMeetingSettings","requirePasswordForSchedulingNewMeetings","requirePasswordForPmiMeetings","lockedRequirePasswordForSchedulingNewMeetings","lockedRequirePasswordForPmiMeetings","processedMeeting","allowJoinBeforeHost","_pmiPassword","pmiRequiresPwd","PMIRequirePassword","NONE","ALL","JBH_ONLY","pmiRequiresPwdLocked","_lockRequireMeetingPassword","getMeetingServiceInfo","serviceInfo","personalMeetingId","externalUserInfo","getMeeting","meetingInfoResponse","meetingInfo","shortId","settings","fetchPersonalMeeting","formatPersonalMeeting","updatePersonalMeeting","log","getDelegators","records","updateDelegatorList","isAlertSuccess","isScheduling","schedule","_promise","initScheduling","_validate","formattedMeeting","_format","saveAsDefault","saveAsDefaultSetting","postMeeting","resp","getMeetingInvitation","invitationInfo","scheduled","_saved","_createDialingNumberTpl","result","success","message","meetingStatus","scheduledSuccess","resetScheduling","_errorHandle","extensionId","account","extension","get","meetingId","isAlertError","response","clone","json","errorCode","isMeetingDeleted","indexOf","danger","meetingIsDeleted","post","put","service","platform","res","code","send","method","url","apiResponse","invitation","recording","scheduleMeeting","startParticipantsVideo","startParticipantVideo","restScheduleOptions","processedScheduleMeeting","_isUpdating","initUpdating","putMeeting","updated","updatedSuccess","resetUpdating","mobileDialingNumberTpl","dialInNumbers","phoneDialingNumberTpl","errors","MeetingErrors","warning","permissionName","insufficientPermissions","payload","checkIfHAError","internalError","updatingStatus","obj","topic","meetingType","startHostVideo","audioOptions","recurrence","formatted","MeetingType","RECURRING","_schedule","durationInMinutes","timeZone","UTC_TIMEZONE_ID","startTime","moment","utc","format","until","PMI","SCHEDULED","invalidMeetingInfo","length","push","emptyTopic","noPassword","durationIncorrect","notShowAgain","isSecret","RCM_PASSWORD_REGEX","test","info","schedulingStatus","scheduleStatus","scheduling","status","COMMON_SETTINGS","settingLock","_initDefaultData","savedSetting","usePmiForScheduledMeetings","getItem","myself","name","ASSISTED_USERS_MYSELF","isLoginUser","RcModule","background","proxify","selector","initialSetting","extensionName","currentHost","meetingName","setting","DEFAULT_LOCK_SETTINGS"],"mappings":"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","sourcesContent":["import { computed } from '@ringcentral-integration/core';\nimport moment from 'moment';\nimport { find, pick, isEmpty } from 'ramda';\nimport Client from 'ringcentral-client';\n\nimport {\n  comparePreferences,\n  getDefaultMeetingSettings,\n  getInitializedStartTime,\n  getMobileDialingNumberTpl,\n  getPhoneDialingNumberTpl,\n  MeetingType,\n  prunePreferencesObject,\n  UTC_TIMEZONE_ID,\n  generateRandomPassword,\n} from '../../helpers/meetingHelper';\nimport background from '../../lib/background';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { selector } from '../../lib/selector';\nimport actionTypes, { MeetingActionTypes } from './actionTypes';\nimport getMeetingReducer, {\n  getDefaultMeetingSettingReducer,\n  getMeetingStorageReducer,\n  getPersonalMeetingReducer,\n} from './getMeetingReducer';\nimport {\n  MeetingInfoResponse,\n  MeetingScheduleResource,\n  RcmInvitationInfo,\n  RcMMeetingModel,\n  ScheduleMeetingResponse,\n  MeetingDelegatorsResponse,\n  MeetingDelegators,\n  MeetingInitialExtraData,\n} from './interface';\nimport { MeetingErrors } from './meetingErrors';\nimport meetingStatus from './meetingStatus';\nimport scheduleStatus from './scheduleStatus';\nimport {\n  RCM_PASSWORD_REGEX,\n  ASSISTED_USERS_MYSELF,\n  PMIRequirePassword,\n  COMMON_SETTINGS,\n  DEFAULT_LOCK_SETTINGS,\n} from './constants';\n\n// eslint-disable-next-line\n@Module({\n  deps: [\n    'Brand',\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    'MeetingProvider',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true },\n  ],\n})\nexport class Meeting extends RcModule<Record<string, any>, MeetingActionTypes> {\n  // TODO: add state interface\n  private _brand: any;\n  public _alert: any;\n  public _client: Client;\n  private _extensionInfo: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _lastMeetingSettingKey: any;\n  private _defaultMeetingSettingKey: any;\n  private _showSaveAsDefault: boolean;\n  private _enableInvitationApi: boolean;\n  private _personalMeetingKey: string;\n  private _enablePersonalMeeting: boolean;\n  private _enableReloadAfterSchedule: boolean;\n  private _enableServiceWebSettings: boolean;\n  private _enableScheduleOnBehalf: boolean;\n  private _fetchPersonMeetingTimeout: NodeJS.Timeout;\n  private _meetingProvider: any;\n  private _fetchdelegatorsTimeout: NodeJS.Timeout;\n  private _enableCustomTimezone: boolean;\n\n  constructor({\n    brand,\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    availabilityMonitor,\n    reducers,\n    meetingProvider,\n    showSaveAsDefault = false,\n    enableInvitationApi = false,\n    enablePersonalMeeting = false,\n    enableReloadAfterSchedule = true,\n    enableServiceWebSettings = false,\n    enableScheduleOnBehalf = false,\n    enableCustomTimezone = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._brand = brand;\n    this._alert = alert;\n    this._client = client;\n    this._storage = storage;\n    this._extensionInfo = extensionInfo;\n    this._meetingProvider = meetingProvider;\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._enableInvitationApi = enableInvitationApi;\n    this._enableCustomTimezone = enableCustomTimezone;\n    this._enableReloadAfterSchedule = enableReloadAfterSchedule;\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    this._enableServiceWebSettings = enableServiceWebSettings;\n    this._enableScheduleOnBehalf = enableScheduleOnBehalf;\n    this._availabilityMonitor = availabilityMonitor;\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._defaultMeetingSettingKey = 'defaultMeetingSetting';\n    this._personalMeetingKey = 'personalMeeting';\n    this._reducer = getMeetingReducer(this.actionTypes, reducers);\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes),\n    });\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultMeetingSettingKey,\n        reducer: getDefaultMeetingSettingReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalMeetingKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  private _shouldInit() {\n    return (\n      this.pending &&\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      this._meetingProvider.ready &&\n      this._meetingProvider.isRCM &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  private async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting();\n    }\n\n    if (this._enableServiceWebSettings) {\n      await this._updateServiceWebSettings();\n    }\n\n    this._initMeeting();\n\n    if (this._enableScheduleOnBehalf) {\n      await this._initScheduleFor();\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  private _shouldReset() {\n    return (\n      this.ready &&\n      (!this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready ||\n        !this._meetingProvider.ready ||\n        !this._meetingProvider.isRCM ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready))\n    );\n  }\n\n  private _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  private _initMeeting() {\n    this.update(this.defaultMeetingSetting);\n    this._updatePreferences();\n  }\n\n  async _initPersonalMeeting() {\n    if (this._fetchPersonMeetingTimeout) {\n      clearTimeout(this._fetchPersonMeetingTimeout);\n    }\n    try {\n      await this.setPersonalMeeting();\n    } catch (e) {\n      console.error('fetch default meeting error:', e);\n      console.warn('retry after 10s');\n      this._fetchPersonMeetingTimeout = setTimeout(() => {\n        this._initPersonalMeeting();\n      }, 10000);\n    }\n  }\n\n  async _initScheduleFor() {\n    if (this._fetchdelegatorsTimeout) {\n      clearTimeout(this._fetchdelegatorsTimeout);\n    }\n    try {\n      await this.setdelegators();\n    } catch (e) {\n      console.error('fetch default meeting error:', e);\n      console.warn('retry after 10s');\n      this._fetchdelegatorsTimeout = setTimeout(() => {\n        this._initPersonalMeeting();\n      }, 10000);\n    }\n  }\n\n  combineWithSettings(_meeting: RcMMeetingModel) {\n    let meeting = _meeting;\n    if (this._enableServiceWebSettings) {\n      meeting = this._combineWithSWSettings(_meeting);\n    }\n    return {\n      ...meeting,\n      isMeetingPasswordValid: this.validatePasswordSettings(\n        meeting.password,\n        meeting._requireMeetingPassword,\n      ),\n    };\n  }\n\n  @proxify\n  update(_meeting: RcMMeetingModel) {\n    const meeting = this.combineWithSettings(_meeting);\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting,\n    });\n    this._comparePreferences();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this.update(\n      usePersonalMeetingId\n        ? this.pmiDefaultSettings\n        : this.generalDefaultSettings,\n    );\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string | number) {\n    if (!userExtensionId) {\n      return;\n    }\n    const hostId = `${userExtensionId}`;\n    const user = find((item) => item.id === hostId, this.delegators);\n    if (user) {\n      const isMySelf = hostId === `${this.extensionInfo.id}`;\n      this.update({\n        ...this.meeting,\n        host: {\n          id: hostId,\n        },\n      });\n      this.switchUsePersonalMeetingId(isMySelf && this.usePmiDefaultFromSW);\n    }\n  }\n\n  private _updatePreferences() {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences: prunePreferencesObject(this.meeting),\n    });\n  }\n\n  private _comparePreferences() {\n    const { preferences, meeting } = this;\n    this.store.dispatch({\n      type: this.actionTypes.saveMeetingPreferencesState,\n      isPreferencesChanged: comparePreferences(preferences, meeting),\n    });\n  }\n\n  @proxify\n  private async _updateServiceWebSettings() {\n    const [userSettings, lockedSettings] = await Promise.all([\n      this.getUserSettings(),\n      this.getLockedSettings(),\n    ]);\n    this.store.dispatch({\n      type: this.actionTypes.updateUserSettings,\n      userSettings,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.updateLockedSettings,\n      lockedSettings,\n    });\n  }\n\n  _initDefaultData(\n    meeting: RcMMeetingModel,\n    { userSettings, personalMeetingSettings }: MeetingInitialExtraData,\n    usePmi: boolean,\n  ): RcMMeetingModel {\n    if (!this._enableServiceWebSettings) {\n      return meeting;\n    }\n    const {\n      requirePasswordForSchedulingNewMeetings = false,\n      requirePasswordForPmiMeetings,\n    } = this.scheduleUserSettings;\n    const {\n      requirePasswordForSchedulingNewMeetings: lockedRequirePasswordForSchedulingNewMeetings,\n      requirePasswordForPmiMeetings: lockedRequirePasswordForPmiMeetings,\n    } = this.scheduleLockedSettings;\n    const processedMeeting = {\n      ...meeting,\n      ...(usePmi ? personalMeetingSettings : userSettings),\n      usePersonalMeetingId: usePmi,\n    };\n\n    // For PMI meetings\n    if (usePmi) {\n      const { allowJoinBeforeHost, password = '' } = processedMeeting;\n\n      if (password !== '') {\n        processedMeeting._pmiPassword = password;\n      }\n\n      let pmiRequiresPwd;\n      switch (requirePasswordForPmiMeetings) {\n        case PMIRequirePassword.NONE:\n          pmiRequiresPwd = password !== '';\n          break;\n        case PMIRequirePassword.ALL:\n          pmiRequiresPwd = true;\n          break;\n        case PMIRequirePassword.JBH_ONLY:\n          pmiRequiresPwd = allowJoinBeforeHost || password !== '';\n          break;\n        default:\n          pmiRequiresPwd = processedMeeting._requireMeetingPassword;\n      }\n\n      let pmiRequiresPwdLocked = processedMeeting._lockRequireMeetingPassword;\n      if (requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY) {\n        pmiRequiresPwdLocked =\n          lockedRequirePasswordForPmiMeetings && allowJoinBeforeHost;\n      } else if (\n        requirePasswordForPmiMeetings !== PMIRequirePassword.JBH_ONLY\n      ) {\n        pmiRequiresPwdLocked = lockedRequirePasswordForPmiMeetings;\n      }\n\n      processedMeeting._requireMeetingPassword = pmiRequiresPwd;\n      processedMeeting._lockRequireMeetingPassword = pmiRequiresPwdLocked;\n    } else {\n      // For non-PMI meetings\n      if (requirePasswordForSchedulingNewMeetings) {\n        processedMeeting._requireMeetingPassword = true;\n      }\n      if (lockedRequirePasswordForSchedulingNewMeetings) {\n        processedMeeting._lockRequireMeetingPassword = true;\n      }\n    }\n    return {\n      ...processedMeeting,\n      password:\n        processedMeeting._requireMeetingPassword && !processedMeeting.password\n          ? generateRandomPassword()\n          : processedMeeting.password,\n    };\n  }\n\n  _combineWithSWSettings(meeting: RcMMeetingModel): RcMMeetingModel {\n    if (!meeting.usePersonalMeetingId) {\n      return meeting;\n    }\n\n    const processedMeeting = { ...meeting };\n    const { allowJoinBeforeHost } = processedMeeting;\n    const { requirePasswordForPmiMeetings } = this.scheduleUserSettings;\n    const {\n      requirePasswordForPmiMeetings: lockedRequirePasswordForPmiMeetings,\n    } = this.scheduleLockedSettings;\n\n    if (\n      lockedRequirePasswordForPmiMeetings &&\n      requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY\n    ) {\n      if (allowJoinBeforeHost && !processedMeeting._requireMeetingPassword) {\n        processedMeeting._requireMeetingPassword = true;\n        processedMeeting.password =\n          processedMeeting._pmiPassword || generateRandomPassword();\n      }\n      processedMeeting._lockRequireMeetingPassword = allowJoinBeforeHost;\n    }\n    return processedMeeting;\n  }\n\n  @proxify\n  private async fetchPersonalMeeting(): Promise<MeetingInfoResponse> {\n    const serviceInfo = await this.getMeetingServiceInfo();\n    const personalMeetingId = serviceInfo.externalUserInfo.personalMeetingId;\n    const meetingInfoResponse = await this.getMeeting(personalMeetingId);\n    return meetingInfoResponse;\n  }\n\n  private formatPersonalMeeting(\n    meetingInfo: MeetingInfoResponse,\n    shortId?: string,\n  ): RcMMeetingModel {\n    const settings = {\n      ...this.initialMeetingSetting,\n      ...meetingInfo,\n      shortId: shortId || meetingInfo.id,\n      usePersonalMeetingId: true,\n    };\n    return {\n      ...settings,\n      _requireMeetingPassword: !!settings.password,\n    };\n  }\n\n  @proxify\n  private async setPersonalMeeting() {\n    try {\n      const meetingInfoResponse = await this.fetchPersonalMeeting();\n      const meeting = this.formatPersonalMeeting(meetingInfoResponse);\n      this.store.dispatch({\n        type: this.actionTypes.updatePersonalMeeting,\n        meeting,\n      });\n    } catch (e) {\n      console.log('failed to get personal meeting id:', e);\n    }\n  }\n\n  @proxify\n  private async setdelegators() {\n    const { records } = await this.getDelegators();\n    this.store.dispatch({\n      type: this.actionTypes.updateDelegatorList,\n      delegators: records,\n    });\n  }\n\n  @proxify\n  async schedule(\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ): Promise<ScheduleMeetingResponse> {\n    if (this.isScheduling) return (this.schedule as any)._promise;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this.schedule as any)._promise = Promise.all([\n        this.postMeeting(formattedMeeting),\n        this.getMeetingServiceInfo(),\n      ]);\n\n      const [resp, serviceInfo] = await (this.schedule as any)._promise;\n      const invitationInfo = await this.getMeetingInvitation(resp.id);\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          id: resp.id,\n          _saved: meeting._saved,\n        },\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this._enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this._enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.store.dispatch({\n          type: this.actionTypes.updatePersonalMeeting,\n          meeting: this.formatPersonalMeeting(\n            resp,\n            serviceInfo.externalUserInfo.personalMeetingId,\n          ),\n        });\n        if (this._enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling,\n      });\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.schedule as any)._promise;\n    }\n  }\n\n  @proxify\n  async getMeetingServiceInfo(extensionId?: string) {\n    return this._client\n      .account()\n      .extension(extensionId)\n      .meeting()\n      .serviceInfo()\n      .get();\n  }\n\n  @proxify\n  async getMeeting(meetingId: string, { isAlertError = true } = {}) {\n    try {\n      const settings = await this._client\n        .account()\n        .extension()\n        .meeting(meetingId)\n        .get();\n      return {\n        ...settings,\n        _requireMeetingPassword: !!settings.password,\n      };\n    } catch (e) {\n      const { errorCode, message } = await e.response.clone().json();\n      console.log(\n        `failed to get meeting info: ${meetingId}, ${errorCode}, ${message}`,\n      );\n      const isMeetingDeleted =\n        errorCode === 'CMN-102' &&\n        message.indexOf('[meetingId] is not found') > -1;\n      if (isAlertError && isMeetingDeleted) {\n        setTimeout(() => {\n          this._alert.danger({\n            message: meetingStatus.meetingIsDeleted,\n          });\n        }, 50);\n      }\n      return null;\n    }\n  }\n\n  async postMeeting(formattedMeeting: RcMMeetingModel) {\n    return this._client.account().extension().meeting().post(formattedMeeting);\n  }\n\n  @proxify\n  async putMeeting(meetingId: string, formattedMeeting: RcMMeetingModel) {\n    return this._client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .put(formattedMeeting);\n  }\n\n  @proxify\n  async getDelegators(): Promise<MeetingDelegatorsResponse> {\n    const res = await this._client.service\n      .platform()\n      .get(\n        '/restapi/v1.0/account/~/extension/~/meetings-configuration/assisted',\n      );\n    return res.json();\n  }\n\n  @proxify\n  async getMeetingInvitation(meetingId: string): Promise<RcmInvitationInfo> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n    // only rc brand is supported for now\n    if (this._brand.code !== 'rc') {\n      return null;\n    }\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: `/restapi/v1.0/account/~/extension/~/meeting/${meetingId}/invitation`,\n      });\n      const { invitation } = await apiResponse.json();\n      return {\n        invitation,\n      };\n    } catch (ex) {\n      console.warn(ex);\n      return null;\n    }\n  }\n\n  @proxify\n  async getUserSettings() {\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: '/restapi/v1.0/account/~/extension/~/meeting/user-settings',\n      });\n      const { recording = {}, scheduleMeeting = {} } = await apiResponse.json();\n      return {\n        recording,\n        scheduleMeeting,\n      };\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  }\n\n  @proxify\n  async getLockedSettings() {\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: '/restapi/v1.0/account/~/meeting/locked-settings',\n      });\n      const { recording = {}, scheduleMeeting = {} } = await apiResponse.json();\n      const {\n        startParticipantsVideo,\n        startParticipantVideo,\n        ...restScheduleOptions\n      } = scheduleMeeting;\n      const processedScheduleMeeting = {\n        ...restScheduleOptions,\n        startParticipantsVideo:\n          startParticipantsVideo || startParticipantVideo || false,\n      };\n      return {\n        recording,\n        scheduleMeeting: processedScheduleMeeting,\n      };\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this._isUpdating(meetingId)) {\n      return (this.updateMeeting as any)._promise;\n    }\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n        meetingId,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this.updateMeeting as any)._promise = Promise.all([\n        this.putMeeting(meetingId, formattedMeeting),\n        this.getMeetingServiceInfo(),\n      ]);\n\n      const [resp, serviceInfo] = await (this.updateMeeting as any)._promise;\n      const invitationInfo = await this.getMeetingInvitation(meetingId);\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved,\n        },\n        meetingId,\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this._enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this._enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.store.dispatch({\n          type: this.actionTypes.updatePersonalMeeting,\n          meeting: this.formatPersonalMeeting(\n            resp,\n            serviceInfo.externalUserInfo.personalMeetingId,\n          ),\n        });\n        if (this._enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n        meetingId,\n      });\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.updateMeeting as any)._promise;\n    }\n  }\n\n  async _createDialingNumberTpl(\n    serviceInfo: any,\n    resp: any,\n    invitationInfo: RcmInvitationInfo,\n  ) {\n    serviceInfo.mobileDialingNumberTpl = getMobileDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n      resp.id,\n    );\n    serviceInfo.phoneDialingNumberTpl = getPhoneDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n    );\n    const result = {\n      meeting: resp,\n      serviceInfo,\n      extensionInfo: this.extensionInfo,\n      invitationInfo,\n    };\n    return result;\n  }\n\n  async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        message,\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        errorCode === 'CMN-102' &&\n        message.indexOf('[meetingId] is not found') > -1\n      ) {\n        this._alert.danger({\n          message: meetingStatus.meetingIsDeleted,\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !(await this._availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._alert.danger({ message: meetingStatus.internalError });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  /**\n   * @param {number} meetingId\n   */\n  _isUpdating(meetingId: string) {\n    return (\n      this.state.updatingStatus &&\n      find((obj: any) => obj.meetingId === meetingId, this.state.updatingStatus)\n    );\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting: RcMMeetingModel): RcMMeetingModel {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n      recurrence,\n      usePersonalMeetingId,\n      _requireMeetingPassword,\n      host,\n    } = meeting;\n    const formatted = {\n      host,\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password: _requireMeetingPassword ? password : '',\n      recurrence,\n      usePersonalMeetingId,\n    } as RcMMeetingModel;\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule: MeetingScheduleResource = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: {\n          id: this._enableCustomTimezone\n            ? schedule.timeZone.id\n            : UTC_TIMEZONE_ID,\n        },\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = this._enableCustomTimezone\n          ? schedule.startTime\n          : moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n\n      if (recurrence && recurrence.until) {\n        formatted.recurrence.until = moment.utc(recurrence.until).format();\n      }\n    }\n\n    // For PMI\n    formatted.meetingType =\n      formatted.meetingType === MeetingType.PMI\n        ? MeetingType.SCHEDULED\n        : formatted.meetingType;\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const { topic, password, schedule, _requireMeetingPassword } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  saveAsDefaultSetting(meeting) {\n    const formattedMeeting = this._format(meeting);\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: {\n        ...formattedMeeting,\n        _saved: meeting.notShowAgain,\n        _requireMeetingPassword: meeting._requireMeetingPassword,\n      },\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    if (!isSecret) {\n      return true;\n    }\n    if (password && RCM_PASSWORD_REGEX.test(password)) {\n      return true;\n    }\n    return false;\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get isUpdating() {\n    return this.meeting && this.meeting.id && this._isUpdating(this.meeting.id);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get preferences() {\n    return this.state.preferences;\n  }\n\n  @computed(({ _enableServiceWebSettings, scheduleUserSettings }: Meeting) => [\n    _enableServiceWebSettings,\n    scheduleUserSettings,\n  ])\n  get commonUserSettings() {\n    if (!this._enableServiceWebSettings) {\n      return {};\n    }\n    return pick(COMMON_SETTINGS, this.scheduleUserSettings);\n  }\n\n  @computed(({ _enablePersonalMeeting, personalMeeting }: Meeting) => [\n    _enablePersonalMeeting,\n    personalMeeting,\n  ])\n  get commonPersonalMeetingSettings() {\n    if (!this._enablePersonalMeeting) {\n      return {};\n    }\n    return pick([...COMMON_SETTINGS, 'password'], this.personalMeeting);\n  }\n\n  @computed(\n    ({ _enableServiceWebSettings, scheduleLockedSettings }: Meeting) => [\n      _enableServiceWebSettings,\n      scheduleLockedSettings,\n    ],\n  )\n  get defaultLockedSettings() {\n    if (!this._enableServiceWebSettings) {\n      return {};\n    }\n    return {\n      settingLock: pick(COMMON_SETTINGS, this.scheduleLockedSettings),\n    };\n  }\n\n  @computed<Meeting>(\n    ({\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n    }) => [\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n    ],\n  )\n  get pmiDefaultSettings() {\n    if (!this._enableServiceWebSettings) {\n      return this.personalMeeting;\n    }\n    return this._initDefaultData(\n      {\n        ...this.initialMeetingSetting,\n        ...this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      true,\n    );\n  }\n\n  @computed<Meeting>(\n    ({\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n      savedDefaultMeetingSetting,\n      lastMeetingSetting,\n    }) => [\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n      savedDefaultMeetingSetting,\n      lastMeetingSetting,\n    ],\n  )\n  get generalDefaultSettings() {\n    if (!this._enableServiceWebSettings) {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return {\n        ...this.initialMeetingSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n    }\n    return this._initDefaultData(\n      {\n        ...this.initialMeetingSetting,\n        ...this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      false,\n    );\n  }\n\n  @selector\n  defaultMeetingSetting: any = [\n    () => this.initialMeetingSetting,\n    () => this.usePmiDefaultFromSW,\n    () => this.userSettings,\n    () => this.pmiDefaultSettings,\n    () => this.generalDefaultSettings,\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return savedSetting;\n    },\n    (\n      initialSetting: RcMMeetingModel,\n      usePmi: boolean,\n      userSettings: Partial<RcMMeetingModel>,\n      pmiDefaultSettings: Partial<RcMMeetingModel>,\n      generalDefaultSettings: Partial<RcMMeetingModel>,\n      savedSetting: Partial<RcMMeetingModel>,\n    ) => {\n      if (this._enableServiceWebSettings) {\n        if (!isEmpty(userSettings)) {\n          return usePmi ? pmiDefaultSettings : generalDefaultSettings;\n        }\n        return initialSetting;\n      }\n      return {\n        ...initialSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n    },\n  ];\n\n  @selector\n  initialMeetingSetting: any = [\n    () => {\n      const extensionName = this.extensionInfo.name || '';\n      if (\n        !this._enableScheduleOnBehalf ||\n        !this.meeting ||\n        !this.delegators ||\n        this.delegators.length === 0\n      ) {\n        return extensionName;\n      }\n      const currentHost = `${\n        (this.meeting.host && this.meeting.host.id) || ''\n      }`;\n      const user = find((item) => item.id === currentHost, this.delegators);\n      return user && user.id !== `${this.extensionInfo.id}`\n        ? user.name\n        : extensionName;\n    },\n    () => getInitializedStartTime(),\n    () => {\n      if (\n        this._enableScheduleOnBehalf &&\n        this.meeting &&\n        this.meeting.host &&\n        this.meeting.host.id\n      ) {\n        return `${this.meeting.host.id}`;\n      }\n      return `${this.extensionInfo.id}` || '';\n    },\n    (\n      meetingName: string,\n      startTime: string,\n      hostId: string,\n    ): RcMMeetingModel => {\n      const setting = getDefaultMeetingSettings(meetingName, startTime, hostId);\n      if (!this._enableServiceWebSettings) {\n        return setting;\n      }\n      return {\n        ...setting,\n        ...DEFAULT_LOCK_SETTINGS,\n        _pmiPassword: '',\n      };\n    },\n  ];\n\n  @computed(\n    ({\n      _enablePersonalMeeting,\n      _enableServiceWebSettings,\n      scheduleUserSettings,\n    }: Meeting) => [\n      _enablePersonalMeeting,\n      _enableServiceWebSettings,\n      scheduleUserSettings,\n    ],\n  )\n  get usePmiDefaultFromSW() {\n    return (\n      this._enablePersonalMeeting &&\n      this._enableServiceWebSettings &&\n      this.scheduleUserSettings.usePmiForScheduledMeetings\n    );\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get recordingUserSettings() {\n    const { recording = {} } = this.userSettings;\n    return recording;\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get scheduleUserSettings() {\n    const { scheduleMeeting = {} } = this.userSettings;\n    return scheduleMeeting;\n  }\n\n  @computed(({ lockedSettings }: Meeting) => [lockedSettings])\n  get recordingLockedSettings() {\n    const { recording = {} } = this.lockedSettings;\n    return recording;\n  }\n\n  @computed(({ lockedSettings }: Meeting) => [lockedSettings])\n  get scheduleLockedSettings() {\n    const { scheduleMeeting = {} } = this.lockedSettings;\n    return scheduleMeeting;\n  }\n\n  get savedDefaultMeetingSetting() {\n    return this._storage.getItem(this._defaultMeetingSettingKey);\n  }\n\n  get lastMeetingSetting() {\n    return this._storage.getItem(this._lastMeetingSettingKey);\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault;\n  }\n\n  get isPreferencesChanged() {\n    return this.state.isPreferencesChanged;\n  }\n\n  @computed(({ state }: Meeting) => [state.userSettings])\n  get userSettings() {\n    return this.state.userSettings || {};\n  }\n\n  @computed(({ state }: Meeting) => [state.lockedSettings])\n  get lockedSettings() {\n    return this.state.lockedSettings || {};\n  }\n\n  get showAdminLock(): boolean {\n    return false;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get personalMeeting() {\n    return this._storage.getItem(this._personalMeetingKey);\n  }\n\n  @computed(({ state, loginUser }: Meeting) => [state, loginUser])\n  get delegators(): MeetingDelegators[] {\n    if (this.state.delegators.length === 0) {\n      return [];\n    }\n    return [this.loginUser, ...this.state.delegators];\n  }\n\n  @computed(({ extensionInfo }: Meeting) => [extensionInfo])\n  get loginUser() {\n    const myself: MeetingDelegators = {\n      id: `${this.extensionInfo.id}`,\n      name: ASSISTED_USERS_MYSELF,\n      isLoginUser: true,\n    };\n    return myself;\n  }\n}\n"],"file":"Meeting.js"}