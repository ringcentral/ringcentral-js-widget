{"version":3,"sources":["modules/Meeting/meeting.ts"],"names":["Meeting","deps","dep","optional","alert","client","extensionInfo","storage","availabilityMonitor","reducers","showSaveAsDefault","options","actionTypes","_alert","_client","_extensionInfo","_storage","_availabilityMonitor","_lastMeetingSettingKey","_defaultMeetingSettingKey","_showSaveAsDefault","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","ready","pending","dispatch","type","initSuccess","Object","keys","defaultMeetingSetting","length","extensionName","info","name","startTime","meeting","_saveAsDefaultSetting","resetSuccess","_initMeeting","updateMeeting","lastMeetingSetting","isAlertSuccess","opener","isScheduling","schedule","_promise","initScheduling","_validate","formattedMeeting","_format","saveAsDefault","Promise","all","account","extension","post","serviceInfo","get","resp","scheduled","_saved","_createDialingNumberTpl","result","setTimeout","message","meetingStatus","scheduledSuccess","resetScheduling","_errorHandle","meetingId","_isUpdating","initUpdating","put","updated","updatedSuccess","resetUpdating","mobileDialingNumberTpl","dialInNumbers","id","phoneDialingNumberTpl","scheduledHook","errors","MeetingErrors","error","warning","apiResponse","json","errorCode","permissionName","danger","insufficientPermissions","payload","checkIfHAError","internalError","state","updatingStatus","obj","topic","meetingType","allowJoinBeforeHost","startHostVideo","startParticipantsVideo","audioOptions","password","recurrence","formatted","MeetingType","RECURRING","_schedule","durationInMinutes","timeZone","UTC_TIMEZONE_ID","moment","utc","format","until","invalidMeetingInfo","_requireMeetingPassword","push","emptyTopic","noPassword","durationIncorrect","saveAsDefaultSetting","notShowAgain","getItem","schedulingStatus","scheduleStatus","scheduling","status","RcModule","background","proxify"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { find } from 'ramda';\nimport Client from 'ringcentral-client';\n\nimport {\n  getDefaultMeetingSettings,\n  getInitializedStartTime,\n  getMobileDialingNumberTpl,\n  getPhoneDialingNumberTpl,\n  MeetingType,\n  UTC_TIMEZONE_ID,\n} from '../../helpers/meetingHelper';\nimport background from '../../lib/background';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport actionTypes, { MeetingActionTypes } from './actionTypes';\nimport getMeetingReducer, {\n  getDefaultMeetingSettingReducer,\n  getMeetingStorageReducer,\n} from './getMeetingReducer';\nimport { MeetingErrors } from './meetingErrors';\nimport meetingStatus from './meetingStatus';\nimport scheduleStatus from './scheduleStatus';\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true },\n  ],\n})\nexport class Meeting extends RcModule<MeetingActionTypes> {\n  public _alert: any;\n  public _client: Client;\n  private _extensionInfo: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _lastMeetingSettingKey: any;\n  private _defaultMeetingSettingKey: any;\n  public _showSaveAsDefault: any;\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    availabilityMonitor,\n    reducers,\n    showSaveAsDefault,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._storage = storage;\n    this._extensionInfo = extensionInfo;\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._availabilityMonitor = availabilityMonitor;\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._defaultMeetingSettingKey = 'defaultMeetingSetting';\n    this._reducer = getMeetingReducer(this.actionTypes, reducers);\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes),\n    });\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultMeetingSettingKey,\n        reducer: getDefaultMeetingSettingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  private _shouldInit() {\n    return (\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready) &&\n      this.pending\n    );\n  }\n\n  private _init() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n    if (!Object.keys(this.defaultMeetingSetting).length) {\n      const extensionName = this._extensionInfo.info.name || '';\n      const startTime = getInitializedStartTime();\n      const meeting = getDefaultMeetingSettings(extensionName, startTime);\n      this._saveAsDefaultSetting(meeting);\n    }\n  }\n\n  private _shouldReset() {\n    return (\n      (!this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready)) &&\n      this.ready\n    );\n  }\n\n  private _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting settings from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  _initMeeting() {\n    const extensionName = this._extensionInfo.info.name || '';\n    const startTime = getInitializedStartTime();\n    if (this._showSaveAsDefault) {\n      this.store.dispatch({\n        type: this.actionTypes.updateMeeting,\n        meeting: {\n          ...getDefaultMeetingSettings(extensionName, startTime),\n          // Load saved default meeting settings\n          ...this.defaultMeetingSetting,\n        },\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.updateMeeting,\n        meeting: {\n          ...getDefaultMeetingSettings(extensionName, startTime),\n          // Load last meeting settings\n          ...this.lastMeetingSetting,\n        },\n      });\n    }\n  }\n\n  @proxify\n  update(meeting) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting,\n    });\n  }\n\n  @proxify\n  async schedule(meeting, { isAlertSuccess = true } = {}, opener) {\n    if (this.isScheduling) return (this.schedule as any)._promise;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this._saveAsDefaultSetting(meeting);\n      }\n\n      (this.schedule as any)._promise = Promise.all([\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .post(formattedMeeting),\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .serviceInfo()\n          .get(),\n      ]);\n\n      const [resp, serviceInfo] = await (this.schedule as any)._promise;\n\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved,\n        },\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        opener,\n      );\n\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling,\n      });\n      this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.schedule as any)._promise;\n    }\n  }\n\n  @proxify\n  async getMeeting(meetingId) {\n    return this._client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .get();\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting,\n    { isAlertSuccess = false } = {},\n    opener,\n  ) {\n    if (this._isUpdating(meetingId)) {\n      return (this.updateMeeting as any)._promise;\n    }\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n        meetingId,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this._saveAsDefaultSetting(meeting);\n      }\n\n      (this.updateMeeting as any)._promise = Promise.all([\n        this._client\n          .account()\n          .extension()\n          .meeting(meetingId)\n          .put(formattedMeeting),\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .serviceInfo()\n          .get(),\n      ]);\n\n      const [resp, serviceInfo] = await (this.updateMeeting as any)._promise;\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved,\n        },\n        meetingId,\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        opener,\n      );\n\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n        meetingId,\n      });\n      return this._errorHandle(errors);\n    } finally {\n      delete (this.updateMeeting as any)._promise;\n    }\n  }\n\n  async _createDialingNumberTpl(serviceInfo: any, resp: any, opener: any) {\n    serviceInfo.mobileDialingNumberTpl = getMobileDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n      resp.id,\n    );\n    serviceInfo.phoneDialingNumberTpl = getPhoneDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n    );\n    const result = {\n      meeting: resp,\n      serviceInfo,\n      extensionInfo: this.extensionInfo,\n    };\n\n    if (typeof this.scheduledHook === 'function') {\n      await this.scheduledHook(result, opener);\n    }\n    return result;\n  }\n\n  _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.apiResponse) {\n      const { errorCode, permissionName } = errors.apiResponse.json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !this._availabilityMonitor.checkIfHAError(errors)\n      ) {\n        this._alert.danger({ message: meetingStatus.internalError });\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {number} meetingId\n   */\n  _isUpdating(meetingId) {\n    return (\n      this.state.updatingStatus &&\n      find((obj: any) => obj.meetingId === meetingId, this.state.updatingStatus)\n    );\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting: ScheduleMeetingModel) {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n      recurrence,\n    } = meeting;\n    const formatted: ScheduleMeetingModel = {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      recurrence,\n    };\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule: ScheduleModel = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: { id: UTC_TIMEZONE_ID },\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n\n      if (recurrence && recurrence.until) {\n        formatted.recurrence.until = moment.utc(recurrence.until).format();\n      }\n    }\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const { topic, password, schedule, _requireMeetingPassword } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  _saveAsDefaultSetting(meeting) {\n    const formattedMeeting = this._format(meeting);\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: {\n        ...formattedMeeting,\n        _saved: meeting.notShowAgain,\n      },\n    });\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get lastMeetingSetting() {\n    const state = this._storage.getItem(this._lastMeetingSettingKey);\n    return state;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get isUpdating() {\n    return this.meeting && this.meeting.id && this._isUpdating(this.meeting.id);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get defaultMeetingSetting() {\n    return this._storage.getItem(this._defaultMeetingSettingKey) || {};\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault || false;\n  }\n}\n\nexport interface ScheduleModel {\n  durationInMinutes: number;\n  timeZone: { id: string };\n  startTime?: string;\n}\n\nexport interface RecurrenceOptions {\n  frequency: string;\n  interval: string | number;\n  count?: number;\n  until?: string; // \"2030-12-21T12:00:00Z\"\n}\n\nexport interface ScheduleMeetingModel {\n  topic: string;\n  meetingType: any;\n  allowJoinBeforeHost: any;\n  startHostVideo: any;\n  startParticipantsVideo: any;\n  audioOptions: any;\n  password: any;\n  schedule?: ScheduleModel;\n  recurrence?: RecurrenceOptions;\n}\n"],"file":"meeting.js"}