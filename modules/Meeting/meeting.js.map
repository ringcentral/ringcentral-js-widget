{"version":3,"sources":["modules/Meeting/meeting.ts"],"names":["Meeting","deps","dep","optional","_enableServiceWebSettings","scheduleUserSettings","_enablePersonalMeeting","personalMeeting","scheduleLockedSettings","initialMeetingSetting","defaultLockedSettings","commonUserSettings","commonPersonalMeetingSettings","savedDefaultMeetingSetting","lastMeetingSetting","userSettings","lockedSettings","state","selfUser","extensionInfo","brand","alert","client","storage","availabilityMonitor","reducers","meetingProvider","showSaveAsDefault","enableInvitationApi","enablePersonalMeeting","enableReloadAfterSchedule","enableServiceWebSettings","enableScheduleFor","options","actionTypes","_brand","_alert","_client","_extensionInfo","_storage","_availabilityMonitor","_lastMeetingSettingKey","_defaultMeetingSettingKey","_showSaveAsDefault","_enableInvitationApi","_personalMeetingKey","_enableReloadAfterSchedule","_enableScheduleFor","_fetchPersonMeetingTimeout","_meetingProvider","_fetchAssistedUsersTimeout","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","isRCM","dispatch","type","init","_initPersonalMeeting","_updateServiceWebSettings","_initMeeting","_initScheduleFor","updateScheduleFor","id","initSuccess","resetSuccess","update","defaultMeetingSetting","_updatePreferences","clearTimeout","setPersonalMeeting","console","error","warn","setTimeout","setAssistedUsers","_meeting","meeting","_combineWithSWSettings","isMeetingPasswordValid","validatePasswordSettings","password","_requireMeetingPassword","combineWithSettings","updateMeeting","_comparePreferences","usePersonalMeetingId","pmiDefaultSettings","generalDefaultSettings","userExtensionId","user","item","assistedUsers","updateScheduleForUser","isMySelf","switchUsePersonalMeetingId","usePmiDefaultFromSW","updateMeetingPreferences","preferences","saveMeetingPreferencesState","isPreferencesChanged","Promise","all","getUserSettings","getLockedSettings","updateUserSettings","updateLockedSettings","usePmi","personalMeetingSettings","requirePasswordForSchedulingNewMeetings","requirePasswordForPmiMeetings","lockedRequirePasswordForSchedulingNewMeetings","lockedRequirePasswordForPmiMeetings","processedMeeting","allowJoinBeforeHost","_pmiPassword","pmiRequiresPwd","PMIRequirePassword","NONE","ALL","JBH_ONLY","pmiRequiresPwdLocked","_lockRequireMeetingPassword","getMeetingServiceInfo","serviceInfo","personalMeetingId","externalUserInfo","getMeeting","meetingInfoResponse","meetingInfo","settings","shortId","fetchPersonalMeeting","formatPersonalMeeting","updatePersonalMeeting","log","getAssistedUsers","records","updateAssistedUsers","isAlertSuccess","opener","isScheduling","schedule","_promise","initScheduling","_validate","formattedMeeting","_format","saveAsDefault","saveAsDefaultSetting","postMeeting","resp","getMeetingInvitation","invitationInfo","scheduled","_saved","_createDialingNumberTpl","result","success","message","meetingStatus","scheduledSuccess","resetScheduling","_errorHandle","extensionId","account","extension","get","meetingId","isAlertError","response","clone","json","isMeetingDeleted","errorCode","indexOf","danger","meetingIsDeleted","post","put","service","platform","res","code","send","method","url","apiResponse","invitation","recording","scheduleMeeting","startParticipantsVideo","startParticipantVideo","restScheduleOptions","processedScheduleMeeting","_isUpdating","initUpdating","putMeeting","updated","updatedSuccess","resetUpdating","mobileDialingNumberTpl","dialInNumbers","phoneDialingNumberTpl","scheduledHook","errors","MeetingErrors","warning","permissionName","insufficientPermissions","payload","checkIfHAError","internalError","updatingStatus","obj","topic","meetingType","startHostVideo","audioOptions","recurrence","host","formatted","MeetingType","RECURRING","_schedule","durationInMinutes","timeZone","UTC_TIMEZONE_ID","startTime","moment","utc","format","until","scheduleForUser","PMI","SCHEDULED","invalidMeetingInfo","length","push","emptyTopic","noPassword","durationIncorrect","notShowAgain","isSecret","RCM_PASSWORD_REGEX","test","info","schedulingStatus","scheduleStatus","scheduling","status","COMMON_SETTINGS","_lockSettings","_initDefaultData","savedSetting","usePmiForScheduledMeetings","getItem","myself","name","ASSISTED_USERS_MYSELF","RcModule","background","proxify","selector","initialSetting","extensionName","scheduleForName","meetingName","setting","DEFAULT_LOCK_SETTINGS"],"mappings":"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","sourcesContent":["import { computed } from '@ringcentral-integration/core';\nimport moment from 'moment';\nimport { find, pick, isEmpty } from 'ramda';\nimport Client from 'ringcentral-client';\n\nimport {\n  comparePreferences,\n  getDefaultMeetingSettings,\n  getInitializedStartTime,\n  getMobileDialingNumberTpl,\n  getPhoneDialingNumberTpl,\n  MeetingType,\n  prunePreferencesObject,\n  UTC_TIMEZONE_ID,\n} from '../../helpers/meetingHelper';\nimport background from '../../lib/background';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { selector } from '../../lib/selector';\nimport actionTypes, { MeetingActionTypes } from './actionTypes';\nimport getMeetingReducer, {\n  getDefaultMeetingSettingReducer,\n  getMeetingStorageReducer,\n  getPersonalMeetingReducer,\n} from './getMeetingReducer';\nimport {\n  MeetingInfoResponse,\n  MeetingScheduleResource,\n  RcmInvitationInfo,\n  RcMMeetingModel,\n  ScheduleMeetingResponse,\n  MeetingAssistedResponse,\n  MeetingAssistedUser,\n  MeetingInitialExtraData,\n} from './interface';\nimport { MeetingErrors } from './meetingErrors';\nimport meetingStatus from './meetingStatus';\nimport scheduleStatus from './scheduleStatus';\nimport {\n  RCM_PASSWORD_REGEX,\n  ASSISTED_USERS_MYSELF,\n  PMIRequirePassword,\n  COMMON_SETTINGS,\n  DEFAULT_LOCK_SETTINGS,\n} from './constants';\n\n// eslint-disable-next-line\n@Module({\n  deps: [\n    'Brand',\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    'MeetingProvider',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true },\n  ],\n})\nexport class Meeting extends RcModule<Record<string, any>, MeetingActionTypes> {\n  // TODO: add state interface\n  private _brand: any;\n  public _alert: any;\n  public _client: Client;\n  private _extensionInfo: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _lastMeetingSettingKey: any;\n  private _defaultMeetingSettingKey: any;\n  private _showSaveAsDefault: boolean;\n  private _enableInvitationApi: boolean;\n  private _personalMeetingKey: string;\n  private _enablePersonalMeeting: boolean;\n  private _enableReloadAfterSchedule: boolean;\n  private _enableServiceWebSettings: boolean;\n  private _enableScheduleFor: boolean;\n  private _fetchPersonMeetingTimeout: NodeJS.Timeout;\n  private _meetingProvider: any;\n  private _fetchAssistedUsersTimeout: NodeJS.Timeout;\n\n  constructor({\n    brand,\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    availabilityMonitor,\n    reducers,\n    meetingProvider,\n    showSaveAsDefault = false,\n    enableInvitationApi = false,\n    enablePersonalMeeting = false,\n    enableReloadAfterSchedule = true,\n    enableServiceWebSettings = false,\n    enableScheduleFor = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._brand = brand;\n    this._alert = alert;\n    this._client = client;\n    this._storage = storage;\n    this._extensionInfo = extensionInfo;\n    this._meetingProvider = meetingProvider;\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._enableInvitationApi = enableInvitationApi;\n    this._enableReloadAfterSchedule = enableReloadAfterSchedule;\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    this._enableServiceWebSettings = enableServiceWebSettings;\n    this._enableScheduleFor = enableScheduleFor;\n    this._availabilityMonitor = availabilityMonitor;\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._defaultMeetingSettingKey = 'defaultMeetingSetting';\n    this._personalMeetingKey = 'personalMeeting';\n    this._reducer = getMeetingReducer(this.actionTypes, reducers);\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes),\n    });\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultMeetingSettingKey,\n        reducer: getDefaultMeetingSettingReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalMeetingKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  private _shouldInit() {\n    return (\n      this.pending &&\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      this._meetingProvider.ready &&\n      this._meetingProvider.isRCM &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  private async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting();\n    }\n\n    if (this._enableServiceWebSettings) {\n      await this._updateServiceWebSettings();\n    }\n\n    this._initMeeting();\n\n    if (this._enableScheduleFor) {\n      await this._initScheduleFor();\n      this.updateScheduleFor(this.extensionInfo.id);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  private _shouldReset() {\n    return (\n      this.ready &&\n      (!this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready ||\n        !this._meetingProvider.ready ||\n        !this._meetingProvider.isRCM ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready))\n    );\n  }\n\n  private _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  private _initMeeting() {\n    this.update(this.defaultMeetingSetting);\n    this._updatePreferences();\n  }\n\n  async _initPersonalMeeting() {\n    if (this._fetchPersonMeetingTimeout) {\n      clearTimeout(this._fetchPersonMeetingTimeout);\n    }\n    try {\n      await this.setPersonalMeeting();\n    } catch (e) {\n      console.error('fetch default meeting error:', e);\n      console.warn('retry after 10s');\n      this._fetchPersonMeetingTimeout = setTimeout(() => {\n        this._initPersonalMeeting();\n      }, 10000);\n    }\n  }\n\n  async _initScheduleFor() {\n    if (this._fetchAssistedUsersTimeout) {\n      clearTimeout(this._fetchAssistedUsersTimeout);\n    }\n    try {\n      await this.setAssistedUsers();\n    } catch (e) {\n      console.error('fetch default meeting error:', e);\n      console.warn('retry after 10s');\n      this._fetchAssistedUsersTimeout = setTimeout(() => {\n        this._initPersonalMeeting();\n      }, 10000);\n    }\n  }\n\n  combineWithSettings(_meeting: RcMMeetingModel) {\n    let meeting = _meeting;\n    if (this._enableServiceWebSettings) {\n      meeting = this._combineWithSWSettings(_meeting);\n    }\n    return {\n      ...meeting,\n      isMeetingPasswordValid: this.validatePasswordSettings(\n        meeting.password,\n        meeting._requireMeetingPassword,\n      ),\n    };\n  }\n\n  @proxify\n  update(_meeting: RcMMeetingModel) {\n    const meeting = this.combineWithSettings(_meeting);\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting,\n    });\n    this._comparePreferences();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this.update(\n      usePersonalMeetingId\n        ? this.pmiDefaultSettings\n        : this.generalDefaultSettings,\n    );\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string | number) {\n    if (!userExtensionId) {\n      return;\n    }\n    const user = find(\n      (item) => item.id === `${userExtensionId}`,\n      this.assistedUsers,\n    );\n    if (user) {\n      this.store.dispatch({\n        type: this.actionTypes.updateScheduleForUser,\n        user,\n      });\n      const isMySelf = userExtensionId === this.extensionInfo.id;\n      this.switchUsePersonalMeetingId(isMySelf && this.usePmiDefaultFromSW);\n    }\n  }\n\n  private _updatePreferences() {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences: prunePreferencesObject(this.meeting),\n    });\n  }\n\n  private _comparePreferences() {\n    const { preferences, meeting } = this;\n    this.store.dispatch({\n      type: this.actionTypes.saveMeetingPreferencesState,\n      isPreferencesChanged: comparePreferences(preferences, meeting),\n    });\n  }\n\n  @proxify\n  private async _updateServiceWebSettings() {\n    const [userSettings, lockedSettings] = await Promise.all([\n      this.getUserSettings(),\n      this.getLockedSettings(),\n    ]);\n    this.store.dispatch({\n      type: this.actionTypes.updateUserSettings,\n      userSettings,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.updateLockedSettings,\n      lockedSettings,\n    });\n  }\n\n  _initDefaultData(\n    meeting: RcMMeetingModel,\n    { userSettings, personalMeetingSettings }: MeetingInitialExtraData,\n    usePmi: boolean,\n  ): RcMMeetingModel {\n    if (!this._enableServiceWebSettings) {\n      return meeting;\n    }\n    const {\n      requirePasswordForSchedulingNewMeetings = false,\n      requirePasswordForPmiMeetings,\n    } = this.scheduleUserSettings;\n    const {\n      requirePasswordForSchedulingNewMeetings: lockedRequirePasswordForSchedulingNewMeetings,\n      requirePasswordForPmiMeetings: lockedRequirePasswordForPmiMeetings,\n    } = this.scheduleLockedSettings;\n\n    // For PMI meetings\n    if (usePmi) {\n      const processedMeeting = {\n        ...meeting,\n        ...personalMeetingSettings,\n        usePersonalMeetingId: true,\n      };\n      const { allowJoinBeforeHost, password = '' } = processedMeeting;\n\n      if (password !== '') {\n        processedMeeting._pmiPassword = password;\n      }\n\n      let pmiRequiresPwd;\n      switch (requirePasswordForPmiMeetings) {\n        case PMIRequirePassword.NONE:\n          pmiRequiresPwd = password !== '';\n          break;\n        case PMIRequirePassword.ALL:\n          pmiRequiresPwd = true;\n          break;\n        case PMIRequirePassword.JBH_ONLY:\n          pmiRequiresPwd = allowJoinBeforeHost || password !== '';\n          break;\n        default:\n          pmiRequiresPwd = processedMeeting._requireMeetingPassword;\n      }\n\n      let pmiRequiresPwdLocked = processedMeeting._lockRequireMeetingPassword;\n      if (requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY) {\n        pmiRequiresPwdLocked =\n          lockedRequirePasswordForPmiMeetings && allowJoinBeforeHost;\n      } else if (\n        requirePasswordForPmiMeetings !== PMIRequirePassword.JBH_ONLY\n      ) {\n        pmiRequiresPwdLocked = lockedRequirePasswordForPmiMeetings;\n      }\n\n      processedMeeting._requireMeetingPassword = pmiRequiresPwd;\n      processedMeeting._lockRequireMeetingPassword = pmiRequiresPwdLocked;\n\n      return processedMeeting;\n    }\n\n    // For non-PMI meetings\n    const processedMeeting = {\n      ...meeting,\n      ...userSettings,\n      usePersonalMeetingId: false,\n    };\n    if (requirePasswordForSchedulingNewMeetings) {\n      processedMeeting._requireMeetingPassword = true;\n    }\n    if (lockedRequirePasswordForSchedulingNewMeetings) {\n      processedMeeting._lockRequireMeetingPassword = true;\n    }\n\n    return processedMeeting;\n  }\n\n  _combineWithSWSettings(meeting: RcMMeetingModel): RcMMeetingModel {\n    if (!meeting.usePersonalMeetingId) {\n      return meeting;\n    }\n\n    const processedMeeting = { ...meeting };\n    const { allowJoinBeforeHost } = processedMeeting;\n    const { requirePasswordForPmiMeetings } = this.scheduleUserSettings;\n    const {\n      requirePasswordForPmiMeetings: lockedRequirePasswordForPmiMeetings,\n    } = this.scheduleLockedSettings;\n\n    if (requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY) {\n      if (lockedRequirePasswordForPmiMeetings) {\n        processedMeeting._lockRequireMeetingPassword = allowJoinBeforeHost;\n      }\n      if (allowJoinBeforeHost) {\n        processedMeeting._requireMeetingPassword = true;\n      }\n    }\n\n    return processedMeeting;\n  }\n\n  @proxify\n  private async fetchPersonalMeeting(): Promise<MeetingInfoResponse> {\n    const serviceInfo = await this.getMeetingServiceInfo();\n    const personalMeetingId = serviceInfo.externalUserInfo.personalMeetingId;\n    const meetingInfoResponse = await this.getMeeting(personalMeetingId);\n    return meetingInfoResponse;\n  }\n\n  private formatPersonalMeeting(\n    meetingInfo: MeetingInfoResponse,\n  ): RcMMeetingModel {\n    const settings = {\n      ...this.initialMeetingSetting,\n      ...meetingInfo,\n      shortId: meetingInfo.id,\n      usePersonalMeetingId: true,\n    };\n    return {\n      ...settings,\n      _requireMeetingPassword: !!settings.password,\n    };\n  }\n\n  @proxify\n  private async setPersonalMeeting() {\n    try {\n      const meetingInfoResponse = await this.fetchPersonalMeeting();\n      const meeting = this.formatPersonalMeeting(meetingInfoResponse);\n      this.store.dispatch({\n        type: this.actionTypes.updatePersonalMeeting,\n        meeting,\n      });\n    } catch (e) {\n      console.log('failed to get personal meeting id:', e);\n    }\n  }\n\n  @proxify\n  private async setAssistedUsers() {\n    const { records } = await this.getAssistedUsers();\n    this.store.dispatch({\n      type: this.actionTypes.updateAssistedUsers,\n      assistedUsers: records,\n    });\n  }\n\n  @proxify\n  async schedule(\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = true } = {},\n    opener: any,\n  ): Promise<ScheduleMeetingResponse> {\n    if (this.isScheduling) return (this.schedule as any)._promise;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this.schedule as any)._promise = Promise.all([\n        this.postMeeting(formattedMeeting),\n        this.getMeetingServiceInfo(),\n      ]);\n\n      const [resp, serviceInfo] = await (this.schedule as any)._promise;\n      const invitationInfo = await this.getMeetingInvitation(resp.id);\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          id: resp.id,\n          _saved: meeting._saved,\n        },\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        opener,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this._enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this._enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.store.dispatch({\n          type: this.actionTypes.updatePersonalMeeting,\n          meeting: this.formatPersonalMeeting(resp),\n        });\n        if (this._enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling,\n      });\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.schedule as any)._promise;\n    }\n  }\n\n  @proxify\n  async getMeetingServiceInfo(extensionId?: string) {\n    return this._client\n      .account()\n      .extension(extensionId)\n      .meeting()\n      .serviceInfo()\n      .get();\n  }\n\n  @proxify\n  async getMeeting(meetingId: string, { isAlertError = true } = {}) {\n    try {\n      const settings = await this._client\n        .account()\n        .extension()\n        .meeting(meetingId)\n        .get();\n      return {\n        ...settings,\n        _requireMeetingPassword: !!settings.password,\n      };\n    } catch (e) {\n      const error = await e.response.clone().json();\n      console.log(`failed to get meeting info: ${meetingId}, ${e}`);\n      const isMeetingDeleted =\n        error.errorCode === 'CMN-102' &&\n        error.message.indexOf('[meetingId] is not found') > -1;\n      if (isAlertError && isMeetingDeleted) {\n        setTimeout(() => {\n          this._alert.danger({\n            message: meetingStatus.meetingIsDeleted,\n          });\n        }, 50);\n      }\n      return null;\n    }\n  }\n\n  async postMeeting(formattedMeeting: RcMMeetingModel) {\n    return this._client\n      .account()\n      .extension()\n      .meeting()\n      .post(formattedMeeting);\n  }\n\n  @proxify\n  async putMeeting(meetingId: string, formattedMeeting: RcMMeetingModel) {\n    return this._client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .put(formattedMeeting);\n  }\n\n  @proxify\n  async getAssistedUsers(): Promise<MeetingAssistedResponse> {\n    const res = await this._client.service\n      .platform()\n      .get(\n        '/restapi/v1.0/account/~/extension/~/meetings-configuration/assisted',\n      );\n    return res.json();\n  }\n\n  @proxify\n  async getMeetingInvitation(meetingId: string): Promise<RcmInvitationInfo> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n    // only rc brand is supported for now\n    if (this._brand.code !== 'rc') {\n      return null;\n    }\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: `/restapi/v1.0/account/~/extension/~/meeting/${meetingId}/invitation`,\n      });\n      const { invitation } = await apiResponse.json();\n      return {\n        invitation,\n      };\n    } catch (ex) {\n      console.warn(ex);\n      return null;\n    }\n  }\n\n  @proxify\n  async getUserSettings() {\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: '/restapi/v1.0/account/~/extension/~/meeting/user-settings',\n      });\n      const { recording = {}, scheduleMeeting = {} } = await apiResponse.json();\n      return {\n        recording,\n        scheduleMeeting,\n      };\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  }\n\n  @proxify\n  async getLockedSettings() {\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: '/restapi/v1.0/account/~/meeting/locked-settings',\n      });\n      const { recording = {}, scheduleMeeting = {} } = await apiResponse.json();\n      const {\n        startParticipantsVideo,\n        startParticipantVideo,\n        ...restScheduleOptions\n      } = scheduleMeeting;\n      const processedScheduleMeeting = {\n        ...restScheduleOptions,\n        startParticipantsVideo:\n          startParticipantsVideo || startParticipantVideo || false,\n      };\n      return {\n        recording,\n        scheduleMeeting: processedScheduleMeeting,\n      };\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = false } = {},\n    opener,\n  ) {\n    if (this._isUpdating(meetingId)) {\n      return (this.updateMeeting as any)._promise;\n    }\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n        meetingId,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this.updateMeeting as any)._promise = Promise.all([\n        this.putMeeting(meetingId, formattedMeeting),\n        this.getMeetingServiceInfo(),\n      ]);\n\n      const [resp, serviceInfo] = await (this.updateMeeting as any)._promise;\n      const invitationInfo = await this.getMeetingInvitation(meetingId);\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved,\n        },\n        meetingId,\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        opener,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this._enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this._enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.store.dispatch({\n          type: this.actionTypes.updatePersonalMeeting,\n          meeting: this.formatPersonalMeeting(resp),\n        });\n        if (this._enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n        meetingId,\n      });\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.updateMeeting as any)._promise;\n    }\n  }\n\n  async _createDialingNumberTpl(\n    serviceInfo: any,\n    resp: any,\n    opener: any,\n    invitationInfo: RcmInvitationInfo,\n  ) {\n    serviceInfo.mobileDialingNumberTpl = getMobileDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n      resp.id,\n    );\n    serviceInfo.phoneDialingNumberTpl = getPhoneDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n    );\n    const result = {\n      meeting: resp,\n      serviceInfo,\n      extensionInfo: this.extensionInfo,\n      invitationInfo,\n    };\n\n    if (typeof this.scheduledHook === 'function') {\n      await this.scheduledHook(result, opener);\n    }\n    return result;\n  }\n\n  async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !(await this._availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._alert.danger({ message: meetingStatus.internalError });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  /**\n   * @param {number} meetingId\n   */\n  _isUpdating(meetingId: string) {\n    return (\n      this.state.updatingStatus &&\n      find((obj: any) => obj.meetingId === meetingId, this.state.updatingStatus)\n    );\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting: RcMMeetingModel): RcMMeetingModel {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n      recurrence,\n      usePersonalMeetingId,\n      _requireMeetingPassword,\n      host,\n    } = meeting;\n    const formatted = {\n      host,\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password: _requireMeetingPassword ? password : '',\n      recurrence,\n      usePersonalMeetingId,\n    } as RcMMeetingModel;\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule: MeetingScheduleResource = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: { id: UTC_TIMEZONE_ID },\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n\n      if (recurrence && recurrence.until) {\n        formatted.recurrence.until = moment.utc(recurrence.until).format();\n      }\n    }\n\n    // Schedule For\n    if (this._enableScheduleFor) {\n      formatted.host = {\n        id:\n          (this.scheduleForUser && this.scheduleForUser.id) ||\n          (host && host.id),\n      };\n    }\n\n    // For PMI\n    formatted.meetingType =\n      formatted.meetingType === MeetingType.PMI\n        ? MeetingType.SCHEDULED\n        : formatted.meetingType;\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const { topic, password, schedule, _requireMeetingPassword } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  saveAsDefaultSetting(meeting) {\n    const formattedMeeting = this._format(meeting);\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: {\n        ...formattedMeeting,\n        _saved: meeting.notShowAgain,\n      },\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    if (!isSecret) {\n      return true;\n    }\n    if (password && RCM_PASSWORD_REGEX.test(password)) {\n      return true;\n    }\n    return false;\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get isUpdating() {\n    return this.meeting && this.meeting.id && this._isUpdating(this.meeting.id);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get preferences() {\n    return this.state.preferences;\n  }\n\n  @computed(({ _enableServiceWebSettings, scheduleUserSettings }: Meeting) => [\n    _enableServiceWebSettings,\n    scheduleUserSettings,\n  ])\n  get commonUserSettings() {\n    if (!this._enableServiceWebSettings) {\n      return {};\n    }\n    return pick(COMMON_SETTINGS, this.scheduleUserSettings);\n  }\n\n  @computed(({ _enablePersonalMeeting, personalMeeting }: Meeting) => [\n    _enablePersonalMeeting,\n    personalMeeting,\n  ])\n  get commonPersonalMeetingSettings() {\n    if (!this._enablePersonalMeeting) {\n      return {};\n    }\n    return pick([...COMMON_SETTINGS, 'password'], this.personalMeeting);\n  }\n\n  @computed(\n    ({ _enableServiceWebSettings, scheduleLockedSettings }: Meeting) => [\n      _enableServiceWebSettings,\n      scheduleLockedSettings,\n    ],\n  )\n  get defaultLockedSettings() {\n    if (!this._enableServiceWebSettings) {\n      return {};\n    }\n    return {\n      _lockSettings: pick(COMMON_SETTINGS, this.scheduleLockedSettings),\n    };\n  }\n\n  @computed<Meeting>(\n    ({\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n    }) => [\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n    ],\n  )\n  get pmiDefaultSettings() {\n    if (!this._enableServiceWebSettings) {\n      return this.personalMeeting;\n    }\n    return this._initDefaultData(\n      {\n        ...this.initialMeetingSetting,\n        ...this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      true,\n    );\n  }\n\n  @computed<Meeting>(\n    ({\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n      savedDefaultMeetingSetting,\n      lastMeetingSetting,\n    }) => [\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n      savedDefaultMeetingSetting,\n      lastMeetingSetting,\n    ],\n  )\n  get generalDefaultSettings() {\n    if (!this._enableServiceWebSettings) {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return {\n        ...this.initialMeetingSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n    }\n    return this._initDefaultData(\n      {\n        ...this.initialMeetingSetting,\n        ...this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      false,\n    );\n  }\n\n  @selector\n  defaultMeetingSetting: any = [\n    () => this.initialMeetingSetting,\n    () => this.usePmiDefaultFromSW,\n    () => this.userSettings,\n    () => this.pmiDefaultSettings,\n    () => this.generalDefaultSettings,\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return savedSetting;\n    },\n    (\n      initialSetting: RcMMeetingModel,\n      usePmi: boolean,\n      userSettings: Partial<RcMMeetingModel>,\n      pmiDefaultSettings: Partial<RcMMeetingModel>,\n      generalDefaultSettings: Partial<RcMMeetingModel>,\n      savedSetting: Partial<RcMMeetingModel>,\n    ) => {\n      if (this._enableServiceWebSettings) {\n        if (!isEmpty(userSettings)) {\n          return usePmi ? pmiDefaultSettings : generalDefaultSettings;\n        }\n        return initialSetting;\n      }\n      return {\n        ...initialSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n    },\n  ];\n\n  @selector\n  initialMeetingSetting: any = [\n    () => this._extensionInfo.info.name || '',\n    () => getInitializedStartTime(),\n    () => `${this._extensionInfo.info.id}` || '',\n    () => `${this.scheduleForUser?.name || ''}`,\n    (\n      extensionName: string,\n      startTime: string,\n      extensionId: string,\n      scheduleForName: string,\n    ): RcMMeetingModel => {\n      const meetingName =\n        scheduleForName && scheduleForName !== ASSISTED_USERS_MYSELF\n          ? scheduleForName\n          : extensionName;\n      const setting = getDefaultMeetingSettings(\n        meetingName,\n        startTime,\n        extensionId,\n      );\n      if (!this._enableServiceWebSettings) {\n        return setting;\n      }\n      return {\n        ...setting,\n        ...DEFAULT_LOCK_SETTINGS,\n        _pmiPassword: '',\n      };\n    },\n  ];\n\n  @computed(\n    ({\n      _enablePersonalMeeting,\n      _enableServiceWebSettings,\n      scheduleUserSettings,\n    }: Meeting) => [\n      _enablePersonalMeeting,\n      _enableServiceWebSettings,\n      scheduleUserSettings,\n    ],\n  )\n  get usePmiDefaultFromSW() {\n    return (\n      this._enablePersonalMeeting &&\n      this._enableServiceWebSettings &&\n      this.scheduleUserSettings.usePmiForScheduledMeetings\n    );\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get recordingUserSettings() {\n    const { recording = {} } = this.userSettings;\n    return recording;\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get scheduleUserSettings() {\n    const { scheduleMeeting = {} } = this.userSettings;\n    return scheduleMeeting;\n  }\n\n  @computed(({ lockedSettings }: Meeting) => [lockedSettings])\n  get recordingLockedSettings() {\n    const { recording = {} } = this.lockedSettings;\n    return recording;\n  }\n\n  @computed(({ lockedSettings }: Meeting) => [lockedSettings])\n  get scheduleLockedSettings() {\n    const { scheduleMeeting = {} } = this.lockedSettings;\n    return scheduleMeeting;\n  }\n\n  get savedDefaultMeetingSetting() {\n    return this._storage.getItem(this._defaultMeetingSettingKey);\n  }\n\n  get lastMeetingSetting() {\n    return this._storage.getItem(this._lastMeetingSettingKey);\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault;\n  }\n\n  get isPreferencesChanged() {\n    return this.state.isPreferencesChanged;\n  }\n\n  @computed(({ state }: Meeting) => [state.userSettings])\n  get userSettings() {\n    return this.state.userSettings || {};\n  }\n\n  @computed(({ state }: Meeting) => [state.lockedSettings])\n  get lockedSettings() {\n    return this.state.lockedSettings || {};\n  }\n\n  get personalMeeting() {\n    return this._storage.getItem(this._personalMeetingKey);\n  }\n\n  @computed(({ state, selfUser }: Meeting) => [state, selfUser])\n  get assistedUsers(): MeetingAssistedUser[] {\n    if (this.state.assistedUsers.length === 0) {\n      return [];\n    }\n    return [this.selfUser, ...this.state.assistedUsers];\n  }\n\n  @computed(({ extensionInfo }: Meeting) => [extensionInfo])\n  get selfUser() {\n    const myself: MeetingAssistedUser = {\n      id: `${this.extensionInfo.id}`,\n      name: ASSISTED_USERS_MYSELF,\n    };\n    return myself;\n  }\n\n  @computed(({ state }: Meeting) => [state])\n  get scheduleForUser() {\n    return this.state.scheduleForUser;\n  }\n}\n"],"file":"meeting.js"}