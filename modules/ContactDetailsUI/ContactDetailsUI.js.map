{"version":3,"sources":["modules/ContactDetailsUI/ContactDetailsUI.ts"],"names":["DEFAULT_DIALER_ROUTE","DEFAULT_COMPOSETEXT_ROUTE","ContactDetailsUI","name","deps","dep","optional","routerInteraction","contactSearch","contacts","rolesAndPermissions","rateLimiter","regionSettings","connectivityManager","call","dialerUI","composeText","brand","locale","callingSettings","composeTextRoute","dialerRoute","options","_routerInteraction","_contactSearch","_contacts","_rolesAndPermissions","_rateLimiter","_regionSettings","_connectivityManager","_call","_dialerUI","_composeText","_brand","_locale","_callingSettings","_composeTextRoute","_dialerRoute","id","type","direct","contact","find","push","getProfileImage","getPresence","phoneNumber","recipient","isIdle","store","dispatch","actionTypes","clickToCall","addToNumber","typingToNumber","cleanTypingToNumber","clickToSMS","params","contactId","contactType","currentLocale","getContact","isClickToDialEnabled","callingEnabled","isCallButtonDisabled","isOfflineMode","isWebphoneUnavailableMode","isWebphoneInitializing","throttling","isClickToTextEnabled","disableLinks","isVoipOnlyMode","showSpinner","ready","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","formatNumber","cleanedNumber","toString","isE164Number","formatedNumber","countryCode","onBackClick","goBack","onClickToDial","handleClickToDial","onClickToSMS","handleClickToSMS","RcUIModule","proxify"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport { createEnum } from 'ringcentral-integration/lib/Enum';\nimport {\n  isE164,\n  parseIncompletePhoneNumber,\n} from '@ringcentral-integration/phone-number';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport { ContactModel } from 'ringcentral-integration/models/Contact.model';\nimport RcUIModule from '../../lib/RcUIModule';\nimport {\n  ContactDetailsViewProps,\n  ContactDetailsViewFunctionProps,\n} from '../../components/ContactDetailsView/ContactDetailsView.interface';\n\nconst DEFAULT_DIALER_ROUTE = '/dialer';\nconst DEFAULT_COMPOSETEXT_ROUTE = '/composeText';\n\n@Module({\n  name: 'ContactDetailsUI',\n  deps: [\n    'RouterInteraction',\n    'ContactSearch',\n    'Contacts',\n    'RolesAndPermissions',\n    'RateLimiter',\n    'RegionSettings',\n    'ConnectivityManager',\n    'Call',\n    'DialerUI',\n    'ComposeText',\n    'Brand',\n    'Locale',\n    'CallingSettings',\n    {\n      dep: 'ContactDetailsUIOptions',\n      optional: true,\n    },\n  ],\n})\nexport class ContactDetailsUI extends RcUIModule {\n  // for track\n  constructor({\n    routerInteraction,\n    contactSearch,\n    contacts,\n    rolesAndPermissions,\n    rateLimiter,\n    regionSettings,\n    connectivityManager,\n    call,\n    dialerUI,\n    composeText,\n    brand,\n    locale,\n    callingSettings,\n    composeTextRoute = DEFAULT_COMPOSETEXT_ROUTE,\n    dialerRoute = DEFAULT_DIALER_ROUTE,\n    ...options\n  }) {\n    super({\n      routerInteraction,\n      contactSearch,\n      contacts,\n      rolesAndPermissions,\n      rateLimiter,\n      regionSettings,\n      connectivityManager,\n      call,\n      dialerUI,\n      composeText,\n      brand,\n      locale,\n      callingSettings,\n      ...options,\n    });\n    this._routerInteraction = routerInteraction;\n    this._contactSearch = contactSearch;\n    this._contacts = contacts;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._rateLimiter = rateLimiter;\n    this._regionSettings = regionSettings;\n    this._connectivityManager = connectivityManager;\n    this._call = call;\n    this._dialerUI = dialerUI;\n    this._composeText = composeText;\n    this._brand = brand;\n    this._locale = locale;\n    this._callingSettings = callingSettings;\n    this._composeTextRoute = composeTextRoute;\n    this._dialerRoute = dialerRoute;\n  }\n\n  get _actionTypes() {\n    return createEnum(\n      [\n        //\n        'clickToSMS',\n        'clickToCall',\n      ],\n      'contactDetails',\n    );\n  }\n\n  @proxify\n  showContactDetails({ id, type, direct = false }) {\n    const contact = this._contacts.find({ id, type });\n    if (contact) {\n      this._routerInteraction.push(\n        `/contacts/${type}/${id}${direct ? '?direct=true' : ''}`,\n      );\n      this._contacts.getProfileImage(contact, false);\n      this._contacts.getPresence(contact, false);\n    }\n  }\n\n  getContact({ id, type }): ContactModel {\n    return this._contacts.find({ id, type });\n  }\n\n  @proxify\n  async handleClickToDial(contact, phoneNumber) {\n    const recipient = {\n      ...contact,\n      phoneNumber,\n    };\n    if (this._call.isIdle) {\n      this._routerInteraction.push(this._dialerRoute);\n      this._dialerUI.call({ recipient });\n      this.store.dispatch({\n        type: this.actionTypes.clickToCall,\n      });\n    }\n  }\n\n  @proxify\n  async handleClickToSMS(contact, phoneNumber) {\n    const recipient = {\n      ...contact,\n      phoneNumber,\n    };\n    if (this._routerInteraction) {\n      this._routerInteraction.push(this._composeTextRoute);\n    }\n\n    this._composeText.addToNumber(recipient);\n    if (this._composeText.typingToNumber === recipient.phoneNumber) {\n      this._composeText.cleanTypingToNumber();\n    }\n    // for tracking\n    this.store.dispatch({\n      type: this.actionTypes.clickToSMS,\n    });\n  }\n\n  getUIProps({ params: { contactId, contactType } }): ContactDetailsViewProps {\n    return {\n      currentLocale: this._locale.currentLocale,\n      contact: this.getContact({\n        id: contactId,\n        type: contactType,\n      }),\n      isClickToDialEnabled: !!(\n        this._dialerUI && this._rolesAndPermissions.callingEnabled\n      ),\n      isCallButtonDisabled: !!(\n        this._connectivityManager.isOfflineMode ||\n        this._connectivityManager.isWebphoneUnavailableMode ||\n        this._connectivityManager.isWebphoneInitializing ||\n        this._rateLimiter.throttling\n      ),\n      isClickToTextEnabled: !!this._composeText,\n      disableLinks: !!(\n        this._connectivityManager.isOfflineMode ||\n        this._connectivityManager.isVoipOnlyMode ||\n        this._rateLimiter.throttling\n      ),\n      showSpinner: !(\n        this._locale.ready &&\n        this._contactSearch.ready &&\n        this._rolesAndPermissions.ready\n      ),\n      outboundSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.InternalSMS\n      ),\n    };\n  }\n\n  getUIFunctions(): ContactDetailsViewFunctionProps {\n    return {\n      formatNumber: (phoneNumber: string) => {\n        // if the cleaned phone number is not a E164 format\n        // we will show it directly, doesn't format it.\n        const cleanedNumber: string = parseIncompletePhoneNumber(\n          phoneNumber.toString(),\n        );\n        const isE164Number = isE164(cleanedNumber);\n        if (isE164Number) {\n          const formatedNumber: string = formatNumber({\n            phoneNumber,\n            countryCode: this._regionSettings.countryCode,\n          });\n          return formatedNumber;\n        }\n        return phoneNumber;\n      },\n      onBackClick: () => {\n        this._routerInteraction.goBack();\n      },\n      onClickToDial: (contact: ContactModel, phoneNumber: string) =>\n        this.handleClickToDial(contact, phoneNumber),\n      onClickToSMS: (contact: ContactModel, phoneNumber: string) =>\n        this.handleClickToSMS(contact, phoneNumber),\n    };\n  }\n}\n"],"file":"ContactDetailsUI.js"}