{"version":3,"sources":["modules/EvCallDisposition/EvCallDisposition.ts"],"names":["EvCallDisposition","name","deps","dep","optional","evCallMonitor","evCallHistory","contactMatcher","activityMatcher","storage","evClient","enableCache","modules","storageKey","_modules","addCallRingHook","calls","call","outdialDispositions","disposition","dispositions","find","isDefault","id","getCallId","session","changeDisposition","dispositionId","notes","data","state","callsMapping","disposed","dispositionStateMapping","callDisposition","isDisposed","dispositionCall","uii","dispId","changeDispositionState","RcModuleV2","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBMA,iB,WAZL,gBAAO;AACNC,EAAAA,IAAI,EAAE,mBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,SADI,EAEJ,eAFI,EAGJ,eAHI,EAIJ,UAJI,EAKJ;AAAEC,IAAAA,GAAG,EAAE,gBAAP;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GALI,EAMJ;AAAED,IAAAA,GAAG,EAAE,iBAAP;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GANI,EAOJ;AAAED,IAAAA,GAAG,EAAE,0BAAP;AAAmCC,IAAAA,QAAQ,EAAE;AAA7C,GAPI;AAFA,CAAP,C;;;;;AAcC,mCAQG;AAAA;;AAAA,QAPDC,aAOC,QAPDA,aAOC;AAAA,QANDC,aAMC,QANDA,aAMC;AAAA,QALDC,cAKC,QALDA,cAKC;AAAA,QAJDC,eAIC,QAJDA,eAIC;AAAA,QAHDC,OAGC,QAHDA,OAGC;AAAA,QAFDC,QAEC,QAFDA,QAEC;AAAA,gCADDC,WACC;AAAA,QADDA,WACC,iCADa,IACb;;AAAA;;AACD,8BAAM;AACJC,MAAAA,OAAO,EAAE;AACPH,QAAAA,OAAO,EAAPA,OADO;AAEPJ,QAAAA,aAAa,EAAbA,aAFO;AAGPC,QAAAA,aAAa,EAAbA,aAHO;AAIPC,QAAAA,cAAc,EAAdA,cAJO;AAKPC,QAAAA,eAAe,EAAfA,eALO;AAMPE,QAAAA,QAAQ,EAARA;AANO,OADL;AASJC,MAAAA,WAAW,EAAXA,WATI;AAUJE,MAAAA,UAAU,EAAE;AAVR,KAAN,EADC,CAaD;;AAbC;;AAAA;;AAcD,UAAKC,QAAL,CAAcT,aAAd,CAA4BU,eAA5B,CAA4C,YAAM;AAAA,iDACjC,MAAKD,QAAL,CAAcT,aAAd,CAA4BW,KADK;AAAA,UACzCC,IADyC;;AAEhD,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,mBAAV,EAA+B;AAC7B,YAAMC,WAAW,GAAGF,IAAI,CAACC,mBAAL,CAAyBE,YAAzB,CAAsCC,IAAtC,CAClB;AAAA,cAAGC,SAAH,SAAGA,SAAH;AAAA,iBAAmBA,SAAnB;AAAA,SADkB,CAApB;;AAGA,YAAMC,EAAE,GAAG,MAAKT,QAAL,CAAcT,aAAd,CAA4BmB,SAA5B,CAAsCP,IAAI,CAACQ,OAA3C,CAAX;;AACA,cAAKC,iBAAL,CAAuBH,EAAvB,EAA2B;AACzBI,UAAAA,aAAa,EAAER,WAAW,GAAGA,WAAW,CAACQ,aAAf,GAA+B,IADhC;AAEzBC,UAAAA,KAAK,EAAE;AAFkB,SAA3B;AAID;AACF,KAZD;;AAdC;AA2BF;;;;sCAWiBL,E,EAAIM,I,EAAM;AAC1B,WAAKC,KAAL,CAAWC,YAAX,CAAwBR,EAAxB,IAA8BM,IAA9B;AACD;;;sCAGiBN,E,EAAI;AACpB,aAAO,KAAKO,KAAL,CAAWC,YAAX,CAAwBR,EAAxB,CAAP;AACD;;;2CAGsBA,E,EAAIS,Q,EAAU;AACnC,WAAKF,KAAL,CAAWG,uBAAX,CAAmCV,EAAnC,IAAyC;AAAES,QAAAA,QAAQ,EAARA;AAAF,OAAzC;AACD;;;gCAEWT,E,EAAY;AACtB,UAAMN,IAAI,GAAG,KAAKH,QAAL,CAAcR,aAAd,CAA4ByB,YAA5B,CAAyCR,EAAzC,CAAb;AACA,UAAMW,eAAe,GAAG,KAAKH,YAAL,CAAkBR,EAAlB,CAAxB;AACA,UAAMY,UAAU,GACd,KAAKF,uBAAL,CAA6BV,EAA7B,KACA,KAAKU,uBAAL,CAA6BV,EAA7B,EAAiCS,QAFnC;AAGA,UAAI,CAACf,IAAI,CAACC,mBAAN,IAA6BiB,UAAjC,EAA6C;;AAC7C,WAAKrB,QAAL,CAAcJ,QAAd,CAAuB0B,eAAvB,CAAuC;AACrCC,QAAAA,GAAG,EAAEpB,IAAI,CAACoB,GAD2B;AAErCC,QAAAA,MAAM,EAAEJ,eAAe,CAACP,aAFa;AAGrCC,QAAAA,KAAK,EAAEM,eAAe,CAACN;AAHc,OAAvC;;AAKA,WAAKW,sBAAL,CAA4BhB,EAA5B,EAAgC;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAAhC;AACD;;;;EA3E6BQ,gB,wFAuC7B/B,a,EACAqB,W;;;;;WACwC,E;;4FAExCrB,a,EACAqB,W;;;;;WACoD,E;;uEAEpDW,Y,mKAKAA,Y,wKAKAA,Y","sourcesContent":["import {\n  action,\n  RcModuleV2,\n  state,\n  storage,\n  RcModuleState,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport {\n  CallDisposition,\n  DepsModules,\n  State,\n  EvDispositionStateMapping,\n  EvCallDispositionMapping,\n} from './EvCallDisposition.interface';\n\ntype EvCallDispositionState = RcModuleState<EvCallDisposition, State>;\n\n@Module({\n  name: 'EvCallDisposition',\n  deps: [\n    'Storage',\n    'EvCallMonitor',\n    'EvCallHistory',\n    'EvClient',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'ActivityMatcher', optional: true },\n    { dep: 'EvCallDispositionOptions', optional: true },\n  ],\n})\nclass EvCallDisposition extends RcModuleV2<DepsModules, EvCallDispositionState>\n  implements CallDisposition {\n  constructor({\n    evCallMonitor,\n    evCallHistory,\n    contactMatcher,\n    activityMatcher,\n    storage,\n    evClient,\n    enableCache = true,\n  }) {\n    super({\n      modules: {\n        storage,\n        evCallMonitor,\n        evCallHistory,\n        contactMatcher,\n        activityMatcher,\n        evClient,\n      },\n      enableCache,\n      storageKey: 'EvCallDisposition',\n    });\n    // TODO: when init need check, if still have call calling\n    this._modules.evCallMonitor.addCallRingHook(() => {\n      const [call] = this._modules.evCallMonitor.calls;\n      if (call?.outdialDispositions) {\n        const disposition = call.outdialDispositions.dispositions.find(\n          ({ isDefault }) => isDefault,\n        );\n        const id = this._modules.evCallMonitor.getCallId(call.session);\n        this.changeDisposition(id, {\n          dispositionId: disposition ? disposition.dispositionId : null,\n          notes: '',\n        });\n      }\n    });\n  }\n\n  @storage\n  @state\n  callsMapping: EvCallDispositionMapping = {};\n\n  @storage\n  @state\n  dispositionStateMapping: EvDispositionStateMapping = {};\n\n  @action\n  changeDisposition(id, data) {\n    this.state.callsMapping[id] = data;\n  }\n\n  @action\n  removeDisposition(id) {\n    delete this.state.callsMapping[id];\n  }\n\n  @action\n  changeDispositionState(id, disposed) {\n    this.state.dispositionStateMapping[id] = { disposed };\n  }\n\n  disposeCall(id: string) {\n    const call = this._modules.evCallHistory.callsMapping[id];\n    const callDisposition = this.callsMapping[id];\n    const isDisposed =\n      this.dispositionStateMapping[id] &&\n      this.dispositionStateMapping[id].disposed;\n    if (!call.outdialDispositions || isDisposed) return;\n    this._modules.evClient.dispositionCall({\n      uii: call.uii,\n      dispId: callDisposition.dispositionId,\n      notes: callDisposition.notes,\n    });\n    this.changeDispositionState(id, { disposed: true });\n  }\n}\n\nexport { EvCallDisposition };\n"],"file":"EvCallDisposition.js"}