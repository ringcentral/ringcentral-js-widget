{"version":3,"sources":["modules/CallHistoryUI/index.ts"],"names":["CallHistoryUI","name","deps","dep","optional","phone","brand","call","callHistory","callLogger","composeText","connectivityManager","connectivityMonitor","dateTimeFormat","locale","rateLimiter","regionSettings","rolesAndPermissions","enableContactFallback","useNewList","fullName","title","i18n","getString","currentLocale","calls","latestCalls","areaCode","countryCode","disableLinks","isOfflineMode","isVoipOnlyMode","throttling","disableCallButton","isWebphoneUnavailableMode","isWebphoneInitializing","disableClickToDial","isIdle","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","loggingMap","showSpinner","ready","autoLog","contactMatcher","dialerUI","contactDetailsUI","routerInteraction","contactSearch","onCreateContact","dateTimeFormatter","formatDateTime","bind","onLogCall","isLoggedContact","dialerRoute","composeTextRoute","onViewContact","contact","type","id","showContactDetails","direct","phoneNumber","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","undefined","onClickToDial","callingEnabled","recipient","push","onClickToCall","onClickToSms","isDummyContact","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","onClickToSMS","redirect","logCall","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport RcUIModule from '../../lib/RcUIModule';\nimport i18n from './i18n';\n\n@Module({\n  name: 'CallHistoryUI',\n  deps: [\n    'Locale',\n    'Brand',\n    'CallHistory',\n    'RegionSettings',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    'DateTimeFormat',\n    'RolesAndPermissions',\n    { dep: 'CallLogger', optional: true },\n    { dep: 'Call', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'DialerUI', optional: true },\n    { dep: 'ContactDetailsUI', optional: true },\n    'ContactMatcher',\n    'RouterInteraction',\n    'ContactSearch',\n    'ConnectivityManager',\n  ],\n})\nexport default class CallHistoryUI extends RcUIModule {\n  getUIProps({\n    phone: {\n      brand,\n      call,\n      callHistory,\n      callLogger,\n      composeText,\n      connectivityManager,\n      connectivityMonitor,\n      dateTimeFormat,\n      locale,\n      rateLimiter,\n      regionSettings,\n      rolesAndPermissions,\n    },\n    enableContactFallback = false,\n    useNewList = false,\n  }) {\n    return {\n      enableContactFallback,\n      brand: brand.fullName,\n      title: i18n.getString('title', locale.currentLocale),\n      currentLocale: locale.currentLocale,\n      calls: callHistory.latestCalls,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n      disableLinks:\n        connectivityManager.isOfflineMode ||\n        connectivityManager.isVoipOnlyMode ||\n        rateLimiter.throttling,\n      disableCallButton:\n        connectivityManager.isOfflineMode ||\n        connectivityManager.isWebphoneUnavailableMode ||\n        connectivityManager.isWebphoneInitializing ||\n        rateLimiter.throttling,\n      disableClickToDial: !(call && call.isIdle),\n      outboundSmsPermission: !!(\n        rolesAndPermissions.permissions &&\n        rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        rolesAndPermissions.permissions &&\n        rolesAndPermissions.permissions.InternalSMS\n      ),\n      loggingMap: callLogger && callLogger.loggingMap,\n      showSpinner: !(\n        callHistory.ready &&\n        locale.ready &&\n        regionSettings.ready &&\n        dateTimeFormat.ready &&\n        connectivityMonitor.ready &&\n        rolesAndPermissions.ready &&\n        (!call || call.ready) &&\n        (!composeText || composeText.ready) &&\n        (!callLogger || callLogger.ready)\n      ),\n      autoLog: !!(callLogger && callLogger.autoLog),\n      useNewList,\n    };\n  }\n\n  getUIFunctions({\n    phone: {\n      dateTimeFormat,\n      callLogger,\n      contactMatcher,\n      call,\n      dialerUI,\n      contactDetailsUI,\n      composeText,\n      routerInteraction,\n      contactSearch,\n      callHistory,\n      rolesAndPermissions,\n    },\n    onCreateContact,\n    dateTimeFormatter = dateTimeFormat.formatDateTime.bind(dateTimeFormat),\n    onLogCall,\n    isLoggedContact,\n    dialerRoute = '/dialer',\n    composeTextRoute = '/composeText',\n    onViewContact,\n  }) {\n    return {\n      dateTimeFormatter,\n      onViewContact:\n        onViewContact ||\n        (({ contact: { type, id } }) => {\n          if (contactDetailsUI) {\n            contactDetailsUI.showContactDetails({\n              type,\n              id,\n              direct: true,\n            });\n          }\n        }),\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }) => {\n            const hasMatchNumber = await contactMatcher.hasMatchNumber({\n              phoneNumber,\n              ignoreCache: true,\n            });\n\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      onClickToDial:\n        dialerUI && rolesAndPermissions.callingEnabled\n          ? (recipient) => {\n              if (call.isIdle) {\n                routerInteraction.push(dialerRoute);\n                dialerUI.call({ recipient });\n                callHistory.onClickToCall();\n              }\n            }\n          : undefined,\n      onClickToSms: composeText\n        ? async (contact, isDummyContact = false) => {\n            if (routerInteraction) {\n              routerInteraction.push(composeTextRoute);\n            }\n            // if contact autocomplete, if no match fill the number only\n            if (contact.name && contact.phoneNumber && isDummyContact) {\n              composeText.updateTypingToNumber(contact.name);\n              contactSearch.search({ searchString: contact.name });\n            } else {\n              composeText.addToNumber(contact);\n              if (composeText.typingToNumber === contact.phoneNumber) {\n                composeText.cleanTypingToNumber();\n              }\n            }\n            callHistory.onClickToSMS();\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (callLogger &&\n          (async ({ call, contact, redirect = true }) => {\n            await callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n    };\n  }\n}\n"],"file":"index.js"}