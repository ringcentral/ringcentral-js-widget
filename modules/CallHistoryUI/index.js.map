{"version":3,"sources":["modules/CallHistoryUI/index.ts"],"names":["CallHistoryUI","name","deps","dep","optional","phone","locale","brand","callHistory","regionSettings","connectivityMonitor","rateLimiter","dateTimeFormat","callLogger","call","composeText","rolesAndPermissions","connectivityManager","enableContactFallback","useNewList","fullName","title","i18n","getString","currentLocale","calls","latestCalls","areaCode","countryCode","disableLinks","isOfflineMode","isVoipOnlyMode","throttling","disableCallButton","isWebphoneUnavailableMode","isWebphoneInitializing","disableClickToDial","isIdle","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","loggingMap","showSpinner","ready","autoLog","contactMatcher","dialerUI","routerInteraction","contactSearch","onCreateContact","dateTimeFormatter","formatDateTime","bind","onLogCall","isLoggedContact","dialerRoute","composeTextRoute","onViewContact","contact","type","id","push","phoneNumber","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","undefined","onClickToDial","callingEnabled","recipient","onClickToCall","onClickToSms","isDummyContact","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","onClickToSMS","redirect","logCall","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport RcUIModule from '../../lib/RcUIModule';\nimport i18n from './i18n';\n\n@Module({\n  name: 'CallHistoryUI',\n  deps: [\n    'Locale',\n    'Brand',\n    'CallHistory',\n    'RegionSettings',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    'DateTimeFormat',\n    'RolesAndPermissions',\n    { dep: 'CallLogger', optional: true },\n    { dep: 'Call', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'DialerUI', optional: true },\n    'ContactMatcher',\n    'RouterInteraction',\n    'ContactSearch',\n    'ConnectivityManager',\n  ],\n})\nexport default class CallHistoryUI extends RcUIModule {\n  getUIProps({\n    phone: {\n      locale,\n      brand,\n      callHistory,\n      regionSettings,\n      connectivityMonitor,\n      rateLimiter,\n      dateTimeFormat,\n      callLogger,\n      call,\n      composeText,\n      rolesAndPermissions,\n      connectivityManager,\n    },\n    enableContactFallback = false,\n    useNewList = false,\n  }) {\n    return {\n      enableContactFallback,\n      brand: brand.fullName,\n      title: i18n.getString('title', locale.currentLocale),\n      currentLocale: locale.currentLocale,\n      calls: callHistory.latestCalls,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n      disableLinks:\n        connectivityManager.isOfflineMode ||\n        connectivityManager.isVoipOnlyMode ||\n        rateLimiter.throttling,\n      disableCallButton:\n        connectivityManager.isOfflineMode ||\n        connectivityManager.isWebphoneUnavailableMode ||\n        connectivityManager.isWebphoneInitializing ||\n        rateLimiter.throttling,\n      disableClickToDial: !(call && call.isIdle),\n      outboundSmsPermission: !!(\n        rolesAndPermissions.permissions &&\n        rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        rolesAndPermissions.permissions &&\n        rolesAndPermissions.permissions.InternalSMS\n      ),\n      loggingMap: callLogger && callLogger.loggingMap,\n      showSpinner: !(\n        callHistory.ready &&\n        locale.ready &&\n        regionSettings.ready &&\n        dateTimeFormat.ready &&\n        connectivityMonitor.ready &&\n        rolesAndPermissions.ready &&\n        (!call || call.ready) &&\n        (!composeText || composeText.ready) &&\n        (!callLogger || callLogger.ready)\n      ),\n      autoLog: !!(callLogger && callLogger.autoLog),\n      useNewList,\n    };\n  }\n\n  getUIFunctions({\n    phone: {\n      dateTimeFormat,\n      callLogger,\n      contactMatcher,\n      call,\n      dialerUI,\n      composeText,\n      routerInteraction,\n      contactSearch,\n      callHistory,\n      rolesAndPermissions,\n    },\n    onCreateContact,\n    dateTimeFormatter = dateTimeFormat.formatDateTime.bind(dateTimeFormat),\n    onLogCall,\n    isLoggedContact,\n    dialerRoute = '/dialer',\n    composeTextRoute = '/composeText',\n    onViewContact,\n  }) {\n    return {\n      dateTimeFormatter,\n      onViewContact:\n        onViewContact ||\n        (({ contact: { type, id } }) => {\n          routerInteraction.push(`/contacts/${type}/${id}?direct=true`);\n        }),\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }) => {\n            const hasMatchNumber = await contactMatcher.hasMatchNumber({\n              phoneNumber,\n              ignoreCache: true,\n            });\n\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      onClickToDial:\n        dialerUI && rolesAndPermissions.callingEnabled\n          ? (recipient) => {\n              if (call.isIdle) {\n                routerInteraction.push(dialerRoute);\n                dialerUI.call({ recipient });\n                callHistory.onClickToCall();\n              }\n            }\n          : undefined,\n      onClickToSms: composeText\n        ? async (contact, isDummyContact = false) => {\n            if (routerInteraction) {\n              routerInteraction.push(composeTextRoute);\n            }\n            // if contact autocomplete, if no match fill the number only\n            if (contact.name && contact.phoneNumber && isDummyContact) {\n              composeText.updateTypingToNumber(contact.name);\n              contactSearch.search({ searchString: contact.name });\n            } else {\n              composeText.addToNumber(contact);\n              if (composeText.typingToNumber === contact.phoneNumber) {\n                composeText.cleanTypingToNumber();\n              }\n            }\n            callHistory.onClickToSMS();\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (callLogger &&\n          (async ({ call, contact, redirect = true }) => {\n            await callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n    };\n  }\n}\n"],"file":"index.js"}