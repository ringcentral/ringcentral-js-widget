{"version":3,"sources":["modules/WebphoneV2/Webphone.ts"],"names":["INCOMING_CALL_INVALID_STATE_ERROR_CODE","Webphone","name","deps","sessions","activeSessionId","ringSessionId","ringSessions","_activeWebphoneActiveCallKey","_permissionCheck","prefix","_deps","webphoneOptions","permissionCheck","onCallEnd","_eventEmitter","on","EVENTS","callEnd","onCallRing","callRing","onCallStart","callStart","onCallResume","callResume","onCallHold","callHold","onCallInit","callInit","onBeforeCallResume","beforeCallResume","onBeforeCallEnd","beforeCallEnd","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","contactMatcher","addQuerySource","getQueriesFn","sessionPhoneNumbers","readyCheckFn","ready","cachedSessions","filter","x","cached","forEach","cachedSession","session","find","id","removed","push","sort","sortByLastActiveTimeDesc","sessionId","activeSessions","startTime","isToVoicemail","isForwarded","isReplied","lastSessions","concat","lastEndedSessions","slice","cachingSessionIds","needUpdate","callStatus","sessionStatus","onHold","isOnHold","e","key","_holdOtherSession","newValue","incomingResponse","__rc_callStatus","finished","console","log","connected","headers","_onCallStart","__rc_extendedControls","__rc_extendedControlStatus","extendedControlStatus","pending","_playExtendedControls","connecting","_updateSessions","_onCallEnd","response","cause","newSession","replaced","__rc_direction","callDirections","inbound","_onAccepted","__rc_isOnMute","onMute","sessionDescriptionHandler","audioSettings","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","playing","controls","i","len","length","_sendDTMF","stopped","sipSession","originalSessions","accept","acceptOptions","error","code","reject","unhold","forwardNumber","validatedResult","regionSettings","brand","validPhoneNumber","numberValidate","validateNumbers","result","errors","alert","warning","message","callErrors","type","payload","phoneNumber","numbers","e164","__rc_isForwarded","forward","webphoneErrors","forwardError","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","_onCallHold","holdError","currentSessionId","Promise","all","Object","values","map","_onHoldCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","danger","recordDisabled","noAccess","recordError","errorCode","stopRecord","park","success","webphoneMessages","parked","parkedNumber","ttl","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","ua","invite","sessionDescriptionHandlerOptions","once","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","func","toNumber","inviteOptions","extendedControls","_webphone","availabilityMonitor","isVoIPOnlyMode","_fetchDL","phoneLines","noOutboundCallWithoutDL","userAgent","outbound","__rc_fromNumber","fromNumber","_onCallInit","homeCountryId","_invite","from","direction","to","sipData","extraHeaders","fromTag","toTag","contact","__rc_contactMatch","sessionIds","_setSessionCaching","_clearSessionCaching","normalizeSession","_updateSessionsState","__rc_minimized","_disconnectOnInactive","currentId","localStorage","getItem","setItem","normalizedSession","_setActiveSessionId","tabManager","active","triggerMatch","emit","activeSession","_setActiveWebphoneActiveCallId","_setStateOnCallStart","_setStateOnCallRing","audioHelper","playIncoming","ringSession","videoElementPrepared","_remoteVideo","paused","pause","_localVideo","reason","allowDuplicates","connect","skipConnectDelay","force","skipDLCheck","_setStateOnCallEnd","_releaseVideoElementsOnSessionsEmpty","_reconnectWebphoneIfNecessaryOnSessionsEmpty","_makeWebphoneInactiveOnSessionsEmpty","handler","outputs","constraints","audio","deviceId","inputDeviceId","video","isOnTransfer","minimized","WebphoneBase","state","action","proxify"],"mappings":"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","sourcesContent":["import { find, filter } from 'ramda';\nimport { state, action, computed } from '@ringcentral-integration/core';\nimport { ObjectMapKey } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { InviteOptions } from 'ringcentral-web-phone/lib/userAgent';\nimport { Module } from '../../lib/di';\nimport sleep from '../../lib/sleep';\n\nimport { sessionStatus } from './sessionStatus';\nimport { recordStatus } from './recordStatus';\nimport callDirections from '../../enums/callDirections';\nimport { webphoneErrors } from './webphoneErrors';\nimport { webphoneMessages } from './webphoneMessages';\nimport { extendedControlStatus } from './extendedControlStatus';\nimport { EVENTS } from './events';\nimport { callErrors } from '../CallV2/callErrors';\nimport proxify from '../../lib/proxy/proxify';\nimport validateNumbers from '../../lib/validateNumbers';\n\nimport {\n  Deps,\n  WebphoneSession,\n  NormalizedSession,\n  SwitchCallActiveCallParams,\n  SessionReplyOptions,\n  CallStartHandler,\n  CallEndHandler,\n  CallResumeHandler,\n  CallRingHandler,\n  CallInitHandler,\n  BeforeCallEndHandler,\n  BeforeCallResumeHandler,\n  CallHoldHandler,\n} from './Webphone.interface';\nimport { WebphoneBase } from './WebphoneBase';\n\nimport {\n  normalizeSession,\n  isRing,\n  isOnHold,\n  extractHeadersData,\n  sortByLastActiveTimeDesc,\n} from './webphoneHelper';\n\nexport const INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  name: 'Webphone',\n  deps: [],\n})\nexport class Webphone extends WebphoneBase {\n  protected _activeWebphoneActiveCallKey: string;\n  protected _permissionCheck: boolean;\n\n  constructor(deps: Deps) {\n    super(deps);\n\n    this._activeWebphoneActiveCallKey = `${deps.prefix}-active-webphone-active-call-key`;\n    this._permissionCheck = this._deps.webphoneOptions.permissionCheck ?? true;\n\n    if (typeof deps.webphoneOptions.onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, deps.webphoneOptions.onCallEnd);\n    }\n    if (typeof deps.webphoneOptions.onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, deps.webphoneOptions.onCallRing);\n    }\n    if (typeof deps.webphoneOptions.onCallStart === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, deps.webphoneOptions.onCallStart);\n    }\n    if (typeof deps.webphoneOptions.onCallResume === 'function') {\n      this._eventEmitter.on(\n        EVENTS.callResume,\n        deps.webphoneOptions.onCallResume,\n      );\n    }\n    if (typeof deps.webphoneOptions.onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, deps.webphoneOptions.onCallHold);\n    }\n    if (typeof deps.webphoneOptions.onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, deps.webphoneOptions.onCallInit);\n    }\n    if (typeof deps.webphoneOptions.onBeforeCallResume === 'function') {\n      this._eventEmitter.on(\n        EVENTS.beforeCallResume,\n        deps.webphoneOptions.onBeforeCallResume,\n      );\n    }\n    if (typeof deps.webphoneOptions.onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(\n        EVENTS.beforeCallEnd,\n        deps.webphoneOptions.onBeforeCallEnd,\n      );\n    }\n\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n\n    if (this._deps.contactMatcher) {\n      this._deps.contactMatcher.addQuerySource({\n        getQueriesFn: () => this.sessionPhoneNumbers,\n        readyCheckFn: () => this.ready,\n      });\n    }\n  }\n\n  @state\n  activeSessionId?: string = null;\n\n  @state\n  ringSessionId?: string = null;\n\n  @state\n  lastEndedSessions: NormalizedSession[] = [];\n\n  @state\n  sessions: NormalizedSession[] = [];\n\n  @action\n  _updateSessionsState(sessions: NormalizedSession[]) {\n    const cachedSessions = this.sessions.filter((x) => x.cached);\n    cachedSessions.forEach((cachedSession) => {\n      const session = sessions.find((x) => x.id === cachedSession.id);\n      if (session) {\n        session.cached = true;\n      } else {\n        cachedSession.removed = true;\n        sessions.push(cachedSession);\n      }\n    });\n    this.sessions = sessions.sort(sortByLastActiveTimeDesc);\n  }\n\n  @action\n  _setActiveSessionId(sessionId: string) {\n    this.activeSessionId = sessionId;\n  }\n\n  @action\n  _setStateOnCallRing(session: NormalizedSession) {\n    this.ringSessionId = session.id;\n  }\n\n  @action\n  _setStateOnCallStart(session: NormalizedSession) {\n    this.activeSessionId = session.id;\n    if (this.ringSessionId === session.id) {\n      const ringSessions = this.sessions.filter((x) => isRing(x));\n      this.ringSessionId = (ringSessions[0] && ringSessions[0].id) || null;\n    }\n  }\n\n  @action\n  _setStateOnCallEnd(session: NormalizedSession) {\n    if (this.activeSessionId === session.id) {\n      const activeSessions = this.sessions.filter((x) => !isRing(x));\n      activeSessions.sort(sortByLastActiveTimeDesc);\n      this.activeSessionId =\n        (activeSessions[0] && activeSessions[0].id) || null;\n    }\n    if (this.ringSessionId === session.id) {\n      const ringSessions = this.sessions.filter((x) => isRing(x));\n      this.ringSessionId = (ringSessions[0] && ringSessions[0].id) || null;\n    }\n    if (\n      /**\n       * don't add incoming call that isn't relied by current app\n       *   to end sessions. this call can be answered by other apps\n       */\n      !session.startTime &&\n      !session.isToVoicemail &&\n      !session.isForwarded &&\n      !session.isReplied\n    ) {\n      return;\n    }\n    const lastSessions = [session].concat(\n      this.lastEndedSessions.filter((x) => x.id !== session.id),\n    );\n    this.lastEndedSessions = lastSessions.slice(0, 5);\n  }\n\n  @action\n  _setSessionCaching(cachingSessionIds: string[]) {\n    cachingSessionIds.forEach((sessionId) => {\n      const session = this.sessions.find((x) => x.id === sessionId);\n      if (session) {\n        session.cached = true;\n      }\n    });\n  }\n\n  @action\n  _clearSessionCaching(sessions: NormalizedSession[]) {\n    let needUpdate = false;\n    this.sessions.forEach((session) => {\n      if (session.cached) {\n        session.cached = false;\n        needUpdate = true;\n      }\n    });\n    if (needUpdate) {\n      this.sessions = this.sessions.filter((x) => !x.removed);\n    }\n    const activeSessions = sessions.filter((x) => !x.cached && !isRing(x));\n    activeSessions.sort(sortByLastActiveTimeDesc);\n    this.activeSessionId = (activeSessions[0] && activeSessions[0].id) || null;\n  }\n\n  @action\n  _onHoldCachedSession() {\n    this.sessions.forEach((session) => {\n      if (session.cached) {\n        session.callStatus = sessionStatus.onHold;\n        session.isOnHold = true;\n      }\n    });\n  }\n\n  _onStorageChangeEvent(e: StorageEvent) {\n    super._onStorageChangeEvent(e);\n    // unhold active calls in current tab\n    if (e.key === this._activeWebphoneActiveCallKey) {\n      this._holdOtherSession(e.newValue);\n    }\n  }\n\n  _onAccepted(session: WebphoneSession) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('replaced', (newSession: WebphoneSession) => {\n      console.log('Event: replaced', newSession);\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._updateSessions();\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('SessionDescriptionHandler-created', () => {\n      session.sessionDescriptionHandler.on('userMediaFailed', () => {\n        this._deps.audioSettings.onGetUserMediaError(null);\n      });\n    });\n  }\n\n  _onInvite(session: WebphoneSession) {\n    super._onInvite(session);\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  async _playExtendedControls(session: WebphoneSession) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (\n        session.__rc_extendedControlStatus === extendedControlStatus.playing\n      ) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  @proxify\n  async answer(sessionId: string) {\n    const sipSession = this.originalSessions[sessionId];\n    const session = this.sessions.find((session) => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession);\n      await sipSession.accept(this.acceptOptions);\n      // TODO: track action\n      // this.store.dispatch({\n      //   // for track\n      //   type: this.actionTypes.callAnswer,\n      // });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId: string) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId: string, forwardNumber: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers(\n          [forwardNumber],\n          this._deps.regionSettings,\n          this._deps.brand.id,\n        );\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult = await this._deps.numberValidate.validateNumbers([\n          forwardNumber,\n        ]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._deps.alert.warning({\n              message:\n                callErrors[error.type as ObjectMapKey<typeof callErrors>],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n          validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions, {});\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._deps.alert.warning({\n        message: webphoneErrors.forwardError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId: string) {\n    try {\n      this._sessionHandleWithId(sessionId, (session: WebphoneSession) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._deps.alert.warning({\n        message: webphoneErrors.muteError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId: string) {\n    this._sessionHandleWithId(sessionId, (session: WebphoneSession) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._deps.alert.warning({\n        message: webphoneErrors.holdError,\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId: string) {\n    await Promise.all(\n      Object.values(this.originalSessions).map(\n        async (session: WebphoneSession) => {\n          if (currentSessionId === session.id) {\n            return;\n          }\n          if (session.localHold) {\n            return;\n          }\n          if (session.__rc_callStatus === sessionStatus.connecting) {\n            return;\n          }\n          try {\n            await session.hold();\n          } catch (e) {\n            console.error('Hold call fail');\n            throw e;\n          }\n          session.__rc_callStatus = sessionStatus.onHold;\n          this._onCallHold(session);\n        },\n      ),\n    );\n    this._updateSessions();\n    // update cached sessions\n    this._onHoldCachedSession();\n  }\n\n  @proxify\n  async unhold(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._deps.alert.danger({\n          message: webphoneErrors.recordDisabled,\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._deps.alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code,\n        },\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      const result = await session.park();\n      console.log('Parked');\n      if (result['park extension']) {\n        this._deps.alert.success({\n          message: webphoneMessages.parked,\n          payload: {\n            parkedNumber: `*${result['park extension']}`,\n          },\n          ttl: 0,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers(\n          [transferNumber],\n          this._deps.regionSettings,\n          this._deps.brand.id,\n        );\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._deps.numberValidate.validateNumbers([\n          transferNumber,\n        ]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._deps.alert.warning({\n              message:\n                callErrors[error.type as ObjectMapKey<typeof callErrors>],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n          numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._deps.alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        sessionDescriptionHandlerOptions: this.acceptOptions\n          .sessionDescriptionHandlerOptions,\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._deps.alert.warning({\n        message: webphoneErrors.flipError,\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue: string, session: WebphoneSession) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._deps.alert.warning({\n        message: webphoneErrors.toVoiceMailError,\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId: string, replyOptions: SessionReplyOptions) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(\n    sessionId: string,\n    func: (session: WebphoneSession) => void,\n  ) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  async _invite(\n    toNumber: string,\n    {\n      inviteOptions,\n      extendedControls,\n    }: {\n      inviteOptions: InviteOptions;\n      extendedControls?: string;\n    },\n  ) {\n    if (!this._webphone) {\n      this._deps.alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n\n    if (\n      toNumber.length > 6 &&\n      (!this._deps.availabilityMonitor ||\n        !this._deps.availabilityMonitor.isVoIPOnlyMode)\n    ) {\n      const phoneLines = await this._fetchDL();\n      if (phoneLines.length === 0) {\n        this._deps.alert.warning({\n          message: webphoneErrors.noOutboundCallWithoutDL,\n        });\n        return null;\n      }\n    }\n    await this._holdOtherSession(null);\n    const session = this._webphone.userAgent.invite(\n      toNumber,\n      inviteOptions,\n    ) as WebphoneSession;\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = inviteOptions.fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n    extendedControls,\n  }: {\n    toNumber: string;\n    fromNumber: string;\n    homeCountryId: string;\n    extendedControls: string;\n  }) {\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    };\n    const result = await this._invite(toNumber, {\n      inviteOptions,\n      extendedControls,\n    });\n    return result;\n  }\n\n  /**\n   * switch a active call into web phone session.\n   */\n  @proxify\n  async switchCall(\n    { id, from, direction, to, sipData }: SwitchCallActiveCallParams,\n    homeCountryId: string,\n  ) {\n    const extraHeaders = [];\n    extraHeaders.push(\n      `Replaces: ${id};to-tag=${sipData.fromTag};from-tag=${sipData.toTag}`,\n    );\n    extraHeaders.push('RC-call-type: replace');\n    const toNumber =\n      direction === callDirections.outbound ? to.phoneNumber : from.phoneNumber;\n    const fromNumber =\n      direction === callDirections.outbound ? from.phoneNumber : to.phoneNumber;\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n      extraHeaders,\n    };\n    const session = await this._invite(toNumber, {\n      inviteOptions,\n    });\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(\n    sessionId: string,\n    contact: { id: string },\n  ) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds: string[]) {\n    this._setSessionCaching(sessionIds);\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this._clearSessionCaching(\n      [...Object.values(this.originalSessions)].map(normalizeSession),\n    );\n  }\n\n  _updateSessions() {\n    this._updateSessionsState(\n      [...Object.values(this.originalSessions)].map(normalizeSession),\n    );\n  }\n\n  @proxify\n  async toggleMinimized(sessionId: string) {\n    this._sessionHandleWithId(sessionId, (session: WebphoneSession) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _setActiveWebphoneActiveCallId(session: WebphoneSession) {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    const currentId = localStorage.getItem(this._activeWebphoneActiveCallKey);\n    if (currentId !== session.id) {\n      localStorage.setItem(this._activeWebphoneActiveCallKey, session.id);\n    }\n  }\n\n  _onCallInit(session: WebphoneSession) {\n    this._updateSessions();\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setActiveSessionId(normalizedSession.id);\n    if (\n      this._deps.contactMatcher &&\n      (!this._deps.tabManager || this._deps.tabManager.active)\n    ) {\n      this._deps.contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(\n      EVENTS.callInit,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallStart(session: WebphoneSession) {\n    this._updateSessions();\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setStateOnCallStart(normalizedSession);\n    this._eventEmitter.emit(\n      EVENTS.callStart,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallRing(session: WebphoneSession) {\n    this._updateSessions();\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setStateOnCallRing(normalizedSession);\n    if (\n      this._deps.contactMatcher &&\n      (!this._deps.tabManager || this._deps.tabManager.active)\n    ) {\n      this._deps.contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(\n      EVENTS.callRing,\n      normalizedSession,\n      this.ringSession,\n    );\n  }\n\n  _onBeforeCallEnd(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallEnd,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _releaseVideoElementsOnSessionsEmpty() {\n    if (this.videoElementPrepared && this.sessions.length === 0) {\n      // Pause video elements to release system Video Wake Lock RCINT-15582\n      if (!this._remoteVideo.paused) {\n        this._remoteVideo.pause();\n      }\n      if (!this._localVideo.paused) {\n        this._localVideo.pause();\n      }\n    }\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._reconnectAfterSessionEnd && this.sessions.length === 0) {\n      if (this._reconnectAfterSessionEnd.reason) {\n        this._deps.alert.warning({\n          message: this._reconnectAfterSessionEnd.reason,\n          allowDuplicates: false,\n        });\n      }\n      this._reconnectAfterSessionEnd = null;\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n    }\n  }\n\n  _onCallEnd(session: WebphoneSession) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    this._updateSessions();\n    this._setStateOnCallEnd(normalizedSession);\n    this._eventEmitter.emit(\n      EVENTS.callEnd,\n      normalizedSession,\n      this.activeSession,\n      this.ringSession,\n    );\n    this._releaseVideoElementsOnSessionsEmpty();\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n    this._makeWebphoneInactiveOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallResume(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setActiveSessionId(normalizedSession.id);\n    this._eventEmitter.emit(\n      EVENTS.callResume,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallHold(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.callHold,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  onCallStart(handler: CallStartHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler: CallInitHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler: CallRingHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler: CallEndHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler: BeforeCallResumeHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler: CallResumeHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler: CallHoldHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler: BeforeCallEndHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  async _disconnect() {\n    await super._disconnect();\n    this._updateSessions();\n  }\n\n  @computed<Webphone>(({ sessions }) => [sessions])\n  get sessionPhoneNumbers(): string[] {\n    const outputs: string[] = [];\n    this.sessions.forEach((session) => {\n      outputs.push(session.to);\n      outputs.push(session.from);\n    });\n    return outputs;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  @computed<Webphone>(({ activeSessionId, sessions }) => [\n    activeSessionId,\n    sessions,\n  ])\n  get activeSession(): NormalizedSession {\n    if (!this.activeSessionId) {\n      return null;\n    }\n    const activeSession = find(\n      (session) => session.id === this.activeSessionId,\n      this.sessions,\n    );\n    return activeSession;\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  @computed<Webphone>(({ ringSessionId, sessions }) => [\n    ringSessionId,\n    sessions,\n  ])\n  get ringSession(): NormalizedSession {\n    if (!this.ringSessionId) {\n      return null;\n    }\n    const session = find(\n      (session) => session.id === this.ringSessionId,\n      this.sessions,\n    );\n    return session;\n  }\n\n  @computed<Webphone>(({ sessions }) => [sessions])\n  get ringSessions(): NormalizedSession[] {\n    return filter((session) => isRing(session), this.sessions);\n  }\n\n  @computed<Webphone>(({ sessions }) => [sessions])\n  get onHoldSessions(): NormalizedSession[] {\n    return filter((session) => isOnHold(session), this.sessions);\n  }\n\n  @computed<Webphone>(({ sessions }) => [sessions])\n  get cachedSessions(): NormalizedSession[] {\n    return filter((session) => session.cached, this.sessions);\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._deps.audioSettings.inputDeviceId as string,\n          },\n          video: false,\n        },\n      },\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  @computed<Webphone>(({ ringSessions }) => [ringSessions])\n  get ringingCallOnView(): NormalizedSession {\n    return find((session) => !session.minimized, this.ringSessions);\n  }\n}\n"],"file":"Webphone.js"}