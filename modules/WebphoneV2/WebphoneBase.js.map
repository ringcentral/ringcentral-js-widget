{"version":3,"sources":["modules/WebphoneV2/WebphoneBase.ts"],"names":["DEFAULT_AUDIO","AUTO_RETRIES_DELAY","INACTIVE_SLEEP_DELAY","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","provisionUpdate","serverConnecting","WebphoneBase","name","deps","dep","optional","trackEvents","webRTCRegistration","that","ready","_deps","audioSettings","ringtoneVolume","ringtoneMuted","supportDevices","outputDeviceId","tabManager","active","enableCache","storageKey","_reconnectDelays","_disconnectOnInactive","_activeWebphoneKey","_webphone","_remoteVideo","_localVideo","_connectTimeout","_isFirstRegister","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","_eventEmitter","_stopWebphoneUserAgentPromise","webphoneOptions","disconnectOnInactive","prefix","EventEmitter","prepared","videoElementPrepared","status","connectionStatus","errorCode","statusCode","connectError","device","connecting","connectRetryCounts","reconnecting","connected","disconnected","inactive","disconnecting","retryCounts","incomingAudioFile","incomingAudioDataUrl","outgoingAudioFile","outgoingAudioDataUrl","data","fileName","dataUrl","document","createElement","id","setAttribute","muted","body","appendChild","volume","callVolume","setSinkId","_setVideoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","_removeCurrentInstanceFromActiveWebphone","_createOtherWebphoneInstanceListener","auth","addBeforeLogoutHandler","shouldUpdateRingtoneVolume","userAgent","audioHelper","setVolume","shouldSetSinkId","shouldTriggerOnTabActive","_onTabActive","loggedIn","extensionFeatures","numberValidate","storage","pending","client","service","platform","post","sipInfo","transport","response","json","account","extension","list","devices","records","phoneLines","forEach","length","concat","_waitUnregistered","stop","console","error","removeAllListeners","isConnected","disconnect","reconnectTimer","clearTimeout","undefined","__clearSwitchBackTimer","e","Promise","resolve","reject","timeout","setTimeout","Error","once","provisionData","_removeWebphone","RingCentralWebphone","appKey","appName","appVersion","uuid","endpointId","logLevel","webphoneLogLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","webphoneSDKOptions","loadAudio","on","_onWebphoneRegistered","log","_onWebphoneUnregistered","cause","message","isSipErrorCode","status_code","_onConnectError","session","_onInvite","Object","keys","originalSessions","alert","warning","allowDuplicates","connect","force","skipDLCheck","skipConnectDelay","reason","_setStateOnReconnect","_setRetryCounts","ttl","_setConnectionStatus","_sipProvision","sipProvision","indexOf","fetchData","_createWebphone","_waitStillTabActive","inactiveDisconnecting","skipTimeout","skipTabActiveCheck","_setStateOnConnectError","browserNotSupported","_isAvailableToConnect","_setStateOnConnect","connectDelay","_fetchDL","noOutboundCallWithoutDL","checkDLError","_connect","_getConnectTimeoutTtl","danger","payload","_hideConnectingAlert","_setStateOnConnectFailed","isConnecting","_hideConnectFailedAlert","_setStateOnRegistered","info","_hideRegisterErrorAlert","_setCurrentInstanceAsActiveWebphone","emit","EVENTS","webphoneRegistered","webphoneUnregistered","localStorage","setItem","activeWebphoneInstance","getItem","removeItem","_onStorageChangeEvent","key","hidden","newValue","_disconnectToInactive","_setDevice","_setStateWhenUnregisteredOnInactive","alertIds","messages","filter","m","i","len","map","dismiss","_setStoreOnDisconnect","_setStateOnUnregistered","incoming","incomingAudio","outgoing","outgoingAudio","_setOutgoingAudioIntoStorage","_resetOutgoingAudio","_setIncomingAudioIntoStorage","_resetIncomingAudio","isIncomingDefault","defaultIncomingAudio","isOutgoingDefault","defaultOutgoingAudio","_setRingtoneIntoStorage","sessions","Map","entries","isWebPhoneEnabled","userMedia","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import CreateSipRegistrationResponse from '@rc-ex/core/definitions/CreateSipRegistrationResponse';\nimport SipRegistrationDeviceInfo from '@rc-ex/core/definitions/SipRegistrationDeviceInfo';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n  watch,\n} from '@ringcentral-integration/core';\nimport { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { EventEmitter } from 'events';\nimport PhoneLinesInfo from 'ringcentral-client/build/definitions/PhoneLinesInfo';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport defaultIncomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport defaultOutgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\nimport { WebPhoneUserAgent } from 'ringcentral-web-phone/lib/userAgent';\nimport { WebphoneSession } from '../../interfaces/Webphone.interface';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport sleep from '../../lib/sleep';\nimport { trackEvents } from '../Analytics';\nimport { connectionStatus } from './connectionStatus';\nimport { EVENTS } from './events';\nimport { Deps } from './Webphone.interface';\nimport { webphoneErrors } from './webphoneErrors';\nimport {\n  isBrowserSupport,\n  isChrome,\n  isEnableMidLinesInSDP,\n} from './webphoneHelper';\n\nexport const DEFAULT_AUDIO = 'default';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst INACTIVE_SLEEP_DELAY = 1000;\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  name: 'Webphone',\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'ExtensionFeatures',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'Prefix', optional: true },\n    { dep: 'WebphoneOptions', optional: true },\n  ],\n})\nexport class WebphoneBase extends RcModuleV2<Deps> {\n  protected _reconnectDelays = AUTO_RETRIES_DELAY;\n  protected _disconnectOnInactive: boolean;\n  protected _activeWebphoneKey: string;\n\n  protected _webphone?: RingCentralWebphone;\n  protected _remoteVideo?: HTMLVideoElement;\n  protected _localVideo?: HTMLVideoElement;\n\n  protected _connectTimeout?: NodeJS.Timeout;\n  protected _isFirstRegister: boolean;\n  protected _reconnectAfterSessionEnd?: { reason?: string };\n  protected _disconnectInactiveAfterSessionEnd: boolean;\n  protected _eventEmitter: EventEmitter;\n  protected _stopWebphoneUserAgentPromise?: Promise<unknown> = null;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'Webphone',\n    });\n    this._disconnectOnInactive =\n      deps.webphoneOptions?.disconnectOnInactive ?? false;\n    this._activeWebphoneKey = `${deps.prefix}-active-webphone-key`;\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n    this._connectTimeout = null;\n    this._isFirstRegister = true;\n    this._eventEmitter = new EventEmitter();\n  }\n\n  @state\n  videoElementPrepared: boolean = false;\n\n  @state\n  connectionStatus: ObjectMapValue<typeof connectionStatus> =\n    connectionStatus.disconnected;\n\n  @state\n  connectRetryCounts: number = 0;\n\n  @state\n  errorCode?: string = null;\n\n  @state\n  statusCode?: string = null;\n\n  @state\n  device?: SipRegistrationDeviceInfo = null;\n\n  @action\n  _setVideoElementPrepared(prepared: boolean) {\n    this.videoElementPrepared = prepared;\n  }\n\n  @action\n  _setConnectionStatus(status: ObjectMapValue<typeof connectionStatus>) {\n    this.connectionStatus = status;\n  }\n\n  @action\n  _setStateOnConnectError(errorCode?: string, statusCode?: string) {\n    this.connectionStatus = connectionStatus.connectError;\n    this.device = null;\n    if (errorCode) {\n      this.errorCode = errorCode;\n    }\n    if (statusCode) {\n      this.statusCode = statusCode;\n    }\n  }\n\n  @action\n  _setStateOnConnectFailed(errorCode?: string, statusCode?: string) {\n    this.connectionStatus = connectionStatus.connectFailed;\n    this.device = null;\n    if (errorCode) {\n      this.errorCode = errorCode;\n    }\n    if (statusCode) {\n      this.statusCode = statusCode;\n    }\n  }\n\n  @action\n  _setStateOnConnect() {\n    this.connectionStatus = connectionStatus.connecting;\n    this.device = null;\n    this.connectRetryCounts += 1;\n  }\n\n  @action\n  _setStateOnReconnect() {\n    this.connectionStatus = connectionStatus.reconnecting;\n    this.device = null;\n    this.connectRetryCounts += 1;\n  }\n\n  @track(trackEvents.webRTCRegistration)\n  @action\n  _setStateOnRegistered(device: SipRegistrationDeviceInfo) {\n    this.connectionStatus = connectionStatus.connected;\n    this.device = device;\n    this.errorCode = null;\n    this.statusCode = null;\n    this.connectRetryCounts = 0;\n  }\n\n  @action\n  _setStateOnUnregistered() {\n    this.connectionStatus = connectionStatus.disconnected;\n    this.device = null;\n    this.connectRetryCounts = 0;\n  }\n\n  @action\n  _setStateWhenUnregisteredOnInactive() {\n    this.connectionStatus = connectionStatus.inactive;\n    this.device = null;\n    this.connectRetryCounts = 0;\n  }\n\n  @action\n  _setStoreOnDisconnect() {\n    this.connectionStatus = connectionStatus.disconnecting;\n    this.device = null;\n  }\n\n  @action\n  _setDevice(device?: { id: string }) {\n    this.device = device;\n  }\n\n  @action\n  _setRetryCounts(retryCounts: number) {\n    this.connectRetryCounts = retryCounts;\n  }\n\n  get incomingAudioFile() {\n    return this.data.incomingAudioFile;\n  }\n\n  get incomingAudioDataUrl() {\n    return this.data.incomingAudioDataUrl;\n  }\n\n  get outgoingAudioFile() {\n    return this.data.outgoingAudioFile;\n  }\n\n  get outgoingAudioDataUrl() {\n    return this.data.outgoingAudioDataUrl;\n  }\n\n  @storage\n  @state\n  data: {\n    incomingAudioFile: string;\n    incomingAudioDataUrl: string;\n    outgoingAudioFile: string;\n    outgoingAudioDataUrl: string;\n  } = {\n    incomingAudioFile: DEFAULT_AUDIO,\n    incomingAudioDataUrl: null,\n    outgoingAudioFile: DEFAULT_AUDIO,\n    outgoingAudioDataUrl: null,\n  };\n\n  @action\n  _setRingtoneIntoStorage(\n    incomingAudioFile?: string,\n    incomingAudioDataUrl?: string,\n    outgoingAudioFile?: string,\n    outgoingAudioDataUrl?: string,\n  ) {\n    this.data.incomingAudioFile = incomingAudioFile;\n    this.data.incomingAudioDataUrl = incomingAudioDataUrl;\n    this.data.outgoingAudioFile = outgoingAudioFile;\n    this.data.outgoingAudioDataUrl = outgoingAudioDataUrl;\n  }\n\n  @action\n  _setIncomingAudioIntoStorage(fileName: string, dataUrl: string) {\n    this.data.incomingAudioFile = fileName;\n    this.data.incomingAudioDataUrl = dataUrl;\n  }\n\n  @action\n  _resetIncomingAudio() {\n    this.data.incomingAudioFile = DEFAULT_AUDIO;\n    this.data.incomingAudioDataUrl = null;\n  }\n\n  @action\n  _setOutgoingAudioIntoStorage(fileName: string, dataUrl: string) {\n    this.data.outgoingAudioFile = fileName;\n    this.data.outgoingAudioDataUrl = dataUrl;\n  }\n\n  @action\n  _resetOutgoingAudio() {\n    this.data.outgoingAudioFile = DEFAULT_AUDIO;\n    this.data.outgoingAudioDataUrl = null;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._deps.audioSettings.callVolume;\n    if (this._deps.audioSettings.supportDevices) {\n      if (\n        this._remoteVideo.setSinkId &&\n        this._deps.audioSettings.outputDeviceId\n      ) {\n        this._remoteVideo.setSinkId(this._deps.audioSettings.outputDeviceId);\n      }\n    }\n\n    this._setVideoElementPrepared(true);\n  }\n\n  async _initModule() {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n        this._removeCurrentInstanceFromActiveWebphone();\n      });\n    }\n    this._createOtherWebphoneInstanceListener();\n    await super._initModule();\n  }\n\n  onInitOnce() {\n    this._deps.auth.addBeforeLogoutHandler(async () => {\n      await this._disconnect();\n    });\n    watch(\n      this,\n      () => this.shouldUpdateRingtoneVolume,\n      () => {\n        if (this.ready && this._webphone && this._webphone.userAgent) {\n          const ringtoneMuted = this._deps.audioSettings.ringtoneMuted;\n          this._webphone.userAgent.audioHelper.setVolume(\n            ringtoneMuted ? 0 : this._deps.audioSettings.ringtoneVolume,\n          );\n        }\n      },\n    );\n    watch(\n      this,\n      () => this._deps.audioSettings.callVolume,\n      () => {\n        if (this.ready && this._remoteVideo) {\n          this._remoteVideo.volume = this._deps.audioSettings.callVolume;\n        }\n      },\n    );\n    watch(\n      this,\n      () => this.shouldSetSinkId,\n      () => {\n        if (\n          this.ready &&\n          this._deps.audioSettings.supportDevices &&\n          this._remoteVideo &&\n          this._remoteVideo.setSinkId\n        ) {\n          this._remoteVideo.setSinkId(this._deps.audioSettings.outputDeviceId);\n        }\n      },\n    );\n    watch(\n      this,\n      () => this.shouldTriggerOnTabActive,\n      () => {\n        if (\n          this.ready &&\n          this._deps.tabManager?.ready &&\n          this._deps.tabManager?.active\n        ) {\n          this._onTabActive();\n        }\n      },\n    );\n  }\n\n  @computed((that: WebphoneBase) => [\n    that.ready,\n    that._deps.audioSettings.ringtoneVolume,\n    that._deps.audioSettings.ringtoneMuted,\n  ])\n  get shouldUpdateRingtoneVolume(): any[] {\n    return [\n      this.ready,\n      this._deps.audioSettings.ringtoneVolume,\n      this._deps.audioSettings.ringtoneMuted,\n    ];\n  }\n\n  @computed((that: WebphoneBase) => [\n    that.ready,\n    that._deps.audioSettings.supportDevices,\n    that._deps.audioSettings.outputDeviceId,\n  ])\n  get shouldSetSinkId(): any[] {\n    return [\n      this.ready,\n      this._deps.audioSettings.supportDevices,\n      this._deps.audioSettings.outputDeviceId,\n    ];\n  }\n\n  @computed((that: WebphoneBase) => [\n    that.ready,\n    that._deps.tabManager?.ready,\n    that._deps.tabManager?.active,\n  ])\n  get shouldTriggerOnTabActive(): any[] {\n    return [\n      this.ready,\n      this._deps.tabManager?.ready,\n      this._deps.tabManager?.active,\n    ];\n  }\n\n  _shouldInit() {\n    return (\n      this._deps.auth.loggedIn &&\n      this._deps.extensionFeatures.ready &&\n      this._deps.numberValidate.ready &&\n      this._deps.audioSettings.ready &&\n      this._deps.storage.ready &&\n      (!this._deps.tabManager || this._deps.tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._deps.auth.loggedIn ||\n        !this._deps.extensionFeatures.ready ||\n        !this._deps.numberValidate.ready ||\n        (!!this._deps.tabManager && !this._deps.tabManager.ready) ||\n        !this._deps.audioSettings.ready) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision(): Promise<CreateSipRegistrationResponse> {\n    const response = await this._deps.client.service\n      .platform()\n      .post('/restapi/v1.0/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }],\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._deps.client\n      .account()\n      .extension()\n      .device()\n      .list();\n    const devices = response.records;\n    let phoneLines: PhoneLinesInfo[] = [];\n    devices.forEach((device) => {\n      if (\n        !device.phoneLines ||\n        (device.phoneLines as PhoneLinesInfo[]).length === 0\n      ) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  async _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._stopWebphoneUserAgentPromise = this._waitUnregistered(\n      this._webphone.userAgent,\n    );\n    this._webphone.userAgent.stop();\n    try {\n      await this._stopWebphoneUserAgentPromise;\n    } catch (e) {\n      console.error(e);\n    }\n    this._stopWebphoneUserAgentPromise = null;\n    try {\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone.userAgent.transport.removeAllListeners();\n      if (this._webphone.userAgent.transport.isConnected()) {\n        this._webphone.userAgent.transport.disconnect();\n      }\n      if (this._webphone.userAgent.transport.reconnectTimer) {\n        clearTimeout(this._webphone.userAgent.transport.reconnectTimer);\n        this._webphone.userAgent.transport.reconnectTimer = undefined;\n      }\n      if (this._webphone.userAgent.transport.__clearSwitchBackTimer) {\n        this._webphone.userAgent.transport.__clearSwitchBackTimer();\n      }\n    } catch (e) {\n      console.error(e);\n      // ignore clean listener error\n    }\n    this._webphone = null;\n  }\n\n  _waitUnregistered(userAgent: WebPhoneUserAgent) {\n    return new Promise((resolve, reject) => {\n      let timeout = setTimeout(() => {\n        timeout = null;\n        reject(new Error('unregistered timeout'));\n      }, 2000);\n      userAgent.once('unregistered', () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        resolve();\n      });\n    });\n  }\n\n  async _createWebphone(provisionData: CreateSipRegistrationResponse) {\n    await this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._deps.webphoneOptions.appKey,\n      appName: this._deps.webphoneOptions.appName,\n      appVersion: this._deps.webphoneOptions.appVersion,\n      uuid: this._deps.auth.endpointId,\n      logLevel: this._deps.webphoneOptions.webphoneLogLevel ?? 1, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isEnableMidLinesInSDP(),\n      ...(this._deps.webphoneOptions.webphoneSDKOptions ?? {}),\n    });\n    this.loadAudio();\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._deps.audioSettings.ringtoneMuted\n        ? 0\n        : this._deps.audioSettings.ringtoneVolume,\n    );\n    // Webphone userAgent registered event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this._onWebphoneRegistered(provisionData);\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      this._onWebphoneUnregistered();\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if (!response && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message &&\n        typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blocklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blocklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from block list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blocklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response\n        ? response.statusCode || response.status_code\n        : null;\n      switch (statusCode) {\n        // Webphone account over limit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session as WebphoneSession);\n    });\n    // this._webphone.userAgent.on('inviteSent', (session) => {\n    //   console.log('UA invite');\n    //   this._addSession(session as WebphoneSession);\n    // });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (Object.keys(this.originalSessions).length === 0) {\n        this._deps.alert.warning({\n          message: webphoneErrors.provisionUpdate,\n          allowDuplicates: false,\n        });\n        this.connect({\n          force: true,\n          skipDLCheck: true,\n          skipConnectDelay: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: webphoneErrors.provisionUpdate,\n      };\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this._deps.alert.warning({\n          message: webphoneErrors.serverConnecting,\n          allowDuplicates: false,\n        });\n        this._setStateOnReconnect();\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this._setRetryCounts(20);\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    this._webphone.userAgent.transport.on('transportError', () => {\n      console.log('WebSocket transportError occurred');\n    });\n    this._webphone.userAgent.transport.on('wsConnectionError', () => {\n      this._setConnectionStatus(connectionStatus.connectError);\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (Object.keys(this.originalSessions).length === 0) {\n        this.connect({\n          skipConnectDelay: true,\n          force: true,\n          skipDLCheck: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: null,\n      };\n    });\n  }\n\n  // eslint-disable-next-line\n  _onInvite(session: WebphoneSession) {\n    // override\n  }\n\n  @proxify\n  async _connect() {\n    if (!this._deps.auth.loggedIn) {\n      return;\n    }\n    let sipProvision;\n    try {\n      sipProvision = await this._sipProvision();\n    } catch (error) {\n      console.error(error, this.connectRetryCounts);\n      if (\n        error &&\n        error.message &&\n        error.message.indexOf('Feature [WebPhone] is not available') > -1\n      ) {\n        this._deps.extensionFeatures.fetchData();\n        return;\n      }\n      this._onConnectError({\n        errorCode: webphoneErrors.sipProvisionError,\n        statusCode: null,\n        ttl: 0,\n      });\n      return;\n    }\n    await this._createWebphone(sipProvision);\n  }\n\n  async _waitStillTabActive() {\n    if (!this._deps.tabManager || this._deps.tabManager.active) {\n      return;\n    }\n    await sleep(INACTIVE_SLEEP_DELAY);\n    await this._waitStillTabActive();\n  }\n\n  _isAvailableToConnect({ force }: { force: boolean }) {\n    if (!this.enabled || !this._deps.auth.loggedIn) {\n      return false;\n    }\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    if (this.connecting || this.disconnecting || this.inactiveDisconnecting) {\n      return false;\n    }\n    // do not connect when connected unless force\n    if (!force && this.connected) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect({\n    force = false,\n    skipTimeout = true,\n    skipConnectDelay = false,\n    skipDLCheck = false,\n    skipTabActiveCheck = false,\n  } = {}) {\n    if (!isBrowserSupport()) {\n      this._setStateOnConnectError(webphoneErrors.browserNotSupported, null);\n      this._deps.alert.warning({\n        message: webphoneErrors.browserNotSupported,\n        ttl: 0,\n      });\n      return;\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    if (!skipTabActiveCheck) {\n      await this._waitStillTabActive();\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    if (this.connectError || force) {\n      this._setStateOnReconnect();\n    } else {\n      this._setStateOnConnect();\n    }\n    const connectDelay = this._deps.webphoneOptions.connectDelay ?? 0;\n    if (!skipConnectDelay && connectDelay > 0) {\n      await sleep(connectDelay);\n    }\n    if (!skipDLCheck) {\n      try {\n        if (!this._deps.auth.loggedIn) {\n          return;\n        }\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._deps.alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._deps.alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n    }\n    if (this.disconnected || this.disconnecting || !this._deps.auth.loggedIn) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    if (force || skipTimeout) {\n      await this._connect();\n      return;\n    }\n    this._connectTimeout = setTimeout(() => {\n      this._connectTimeout = null;\n      this._connect();\n    }, this._getConnectTimeoutTtl());\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({\n    errorCode,\n    statusCode,\n    ttl,\n  }: {\n    errorCode?: string;\n    statusCode?: string;\n    ttl?: number;\n  }) {\n    if (\n      this.connectRetryCounts > 2 ||\n      this.reconnecting ||\n      this.connected ||\n      this.connectError\n    ) {\n      this._setStateOnConnectError(errorCode, statusCode);\n      this._deps.alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n        },\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n      return;\n    }\n    this._setStateOnConnectFailed(errorCode, statusCode);\n    if (this.connectRetryCounts === 1) {\n      this._deps.alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true,\n        },\n      });\n      this._hideConnectFailedAlert();\n    }\n    this.connect({\n      skipDLCheck: true,\n      skipConnectDelay: true,\n      skipTimeout: false,\n    });\n  }\n\n  _onWebphoneRegistered(provisionData: CreateSipRegistrationResponse) {\n    this._setStateOnRegistered(provisionData.device);\n    this._deps.alert.info({\n      message: webphoneErrors.connected,\n    });\n    this._hideRegisterErrorAlert();\n    this._setCurrentInstanceAsActiveWebphone();\n    this._eventEmitter.emit(EVENTS.webphoneRegistered);\n  }\n\n  _onWebphoneUnregistered() {\n    this._removeCurrentInstanceFromActiveWebphone();\n    if (\n      this.disconnecting ||\n      this.inactiveDisconnecting ||\n      this.disconnected ||\n      this.inactive ||\n      !!this._stopWebphoneUserAgentPromise\n    ) {\n      // unregister by our app\n      return;\n    }\n    // unavailable, unregistered by some errors\n    this._setStateOnConnectError();\n    this._eventEmitter.emit(EVENTS.webphoneUnregistered);\n  }\n\n  _setCurrentInstanceAsActiveWebphone() {\n    if (this._disconnectOnInactive && this._deps.tabManager) {\n      localStorage.setItem(this._activeWebphoneKey, this._deps.tabManager.id);\n    }\n  }\n\n  _removeCurrentInstanceFromActiveWebphone() {\n    if (this._disconnectOnInactive && this._deps.tabManager) {\n      const activeWebphoneInstance = localStorage.getItem(\n        this._activeWebphoneKey,\n      );\n      if (activeWebphoneInstance === this._deps.tabManager.id) {\n        localStorage.removeItem(this._activeWebphoneKey);\n      }\n    }\n  }\n\n  _createOtherWebphoneInstanceListener() {\n    if (!this._disconnectOnInactive || !this._deps.tabManager) {\n      return;\n    }\n    window.addEventListener('storage', (e) => {\n      this._onStorageChangeEvent(e);\n    });\n  }\n\n  _onStorageChangeEvent(e: StorageEvent) {\n    // disconnect to inactive when other tabs' web phone connected\n    if (e.key === this._activeWebphoneKey) {\n      if (!this.connected || !document.hidden) {\n        return;\n      }\n      if (e.newValue === this._deps.tabManager.id) {\n        return;\n      }\n      if (Object.keys(this.originalSessions).length === 0) {\n        this._disconnectToInactive();\n        return;\n      }\n      this._disconnectInactiveAfterSessionEnd = true;\n    }\n  }\n\n  async _disconnectToInactive() {\n    this._setConnectionStatus(connectionStatus.inactiveDisconnecting);\n    this._setDevice(null);\n    await this._removeWebphone();\n    this._setStateWhenUnregisteredOnInactive();\n  }\n\n  _makeWebphoneInactiveOnSessionsEmpty() {\n    if (\n      this._disconnectInactiveAfterSessionEnd &&\n      Object.keys(this.originalSessions).length === 0\n    ) {\n      this._disconnectInactiveAfterSessionEnd = false;\n      if (!document.hidden) {\n        // set to active\n        if (this._deps.tabManager && this._deps.tabManager.active) {\n          this._setCurrentInstanceAsActiveWebphone();\n        }\n        return;\n      }\n      this._disconnectToInactive();\n    }\n  }\n\n  _onTabActive() {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    if (this.connected) {\n      this._setCurrentInstanceAsActiveWebphone();\n      return;\n    }\n    if (this.inactive) {\n      this.connect({\n        skipDLCheck: true,\n        force: true,\n        skipTabActiveCheck: true,\n      });\n    }\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._deps.alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (\n            m.message === registerErrors[i] &&\n            m.payload &&\n            m.payload.isConnecting === true\n          )\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._deps.alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._deps.alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i] && !m.payload.isConnecting)\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._deps.alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._deps.alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i]) return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._deps.alert.dismiss(alertIds);\n    }\n  }\n\n  async _disconnect() {\n    if (this.disconnected || this.disconnecting) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this._setStoreOnDisconnect();\n    if (this._webphone) {\n      await this._removeWebphone();\n    }\n    this._setStateOnUnregistered();\n  }\n\n  @proxify\n  async disconnect() {\n    await this._disconnect();\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._deps.alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  loadAudio() {\n    if (\n      this._webphone &&\n      this._webphone.userAgent &&\n      this._webphone.userAgent.audioHelper\n    ) {\n      this._webphone.userAgent.audioHelper.loadAudio({\n        incoming: this.incomingAudio,\n        outgoing: this.outgoingAudio,\n      });\n    }\n  }\n\n  @proxify\n  async setOutgoingAudio({\n    fileName,\n    dataUrl,\n  }: {\n    fileName: string;\n    dataUrl: string;\n  }) {\n    // TODO validate filePath?\n    this._setOutgoingAudioIntoStorage(fileName, dataUrl);\n    this.loadAudio();\n  }\n\n  @proxify\n  async resetOutgoingAudio() {\n    this._resetOutgoingAudio();\n    this.loadAudio();\n  }\n\n  @proxify\n  async setIncomingAudio({\n    fileName,\n    dataUrl,\n  }: {\n    fileName: string;\n    dataUrl: string;\n  }) {\n    // TODO validate filePath?\n    this._setIncomingAudioIntoStorage(fileName, dataUrl);\n    this.loadAudio();\n  }\n\n  @proxify\n  async resetIncomingAudio() {\n    this._resetIncomingAudio();\n    this.loadAudio();\n  }\n\n  @proxify\n  async setRingtone({\n    incomingAudio,\n    incomingAudioFile,\n    outgoingAudio,\n    outgoingAudioFile,\n  }: {\n    incomingAudio: string;\n    incomingAudioFile: string;\n    outgoingAudio: string;\n    outgoingAudioFile: string;\n  }) {\n    const isIncomingDefault =\n      incomingAudioFile === DEFAULT_AUDIO &&\n      incomingAudio === defaultIncomingAudio;\n    const isOutgoingDefault =\n      outgoingAudioFile === DEFAULT_AUDIO &&\n      outgoingAudio === defaultOutgoingAudio;\n    this._setRingtoneIntoStorage(\n      isIncomingDefault ? DEFAULT_AUDIO : incomingAudioFile,\n      isIncomingDefault ? null : incomingAudio,\n      isOutgoingDefault ? DEFAULT_AUDIO : outgoingAudioFile,\n      isOutgoingDefault ? null : outgoingAudio,\n    );\n    this.loadAudio();\n  }\n\n  get originalSessions() {\n    return (this._webphone?.userAgent.sessions ?? {}) as {\n      [key: string]: WebphoneSession;\n    };\n  }\n\n  // for backward compatibility v1\n  get _sessions() {\n    return new Map(Object.entries(this.originalSessions));\n  }\n\n  get enabled() {\n    return this._deps.extensionFeatures.isWebPhoneEnabled;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get inactiveDisconnecting() {\n    return this.connectionStatus === connectionStatus.inactiveDisconnecting;\n  }\n\n  get inactive() {\n    return this.connectionStatus === connectionStatus.inactive;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  /*\n   * Together with `CallingSettings` module to check if webphone is\n   * Unavailable.\n   */\n  get isUnavailable() {\n    return (\n      this.ready &&\n      this._deps.auth.loggedIn &&\n      (!this._deps.audioSettings.userMedia ||\n        this.reconnecting ||\n        this.connectError ||\n        this.inactive)\n    );\n  }\n\n  get incomingAudio() {\n    return this.incomingAudioDataUrl || this.defaultIncomingAudio;\n  }\n\n  get outgoingAudio() {\n    return this.outgoingAudioDataUrl || this.defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudio() {\n    return defaultIncomingAudio;\n  }\n\n  get defaultOutgoingAudio() {\n    return defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n\n  get defaultOutgoingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n}\n"],"file":"WebphoneBase.js"}