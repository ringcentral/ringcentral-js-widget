{"version":3,"sources":["modules/LocaleV2/Locale.ts"],"names":["Locale","name","deps","dep","optional","that","_defaultLocale","I18n","setDefaultLocale","localeOptions","defaultLocale","DEFAULT_LOCALE","locale","proxyLocale","_setProxyLocaleSuccess","debugMode","setLocale","PSEUDO_LOCALE","_polling","_syncBrowserLocale","_setLocale","currentLocale","setProxyLocaleSuccess","store","subscribe","setLocalePromise","_detectBrowser","browserLocale","setTimeout","_pollingInterval","formatMessage","setup","inputLocale","target","_supportedLocales","map","item","find","split","_toggleDebugMode","_setLocaleSuccess","console","log","_deps","brand","brandConfig","detectBrowser","polling","pollingInterval","supportedLocales","_transport","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n} from '@ringcentral-integration/core';\nimport I18n, {\n  DEFAULT_LOCALE,\n  PSEUDO_LOCALE,\n} from '@ringcentral-integration/i18n';\nimport formatLocale from '@ringcentral-integration/i18n/lib/formatLocale';\nimport formatMessage from 'format-message';\nimport detectBrowserLocale from '../../lib/detectBrowserLocale';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { Deps } from './Locale.interface';\n\n@Module({\n  name: 'Locale',\n  deps: [\n    {\n      dep: 'Brand',\n      optional: true,\n    },\n    {\n      dep: 'LocaleOptions',\n      optional: true,\n    },\n  ],\n})\nexport class Locale extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({ deps });\n    I18n.setDefaultLocale(deps.localeOptions?.defaultLocale ?? DEFAULT_LOCALE);\n  }\n\n  get _defaultLocale() {\n    return (\n      this._deps.localeOptions?.defaultLocale ??\n      this._deps.brand?.brandConfig?.defaultLocale ??\n      DEFAULT_LOCALE\n    );\n  }\n\n  get _detectBrowser() {\n    return this._deps.localeOptions?.detectBrowser ?? true;\n  }\n\n  get _polling() {\n    return this._deps.localeOptions?.polling ?? false;\n  }\n\n  get _pollingInterval() {\n    return this._deps.localeOptions?.pollingInterval ?? 2000;\n  }\n\n  @computed((that: Locale) => [that._defaultLocale])\n  get _supportedLocales() {\n    return (\n      this._deps.brand?.brandConfig?.supportedLocales ?? [this._defaultLocale]\n    );\n  }\n\n  @state\n  locale: string = null;\n\n  @state\n  proxyLocale: string = null;\n\n  @action\n  _setProxyLocaleSuccess(locale: string) {\n    this.proxyLocale = locale;\n  }\n\n  @proxify\n  async setProxyLocaleSuccess(locale: string) {\n    this._setProxyLocaleSuccess(locale);\n  }\n\n  @state\n  debugMode = false;\n\n  @action\n  _toggleDebugMode() {\n    this.debugMode = !this.debugMode;\n    if (this.debugMode) {\n      this.setLocale(PSEUDO_LOCALE);\n    }\n  }\n\n  @action\n  _setLocaleSuccess(locale: string) {\n    this.locale = locale;\n  }\n\n  onInitOnce() {\n    if (this._polling) {\n      this._syncBrowserLocale();\n    }\n  }\n\n  async initializeProxy() {\n    let setLocalePromise: Promise<void>;\n    await this._setLocale(this.currentLocale);\n    this.setProxyLocaleSuccess(this.currentLocale);\n    this.store.subscribe(async () => {\n      if (this.locale !== this.proxyLocale && !setLocalePromise) {\n        setLocalePromise = this._setLocale(this.locale);\n        await setLocalePromise;\n        this.setProxyLocaleSuccess(this.locale);\n        setLocalePromise = null;\n      }\n    });\n  }\n\n  async onInit() {\n    await this.setLocale(\n      this._detectBrowser ? this.browserLocale : this._defaultLocale,\n    );\n  }\n\n  protected async _syncBrowserLocale() {\n    if (!this.debugMode && this.browserLocale !== this.currentLocale) {\n      await this.setLocale(this.browserLocale);\n    }\n    setTimeout(() => this._syncBrowserLocale(), this._pollingInterval);\n  }\n\n  protected async _setLocale(locale: string) {\n    await I18n.setLocale(locale);\n    formatMessage.setup({\n      locale:\n        this.currentLocale === PSEUDO_LOCALE\n          ? DEFAULT_LOCALE\n          : this.currentLocale,\n    });\n  }\n\n  normalizeLocale(inputLocale: string) {\n    const locale = formatLocale(inputLocale);\n\n    const target = this._supportedLocales\n      .map((item) => formatLocale(item))\n      .find((item) => item === locale || item.split('-')[0] === locale);\n    return target ?? this._defaultLocale;\n  }\n\n  get currentLocale() {\n    return (\n      (this._transport ? this.proxyLocale : this.locale) ?? this._defaultLocale\n    );\n  }\n\n  get browserLocale() {\n    return detectBrowserLocale(this._defaultLocale);\n  }\n\n  @proxify\n  async toggleDebugMode() {\n    this._toggleDebugMode();\n  }\n\n  /**\n   *  Sets the desired locale as the current locale. This will also\n   *  set all I18n instances to the same locale, as well as set formatMessage to use\n   *  the same locale.\n   */\n  @proxify\n  async setLocale(locale: string) {\n    try {\n      await this._setLocale(locale);\n      this._setLocaleSuccess(locale);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"file":"Locale.js"}