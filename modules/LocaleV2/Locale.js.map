{"version":3,"sources":["modules/LocaleV2/Locale.ts"],"names":["Locale","name","deps","dep","optional","that","locale","_setLocale","I18n","setDefaultLocale","localeOptions","defaultLocale","DEFAULT_LOCALE","debugMode","setLocale","PSEUDO_LOCALE","_polling","_syncBrowserLocale","_detectBrowser","browserLocale","_defaultLocale","currentLocale","setTimeout","_pollingInterval","formatMessage","setup","_toggleDebugMode","_setLocaleSuccess","console","log","_deps","detectBrowser","polling","pollingInterval","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport I18n, {\n  DEFAULT_LOCALE,\n  PSEUDO_LOCALE,\n} from '@ringcentral-integration/i18n';\nimport formatMessage from 'format-message';\nimport detectBrowserLocale from '../../lib/detectBrowserLocale';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport { proxyState } from '../../lib/proxy/proxyState';\nimport { Deps } from './Locale.interface';\n\n@Module({\n  name: 'Locale',\n  deps: [{ dep: 'LocaleOptions', optional: true }],\n})\nexport class Locale extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({ deps });\n    I18n.setDefaultLocale(deps.localeOptions?.defaultLocale ?? DEFAULT_LOCALE);\n  }\n\n  get _defaultLocale() {\n    return this._deps.localeOptions?.defaultLocale ?? DEFAULT_LOCALE;\n  }\n\n  get _detectBrowser() {\n    return this._deps.localeOptions?.detectBrowser ?? true;\n  }\n\n  get _polling() {\n    return this._deps.localeOptions?.polling ?? false;\n  }\n\n  get _pollingInterval() {\n    return this._deps.localeOptions?.pollingInterval ?? 2000;\n  }\n\n  @proxyState(async (that: Locale, locale: string) => {\n    await that._setLocale(locale);\n  })\n  @state\n  locale: string = null;\n\n  @state\n  debugMode = false;\n\n  @action\n  _toggleDebugMode() {\n    this.debugMode = !this.debugMode;\n    if (this.debugMode) {\n      this.setLocale(PSEUDO_LOCALE);\n    }\n  }\n\n  @action\n  _setLocaleSuccess(locale: string) {\n    this.locale = locale;\n  }\n\n  onInitOnce() {\n    if (this._polling) {\n      this._syncBrowserLocale();\n    }\n  }\n\n  async onInit() {\n    await this.setLocale(\n      this._detectBrowser ? this.browserLocale : this._defaultLocale,\n    );\n  }\n\n  protected async _syncBrowserLocale() {\n    if (!this.debugMode && this.browserLocale !== this.currentLocale) {\n      await this.setLocale(this.browserLocale);\n    }\n    setTimeout(() => this._syncBrowserLocale(), this._pollingInterval);\n  }\n\n  protected async _setLocale(locale: string) {\n    await I18n.setLocale(locale);\n    formatMessage.setup({\n      locale:\n        this.currentLocale === PSEUDO_LOCALE\n          ? DEFAULT_LOCALE\n          : this.currentLocale,\n    });\n  }\n\n  get currentLocale() {\n    return this.locale || this._defaultLocale;\n  }\n\n  get browserLocale() {\n    return detectBrowserLocale(this._defaultLocale);\n  }\n\n  @proxify\n  async toggleDebugMode() {\n    this._toggleDebugMode();\n  }\n\n  /**\n   *  Sets the desired locale as the current locale. This will also\n   *  set all I18n instances to the same locale, as well as set formatMessage to use\n   *  the same locale.\n   */\n  @proxify\n  async setLocale(locale: string) {\n    try {\n      await this._setLocale(locale);\n      this._setLocaleSuccess(locale);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"file":"Locale.js"}