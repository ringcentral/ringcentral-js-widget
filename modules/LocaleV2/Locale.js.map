{"version":3,"sources":["modules/LocaleV2/Locale.ts"],"names":["Locale","name","deps","dep","optional","I18n","setDefaultLocale","localeOptions","defaultLocale","DEFAULT_LOCALE","locale","proxyLocale","_setProxyLocaleSuccess","debugMode","setLocale","PSEUDO_LOCALE","_polling","_syncBrowserLocale","_setLocale","currentLocale","setProxyLocaleSuccess","store","subscribe","_detectBrowser","browserLocale","_defaultLocale","setTimeout","_pollingInterval","formatMessage","setup","_toggleDebugMode","_setLocaleSuccess","console","log","_deps","detectBrowser","polling","pollingInterval","_transport","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport I18n, {\n  DEFAULT_LOCALE,\n  PSEUDO_LOCALE,\n} from '@ringcentral-integration/i18n';\nimport formatMessage from 'format-message';\nimport detectBrowserLocale from '../../lib/detectBrowserLocale';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { Deps } from './Locale.interface';\n\n@Module({\n  name: 'Locale',\n  deps: [{ dep: 'LocaleOptions', optional: true }],\n})\nexport class Locale extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({ deps });\n    I18n.setDefaultLocale(deps.localeOptions?.defaultLocale ?? DEFAULT_LOCALE);\n  }\n\n  get _defaultLocale() {\n    return this._deps.localeOptions?.defaultLocale ?? DEFAULT_LOCALE;\n  }\n\n  get _detectBrowser() {\n    return this._deps.localeOptions?.detectBrowser ?? true;\n  }\n\n  get _polling() {\n    return this._deps.localeOptions?.polling ?? false;\n  }\n\n  get _pollingInterval() {\n    return this._deps.localeOptions?.pollingInterval ?? 2000;\n  }\n\n  @state\n  locale: string = null;\n\n  @state\n  proxyLocale: string = null;\n\n  @action\n  _setProxyLocaleSuccess(locale: string) {\n    this.proxyLocale = locale;\n  }\n\n  @proxify\n  async setProxyLocaleSuccess(locale: string) {\n    this._setProxyLocaleSuccess(locale);\n  }\n\n  @state\n  debugMode = false;\n\n  @action\n  _toggleDebugMode() {\n    this.debugMode = !this.debugMode;\n    if (this.debugMode) {\n      this.setLocale(PSEUDO_LOCALE);\n    }\n  }\n\n  @action\n  _setLocaleSuccess(locale: string) {\n    this.locale = locale;\n  }\n\n  onInitOnce() {\n    if (this._polling) {\n      this._syncBrowserLocale();\n    }\n  }\n\n  async initializeProxy() {\n    await this._setLocale(this.currentLocale);\n    this.setProxyLocaleSuccess(this.currentLocale);\n    this.store.subscribe(async () => {\n      if (this.locale !== this.proxyLocale) {\n        await this._setLocale(this.locale);\n        this.setProxyLocaleSuccess(this.locale);\n      }\n    });\n  }\n\n  async onInit() {\n    await this.setLocale(\n      this._detectBrowser ? this.browserLocale : this._defaultLocale,\n    );\n  }\n\n  protected async _syncBrowserLocale() {\n    if (!this.debugMode && this.browserLocale !== this.currentLocale) {\n      await this.setLocale(this.browserLocale);\n    }\n    setTimeout(() => this._syncBrowserLocale(), this._pollingInterval);\n  }\n\n  protected async _setLocale(locale: string) {\n    await I18n.setLocale(locale);\n    formatMessage.setup({\n      locale:\n        this.currentLocale === PSEUDO_LOCALE\n          ? DEFAULT_LOCALE\n          : this.currentLocale,\n    });\n  }\n\n  get currentLocale() {\n    return (\n      (this._transport ? this.proxyLocale : this.locale) ?? this._defaultLocale\n    );\n  }\n\n  get browserLocale() {\n    return detectBrowserLocale(this._defaultLocale);\n  }\n\n  @proxify\n  async toggleDebugMode() {\n    this._toggleDebugMode();\n  }\n\n  /**\n   *  Sets the desired locale as the current locale. This will also\n   *  set all I18n instances to the same locale, as well as set formatMessage to use\n   *  the same locale.\n   */\n  @proxify\n  async setLocale(locale: string) {\n    try {\n      await this._setLocale(locale);\n      this._setLocaleSuccess(locale);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"],"file":"Locale.js"}