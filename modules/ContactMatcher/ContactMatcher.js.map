{"version":3,"sources":["modules/ContactMatcher/ContactMatcher.ts"],"names":["ContactMatcher","deps","dep","optional","options","name","phoneNumber","ignoreCache","match","queries","dataMapping","length","phoneNumbers","ignoreQueue","forceMatchBatchNumbers","DataMatcher","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASqBA,c;AAPrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,uBAAP;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAAD;AADA,CAAP,C;;;;;AAIC;;;AAGA,gCAA4B;AAAA,QAAXC,OAAW;;AAAA;;AAAA;AAExBC,MAAAA,IAAI,EAAE;AAFkB,OAGrBD,OAHqB;AAK3B;;;;;;;;;;;AAGsBE,cAAAA,W,SAAAA,W,4BAAaC,W,EAAAA,W,kCAAc,K;;8CAC1C,KAAKC,KAAL,CAAW;AACfC,gBAAAA,OAAO,EAAE,CAACH,WAAD,CADM;AAEfC,gBAAAA,WAAW,EAAXA;AAFe,eAAX,C;;;+CAKJ,CAAC,CAAC,KAAKG,WAAL,CAAiBJ,WAAjB,CAAF,IACA,KAAKI,WAAL,CAAiBJ,WAAjB,EAA8BK,MAA9B,GAAuC,C;;;;;;;;;;;;;;;;;AAKZC,cAAAA,Y,SAAAA,Y;;8CACvB,KAAKJ,KAAL,CAAW;AACfC,gBAAAA,OAAO,EAAEG,YADM;AAEfL,gBAAAA,WAAW,EAAE,IAFE;AAGfM,gBAAAA,WAAW,EAAE;AAHE,eAAX,C;;;;;;;;;;;;;;;;;AAQiBP,cAAAA,W,SAAAA,W;;8CACjB,KAAKQ,sBAAL,CAA4B;AAChCF,gBAAAA,YAAY,EAAE,CAACN,WAAD;AADkB,eAA5B,C;;;;;;;;;;;;EAlCkCS,wB,oEAWzCC,mB,qKAYAA,mB,uKASAA,mB","sourcesContent":["import { Module } from '../../lib/di';\nimport DataMatcher from '../../lib/DataMatcher';\nimport proxify from '../../lib/proxy/proxify';\n\n/**\n * @class\n * @description Contact matcher managing module\n */\n@Module({\n  deps: [{ dep: 'ContactMatcherOptions', optional: true }],\n})\nexport default class ContactMatcher extends DataMatcher {\n  /**\n   * @constructor\n   */\n  constructor({ ...options }) {\n    super({\n      name: 'contactMatcher',\n      ...options,\n    });\n  }\n\n  @proxify\n  async hasMatchNumber({ phoneNumber, ignoreCache = false }) {\n    await this.match({\n      queries: [phoneNumber],\n      ignoreCache,\n    });\n    return (\n      !!this.dataMapping[phoneNumber] &&\n      this.dataMapping[phoneNumber].length > 0\n    );\n  }\n\n  @proxify\n  async forceMatchBatchNumbers({ phoneNumbers }) {\n    await this.match({\n      queries: phoneNumbers,\n      ignoreCache: true,\n      ignoreQueue: true,\n    });\n  }\n\n  @proxify\n  async forceMatchNumber({ phoneNumber }) {\n    await this.forceMatchBatchNumbers({\n      phoneNumbers: [phoneNumber],\n    });\n  }\n}\n"],"file":"ContactMatcher.js"}