{"version":3,"sources":["modules/RcVideo/RcVideo.ts"],"names":["RcVideo","deps","dep","optional","extensionId","accountId","state","loginUser","alert","client","extensionInfo","brand","storage","reducers","availabilityMonitor","meetingProvider","accountInfo","showSaveAsDefault","isInstantMeeting","enablePersonalMeeting","enableReloadAfterSchedule","enableScheduleOnBehalf","showAdminLock","enableWaitingRoom","options","actionTypes","_alert","_client","_defaultVideoSettingKey","_personalVideoKey","_extensionInfo","_brand","_storage","_availabilityMonitor","_showSaveAsDefault","_isInstantMeeting","_enablePersonalMeeting","_enableReloadAfterSchedule","_showAdminLock","_enableWaitingRoom","_meetingProvider","_reducer","_enableScheduleOnBehalf","_accountInfo","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","isRCV","dispatch","type","resetSuccess","init","_onInit","initSuccess","_initMeeting","_initDelegators","updateDelegator","usePersonalMeetingId","_initMeetingSettings","delegator","userExtensionId","delegators","length","user","Number","initSettingsStart","_initPersonalMeeting","_initPreferences","initSettingsEnd","_getPreferences","preferences","settingLocks","password_instant","updateMeetingPreferences","updateMeetingSettingLocks","console","log","service","platform","get","meetingResult","json","meeting","_savePersonalMeeting","error","resetPersonalMeeting","_errorHandle","result","updateDelegatorList","savePersonalMeeting","allowJoinBeforeHost","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","muteAudio","muteVideo","isMeetingSecret","notShowAgain","waitingRoomMode","updateInfo","_saved","saveAsDefaultSetting","password","isSecret","isAlertSuccess","isScheduling","createMeeting","_promise","initCreating","meetingDetail","saveAsDefault","RCV_WAITTING_ROOM_API_KEYS","post","updateMeetingSettings","_getDialinNumbers","dialInNumber","getExtensionInfo","currentUser","savePreferencesChanges","setTimeout","success","message","meetingStatus","scheduledSuccess","newMeeting","created","meetingResponse","resetCreating","expiresIn","RcVideoTypes","phoneNumbers","Array","isArray","defaultPhoneNumber","find","obj","phoneNumber","id","RCV_PREFERENCES_IDS","res","list","forEach","value","readOnly","info","account","extension","preferenceId","send","method","url","body","isOverwrite","preferencesPayload","dirtyPreferences","Object","entries","filter","kvPairs","newValue","oldValue","isLocked","Promise","all","map","_saveSinglePreference","_updatePreference","meetingId","shortId","initUpdating","updatedSuccess","updated","personalMeeting","resetUpdating","personalVideoSetting","defaultVideoSetting","patch","processedMeeting","transformedPreferences","_comparePreferences","saveMeetingPreferencesState","isPreferencesChanged","errors","MeetingErrors","warning","response","clone","errorCode","permissionName","danger","insufficientPermissions","payload","checkIfHAError","internalError","getItem","name","status","videoStatus","initializing","creating","ASSISTED_USERS_MYSELF","isLoginUser","RcModule","proxify","background","selector","initialVideoSetting","transformedSettingLocks","initialSetting","processedSettings","meetingPassword","isMeetingPasswordValid","settingLock","savedSetting","savedDefaultVideoSetting","extensionName","brandName","startTime","topic","Date"],"mappings":"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","sourcesContent":["import { computed } from '@ringcentral-integration/core';\nimport Client from 'ringcentral-client';\nimport { find, omit } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport background from '../../lib/background';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport { MeetingErrors } from '../Meeting';\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\n\nimport { ASSISTED_USERS_MYSELF, RcvWaitingRoomModeProps } from './constants';\nimport actionTypes, { RcVideoActionTypes } from './actionTypes';\nimport { videoStatus } from './videoStatus';\nimport getRcVReducer, {\n  getDefaultVideoSettingReducer,\n  getPersonalMeetingReducer,\n} from './getRcVReducer';\n\nimport {\n  getDefaultVideoSettings,\n  validatePasswordSettings,\n  generateRandomPassword,\n  getTopic,\n  pruneMeetingObject,\n  RcVideoTypes,\n  transformPreferences,\n  reversePreferences,\n  comparePreferences,\n  transformSettingLocks,\n  getLockedPreferences,\n  RCV_PREFERENCES_IDS,\n  RCV_WAITTING_ROOM_API_KEYS,\n  patchWaitingRoomRelated,\n} from './videoHelper';\nimport {\n  RcVideoAPI,\n  RcVMeetingModel,\n  RcVSettingLocks,\n  RcVPreferencesGET,\n  RcVSettingLocksGET,\n  RcVPreferences,\n  RcVDialInNumberGET,\n  RcVPreferencesAPIResult,\n  RcVPreferenceDataItem,\n} from '../../interfaces/Rcv.model';\nimport { RcvDelegator } from './interface';\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'Brand',\n    'Storage',\n    'AccountInfo',\n    'ExtensionInfo',\n    'MeetingProvider',\n    { dep: 'RcVideoOptions', optional: true },\n    { dep: 'AvailabilityMonitor', optional: true },\n  ],\n})\nexport class RcVideo extends RcModule<Record<string, any>, RcVideoActionTypes> {\n  // TODO: add state interface\n  private _alert: any;\n  private _client: Client;\n  private _defaultVideoSettingKey: string;\n  private _personalVideoKey: string;\n  private _extensionInfo: any;\n  private _brand: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _showSaveAsDefault: boolean;\n  private _isInstantMeeting: boolean;\n  private _enablePersonalMeeting: boolean;\n  private _enableReloadAfterSchedule: boolean;\n  private _showAdminLock: boolean;\n  private _enableWaitingRoom: boolean;\n\n  private _meetingProvider: any;\n  _reducer: any;\n  private _enableScheduleOnBehalf: boolean;\n  private _accountInfo: any;\n\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    brand,\n    storage,\n    reducers,\n    availabilityMonitor,\n    meetingProvider,\n    accountInfo,\n    showSaveAsDefault = false,\n    isInstantMeeting = false,\n    enablePersonalMeeting = false,\n    enableReloadAfterSchedule = true,\n    enableScheduleOnBehalf = false,\n    showAdminLock = false,\n    enableWaitingRoom = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._meetingProvider = meetingProvider;\n    this._brand = brand;\n    this._storage = storage;\n    this._accountInfo = accountInfo;\n    this._reducer = getRcVReducer(this.actionTypes, reducers);\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._isInstantMeeting = isInstantMeeting;\n    this._availabilityMonitor = availabilityMonitor;\n    this._defaultVideoSettingKey = 'savedDefaultSetting';\n    this._personalVideoKey = 'personalVideo';\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    this._enableScheduleOnBehalf = enableScheduleOnBehalf;\n    this._enableReloadAfterSchedule = enableReloadAfterSchedule;\n    this._showAdminLock = showAdminLock;\n    this._enableWaitingRoom = enableWaitingRoom;\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultVideoSettingKey,\n        reducer: getDefaultVideoSettingReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalVideoKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  get enableScheduleOnBehalf() {\n    return this._enableScheduleOnBehalf;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this.pending &&\n      this._accountInfo.ready &&\n      this._extensionInfo.ready &&\n      this._storage.ready &&\n      this._meetingProvider.ready &&\n      this._meetingProvider.isRCV &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  _shouldReset() {\n    return (\n      this.ready &&\n      (!this._accountInfo.ready ||\n        !this._extensionInfo.ready ||\n        !this._storage.ready ||\n        !this._meetingProvider.ready ||\n        !this._meetingProvider.isRCV ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready))\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    await this._onInit();\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  @proxify\n  async _onInit() {\n    await this._initMeeting();\n\n    if (this._enableScheduleOnBehalf) {\n      await this._initDelegators();\n      this.updateDelegator(this.loginUser);\n    }\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    await this._onInit();\n  }\n\n  @proxify\n  async reload() {\n    await this._onInit();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this._initMeetingSettings(usePersonalMeetingId);\n  }\n\n  @proxify\n  updateDelegator(delegator: RcvDelegator) {\n    this.store.dispatch({\n      type: this.actionTypes.updateDelegator,\n      delegator,\n    });\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string) {\n    if (!userExtensionId || !this.delegators || this.delegators.length === 0) {\n      return;\n    }\n\n    const delegator = find(\n      (user: RcvDelegator) => user.extensionId === userExtensionId,\n      this.delegators,\n    );\n\n    if (!delegator) {\n      return;\n    }\n\n    this.updateDelegator(delegator);\n\n    this._initMeeting(Number(delegator.extensionId));\n  }\n\n  private async _initMeeting(extensionId = this.extensionId) {\n    this.store.dispatch({\n      type: this.actionTypes.initSettingsStart,\n    });\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting(this.accountId, extensionId);\n    }\n    await this._initPreferences(this.accountId, extensionId);\n\n    this._initMeetingSettings(false);\n    this.store.dispatch({\n      type: this.actionTypes.initSettingsEnd,\n    });\n  }\n\n  private async _initPreferences(\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ) {\n    try {\n      const { preferences, settingLocks } = await this._getPreferences(\n        accountId,\n        extensionId,\n      );\n      // TODO Remove the next line after rcv implement ui to manage password_instant\n      preferences.password_instant = false;\n      this.store.dispatch({\n        type: this.actionTypes.updateMeetingPreferences,\n        preferences,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.updateMeetingSettingLocks,\n        settingLocks,\n      });\n    } catch (errors) {\n      console.log('preference error:', errors);\n      // this._errorHandle(errors);\n    }\n  }\n\n  private async _initPersonalMeeting(\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ) {\n    try {\n      const meetingResult = await this._client.service\n        .platform()\n        .get('/rcvideo/v1/bridges', {\n          default: true,\n          accountId,\n          extensionId,\n        });\n      const meeting = await meetingResult.json();\n      this._savePersonalMeeting(meeting);\n    } catch (errors) {\n      console.error('fetch personal meeting error:', errors);\n      this.store.dispatch({\n        type: this.actionTypes.resetPersonalMeeting,\n      });\n      this._errorHandle(errors);\n    }\n  }\n\n  private async _initDelegators() {\n    try {\n      const result = await this._client.service\n        .platform()\n        .get('/rcvideo/v1/accounts/~/extensions/~/delegators');\n      const delegators = await result.json();\n      this.store.dispatch({\n        type: this.actionTypes.updateDelegatorList,\n        delegators,\n      });\n    } catch (errors) {\n      this._errorHandle(errors);\n    }\n  }\n\n  private _savePersonalMeeting(meeting: RcVideoAPI) {\n    this.store.dispatch({\n      type: this.actionTypes.savePersonalMeeting,\n      meeting,\n    });\n  }\n\n  saveAsDefaultSetting(meeting: RcVMeetingModel) {\n    const {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      notShowAgain,\n      waitingRoomMode,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHost: boolean;\n      isOnlyAuthUserJoin: boolean;\n      isOnlyCoworkersJoin: boolean;\n      allowScreenSharing: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      isMeetingSecret: boolean;\n      waitingRoomMode: RcvWaitingRoomModeProps;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      waitingRoomMode,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: updateInfo,\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  generateRandomPassword() {\n    return generateRandomPassword(10);\n  }\n\n  @proxify\n  async createMeeting(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this.isScheduling) return (this.createMeeting as any)._promise;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initCreating,\n      });\n\n      let meetingDetail: RcVideoAPI = pruneMeetingObject(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      if (!this.enableWaitingRoom) {\n        meetingDetail = omit([RCV_WAITTING_ROOM_API_KEYS], meetingDetail);\n      }\n\n      (this\n        .createMeeting as any)._promise = this._client.service\n        .platform()\n        .post('/rcvideo/v1/bridges', meetingDetail);\n      const meetingResult = await (this.createMeeting as any)._promise;\n\n      this.updateMeetingSettings({\n        ...meeting,\n        saveAsDefault: false,\n      });\n\n      // After Create\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n      // sync preferences changes to rcv backend\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting);\n      }\n      // this will also fetch preference from rcv backend\n      if (this._enableReloadAfterSchedule) {\n        await this._initMeeting(Number(this.currentUser.extensionId));\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      const newMeeting = await meetingResult.json();\n      this.store.dispatch({\n        type: this.actionTypes.created,\n      });\n\n      const meetingResponse = {\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetCreating,\n      });\n      this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.createMeeting as any)._promise;\n    }\n  }\n\n  async startMeeting(\n    meeting: RcVMeetingModel,\n    isAlertSuccess: boolean = true,\n  ): Promise<any> {\n    // When user click on button \"start\", client create bridge type=0, but doesn't send time-to-life for this bridge. Backend has default ttl = 24 hours.\n    return this.createMeeting(\n      {\n        ...meeting,\n        expiresIn: null,\n        type: RcVideoTypes.meeting,\n      },\n      { isAlertSuccess },\n    );\n  }\n\n  private async _getDialinNumbers(): Promise<string> {\n    const result = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/dial-in-numbers');\n    const { phoneNumbers } = (await result.json()) as RcVDialInNumberGET;\n    if (Array.isArray(phoneNumbers)) {\n      const defaultPhoneNumber = phoneNumbers.find((obj) => obj.default);\n      if (defaultPhoneNumber) {\n        return defaultPhoneNumber.phoneNumber;\n      }\n    }\n    return null;\n  }\n\n  private async _getPreferences(\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ): Promise<RcVPreferencesAPIResult> {\n    const res = await this._client.service\n      .platform()\n      .get(\n        `/rcvideo/v1/account/${accountId}/extension/${extensionId}/preferences`,\n        {\n          id: RCV_PREFERENCES_IDS,\n        },\n      );\n    const list: Array<RcVPreferenceDataItem> = await res.json();\n    const preferences: RcVPreferencesGET = {};\n    const settingLocks: RcVSettingLocksGET = {};\n\n    list.forEach(({ id, value, readOnly }) => {\n      preferences[id] = value;\n      settingLocks[id] = readOnly;\n    });\n    return { preferences, settingLocks };\n  }\n\n  @proxify\n  async getExtensionInfo(extensionId: string) {\n    if (Number(extensionId) === this.extensionId) {\n      return this._extensionInfo.info;\n    }\n    return this._client.account().extension(extensionId).get();\n  }\n\n  private _updatePreference(preferences: Partial<RcVPreferencesGET>) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences,\n    });\n  }\n\n  private async _saveSinglePreference(\n    preferenceId: keyof RcVPreferencesGET,\n    value: boolean,\n  ): Promise<void> {\n    return this._client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/account/~/extension/~/preferences/${preferenceId}`,\n      body: { value },\n    });\n  }\n\n  /**\n   * Determined the different between client and server, then save them to the server.\n   * @param preferences preference fileds in meeting object\n   * @param isOverwrite if true, dispatch updateMeetingPreferences on success\n   */\n  async savePreferencesChanges(\n    preferences: RcVPreferences,\n    isOverwrite = false,\n  ): Promise<void> {\n    const preferencesPayload = reversePreferences(\n      preferences,\n      this._isInstantMeeting,\n    );\n    type PreferenceEntries = [keyof RcVPreferencesGET, boolean];\n    const dirtyPreferences = Object.entries(preferencesPayload).filter(\n      (kvPairs): kvPairs is PreferenceEntries => {\n        const [preferenceId, newValue] = kvPairs as PreferenceEntries;\n        const oldValue = this.preferences[preferenceId];\n        const isLocked = this.settingLocks[preferenceId];\n        // hack for watingRoom, it will change locked option\n        return newValue !== oldValue && !isLocked;\n      },\n    );\n    try {\n      await Promise.all(\n        dirtyPreferences.map(([preferenceId, newValue]: PreferenceEntries) => {\n          return this._saveSinglePreference(preferenceId, newValue);\n        }),\n      );\n      if (isOverwrite) {\n        this._updatePreference(preferencesPayload);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async getMeeting(\n    meetingId: String,\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ) {\n    const result = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', {\n        shortId: meetingId,\n        accountId,\n        extensionId,\n      });\n    const meeting = await result.json();\n    return meeting;\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n      });\n\n      let meetingDetail: RcVideoAPI = pruneMeetingObject(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      if (!this.enableWaitingRoom) {\n        meetingDetail = omit([RCV_WAITTING_ROOM_API_KEYS], meetingDetail);\n      }\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n      const meetingResult = await this._client.service.platform().send({\n        method: 'PATCH',\n        url: `/rcvideo/v1/bridges/${meeting.id}`,\n        body: meetingDetail,\n      });\n\n      // After Update\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting, true);\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n\n      const newMeeting = await meetingResult.json();\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n      });\n\n      const meetingResponse = {\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this._savePersonalMeeting(newMeeting);\n      }\n      return meetingResponse;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n      });\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  private _initMeetingSettings(usePersonalMeetingId: boolean) {\n    if (usePersonalMeetingId) {\n      this.updateMeetingSettings({\n        ...this.personalVideoSetting,\n      });\n    } else {\n      this.updateMeetingSettings({\n        ...this.defaultVideoSetting,\n      });\n    }\n  }\n\n  @proxify\n  updateMeetingSettings(\n    meeting: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    let processedMeeting = meeting;\n    if (this.enableWaitingRoom) {\n      processedMeeting = {\n        ...meeting,\n        ...patchWaitingRoomRelated(\n          {\n            ...this.meeting,\n            ...meeting,\n          },\n          this.transformedPreferences,\n          true,\n        ),\n      };\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingSettings,\n      meeting: processedMeeting,\n      patch,\n    });\n    this._comparePreferences();\n  }\n\n  private _comparePreferences() {\n    this.store.dispatch({\n      type: this.actionTypes.saveMeetingPreferencesState,\n      isPreferencesChanged: comparePreferences(\n        this.transformedPreferences,\n        this.meeting,\n      ),\n    });\n  }\n\n  private async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !(await this._availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    }\n  }\n\n  get meeting(): RcVMeetingModel {\n    return this.state.meeting;\n  }\n\n  get personalMeeting(): RcVideoAPI {\n    return this._storage.getItem(this._personalVideoKey);\n  }\n\n  get extensionName(): string {\n    return this._extensionInfo.info && this._extensionInfo.info.name;\n  }\n\n  get extensionId(): number {\n    return this._extensionInfo.info.id;\n  }\n\n  get accountId(): number {\n    return this._accountInfo.id;\n  }\n\n  get brandName(): string {\n    return this._brand.name;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  // preferences directly from backend\n  get preferences(): RcVPreferencesGET {\n    return this.state.preferences;\n  }\n\n  get settingLocks(): RcVSettingLocksGET {\n    return this.state.settingLocks;\n  }\n\n  @selector\n  transformedPreferences: any = [\n    () => this._isInstantMeeting,\n    () => this.preferences,\n    (isInstantMeeting: boolean, preferences: RcVPreferencesGET) => {\n      return transformPreferences(preferences, isInstantMeeting);\n    },\n  ];\n\n  @selector\n  transformedSettingLocks: any = [\n    () => this._isInstantMeeting,\n    () => this.settingLocks,\n    (isInstantMeeting: boolean, settingLocks: RcVSettingLocksGET) => {\n      return transformSettingLocks(settingLocks, isInstantMeeting);\n    },\n  ];\n\n  @selector\n  personalVideoSetting: any = [\n    () => this.initialVideoSetting,\n    () => this.personalMeeting,\n    () => this.transformedPreferences,\n    () => this.transformedSettingLocks,\n    (\n      initialSetting: RcVMeetingModel,\n      personalMeeting: RcVideoAPI,\n      transformedPreferences: RcVPreferences,\n      transformedSettingLocks: RcVSettingLocks,\n    ) => {\n      if (!personalMeeting) {\n        return null;\n      }\n      const processedSettings = {\n        ...initialSetting,\n        ...personalMeeting,\n        ...getLockedPreferences(\n          transformedSettingLocks,\n          transformedPreferences,\n        ),\n        meetingPassword:\n          personalMeeting.meetingPassword || generateRandomPassword(10),\n        isMeetingPasswordValid: true, // assume personal meeting password is valid\n        id: personalMeeting.id,\n        usePersonalMeetingId: true,\n        settingLock: {\n          ...transformedSettingLocks,\n        },\n      } as RcVMeetingModel;\n      if (this.enableWaitingRoom) {\n        return {\n          ...processedSettings,\n          ...patchWaitingRoomRelated(processedSettings, transformedPreferences),\n        };\n      }\n      return processedSettings;\n    },\n  ];\n\n  @selector\n  defaultVideoSetting: any = [\n    () => this.initialVideoSetting,\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultVideoSetting\n        : null;\n      return savedSetting;\n    },\n    () => this.transformedPreferences,\n    () => this.transformedSettingLocks,\n    (\n      initialSetting: RcVMeetingModel,\n      savedSetting: Partial<RcVMeetingModel>,\n      transformedPreferences: RcVPreferences,\n      transformedSettingLocks: RcVSettingLocks,\n    ) => {\n      return {\n        ...initialSetting,\n        ...savedSetting,\n        ...transformedPreferences,\n        meetingPassword: generateRandomPassword(10),\n        isMeetingPasswordValid: true, // generated random password is valid\n        id: null,\n        usePersonalMeetingId: false,\n        settingLock: {\n          ...transformedSettingLocks,\n        },\n      } as RcVMeetingModel;\n    },\n  ];\n\n  @selector\n  initialVideoSetting: any = [\n    () => {\n      let extensionName = this.extensionName;\n      if (this.currentUser?.extensionId !== `${this.extensionId}`) {\n        extensionName = this.currentUser?.name;\n      }\n      return extensionName;\n    },\n    () => this.brandName,\n    () => getInitializedStartTime(),\n    () => this.currentUser,\n    (\n      extensionName: string,\n      brandName: string,\n      startTime: number,\n      currentUser: RcvDelegator,\n    ) => {\n      const topic = getTopic(extensionName, brandName);\n      return getDefaultVideoSettings({\n        topic,\n        startTime: new Date(startTime),\n        accountId: currentUser.accountId,\n        extensionId: currentUser.extensionId,\n      });\n    },\n  ];\n\n  get savedDefaultVideoSetting(): Partial<RcVMeetingModel> {\n    return this._storage.getItem(this._defaultVideoSettingKey);\n  }\n\n  get isInitializing(): boolean {\n    return this.state.videoStatus === videoStatus.initializing;\n  }\n\n  get isScheduling(): boolean {\n    return this.state.videoStatus === videoStatus.creating;\n  }\n\n  get showSaveAsDefault(): boolean {\n    return this._showSaveAsDefault;\n  }\n\n  get showAdminLock(): boolean {\n    return this._showAdminLock;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get enableWaitingRoom(): boolean {\n    return this._enableWaitingRoom;\n  }\n\n  get isPreferencesChanged(): boolean {\n    return this.state.isPreferencesChanged;\n  }\n\n  @computed(({ extensionId, accountId }: RcVideo) => [extensionId, accountId])\n  get loginUser(): RcvDelegator {\n    return {\n      name: ASSISTED_USERS_MYSELF,\n      id: `${this.extensionId}`,\n      extensionId: `${this.extensionId}`,\n      accountId: `${this.accountId}`,\n      isLoginUser: true,\n    };\n  }\n\n  @computed(({ state, loginUser }: RcVideo) => [state, loginUser])\n  get delegators(): RcvDelegator[] {\n    if (this.state.delegators.length === 0) {\n      return [];\n    }\n    return [this.loginUser, ...this.state.delegators];\n  }\n\n  get currentUser(): RcvDelegator {\n    return this.state.delegator || this.loginUser;\n  }\n}\n"],"file":"RcVideo.js"}