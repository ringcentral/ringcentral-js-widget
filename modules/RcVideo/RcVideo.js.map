{"version":3,"sources":["modules/RcVideo/RcVideo.ts"],"names":["RcVideo","deps","dep","optional","alert","client","extensionInfo","brand","storage","reducers","availabilityMonitor","meetingProvider","showSaveAsDefault","isInstantMeeting","enablePersonalMeeting","options","actionTypes","_alert","_client","_defaultVideoSettingKey","_personalMeetingKey","_extensionInfo","_brand","_storage","_availabilityMonitor","_showSaveAsDefault","_isInstantMeeting","_fetchPersonMeetingTimeout","_enablePersonalMeeting","_meetingProvider","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","isRCV","dispatch","type","resetSuccess","init","_initPersonalMeeting","_initMeeting","initSuccess","console","log","_getPreferences","preferences","meetingSettingLock","password_instant","updateMeetingPreferences","updateMeetingSettingLock","updateMeetingSettings","defaultVideoSetting","meetingPassword","isMeetingPasswordValid","personalMeeting","shortId","clearTimeout","initPersonalMeeting","meeting","savePersonalMeeting","error","warn","setTimeout","allowJoinBeforeHost","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","muteAudio","muteVideo","isMeetingSecret","notShowAgain","updateInfo","_saved","saveAsDefaultSetting","password","isSecret","isAlertSuccess","isScheduling","createMeeting","_promise","initCreating","saveAsDefault","service","platform","post","meetingResult","created","_getDialinNumbers","dialInNumber","savePreferencesChanges","info","message","meetingStatus","scheduledSuccess","json","meetingResponse","resetCreating","_errorHandle","expiresIn","RcVideoTypes","call","get","result","phoneNumbers","Array","isArray","defaultPhoneNumber","find","obj","phoneNumber","id","RCV_PREFERENCES_API_KEYS","res","list","forEach","value","readOnly","preferenceId","send","method","url","body","isOverwrite","preferencesPayload","dirtyPreferences","Object","entries","filter","kvPairs","newValue","oldValue","Promise","all","map","_saveSinglePreference","updatePreference","meetingId","updatedSuccess","newMeeting","patch","_comparePreferences","saveMeetingPreferencesState","isPreferencesChanged","errors","MeetingErrors","warning","response","clone","errorCode","permissionName","danger","insufficientPermissions","payload","checkIfHAError","internalError","state","name","status","getItem","creatingStatus","createStatus","creating","RcModule","proxify","background","selector","initialVideoSetting","savedSetting","savedDefaultVideoSetting","initialSetting","settingLock","extensionName","brandName","startTime","topic","setting","Date"],"mappings":"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","sourcesContent":["import Client from 'ringcentral-client';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport background from '../../lib/background';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport { MeetingErrors } from '../Meeting';\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\n\nimport actionTypes, { RcVideoActionTypes } from './actionTypes';\nimport getRcVReducer, {\n  getDefaultVideoSettingReducer,\n  getPersonalMeetingReducer,\n} from './getRcVReducer';\n\nimport {\n  getDefaultVideoSettings,\n  validatePasswordSettings,\n  generateRandomPassword,\n  getTopic,\n  pruneMeetingObject,\n  RcVideoTypes,\n  transformPreferences,\n  reversePreferences,\n  comparePreferences,\n  transformMeetingSettingLock,\n  RCV_PREFERENCES_API_KEYS,\n} from './videoHelper';\nimport {\n  RcVMeetingModel,\n  RcVPreferencesGET,\n  RcVPreferencesPATCH,\n  RcVPreferences,\n  RcVDialInNumberGET,\n  RcVMeetingSettingLockGET,\n  RcVMeetingSettingLock,\n  RcVPreferencesAPIResult,\n  RcVPreferencesValueModel,\n} from '../../models/rcv.model';\n\nimport createStatus from './createStatus';\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'Brand',\n    'Storage',\n    'ExtensionInfo',\n    'MeetingProvider',\n    { dep: 'RcVideoOptions', optional: true },\n    { dep: 'AvailabilityMonitor', optional: true },\n  ],\n})\nexport class RcVideo extends RcModule<Record<string, any>, RcVideoActionTypes> {\n  // TODO: add state interface\n  private _alert: any;\n  private _client: Client;\n  private _defaultVideoSettingKey: string;\n  private _personalMeetingKey: string;\n  private _extensionInfo: any;\n  private _brand: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _showSaveAsDefault: boolean;\n  private _isInstantMeeting: boolean;\n  private _fetchPersonMeetingTimeout: any;\n  private _enablePersonalMeeting: boolean;\n\n  private _meetingProvider: any;\n  _reducer: any;\n\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    brand,\n    storage,\n    reducers,\n    availabilityMonitor,\n    meetingProvider,\n    showSaveAsDefault = false,\n    isInstantMeeting = false,\n    enablePersonalMeeting = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._meetingProvider = meetingProvider;\n    this._brand = brand;\n    this._storage = storage;\n    this._reducer = getRcVReducer(this.actionTypes, reducers);\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._isInstantMeeting = isInstantMeeting;\n    this._availabilityMonitor = availabilityMonitor;\n    this._defaultVideoSettingKey = 'defaultVideoSetting';\n    this._personalMeetingKey = 'personalMeeting';\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultVideoSettingKey,\n        reducer: getDefaultVideoSettingReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalMeetingKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this.pending &&\n      this._extensionInfo.ready &&\n      this._storage.ready &&\n      this._meetingProvider.ready &&\n      this._meetingProvider.isRCV &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  _shouldReset() {\n    return (\n      this.ready &&\n      (!this._extensionInfo.ready ||\n        !this._storage.ready ||\n        !this._meetingProvider.ready ||\n        !this._meetingProvider.isRCV ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready))\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting();\n    }\n\n    await this._initMeeting();\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    console.log('init meeting');\n    await this._initMeeting();\n  }\n\n  @proxify\n  async reload() {\n    await this._initMeeting();\n  }\n\n  private async _initMeeting() {\n    const { preferences, meetingSettingLock } = await this._getPreferences();\n    // TODO Remove the next line after rcv implement ui to manage password_instant\n    preferences.password_instant = false;\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingSettingLock,\n      meetingSettingLock,\n    });\n    this.updateMeetingSettings({\n      ...this.defaultVideoSetting,\n      meetingPassword: generateRandomPassword(10),\n      isMeetingPasswordValid: true, // generated random password is valid\n    });\n  }\n\n  async _initPersonalMeeting() {\n    if (this.personalMeeting && this.personalMeeting.shortId) {\n      return;\n    }\n    if (this._fetchPersonMeetingTimeout) {\n      clearTimeout(this._fetchPersonMeetingTimeout);\n    }\n    try {\n      const meeting = await this.initPersonalMeeting();\n      this.store.dispatch({\n        type: this.actionTypes.savePersonalMeeting,\n        meeting,\n      });\n    } catch (e) {\n      console.error('fetch default meeting error:', e);\n      console.warn('retry after 10s');\n      this._fetchPersonMeetingTimeout = setTimeout(() => {\n        this._initPersonalMeeting();\n      }, 10000);\n    }\n  }\n\n  saveAsDefaultSetting(meeting: RcVMeetingModel) {\n    const {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      notShowAgain,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHost: boolean;\n      isOnlyAuthUserJoin: boolean;\n      isOnlyCoworkersJoin: boolean;\n      allowScreenSharing: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      isMeetingSecret: boolean;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: updateInfo,\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  generateRandomPassword() {\n    return generateRandomPassword(10);\n  }\n\n  @proxify\n  async createMeeting(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true } = {},\n  ) {\n    if (this.isScheduling) return (this.createMeeting as any)._promise;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initCreating,\n      });\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this\n        .createMeeting as any)._promise = this._client.service\n        .platform()\n        .post('/rcvideo/v1/bridges', pruneMeetingObject(meeting));\n      const meetingResult = await (this.createMeeting as any)._promise;\n\n      this.store.dispatch({\n        type: this.actionTypes.created,\n        meeting,\n      });\n\n      this.updateMeetingSettings({\n        ...meeting,\n        saveAsDefault: false,\n      });\n\n      // After Create\n      const dialInNumber = await this._getDialinNumbers();\n      // sync preferences changes to rcv backend\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting as RcVPreferences);\n      }\n      // this will also fetch preference from rcv backend\n      await this._initMeeting();\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      const meetingResponse = {\n        extensionInfo: this._extensionInfo.info,\n        dialInNumber,\n        meeting: { ...meeting, ...(await meetingResult.json()) },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetCreating,\n      });\n      this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.createMeeting as any)._promise;\n    }\n  }\n\n  async instantMeeting(meeting: RcVMeetingModel): Promise<any> {\n    return this.createMeeting({\n      ...meeting,\n      expiresIn: 86400,\n      type: RcVideoTypes.call,\n    });\n  }\n\n  private async _getDialinNumbers(): Promise<string> {\n    const result = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/dial-in-numbers');\n    const { phoneNumbers } = (await result.json()) as RcVDialInNumberGET;\n    if (Array.isArray(phoneNumbers)) {\n      const defaultPhoneNumber = phoneNumbers.find((obj) => obj.default);\n      if (defaultPhoneNumber) {\n        return defaultPhoneNumber.phoneNumber;\n      }\n    }\n    return null;\n  }\n\n  private async _getPreferences(): Promise<RcVPreferencesAPIResult> {\n    const res = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/account/~/extension/~/preferences', {\n        id: RCV_PREFERENCES_API_KEYS,\n      });\n    const list: Array<RcVPreferencesValueModel> = await res.json();\n    const preferences: RcVPreferencesGET = {};\n    const meetingSettingLock: RcVMeetingSettingLockGET = {};\n\n    list.forEach(({ id, value, readOnly }) => {\n      preferences[id] = value;\n      meetingSettingLock[id] = readOnly;\n    });\n    return { preferences, meetingSettingLock };\n  }\n\n  updatePreference(preferences: RcVPreferencesPATCH) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences,\n    });\n  }\n\n  private async _saveSinglePreference(\n    preferenceId: keyof RcVPreferencesGET,\n    value: boolean,\n  ): Promise<void> {\n    return this._client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/account/~/extension/~/preferences/${preferenceId}`,\n      body: { value },\n    });\n  }\n\n  /**\n   * Determined the different between client and server, then save them to the server.\n   * @param preferences preference fileds in meeting object\n   * @param isOverwrite if true, dispatch updateMeetingPreferences on success\n   */\n  async savePreferencesChanges(\n    preferences: RcVPreferences,\n    isOverwrite = false,\n  ): Promise<void> {\n    const preferencesPayload = reversePreferences(\n      preferences,\n      this._isInstantMeeting,\n    );\n    type PreferenceEntries = [keyof RcVPreferencesGET, boolean];\n    const dirtyPreferences = Object.entries(preferencesPayload).filter(\n      (kvPairs): kvPairs is PreferenceEntries => {\n        const [preferenceId, newValue] = kvPairs as PreferenceEntries;\n        const oldValue = this.preferences[preferenceId];\n        return newValue !== oldValue;\n      },\n    );\n    try {\n      await Promise.all(\n        dirtyPreferences.map(([preferenceId, newValue]: PreferenceEntries) => {\n          return this._saveSinglePreference(preferenceId, newValue);\n        }),\n      );\n      if (isOverwrite) {\n        this.updatePreference(preferencesPayload);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async getMeeting(meetingId: String) {\n    const meetingResult = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', { shortId: meetingId });\n    return meetingResult.json();\n  }\n\n  @proxify\n  async initPersonalMeeting() {\n    const meetingResult = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', { default: true });\n    return meetingResult.json();\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = false } = {},\n  ) {\n    try {\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n      const meetingResult = await this._client.service.platform().send({\n        method: 'PATCH',\n        url: `/rcvideo/v1/bridges/${meeting.id}`,\n        body: meeting,\n      });\n\n      // After Update\n      const dialInNumber = await this._getDialinNumbers();\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting as RcVPreferences, true);\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      const newMeeting = await meetingResult.json();\n      const meetingResponse = {\n        extensionInfo: this._extensionInfo.info,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this.store.dispatch({\n          type: this.actionTypes.savePersonalMeeting,\n          meeting: newMeeting,\n        });\n      }\n      return meetingResponse;\n    } catch (errors) {\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  updateMeetingSettings(meeting: RcVMeetingModel, patch: boolean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingSettings,\n      meeting,\n      patch,\n    });\n    this._comparePreferences();\n  }\n\n  private _comparePreferences() {\n    const { preferences, meeting } = this;\n    this.store.dispatch({\n      type: this.actionTypes.saveMeetingPreferencesState,\n      isPreferencesChanged: comparePreferences(\n        transformPreferences(preferences, this._isInstantMeeting),\n        meeting,\n      ),\n    });\n  }\n\n  private async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !(await this._availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    }\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get extensionName() {\n    return this._extensionInfo.info && this._extensionInfo.info.name;\n  }\n\n  get brandName() {\n    return this._brand.name;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  // preferences directly from backend\n  get preferences(): RcVPreferencesGET {\n    return this.state.preferences;\n  }\n\n  get meetingSettingLock(): RcVMeetingSettingLock {\n    return this.state.meetingSettingLock;\n  }\n\n  @selector\n  defaultVideoSetting: any = [\n    () => this.initialVideoSetting,\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultVideoSetting\n        : {};\n      return savedSetting;\n    },\n    () => this._isInstantMeeting,\n    () => this.preferences,\n    () => this.meetingSettingLock,\n    (\n      initialSetting,\n      savedSetting,\n      isInstantMeeting,\n      preferences,\n      meetingSettingLock,\n    ) => {\n      return {\n        ...initialSetting,\n        ...savedSetting,\n        ...transformPreferences(preferences, isInstantMeeting),\n        settingLock: {\n          ...transformMeetingSettingLock(meetingSettingLock, isInstantMeeting),\n        },\n      };\n    },\n  ];\n\n  @selector\n  initialVideoSetting: any = [\n    () => this.extensionName,\n    () => this.brandName,\n    () => getInitializedStartTime(),\n    (extensionName, brandName, startTime) => {\n      const topic = getTopic(extensionName, brandName);\n      const setting = getDefaultVideoSettings({\n        topic,\n        startTime: new Date(startTime),\n      });\n      return setting;\n    },\n  ];\n\n  get savedDefaultVideoSetting() {\n    return this._storage.getItem(this._defaultVideoSettingKey);\n  }\n\n  get isScheduling() {\n    return this.state.creatingStatus === createStatus.creating;\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault;\n  }\n\n  get isPreferencesChanged() {\n    return this.state.isPreferencesChanged;\n  }\n\n  get personalMeeting() {\n    return this._storage.getItem(this._personalMeetingKey);\n  }\n}\n"],"file":"RcVideo.js"}