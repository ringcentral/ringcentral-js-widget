{"version":3,"sources":["modules/RcVideo/RcVideo.ts"],"names":["migrateJBH","setting","Object","keys","length","allowJoinBeforeHost","allowJoinBeforeHostV2","DEFAULT_JBH","RcVideo","deps","dep","optional","alert","client","showSaveAsDefault","extensionInfo","brand","storage","reducers","conference","availabilityMonitor","enablePersonalMeeting","options","actionTypes","_alert","_client","_defaultVideoSettingKey","_lastVideoSettingKey","_personalMeetingKey","_extensionInfo","_conference","_brand","_storage","_availabilityMonitor","_showSaveAsDefault","_fetchPersonMeetingTimeout","_enablePersonalMeeting","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","dispatch","type","resetSuccess","init","_initPersonalMeeting","_initMeeting","initSuccess","console","log","updateMeetingSettings","defaultVideoSetting","meetingPassword","isMeetingPasswordValid","personalMeeting","shortId","clearTimeout","fetchPersonalMeeting","meeting","savePersonalMeeting","error","warn","setTimeout","muteAudio","muteVideo","isMeetingSecret","notShowAgain","updateInfo","_saved","saveAsDefaultSetting","saveLastVideoSetting","password","isSecret","isAlertSuccess","isScheduling","createMeeting","_promise","initCreating","saveAsDefault","service","platform","post","meetingResult","created","info","message","meetingStatus","scheduledSuccess","meetingResponse","dialInNumber","json","resetCreating","_errorHandle","expiresIn","RcVideoTypes","call","meetingId","get","send","method","url","id","body","updatedSuccess","newMeeting","patch","errors","MeetingErrors","all","warning","apiResponse","errorCode","permissionName","danger","insufficientPermissions","payload","checkIfHAError","internalError","state","name","status","getItem","creatingStatus","createStatus","creating","RcModule","proxify","background","selector","initialVideoSetting","savedSetting","savedDefaultVideoSetting","lastVideoSetting","initialSetting","extensionName","brandName","startTime","topic","Date"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAMA;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAIA,OAAO,IAAIC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,MAApC,EAA4C;AAC1CH,IAAAA,OAAO,CAACI,mBAAR,GACE,OAAOJ,OAAO,CAACK,qBAAf,KAAyC,SAAzC,GACIL,OAAO,CAACK,qBADZ,GAEIC,wBAHN;AAIA,WAAON,OAAO,CAACK,qBAAf;AACD;;AACD,SAAOL,OAAP;AACD;;IAcYO,O,WAZZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,OADI,EAEJ,QAFI,EAGJ,eAHI,EAIJ,OAJI,EAKJ,SALI,EAMJ;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GANI,EAOJ;AAAED,IAAAA,GAAG,EAAE,gBAAP;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GAPI,EAQJ;AAAED,IAAAA,GAAG,EAAE,qBAAP;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GARI;AADA,CAAP,C;;;;;AA6BC,yBAYG;AAAA;;AAAA,QAXDC,KAWC,QAXDA,KAWC;AAAA,QAVDC,MAUC,QAVDA,MAUC;AAAA,QATDC,iBASC,QATDA,iBASC;AAAA,QARDC,aAQC,QARDA,aAQC;AAAA,QAPDC,KAOC,QAPDA,KAOC;AAAA,QANDC,OAMC,QANDA,OAMC;AAAA,QALDC,QAKC,QALDA,QAKC;AAAA,QAJDC,UAIC,QAJDA,UAIC;AAAA,QAHDC,mBAGC,QAHDA,mBAGC;AAAA,qCAFDC,qBAEC;AAAA,QAFDA,qBAEC,sCAFuB,KAEvB;AAAA,QADEC,OACF;;AAAA;;AACD,8DACKA,OADL;AAEEC,MAAAA,WAAW,EAAED,OAAO,CAACC,WAAR,IAAuBA;AAFtC;AADC,UA5BKC,MA4BL;AAAA,UA3BKC,OA2BL;AAAA,UA1BKC,uBA0BL;AAAA,UAzBKC,oBAyBL;AAAA,UAxBKC,mBAwBL;AAAA,UAvBKC,cAuBL;AAAA,UAtBKC,WAsBL;AAAA,UArBKC,MAqBL;AAAA,UApBKC,QAoBL;AAAA,UAnBKC,oBAmBL;AAAA,UAlBKC,kBAkBL;AAAA,UAjBKC,0BAiBL;AAAA,UAhBKC,sBAgBL;AAAA,UAdHC,QAcG;;AAAA;;AAAA;;AAKD,UAAKb,MAAL,GAAcZ,KAAd;AACA,UAAKa,OAAL,GAAeZ,MAAf;AACA,UAAKgB,cAAL,GAAsBd,aAAtB;AACA,UAAKgB,MAAL,GAAcf,KAAd;AACA,UAAKgB,QAAL,GAAgBf,OAAhB;AACA,UAAKa,WAAL,GAAmBX,UAAnB;AACA,UAAKkB,QAAL,GAAgB,+BAAc,MAAKd,WAAnB,EAAgCL,QAAhC,CAAhB;AACA,UAAKgB,kBAAL,GAA0BpB,iBAA1B;AACA,UAAKmB,oBAAL,GAA4Bb,mBAA5B;AACA,UAAKM,uBAAL,GAA+B,qBAA/B;AACA,UAAKC,oBAAL,GAA4B,kBAA5B;AACA,UAAKC,mBAAL,GAA2B,iBAA3B;AACA,UAAKQ,sBAAL,GAA8Bf,qBAA9B;;AACA,QAAI,MAAKa,kBAAT,EAA6B;AAC3B,YAAKF,QAAL,CAAcM,eAAd,CAA8B;AAC5BC,QAAAA,GAAG,EAAE,MAAKb,uBADkB;AAE5Bc,QAAAA,OAAO,EAAE,kDAA8B,MAAKjB,WAAnC;AAFmB,OAA9B;AAID,KALD,MAKO;AACL,YAAKS,QAAL,CAAcM,eAAd,CAA8B;AAC5BC,QAAAA,GAAG,EAAE,MAAKZ,oBADkB;AAE5Ba,QAAAA,OAAO,EAAE,+CAA2B,MAAKjB,WAAhC;AAFmB,OAA9B;AAID;;AACD,QAAI,MAAKa,sBAAT,EAAiC;AAC/B,YAAKJ,QAAL,CAAcM,eAAd,CAA8B;AAC5BC,QAAAA,GAAG,EAAE,MAAKX,mBADkB;AAE5BY,QAAAA,OAAO,EAAE,8CAA0B,MAAKjB,WAA/B;AAFmB,OAA9B;AAID;;AAlCA;AAmCF;;;;iCAEY;AAAA;;AACX,WAAKkB,KAAL,CAAWC,SAAX,CAAqB;AAAA,eAAM,MAAI,CAACC,cAAL,EAAN;AAAA,OAArB;AACD;;;qCAEgB;AACf,UAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,aAAKC,KAAL;AACD,OAFD,MAEO,IAAI,KAAKC,YAAL,EAAJ,EAAyB;AAC9B,aAAKC,MAAL;AACD;AACF;;;kCAEa;AACZ,aACE,KAAKC,OAAL,IACA,KAAKnB,cAAL,CAAoBoB,KADpB,IAEA,KAAKjB,QAAL,CAAciB,KAFd,KAGC,CAAC,KAAKhB,oBAAN,IAA8B,KAAKA,oBAAL,CAA0BgB,KAHzD,CADF;AAMD;;;mCAEc;AACb,aACE,KAAKA,KAAL,IACA,CAAC,KAAKpB,cAAL,CAAoBoB,KADrB,IAEA,CAAC,KAAKjB,QAAL,CAAciB,KAFf,KAGC,KAAKhB,oBAAL,IAA6B,CAAC,KAAKA,oBAAL,CAA0BgB,KAHzD,CADF;AAMD;;;6BAEQ;AACP,WAAKR,KAAL,CAAWS,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiB6B;AADL,OAApB;AAGD;;;;;;;;;AAIC,qBAAKX,KAAL,CAAWS,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiB8B;AADL,iBAApB;;qBAII,KAAKjB,sB;;;;;;uBACD,KAAKkB,oBAAL,E;;;AAGR,qBAAKC,YAAL;;AAEA,qBAAKd,KAAL,CAAWS,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiBiC;AADL,iBAApB;;;;;;;;;;;;;;;;AAKF;;;;;;;2BAKO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,WAAKH,YAAL;AACD;;;6BAGQ;AACP,WAAKA,YAAL;AACD;;;mCAEsB;AACrB,WAAKI,qBAAL,iCACK,KAAKC,mBADV;AAEEC,QAAAA,eAAe,EAAE,yCAAuB,EAAvB,CAFnB;AAGE;AACAC,QAAAA,sBAAsB,EAAE;AAJ1B;AAMD;;;;;;;;;;;;qBAGK,KAAKC,eAAL,CAAqBC,O;;;;;;;;AAGzB,oBAAI,KAAK7B,0BAAT,EAAqC;AACnC8B,kBAAAA,YAAY,CAAC,KAAK9B,0BAAN,CAAZ;AACD;;;;uBAEuB,KAAK+B,oBAAL,E;;;AAAhBC,gBAAAA,O;AACN,qBAAK1B,KAAL,CAAWS,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiB6C,mBADL;AAElBD,kBAAAA,OAAO,EAAPA;AAFkB,iBAApB;;;;;;;AAKAV,gBAAAA,OAAO,CAACY,KAAR,CAAc,8BAAd;AACAZ,gBAAAA,OAAO,CAACa,IAAR,CAAa,iBAAb;AACA,qBAAKnC,0BAAL,GAAkCoC,UAAU,CAAC,YAAM;AACjD,kBAAA,MAAI,CAACjB,oBAAL;AACD,iBAF2C,EAEzC,KAFyC,CAA5C;;;;;;;;;;;;;;;;;;yCAMiBa,O,EAAS;AAAA,UAE1B9D,mBAF0B,GAOxB8D,OAPwB,CAE1B9D,mBAF0B;AAAA,UAG1BmE,SAH0B,GAOxBL,OAPwB,CAG1BK,SAH0B;AAAA,UAI1BC,SAJ0B,GAOxBN,OAPwB,CAI1BM,SAJ0B;AAAA,UAK1BC,eAL0B,GAOxBP,OAPwB,CAK1BO,eAL0B;AAAA,UAM1BC,YAN0B,GAOxBR,OAPwB,CAM1BQ,YAN0B;AAQ5B,UAAMC,UAML,GAAG;AACFtE,QAAAA,qBAAqB,EAAED,mBADrB;AAEFmE,QAAAA,SAAS,EAATA,SAFE;AAGFC,QAAAA,SAAS,EAATA,SAHE;AAIFC,QAAAA,eAAe,EAAfA;AAJE,OANJ;;AAYA,UAAIC,YAAJ,EAAkB;AAChBC,QAAAA,UAAU,CAACC,MAAX,GAAoBF,YAApB;AACD;;AACD,WAAKlC,KAAL,CAAWS,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiBuD,oBADL;AAElBX,QAAAA,OAAO,EAAES;AAFS,OAApB;AAID;;;yCAEoBT,O,EAAS;AAAA,UAE1B9D,mBAF0B,GAMxB8D,OANwB,CAE1B9D,mBAF0B;AAAA,UAG1BmE,SAH0B,GAMxBL,OANwB,CAG1BK,SAH0B;AAAA,UAI1BC,SAJ0B,GAMxBN,OANwB,CAI1BM,SAJ0B;AAAA,UAK1BC,eAL0B,GAMxBP,OANwB,CAK1BO,eAL0B;AAO5B,UAAMzE,OAKL,GAAG;AACFK,QAAAA,qBAAqB,EAAED,mBADrB;AAEFmE,QAAAA,SAAS,EAATA,SAFE;AAGFC,QAAAA,SAAS,EAATA,SAHE;AAIFC,QAAAA,eAAe,EAAfA;AAJE,OALJ;AAWA,WAAKjC,KAAL,CAAWS,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiBwD,oBADL;AAElBZ,QAAAA,OAAO,EAAElE;AAFS,OAApB;AAID;;;6CAEwB+E,Q,EAAkBC,Q,EAA4B;AACrE,aAAO,2CAAyBD,QAAzB,EAAmCC,QAAnC,CAAP;AACD;;;6CAEwB;AACvB,aAAO,yCAAuB,EAAvB,CAAP;AACD;;;;qGAGmBd,O;;;;;;;;;;;;;;mFAAqC,E,+BAA1Be,c,EAAAA,c,qCAAiB,I;;qBAC1C,KAAKC,Y;;;;;kDAAsB,KAAKC,aAAN,CAA4BC,Q;;;;AAExD,qBAAK5C,KAAL,CAAWS,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiB+D;AADL,iBAApB;;AAIA,oBAAI,KAAKpD,kBAAL,IAA2BiC,OAAO,CAACoB,aAAvC,EAAsD;AACpD,uBAAKT,oBAAL,CAA0BX,OAA1B;AACD;;AAEA,qBACEiB,aADH,CACyBC,QADzB,GACoC,KAAK5D,OAAL,CAAa+D,OAAb,CACjCC,QADiC,GAEjCC,IAFiC,CAE5B,qBAF4B,EAEL,qCAAmBvB,OAAnB,CAFK,CADpC;;uBAI6B,KAAKiB,aAAN,CAA4BC,Q;;;AAAlDM,gBAAAA,a;AAEN,qBAAKlD,KAAL,CAAWS,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiBqE,OADL;AAElBzB,kBAAAA,OAAO,EAAPA;AAFkB,iBAApB;AAKA,qBAAKY,oBAAL,CAA0BZ,OAA1B;AACA,qBAAKR,qBAAL,iCAAgCQ,OAAhC;AAAyCoB,kBAAAA,aAAa,EAAE;AAAxD;;AACA,qBAAKhC,YAAL;;AAEA,oBAAI2B,cAAJ,EAAoB;AAClBX,kBAAAA,UAAU,CAAC,YAAM;AACf,oBAAA,MAAI,CAAC/C,MAAL,CAAYqE,IAAZ,CAAiB;AACfC,sBAAAA,OAAO,EAAEC,0BAAcC;AADR,qBAAjB;AAGD,mBAJS,EAIP,EAJO,CAAV;AAKD;;AAEKC,gBAAAA,e,GAAkB;AACtBlF,kBAAAA,aAAa,EAAE,KAAKc,cAAL,CAAoBgE,IADb;AAEtBK,kBAAAA,YAAY,EAAE,KAAKpE,WAAL,IAAoB,KAAKA,WAAL,CAAiBoE,YAF7B;AAGtB/B,kBAAAA,OAAO,kCAAOA,OAAP,GAAmBwB,aAAa,CAACQ,IAAd,EAAnB;AAHe,iB;kFAOnBF,e,GACA9B,O;;;;;AAGL,qBAAK1B,KAAL,CAAWS,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiB6E;AADL,iBAApB;;AAGA,qBAAKC,YAAL;;kDACO,I;;;;AAEP,uBAAQ,KAAKjB,aAAN,CAA4BC,QAAnC;;;;;;;;;;;;;;;;;;;;sGAIiBlB,O;;;;;kDACZ,KAAKiB,aAAL,iCACFjB,OADE;AAELmC,kBAAAA,SAAS,EAAE,KAFN;AAGLnD,kBAAAA,IAAI,EAAEoD,0BAAaC;AAHd,mB;;;;;;;;;;;;;;;;;;;kGAQQC,S;;;;;;;uBACa,KAAKhF,OAAL,CAAa+D,OAAb,CACzBC,QADyB,GAEzBiB,GAFyB,CAErB,qBAFqB,EAEE;AAAE1C,kBAAAA,OAAO,EAAEyC;AAAX,iBAFF,C;;;AAAtBd,gBAAAA,a;kDAGCA,aAAa,CAACQ,IAAd,E;;;;;;;;;;;;;;;;;;;;;;;;;;uBAKqB,KAAK1E,OAAL,CAAa+D,OAAb,CACzBC,QADyB,GAEzBiB,GAFyB,CAErB,qBAFqB,EAEE;AAAE,6BAAS;AAAX,iBAFF,C;;;AAAtBf,gBAAAA,a;kDAGCA,aAAa,CAACQ,IAAd,E;;;;;;;;;;;;;;;;;;;qGAIWM,S,EAAWtC,O;;;;;;;;;;;;;;;mFAAsC,E,+BAA3Be,c,EAAAA,c,qCAAiB,K;;;AAEvD,oBAAI,KAAKhD,kBAAL,IAA2BiC,OAAO,CAACoB,aAAvC,EAAsD;AACpD,uBAAKT,oBAAL,CAA0BX,OAA1B;AACD;;;uBAC2B,KAAK1C,OAAL,CAAa+D,OAAb,CAAqBC,QAArB,GAAgCkB,IAAhC,CAAqC;AAC/DC,kBAAAA,MAAM,EAAE,OADuD;AAE/DC,kBAAAA,GAAG,gCAAyB1C,OAAO,CAAC2C,EAAjC,CAF4D;AAG/DC,kBAAAA,IAAI,EAAE5C;AAHyD,iBAArC,C;;;AAAtBwB,gBAAAA,a;;AAMN,oBAAIT,cAAJ,EAAoB;AAClBX,kBAAAA,UAAU,CAAC,YAAM;AACf,oBAAA,MAAI,CAAC/C,MAAL,CAAYqE,IAAZ,CAAiB;AACfC,sBAAAA,OAAO,EAAEC,0BAAciB;AADR,qBAAjB;AAGD,mBAJS,EAIP,EAJO,CAAV;AAKD;;AACKC,gBAAAA,U,GAAatB,aAAa,CAACQ,IAAd,E;AACbF,gBAAAA,e,GAAkB;AACtBlF,kBAAAA,aAAa,EAAE,KAAKc,cAAL,CAAoBgE,IADb;AAEtBK,kBAAAA,YAAY,EAAE,KAAKpE,WAAL,IAAoB,KAAKA,WAAL,CAAiBoE,YAF7B;AAGtB/B,kBAAAA,OAAO,kCAAOA,OAAP,GAAmB8C,UAAnB;AAHe,iB;;AAKxB,oBAAI,KAAKlD,eAAL,IAAwBkD,UAAU,CAACH,EAAX,KAAkB,KAAK/C,eAAL,CAAqB+C,EAAnE,EAAuE;AACrE,uBAAKrE,KAAL,CAAWS,QAAX,CAAoB;AAClBC,oBAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiB6C,mBADL;AAElBD,oBAAAA,OAAO,EAAE8C;AAFS,mBAApB;AAID;;kDACMhB,e;;;;;;AAEP,qBAAKI,YAAL;;kDACO,I;;;;;;;;;;;;;;;;;;0CAKWlC,O,EAAiD;AAAA,UAAvB+C,KAAuB,uEAAN,IAAM;AACrE,WAAKzE,KAAL,CAAWS,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAK5B,WAAL,CAAiBoC,qBADL;AAElBQ,QAAAA,OAAO,EAAPA,OAFkB;AAGlB+C,QAAAA,KAAK,EAALA;AAHkB,OAApB;AAKD;;;iCAEoBC,M,EAAa;AAChC,UAAIA,MAAM,YAAYC,sBAAtB,EAAqC;AAAA,mDACfD,MAAM,CAACE,GADQ;AAAA;;AAAA;AACnC,8DAAgC;AAAA,gBAArBhD,KAAqB;;AAC9B,iBAAK7C,MAAL,CAAY8F,OAAZ,CAAoBjD,KAApB;AACD;AAHkC;AAAA;AAAA;AAAA;AAAA;AAIpC,OAJD,MAIO,IAAI8C,MAAM,IAAIA,MAAM,CAACI,WAArB,EAAkC;AAAA,oCACDJ,MAAM,CAACI,WAAP,CAAmBpB,IAAnB,EADC;AAAA,YAC/BqB,SAD+B,yBAC/BA,SAD+B;AAAA,YACpBC,cADoB,yBACpBA,cADoB;;AAEvC,YAAID,SAAS,KAAK,yBAAd,IAA2CC,cAA/C,EAA+D;AAC7D,eAAKjG,MAAL,CAAYkG,MAAZ,CAAmB;AACjB5B,YAAAA,OAAO,EAAEC,0BAAc4B,uBADN;AAEjBC,YAAAA,OAAO,EAAE;AACPH,cAAAA,cAAc,EAAdA;AADO;AAFQ,WAAnB;AAMD,SAPD,MAOO,IACL,CAAC,KAAKxF,oBAAN,IACA,CAAC,KAAKA,oBAAL,CAA0B4F,cAA1B,CAAyCV,MAAzC,CAFI,EAGL;AACA,eAAK3F,MAAL,CAAYkG,MAAZ,CAAmB;AACjB5B,YAAAA,OAAO,EAAEC,0BAAc+B;AADN,WAAnB;AAGD;AACF;AACF;;;wBAEa;AACZ,aAAO,KAAKC,KAAL,CAAW5D,OAAlB;AACD;;;wBAEmB;AAClB,aAAO,KAAKtC,cAAL,CAAoBgE,IAApB,IAA4B,KAAKhE,cAAL,CAAoBgE,IAApB,CAAyBmC,IAA5D;AACD;;;wBAEe;AACd,aAAO,KAAKjG,MAAL,CAAYiG,IAAnB;AACD;;;wBAEY;AACX,aAAO,KAAKD,KAAL,CAAWE,MAAlB;AACD;;;wBAkC8B;AAC7B,UAAMhI,OAAO,GAAG,KAAK+B,QAAL,CAAckG,OAAd,CAAsB,KAAKxG,uBAA3B,CAAhB;;AACA,aAAO1B,UAAU,CAACC,OAAD,CAAjB;AACD;;;wBAEsB;AACrB,UAAMA,OAAO,GAAG,KAAK+B,QAAL,CAAckG,OAAd,CAAsB,KAAKvG,oBAA3B,CAAhB;;AACA,aAAO3B,UAAU,CAACC,OAAD,CAAjB;AACD;;;wBAEkB;AACjB,aAAO,KAAK8H,KAAL,CAAWI,cAAX,KAA8BC,yBAAaC,QAAlD;AACD;;;wBAEuB;AACtB,aAAO,CAAC,CAAC,KAAKnG,kBAAd;AACD;;;wBAEqB;AACpB,aAAO,KAAKF,QAAL,CAAckG,OAAd,CAAsB,KAAKtG,mBAA3B,CAAP;AACD;;;;EA9b0B0G,qB,mEAsG1BC,mB,0IAqBAC,sB,2IAMAD,mB,oJAiGAA,mB,wJAgEAA,mB,+JAQAA,mB,kKAQAA,mB,mKAsCAA,mB,uLAkDAE,kB;;;;;;;WAC0B,CACzB;AAAA,aAAM,MAAI,CAACC,mBAAX;AAAA,KADyB,EAEzB,YAAM;AACJ,UAAMC,YAAY,GAAG,MAAI,CAACzG,kBAAL,GACjB,MAAI,CAAC0G,wBADY,GAEjB,MAAI,CAACC,gBAFT;AAGA,aAAOF,YAAP;AACD,KAPwB,EAQzB,UAACG,cAAD,EAAiBH,YAAjB,EAAkC;AAChC,6CACKG,cADL,GAEKH,YAFL;AAID,KAbwB,C;;wFAgB1BF,kB;;;;;;;WAC0B,CACzB;AAAA,aAAM,MAAI,CAACM,aAAX;AAAA,KADyB,EAEzB;AAAA,aAAM,MAAI,CAACC,SAAX;AAAA,KAFyB,EAGzB;AAAA,aAAM,6CAAN;AAAA,KAHyB,EAIzB,UAACD,aAAD,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAyC;AACvC,UAAMC,KAAK,GAAG,2BAASH,aAAT,EAAwBC,SAAxB,CAAd;AACA,UAAM/I,OAAO,GAAG,0CAAwB;AACtCiJ,QAAAA,KAAK,EAALA,KADsC;AAEtCD,QAAAA,SAAS,EAAE,IAAIE,IAAJ,CAASF,SAAT;AAF2B,OAAxB,CAAhB;AAIA,aAAOhJ,OAAP;AACD,KAXwB,C","sourcesContent":["import Client from 'ringcentral-client';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport background from '../../lib/background';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport { MeetingErrors } from '../Meeting';\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\n\nimport actionTypes, { RcVideoActionTypes } from './actionTypes';\nimport getRcVReducer, {\n  getDefaultVideoSettingReducer,\n  getLastVideoStorageReducer,\n  getPersonalMeetingReducer,\n} from './getRcVReducer';\n\nimport {\n  getDefaultVideoSettings,\n  validatePasswordSettings,\n  generateRandomPassword,\n  getTopic,\n  pruneMeetingObject,\n  DEFAULT_JBH,\n  RcVideoTypes,\n} from './videoHelper';\nimport { RcVMeetingModel } from '../../models/rcv.model';\n\nimport createStatus from './createStatus';\n\nfunction migrateJBH(setting) {\n  if (setting && Object.keys(setting).length) {\n    setting.allowJoinBeforeHost =\n      typeof setting.allowJoinBeforeHostV2 === 'boolean'\n        ? setting.allowJoinBeforeHostV2\n        : DEFAULT_JBH;\n    delete setting.allowJoinBeforeHostV2;\n  }\n  return setting;\n}\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Brand',\n    'Storage',\n    { dep: 'Conference', optional: true },\n    { dep: 'RcVideoOptions', optional: true },\n    { dep: 'AvailabilityMonitor', optional: true },\n  ],\n})\nexport class RcVideo extends RcModule<RcVideoActionTypes> {\n  private _alert: any;\n  private _client: Client;\n  private _defaultVideoSettingKey: string;\n  private _lastVideoSettingKey: string;\n  private _personalMeetingKey: string;\n  private _extensionInfo: any;\n  private _conference: any;\n  private _brand: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _showSaveAsDefault: boolean;\n  private _fetchPersonMeetingTimeout: any;\n  private _enablePersonalMeeting: boolean;\n\n  _reducer: any;\n\n  constructor({\n    alert,\n    client,\n    showSaveAsDefault,\n    extensionInfo,\n    brand,\n    storage,\n    reducers,\n    conference,\n    availabilityMonitor,\n    enablePersonalMeeting = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._brand = brand;\n    this._storage = storage;\n    this._conference = conference;\n    this._reducer = getRcVReducer(this.actionTypes, reducers);\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._availabilityMonitor = availabilityMonitor;\n    this._defaultVideoSettingKey = 'defaultVideoSetting';\n    this._lastVideoSettingKey = 'lastVideoSetting';\n    this._personalMeetingKey = 'personalMeeting';\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultVideoSettingKey,\n        reducer: getDefaultVideoSettingReducer(this.actionTypes),\n      });\n    } else {\n      this._storage.registerReducer({\n        key: this._lastVideoSettingKey,\n        reducer: getLastVideoStorageReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalMeetingKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this.pending &&\n      this._extensionInfo.ready &&\n      this._storage.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  _shouldReset() {\n    return (\n      this.ready &&\n      !this._extensionInfo.ready &&\n      !this._storage.ready &&\n      (this._availabilityMonitor || !this._availabilityMonitor.ready)\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting();\n    }\n\n    this._initMeeting();\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  init() {\n    console.log('init meeting');\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  private _initMeeting() {\n    this.updateMeetingSettings({\n      ...this.defaultVideoSetting,\n      meetingPassword: generateRandomPassword(10),\n      // generated random password is valid\n      isMeetingPasswordValid: true,\n    });\n  }\n\n  async _initPersonalMeeting() {\n    if (this.personalMeeting.shortId) {\n      return;\n    }\n    if (this._fetchPersonMeetingTimeout) {\n      clearTimeout(this._fetchPersonMeetingTimeout);\n    }\n    try {\n      const meeting = await this.fetchPersonalMeeting();\n      this.store.dispatch({\n        type: this.actionTypes.savePersonalMeeting,\n        meeting,\n      });\n    } catch (e) {\n      console.error('fetch default meeting error:', e);\n      console.warn('retry after 10s');\n      this._fetchPersonMeetingTimeout = setTimeout(() => {\n        this._initPersonalMeeting();\n      }, 10000);\n    }\n  }\n\n  saveAsDefaultSetting(meeting) {\n    const {\n      allowJoinBeforeHost,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      notShowAgain,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHostV2: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      isMeetingSecret: boolean;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHostV2: allowJoinBeforeHost,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: updateInfo,\n    });\n  }\n\n  saveLastVideoSetting(meeting) {\n    const {\n      allowJoinBeforeHost,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n    } = meeting;\n    const setting: {\n      allowJoinBeforeHostV2: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      isMeetingSecret: boolean;\n    } = {\n      allowJoinBeforeHostV2: allowJoinBeforeHost,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n    };\n    this.store.dispatch({\n      type: this.actionTypes.saveLastVideoSetting,\n      meeting: setting,\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  generateRandomPassword() {\n    return generateRandomPassword(10);\n  }\n\n  @proxify\n  async createMeeting(meeting, { isAlertSuccess = true } = {}) {\n    if (this.isScheduling) return (this.createMeeting as any)._promise;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initCreating,\n      });\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this\n        .createMeeting as any)._promise = this._client.service\n        .platform()\n        .post('/rcvideo/v1/bridges', pruneMeetingObject(meeting));\n      const meetingResult = await (this.createMeeting as any)._promise;\n\n      this.store.dispatch({\n        type: this.actionTypes.created,\n        meeting,\n      });\n\n      this.saveLastVideoSetting(meeting);\n      this.updateMeetingSettings({ ...meeting, saveAsDefault: false });\n      this._initMeeting();\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      const meetingResponse = {\n        extensionInfo: this._extensionInfo.info,\n        dialInNumber: this._conference && this._conference.dialInNumber,\n        meeting: { ...meeting, ...meetingResult.json() },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetCreating,\n      });\n      this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.createMeeting as any)._promise;\n    }\n  }\n\n  async instantMeeting(meeting: RcVMeetingModel): Promise<any> {\n    return this.createMeeting({\n      ...meeting,\n      expiresIn: 86400,\n      type: RcVideoTypes.call,\n    });\n  }\n\n  @proxify\n  async getMeeting(meetingId: String) {\n    const meetingResult = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', { shortId: meetingId });\n    return meetingResult.json();\n  }\n\n  @proxify\n  async fetchPersonalMeeting() {\n    const meetingResult = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', { default: true });\n    return meetingResult.json();\n  }\n\n  @proxify\n  async updateMeeting(meetingId, meeting, { isAlertSuccess = false } = {}) {\n    try {\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n      const meetingResult = await this._client.service.platform().send({\n        method: 'PATCH',\n        url: `/rcvideo/v1/bridges/${meeting.id}`,\n        body: meeting,\n      });\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      const newMeeting = meetingResult.json();\n      const meetingResponse = {\n        extensionInfo: this._extensionInfo.info,\n        dialInNumber: this._conference && this._conference.dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this.store.dispatch({\n          type: this.actionTypes.savePersonalMeeting,\n          meeting: newMeeting,\n        });\n      }\n      return meetingResponse;\n    } catch (errors) {\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  updateMeetingSettings(meeting: RcVMeetingModel, patch: boolean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingSettings,\n      meeting,\n      patch,\n    });\n  }\n\n  private _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.apiResponse) {\n      const { errorCode, permissionName } = errors.apiResponse.json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !this._availabilityMonitor.checkIfHAError(errors)\n      ) {\n        this._alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    }\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get extensionName() {\n    return this._extensionInfo.info && this._extensionInfo.info.name;\n  }\n\n  get brandName() {\n    return this._brand.name;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  @selector\n  defaultVideoSetting: any = [\n    () => this.initialVideoSetting,\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultVideoSetting\n        : this.lastVideoSetting;\n      return savedSetting;\n    },\n    (initialSetting, savedSetting) => {\n      return {\n        ...initialSetting,\n        ...savedSetting,\n      };\n    },\n  ];\n\n  @selector\n  initialVideoSetting: any = [\n    () => this.extensionName,\n    () => this.brandName,\n    () => getInitializedStartTime(),\n    (extensionName, brandName, startTime) => {\n      const topic = getTopic(extensionName, brandName);\n      const setting = getDefaultVideoSettings({\n        topic,\n        startTime: new Date(startTime),\n      });\n      return setting;\n    },\n  ];\n\n  get savedDefaultVideoSetting() {\n    const setting = this._storage.getItem(this._defaultVideoSettingKey);\n    return migrateJBH(setting);\n  }\n\n  get lastVideoSetting() {\n    const setting = this._storage.getItem(this._lastVideoSettingKey);\n    return migrateJBH(setting);\n  }\n\n  get isScheduling() {\n    return this.state.creatingStatus === createStatus.creating;\n  }\n\n  get showSaveAsDefault() {\n    return !!this._showSaveAsDefault;\n  }\n\n  get personalMeeting() {\n    return this._storage.getItem(this._personalMeetingKey);\n  }\n}\n"],"file":"RcVideo.js"}