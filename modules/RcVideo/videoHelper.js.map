{"version":3,"sources":["modules/RcVideo/videoHelper.ts"],"names":["meetingProviderTypes","meeting","video","RcVideoTypes","call","RCV_PASSWORD_REGEX","RCV_CREATE_API_KEYS","RCV_PREFERENCES_API_KEYS","RCV_PREFERENCES_KEYS","getDefaultChars","DEFAULT_PASSWORD_CHARSET","validateRandomPassword","pwd","test","generateRandomPassword","length","charset","charLen","retVal","i","charAt","Math","floor","random","validatePasswordSettings","meetingPassword","isMeetingSecret","getVideoSettings","data","name","params","settings","type","expiresIn","getDefaultVideoSettings","topic","startTime","allowJoinBeforeHost","muteAudio","muteVideo","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","settingLock","duration","saveAsDefault","isMeetingPasswordValid","usePersonalMeetingId","getTopic","extensionName","brandName","pruneMeetingObject","transformPreferences","preferences","isInstantMeeting","password_instant","password_scheduled","join_before_host","guest_join","join_authenticated_from_account_only","screen_sharing_host_only","transformMeetingSettingLock","meetingSettingLock","reversePreferences","result","prunePreferencesObject","comparePreferences","preferencesChanged","key"],"mappings":"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","sourcesContent":["import { pick } from 'ramda';\nimport {\n  MeetingProviderTypesProps,\n  RcVideoTypesProps,\n  RcVMeetingModel,\n  RcvGSuiteMeetingModel,\n  RcVideoAPI,\n  RcVPreferencesGET,\n  RcVPreferences,\n  RcVPreferencesPATCH,\n} from '../../models/rcv.model';\n\n/* TODO: this meetingProviderTypes is only used for calender-addon\n * if you want to use meetingProviderTypes\n * please turn to use MeetingProvider/interface\n */\nconst meetingProviderTypes: MeetingProviderTypesProps = {\n  meeting: 'RCMeetings',\n  video: 'RCVideo',\n};\n\nconst RcVideoTypes: RcVideoTypesProps = {\n  meeting: 0, // schedule\n  call: 1, // instant meeting\n};\n\nconst RCV_PASSWORD_REGEX = /^[A-Za-z0-9]{1,10}$/;\nconst RCV_CREATE_API_KEYS: Array<keyof RcVideoAPI> = [\n  'name',\n  'type',\n  'allowJoinBeforeHost',\n  'muteAudio',\n  'muteVideo',\n  'isMeetingSecret',\n  'meetingPassword',\n  'expiresIn',\n  'isOnlyAuthUserJoin',\n  'isOnlyCoworkersJoin',\n  'allowScreenSharing',\n];\nconst RCV_PREFERENCES_API_KEYS: Array<keyof RcVPreferencesGET> = [\n  'join_before_host',\n  // 'join_video_off',\n  // 'join_audio_mute',\n  'password_scheduled',\n  'password_instant',\n  'guest_join',\n  'join_authenticated_from_account_only',\n  'screen_sharing_host_only',\n];\nconst RCV_PREFERENCES_KEYS: Array<keyof RcVPreferences> = [\n  'isMeetingSecret',\n  'allowJoinBeforeHost',\n  // 'muteVideo',\n  // 'muteAudio'\n];\n\n/* RCINT-14566\n * Exclude characters that are hard to visually differentiate [\"0\", \"o\", \"O\", \"I\", \"l\"]\n */\nfunction getDefaultChars() {\n  const DEFAULT_PASSWORD_CHARSET =\n    'abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ123456789';\n  return DEFAULT_PASSWORD_CHARSET;\n}\n\nfunction validateRandomPassword(pwd) {\n  return /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])[A-Za-z0-9]*$/.test(pwd);\n}\n\nfunction generateRandomPassword(length: number = 10): string {\n  const charset = getDefaultChars();\n  const charLen = charset.length;\n  let retVal = '';\n  for (let i = 0; i < length; i++) {\n    retVal += charset.charAt(Math.floor(Math.random() * charLen));\n  }\n  if (!validateRandomPassword(retVal)) {\n    return generateRandomPassword(length);\n  }\n  return retVal;\n}\n\nfunction validatePasswordSettings(\n  meetingPassword: string,\n  isMeetingSecret: boolean,\n): boolean {\n  if (!isMeetingSecret) {\n    return true;\n  }\n  if (meetingPassword && RCV_PASSWORD_REGEX.test(meetingPassword)) {\n    return true;\n  }\n  return false;\n}\n\n// gsuite\nfunction getVideoSettings(data) {\n  const {\n    name = 'Scheduled meeting',\n    isMeetingSecret,\n    meetingPassword,\n    ...params\n  } = data;\n  const settings: RcvGSuiteMeetingModel = {\n    ...params,\n    name,\n    type: RcVideoTypes.meeting,\n    expiresIn: 31536000,\n  };\n\n  if (isMeetingSecret) {\n    settings.isMeetingSecret = true;\n    settings.meetingPassword = meetingPassword;\n  } else {\n    settings.isMeetingSecret = false;\n    settings.meetingPassword = '';\n  }\n\n  return settings;\n}\n\nfunction getDefaultVideoSettings({\n  topic,\n  startTime,\n}: {\n  topic: string;\n  startTime: Date;\n}): RcVMeetingModel {\n  return {\n    // api fields\n    name: topic,\n    type: RcVideoTypes.meeting,\n    expiresIn: 31536000,\n    allowJoinBeforeHost: false,\n    muteAudio: false,\n    muteVideo: false,\n    isMeetingSecret: true,\n    meetingPassword: '',\n    isOnlyAuthUserJoin: false,\n    isOnlyCoworkersJoin: false,\n    allowScreenSharing: true,\n    settingLock: {\n      allowJoinBeforeHost: false,\n      isMeetingSecret: false,\n      isOnlyAuthUserJoin: false,\n      allowScreenSharing: false,\n    },\n    // ui fields\n    startTime,\n    duration: 60,\n    saveAsDefault: false,\n    isMeetingPasswordValid: false,\n    usePersonalMeetingId: false,\n  };\n}\n\nfunction getTopic(extensionName: string, brandName: string) {\n  if (brandName === 'RingCentral') {\n    return `${extensionName}'s ${brandName} Video Meeting`;\n  }\n  return `${extensionName}'s ${brandName} Meeting`;\n}\n\n/**\n * Remove client side properties before sending to RCV API\n */\nfunction pruneMeetingObject(meeting: RcVMeetingModel): RcVideoAPI {\n  return pick(RCV_CREATE_API_KEYS, meeting);\n}\n\nfunction transformPreferences(\n  preferences: RcVPreferencesGET,\n  isInstantMeeting = false,\n): RcVPreferences {\n  return {\n    isMeetingSecret: isInstantMeeting\n      ? preferences.password_instant\n      : preferences.password_scheduled,\n    allowJoinBeforeHost: preferences.join_before_host,\n    // muteVideo: preferences.join_video_off,\n    // muteAudio: preferences.join_audio_mute,\n    isOnlyAuthUserJoin: preferences.guest_join,\n    isOnlyCoworkersJoin:\n      preferences.join_authenticated_from_account_only === 'only_co_workers',\n    allowScreenSharing: preferences.screen_sharing_host_only === 'all',\n  };\n}\n\nfunction transformMeetingSettingLock(\n  meetingSettingLock: RcVMeetingLockGET,\n  isInstantMeeting = false,\n): RcVMeetingLock {\n  return {\n    isMeetingSecret: isInstantMeeting\n      ? meetingSettingLock.password_instant\n      : meetingSettingLock.password_scheduled,\n    allowJoinBeforeHost: meetingSettingLock.join_before_host,\n    isOnlyAuthUserJoin: meetingSettingLock.guest_join,\n    allowScreenSharing: meetingSettingLock.screen_sharing_host_only,\n  };\n}\n\nfunction reversePreferences(\n  preferences: RcVPreferences,\n  isInstantMeeting = false,\n): RcVPreferencesPATCH {\n  const result = {\n    join_before_host: preferences.allowJoinBeforeHost,\n    // join_video_off: preferences.muteVideo,\n    // join_audio_mute: preferences.muteAudio,\n    guest_join: preferences.isOnlyAuthUserJoin,\n    join_authenticated_from_account_only: preferences.isOnlyCoworkersJoin\n      ? 'only_co_workers'\n      : 'anyone_signed_into_rc',\n    screen_sharing_host_only: preferences.allowScreenSharing ? 'all' : 'host',\n  } as RcVPreferencesPATCH;\n  if (isInstantMeeting) {\n    result.password_instant = preferences.isMeetingSecret;\n  } else {\n    result.password_scheduled = preferences.isMeetingSecret;\n  }\n  return result;\n}\n\n/**\n * Reserve only preferences fields\n */\nfunction prunePreferencesObject(meeting: RcVMeetingModel): RcVPreferences {\n  return pick(RCV_PREFERENCES_KEYS, meeting);\n}\n\nfunction comparePreferences(\n  preferences: RcVPreferences,\n  meeting: RcVMeetingModel,\n): boolean {\n  let preferencesChanged = false;\n  if (preferences && meeting) {\n    for (const key in preferences) {\n      if (preferences[key] !== meeting[key]) {\n        preferencesChanged = true;\n        break;\n      }\n    }\n  }\n  return preferencesChanged;\n}\n\n// TODO: will remove this when google app script could support export seperately\n// export together because google app script not fully support export\nexport {\n  RCV_PASSWORD_REGEX,\n  RCV_PREFERENCES_API_KEYS,\n  RcVideoTypes,\n  meetingProviderTypes,\n  getDefaultChars,\n  validateRandomPassword,\n  generateRandomPassword,\n  validatePasswordSettings,\n  getVideoSettings,\n  getDefaultVideoSettings,\n  getTopic,\n  pruneMeetingObject,\n  transformPreferences,\n  reversePreferences,\n  prunePreferencesObject,\n  comparePreferences,\n  transformMeetingSettingLock,\n};\n"],"file":"videoHelper.js"}