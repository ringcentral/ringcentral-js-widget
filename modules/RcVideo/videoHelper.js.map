{"version":3,"sources":["modules/RcVideo/videoHelper.ts"],"names":["meetingProviderTypes","meeting","video","RcVideoTypes","call","RCV_PASSWORD_REGEX","RCV_WAITTING_ROOM_API_KEYS","RCV_CREATE_API_KEYS","RCV_PREFERENCES_IDS","RCV_PREFERENCES_KEYS","getDefaultChars","DEFAULT_PASSWORD_CHARSET","validateRandomPassword","pwd","test","generateRandomPassword","length","charset","charLen","retVal","i","charAt","Math","floor","random","validatePasswordSettings","meetingPassword","isMeetingSecret","getVideoSettings","data","name","params","settings","type","expiresIn","getDefaultVideoSettings","topic","startTime","allowJoinBeforeHost","muteAudio","muteVideo","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","waitingRoomMode","RCV_WAITING_ROOM_MODE","off","settingLock","duration","saveAsDefault","isMeetingPasswordValid","usePersonalMeetingId","getTopic","extensionName","brandName","pruneMeetingObject","transformPreferences","preferences","isInstantMeeting","join_before_host","password_instant","password_scheduled","guest_join","join_authenticated_from_account_only","screen_sharing_host_only","waiting_room","waiting_room_guests_only","transformSettingLocks","settingLocks","reversePreferences","result","RCV_WAITING_ROOM_MODE_REVERSE","prunePreferencesObject","comparePreferences","preferencesChanged","Object","keys","key","settingKey","getLockedPreferences","lockedPreferences","entries","locked","getAvaliableWaitingRoomOpions","all","notcoworker","patchWaitingRoomRelated","updatedMode","processedSettings","includes"],"mappings":"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","sourcesContent":["import { pick } from 'ramda';\nimport {\n  MeetingProviderTypesProps,\n  RcVideoTypesProps,\n  RcVMeetingModel,\n  RcvGSuiteMeetingModel,\n  RcVideoAPI,\n  RcVSettingId,\n  RcVPreferencesGET,\n  RcVSettingLocksGET,\n  RcVSettingKey,\n  RcVPreferences,\n  RcVSettingLocks,\n} from '../../interfaces/Rcv.model';\nimport {\n  RCV_WAITING_ROOM_MODE,\n  RCV_WAITING_ROOM_MODE_REVERSE,\n} from './constants';\n\n/* TODO: this meetingProviderTypes is only used for calender-addon\n * if you want to use meetingProviderTypes\n * please turn to use MeetingProvider/interface\n */\nconst meetingProviderTypes: MeetingProviderTypesProps = {\n  meeting: 'RCMeetings',\n  video: 'RCVideo',\n};\n\nconst RcVideoTypes: RcVideoTypesProps = {\n  meeting: 0, // schedule\n  call: 1, // instant meeting\n};\n\nconst RCV_PASSWORD_REGEX = /^[A-Za-z0-9]{1,10}$/;\nconst RCV_WAITTING_ROOM_API_KEYS = 'waitingRoomMode';\nconst RCV_CREATE_API_KEYS: Array<keyof RcVideoAPI> = [\n  'name',\n  'type',\n  'startTime',\n  'expiresIn',\n  'duration',\n  'accountId',\n  'extensionId',\n  'allowJoinBeforeHost',\n  'muteAudio',\n  'muteVideo',\n  'isMeetingSecret',\n  'meetingPassword',\n  'isOnlyAuthUserJoin',\n  'isOnlyCoworkersJoin',\n  'allowScreenSharing',\n  RCV_WAITTING_ROOM_API_KEYS,\n];\n\nconst RCV_PREFERENCES_IDS: Array<RcVSettingId> = [\n  'join_before_host',\n  // 'join_video_off',\n  // 'join_audio_mute',\n  'password_scheduled',\n  'password_instant',\n  'guest_join',\n  'join_authenticated_from_account_only',\n  'screen_sharing_host_only',\n  'waiting_room_guests_only',\n  'waiting_room',\n];\nconst RCV_PREFERENCES_KEYS: Array<RcVSettingKey> = [\n  'allowJoinBeforeHost',\n  // 'muteVideo',\n  // 'muteAudio',\n  'isMeetingSecret',\n  'isOnlyAuthUserJoin',\n  'isOnlyCoworkersJoin',\n  'allowScreenSharing',\n  RCV_WAITTING_ROOM_API_KEYS,\n];\n\n/* RCINT-14566\n * Exclude characters that are hard to visually differentiate [\"0\", \"o\", \"O\", \"I\", \"l\"]\n */\nfunction getDefaultChars(): string {\n  const DEFAULT_PASSWORD_CHARSET =\n    'abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ123456789';\n  return DEFAULT_PASSWORD_CHARSET;\n}\n\nfunction validateRandomPassword(pwd: string): boolean {\n  return /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])[A-Za-z0-9]*$/.test(pwd);\n}\n\nfunction generateRandomPassword(length: number = 10): string {\n  const charset = getDefaultChars();\n  const charLen = charset.length;\n  let retVal = '';\n  for (let i = 0; i < length; i++) {\n    retVal += charset.charAt(Math.floor(Math.random() * charLen));\n  }\n  if (!validateRandomPassword(retVal)) {\n    return generateRandomPassword(length);\n  }\n  return retVal;\n}\n\nfunction validatePasswordSettings(\n  meetingPassword: string,\n  isMeetingSecret: boolean,\n): boolean {\n  if (!isMeetingSecret) {\n    return true;\n  }\n  if (meetingPassword && RCV_PASSWORD_REGEX.test(meetingPassword)) {\n    return true;\n  }\n  return false;\n}\n\n// gsuite\nfunction getVideoSettings(data) {\n  const {\n    name = 'Scheduled meeting',\n    isMeetingSecret,\n    meetingPassword,\n    ...params\n  } = data;\n  const settings: RcvGSuiteMeetingModel = {\n    ...params,\n    name,\n    type: RcVideoTypes.meeting,\n    expiresIn: 31536000,\n  };\n\n  if (isMeetingSecret) {\n    settings.isMeetingSecret = true;\n    settings.meetingPassword = meetingPassword;\n  } else {\n    settings.isMeetingSecret = false;\n    settings.meetingPassword = '';\n  }\n\n  return settings;\n}\n\nfunction getDefaultVideoSettings({\n  topic,\n  startTime,\n}: {\n  topic: string;\n  startTime: Date;\n}): RcVMeetingModel {\n  return {\n    // api fields\n    name: topic,\n    type: RcVideoTypes.meeting,\n    expiresIn: 31536000,\n    allowJoinBeforeHost: false,\n    muteAudio: false,\n    muteVideo: false,\n    isMeetingSecret: true,\n    meetingPassword: '',\n    isOnlyAuthUserJoin: false,\n    isOnlyCoworkersJoin: false,\n    allowScreenSharing: true,\n    waitingRoomMode: RCV_WAITING_ROOM_MODE.off,\n    settingLock: {\n      allowJoinBeforeHost: false,\n      // muteVideo: false,\n      // muteAudio: false,\n      isMeetingSecret: false,\n      isOnlyAuthUserJoin: false,\n      isOnlyCoworkersJoin: false,\n      allowScreenSharing: false,\n      waitingRoomMode: false,\n    },\n    // ui fields\n    startTime,\n    duration: 60,\n    saveAsDefault: false,\n    isMeetingPasswordValid: false,\n    usePersonalMeetingId: false,\n  };\n}\n\nfunction getTopic(extensionName: string, brandName: string) {\n  if (brandName === 'RingCentral') {\n    return `${extensionName}'s ${brandName} Video Meeting`;\n  }\n  return `${extensionName}'s ${brandName} Meeting`;\n}\n\n/**\n * Remove client side properties before sending to RCV API\n */\nfunction pruneMeetingObject(meeting: RcVMeetingModel): RcVideoAPI {\n  return pick(RCV_CREATE_API_KEYS, meeting);\n}\n\nfunction transformPreferences(\n  preferences: RcVPreferencesGET,\n  isInstantMeeting = false,\n): RcVPreferences {\n  return {\n    allowJoinBeforeHost: preferences.join_before_host,\n    // muteVideo: preferences.join_video_off,\n    // muteAudio: preferences.join_audio_mute,\n    isMeetingSecret: isInstantMeeting\n      ? preferences.password_instant\n      : preferences.password_scheduled,\n    isOnlyAuthUserJoin: preferences.guest_join,\n    isOnlyCoworkersJoin: preferences.guest_join\n      ? preferences.join_authenticated_from_account_only === 'only_co_workers'\n      : false,\n    allowScreenSharing: preferences.screen_sharing_host_only === 'all',\n    waitingRoomMode: preferences.waiting_room\n      ? RCV_WAITING_ROOM_MODE[preferences.waiting_room_guests_only]\n      : RCV_WAITING_ROOM_MODE.off,\n  };\n}\n\nfunction transformSettingLocks(\n  settingLocks: RcVSettingLocksGET,\n  isInstantMeeting = false,\n): RcVSettingLocks {\n  return {\n    allowJoinBeforeHost: settingLocks.join_before_host,\n    // muteVideo: settingLocks.join_video_off,\n    // muteAudio: settingLocks.join_audio_mute,\n    isMeetingSecret: isInstantMeeting\n      ? settingLocks.password_instant\n      : settingLocks.password_scheduled,\n    isOnlyAuthUserJoin: settingLocks.guest_join,\n    isOnlyCoworkersJoin: settingLocks.join_authenticated_from_account_only,\n    allowScreenSharing: settingLocks.screen_sharing_host_only,\n    waitingRoomMode: settingLocks.waiting_room,\n  };\n}\n\nfunction reversePreferences(\n  preferences: RcVPreferences,\n  isInstantMeeting = false,\n): Partial<RcVPreferencesGET> {\n  const result: Partial<RcVPreferencesGET> = {\n    join_before_host: preferences.allowJoinBeforeHost,\n    // join_video_off: preferences.muteVideo,\n    // join_audio_mute: preferences.muteAudio,\n    guest_join: preferences.isOnlyAuthUserJoin,\n    join_authenticated_from_account_only: preferences.isOnlyCoworkersJoin\n      ? 'only_co_workers'\n      : 'anyone_signed_into_rc',\n    screen_sharing_host_only: preferences.allowScreenSharing ? 'all' : 'host',\n    waiting_room: !!preferences.waitingRoomMode,\n    waiting_room_guests_only:\n      RCV_WAITING_ROOM_MODE_REVERSE[preferences.waitingRoomMode],\n  };\n  if (isInstantMeeting) {\n    result.password_instant = preferences.isMeetingSecret;\n  } else {\n    result.password_scheduled = preferences.isMeetingSecret;\n  }\n  return result;\n}\n\n/**\n * Reserve only preferences fields\n */\nfunction prunePreferencesObject(meeting: RcVMeetingModel): RcVPreferences {\n  return pick(RCV_PREFERENCES_KEYS, meeting);\n}\n\nfunction comparePreferences(\n  preferences: RcVPreferences,\n  meeting: RcVMeetingModel,\n): boolean {\n  let preferencesChanged = false;\n  if (preferences && meeting) {\n    for (const key of Object.keys(preferences)) {\n      const settingKey = key as RcVSettingKey;\n      if (preferences[settingKey] !== meeting[settingKey]) {\n        preferencesChanged = true;\n        break;\n      }\n    }\n  }\n  return preferencesChanged;\n}\n\nfunction getLockedPreferences(\n  settingLocks: RcVSettingLocks,\n  preferences: RcVPreferences,\n): Partial<RcVPreferences> {\n  const lockedPreferences: Partial<RcVPreferences> = {};\n  for (const [key, locked] of Object.entries(settingLocks)) {\n    if (locked) {\n      const settingKey = key as RcVSettingKey;\n      lockedPreferences[settingKey] = preferences[settingKey];\n    }\n  }\n  return lockedPreferences;\n}\n\nfunction getAvaliableWaitingRoomOpions(\n  isOnlyCoworkersJoin: boolean,\n): Array<number> {\n  return isOnlyCoworkersJoin\n    ? [RCV_WAITING_ROOM_MODE.off, RCV_WAITING_ROOM_MODE.all]\n    : [\n        RCV_WAITING_ROOM_MODE.off,\n        RCV_WAITING_ROOM_MODE.all,\n        RCV_WAITING_ROOM_MODE.notcoworker,\n      ];\n}\nfunction patchWaitingRoomRelated(\n  settings: RcVMeetingModel,\n  { waitingRoomMode }: RcVPreferences,\n  updatedMode: boolean = false,\n): Partial<RcVMeetingModel> {\n  const processedSettings: Partial<RcVMeetingModel> = {};\n  if (settings.isOnlyAuthUserJoin) {\n    // for pmi setting, waitingRoom, joinAfterMe option maybe not avaliable\n    if (\n      !getAvaliableWaitingRoomOpions(settings.isOnlyCoworkersJoin).includes(\n        settings.waitingRoomMode,\n      )\n    ) {\n      processedSettings.waitingRoomMode = updatedMode\n        ? RCV_WAITING_ROOM_MODE.all\n        : waitingRoomMode;\n    }\n  }\n  // when waitingRoom is 'everyone', joinAfterMe should be always checked\n  if (\n    (processedSettings.waitingRoomMode === RCV_WAITING_ROOM_MODE.all ||\n      settings.waitingRoomMode === RCV_WAITING_ROOM_MODE.all) &&\n    settings.allowJoinBeforeHost\n  ) {\n    processedSettings.allowJoinBeforeHost = false;\n  }\n  return processedSettings;\n}\n\n// TODO: will remove this when google app script could support export seperately\n// export together because google app script not fully support export\nexport {\n  RCV_PASSWORD_REGEX,\n  RCV_PREFERENCES_IDS,\n  RCV_PREFERENCES_KEYS,\n  RCV_WAITTING_ROOM_API_KEYS,\n  RcVideoTypes,\n  meetingProviderTypes,\n  RCV_WAITING_ROOM_MODE,\n  getDefaultChars,\n  validateRandomPassword,\n  generateRandomPassword,\n  validatePasswordSettings,\n  getVideoSettings,\n  getDefaultVideoSettings,\n  getTopic,\n  pruneMeetingObject,\n  transformPreferences,\n  reversePreferences,\n  prunePreferencesObject,\n  comparePreferences,\n  transformSettingLocks,\n  getLockedPreferences,\n  patchWaitingRoomRelated,\n};\n"],"file":"videoHelper.js"}