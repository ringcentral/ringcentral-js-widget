{"version":3,"sources":["modules/SimpleCallControlUI/SimpleCallControlUI.ts"],"names":["SimpleCallControlUI","name","deps","dep","optional","sessionId","params","renderContactName","_deps","activeCallControl","regionSettings","locale","brand","activeSession","nameMatches","direction","callDirections","outbound","toMatches","fromMatches","phoneNumber","to","from","fallBackName","i18n","getString","currentLocale","telephonySessionId","fallBackNameFromThirdParty","fallBackNumber","areaCode","countryCode","brandName","fullName","controlBusy","busy","onBackButtonClick","routerInteraction","goBack","setActiveSessionId","onTransfer","push","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unhold","onHangup","hangUp","RcUIModuleV2"],"mappings":"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","sourcesContent":["import {\n  RcUIModuleV2,\n  UIProps,\n  UIFunctions,\n} from '@ringcentral-integration/core';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport { Entity } from '@ringcentral-integration/commons/interfaces/Entity.interface';\nimport {\n  SimpleCallControlContainerProps,\n  Deps,\n} from './SimpleCallControlUI.interface';\nimport { pickFallBackInfo } from '../../components/SimpleCallControlPanel/utils';\nimport i18n from '../../components/SimpleCallControlPanel/i18n';\nimport { SimpleCallControlPanelProps } from '../../components/SimpleCallControlPanel';\n\n@Module({\n  name: 'SimpleCallControlUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'Brand',\n    'RegionSettings',\n    'ActiveCallControl',\n    { dep: 'SimpleCallControlUIOptions', optional: true },\n  ],\n})\nexport class SimpleCallControlUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  getUIProps({\n    params: { sessionId },\n    renderContactName,\n  }: SimpleCallControlContainerProps): UIProps<SimpleCallControlPanelProps> {\n    const { activeCallControl, regionSettings, locale, brand } = this._deps;\n    const { activeSession } = activeCallControl;\n    let nameMatches: Entity[] = [];\n    if (activeSession && !renderContactName) {\n      // TODO: check activeSession type\n      nameMatches =\n        activeSession.direction === callDirections.outbound\n          ? activeSession.toMatches\n          : activeSession.fromMatches;\n    }\n    let phoneNumber: string;\n    if (activeSession) {\n      phoneNumber =\n        activeSession.direction === callDirections.outbound\n          ? activeSession.to\n          : activeSession.from;\n    }\n    let fallBackName = i18n.getString('Unknown', locale.currentLocale);\n    if (renderContactName) {\n      const {\n        fallBackName: fallBackNameFromThirdParty,\n        fallBackNumber,\n      } = pickFallBackInfo(\n        activeSession,\n        renderContactName({\n          sessionId: activeSession && activeSession.sessionId,\n          telephonySessionId: sessionId,\n        }),\n        locale.currentLocale,\n      );\n      phoneNumber = fallBackNumber;\n      fallBackName = fallBackNameFromThirdParty;\n    }\n    return {\n      currentLocale: locale.currentLocale,\n      activeSession,\n      sessionId,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n      nameMatches,\n      phoneNumber,\n      fallBackName,\n      brandName: brand.fullName,\n      controlBusy: activeCallControl.busy,\n    };\n  }\n\n  getUIFunctions({\n    params: { sessionId },\n  }: SimpleCallControlContainerProps): UIFunctions<\n    SimpleCallControlPanelProps\n  > {\n    return {\n      onBackButtonClick: () => {\n        this._deps.routerInteraction.goBack();\n      },\n      setActiveSessionId: (sessionId) => {\n        this._deps.activeCallControl.setActiveSessionId(sessionId);\n      },\n      onTransfer: (sessionId) => {\n        this._deps.routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      onMute: () => this._deps.activeCallControl.mute(sessionId),\n      onUnmute: () => this._deps.activeCallControl.unmute(sessionId),\n      onHold: () => this._deps.activeCallControl.hold(sessionId),\n      onUnhold: () => this._deps.activeCallControl.unhold(sessionId),\n      onHangup: () => this._deps.activeCallControl.hangUp(sessionId),\n    };\n  }\n}\n"],"file":"SimpleCallControlUI.js"}