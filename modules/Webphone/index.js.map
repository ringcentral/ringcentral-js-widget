{"version":3,"sources":["modules/Webphone/index.js"],"names":["AUTO_RETRIES_DELAY","INACTIVE_SLEEP_DELAY","INCOMING_CALL_INVALID_STATE_ERROR_CODE","extendedControlStatus","Enum","EVENTS","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","provisionUpdate","serverConnecting","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","storage","rolesAndPermissions","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","onCallResume","onCallHold","onCallInit","onBeforeCallResume","onBeforeCallEnd","regionSettings","brand","webphoneSDKOptions","permissionCheck","availabilityMonitor","disconnectOnInactive","connectDelay","prefix","options","actionTypes","_regionSettings","_brand","_eventEmitter","EventEmitter","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_numberValidate","_audioSettings","_storage","_availabilityMonitor","_contactMatcher","_tabManager","_webphoneSDKOptions","_permissionCheck","_reconnectDelays","_connectDelay","_disconnectOnInactive","_activeWebphoneKey","_storageKey","on","callEnd","callRing","callStart","callResume","callHold","callInit","beforeCallResume","_onBeforeCallEndFunctions","beforeCallEnd","_webphone","_remoteVideo","_localVideo","_sessions","Map","_reducer","registerReducer","key","reducer","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","_tabActive","_connectTimeout","_isFirstRegister","addQuerySource","getQueriesFn","sessionPhoneNumbers","readyCheckFn","ready","document","createElement","id","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","_removeCurrentInstanceFromActiveWebphone","subscribe","_onStateChange","_createOtherWebphoneInstanceRegisteredListener","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","active","_onTabActive","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","forEach","length","concat","stop","_waitUnregistered","console","error","removeAllListeners","isConnected","reconnectTimer","clearTimeout","undefined","__clearSwitchBackTimer","e","Promise","resolve","reject","timeout","setTimeout","Error","once","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","loadAudio","connected","_onWebphoneRegistered","log","_onWebphoneUnregistered","cause","message","data","isSipErrorCode","disconnected","disconnecting","errorCode","statusCode","status_code","_onConnectError","session","_onInvite","sessions","warning","allowDuplicates","connect","force","skipDLCheck","skipConnectDelay","reason","connectError","reconnect","setRetryCounts","retryCounts","ttl","_sipProvision","sipProvision","connectRetryCounts","indexOf","refreshServiceFeatures","_createWebphone","_waitStillTabActive","connecting","inactiveDisconnecting","skipTimeout","skipTabActiveCheck","browserNotSupported","_isAvailableToConnect","_fetchDL","noOutboundCallWithoutDL","checkDLError","_connect","_getConnectTimeoutTtl","reconnecting","danger","payload","_hideConnectingAlert","isConnecting","_hideConnectFailedAlert","registered","info","_hideRegisterErrorAlert","_setCurrentInstanceAsActiveWebphone","inactive","localStorage","setItem","activeWebphoneInstance","getItem","removeItem","hidden","newValue","_disconnectToInactive","unregisteredOnInactive","alertIds","messages","filter","m","i","len","map","dismiss","hangup","_updateSessions","unregistered","__rc_extendedControlStatus","playing","controls","__rc_extendedControls","slice","_sendDTMF","stopped","incomingResponse","__rc_callStatus","sessionStatus","finished","headers","_onCallStart","_playExtendedControls","_onCallEnd","newSession","replaced","__rc_direction","callDirections","inbound","_addSession","_onAccepted","__rc_isOnMute","onMute","sessionDescriptionHandler","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","sessionId","sipSession","get","find","_holdOtherSession","accept","acceptOptions","callAnswer","code","unhold","forwardNumber","validatedResult","validPhoneNumber","validateNumbers","result","errors","callErrors","phoneNumber","numbers","e164","__rc_isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","onHold","_onCallHold","holdError","currentSessionId","all","Array","from","onholdCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","recordDisabled","noAccess","recordError","stopRecord","park","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","ua","invite","sessionDescriptionHandlerOptions","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","func","toNumber","inviteOptions","extendedControls","isVoIPOnlyMode","outbound","__rc_fromNumber","fromNumber","_onCallInit","homeCountryId","_invite","direction","to","sipData","extraHeaders","push","fromTag","toTag","contact","__rc_contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","normalizeSession","updateSessions","set","__rc_minimized","normalizedSession","x","triggerMatch","emit","activeSession","playIncoming","ringSession","_removeSession","_reconnectWebphoneIfNecessaryOnSessionsEmpty","_makeWebphoneInactiveOnSessionsEmpty","handler","incoming","incomingAudio","outgoing","outgoingAudio","fileName","dataUrl","setOutgoingAudio","resetOutgoingAudio","setIncomingAudio","resetIncomingAudio","incomingAudioFile","outgoingAudioFile","isIncomingDefault","DEFAULT_AUDIO","defaultIncomingAudio","isOutgoingDefault","defaultOutgoingAudio","setRingtone","state","status","moduleStatuses","ringSessionId","activeSessionId","lastEndedSessions","webphoneEnabled","connectionStatus","constraints","audio","deviceId","inputDeviceId","video","isOnTransfer","userMedia","incomingAudioDataUrl","outgoingAudioDataUrl","RcModule","proxify","selector","outputs","cached","ringSessions","minimized"],"mappings":"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","sourcesContent":["import { find, filter } from 'ramda';\nimport EventEmitter from 'events';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport defaultIncomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport defaultOutgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport validateNumbers from '../../lib/validateNumbers';\nimport Enum from '../../lib/Enum';\n\nimport {\n  isBrowserSupport,\n  isChrome,\n  isEnableMidLinesInSDP,\n  normalizeSession,\n  isRing,\n  isOnHold,\n  extractHeadersData,\n} from './webphoneHelper';\nimport getWebphoneReducer, {\n  getWebphoneStorageReducer,\n  DEFAULT_AUDIO,\n} from './getWebphoneReducer';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst INACTIVE_SLEEP_DELAY = 1000;\nconst INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\nconst extendedControlStatus = new Enum(['pending', 'playing', 'stopped']);\n\nconst EVENTS = new Enum([\n  'callRing',\n  'callStart',\n  'callEnd',\n  'callHold',\n  'callResume',\n  'beforeCallResume',\n  'beforeCallEnd',\n  'callInit',\n]);\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'RolesAndPermissions',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'WebphoneOptions', optional: true },\n  ],\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Brand} params.brand - app brand\n   * @param {RegionSettings} params.regionSettings - regionSettings\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call accpeted by callee\n   * @param {Function} params.onCallInit - callback on create a new call\n   * @param {Function} params.onCallResume - callback on a call resume\n   * @param {Function} params.onCallHold - callback on a call holded\n   * @param {Function} params.onBeforeCallResume - callback before a call resume\n   * @param {Function} params.onBeforeCallEnd - callback before a call hangup\n   * @param {Object} params.webphoneSDKOptions - callback before a call hangup\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    storage,\n    rolesAndPermissions,\n    webphoneLogLevel = 1,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    onCallResume,\n    onCallHold,\n    onCallInit,\n    onBeforeCallResume,\n    onBeforeCallEnd,\n    regionSettings,\n    brand,\n    webphoneSDKOptions,\n    permissionCheck = true,\n    availabilityMonitor,\n    disconnectOnInactive = false,\n    connectDelay = 0,\n    prefix,\n    ...options\n  }) {\n    super({\n      ...options,\n      prefix,\n      actionTypes,\n    });\n\n    this._regionSettings = regionSettings;\n    this._brand = brand;\n    this._eventEmitter = new EventEmitter();\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(\n      rolesAndPermissions,\n      'rolesAndPermissions',\n    );\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this::ensureExist(audioSettings, 'audioSettings');\n    this._storage = storage;\n\n    this._availabilityMonitor = availabilityMonitor;\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n    this._webphoneSDKOptions = webphoneSDKOptions || {};\n\n    this._permissionCheck = permissionCheck;\n    this._reconnectDelays = AUTO_RETRIES_DELAY;\n    this._connectDelay = connectDelay;\n    this._disconnectOnInactive = disconnectOnInactive;\n    this._activeWebphoneKey = `${prefix}-active-webphone-key`;\n    this._storageKey = `${prefix}-webphone`;\n\n    if (typeof onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, onCallEnd);\n    }\n    if (typeof onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, onCallRing);\n    }\n    if (typeof onCallStart === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, onCallStart);\n    }\n    if (typeof onCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, onCallResume);\n    }\n    if (typeof onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, onCallHold);\n    }\n    if (typeof onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, onCallInit);\n    }\n    if (typeof onBeforeCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, onBeforeCallResume);\n    }\n    this._onBeforeCallEndFunctions = [];\n    if (typeof onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, onBeforeCallEnd);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getWebphoneStorageReducer(this.actionTypes),\n    });\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n    this._tabActive = false;\n    this._connectTimeout = null;\n    this._isFirstRegister = true;\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: () => this.sessionPhoneNumbers,\n        readyCheckFn: () => this.ready,\n      });\n    }\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      if (this._remoteVideo.setSinkId && this._audioSettings.outputDeviceId) {\n        this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n      }\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n        this._removeCurrentInstanceFromActiveWebphone();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n    this._createOtherWebphoneInstanceRegisteredListener();\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted)\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (this._webphone && this._webphone.userAgent) {\n        this._webphone.userAgent.audioHelper.setVolume(\n          this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume,\n        );\n      }\n    }\n    if (this.ready && this._callVolume !== this._audioSettings.callVolume) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (this._remoteVideo) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (this._remoteVideo && this._remoteVideo.setSinkId) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n    if (\n      this.ready &&\n      this._tabManager &&\n      this._tabManager.ready &&\n      this._tabActive !== this._tabManager.active\n    ) {\n      this._tabActive = this._tabManager.active;\n      if (this._tabActive) {\n        this._onTabActive();\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      this._storage.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service\n      .platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }],\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client\n      .account()\n      .extension()\n      .device()\n      .list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  async _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    try {\n      await this._waitUnregistered(this._webphone.userAgent);\n    } catch (e) {\n      console.error(e);\n    }\n    try {\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone.userAgent.transport.removeAllListeners();\n      if (this._webphone.userAgent.transport.isConnected()) {\n        this._webphone.userAgent.transport.disconnect();\n      }\n      if (this._webphone.userAgent.transport.reconnectTimer) {\n        clearTimeout(this._webphone.userAgent.transport.reconnectTimer);\n        this._webphone.userAgent.transport.reconnectTimer = undefined;\n      }\n      if (this._webphone.userAgent.transport.__clearSwitchBackTimer) {\n        this._webphone.userAgent.transport.__clearSwitchBackTimer();\n      }\n    } catch (e) {\n      console.error(e);\n      // ignore clean listener error\n    }\n    this._webphone = null;\n  }\n\n  _waitUnregistered(userAgent) {\n    return new Promise((resolve, reject) => {\n      let timeout = setTimeout(() => {\n        timeout = null;\n        reject(new Error('unregistered timeout'));\n      }, 2000);\n      userAgent.once('unregistered', (e) => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        resolve(e);\n      });\n    });\n  }\n\n  async _createWebphone(provisionData) {\n    await this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isEnableMidLinesInSDP(),\n      ...this._webphoneSDKOptions,\n    });\n    this.loadAudio();\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted\n        ? 0\n        : this._audioSettings.ringtoneVolume,\n    );\n    // Webphone userAgent registered event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this._onWebphoneRegistered(provisionData);\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      this._onWebphoneUnregistered();\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if (!response && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message &&\n        typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from black list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response\n        ? response.statusCode || response.status_code\n        : null;\n      switch (statusCode) {\n        // Webphone account over limit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (this.sessions.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.provisionUpdate,\n          allowDuplicates: false,\n        });\n        this.connect({\n          force: true,\n          skipDLCheck: true,\n          skipConnectDelay: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: webphoneErrors.provisionUpdate,\n      };\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this._alert.warning({\n          message: webphoneErrors.serverConnecting,\n          allowDuplicates: false,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.reconnect,\n        });\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this.store.dispatch({\n        type: this.actionTypes.setRetryCounts,\n        retryCounts: 20,\n      });\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    this._webphone.userAgent.transport.on('transportError', () => {\n      console.log('WebSocket transportError occurred');\n    });\n    this._webphone.userAgent.transport.on('wsConnectionError', () => {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n      });\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (this.sessions.length === 0) {\n        this.connect({\n          skipConnectDelay: true,\n          force: true,\n          skipDLCheck: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: null,\n      };\n    });\n  }\n\n  @proxify\n  async _connect() {\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    let sipProvision;\n    try {\n      sipProvision = await this._sipProvision();\n    } catch (error) {\n      console.error(error, this.connectRetryCounts);\n      if (\n        error &&\n        error.message &&\n        error.message.indexOf('Feature [WebPhone] is not available') > -1\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        return;\n      }\n      this._onConnectError({\n        errorCode: webphoneErrors.sipProvisionError,\n        statusCode: null,\n        ttl: 0,\n      });\n      return;\n    }\n    await this._createWebphone(sipProvision);\n  }\n\n  async _waitStillTabActive() {\n    if (!this._tabManager || this._tabManager.active) {\n      return;\n    }\n    await sleep(INACTIVE_SLEEP_DELAY);\n    await this._waitStillTabActive();\n  }\n\n  _isAvailableToConnect({ force }) {\n    if (!this.enabled || !this._auth.loggedIn) {\n      return false;\n    }\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    if (this.connecting || this.disconnecting || this.inactiveDisconnecting) {\n      return false;\n    }\n    // do not connect when connected unless force\n    if (!force && this.connected) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect({\n    force = false,\n    skipTimeout = true,\n    skipConnectDelay = false,\n    skipDLCheck = false,\n    skipTabActiveCheck = false,\n  } = {}) {\n    if (!isBrowserSupport()) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode: webphoneErrors.browserNotSupported,\n      });\n      this._alert.warning({\n        message: webphoneErrors.browserNotSupported,\n        ttl: 0,\n      });\n      return;\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    if (!skipTabActiveCheck) {\n      await this._waitStillTabActive();\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    this.store.dispatch({\n      type:\n        this.connectError || force\n          ? this.actionTypes.reconnect\n          : this.actionTypes.connect,\n    });\n    if (!skipConnectDelay && this._connectDelay > 0) {\n      await sleep(this._connectDelay);\n    }\n    if (!skipDLCheck) {\n      try {\n        if (!this._auth.loggedIn) {\n          return;\n        }\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n    }\n    if (this.disconnected || this.disconnecting || !this._auth.loggedIn) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    if (force || skipTimeout) {\n      await this._connect();\n      return;\n    }\n    this._connectTimeout = setTimeout(() => {\n      this._connectTimeout = null;\n      this._connect();\n    }, this._getConnectTimeoutTtl());\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._reconnectAfterSessionEnd && this.sessions.length === 0) {\n      if (this._reconnectAfterSessionEnd.reason) {\n        this._alert.warning({\n          message: this._reconnectAfterSessionEnd.reason,\n          allowDuplicates: false,\n        });\n      }\n      this._reconnectAfterSessionEnd = null;\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n    }\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({ errorCode, statusCode, ttl }) {\n    if (\n      this.connectRetryCounts > 2 ||\n      this.reconnecting ||\n      this.connected ||\n      this.connectError\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        statusCode,\n      });\n      this._alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n        },\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.connectFailed,\n      errorCode,\n      statusCode,\n    });\n    if (this.connectRetryCounts === 1) {\n      this._alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true,\n        },\n      });\n      this._hideConnectFailedAlert();\n    }\n    this.connect({\n      skipDLCheck: true,\n      skipConnectDelay: true,\n      skipTimeout: false,\n    });\n  }\n\n  _onWebphoneRegistered(provisionData) {\n    this.store.dispatch({\n      type: this.actionTypes.registered,\n      device: provisionData.device,\n    });\n    this._alert.info({\n      message: webphoneErrors.connected,\n    });\n    this._hideRegisterErrorAlert();\n    this._setCurrentInstanceAsActiveWebphone();\n  }\n\n  _onWebphoneUnregistered() {\n    this._removeCurrentInstanceFromActiveWebphone();\n    if (\n      this.disconnecting ||\n      this.inactiveDisconnecting ||\n      this.disconnected ||\n      this.inactive\n    ) {\n      // unregister by our app\n      return;\n    }\n    // unavailable, unregistered by some errors\n    this.store.dispatch({\n      type: this.actionTypes.connectError,\n    });\n  }\n\n  _setCurrentInstanceAsActiveWebphone() {\n    if (this._disconnectOnInactive && this._tabManager) {\n      localStorage.setItem(this._activeWebphoneKey, this._tabManager.id);\n    }\n  }\n\n  _removeCurrentInstanceFromActiveWebphone() {\n    if (this._disconnectOnInactive && this._tabManager) {\n      const activeWebphoneInstance = localStorage.getItem(\n        this._activeWebphoneKey,\n      );\n      if (activeWebphoneInstance === this._tabManager.id) {\n        localStorage.removeItem(this._activeWebphoneKey);\n      }\n    }\n  }\n\n  _createOtherWebphoneInstanceRegisteredListener() {\n    if (!this._disconnectOnInactive || !this._tabManager) {\n      return;\n    }\n    // disconnect to inactive when other tabs' web phone connected\n    window.addEventListener('storage', (e) => {\n      if (e.key !== this._activeWebphoneKey) {\n        return;\n      }\n      if (!this.connected || !document.hidden) {\n        return;\n      }\n      if (e.newValue === this._tabManager.id) {\n        return;\n      }\n      if (this.sessions.length === 0) {\n        this._disconnectToInactive();\n        return;\n      }\n      this._disconnectInactiveAfterSessionEnd = true;\n    });\n  }\n\n  async _disconnectToInactive() {\n    this.store.dispatch({\n      type: this.actionTypes.disconnectOnInactive,\n    });\n    await this._removeWebphone();\n    this.store.dispatch({\n      type: this.actionTypes.unregisteredOnInactive,\n    });\n  }\n\n  _makeWebphoneInactiveOnSessionsEmpty() {\n    if (this._disconnectInactiveAfterSessionEnd && this.sessions.length === 0) {\n      this._disconnectInactiveAfterSessionEnd = false;\n      if (!document.hidden) {\n        // set to active\n        if (this._tabManager && this._tabManager.active) {\n          this._setCurrentInstanceAsActiveWebphone();\n        }\n        return;\n      }\n      this._disconnectToInactive();\n    }\n  }\n\n  _onTabActive() {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    if (this.connected) {\n      this._setCurrentInstanceAsActiveWebphone();\n      return;\n    }\n    if (this.inactive) {\n      this.connect({\n        skipDLCheck: true,\n        force: true,\n        skipTabActiveCheck: true,\n      });\n    }\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (\n            m.message === registerErrors[i] &&\n            m.payload &&\n            m.payload.isConnecting === true\n          )\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i] && !m.payload.isConnecting)\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i]) return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _disconnect() {\n    if (this.disconnected || this.disconnecting) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.disconnect,\n    });\n    if (this._webphone) {\n      this._sessions.forEach((session) => {\n        this.hangup(session);\n      });\n      await this._removeWebphone();\n      this._sessions = new Map();\n      this._updateSessions();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.unregistered,\n    });\n  }\n\n  @proxify\n  async disconnect() {\n    await this._disconnect();\n  }\n\n  async _playExtendedControls(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (\n        session.__rc_extendedControlStatus === extendedControlStatus.playing\n      ) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      console.log('Event: replaced', newSession);\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('SessionDescriptionHandler-created', () => {\n      session.sessionDescriptionHandler.on('userMediaFailed', () => {\n        this._audioSettings.onGetUserMediaError();\n      });\n    });\n  }\n\n  _onInvite(session) {\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const sipSession = this._sessions.get(sessionId);\n    const session = this.sessions.find((session) => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession, 'inbound');\n      await sipSession.accept(this.acceptOptions);\n      this.store.dispatch({\n        // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers(\n          [forwardNumber],\n          this._regionSettings,\n          this._brand.id,\n        );\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult = await this._numberValidate.validateNumbers([\n          forwardNumber,\n        ]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n          validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError,\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId) {\n    await Promise.all(\n      Array.from(this._sessions, async ([sessionId, session]) => {\n        if (currentSessionId === sessionId) {\n          return;\n        }\n        if (session.localHold) {\n          return;\n        }\n        if (session.__rc_callStatus === sessionStatus.connecting) {\n          return;\n        }\n        try {\n          await session.hold();\n        } catch (e) {\n          console.error('Hold call fail');\n          throw e;\n        }\n        session.__rc_callStatus = sessionStatus.onHold;\n        this._onCallHold(session);\n      }),\n    );\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled,\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code,\n        },\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers(\n          [transferNumber],\n          this._regionSettings,\n          this._brand.id,\n        );\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._numberValidate.validateNumbers([\n          transferNumber,\n        ]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n          numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        sessionDescriptionHandlerOptions: this.acceptOptions\n          .sessionDescriptionHandlerOptions,\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError,\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue, session) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError,\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  async _invite(toNumber, { inviteOptions, extendedControls }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n\n    if (\n      toNumber.length > 6 &&\n      (!this._availabilityMonitor || !this._availabilityMonitor.isVoIPOnlyMode)\n    ) {\n      const phoneLines = await this._fetchDL();\n      if (phoneLines.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.noOutboundCallWithoutDL,\n        });\n        return null;\n      }\n    }\n\n    await this._holdOtherSession();\n    const session = this._webphone.userAgent.invite(toNumber, inviteOptions);\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = inviteOptions.fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId, extendedControls }) {\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    };\n    const result = await this._invite(toNumber, {\n      inviteOptions,\n      extendedControls,\n    });\n    return result;\n  }\n\n  /**\n   * switch a active call into web phone session.\n   */\n  @proxify\n  async switchCall({ id, from, direction, to, sipData }, homeCountryId) {\n    const extraHeaders = [];\n    extraHeaders.push(\n      `Replaces: ${id};to-tag=${sipData.fromTag};from-tag=${sipData.toTag}`,\n    );\n    extraHeaders.push('RC-call-type: replace');\n    const toNumber =\n      direction === callDirections.outbound ? to.phoneNumber : from.phoneNumber;\n    const fromNumber =\n      direction === callDirections.outbound ? from.phoneNumber : to.phoneNumber;\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n      extraHeaders,\n    };\n    const session = await this._invite(toNumber, {\n      inviteOptions,\n    });\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallInit(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callInit,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(\n      EVENTS.callInit,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callStart,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(\n      EVENTS.callRing,\n      normalizedSession,\n      this.ringSession,\n    );\n  }\n\n  _onBeforeCallEnd(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallEnd,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallEnd(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    this._removeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callEnd,\n      normalizedSession,\n      this.activeSession,\n      this.ringSession,\n    );\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n    this._makeWebphoneInactiveOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallResume(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callResume,\n      session: normalizedSession,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallHold(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.callHold,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  loadAudio() {\n    if (\n      this._webphone &&\n      this._webphone.userAgent &&\n      this._webphone.userAgent.audioHelper\n    ) {\n      this._webphone.userAgent.audioHelper.loadAudio({\n        incoming: this.incomingAudio,\n        outgoing: this.outgoingAudio,\n      });\n    }\n  }\n\n  @proxify\n  setOutgoingAudio({ fileName, dataUrl }) {\n    // TODO validate filePath?\n    this.store.dispatch({\n      type: this.actionTypes.setOutgoingAudio,\n      fileName,\n      dataUrl,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  resetOutgoingAudio() {\n    this.store.dispatch({\n      type: this.actionTypes.resetOutgoingAudio,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  setIncomingAudio({ fileName, dataUrl }) {\n    // TODO validate filePath?\n    this.store.dispatch({\n      type: this.actionTypes.setIncomingAudio,\n      fileName,\n      dataUrl,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  resetIncomingAudio() {\n    this.store.dispatch({\n      type: this.actionTypes.resetIncomingAudio,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  setRingtone({\n    incomingAudio,\n    incomingAudioFile,\n    outgoingAudio,\n    outgoingAudioFile,\n  }) {\n    const isIncomingDefault =\n      incomingAudioFile === DEFAULT_AUDIO &&\n      incomingAudio === defaultIncomingAudio;\n    const isOutgoingDefault =\n      outgoingAudioFile === DEFAULT_AUDIO &&\n      outgoingAudio === defaultOutgoingAudio;\n    this.store.dispatch({\n      type: this.actionTypes.setRingtone,\n      incomingAudio: isIncomingDefault ? null : incomingAudio,\n      incomingAudioFile: isIncomingDefault ? DEFAULT_AUDIO : incomingAudioFile,\n      outgoingAudio: isOutgoingDefault ? null : outgoingAudio,\n      outgoingAudioFile: isOutgoingDefault ? DEFAULT_AUDIO : outgoingAudioFile,\n    });\n    this.loadAudio();\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  @selector\n  sessionPhoneNumbers = [\n    () => this.sessions,\n    (sessions) => {\n      const outputs = [];\n      sessions.forEach((session) => {\n        outputs.push(session.to);\n        outputs.push(session.from);\n      });\n      return outputs;\n    },\n  ];\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  @selector\n  activeSession = [\n    () => this.activeSessionId,\n    () => this.sessions,\n    (activeSessionId, sessions) => {\n      if (!activeSessionId) {\n        return null;\n      }\n      const activeSession = find(\n        (session) => session.id === activeSessionId,\n        sessions,\n      );\n      return activeSession;\n    },\n  ];\n\n  /**\n   * Current ring session(inbound)\n   */\n  @selector\n  ringSession = [\n    () => this.ringSessionId,\n    () => this.sessions,\n    (ringSessionId, sessions) => {\n      if (!ringSessionId) {\n        return null;\n      }\n      const ringSession = find(\n        (session) => session.id === ringSessionId,\n        sessions,\n      );\n      return ringSession;\n    },\n  ];\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  @selector\n  ringSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => isRing(session), sessions),\n  ];\n\n  @selector\n  onHoldSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => isOnHold(session), sessions),\n  ];\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  @selector\n  cachedSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => session.cached, sessions),\n  ];\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._audioSettings.inputDeviceId,\n          },\n          video: false,\n        },\n      },\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get device() {\n    return this.state.device;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get inactiveDisconnecting() {\n    return this.connectionStatus === connectionStatus.inactiveDisconnecting;\n  }\n\n  get inactive() {\n    return this.connectionStatus === connectionStatus.inactive;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  /*\n   * Together with `CallingSettings` module to check if webphone is\n   * Unavailable.\n   */\n  get isUnavailable() {\n    return (\n      this.ready &&\n      this._auth.loggedIn &&\n      (!this._audioSettings.userMedia ||\n        this.reconnecting ||\n        this.connectError ||\n        this.inactive)\n    );\n  }\n\n  get incomingAudioFile() {\n    return this._storage.getItem(this._storageKey).incomingAudioFile;\n  }\n\n  get incomingAudioDataUrl() {\n    return this._storage.getItem(this._storageKey).incomingAudioDataUrl;\n  }\n\n  get incomingAudio() {\n    return this.incomingAudioDataUrl || defaultIncomingAudio;\n  }\n\n  get outgoingAudioFile() {\n    return this._storage.getItem(this._storageKey).outgoingAudioFile;\n  }\n\n  get outgoingAudioDataUrl() {\n    return this._storage.getItem(this._storageKey).outgoingAudioDataUrl;\n  }\n\n  get outgoingAudio() {\n    return this.outgoingAudioDataUrl || defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudio() {\n    return defaultIncomingAudio;\n  }\n\n  get defaultOutgoingAudio() {\n    return defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n\n  get defaultOutgoingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n\n  @selector\n  ringingCallOnView = [\n    () => this.ringSessions,\n    (sessions) => find((session) => !session.minimized, sessions),\n  ];\n}\n"],"file":"index.js"}