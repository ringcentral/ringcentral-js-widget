{"version":3,"sources":["modules/Webphone/index.js"],"names":["AUTO_RETRIES_DELAY","INACTIVE_SLEEP_DELAY","INCOMING_CALL_INVALID_STATE_ERROR_CODE","extendedControlStatus","Enum","EVENTS","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","provisionUpdate","serverConnecting","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","onCallResume","onCallHold","onCallInit","onBeforeCallResume","onBeforeCallEnd","regionSettings","brand","webphoneSDKOptions","permissionCheck","availabilityMonitor","disconnectOnInactive","connectDelay","prefix","options","actionTypes","_regionSettings","_brand","_eventEmitter","EventEmitter","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_numberValidate","_audioSettings","_availabilityMonitor","_contactMatcher","_tabManager","_webphoneSDKOptions","_permissionCheck","_reconnectDelays","_connectDelay","_disconnectOnInactive","_activeWebphoneKey","on","callEnd","callRing","callStart","callResume","callHold","callInit","beforeCallResume","_onBeforeCallEndFunctions","beforeCallEnd","_webphone","_remoteVideo","_localVideo","_sessions","Map","_reducer","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","_tabActive","_connectTimeout","_isFirstRegister","addQuerySource","getQueriesFn","sessionPhoneNumbers","readyCheckFn","ready","document","createElement","id","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","_removeCurrentInstanceFromActiveWebphone","subscribe","_onStateChange","_createOtherWebphoneInstanceRegisteredListener","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","active","_onTabActive","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","forEach","length","concat","stop","_waitUnregistered","console","error","removeAllListeners","isConnected","reconnectTimer","clearTimeout","undefined","__clearSwitchBackTimer","e","Promise","resolve","reject","timeout","setTimeout","Error","once","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","loadAudio","incoming","incomingAudio","outgoing","outgoingAudio","connected","_onWebphoneRegistered","log","_onWebphoneUnregistered","cause","message","data","isSipErrorCode","disconnected","disconnecting","errorCode","statusCode","status_code","_onConnectError","session","_onInvite","sessions","warning","allowDuplicates","connect","force","skipDLCheck","skipConnectDelay","reason","connectError","reconnect","setRetryCounts","retryCounts","ttl","_sipProvision","sipProvision","connectRetryCounts","indexOf","refreshServiceFeatures","_createWebphone","_waitStillTabActive","connecting","inactiveDisconnecting","skipTimeout","skipTabActiveCheck","browserNotSupported","_isAvailiableToConnect","_fetchDL","noOutboundCallWithoutDL","checkDLError","_connect","_getConnectTimeoutTtl","reconnecting","danger","payload","_hideConnectingAlert","isConnecting","_hideConnectFailedAlert","registered","info","_hideRegisterErrorAlert","_setCurrentInstanceAsActiveWebphone","inactive","localStorage","setItem","activeWebphoneInstance","getItem","removeItem","key","hidden","newValue","_disconnectToInactive","unregisteredOnInactive","alertIds","messages","filter","m","i","len","map","dismiss","hangup","_updateSessions","unregistered","__rc_extendedControlStatus","playing","controls","__rc_extendedControls","slice","_sendDTMF","stopped","incomingResponse","__rc_callStatus","sessionStatus","finished","headers","_onCallStart","_playExtendedControls","_onCallEnd","newSession","replaced","__rc_direction","callDirections","inbound","_addSession","_onAccepted","__rc_isOnMute","onMute","sessionDescriptionHandler","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","sessionId","sipSession","get","find","_holdOtherSession","accept","acceptOptions","callAnswer","code","unhold","forwardNumber","validatedResult","validPhoneNumber","validateNumbers","result","errors","callErrors","phoneNumber","numbers","e164","__rc_isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","onHold","_onCallHold","holdError","currentSessionId","all","Array","from","onholdCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","recordDisabled","noAccess","recordError","stopRecord","park","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","ua","invite","sessionDescriptionHandlerOptions","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","func","toNumber","inviteOptions","extendedControls","isVoIPOnlyMode","outbound","__rc_fromNumber","fromNumber","_onCallInit","homeCountryId","_invite","direction","to","sipData","extraHeaders","push","fromTag","toTag","contact","__rc_contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","normalizeSession","updateSessions","set","__rc_minimized","normalizedSession","x","triggerMatch","emit","activeSession","playIncoming","ringSession","_removeSession","_reconnectWebphoneIfNecessaryOnSessionsEmpty","_makeWebphoneInactiveOnSessionsEmpty","handler","state","status","moduleStatuses","ringSessionId","activeSessionId","lastEndedSessions","webphoneEnabled","connectionStatus","constraints","audio","deviceId","inputDeviceId","video","isOnTransfer","userMedia","RcModule","proxify","selector","outputs","cached","ringSessions","minimized"],"mappings":"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","sourcesContent":["import { find, filter } from 'ramda';\nimport EventEmitter from 'events';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport validateNumbers from '../../lib/validateNumbers';\nimport Enum from '../../lib/Enum';\n\nimport {\n  isBrowserSupport,\n  isChrome,\n  isEnableMidLinesInSDP,\n  normalizeSession,\n  isRing,\n  isOnHold,\n  extractHeadersData,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst INACTIVE_SLEEP_DELAY = 1000;\nconst INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\nconst extendedControlStatus = new Enum(['pending', 'playing', 'stopped']);\n\nconst EVENTS = new Enum([\n  'callRing',\n  'callStart',\n  'callEnd',\n  'callHold',\n  'callResume',\n  'beforeCallResume',\n  'beforeCallEnd',\n  'callInit',\n]);\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'RolesAndPermissions',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'WebphoneOptions', optional: true },\n  ],\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Brand} params.brand - app brand\n   * @param {RegionSettings} params.regionSettings - regionSettings\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call accpeted by callee\n   * @param {Function} params.onCallInit - callback on create a new call\n   * @param {Function} params.onCallResume - callback on a call resume\n   * @param {Function} params.onCallHold - callback on a call holded\n   * @param {Function} params.onBeforeCallResume - callback before a call resume\n   * @param {Function} params.onBeforeCallEnd - callback before a call hangup\n   * @param {Object} params.webphoneSDKOptions - callback before a call hangup\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    onCallResume,\n    onCallHold,\n    onCallInit,\n    onBeforeCallResume,\n    onBeforeCallEnd,\n    regionSettings,\n    brand,\n    webphoneSDKOptions,\n    permissionCheck = true,\n    availabilityMonitor,\n    disconnectOnInactive = false,\n    connectDelay = 0,\n    prefix,\n    ...options\n  }) {\n    super({\n      ...options,\n      prefix,\n      actionTypes,\n    });\n\n    this._regionSettings = regionSettings;\n    this._brand = brand;\n    this._eventEmitter = new EventEmitter();\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(\n      rolesAndPermissions,\n      'rolesAndPermissions',\n    );\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this::ensureExist(audioSettings, 'audioSettings');\n    this._availabilityMonitor = availabilityMonitor;\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n    this._webphoneSDKOptions = webphoneSDKOptions || {};\n\n    this._permissionCheck = permissionCheck;\n    this._reconnectDelays = AUTO_RETRIES_DELAY;\n    this._connectDelay = connectDelay;\n    this._disconnectOnInactive = disconnectOnInactive;\n    this._activeWebphoneKey = `${prefix}-active-webphone-key`;\n\n    if (typeof onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, onCallEnd);\n    }\n    if (typeof onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, onCallRing);\n    }\n    if (typeof onCallStart === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, onCallStart);\n    }\n    if (typeof onCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, onCallResume);\n    }\n    if (typeof onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, onCallHold);\n    }\n    if (typeof onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, onCallInit);\n    }\n    if (typeof onBeforeCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, onBeforeCallResume);\n    }\n    this._onBeforeCallEndFunctions = [];\n    if (typeof onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, onBeforeCallEnd);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n    this._tabActive = false;\n    this._connectTimeout = null;\n    this._isFirstRegister = true;\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: () => this.sessionPhoneNumbers,\n        readyCheckFn: () => this.ready,\n      });\n    }\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      if (this._remoteVideo.setSinkId && this._audioSettings.outputDeviceId) {\n        this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n      }\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n        this._removeCurrentInstanceFromActiveWebphone();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n    this._createOtherWebphoneInstanceRegisteredListener();\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted)\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (this._webphone && this._webphone.userAgent) {\n        this._webphone.userAgent.audioHelper.setVolume(\n          this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume,\n        );\n      }\n    }\n    if (this.ready && this._callVolume !== this._audioSettings.callVolume) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (this._remoteVideo) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (this._remoteVideo && this._remoteVideo.setSinkId) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n    if (\n      this.ready &&\n      this._tabManager &&\n      this._tabManager.ready &&\n      this._tabActive !== this._tabManager.active\n    ) {\n      this._tabActive = this._tabManager.active;\n      if (this._tabActive) {\n        this._onTabActive();\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service\n      .platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }],\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client\n      .account()\n      .extension()\n      .device()\n      .list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  async _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    try {\n      await this._waitUnregistered(this._webphone.userAgent);\n    } catch (e) {\n      console.error(e);\n    }\n    try {\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone.userAgent.transport.removeAllListeners();\n      if (this._webphone.userAgent.transport.isConnected()) {\n        this._webphone.userAgent.transport.disconnect();\n      }\n      if (this._webphone.userAgent.transport.reconnectTimer) {\n        clearTimeout(this._webphone.userAgent.transport.reconnectTimer);\n        this._webphone.userAgent.transport.reconnectTimer = undefined;\n      }\n      if (this._webphone.userAgent.transport.__clearSwitchBackTimer) {\n        this._webphone.userAgent.transport.__clearSwitchBackTimer();\n      }\n    } catch (e) {\n      console.error(e);\n      // ignore clean listener error\n    }\n    this._webphone = null;\n  }\n\n  _waitUnregistered(userAgent) {\n    return new Promise((resolve, reject) => {\n      let timeout = setTimeout(() => {\n        timeout = null;\n        reject(new Error('unregistered timeout'));\n      }, 2000);\n      userAgent.once('unregistered', (e) => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        resolve(e);\n      });\n    });\n  }\n\n  async _createWebphone(provisionData) {\n    await this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isEnableMidLinesInSDP(),\n      ...this._webphoneSDKOptions,\n    });\n    this._webphone.userAgent.audioHelper.loadAudio({\n      incoming: incomingAudio, // path to audio file for incoming call\n      outgoing: outgoingAudio, // path to aduotfile for outgoing call\n    });\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted\n        ? 0\n        : this._audioSettings.ringtoneVolume,\n    );\n    // Webphone userAgent registed event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this._onWebphoneRegistered(provisionData);\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      this._onWebphoneUnregistered();\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if (!response && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message &&\n        typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from black list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response\n        ? response.statusCode || response.status_code\n        : null;\n      switch (statusCode) {\n        // Webphone account overlimit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (this.sessions.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.provisionUpdate,\n          allowDuplicates: false,\n        });\n        this.connect({\n          force: true,\n          skipDLCheck: true,\n          skipConnectDelay: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: webphoneErrors.provisionUpdate,\n      };\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this._alert.warning({\n          message: webphoneErrors.serverConnecting,\n          allowDuplicates: false,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.reconnect,\n        });\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this.store.dispatch({\n        type: this.actionTypes.setRetryCounts,\n        retryCounts: 20,\n      });\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    this._webphone.userAgent.transport.on('transportError', () => {\n      console.log('WebSocket transportError occured');\n    });\n    this._webphone.userAgent.transport.on('wsConnectionError', () => {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n      });\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (this.sessions.length === 0) {\n        this.connect({\n          skipConnectDelay: true,\n          force: true,\n          skipDLCheck: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: null,\n      };\n    });\n  }\n\n  @proxify\n  async _connect() {\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    let sipProvision;\n    try {\n      sipProvision = await this._sipProvision();\n    } catch (error) {\n      console.error(error, this.connectRetryCounts);\n      if (\n        error &&\n        error.message &&\n        error.message.indexOf('Feature [WebPhone] is not available') > -1\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        return;\n      }\n      this._onConnectError({\n        errorCode: webphoneErrors.sipProvisionError,\n        statusCode: null,\n        ttl: 0,\n      });\n      return;\n    }\n    await this._createWebphone(sipProvision);\n  }\n\n  async _waitStillTabActive() {\n    if (!this._tabManager || this._tabManager.active) {\n      return;\n    }\n    await sleep(INACTIVE_SLEEP_DELAY);\n    await this._waitStillTabActive();\n  }\n\n  _isAvailiableToConnect({ force }) {\n    if (!this.enabled || !this._auth.loggedIn) {\n      return false;\n    }\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    if (this.connecting || this.disconnecting || this.inactiveDisconnecting) {\n      return false;\n    }\n    // do not connect when connected unless force\n    if (!force && this.connected) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect({\n    force = false,\n    skipTimeout = true,\n    skipConnectDelay = false,\n    skipDLCheck = false,\n    skipTabActiveCheck = false,\n  } = {}) {\n    if (!isBrowserSupport()) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode: webphoneErrors.browserNotSupported,\n      });\n      this._alert.warning({\n        message: webphoneErrors.browserNotSupported,\n        ttl: 0,\n      });\n      return;\n    }\n    if (!this._isAvailiableToConnect({ force })) {\n      return;\n    }\n    if (!skipTabActiveCheck) {\n      await this._waitStillTabActive();\n    }\n    if (!this._isAvailiableToConnect({ force })) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    this.store.dispatch({\n      type:\n        this.connectError || force\n          ? this.actionTypes.reconnect\n          : this.actionTypes.connect,\n    });\n    if (!skipConnectDelay && this._connectDelay > 0) {\n      await sleep(this._connectDelay);\n    }\n    if (!skipDLCheck) {\n      try {\n        if (!this._auth.loggedIn) {\n          return;\n        }\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n    }\n    if (this.disconnected || this.disconnecting || !this._auth.loggedIn) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    if (force || skipTimeout) {\n      await this._connect();\n      return;\n    }\n    this._connectTimeout = setTimeout(() => {\n      this._connectTimeout = null;\n      this._connect();\n    }, this._getConnectTimeoutTtl());\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._reconnectAfterSessionEnd && this.sessions.length === 0) {\n      if (this._reconnectAfterSessionEnd.reason) {\n        this._alert.warning({\n          message: this._reconnectAfterSessionEnd.reason,\n          allowDuplicates: false,\n        });\n      }\n      this._reconnectAfterSessionEnd = null;\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n    }\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({ errorCode, statusCode, ttl }) {\n    if (\n      this.connectRetryCounts > 2 ||\n      this.reconnecting ||\n      this.connected ||\n      this.connectError\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        statusCode,\n      });\n      this._alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n        },\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.connectFailed,\n      errorCode,\n      statusCode,\n    });\n    if (this.connectRetryCounts === 1) {\n      this._alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true,\n        },\n      });\n      this._hideConnectFailedAlert();\n    }\n    this.connect({\n      skipDLCheck: true,\n      skipConnectDelay: true,\n      skipTimeout: false,\n    });\n  }\n\n  _onWebphoneRegistered(provisionData) {\n    this.store.dispatch({\n      type: this.actionTypes.registered,\n      device: provisionData.device,\n    });\n    this._alert.info({\n      message: webphoneErrors.connected,\n    });\n    this._hideRegisterErrorAlert();\n    this._setCurrentInstanceAsActiveWebphone();\n  }\n\n  _onWebphoneUnregistered() {\n    this._removeCurrentInstanceFromActiveWebphone();\n    if (\n      this.disconnecting ||\n      this.inactiveDisconnecting ||\n      this.disconnected ||\n      this.inactive\n    ) {\n      // unregister by our app\n      return;\n    }\n    // unavailable, unregistered by some errors\n    this.store.dispatch({\n      type: this.actionTypes.connectError,\n    });\n  }\n\n  _setCurrentInstanceAsActiveWebphone() {\n    if (this._disconnectOnInactive && this._tabManager) {\n      localStorage.setItem(this._activeWebphoneKey, this._tabManager.id);\n    }\n  }\n\n  _removeCurrentInstanceFromActiveWebphone() {\n    if (this._disconnectOnInactive && this._tabManager) {\n      const activeWebphoneInstance = localStorage.getItem(\n        this._activeWebphoneKey,\n      );\n      if (activeWebphoneInstance === this._tabManager.id) {\n        localStorage.removeItem(this._activeWebphoneKey);\n      }\n    }\n  }\n\n  _createOtherWebphoneInstanceRegisteredListener() {\n    if (!this._disconnectOnInactive || !this._tabManager) {\n      return;\n    }\n    // disconnect to inactive when other tabs' web phone connected\n    window.addEventListener('storage', (e) => {\n      if (e.key !== this._activeWebphoneKey) {\n        return;\n      }\n      if (!this.connected || !document.hidden) {\n        return;\n      }\n      if (e.newValue === this._tabManager.id) {\n        return;\n      }\n      if (this.sessions.length === 0) {\n        this._disconnectToInactive();\n        return;\n      }\n      this._disconnectInactiveAfterSessionEnd = true;\n    });\n  }\n\n  async _disconnectToInactive() {\n    this.store.dispatch({\n      type: this.actionTypes.disconnectOnInactive,\n    });\n    await this._removeWebphone();\n    this.store.dispatch({\n      type: this.actionTypes.unregisteredOnInactive,\n    });\n  }\n\n  _makeWebphoneInactiveOnSessionsEmpty() {\n    if (this._disconnectInactiveAfterSessionEnd && this.sessions.length === 0) {\n      this._disconnectInactiveAfterSessionEnd = false;\n      if (!document.hidden) {\n        // set to active\n        if (this._tabManager && this._tabManager.active) {\n          this._setCurrentInstanceAsActiveWebphone();\n        }\n        return;\n      }\n      this._disconnectToInactive();\n    }\n  }\n\n  _onTabActive() {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    if (this.connected) {\n      this._setCurrentInstanceAsActiveWebphone();\n      return;\n    }\n    if (this.inactive) {\n      this.connect({\n        skipDLCheck: true,\n        force: true,\n        skipTabActiveCheck: true,\n      });\n    }\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (\n            m.message === registerErrors[i] &&\n            m.payload &&\n            m.payload.isConnecting === true\n          )\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i] && !m.payload.isConnecting)\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i]) return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _disconnect() {\n    if (this.disconnected || this.disconnecting) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.disconnect,\n    });\n    if (this._webphone) {\n      this._sessions.forEach((session) => {\n        this.hangup(session);\n      });\n      await this._removeWebphone();\n      this._sessions = new Map();\n      this._updateSessions();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.unregistered,\n    });\n  }\n\n  @proxify\n  async disconnect() {\n    await this._disconnect();\n  }\n\n  async _playExtendedControls(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (\n        session.__rc_extendedControlStatus === extendedControlStatus.playing\n      ) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      console.log('Event: replaced', newSession);\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('SessionDescriptionHandler-created', () => {\n      session.sessionDescriptionHandler.on('userMediaFailed', () => {\n        this._audioSettings.onGetUserMediaError();\n      });\n    });\n  }\n\n  _onInvite(session) {\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const sipSession = this._sessions.get(sessionId);\n    const session = this.sessions.find((session) => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession, 'inbound');\n      await sipSession.accept(this.acceptOptions);\n      this.store.dispatch({\n        // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers(\n          [forwardNumber],\n          this._regionSettings,\n          this._brand.id,\n        );\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult = await this._numberValidate.validateNumbers([\n          forwardNumber,\n        ]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n          validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError,\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId) {\n    await Promise.all(\n      Array.from(this._sessions, async ([sessionId, session]) => {\n        if (currentSessionId === sessionId) {\n          return;\n        }\n        if (session.localHold) {\n          return;\n        }\n        if (session.__rc_callStatus === sessionStatus.connecting) {\n          return;\n        }\n        try {\n          await session.hold();\n        } catch (e) {\n          console.error('Hold call fail');\n          throw e;\n        }\n        session.__rc_callStatus = sessionStatus.onHold;\n        this._onCallHold(session);\n      }),\n    );\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled,\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code,\n        },\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers(\n          [transferNumber],\n          this._regionSettings,\n          this._brand.id,\n        );\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._numberValidate.validateNumbers([\n          transferNumber,\n        ]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n          numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        sessionDescriptionHandlerOptions: this.acceptOptions\n          .sessionDescriptionHandlerOptions,\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError,\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue, session) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError,\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  async _invite(toNumber, { inviteOptions, extendedControls }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n\n    if (\n      toNumber.length > 6 &&\n      (!this._availabilityMonitor || !this._availabilityMonitor.isVoIPOnlyMode)\n    ) {\n      const phoneLines = await this._fetchDL();\n      if (phoneLines.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.noOutboundCallWithoutDL,\n        });\n        return null;\n      }\n    }\n\n    await this._holdOtherSession();\n    const session = this._webphone.userAgent.invite(toNumber, inviteOptions);\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = inviteOptions.fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId, extendedControls }) {\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    };\n    const result = await this._invite(toNumber, {\n      inviteOptions,\n      extendedControls,\n    });\n    return result;\n  }\n\n  /**\n   * switch a active call into web phone session.\n   */\n  @proxify\n  async switchCall({ id, from, direction, to, sipData }, homeCountryId) {\n    const extraHeaders = [];\n    extraHeaders.push(\n      `Replaces: ${id};to-tag=${sipData.fromTag};from-tag=${sipData.toTag}`,\n    );\n    extraHeaders.push('RC-call-type: replace');\n    const toNumber =\n      direction === callDirections.outbound ? to.phoneNumber : from.phoneNumber;\n    const fromNumber =\n      direction === callDirections.outbound ? from.phoneNumber : to.phoneNumber;\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n      extraHeaders,\n    };\n    const session = await this._invite(toNumber, {\n      inviteOptions,\n    });\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallInit(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callInit,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(\n      EVENTS.callInit,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callStart,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(\n      EVENTS.callRing,\n      normalizedSession,\n      this.ringSession,\n    );\n  }\n\n  _onBeforeCallEnd(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallEnd,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallEnd(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    this._removeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callEnd,\n      normalizedSession,\n      this.activeSession,\n      this.ringSession,\n    );\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n    this._makeWebphoneInactiveOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallResume(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callResume,\n      session: normalizedSession,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallHold(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.callHold,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  @selector\n  sessionPhoneNumbers = [\n    () => this.sessions,\n    (sessions) => {\n      const outputs = [];\n      sessions.forEach((session) => {\n        outputs.push(session.to);\n        outputs.push(session.from);\n      });\n      return outputs;\n    },\n  ];\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  @selector\n  activeSession = [\n    () => this.activeSessionId,\n    () => this.sessions,\n    (activeSessionId, sessions) => {\n      if (!activeSessionId) {\n        return null;\n      }\n      const activeSession = find(\n        (session) => session.id === activeSessionId,\n        sessions,\n      );\n      return activeSession;\n    },\n  ];\n\n  /**\n   * Current ring session(inbound)\n   */\n  @selector\n  ringSession = [\n    () => this.ringSessionId,\n    () => this.sessions,\n    (ringSessionId, sessions) => {\n      if (!ringSessionId) {\n        return null;\n      }\n      const ringSession = find(\n        (session) => session.id === ringSessionId,\n        sessions,\n      );\n      return ringSession;\n    },\n  ];\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  @selector\n  ringSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => isRing(session), sessions),\n  ];\n\n  @selector\n  onHoldSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => isOnHold(session), sessions),\n  ];\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  @selector\n  cachedSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => session.cached, sessions),\n  ];\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._audioSettings.inputDeviceId,\n          },\n          video: false,\n        },\n      },\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get device() {\n    return this.state.device;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get inactiveDisconnecting() {\n    return this.connectionStatus === connectionStatus.inactiveDisconnecting;\n  }\n\n  get inactive() {\n    return this.connectionStatus === connectionStatus.inactive;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  /*\n   * Together with `CallingSettings` module to check if webphone is\n   * Unavailable.\n   */\n  get isUnavailable() {\n    return (\n      this.ready &&\n      this._auth.loggedIn &&\n      (!this._audioSettings.userMedia ||\n        this.reconnecting ||\n        this.connectError ||\n        this.inactive)\n    );\n  }\n\n  @selector\n  ringingCallOnView = [\n    () => this.ringSessions,\n    (sessions) => find((session) => !session.minimized, sessions),\n  ];\n}\n"],"file":"index.js"}