{"version":3,"sources":["modules/ContactSearch/index.js"],"names":["DefaultMinimalSearchLength","ContactSearch","deps","dep","optional","auth","storage","storageKey","minimalSearchLength","ttl","options","actionTypes","debouncedSearch","search","_auth","_storage","_storageKey","_minimalSearchLength","_ttl","_searchSources","Map","_searchSourcesFormat","_searchSourcesCheck","_searchIds","_reducer","registerReducer","key","reducer","cache","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","_clearStateCache","loginStatus","loggedIn","ready","_readyCheck","dispatch","type","initSuccess","cleanUp","resetSuccess","reset","sourceName","searchFn","readyCheckFn","formatFn","Error","has","set","searchString","length","prepareSearch","_clearTimeout","_timeoutId","setTimeout","searching","state","undefined","searchOnSources","Array","from","keys","_searchSource","clearTimeout","searchId","uuid","v4","entities","_searchFromCache","_loadSearching","get","_saveSearching","_onSearchError","result","list","sort","current","next","currentName","name","currentPhoneNumber","phoneNumber","nextName","nextPhoneNumber","isSort","indexOf","contactSearch","now","Date","timestamp","searchError","searchSuccess","save","getItem","status","searchStatus","RcModule","proxify","selector","_quickSort"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\nimport loginStatus from '../Auth/loginStatus';\nimport proxify from '../../lib/proxy/proxify';\nimport debounce from '../../lib/debounce';\nimport actionTypes from './actionTypes';\nimport getContactSearchReducer from './getContactSearchReducer';\nimport getCacheReducer from './getCacheReducer';\n\nexport const DefaultMinimalSearchLength = 3;\n\n/**\n * @class\n * @description Contact search module\n */\n@Module({\n  deps: [\n    'Auth',\n    'Storage',\n    { dep: 'ContactSearchOptions', optional: true },\n    { dep: 'TabManager', optional: true },\n  ],\n})\nexport default class ContactSearch extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Auth} params.auth - auth module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {String} params.storageKey - storage key for storage module default \"contactSearchCache\"\n   * @param {Number} params.minimalSearchLength - minimal search text length, default 3 characters\n   * @param {Number} params.ttl - timestamp of local cache, default 5 mins\n   */\n  constructor({\n    auth,\n    storage,\n    storageKey = 'contactSearchCache',\n    minimalSearchLength = DefaultMinimalSearchLength,\n    ttl = 5 * 60 * 1000, // 5 minutes\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._storage = storage;\n    this._storageKey = storageKey;\n    this._minimalSearchLength = minimalSearchLength;\n    this._ttl = ttl;\n    this._searchSources = new Map();\n    this._searchSourcesFormat = new Map();\n    this._searchSourcesCheck = new Map();\n    this._searchIds = {};\n    if (this._storage) {\n      this._reducer = getContactSearchReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getCacheReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getContactSearchReducer(this.actionTypes, {\n        cache: getCacheReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n      this._clearStateCache();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loginStatus === loginStatus.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      this._readyCheck() &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (this._auth.loginStatus !== loginStatus.loggedIn ||\n        (this._storage && !this._storage.ready)) &&\n      this.ready\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _clearStateCache() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanUp,\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  resetSearchStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n  }\n\n  addSearchSource({ sourceName, searchFn, readyCheckFn, formatFn }) {\n    if (!sourceName) {\n      throw new Error('ContactSearch: \"sourceName\" is required.');\n    }\n    if (this._searchSources.has(sourceName)) {\n      throw new Error(\n        `ContactSearch: A search source named \"${sourceName}\" already exists`,\n      );\n    }\n    if (this._searchSourcesCheck.has(sourceName)) {\n      throw new Error(\n        `ContactSearch: A search source check named \"${sourceName}\" already exists`,\n      );\n    }\n    if (this._searchSourcesFormat.has(sourceName)) {\n      throw new Error(\n        `ContactSearch: A search source format named \"${sourceName}\" already exists`,\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error('ContactSearch: searchFn must be a function');\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error('ContactSearch: readyCheckFn must be a function');\n    }\n    if (typeof formatFn !== 'function') {\n      throw new Error('ContactSearch: formatFn must be a function');\n    }\n    this._searchSources.set(sourceName, searchFn);\n    this._searchSourcesFormat.set(sourceName, formatFn);\n    this._searchSourcesCheck.set(sourceName, readyCheckFn);\n  }\n\n  debouncedSearch = debounce(this.search, 800, false);\n\n  @proxify\n  async search({ searchString }) {\n    if (\n      !this.ready ||\n      !searchString ||\n      searchString.length < this._minimalSearchLength\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.prepareSearch,\n      });\n      return;\n    }\n    this._clearTimeout();\n    this._timeoutId = setTimeout(async () => {\n      const searching = { ...this.state.searching };\n      await this.search({ searchString: undefined });\n      await this.search(searching);\n    }, this._ttl);\n    const searchOnSources = Array.from(this._searchSources.keys());\n    for (const sourceName of searchOnSources) {\n      await this._searchSource({\n        searchOnSources,\n        sourceName,\n        searchString,\n      });\n    }\n  }\n\n  _clearTimeout() {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  // TODO Need to refactor, remove cache, and update data in real time.\n  @proxify\n  async _searchSource({ searchOnSources, sourceName, searchString }) {\n    const searchId = uuid.v4();\n    this._searchIds[sourceName] = searchId;\n    this.store.dispatch({\n      type: this.actionTypes.search,\n    });\n    try {\n      let entities = null;\n      entities = this._searchFromCache({ sourceName, searchString });\n      if (entities) {\n        this._loadSearching({ searchOnSources, searchString, entities });\n        return;\n      }\n      entities = await this._searchSources.get(sourceName)({\n        searchString,\n      });\n      entities = this._searchSourcesFormat.get(sourceName)(entities);\n      this._saveSearching({ sourceName, searchString, entities });\n      if (this._searchIds[sourceName] === searchId) {\n        this._loadSearching({ searchOnSources, searchString, entities });\n      }\n    } catch (error) {\n      this._onSearchError();\n    }\n  }\n\n  _quickSort({ result = [], searchString = '' }) {\n    const list = [...result];\n    if (searchString === '') {\n      return list;\n    }\n    return list.sort((current, next) => {\n      const currentName = current.name || '';\n      const currentPhoneNumber = current.phoneNumber || '';\n      const nextName = next.name || '';\n      const nextPhoneNumber = next.phoneNumber || '';\n      const isSort =\n        currentName.indexOf(searchString) < nextName.indexOf(searchString) ||\n        currentPhoneNumber.indexOf(searchString) <\n          nextPhoneNumber.indexOf(searchString);\n      return isSort;\n    });\n  }\n\n  _searchFromCache({ sourceName, searchString }) {\n    const key = `${sourceName}-${searchString}`;\n    const searching =\n      this.cache && this.cache.contactSearch && this.cache.contactSearch[key];\n    const now = Date.now();\n    if (searching && now - searching.timestamp < this._ttl) {\n      return searching.entities;\n    }\n    return null;\n  }\n\n  _readyCheck() {\n    for (const sourceName of this._searchSourcesCheck.keys()) {\n      if (!this._searchSourcesCheck.get(sourceName)()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _onSearchError() {\n    this.store.dispatch({\n      type: this.actionTypes.searchError,\n    });\n  }\n\n  _loadSearching({ searchOnSources, searchString, entities }) {\n    this.store.dispatch({\n      type: this.actionTypes.searchSuccess,\n      searchOnSources,\n      searchString,\n      entities,\n    });\n  }\n\n  _saveSearching({ sourceName, searchString, entities }) {\n    this.store.dispatch({\n      type: this.actionTypes.save,\n      sourceName,\n      searchString,\n      entities,\n      ttl: this._ttl,\n    });\n  }\n\n  get cache() {\n    return this._storage\n      ? this._storage.getItem(this._storageKey)\n      : this.state.cache;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get searchStatus() {\n    return this.state.searchStatus;\n  }\n\n  get searching() {\n    return this.state.searching;\n  }\n\n  get searchResult() {\n    return this.searching ? this.searching.result : [];\n  }\n\n  @selector\n  sortedResult = [\n    () => this.searching,\n    (searching) => this._quickSort(searching),\n  ];\n}\n"],"file":"index.js"}