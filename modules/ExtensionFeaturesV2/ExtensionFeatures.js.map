{"version":3,"sources":["modules/ExtensionFeaturesV2/ExtensionFeatures.ts"],"names":["ExtensionFeatures","name","deps","dep","optional","data","_stopWatching","_source","DataSource","extensionFeaturesOptions","key","cleanOnReset","fetchFunction","_deps","client","service","platform","get","response","json","readyCheckFunction","subscription","ready","dataFetcherV2","register","message","disableCache","tabManager","active","body","hints","includes","subscriptionHints","limits","features","permissions","fetchData","subscribe","subscriptionFilters","extensionInfo","_handleSubscription","records","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaaA,iB,WAVZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,mBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,eAFI,EAGJ,cAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAJI,EAKJ;AAAED,IAAAA,GAAG,EAAE,0BAAP;AAAmCC,IAAAA,QAAQ,EAAE;AAA7C,GALI;AAFA,CAAP,C,UA6DE,oBAA4B;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc,CAACA,IAAD,CAAd;AAAA,CAA5B,C;;;;;AA9CD,6BAAYH,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AADsB,UADdI,aACc,GADe,IACf;AAItB,UAAKC,OAAL,GAAe,IAAIC,wBAAJ,iCACVN,IAAI,CAACO,wBADK;AAEbC,MAAAA,GAAG,EAAE,mBAFQ;AAGbC,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACU,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,CACpBC,QADoB,GAEpBC,GAFoB,CAEhB,8CAFgB,CADV;;AAAA;AACPC,kBAAAA,QADO;AAAA,mDAINA,QAAQ,CAACC,IAAT,EAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAJA;AAUbC,MAAAA,kBAAkB,EAAE;AAAA,eAAM,MAAKP,KAAL,CAAWQ,YAAX,CAAwBC,KAA9B;AAAA;AAVP,OAAf;;AAYA,UAAKT,KAAL,CAAWU,aAAX,CAAyBC,QAAzB,CAAkC,MAAKjB,OAAvC;;AAhBsB;AAiBvB;;;;wCAE6BkB,O,EAA6B;AAAA;;AACzD,UACE,KAAKH,KAAL,KACC,KAAKf,OAAL,CAAamB,YAAb,wDAA8B,KAAKb,KAAL,CAAWc,UAAzC,2DAA8B,uBAAuBC,MAArD,yEAA+D,IAA/D,CADD,MAEAH,OAFA,aAEAA,OAFA,wCAEAA,OAAO,CAAEI,IAFT,kDAEA,cAAeC,KAFf,MAGCL,OAAO,CAACI,IAAR,CAAaC,KAAb,CAAmBC,QAAnB,CAA4BC,qCAAkBC,MAA9C,KACCR,OAAO,CAACI,IAAR,CAAaC,KAAb,CAAmBC,QAAnB,CAA4BC,qCAAkBE,QAA9C,CADD,IAECT,OAAO,CAACI,IAAR,CAAaC,KAAb,CAAmBC,QAAnB,CAA4BC,qCAAkBG,WAA9C,CALF,CADF,EAOE;AACA,aAAKC,SAAL;AACD;AACF;;;6BAEQ;AAAA;;AACP,WAAKvB,KAAL,CAAWQ,YAAX,CAAwBgB,SAAxB,CAAkC,CAACC,yCAAoBC,aAArB,CAAlC;;AACA,WAAKjC,aAAL,GAAqB,iBACnB,IADmB,EAEnB;AAAA,eAAM,MAAI,CAACO,KAAL,CAAWQ,YAAX,CAAwBI,OAA9B;AAAA,OAFmB,EAGnB,UAACA,OAAD;AAAA,eAAa,MAAI,CAACe,mBAAL,CAAyBf,OAAzB,CAAb;AAAA,OAHmB,CAArB;AAKD;;;8BAES;AAAA;;AACR,kCAAKnB,aAAL;AACA,WAAKA,aAAL,GAAqB,IAArB;AACD;;;wBAGc;AAAA;;AACb,iDAAO,KAAKD,IAAZ,+CAAO,WAAWoC,OAAlB,mEAA6B,EAA7B;AACD;;;;EAtDoCC,mC","sourcesContent":["import { ExtensionInfoEvent, FeatureList } from '@rc-ex/core/definitions';\nimport { computed, watch } from '@ringcentral-integration/core';\nimport { Unsubscribe } from 'redux';\n\nimport { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport { subscriptionHints } from '../../enums/subscriptionHints';\nimport { Module } from '../../lib/di';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './ExtensionFeatures.interface';\n\n@Module({\n  name: 'ExtensionFeatures',\n  deps: [\n    'Client',\n    'DataFetcherV2',\n    'Subscription',\n    { dep: 'TabManager', optional: true },\n    { dep: 'ExtensionFeaturesOptions', optional: true },\n  ],\n})\nexport class ExtensionFeatures extends DataFetcherV2Consumer<\n  Deps,\n  FeatureList\n> {\n  protected _stopWatching: Unsubscribe = null;\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.extensionFeaturesOptions,\n      key: 'extensionFeatures',\n      cleanOnReset: true,\n      fetchFunction: async () => {\n        const response = await this._deps.client.service\n          .platform()\n          .get('/restapi/v1.0/account/~/extension/~/features');\n        return response.json();\n      },\n      readyCheckFunction: () => this._deps.subscription.ready,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  protected _handleSubscription(message: ExtensionInfoEvent) {\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      message?.body?.hints &&\n      (message.body.hints.includes(subscriptionHints.limits) ||\n        message.body.hints.includes(subscriptionHints.features) ||\n        message.body.hints.includes(subscriptionHints.permissions))\n    ) {\n      this.fetchData();\n    }\n  }\n\n  onInit() {\n    this._deps.subscription.subscribe([subscriptionFilters.extensionInfo]);\n    this._stopWatching = watch(\n      this,\n      () => this._deps.subscription.message,\n      (message) => this._handleSubscription(message),\n    );\n  }\n\n  onReset() {\n    this._stopWatching?.();\n    this._stopWatching = null;\n  }\n\n  @computed<ExtensionFeatures>(({ data }) => [data])\n  get features() {\n    return this.data?.records ?? [];\n  }\n}\n"],"file":"ExtensionFeatures.js"}