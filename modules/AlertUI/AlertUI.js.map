{"version":3,"sources":["modules/AlertUI/AlertUI.tsx"],"names":["AlertUI","name","deps","phone","locale","brand","alert","currentLocale","messages","fullName","routerInteraction","rateLimiter","regionSettingsUrl","callingSettingsUrl","getAdditionalRenderer","getRenderer","message","renderer","dismiss","id","RcUIModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAMqBA,O,WAJpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,SADA;AAENC,EAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,mBAA7B,EAAkD,aAAlD;AAFA,CAAP,C;;;;;;;;;;;;;qCAKiD;AAAA,4BAAnCC,KAAmC;AAAA,UAA1BC,MAA0B,cAA1BA,MAA0B;AAAA,UAAlBC,KAAkB,cAAlBA,KAAkB;AAAA,UAAXC,KAAW,cAAXA,KAAW;AAC9C,aAAO;AACLC,QAAAA,aAAa,EAAEH,MAAM,CAACG,aADjB;AAELC,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFX;AAGLH,QAAAA,KAAK,EAAEA,KAAK,CAACI;AAHR,OAAP;AAKD;;;0CAOE;AAAA,8BAJDN,KAIC;AAAA,UAJQG,KAIR,eAJQA,KAIR;AAAA,UAJeD,KAIf,eAJeA,KAIf;AAAA,UAJsBK,iBAItB,eAJsBA,iBAItB;AAAA,UAJyCC,WAIzC,eAJyCA,WAIzC;AAAA,UAHDC,iBAGC,SAHDA,iBAGC;AAAA,UAFDC,kBAEC,SAFDA,kBAEC;AAAA,UADDC,qBACC,SADDA,qBACC;AACD,aAAO;AACLC,QAAAA,WAAW,EAAE,qBAACC,OAAD,EAAqB;AAChC,cAAIF,qBAAJ,EAA2B;AACzB,gBAAMG,QAAQ,GAAGH,qBAAqB,GAAGE,OAAH,CAAtC;AAEA,gBAAIC,QAAJ,EAAc,OAAOA,QAAP;AACf;;AAED,iBAAO,kCACLX,KADK,EAELD,KAFK,EAGLM,WAHK,EAILD,iBAJK,EAKLE,iBALK,EAMLC,kBANK,EAOLG,OAPK,CAAP;AAQD,SAhBI;AAiBLE,QAAAA,OAAO,EAAE,iBAACC,EAAD;AAAA,iBAAgBb,KAAK,CAACY,OAAN,CAAcC,EAAd,CAAhB;AAAA;AAjBJ,OAAP;AAmBD;;;;EAlCkCC,uB","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\n\nimport { AlertRenderer } from '../../components/AlertRenderer';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'AlertUI',\n  deps: ['Brand', 'Alert', 'Locale', 'RouterInteraction', 'RateLimiter'],\n})\nexport default class AlertUI extends RcUIModule {\n  getUIProps({ phone: { locale, brand, alert } }) {\n    return {\n      currentLocale: locale.currentLocale,\n      messages: alert.messages,\n      brand: brand.fullName,\n    };\n  }\n\n  getUIFunctions({\n    phone: { alert, brand, routerInteraction, rateLimiter },\n    regionSettingsUrl,\n    callingSettingsUrl,\n    getAdditionalRenderer,\n  }) {\n    return {\n      getRenderer: (message: string) => {\n        if (getAdditionalRenderer) {\n          const renderer = getAdditionalRenderer()(message);\n\n          if (renderer) return renderer;\n        }\n\n        return AlertRenderer(\n          alert,\n          brand,\n          rateLimiter,\n          routerInteraction,\n          regionSettingsUrl,\n          callingSettingsUrl,\n        )(message);\n      },\n      dismiss: (id: string) => alert.dismiss(id),\n    };\n  }\n}\n"],"file":"AlertUI.js"}