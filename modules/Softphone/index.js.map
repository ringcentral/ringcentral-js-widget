{"version":3,"sources":["modules/Softphone/index.js"],"names":["Softphone","name","deps","dep","optional","brand","extensionMode","callHandler","contactMatcher","options","actionTypes","_brand","_extensionMode","_callHandler","_contactMatcher","_reducer","bowser","parse","global","navigator","userAgent","platform","type","phoneNumber","store","dispatch","startToConnect","cmd","encodeURIComponent","uri","protocol","command","detectPlatform","window","open","msLaunchUri","ActiveXObject","frame","document","createElement","style","display","body","appendChild","contentWindow","location","href","removeChild","forceMatchNumber","connectComplete","id","moduleStatuses","ready","state","connectingPhoneNumber","softphoneStatus","RcModule","proxify"],"mappings":"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","sourcesContent":["import bowser from 'bowser';\nimport sleep from '../../lib/sleep';\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getSoftphoneReducer from './getSoftphoneReducer';\nimport proxify from '../../lib/proxy/proxify';\n\n/**\n * @class\n * @description Softphone module to call softphone\n */\n@Module({\n  name: 'Softphone',\n  deps: [\n    'Brand',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'SoftphoneOptions', optional: true },\n  ],\n})\nexport default class Softphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Brnad} params.brand - brand module instance\n   * @param {Bool} params.extensionMode - default false\n   * @param {Function} param.callHandler - custom call handler, optional\n   * @param {MontactMatcher} param.contactMatcher - contactMatcher module instance, optional\n   */\n  constructor({\n    brand,\n    extensionMode = false,\n    callHandler,\n    contactMatcher,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._brand = brand;\n    this._extensionMode = extensionMode;\n    this._callHandler = callHandler;\n    this._contactMatcher = contactMatcher;\n    this._reducer = getSoftphoneReducer(this.actionTypes);\n  }\n\n  detectPlatform() {\n    return bowser.parse(\n      (global.navigator && global.navigator.userAgent) || 'unknown',\n    ).platform.type;\n  }\n\n  _onStateChange() {\n    /* do nothing */\n  }\n\n  get protocol() {\n    switch (this._brand.id) {\n      case '3420': // ATT\n        return 'attvr20';\n      case '7710': // BT\n        return 'rcbtmobile';\n      case '7310': // TELUS\n        return 'rctelus';\n      default:\n        return 'rcmobile';\n    }\n  }\n\n  @proxify\n  async makeCall(phoneNumber) {\n    this.store.dispatch({\n      type: this.actionTypes.startToConnect,\n      phoneNumber,\n    });\n\n    const cmd = `call?number=${encodeURIComponent(phoneNumber)}`;\n    const uri = `${this.protocol}://${cmd}`;\n\n    if (this._callHandler) {\n      this._callHandler({\n        protocol: this.protocol,\n        command: cmd,\n        phoneNumber,\n      });\n    } else if (this._extensionMode || this.detectPlatform() !== 'desktop') {\n      /**\n       * 1. Use window.open in extension background scripts to avoid crashing Browsers\n       * 2. Use window.open in non-desktop platforms\n       */\n      window.open(uri);\n    } else if (window.navigator.msLaunchUri) {\n      // to support ie to start the service\n      window.navigator.msLaunchUri(uri);\n    } else if (window.ActiveXObject || 'ActiveXObject' in window) {\n      // to support ie on Windows < 8\n      window.open(uri);\n    } else {\n      const frame = document.createElement('iframe');\n      frame.style.display = 'none';\n\n      document.body.appendChild(frame);\n      await sleep(100);\n      frame.contentWindow.location.href = uri;\n      await sleep(300);\n      document.body.removeChild(frame);\n    }\n\n    if (this._contactMatcher) {\n      await this._contactMatcher.forceMatchNumber({\n        phoneNumber,\n      });\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.connectComplete,\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  get connectingPhoneNumber() {\n    return this.state.connectingPhoneNumber;\n  }\n\n  get softphoneStatus() {\n    return this.state.softphoneStatus;\n  }\n}\n"],"file":"index.js"}