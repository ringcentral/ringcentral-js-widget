{"version":3,"sources":["modules/Softphone/index.js"],"names":["Softphone","name","deps","dep","optional","brand","extensionMode","callHandler","contactMatcher","options","actionTypes","_brand","_extensionMode","_callHandler","_contactMatcher","_reducer","bowser","parse","global","navigator","userAgent","platform","type","phoneNumber","callingMode","command","encodeURIComponent","protocol","spartanProtocol","isCallWithJupiter","callingModes","jupiter","isRcBrand","code","jupiterProtocol","jupiterUniversalLink","uri","store","dispatch","startToConnect","getMakeCallUri","detectPlatform","window","open","msLaunchUri","ActiveXObject","frame","document","createElement","style","display","body","appendChild","contentWindow","location","href","removeChild","forceMatchNumber","connectComplete","moduleStatuses","ready","state","connectingPhoneNumber","softphoneStatus","RcModule","proxify"],"mappings":"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","sourcesContent":["import bowser from 'bowser';\nimport sleep from '../../lib/sleep';\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { actionTypes } from './actionTypes';\nimport getSoftphoneReducer from './getSoftphoneReducer';\nimport proxify from '../../lib/proxy/proxify';\nimport callingModes from '../CallingSettings/callingModes';\n/**\n * @class\n * @description Softphone module to call softphone\n */\n@Module({\n  name: 'Softphone',\n  deps: [\n    'Brand',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'SoftphoneOptions', optional: true },\n  ],\n})\nexport default class Softphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Brnad} params.brand - brand module instance\n   * @param {Bool} params.extensionMode - default false\n   * @param {Function} param.callHandler - custom call handler, optional\n   * @param {MontactMatcher} param.contactMatcher - contactMatcher module instance, optional\n   */\n  constructor({\n    brand,\n    extensionMode = false,\n    callHandler,\n    contactMatcher,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._brand = brand;\n    this._extensionMode = extensionMode;\n    this._callHandler = callHandler;\n    this._contactMatcher = contactMatcher;\n    this._reducer = getSoftphoneReducer(this.actionTypes);\n  }\n\n  detectPlatform() {\n    return bowser.parse(\n      (global.navigator && global.navigator.userAgent) || 'unknown',\n    ).platform.type;\n  }\n\n  _onStateChange() {\n    /* do nothing */\n  }\n\n  get spartanProtocol() {\n    switch (this._brand.code) {\n      case 'att':\n        return 'attvr20://';\n      case 'bt':\n        return 'rcbtmobile://';\n      case 'telus':\n        return 'rctelus://';\n      default:\n        return 'rcmobile://';\n    }\n  }\n\n  // currently we only have RingCentral App(rc brand)'s & AT&T universal link\n  get jupiterUniversalLink() {\n    switch (this._brand.code) {\n      case 'att':\n        return 'https://app.officeathand.att.com/';\n      case 'bt':\n        return null;\n      case 'telus':\n        return null;\n      default:\n        return 'https://app.ringcentral.com/';\n    }\n  }\n\n  // currently we don't have Bt brand uri scheme\n  get jupiterProtocol() {\n    switch (this._brand.code) {\n      case 'att':\n        return 'officeathand://';\n      case 'bt':\n        return null;\n      case 'telus':\n        return 'rctelus://';\n      default:\n        return 'rcapp://';\n    }\n  }\n\n  getMakeCallUri(\n    phoneNumber: string,\n    callingMode: string,\n  ): { command: string, protocol: string, uri: string } {\n    // spartan\n    let command = `call?number=${encodeURIComponent(phoneNumber)}`;\n    let protocol = this.spartanProtocol;\n\n    // jupiter\n    const isCallWithJupiter = callingMode === callingModes.jupiter;\n    if (isCallWithJupiter) {\n      const isRcBrand = this._brand.code === 'rc';\n      // jupiter doesn't recognize encoded string for now\n      command = `r/call?number=${phoneNumber}`;\n      // rc brand use scheme, partner brand use universal link\n      protocol = isRcBrand ? this.jupiterProtocol : this.jupiterUniversalLink;\n    }\n    return {\n      command,\n      protocol,\n      uri: `${protocol}${command}`,\n    };\n  }\n\n  @proxify\n  async makeCall(phoneNumber, callingMode) {\n    this.store.dispatch({\n      type: this.actionTypes.startToConnect,\n      phoneNumber,\n    });\n\n    const { protocol, command, uri } = this.getMakeCallUri(\n      phoneNumber,\n      callingMode,\n    );\n\n    if (this._callHandler) {\n      this._callHandler({\n        callingMode,\n        protocol,\n        command,\n        uri,\n        phoneNumber,\n      });\n    } else if (this._extensionMode || this.detectPlatform() !== 'desktop') {\n      /**\n       * 1. Use window.open in extension background scripts to avoid crashing Browsers\n       * 2. Use window.open in non-desktop platforms\n       */\n      window.open(uri);\n    } else if (window.navigator.msLaunchUri) {\n      // to support ie to start the service\n      window.navigator.msLaunchUri(uri);\n    } else if (window.ActiveXObject || 'ActiveXObject' in window) {\n      // to support ie on Windows < 8\n      window.open(uri);\n    } else {\n      const frame = document.createElement('iframe');\n      frame.style.display = 'none';\n      document.body.appendChild(frame);\n      await sleep(100);\n      frame.contentWindow.location.href = uri;\n      await sleep(300);\n      document.body.removeChild(frame);\n    }\n\n    if (this._contactMatcher) {\n      await this._contactMatcher.forceMatchNumber({\n        phoneNumber,\n      });\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.connectComplete,\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  get connectingPhoneNumber() {\n    return this.state.connectingPhoneNumber;\n  }\n\n  get softphoneStatus() {\n    return this.state.softphoneStatus;\n  }\n}\n"],"file":"index.js"}