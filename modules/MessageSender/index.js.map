{"version":3,"sources":["modules/MessageSender/index.js"],"names":["MessageMaxLength","MultipartMessageMaxLength","SENDING_THRESHOLD","MessageSender","deps","dep","optional","alert","client","extensionInfo","extensionPhoneNumber","numberValidate","availabilityMonitor","options","actionTypes","messageSenderActionTypes","_alert","_client","_extensionPhoneNumber","_extensionInfo","_reducer","_numberValidate","_availabilityMonitor","_eventEmitter","EventEmitter","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","ready","dispatch","type","initSuccess","resetSuccess","message","warning","ttl","text","multipart","_alertWarning","messageSenderMessages","textEmpty","length","textTooLong","multipartTextTooLong","toNumbers","recipientsEmpty","senderNumber","validateResult","validate","isMySenderNumber","number","phoneNumber","senderNumbersList","validateError","senderNumberInvalid","errors","forEach","error","recipientNumberInvalids","result","_validateToNumbersIsEmpty","recipientNumbers","filter","item","index","arr","indexOf","validateNumbers","numberValidateResult","_alertInvalidRecipientErrors","numbers","subAddress","isCompanyExtension","e164","notAnExtension","push","fromNumber","replyOnMessageId","eventId","uuid","v4","_validateText","_validateToNumbers","validateToNumberResult","extensionNumbers","phoneNumbers","_validateSenderNumber","emit","send","responses","chunks","total","shouldSleep","chunk","_sendPager","pagerResponse","_sendSms","toNumber","smsResponse","sendOver","sendError","_onSendError","console","debug","toUsers","account","extension","sms","post","from","to","response","extensionNumber","map","params","replyOn","companyPager","errResp","apiResponse","ok","_json","errorCode","err","parameterName","startsWith","notSmsToExtension","internationalSMSNotSupported","noInternalSMSPermission","checkIfHAError","event","handler","on","state","status","sendStatus","moduleStatuses","messageSenderStatus","idle","smsSenderNumbers","RcModule","proxify"],"mappings":"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","sourcesContent":["import { find, pathOr } from 'ramda';\nimport EventEmitter from 'events';\nimport uuid from 'uuid';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport isBlank from '../../lib/isBlank';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport messageSenderActionTypes from './messageSenderActionTypes';\nimport getMessageSenderReducer from './getMessageSenderReducer';\n\nimport messageSenderStatus from './messageSenderStatus';\nimport messageSenderMessages from './messageSenderMessages';\nimport proxify from '../../lib/proxy/proxify';\nimport chunkMessage from '../../lib/chunkMessage';\nimport sleep from '../../lib/sleep';\n\nexport const MessageMaxLength = 1000;\nexport const MultipartMessageMaxLength = MessageMaxLength * 5;\n\nconst SENDING_THRESHOLD = 30;\n\n/**\n * @class\n * @description Message sender and validator module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'ExtensionPhoneNumber',\n    'NumberValidate',\n    { dep: 'AvailabilityMonitor', optional: true },\n  ],\n})\nexport default class MessageSender extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Client} params.client - client module instance\n   * @param {ExtensionInfo} params.extensionInfo - extensionInfo module instance\n   * @param {ExtensionPhoneNumber} params.extensionPhoneNumber - extensionPhoneNumber module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   */\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    extensionPhoneNumber,\n    numberValidate,\n    availabilityMonitor,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: messageSenderActionTypes,\n    });\n\n    this._alert = alert;\n    this._client = client;\n    this._extensionPhoneNumber = extensionPhoneNumber;\n    this._extensionInfo = extensionInfo;\n    this._reducer = getMessageSenderReducer(this.actionTypes);\n    this._numberValidate = numberValidate;\n    this._availabilityMonitor = availabilityMonitor;\n    this._eventEmitter = new EventEmitter();\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._extensionPhoneNumber.ready &&\n      this._extensionInfo.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready) &&\n      !this.ready\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _shouldReset() {\n    return (\n      (!this._extensionPhoneNumber.ready ||\n        !this._extensionInfo.ready ||\n        (!!this._availabilityMonitor && !this._availabilityMonitor.ready)) &&\n      this.ready\n    );\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _alertWarning(message) {\n    if (message) {\n      this._alert.warning({\n        message,\n        ttl: 0,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validateText(text, multipart) {\n    if (isBlank(text)) {\n      this._alertWarning(messageSenderMessages.textEmpty);\n      return false;\n    }\n\n    if (!multipart && text.length > MessageMaxLength) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return false;\n    }\n\n    if (multipart && text.length > MultipartMessageMaxLength) {\n      this._alertWarning(messageSenderMessages.multipartTextTooLong);\n      return false;\n    }\n\n    return true;\n  }\n\n  _validateToNumbersIsEmpty(toNumbers) {\n    if (toNumbers.length === 0) {\n      this._alertWarning(messageSenderMessages.recipientsEmpty);\n      return true;\n    }\n    return false;\n  }\n\n  _validateSenderNumber(senderNumber) {\n    let validateResult = true;\n    if (isBlank(senderNumber)) {\n      validateResult = false;\n    }\n    this.store.dispatch({ type: this.actionTypes.validate });\n    if (validateResult) {\n      const isMySenderNumber = find(\n        (number) => number.phoneNumber === senderNumber,\n        this.senderNumbersList,\n      );\n      if (!isMySenderNumber) {\n        validateResult = false;\n      }\n    }\n    if (!validateResult) {\n      this.store.dispatch({ type: this.actionTypes.validateError });\n      this._alertWarning(messageSenderMessages.senderNumberInvalid);\n    }\n    return validateResult;\n  }\n\n  _alertInvalidRecipientErrors(errors) {\n    errors.forEach((error) => {\n      const message = messageSenderMessages[error.type];\n      if (!this._alertWarning(message)) {\n        this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      }\n    });\n  }\n\n  @proxify\n  async _validateToNumbers(toNumbers) {\n    const result = {\n      result: false,\n    };\n    if (this._validateToNumbersIsEmpty(toNumbers)) {\n      return result;\n    }\n    const recipientNumbers = toNumbers.filter(\n      (item, index, arr) => arr.indexOf(item) === index,\n    );\n    this.store.dispatch({ type: this.actionTypes.validate });\n    const numberValidateResult = await this._numberValidate.validateNumbers(\n      recipientNumbers,\n    );\n    if (!numberValidateResult.result) {\n      this._alertInvalidRecipientErrors(numberValidateResult.errors);\n      this.store.dispatch({ type: this.actionTypes.validateError });\n      return result;\n    }\n    const numbers = [];\n    for (const number of numberValidateResult.numbers) {\n      if (number.subAddress && number.subAddress.length > 0) {\n        if (\n          !this._numberValidate.isCompanyExtension(\n            number.e164,\n            number.subAddress,\n          )\n        ) {\n          this._alertWarning(messageSenderMessages.notAnExtension);\n          this.store.dispatch({ type: this.actionTypes.validateError });\n          return result;\n        }\n        numbers.push(number.subAddress);\n      } else {\n        numbers.push(number.e164);\n      }\n    }\n    result.result = true;\n    result.numbers = numbers;\n    return result;\n  }\n\n  @proxify\n  async send({\n    fromNumber,\n    toNumbers,\n    text,\n    replyOnMessageId,\n    multipart = false,\n  }) {\n    const eventId = uuid.v4();\n    if (!this._validateText(text, multipart)) {\n      return null;\n    }\n    try {\n      const validateToNumberResult = await this._validateToNumbers(toNumbers);\n      if (!validateToNumberResult.result) {\n        return null;\n      }\n      const recipientNumbers = validateToNumberResult.numbers;\n\n      const extensionNumbers = recipientNumbers.filter(\n        (number) => number.length <= 6,\n      );\n      const phoneNumbers = recipientNumbers.filter(\n        (number) => number.length > 6,\n      );\n\n      // not validate sender number if recipient is only extension number\n      if (phoneNumbers.length > 0) {\n        if (!this._validateSenderNumber(fromNumber)) {\n          return null;\n        }\n      }\n      this._eventEmitter.emit(this.actionTypes.send, {\n        eventId,\n        fromNumber,\n        toNumbers,\n        text,\n        replyOnMessageId,\n        multipart,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.send,\n      });\n\n      const responses = [];\n      const chunks = multipart ? chunkMessage(text, MessageMaxLength) : [text];\n      const total = (phoneNumbers.length + 1) * chunks.length;\n      const shouldSleep = total > SENDING_THRESHOLD;\n      if (extensionNumbers.length > 0) {\n        for (const chunk of chunks) {\n          if (shouldSleep) await sleep(2000);\n          const pagerResponse = await this._sendPager({\n            toNumbers: extensionNumbers,\n            text: chunk,\n            replyOnMessageId,\n          });\n          responses.push(pagerResponse);\n        }\n      }\n\n      if (phoneNumbers.length > 0) {\n        for (const phoneNumber of phoneNumbers) {\n          for (const chunk of chunks) {\n            if (shouldSleep) await sleep(2000);\n            const smsResponse = await this._sendSms({\n              fromNumber,\n              toNumber: phoneNumber,\n              text: chunk,\n            });\n            responses.push(smsResponse);\n          }\n        }\n      }\n\n      this.store.dispatch({\n        type: this.actionTypes.sendOver,\n        toNumbers,\n      });\n\n      return responses;\n    } catch (error) {\n      this._eventEmitter.emit(this.actionTypes.sendError, {\n        eventId,\n        fromNumber,\n        toNumbers,\n        text,\n        replyOnMessageId,\n        multipart,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.sendError,\n        error: 'error',\n      });\n      this._onSendError(error);\n      console.debug('sendComposeText e ', error);\n      throw error;\n    }\n  }\n\n  @proxify\n  async _sendSms({ fromNumber, toNumber, text }) {\n    const toUsers = [{ phoneNumber: toNumber }];\n    const response = await this._client\n      .account()\n      .extension()\n      .sms()\n      .post({\n        from: { phoneNumber: fromNumber },\n        to: toUsers,\n        text,\n      });\n    return response;\n  }\n\n  @proxify\n  async _sendPager({ toNumbers, text, replyOnMessageId }) {\n    const from = { extensionNumber: this._extensionInfo.extensionNumber };\n    const toUsers = toNumbers.map((number) => ({ extensionNumber: number }));\n    const params = { from, to: toUsers, text };\n    if (replyOnMessageId) {\n      params.replyOn = replyOnMessageId;\n    }\n    const response = await this._client\n      .account()\n      .extension()\n      .companyPager()\n      .post(params);\n    return response;\n  }\n\n  _onSendError(error) {\n    const errResp = error.apiResponse;\n    if (\n      errResp &&\n      errResp.response &&\n      !errResp.response.ok &&\n      errResp._json &&\n      (errResp._json.errorCode === 'InvalidParameter' ||\n        errResp._json.errorCode === 'InternationalProhibited' ||\n        errResp._json.errorCode === 'CMN-408')\n    ) {\n      errResp._json.errors.map((err) => {\n        if (\n          (err.errorCode === 'CMN-101' ||\n            err.errorCode === 'CMN-102' ||\n            err.errorCode === 'CMN-414') &&\n          err.parameterName.startsWith('to')\n        ) {\n          // 101 : \"Parameter [to.extensionNumber] value is invalid\"\n          // 101 : \"Parameter [to.phoneNumber] value is invalid\"\n          // 102 : \"Resource for parameter [to] is not found\"\n          this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n          return null;\n        }\n        if (err.errorCode === 'MSG-246') {\n          // MSG-246 : \"Sending SMS from/to extension numbers is not available\"\n          this._alertWarning(messageSenderMessages.notSmsToExtension);\n        }\n        if (err.errorCode === 'MSG-240') {\n          // MSG-240 : \"International SMS is not supported\"\n          this._alertWarning(\n            messageSenderMessages.internationalSMSNotSupported,\n          );\n        }\n        if (err.errorCode === 'CMN-408') {\n          // MSG-240 : \"In order to call this API endpoint, user needs to have [InternalSMS] permission for requested resource.\"\n          this._alertWarning(messageSenderMessages.noInternalSMSPermission);\n        }\n\n        return null;\n      });\n      return;\n    }\n\n    if (\n      this._availabilityMonitor &&\n      this._availabilityMonitor.checkIfHAError(error)\n    ) {\n      return null;\n    }\n\n    this._alertWarning(messageSenderMessages.sendError);\n  }\n\n  on(event, handler) {\n    this._eventEmitter.on(event, handler);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get sendStatus() {\n    return this.state.sendStatus;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get idle() {\n    return this.sendStatus === messageSenderStatus.idle;\n  }\n\n  get senderNumbersList() {\n    return this._extensionPhoneNumber.smsSenderNumbers;\n  }\n}\n"],"file":"index.js"}