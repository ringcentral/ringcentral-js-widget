{"version":3,"sources":["modules/ExtensionInfo/index.js"],"names":["DEFAULT_MASK","join","DEFAULT_COUNTRY","id","isoCode","callingCode","extensionRegExp","extractData","info","serviceFeatures","forEach","f","featureName","enabled","reason","output","DEFAULT_TTL","DEFAULT_TIME_TO_RETRY","ExtensionInfo","deps","dep","optional","client","ttl","timeToRetry","polling","alert","options","subscriptionFilters","extensionInfo","subscriptionHandler","message","_subscriptionHandleFn","cleanOnReset","fetchFunction","_client","account","extension","get","forbiddenHandler","_auth","logout","_alert","danger","permissionsMessages","insufficientPrivilege","body","test","event","hints","includes","subscriptionHints","companyNumbers","limits","features","permissions","fetchData","extensionNumber","regionalSettings","homeCountry","departments","Array","isArray","length","DataFetcher","selector","data"],"mappings":"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","sourcesContent":["import mask from 'json-mask';\nimport { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\nimport DataFetcher from '../../lib/DataFetcher';\nimport subscriptionHints from '../../enums/subscriptionHints';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport permissionsMessages from '../RolesAndPermissions/permissionsMessages';\n\nconst DEFAULT_MASK = [\n  'id',\n  'extensionNumber',\n  'contact(*)',\n  'name',\n  'type',\n  'status',\n  'permissions',\n  'profileImage',\n  'departments',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id,isoCode,callingCode)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\nconst DEFAULT_COUNTRY = {\n  id: '1',\n  isoCode: 'US',\n  callingCode: '1',\n};\n\nconst extensionRegExp = /.*\\/extension\\/\\d+$/;\n\nfunction extractData(info) {\n  const serviceFeatures = {};\n  info.serviceFeatures.forEach((f) => {\n    serviceFeatures[f.featureName] = {\n      enabled: f.enabled,\n    };\n    if (!f.enabled) {\n      serviceFeatures[f.featureName].reason = f.reason;\n    }\n  });\n  const output = mask(info, DEFAULT_MASK);\n  output.serviceFeatures = serviceFeatures;\n  return output;\n}\n\nconst DEFAULT_TTL = 30 * 60 * 1000; // half hour update\nconst DEFAULT_TIME_TO_RETRY = 62 * 1000;\n\n/**\n * @class\n * @description Extension info module\n */\n@Module({\n  deps: [\n    'Client',\n    { dep: 'Alert', optional: true },\n    { dep: 'ExtensionInfoOptions', optional: true },\n  ],\n})\nexport default class ExtensionInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    ttl = DEFAULT_TTL,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    polling = true,\n    alert,\n    ...options\n  }) {\n    super({\n      client,\n      ttl,\n      polling,\n      timeToRetry,\n      subscriptionFilters: [subscriptionFilters.extensionInfo],\n      subscriptionHandler: async (message) => {\n        await this._subscriptionHandleFn(message);\n      },\n      cleanOnReset: true,\n      fetchFunction: async () =>\n        extractData(\n          await this._client\n            .account()\n            .extension()\n            .get(),\n        ),\n      forbiddenHandler: async () => {\n        await this._auth.logout();\n        if (this._alert) {\n          this._alert.danger({\n            message: permissionsMessages.insufficientPrivilege,\n            ttl: 0,\n          });\n        }\n        return {};\n      },\n      ...options,\n    });\n    this._alert = alert;\n  }\n\n  get _name() {\n    return 'extensionInfo';\n  }\n\n  async _subscriptionHandleFn(message) {\n    if (\n      message &&\n      message.body &&\n      extensionRegExp.test(message.event) &&\n      !(\n        message.body.hints &&\n        (message.body.hints.includes(subscriptionHints.companyNumbers) ||\n          message.body.hints.includes(subscriptionHints.limits) ||\n          message.body.hints.includes(subscriptionHints.features) ||\n          message.body.hints.includes(subscriptionHints.permissions))\n      )\n    ) {\n      await this.fetchData();\n    }\n  }\n\n  @selector\n  info = [() => this.data, (data) => data || {}];\n\n  @selector\n  serviceFeatures = [() => this.info, (info) => info.serviceFeatures || {}];\n\n  get id() {\n    return this.info.id;\n  }\n\n  get extensionNumber() {\n    return this.info.extensionNumber;\n  }\n\n  get country() {\n    return (\n      (this.info.regionalSettings && this.info.regionalSettings.homeCountry) ||\n      DEFAULT_COUNTRY\n    );\n  }\n\n  get departments() {\n    return this.info.departments;\n  }\n\n  get isCallQueueMember() {\n    return (\n      !!this.departments &&\n      Array.isArray(this.departments) &&\n      this.departments.length > 0\n    );\n  }\n}\n"],"file":"index.js"}