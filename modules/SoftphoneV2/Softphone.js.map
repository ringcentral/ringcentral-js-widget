{"version":3,"sources":["modules/SoftphoneV2/Softphone.ts"],"names":["Softphone","name","deps","dep","optional","_callHandler","_extensionMode","_deps","softphoneOptions","extensionMode","callHandler","phoneNumber","softphoneStatus","connecting","connectingPhoneNumber","idle","bowser","parse","window","navigator","userAgent","platform","type","callingMode","startToConnect","isCallWithJupiter","callingModes","jupiter","protocol","jupiterProtocol","spartanProtocol","command","encodeURIComponent","uri","detectPlatform","open","msLaunchUri","ActiveXObject","frame","document","createElement","style","display","body","appendChild","contentWindow","location","href","removeChild","contactMatcher","forceMatchNumber","connectComplete","brand","code","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import bowser from 'bowser';\nimport { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport sleep from '../../lib/sleep';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport callingModes from '../CallingSettings/callingModes';\nimport { Deps } from './Softphone.interface';\nimport { softphoneStatus } from './softphoneStatus';\n\n/**\n * @class\n * @description Softphone module to call softphone\n */\n@Module({\n  name: 'Softphone',\n  deps: [\n    'Brand',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'SoftphoneOptions', optional: true },\n  ],\n})\nexport class Softphone extends RcModuleV2<Deps> {\n  protected _callHandler: (...args: any) => any;\n  protected _extensionMode: boolean;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._extensionMode = this._deps.softphoneOptions?.extensionMode ?? false;\n    this._callHandler = this._deps.softphoneOptions?.callHandler;\n  }\n\n  @state\n  connectingPhoneNumber: string = null;\n\n  @state\n  softphoneStatus = softphoneStatus.idle;\n\n  @action\n  startToConnect(phoneNumber: string) {\n    this.softphoneStatus = softphoneStatus.connecting;\n    this.connectingPhoneNumber = phoneNumber;\n  }\n\n  @action\n  connectComplete() {\n    this.softphoneStatus = softphoneStatus.idle;\n    this.connectingPhoneNumber = null;\n  }\n\n  detectPlatform() {\n    return bowser.parse(\n      (window.navigator && window.navigator.userAgent) || 'unknown',\n    ).platform.type;\n  }\n\n  get spartanProtocol() {\n    switch (this._deps.brand.code) {\n      case 'att':\n        return 'attvr20';\n      case 'bt':\n        return 'rcbtmobile';\n      case 'telus':\n        return 'rctelus';\n      default:\n        return 'rcmobile';\n    }\n  }\n\n  // currently we only have RingCentral App(rc brand)'s universal link\n  get jupiterUniversalLink() {\n    switch (this._deps.brand.code) {\n      case 'att':\n        return null;\n      case 'bt':\n        return null;\n      case 'telus':\n        return null;\n      default:\n        return 'https://app.ringcentral.com/r/';\n    }\n  }\n\n  // currently we only have RingCentral App(rc brand)'s protocol\n  get jupiterProtocol() {\n    switch (this._deps.brand.code) {\n      case 'att':\n        return null;\n      case 'bt':\n        return null;\n      case 'telus':\n        return null;\n      default:\n        return 'rcapp';\n    }\n  }\n\n  @proxify\n  async makeCall(phoneNumber: string, callingMode: string) {\n    this.startToConnect(phoneNumber);\n\n    const isCallWithJupiter = callingMode === callingModes.jupiter;\n    const protocol = isCallWithJupiter\n      ? this.jupiterProtocol\n      : this.spartanProtocol;\n    const command = isCallWithJupiter\n      ? `call?number=${phoneNumber}` // jupiter doesn't recognize encoded string for now\n      : `call?number=${encodeURIComponent(phoneNumber)}`;\n    const uri = isCallWithJupiter\n      ? `${protocol}://r/${command}`\n      : `${protocol}://${command}`;\n\n    if (this._callHandler) {\n      this._callHandler({\n        protocol,\n        command,\n        phoneNumber,\n      });\n    } else if (this._extensionMode || this.detectPlatform() !== 'desktop') {\n      /**\n       * 1. Use window.open in extension background scripts to avoid crashing Browsers\n       * 2. Use window.open in non-desktop platforms\n       */\n      window.open(uri);\n    } else if (window.navigator.msLaunchUri) {\n      // to support ie to start the service\n      window.navigator.msLaunchUri(uri);\n    } else if ((window as any).ActiveXObject || 'ActiveXObject' in window) {\n      // to support ie on Windows < 8\n      window.open(uri);\n    } else {\n      const frame = document.createElement('iframe');\n      frame.style.display = 'none';\n      document.body.appendChild(frame);\n      await sleep(100);\n      frame.contentWindow.location.href = uri;\n      await sleep(300);\n      document.body.removeChild(frame);\n    }\n\n    if (this._deps.contactMatcher) {\n      await this._deps.contactMatcher.forceMatchNumber({\n        phoneNumber,\n      });\n    }\n\n    this.connectComplete();\n  }\n}\n"],"file":"Softphone.js"}