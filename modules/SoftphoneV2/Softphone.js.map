{"version":3,"sources":["modules/SoftphoneV2/Softphone.ts"],"names":["Softphone","name","deps","dep","optional","_callHandler","_extensionMode","_deps","softphoneOptions","extensionMode","callHandler","phoneNumber","softphoneStatus","connecting","connectingPhoneNumber","idle","bowser","parse","window","navigator","userAgent","platform","type","areAllReady","noReadyModulesKey","filter","module","identifierKey","length","pending","areNotReady","ready","callingMode","command","encodeURIComponent","protocol","spartanProtocol","isJupiterUniversalLink","isCallWithJupiter","callingModes","jupiter","useJupiterUniversalLink","jupiterUniversalLink","jupiterProtocol","uri","startToConnect","getMakeCallUri","openLink","detectPlatform","ActiveXObject","open","msLaunchUri","frame","document","createElement","style","display","body","appendChild","contentWindow","location","href","removeChild","contactMatcher","forceMatchNumber","connectComplete","brand","code","RcModuleV2","state","action","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;IASaA,S,WARZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,WADA;AAENC,EAAAA,IAAI,EAAE,CACJ,OADI,EAEJ;AAAEC,IAAAA,GAAG,EAAE,gBAAP;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GAFI,EAGJ;AAAED,IAAAA,GAAG,EAAE,kBAAP;AAA2BC,IAAAA,QAAQ,EAAE;AAArC,GAHI;AAFA,CAAP,C;;;;;AAYC,qBAAYF,IAAZ,EAAwB;AAAA;;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AADsB,UAHdG,YAGc;AAAA,UAFdC,cAEc;;AAAA;;AAAA;;AAItB,UAAKA,cAAL,sDAAsB,MAAKC,KAAL,CAAWC,gBAAjC,2DAAsB,uBAA6BC,aAAnD,yEAAoE,KAApE;AACA,UAAKJ,YAAL,6BAAoB,MAAKE,KAAL,CAAWC,gBAA/B,2DAAoB,uBAA6BE,WAAjD;AALsB;AAMvB;;;;mCAScC,W,EAAqB;AAClC,WAAKC,eAAL,GAAuBA,iCAAgBC,UAAvC;AACA,WAAKC,qBAAL,GAA6BH,WAA7B;AACD;;;sCAGiB;AAChB,WAAKC,eAAL,GAAuBA,iCAAgBG,IAAvC;AACA,WAAKD,qBAAL,GAA6B,IAA7B;AACD;;;qCAEgB;AACf,aAAOE,mBAAOC,KAAP,CACJC,MAAM,CAACC,SAAP,IAAoBD,MAAM,CAACC,SAAP,CAAiBC,SAAtC,IAAoD,SAD/C,EAELC,QAFK,CAEIC,IAFX;AAGD;;;AAeD;kCACc;AACZ,UAAMC,WAAW,GACf,KAAKC,uBAAL,EAAwBC,MAAxB,CACE,UAACC,MAAD;AAAA,eAAYA,MAAM,IAAIA,MAAM,CAACC,mBAAD,CAAN,KAA0B,gBAAhD;AAAA,OADF,EAEEC,MAFF,KAEa,CAHf;AAIA,aAAOL,WAAW,IAAI,KAAKM,OAA3B;AACD;;;mCAEc;AACb,UAAMC,WAAW,GACf,KAAKN,uBAAL,EAAwBC,MAAxB,CACE,UAACC,MAAD;AAAA,eAAYA,MAAM,IAAIA,MAAM,CAACC,mBAAD,CAAN,KAA0B,gBAAhD;AAAA,OADF,EAEEC,MAFF,GAEW,CAHb;AAIA,aAAOE,WAAW,IAAI,KAAKC,KAA3B;AACD,K,CAED;;;;mCA4BepB,W,EAAqBqB,W,EAAkC;AACpE;AACA,UAAIC,OAAO,yBAAkBC,kBAAkB,CAACvB,WAAD,CAApC,CAAX;AACA,UAAIwB,QAAQ,GAAG,KAAKC,eAApB;AACA,UAAIC,sBAAsB,GAAG,KAA7B,CAJoE,CAKpE;;AACA,UAAMC,iBAAiB,GAAGN,WAAW,KAAKO,yBAAaC,OAAvD;;AACA,UAAIF,iBAAJ,EAAuB;AACrB;AACAL,QAAAA,OAAO,2BAAoBtB,WAApB,CAAP;AACA0B,QAAAA,sBAAsB,GAAG,KAAKI,uBAA9B;AACAN,QAAAA,QAAQ,GAAGE,sBAAsB,GAC7B,KAAKK,oBADwB,GAE7B,KAAKC,eAFT;AAGD;;AACD,aAAO;AACLV,QAAAA,OAAO,EAAPA,OADK;AAELE,QAAAA,QAAQ,EAARA,QAFK;AAGLE,QAAAA,sBAAsB,EAAtBA,sBAHK;AAILO,QAAAA,GAAG,YAAKT,QAAL,SAAgBF,OAAhB;AAJE,OAAP;AAMD;;;;+FAWctB,W,EAAqBqB,W;;;;;;;AAClC,qBAAKa,cAAL,CAAoBlC,WAApB;uCAOI,KAAKmC,cAAL,CAAoBnC,WAApB,EAAiCqB,WAAjC,C,EAJFG,Q,wBAAAA,Q,EACAF,O,wBAAAA,O,EACAW,G,wBAAAA,G,EACAP,sB,wBAAAA,sB;;qBAGE,KAAKhC,Y;;;;;AACP,qBAAKA,YAAL,CAAkB;AAChB2B,kBAAAA,WAAW,EAAXA,WADgB;AAEhBG,kBAAAA,QAAQ,EAARA,QAFgB;AAGhBF,kBAAAA,OAAO,EAAPA,OAHgB;AAIhBW,kBAAAA,GAAG,EAAHA,GAJgB;AAKhBP,kBAAAA,sBAAsB,EAAtBA,sBALgB;AAMhB1B,kBAAAA,WAAW,EAAXA;AANgB,iBAAlB;;;;;;AASA;AACN;AACA;AACA;AACA;AACA;AACYoC,gBAAAA,Q,GACJV,sBAAsB,IACtB,KAAK/B,cADL,IAEA,KAAK0C,cAAL,OAA0B,SAF1B,IAGC9B,MAAD,CAAgB+B,aAHhB,IAIA,mBAAmB/B,M;;qBAEjB6B,Q;;;;;AACF7B,gBAAAA,MAAM,CAACgC,IAAP,CAAYN,GAAZ;;;;;qBACS1B,MAAM,CAACC,SAAP,CAAiBgC,W;;;;;AAC1B;AACAjC,gBAAAA,MAAM,CAACC,SAAP,CAAiBgC,WAAjB,CAA6BP,GAA7B;;;;;AAEA;AACMQ,gBAAAA,K,GAAQC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,C;AACdF,gBAAAA,KAAK,CAACG,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACAH,gBAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,KAA1B;;uBACM,uBAAM,GAAN,C;;;AACNA,gBAAAA,KAAK,CAACO,aAAN,CAAoBC,QAApB,CAA6BC,IAA7B,GAAoCjB,GAApC;;uBACM,uBAAM,GAAN,C;;;AACNS,gBAAAA,QAAQ,CAACI,IAAT,CAAcK,WAAd,CAA0BV,KAA1B;;;qBAIA,KAAK7C,KAAL,CAAWwD,c;;;;;;uBACP,KAAKxD,KAAL,CAAWwD,cAAX,CAA0BC,gBAA1B,CAA2C;AAC/CrD,kBAAAA,WAAW,EAAXA;AAD+C,iBAA3C,C;;;AAKR,qBAAKsD,eAAL;;;;;;;;;;;;;;;;;;wBAlJoB;AACpB,cAAQ,KAAK1D,KAAL,CAAW2D,KAAX,CAAiBC,IAAzB;AACE,aAAK,KAAL;AACE,iBAAO,YAAP;;AACF,aAAK,IAAL;AACE,iBAAO,eAAP;;AACF,aAAK,OAAL;AACE,iBAAO,YAAP;;AACF;AACE,iBAAO,aAAP;AARJ;AAUD;;;wBAoB0B;AACzB,cAAQ,KAAK5D,KAAL,CAAW2D,KAAX,CAAiBC,IAAzB;AACE,aAAK,KAAL;AACE,iBAAO,mCAAP;;AACF,aAAK,IAAL;AACE,iBAAO,IAAP;;AACF,aAAK,OAAL;AACE,iBAAO,IAAP;;AACF;AACE,iBAAO,8BAAP;AARJ;AAUD,K,CAED;;;;wBACsB;AACpB,cAAQ,KAAK5D,KAAL,CAAW2D,KAAX,CAAiBC,IAAzB;AACE,aAAK,KAAL;AACE,iBAAO,iBAAP;;AACF,aAAK,IAAL;AACE,iBAAO,IAAP;;AACF,aAAK,OAAL;AACE,iBAAO,YAAP;;AACF;AACE,iBAAO,UAAP;AARJ;AAUD;;;wBAyB6B;AAAA;;AAC5B;AACA,iEACE,KAAK5D,KAAL,CAAWC,gBADb,2DACE,uBAA6BiC,uBAD/B,2EAEE,KAAKlC,KAAL,CAAW2D,KAAX,CAAiBC,IAAjB,KAA0B,IAF5B;AAID;;;;EA3H4BC,gB,yFAY5BC,W;;;;;WAC+B,I;;oFAE/BA,W;;;;;WACiBzD,iCAAgBG,I;;oEAEjCuD,Y,8JAMAA,Y,wJAqGAC,gB","sourcesContent":["import bowser from 'bowser';\nimport {\n  action,\n  identifierKey,\n  noReadyModulesKey,\n  RcModuleV2,\n  state,\n} from '@ringcentral-integration/core';\nimport sleep from '../../lib/sleep';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport callingModes from '../CallingSettings/callingModes';\nimport { Deps, CallHandlerContext, CallUriInfo } from './Softphone.interface';\nimport { softphoneStatus } from './softphoneStatus';\n\n/**\n * @class\n * @description Softphone module to call softphone\n */\n@Module({\n  name: 'Softphone',\n  deps: [\n    'Brand',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'SoftphoneOptions', optional: true },\n  ],\n})\nexport class Softphone extends RcModuleV2<Deps> {\n  protected _callHandler: (context: CallHandlerContext) => any;\n  protected _extensionMode: boolean;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._extensionMode = this._deps.softphoneOptions?.extensionMode ?? false;\n    this._callHandler = this._deps.softphoneOptions?.callHandler;\n  }\n\n  @state\n  connectingPhoneNumber: string = null;\n\n  @state\n  softphoneStatus = softphoneStatus.idle;\n\n  @action\n  startToConnect(phoneNumber: string) {\n    this.softphoneStatus = softphoneStatus.connecting;\n    this.connectingPhoneNumber = phoneNumber;\n  }\n\n  @action\n  connectComplete() {\n    this.softphoneStatus = softphoneStatus.idle;\n    this.connectingPhoneNumber = null;\n  }\n\n  detectPlatform() {\n    return bowser.parse(\n      (window.navigator && window.navigator.userAgent) || 'unknown',\n    ).platform.type;\n  }\n\n  get spartanProtocol() {\n    switch (this._deps.brand.code) {\n      case 'att':\n        return 'attvr20://';\n      case 'bt':\n        return 'rcbtmobile://';\n      case 'telus':\n        return 'rctelus://';\n      default:\n        return 'rcmobile://';\n    }\n  }\n\n  // TODO: move `ContactMatcher` deps to `Call`\n  _shouldInit() {\n    const areAllReady =\n      this[noReadyModulesKey].filter(\n        (module) => module && module[identifierKey] !== 'contactMatcher',\n      ).length === 0;\n    return areAllReady && this.pending;\n  }\n\n  _shouldReset() {\n    const areNotReady =\n      this[noReadyModulesKey].filter(\n        (module) => module && module[identifierKey] !== 'contactMatcher',\n      ).length > 0;\n    return areNotReady && this.ready;\n  }\n\n  // currently we only have RingCentral App(rc brand)'s & AT&T universal link\n  get jupiterUniversalLink() {\n    switch (this._deps.brand.code) {\n      case 'att':\n        return 'https://app.officeathand.att.com/';\n      case 'bt':\n        return null;\n      case 'telus':\n        return null;\n      default:\n        return 'https://app.ringcentral.com/';\n    }\n  }\n\n  // currently we don't have Bt brand uri scheme\n  get jupiterProtocol() {\n    switch (this._deps.brand.code) {\n      case 'att':\n        return 'officeathand://';\n      case 'bt':\n        return null;\n      case 'telus':\n        return 'rctelus://';\n      default:\n        return 'rcapp://';\n    }\n  }\n\n  getMakeCallUri(phoneNumber: string, callingMode: string): CallUriInfo {\n    // spartan\n    let command = `call?number=${encodeURIComponent(phoneNumber)}`;\n    let protocol = this.spartanProtocol;\n    let isJupiterUniversalLink = false;\n    // jupiter\n    const isCallWithJupiter = callingMode === callingModes.jupiter;\n    if (isCallWithJupiter) {\n      // jupiter doesn't recognize encoded string for now\n      command = `r/call?number=${phoneNumber}`;\n      isJupiterUniversalLink = this.useJupiterUniversalLink;\n      protocol = isJupiterUniversalLink\n        ? this.jupiterUniversalLink\n        : this.jupiterProtocol;\n    }\n    return {\n      command,\n      protocol,\n      isJupiterUniversalLink,\n      uri: `${protocol}${command}`,\n    };\n  }\n\n  get useJupiterUniversalLink() {\n    // rc brand use scheme, partner brand use universal link\n    return (\n      this._deps.softphoneOptions?.useJupiterUniversalLink ??\n      this._deps.brand.code !== 'rc'\n    );\n  }\n\n  @proxify\n  async makeCall(phoneNumber: string, callingMode: string) {\n    this.startToConnect(phoneNumber);\n\n    const {\n      protocol,\n      command,\n      uri,\n      isJupiterUniversalLink,\n    } = this.getMakeCallUri(phoneNumber, callingMode);\n\n    if (this._callHandler) {\n      this._callHandler({\n        callingMode,\n        protocol,\n        command,\n        uri,\n        isJupiterUniversalLink,\n        phoneNumber,\n      });\n    } else {\n      /**\n       * 1. Use window.open in extension background scripts to avoid crashing Browsers\n       * 2. Use window.open in non-desktop platforms\n       * 3. to support ie on Windows < 8\n       * 4. for Jupiter universal link, should open link directly\n       */\n      const openLink =\n        isJupiterUniversalLink ||\n        this._extensionMode ||\n        this.detectPlatform() !== 'desktop' ||\n        (window as any).ActiveXObject ||\n        'ActiveXObject' in window;\n\n      if (openLink) {\n        window.open(uri);\n      } else if (window.navigator.msLaunchUri) {\n        // to support ie to start the service\n        window.navigator.msLaunchUri(uri);\n      } else {\n        // open via iframe\n        const frame = document.createElement('iframe');\n        frame.style.display = 'none';\n        document.body.appendChild(frame);\n        await sleep(100);\n        frame.contentWindow.location.href = uri;\n        await sleep(300);\n        document.body.removeChild(frame);\n      }\n    }\n\n    if (this._deps.contactMatcher) {\n      await this._deps.contactMatcher.forceMatchNumber({\n        phoneNumber,\n      });\n    }\n\n    this.connectComplete();\n  }\n}\n"],"file":"Softphone.js"}