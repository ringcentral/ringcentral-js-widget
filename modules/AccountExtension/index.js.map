{"version":3,"sources":["modules/AccountExtension/index.js"],"names":["extensionRegExp","DEFAULT_TTL","DEFAULT_CHECK_STATUS","DEFAULT_TYPE_LIST","extensionTypes","digitalUser","user","department","AccountExtension","deps","dep","optional","client","rolesAndPermissions","ttl","checkStatus","typeList","showNotActivated","options","getDataReducer","getTimestampReducer","subscriptionFilters","accountExtension","subscriptionHandler","message","_subscriptionHandleFn","fetchFunction","params","fetchRet","_client","account","extension","list","ext","_extensionFilter","simplifyExtensionData","filter","map","readyCheckFn","_rolesAndPermissions","ready","console","warn","_checkStatus","_typeList","ensureExist","_showNotActivated","test","event","body","extensions","item","_processExtension","extensionId","eventType","id","parseInt","_deleteExtension","_fetchExtensionData","extensionData","_addOrDeleteExtension","essential","alreadyExists","isAvailableExtension","extensionNumber","_addExtension","_updateExtension","data","store","dispatch","type","actionTypes","add","timestamp","Date","now","update","get","availableExtensions","permissions","ReadExtensions","DataFetcher","proxify","selector"],"mappings":"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","sourcesContent":["import { find } from 'ramda';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\n\nimport actionTypes from './actionTypes';\nimport {\n  getDataReducer,\n  getTimestampReducer,\n} from './getAccountExtensionReducer';\nimport {\n  isEnabled,\n  isNotActivated,\n  isFiltered,\n  simplifyExtensionData,\n  hasExtensionNumber,\n} from './accountExtensionHelper';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport proxify from '../../lib/proxy/proxify';\nimport extensionTypes from '../../enums/extensionTypes';\n\nconst extensionRegExp = /.*\\/extension$/;\n\nconst DEFAULT_TTL = 24 * 60 * 60 * 1000;\nconst DEFAULT_CHECK_STATUS = true;\n\n// Consider enable all extension types and filter through selector if\n// we'll allow users to configure this through settings\nconst DEFAULT_TYPE_LIST = [\n  extensionTypes.digitalUser,\n  extensionTypes.user,\n  extensionTypes.department,\n  // extensionTypes.limited,\n  // extensionTypes.announcement,\n  // extensionTypes.applicationExtension,\n  // extensionTypes.bot,\n  // extensionTypes.faxUser,\n  // extensionTypes.ivrMenu,\n  // extensionTypes.pagingOnly,\n  // extensionTypes.parkLocation,\n  // extensionTypes.sharedLinesGroup,\n];\n\n/**\n * @class\n * @description Accound extension list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'AccountExtensionOptions', optional: true },\n  ],\n})\nexport default class AccountExtension extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Number} params.ttl - local cache timestamp, default 24 hours\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ttl = DEFAULT_TTL,\n    checkStatus = DEFAULT_CHECK_STATUS,\n    typeList = DEFAULT_TYPE_LIST,\n    showNotActivated = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      client,\n      ttl,\n      getDataReducer,\n      getTimestampReducer,\n      subscriptionFilters: [subscriptionFilters.accountExtension],\n      subscriptionHandler: async (message) => {\n        this._subscriptionHandleFn(message);\n      },\n      fetchFunction: async () =>\n        (await fetchList((params) => {\n          const fetchRet = this._client\n            .account()\n            .extension()\n            .list(params);\n          return fetchRet;\n        }))\n          .filter((ext) => this._extensionFilter(ext))\n          .map(simplifyExtensionData),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n    });\n    console.warn(\n      'AccountExtension module is deprecated, please use CompanyContacts instead.',\n    );\n\n    this._checkStatus = checkStatus;\n    this._typeList = typeList;\n    this._rolesAndPermissions = this::ensureExist(\n      rolesAndPermissions,\n      'rolesAndPermissions',\n    );\n    this._showNotActivated = showNotActivated;\n  }\n\n  get _name() {\n    return 'accountExtension';\n  }\n\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  _extensionFilter(ext) {\n    return (\n      hasExtensionNumber(ext) &&\n      (!this._checkStatus ||\n        isEnabled(ext) ||\n        (this._showNotActivated && isNotActivated(ext))) &&\n      !isFiltered(ext, this._typeList)\n    );\n  }\n\n  async _subscriptionHandleFn(message) {\n    if (\n      message &&\n      extensionRegExp.test(message.event) &&\n      message.body &&\n      message.body.extensions\n    ) {\n      for (const item of message.body.extensions) {\n        await this._processExtension(item);\n      }\n    }\n  }\n\n  async _processExtension(item) {\n    const { extensionId, eventType } = item;\n    const id = parseInt(extensionId, 10);\n    if (eventType === 'Delete') {\n      this._deleteExtension(id);\n    } else if (eventType === 'Create' || eventType === 'Update') {\n      try {\n        const extensionData = await this._fetchExtensionData(id);\n        this._addOrDeleteExtension(extensionData, id);\n      } catch (error) {\n        /* falls through */\n      }\n    } else {\n      // console.warn('unexpect notification eventType:', eventType);\n    }\n  }\n\n  _addOrDeleteExtension(extensionData, extensionId) {\n    const essential = this._extensionFilter(extensionData);\n    const alreadyExists = this.isAvailableExtension(\n      extensionData.extensionNumber,\n    );\n    if (essential && !alreadyExists) {\n      this._addExtension(extensionData);\n    } else if (!essential && alreadyExists) {\n      this._deleteExtension(extensionId);\n    } else if (essential && alreadyExists) {\n      this._updateExtension(extensionId, extensionData);\n    }\n  }\n\n  _addExtension(data) {\n    this.store.dispatch({\n      type: this.actionTypes.add,\n      data: simplifyExtensionData(data),\n      timestamp: Date.now(),\n    });\n  }\n\n  _deleteExtension(id) {\n    this.store.dispatch({\n      type: this.actionTypes.delete,\n      id,\n      timestamp: Date.now(),\n    });\n  }\n\n  _updateExtension(id, data) {\n    this.store.dispatch({\n      type: this.actionTypes.update,\n      id,\n      data: simplifyExtensionData(data),\n      timestamp: Date.now(),\n    });\n  }\n\n  @proxify\n  async _fetchExtensionData(id) {\n    return this._client\n      .account()\n      .extension(id)\n      .get();\n  }\n\n  @selector\n  availableExtensions = [() => this.data, (data) => data || []];\n\n  isAvailableExtension(extensionNumber) {\n    return !!find(\n      (item) => item.ext === extensionNumber,\n      this.availableExtensions,\n    );\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadExtensions;\n  }\n}\n"],"file":"index.js"}