{"version":3,"sources":["modules/AccountPhoneNumber/index.js"],"names":["simplifyPhoneNumber","number","AccountPhoneNumber","deps","dep","optional","client","rolesAndPermissions","options","getDataReducer","fetchFunction","params","account","phoneNumber","list","map","readyCheckFn","_rolesAndPermissions","ready","console","warn","ensureExist","permissions","ReadCompanyPhoneNumbers","DataFetcher","selector","data","numbers","numberMap","forEach","extension","extensionNumber","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;AAOA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;;;;AAIA,SAASA,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,SAAO,2BAAUA,MAAV,CAAP;AACD;AAED;;;;;;IAWqBC,kB,WAPpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,2BAAP;AAAoCC,IAAAA,QAAQ,EAAE;AAA9C,GAHI;AADA,CAAP,C;;;;;AAQC;;;;;AAKA,oCAAyD;AAAA;;AAAA;;AAAA,QAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,QAAnCC,mBAAmC,QAAnCA,mBAAmC;AAAA,QAAXC,OAAW;;AAAA;;AACvD;AACEF,MAAAA,MAAM,EAANA,MADF;AAEEG,MAAAA,cAAc,EAAdA,0BAFF;AAGEC,MAAAA,aAAa,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACN,2BAAU,UAACC,MAAD;AAAA,yBACfL,MAAM,CACHM,OADH,GAEGC,WAFH,GAGGC,IAHH,CAGQH,MAHR,CADe;AAAA,iBAAV,CADM;;AAAA;AAAA,8BAMNX,mBANM;AAAA,+DAMVe,GANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHjB;AAUEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA;AAVhB,OAWKV,OAXL;;AADuD;;AAAA;;AAcvDW,IAAAA,OAAO,CAACC,IAAR,CACE,8EADF;AAIA,UAAKH,oBAAL,GAA4B,4CAAMI,uBAAN,kBAC1Bd,mBAD0B,EAE1B,qBAF0B,CAA5B;AAlBuD;AAsBxD;;;;wBAEW;AACV,aAAO,oBAAP;AACD;;;wBAsBoB;AACnB,aAAO,CAAC,CAAC,KAAKU,oBAAL,CAA0BK,WAA1B,CAAsCC,uBAA/C;AACD;;;;EAxD6CC,wB,mFAkC7CC,kB;;;;;;;WACS,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C;;8FAETD,kB;;;;;;;WAC2B,CAC1B;AAAA,aAAM,MAAI,CAACE,OAAX;AAAA,KAD0B,EAE1B,UAACA,OAAD,EAAa;AACX,UAAMC,SAAS,GAAG,EAAlB;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAC5B,MAAD,EAAY;AAC1B,YAAIA,MAAM,CAAC6B,SAAP,IAAoB7B,MAAM,CAAC6B,SAAP,CAAiBC,eAAzC,EAA0D;AACxD,cAAI,CAACH,SAAS,CAAC3B,MAAM,CAAC6B,SAAP,CAAiBC,eAAlB,CAAd,EAAkD;AAChDH,YAAAA,SAAS,CAAC3B,MAAM,CAAC6B,SAAP,CAAiBC,eAAlB,CAAT,GAA8C,EAA9C;AACD;;AACDH,UAAAA,SAAS,CAAC3B,MAAM,CAAC6B,SAAP,CAAiBC,eAAlB,CAAT,CAA4CC,IAA5C,CAAiD/B,MAAjD;AACD;AACF,OAPD;AAQA,aAAO2B,SAAP;AACD,KAbyB,C","sourcesContent":["import { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport DataFetcher from '../../lib/DataFetcher';\nimport removeUri from '../../lib/removeUri';\nimport { selector } from '../../lib/selector';\nimport ensureExist from '../../lib/ensureExist';\nimport { getDataReducer } from './getReducer';\n\n/**\n * @typedef ExtensionData\n * @type {object}\n * @property {number} id\n * @property {string} extensionNumber\n */\n\n/**\n * @typedef {Object} SimplePhoneNumber\n * @property {ExtensionData} extension\n * @property {number} id\n * @property {string} location\n * @property {string} paymentType\n * @property {string} phoneNumber\n * @property {string} status\n * @property {string} type\n * @property {string} usageType\n */\n\n/**\n * @typedef {Object} PhoneNumber\n * @property {string} uri\n * @property {number} id\n * @property {string} location\n * @property {string} paymentType\n * @property {string} phoneNumber\n * @property {string} status\n * @property {string} type\n * @property {string} usageType\n */\n\n/**\n * @param {PhoneNumber} number\n * @returns {SimplePhoneNumber}\n */\nfunction simplifyPhoneNumber(number) {\n  return removeUri(number);\n}\n\n/**\n * @class\n * @description Accound phone number module to get account phone number list\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'AccountPhoneNumberOptions', optional: true },\n  ],\n})\nexport default class AccountPhoneNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, rolesAndPermissions, ...options }) {\n    super({\n      client,\n      getDataReducer,\n      fetchFunction: async () =>\n        (await fetchList((params) =>\n          client\n            .account()\n            .phoneNumber()\n            .list(params),\n        )).map(simplifyPhoneNumber),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      ...options,\n    });\n    console.warn(\n      'AccountPhoneNumber module is deprecated, please use CompanyContacts instead.',\n    );\n\n    this._rolesAndPermissions = this::ensureExist(\n      rolesAndPermissions,\n      'rolesAndPermissions',\n    );\n  }\n\n  get _name() {\n    return 'accountPhoneNumber';\n  }\n\n  @selector\n  numbers = [() => this.data, (data) => data || []];\n\n  @selector\n  extensionToPhoneNumberMap = [\n    () => this.numbers,\n    (numbers) => {\n      const numberMap = {};\n      numbers.forEach((number) => {\n        if (number.extension && number.extension.extensionNumber) {\n          if (!numberMap[number.extension.extensionNumber]) {\n            numberMap[number.extension.extensionNumber] = [];\n          }\n          numberMap[number.extension.extensionNumber].push(number);\n        }\n      });\n      return numberMap;\n    },\n  ];\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadCompanyPhoneNumbers;\n  }\n}\n"],"file":"index.js"}