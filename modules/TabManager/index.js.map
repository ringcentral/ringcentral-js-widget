{"version":3,"sources":["modules/TabManager/index.js"],"names":["TabManager","options","actionTypes","_tabbie","Tabbie","prefix","_reducer","store","initSuccess","checkIsMain","type","active","dispatch","enabled","on","mainTabId","mainTabIdChanged","event","args","send","state","status","moduleStatuses","ready","id","RcModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOqBA,U;AALrB;;;;OAIC,iB;;;;;AAEC,4BAA4B;AAAA;;AAAA,QAAXC,OAAW;;AAAA;;AAC1B,sGACKA,OADL;AAEEC,MAAAA,WAAW,EAAXA;AAFF;AAIA,UAAKC,OAAL,GAAe,IAAIC,kBAAJ,CAAW;AACxBC,MAAAA,MAAM,EAAE,MAAKA;AADW,KAAX,CAAf;AAGA,UAAKC,QAAL,GAAgB,sCAAqB,MAAKJ,WAA1B,CAAhB;AAR0B;AAS3B;;;;;;;;;;;6BAGC,KAAKK,K;6BACG,KAAKL,WAAL,CAAiBM,W;;8CACT,KAAKL,OAAL,CAAaM,WAAb,E;;;;;AADdC,gBAAAA,I;AACAC,gBAAAA,M;;;2BAFSC,Q;;AAIX,kBAAI,KAAKT,OAAL,CAAaU,OAAjB,EAA0B;AACxB,qBAAKV,OAAL,CAAaW,EAAb,CAAgB,kBAAhB,EAAoC,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wCAClC,MAAI,CAACR,KAD6B;AAAA,wCAE1B,MAAI,CAACL,WAAL,CAAiBc,gBAFS;AAAA,wCAGhCD,SAHgC;AAAA;AAAA,0DAIlB,MAAI,CAACZ,OAAL,CAAaM,WAAb,EAJkB;;AAAA;AAAA;AAAA;AAEhCC,4BAAAA,IAFgC;AAGhCK,4BAAAA,SAHgC;AAIhCJ,4BAAAA,MAJgC;AAAA;;AAAA,sCACvBC,QADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApC;;AAOA,qBAAKT,OAAL,CAAaW,EAAb,CAAgB,OAAhB,EAAyB,UAACG,KAAD,EAAoB;AAAA,oDAATC,IAAS;AAATA,oBAAAA,IAAS;AAAA;;AAC3C,kBAAA,MAAI,CAACX,KAAL,CAAWK,QAAX,CAAoB;AAClBF,oBAAAA,IAAI,EAAE,MAAI,CAACR,WAAL,CAAiBe,KADL;AAElBA,oBAAAA,KAAK,EAALA,KAFkB;AAGlBC,oBAAAA,IAAI,EAAJA;AAHkB,mBAApB;AAKD,iBAND;AAOD;;;;;;;;;;;yBAGED,K,EAAgB;AAAA;;AAAA,yCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACnB,4BAAKf,OAAL,EAAagB,IAAb,uBAAkBF,KAAlB,SAA4BC,IAA5B;AACD;;;;;;;;gDAmBQ,KAAKf,OAAL,CAAaM,WAAb,E;;;;;;;;;;;wBAjBI;AACX,aAAO,KAAKW,KAAL,CAAWC,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWC,MAAX,KAAsBC,2BAAeC,KAA5C;AACD;;;wBAEY;AACX,aAAO,KAAKH,KAAL,CAAWT,MAAlB;AACD;;;wBAEQ;AACP,aAAO,KAAKR,OAAL,CAAaqB,EAApB;AACD;;;wBAMW;AACV,aAAO,KAAKJ,KAAL,CAAWH,KAAlB;AACD;;;;EA7DqCQ,qB","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport Tabbie from '../../lib/Tabbie';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getTabManagerReducer from './getTabManagerReducer';\n\n/**\n * @class\n * @description To handle data between different tabs\n */\n@Module()\nexport default class TabManager extends RcModule {\n  constructor({ ...options }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._tabbie = new Tabbie({\n      prefix: this.prefix,\n    });\n    this._reducer = getTabManagerReducer(this.actionTypes);\n  }\n\n  async initialize() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n      active: await this._tabbie.checkIsMain(),\n    });\n    if (this._tabbie.enabled) {\n      this._tabbie.on('mainTabIdChanged', async (mainTabId) => {\n        this.store.dispatch({\n          type: this.actionTypes.mainTabIdChanged,\n          mainTabId,\n          active: await this._tabbie.checkIsMain(),\n        });\n      });\n      this._tabbie.on('event', (event, ...args) => {\n        this.store.dispatch({\n          type: this.actionTypes.event,\n          event,\n          args,\n        });\n      });\n    }\n  }\n\n  send(event, ...args) {\n    this._tabbie.send(event, ...args);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get active() {\n    return this.state.active;\n  }\n\n  get id() {\n    return this._tabbie.id;\n  }\n\n  async ensureActive() {\n    return this._tabbie.checkIsMain();\n  }\n\n  get event() {\n    return this.state.event;\n  }\n}\n"],"file":"index.js"}