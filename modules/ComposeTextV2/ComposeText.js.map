{"version":3,"sources":["modules/ComposeTextV2/ComposeText.ts"],"names":["ComposeText","name","deps","dep","optional","enableCache","storageKey","_lastContactSearchResult","number","senderNumber","typingToNumber","entityId","toNumberEntity","id","idx","toNumbers","findIndex","item","phoneNumber","oldNumber","find","push","filter","text","messageText","attachment","newAttachments","attachments","f","_shouldHandleRecipient","_handleRecipient","_deps","auth","loggedIn","ready","isFreshLogin","clean","_initSenderNumber","messageSender","senderNumbersList","contactSearch","searchResult","length","cachedPhoneNumber","updateSenderNumber","dummy","toNumber","entityType","recipient","addToNumber","slice","message","ttlConfig","messageSenderMessages","noAreaCode","ttl","alert","warning","allowDuplicates","_validateIsOnlyPager","validateResult","numberValidate","validateFormat","result","error","errors","_alertWarning","type","recipientNumberInvalids","rolesAndPermissions","onlyPagerPermission","noSMSPermission","map","_validatePhoneNumber","send","fromNumber","_setSenderNumber","_setTypingToNumber","_setToNumberEntity","shouldClean","isAdded","_addToNumber","_removeToNumber","textTooLong","_setMessageText","attachmentCountLimitation","size","reduce","prev","curr","ATTACHMENT_SIZE_LIMITATION","attachmentSizeLimitation","_addAttachment","_removeAttachment","_clean","sending","alertMessage","messages","m","dismiss","RcModuleV2","storage","state","action","proxify"],"mappings":"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","sourcesContent":["import {\n  RcModuleV2,\n  state,\n  action,\n  storage,\n  watch,\n} from '@ringcentral-integration/core';\nimport { ObjectMapKey } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport { Module } from '../../lib/di';\nimport isBlank from '../../lib/isBlank';\nimport proxify from '../../lib/proxy/proxify';\n\nimport {\n  messageSenderMessages,\n  ATTACHMENT_SIZE_LIMITATION,\n  Attachment,\n} from '../MessageSenderV2';\n\nimport { Deps, ToNumber } from './ComposeText.interface';\n\n/**\n * @class\n * @description Compose text managing module\n */\n@Module({\n  name: 'ComposeText',\n  deps: [\n    'Alert',\n    'Auth',\n    'Storage',\n    'MessageSender',\n    'NumberValidate',\n    'RolesAndPermissions',\n    { dep: 'ContactSearch', optional: true },\n    { dep: 'ComposeTextOptions', optional: true },\n  ],\n})\nexport class ComposeText extends RcModuleV2<Deps> {\n  protected _lastContactSearchResult: any = null;\n\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {MessageSender} params.messageSender - messageSender module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {ContactSearch} params.contactSearch - contactSearch module instance\n   */\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'composeText',\n    });\n  }\n\n  @storage\n  @state\n  senderNumber = '';\n\n  @state\n  typingToNumber = '';\n\n  @state\n  toNumbers: ToNumber[] = [];\n\n  @state\n  messageText = '';\n\n  @state\n  toNumberEntity = '';\n\n  @state\n  attachments: Attachment[] = [];\n\n  @action\n  _setSenderNumber(number: string = '') {\n    this.senderNumber = number;\n  }\n\n  @action\n  _setTypingToNumber(number?: string) {\n    this.typingToNumber = number;\n  }\n\n  @action\n  _setToNumberEntity(entityId: string) {\n    this.toNumberEntity = entityId;\n  }\n\n  @action\n  _addToNumber(number: ToNumber) {\n    if (number.id) {\n      const idx = this.toNumbers.findIndex(\n        (item) =>\n          number.id === item.id || number.phoneNumber === item.phoneNumber,\n      );\n      if (idx > -1) {\n        // replace old one if found\n        this.toNumbers[idx] = number;\n        return;\n      }\n    } else {\n      const oldNumber = this.toNumbers.find(\n        (item) => number.phoneNumber === item.phoneNumber,\n      );\n      if (oldNumber) {\n        return;\n      }\n    }\n    this.toNumbers.push(number);\n  }\n\n  @action\n  _removeToNumber(number: ToNumber) {\n    this.toNumbers = this.toNumbers.filter(\n      (item) => item.phoneNumber !== number.phoneNumber,\n    );\n  }\n\n  @action\n  _setMessageText(text: string) {\n    this.messageText = text;\n  }\n\n  @action\n  _addAttachment(attachment: Attachment) {\n    const newAttachments = this.attachments.filter(\n      (f) => f.name !== attachment.name,\n    );\n    newAttachments.push(attachment);\n    this.attachments = newAttachments;\n  }\n\n  @action\n  _removeAttachment(attachment: Attachment) {\n    this.attachments = this.attachments.filter(\n      (f) => f.name !== attachment.name,\n    );\n  }\n\n  @action\n  _clean() {\n    this.typingToNumber = '';\n    this.toNumbers = [];\n    this.messageText = '';\n    this.attachments = [];\n    this.toNumberEntity = '';\n  }\n\n  onStateChange() {\n    if (this._shouldHandleRecipient()) {\n      this._handleRecipient();\n    }\n  }\n\n  _shouldInit() {\n    return !!(super._shouldInit() && this._deps.auth.loggedIn);\n  }\n\n  _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this._deps.auth.loggedIn)\n    );\n  }\n\n  async onInit() {\n    if (this._deps.auth.isFreshLogin) {\n      await this.clean();\n    }\n    this._initSenderNumber();\n  }\n\n  async onReset() {\n    await this.clean();\n  }\n\n  onInitOnce() {\n    watch(\n      this,\n      () => this._deps.messageSender.senderNumbersList,\n      () => {\n        if (this.ready) {\n          this._initSenderNumber();\n        }\n      },\n    );\n  }\n\n  _shouldHandleRecipient() {\n    return (\n      this.ready &&\n      !!this._deps.contactSearch &&\n      this._deps.contactSearch.ready &&\n      this._deps.contactSearch.searchResult.length > 0 &&\n      this._deps.contactSearch.searchResult !== this._lastContactSearchResult\n    );\n  }\n\n  _initSenderNumber() {\n    const cachedPhoneNumber = this.senderNumber;\n    if (\n      cachedPhoneNumber &&\n      this._deps.messageSender.senderNumbersList.find(\n        (number) => (number as any).phoneNumber === cachedPhoneNumber,\n      )\n    ) {\n      return;\n    }\n    this.updateSenderNumber(\n      this._deps.messageSender.senderNumbersList[0] &&\n        (this._deps.messageSender.senderNumbersList[0] as any).phoneNumber,\n    );\n  }\n\n  _handleRecipient() {\n    const dummy = this.toNumbers.find((toNumber) => !toNumber.entityType);\n    if (dummy) {\n      const recipient = this._deps.contactSearch.searchResult.find(\n        (item: any) => item.id === dummy.id,\n      );\n      if (recipient) {\n        this.addToNumber(recipient);\n        this._lastContactSearchResult = this._deps.contactSearch.searchResult.slice();\n      }\n    }\n  }\n\n  _alertWarning(message: string) {\n    if (message) {\n      const ttlConfig =\n        message !== messageSenderMessages.noAreaCode ? { ttl: 0 } : null;\n      this._deps.alert.warning({\n        message,\n        allowDuplicates: false,\n        ...ttlConfig,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validatePhoneNumber(phoneNumber: string) {\n    if (this._validateIsOnlyPager(phoneNumber)) {\n      return null;\n    }\n    const validateResult = this._deps.numberValidate.validateFormat([\n      phoneNumber,\n    ]);\n    if (!validateResult.result) {\n      const error = validateResult.errors[0];\n      if (\n        error &&\n        this._alertWarning(\n          messageSenderMessages[\n            error.type as ObjectMapKey<typeof messageSenderMessages>\n          ],\n        )\n      ) {\n        return false;\n      }\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return false;\n    }\n    return true;\n  }\n\n  _validateIsOnlyPager(phoneNumber: string) {\n    if (\n      phoneNumber.length >= 7 &&\n      this._deps.rolesAndPermissions.onlyPagerPermission\n    ) {\n      this._alertWarning(messageSenderMessages.noSMSPermission);\n      return true;\n    }\n    return false;\n  }\n\n  @proxify\n  validatePhoneNumber(phoneNumber: string) {\n    if (this._validateIsOnlyPager(phoneNumber)) {\n      return false;\n    }\n    const validateResult = this._deps.numberValidate.validateFormat([\n      phoneNumber,\n    ]);\n    return !!validateResult.result;\n  }\n\n  @proxify\n  async send() {\n    const toNumbers = this.toNumbers.map((number) => number.phoneNumber);\n    const { typingToNumber } = this;\n    if (!isBlank(typingToNumber)) {\n      if (this._validatePhoneNumber(typingToNumber)) {\n        toNumbers.push(typingToNumber);\n      } else {\n        return null;\n      }\n    }\n    return this._deps.messageSender.send({\n      fromNumber: this.senderNumber,\n      toNumbers,\n      text: this.messageText,\n      attachments: this.attachments,\n    });\n  }\n\n  @proxify\n  async updateSenderNumber(number?: string) {\n    this._setSenderNumber(number);\n  }\n\n  @proxify\n  async updateTypingToNumber(number: string) {\n    if (number.length > 30) {\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return;\n    }\n    this._setTypingToNumber(number);\n  }\n\n  @proxify\n  async onToNumberMatch({ entityId }: { entityId: string }) {\n    this._setToNumberEntity(entityId);\n  }\n\n  @proxify\n  async addToRecipients(recipient: ToNumber, shouldClean = true) {\n    const isAdded = await this.addToNumber(recipient);\n    if (isAdded && shouldClean) {\n      this._setTypingToNumber('');\n    }\n  }\n\n  @proxify\n  async cleanTypingToNumber() {\n    this._setTypingToNumber('');\n  }\n\n  @proxify\n  async addToNumber(number: ToNumber) {\n    if (isBlank(number.phoneNumber)) {\n      return false;\n    }\n    if (!this._validatePhoneNumber(number.phoneNumber)) {\n      return false;\n    }\n    this._addToNumber(number);\n    return true;\n  }\n\n  @proxify\n  async removeToNumber(number: ToNumber) {\n    this._removeToNumber(number);\n  }\n\n  @proxify\n  async updateMessageText(text: string) {\n    if (text.length > 1000) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return;\n    }\n    this._setMessageText(text);\n  }\n\n  @proxify\n  async addAttachment(attachment: Attachment) {\n    if (this.attachments.length >= 10) {\n      this._alertWarning(messageSenderMessages.attachmentCountLimitation);\n      return;\n    }\n    const size = this.attachments.reduce((prev, curr) => {\n      return prev + curr.size;\n    }, 0);\n    if (size + attachment.size > ATTACHMENT_SIZE_LIMITATION) {\n      this._alertWarning(messageSenderMessages.attachmentSizeLimitation);\n      return;\n    }\n    this._addAttachment(attachment);\n  }\n\n  @proxify\n  async removeAttachment(attachment: Attachment) {\n    this._removeAttachment(attachment);\n  }\n\n  @proxify\n  async clean() {\n    this._clean();\n  }\n\n  @proxify\n  async alertMessageSending() {\n    this._deps.alert.warning({\n      message: messageSenderMessages.sending,\n      ttl: 0,\n    });\n  }\n\n  @proxify\n  async dismissMessageSending() {\n    const alertMessage = this._deps.alert.messages.find(\n      (m) => m.message === messageSenderMessages.sending,\n    );\n    if (alertMessage && alertMessage.id) {\n      this._deps.alert.dismiss(alertMessage.id);\n    }\n  }\n\n  get senderNumbersList() {\n    return this._deps.messageSender.senderNumbersList;\n  }\n}\n"],"file":"ComposeText.js"}