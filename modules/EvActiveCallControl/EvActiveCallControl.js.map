{"version":3,"sources":["modules/EvActiveCallControl/EvActiveCallControl.ts"],"names":["EvActiveCallControl","name","deps","dep","optional","_deps","tabManager","enable","enableCache","storageKey","isRecording","timeStamp","Date","now","evClient","record","state","message","setIsRecording","Error","pauseRecord","pauseRecordAction","_sipToggleMute","sessionId","hangup","console","log","_changeOnHoldState","holdSession","uii","id","getMainId","presence","callsMapping","hold","evAgentSession","isIntegratedSoftphone","tabManagerEnabled","send","tabManagerEvents","MUTE","evIntegratedSoftphone","sipToggleMute","RcModuleV2","storage","action"],"mappings":"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","sourcesContent":["import {\n  RcModuleV2,\n  storage,\n  action,\n  state,\n} from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport { tabManagerEvents } from '../../enums';\nimport {\n  EvClientHandUpParams,\n  EvClientHoldSessionParams,\n} from '../../lib/EvClient';\nimport { ActiveCallControl, Deps } from './EvActiveCallControl.interface';\n\n@Module({\n  name: 'EvActiveCallControl',\n  deps: [\n    'EvClient',\n    'EvSettings',\n    'Presence',\n    'EvIntegratedSoftphone',\n    'EvAgentSession',\n    'Storage',\n    'EvCallMonitor',\n    { dep: 'TabManager', optional: true },\n    { dep: 'EvActiveCallControlOptions', optional: true },\n  ],\n})\nclass EvActiveCallControl\n  extends RcModuleV2<Deps>\n  implements ActiveCallControl {\n  get tabManagerEnabled() {\n    return this._deps.tabManager?.enable;\n  }\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvActiveCallControl',\n    });\n  }\n\n  @storage\n  @state\n  isRecording: boolean = null;\n\n  @action\n  setIsRecording(isRecording: boolean) {\n    this.isRecording = isRecording;\n  }\n\n  @action\n  pauseRecordAction() {\n    this.isRecording = false;\n    this.timeStamp = Date.now();\n  }\n\n  async record() {\n    const { state, message } = await this._deps.evClient.record(true);\n\n    if (state === 'RECORDING') {\n      this.setIsRecording(true);\n    } else {\n      throw new Error(message);\n    }\n  }\n\n  async stopRecord() {\n    const { state, message } = await this._deps.evClient.record(false);\n    if (state === 'STOPPED') {\n      this.setIsRecording(false);\n    } else {\n      throw new Error(message);\n    }\n  }\n\n  @storage\n  @state\n  timeStamp: number = null;\n\n  async pauseRecord() {\n    const { state, message } = await this._deps.evClient.pauseRecord(false);\n    if (state === 'PAUSED') {\n      this.pauseRecordAction();\n    } else {\n      throw new Error(message);\n    }\n  }\n\n  @action\n  resumeRecord() {\n    this.isRecording = true;\n    this.timeStamp = null;\n  }\n\n  mute() {\n    this._sipToggleMute(true);\n  }\n\n  unmute() {\n    this._sipToggleMute(false);\n  }\n\n  hangUp(sessionId: string) {\n    this._deps.evClient.hangup({ sessionId });\n  }\n\n  reject() {\n    console.log('reject');\n  }\n\n  hold() {\n    this._changeOnHoldState(true);\n  }\n\n  unhold() {\n    this._changeOnHoldState(false);\n  }\n\n  hangupSession({ sessionId }: EvClientHandUpParams) {\n    this._deps.evClient.hangup({ sessionId });\n  }\n\n  holdSession({ sessionId, state }: EvClientHoldSessionParams) {\n    this._deps.evClient.holdSession({ state, sessionId });\n  }\n\n  getMainCall(uii: string) {\n    const id = this._deps.evClient.getMainId(uii);\n    return this._deps.presence.callsMapping[id];\n  }\n\n  private _changeOnHoldState(state: boolean) {\n    this._deps.evClient.hold(state);\n  }\n\n  private _sipToggleMute(state: boolean) {\n    if (this._deps.evAgentSession.isIntegratedSoftphone) {\n      if (this.tabManagerEnabled) {\n        this._deps.tabManager.send(tabManagerEvents.MUTE, state);\n      }\n      this._deps.evIntegratedSoftphone.sipToggleMute(state);\n    }\n  }\n}\n\nexport { EvActiveCallControl };\n"],"file":"EvActiveCallControl.js"}