{"version":3,"sources":["modules/EvActiveCallControl/EvActiveCallControl.ts"],"names":["EvActiveCallControl","name","deps","dep","optional","_modules","evSettings","loginType","loginTypes","integratedSoftphone","evClient","presence","evIntegratedSoftphone","options","modules","console","log","isIntegratedSoftphone","sipToggleMute","sessionId","hangup","changeOnHoldState","state","holdSession","uii","id","getMainId","callsMapping","hold","RcModuleV2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYMA,mB,WAVL,gBAAO;AACNC,EAAAA,IAAI,EAAE,qBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,UADI,EAEJ,YAFI,EAGJ,UAHI,EAIJ,uBAJI,EAKJ;AAAEC,IAAAA,GAAG,EAAE,4BAAP;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GALI;AAFA,CAAP,C;;;;;;;wBAY6B;AAC1B,aACE,KAAKC,QAAL,CAAcC,UAAd,CAAyBC,SAAzB,KAAuCC,kBAAWC,mBADpD;AAGD;;;AAED,qCAMG;AAAA,QALDC,QAKC,QALDA,QAKC;AAAA,QAJDC,QAIC,QAJDA,QAIC;AAAA,QAHDL,UAGC,QAHDA,UAGC;AAAA,QAFDM,qBAEC,QAFDA,qBAEC;AAAA,QADEC,OACF;;AAAA;;AAAA;AAECC,MAAAA,OAAO,EAAE;AACPJ,QAAAA,QAAQ,EAARA,QADO;AAEPJ,QAAAA,UAAU,EAAVA,UAFO;AAGPK,QAAAA,QAAQ,EAARA,QAHO;AAIPC,QAAAA,qBAAqB,EAArBA;AAJO;AAFV,OAQIC,OARJ;AAUF;;;;2BAEM;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAEA,UAAI,KAAKC,qBAAT,EAAgC;AAC9B,aAAKZ,QAAL,CAAcO,qBAAd,CAAoCM,aAApC,CAAkD,IAAlD;AACD;AACF;;;6BAEQ;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAI,KAAKC,qBAAT,EAAgC;AAC9B,aAAKZ,QAAL,CAAcO,qBAAd,CAAoCM,aAApC,CAAkD,KAAlD;AACD;AACF;;;2BAEMC,S,EAAmB;AACxB,WAAKd,QAAL,CAAcK,QAAd,CAAuBU,MAAvB,CAA8B;AAAED,QAAAA,SAAS,EAATA;AAAF,OAA9B;AACD;;;6BAEQ;AACPJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;;2BAEM;AACL,WAAKK,iBAAL,CAAuB,IAAvB;AACD;;;6BAEQ;AACP,WAAKA,iBAAL,CAAuB,KAAvB;AACD;;;yCAE4B;AAAA,UAAbF,SAAa,SAAbA,SAAa;;AAC3B,WAAKd,QAAL,CAAcK,QAAd,CAAuBU,MAAvB,CAA8B;AAAED,QAAAA,SAAS,EAATA;AAAF,OAA9B;AACD;;;uCAEiC;AAAA,UAApBA,SAAoB,SAApBA,SAAoB;AAAA,UAATG,KAAS,SAATA,KAAS;;AAChC,WAAKjB,QAAL,CAAcK,QAAd,CAAuBa,WAAvB,CAAmC;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASH,QAAAA,SAAS,EAATA;AAAT,OAAnC;AACD;;;gCAEWK,G,EAAa;AACvB,UAAMC,EAAE,GAAG,KAAKpB,QAAL,CAAcK,QAAd,CAAuBgB,SAAvB,CAAiCF,GAAjC,CAAX;;AACA,aAAO,KAAKnB,QAAL,CAAcM,QAAd,CAAuBgB,YAAvB,CAAoCF,EAApC,CAAP;AACD;;;sCAEyBH,K,EAAgB;AACxC,WAAKjB,QAAL,CAAcK,QAAd,CAAuBkB,IAAvB,CAA4BN,KAA5B;AACD;;;;EAxE+BO,gB","sourcesContent":["import { RcModuleV2 } from '@ringcentral-integration/core';\nimport { Module } from 'ringcentral-integration/lib/di';\n\nimport {\n  ActiveCallControl,\n  DepsModules,\n} from './EvActiveCallControl.interface';\nimport { loginTypes } from '../../enums';\n\n@Module({\n  name: 'EvActiveCallControl',\n  deps: [\n    'EvClient',\n    'EvSettings',\n    'Presence',\n    'EvIntegratedSoftphone',\n    { dep: 'EvActiveCallControlOptions', optional: true },\n  ],\n})\nclass EvActiveCallControl extends RcModuleV2<DepsModules>\n  implements ActiveCallControl {\n  get isIntegratedSoftphone() {\n    return (\n      this._modules.evSettings.loginType === loginTypes.integratedSoftphone\n    );\n  }\n\n  constructor({\n    evClient,\n    presence,\n    evSettings,\n    evIntegratedSoftphone,\n    ...options\n  }) {\n    super({\n      modules: {\n        evClient,\n        evSettings,\n        presence,\n        evIntegratedSoftphone,\n      },\n      ...options,\n    });\n  }\n\n  mute() {\n    console.log('mute');\n\n    if (this.isIntegratedSoftphone) {\n      this._modules.evIntegratedSoftphone.sipToggleMute(true);\n    }\n  }\n\n  unmute() {\n    console.log('unmute');\n    if (this.isIntegratedSoftphone) {\n      this._modules.evIntegratedSoftphone.sipToggleMute(false);\n    }\n  }\n\n  hangUp(sessionId: string) {\n    this._modules.evClient.hangup({ sessionId });\n  }\n\n  reject() {\n    console.log('reject');\n  }\n\n  hold() {\n    this.changeOnHoldState(true);\n  }\n\n  unhold() {\n    this.changeOnHoldState(false);\n  }\n\n  hangupSession({ sessionId }) {\n    this._modules.evClient.hangup({ sessionId });\n  }\n\n  holdSession({ sessionId, state }) {\n    this._modules.evClient.holdSession({ state, sessionId });\n  }\n\n  getMainCall(uii: string) {\n    const id = this._modules.evClient.getMainId(uii);\n    return this._modules.presence.callsMapping[id];\n  }\n\n  private changeOnHoldState(state: boolean) {\n    this._modules.evClient.hold(state);\n  }\n}\n\nexport { EvActiveCallControl };\n"],"file":"EvActiveCallControl.js"}