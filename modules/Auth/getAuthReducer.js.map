{"version":3,"sources":["modules/Auth/getAuthReducer.ts"],"names":["getLoginStatusReducer","types","state","type","loggedIn","refreshTokenValid","login","loginStatus","loggingIn","loginSuccess","refreshSuccess","cancelLogout","loginError","logoutSuccess","logoutError","notLoggedIn","refreshError","logout","loggingOut","beforeLogout","initSuccess","tabSync","getTokenReducer","token","ownerId","owner_id","endpointId","endpoint_id","accessToken","access_token","expireTime","expire_time","expiresIn","expires_in","scope","getFreshLoginReducer","getAuthReducer","status","freshLogin"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport loginStatus from './loginStatus';\n\nexport function getLoginStatusReducer(types) {\n  return (state = null, { type, loggedIn, refreshTokenValid }) => {\n    switch (type) {\n      case types.login:\n        return loginStatus.loggingIn;\n\n      case types.loginSuccess:\n      case types.refreshSuccess:\n      case types.cancelLogout:\n        return loginStatus.loggedIn;\n\n      case types.loginError:\n      case types.logoutSuccess:\n      case types.logoutError:\n        return loginStatus.notLoggedIn;\n\n      case types.refreshError:\n        return refreshTokenValid ? state : loginStatus.notLoggedIn;\n\n      case types.logout:\n        return loginStatus.loggingOut;\n\n      case types.beforeLogout:\n        return loginStatus.beforeLogout;\n\n      case types.initSuccess:\n      case types.tabSync:\n        return loggedIn ? loginStatus.loggedIn : loginStatus.notLoggedIn;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTokenReducer(types) {\n  return (state = {}, { type, token, refreshTokenValid }) => {\n    switch (type) {\n      case types.loginSuccess:\n      case types.refreshSuccess:\n        return {\n          ownerId: token.owner_id,\n          endpointId: token.endpoint_id,\n          accessToken: token.access_token,\n          expireTime: token.expire_time,\n          expiresIn: token.expires_in,\n          scope: token.scope,\n        };\n      case types.loginError:\n      case types.logoutSuccess:\n      case types.logoutError:\n        return {};\n\n      case types.refreshError:\n        if (refreshTokenValid) {\n          return state;\n        }\n        return {};\n      case types.initSuccess:\n      case types.tabSync:\n        if (token) {\n          return {\n            ownerId: token.owner_id,\n            endpointId: token.endpoint_id,\n            accessToken: token.access_token,\n            expireTime: token.expire_time,\n            expiresIn: token.expires_in,\n            scope: token.scope,\n          };\n        }\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFreshLoginReducer(types) {\n  return (state = null, { type, loggedIn }) => {\n    switch (type) {\n      case types.initSuccess:\n      case types.tabSync:\n        return loggedIn ? false : null;\n\n      case types.login:\n        return true;\n\n      case types.loginError:\n      case types.refreshError:\n      case types.logoutSuccess:\n      case types.logoutError:\n        return null;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAuthReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    loginStatus: getLoginStatusReducer(types),\n    freshLogin: getFreshLoginReducer(types),\n    token: getTokenReducer(types),\n  });\n}\n"],"file":"getAuthReducer.js"}