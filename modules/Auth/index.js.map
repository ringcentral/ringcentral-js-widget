{"version":3,"sources":["modules/Auth/index.js"],"names":["LoginStatusChangeEvent","Auth","deps","dep","optional","client","alert","brand","locale","tabManager","environment","options","actionTypes","_client","_alert","_brand","_locale","_tabManager","_environment","_reducer","_beforeLogoutHandlers","Set","_afterLoggedInHandlers","_proxyFrame","_proxyFrameLoaded","_unbindEvents","_lastEnvironmentCounter","platform","service","onRequestError","apiResponse","Error","message","logout","onLoginSuccess","store","dispatch","type","loginSuccess","token","auth","data","handlers","handler","onLoginError","error","loginError","danger","authMessages","payload","onLogoutSuccess","logoutSuccess","onLogoutError","_cache","clean","logoutError","onRefreshSuccess","refreshSuccess","onRefreshError","isOffline","res_status","_response","status","refreshTokenValid","refreshError","access_token","sessionExpired","ttl","addListener","events","requestError","removeListener","loggedIn","subscribe","moduleStatuses","pending","ready","init","_bindEvents","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","changeCounter","username","password","extension","remember","code","redirectUri","accessToken","expiresIn","endpointId","tokenType","login","setData","token_type","expires_in","refresh_token_expires_in","account","get","extensionData","ownerId","id","endpoint_id","owner_id","state","brandId","display","prompt","force","implicit","loginUrl","dismissAllAlert","dismissAll","beforeLogout","result","cancelLogout","Promise","reject","beforeLogoutError","isImplicit","add","removeBeforeLogoutHandler","String","newAuthData","emit","console","url","resolve","window","location","href","_redirectUri","_proxyUri","freshLogin","_appSecret","length","RcModule","proxify"],"mappings":"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","sourcesContent":["import url from 'url';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport getAuthReducer from './getAuthReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from './loginStatus';\nimport authMessages from './authMessages';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\n\nconst LoginStatusChangeEvent = 'loginStatusChange';\n\n/**\n * @class\n * @description Authentication module\n */\n@Module({\n  deps: [\n    'Client',\n    'Alert',\n    'Brand',\n    'Locale',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Environment', optional: true },\n    { dep: 'AuthOptions', optional: true },\n  ],\n})\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Alert} params.alert - alert module instance\n   * @param {Brand} params.brand - brand module instance\n   * @param {Locale} params.locale - locale module instance\n   * @param {TabManager} params.tabManager - tabManager module instance\n   * @param {environment} params.Environment - environment module instance\n   * @param {String} params.redirectUri - redirect uri\n   * @param {String} params.proxyUri - proxyUri module instance\n   * @param {Number} params.defaultProxyRetry - default proxy retry time 5000\n   */\n  constructor({\n    client,\n    alert,\n    brand,\n    locale,\n    tabManager,\n    environment,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = ensureExist(client, 'client');\n    this._alert = ensureExist(alert, 'alert');\n    this._brand = ensureExist(brand, 'brand');\n    this._locale = ensureExist(locale, 'locale');\n    this._tabManager = tabManager;\n    this._environment = environment;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._beforeLogoutHandlers = new Set();\n    this._afterLoggedInHandlers = new Set();\n    this._proxyFrame = null;\n    this._proxyFrameLoaded = false;\n    this._unbindEvents = null;\n    this._lastEnvironmentCounter = 0;\n  }\n\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n\n    const platform = this._client.service.platform();\n    const client = this._client.service._client;\n    const onRequestError = (apiResponse) => {\n      if (\n        apiResponse instanceof Error &&\n        apiResponse.message === 'Token revoked'\n      ) {\n        this.logout();\n      }\n    };\n\n    const onLoginSuccess = async () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n      const handlers = [...this._afterLoggedInHandlers];\n      for (const handler of handlers) {\n        await (async () => handler())();\n      }\n    };\n    const onLoginError = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.loginError,\n          payload: error,\n        });\n      }\n    };\n    const onLogoutSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    };\n    const onLogoutError = (error) => {\n      platform._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    };\n    const onRefreshSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    };\n    const onRefreshError = (error) => {\n      // user is still considered logged in if the refreshToken is still valid\n      let isOffline =\n        error.message === 'Failed to fetch' ||\n        error.message === 'The Internet connection appears to be offline.' ||\n        error.message === 'NetworkError when attempting to fetch resource.' ||\n        error.message ===\n          'Network Error 0x2ee7, Could not complete the operation due to error 00002ee7.';\n\n      let res_status =\n        (error.apiResponse &&\n          error.apiResponse._response &&\n          error.apiResponse._response.status) ||\n        null;\n      const refreshTokenValid =\n        (isOffline || res_status >= 500) && platform.auth().refreshTokenValid();\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n\n      if (!refreshTokenValid && platform.auth().data().access_token !== '') {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    client.addListener(client.events.requestError, onRequestError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n      client.removeListener(client.events.requestError, onRequestError);\n    };\n  }\n\n  initialize() {\n    let loggedIn;\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatuses.pending &&\n        this._locale.ready &&\n        (!this._tabManager || this._tabManager.ready) &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this._bindEvents();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? platform.auth().data() : null,\n        });\n      }\n      if (this._tabManager && this._tabManager.ready && this.ready) {\n        if (\n          (loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n          (!loggedIn && this.loginStatus === loginStatus.loggedIn)\n        ) {\n          loggedIn = !loggedIn;\n          this._tabManager.send(LoginStatusChangeEvent, loggedIn);\n        } else if (\n          this._tabManager.event &&\n          this._tabManager.event.name === LoginStatusChangeEvent &&\n          this._tabManager.event.args[0] !== loggedIn\n        ) {\n          /* eslint { \"prefer-destructuring\": 0 } */\n          loggedIn = this._tabManager.event.args[0];\n          this.store.dispatch({\n            type: this.actionTypes.tabSync,\n            loggedIn,\n            token: loggedIn\n              ? this._client.service\n                  .platform()\n                  .auth()\n                  .data()\n              : null,\n          });\n        }\n      }\n      if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindEvents();\n      }\n    });\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get token() {\n    return this.state.token;\n  }\n\n  get ownerId() {\n    return this.token.ownerId;\n  }\n\n  get endpointId() {\n    return this.token.endpointId;\n  }\n\n  get accessToken() {\n    return this.token.accessToken;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({\n    username,\n    password,\n    extension,\n    remember,\n    code,\n    redirectUri,\n    accessToken,\n    expiresIn,\n    endpointId,\n    tokenType,\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    let ownerId;\n    if (accessToken) {\n      this._client.service\n        .platform()\n        .auth()\n        .setData({\n          token_type: tokenType,\n          access_token: accessToken,\n          expires_in: expiresIn,\n          refresh_token_expires_in: expiresIn,\n        });\n      const extensionData = await this._client\n        .account()\n        .extension()\n        .get();\n      ownerId = extensionData.id;\n    }\n    return this._client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n      endpoint_id: endpointId,\n      expires_in: expiresIn,\n      access_token: accessToken,\n      token_type: tokenType,\n      owner_id: ownerId,\n    });\n  }\n\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @param {Boolean} options.implicit\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({\n    redirectUri,\n    state,\n    brandId,\n    display,\n    prompt,\n    force,\n    implicit = false,\n  }) {\n    return `${this._client.service.platform().loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n      implicit,\n    })}${force ? '&force' : ''}`;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout({ dismissAllAlert = true } = {}) {\n    if (dismissAllAlert) {\n      this._alert.dismissAll();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      if (this._tabManager && this._tabManager.ready) {\n        this._tabManager.send(LoginStatusChangeEvent, false);\n      }\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          if (this._tabManager && this._tabManager.ready) {\n            this._tabManager.send(LoginStatusChangeEvent, true);\n          }\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    if (this.isImplicit) {\n      this._client.service.platform()._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n      return null;\n    }\n    return this._client.service.platform().logout();\n  }\n\n  /**\n   * @function\n   * @param {Function} handler\n   * @returns {Function}\n   */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n   * @function\n   * @param {Function} handler\n   */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.delete(handler);\n  }\n\n  addAfterLoggedInHandler(handler) {\n    this._afterLoggedInHandlers.add(handler);\n    return () => {\n      this._afterLoggedInHandlers.delete(handler);\n    };\n  }\n\n  @proxify\n  async refreshImplicitToken({\n    tokenType,\n    accessToken,\n    expiresIn,\n    endpointId,\n  }) {\n    try {\n      const extensionData = await this._client\n        .account()\n        .extension()\n        .get();\n      const ownerId = String(extensionData.id);\n      if (ownerId !== String(this.ownerId)) {\n        return;\n      }\n      const platform = this._client.service.platform();\n      const newAuthData = {\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        endpoint_id: endpointId,\n      };\n      platform.auth().setData(newAuthData);\n      platform.emit(platform.events.refreshSuccess, newAuthData);\n    } catch (error) {\n      console.error('refreshImplicitToken error:', error);\n    }\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.state.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return (\n      this.state.loginStatus === loginStatus.loggedIn ||\n      this.state.loginStatus === loginStatus.beforeLogout\n    );\n  }\n\n  get notLoggedIn() {\n    return this.state.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  get isImplicit() {\n    return !(\n      this._client.service.platform()._appSecret &&\n      this._client.service.platform()._appSecret.length > 0\n    );\n  }\n}\n"],"file":"index.js"}