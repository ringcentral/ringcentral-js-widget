{"version":3,"sources":["modules/Auth/index.ts"],"names":["LoginStatusChangeEvent","Auth","deps","dep","optional","client","alert","brand","locale","tabManager","environment","usePKCE","options","actionTypes","_client","_alert","_brand","_locale","_tabManager","_environment","_beforeLogoutHandlers","_afterLoggedInHandlers","_proxyFrame","_proxyFrameLoaded","_unbindEvents","_lastEnvironmentCounter","_proxyUri","_redirectUri","_usePKCE","_reducer","Set","platform","service","onRequestError","error","Error","message","logout","onLoginSuccess","store","loginSuccess","auth","data","type","token","dispatch","handlers","handler","onLoginError","loginError","onLogoutSuccess","logoutSuccess","onLogoutError","_cache","clean","logoutError","danger","authMessages","payload","onRefreshSuccess","refreshSuccess","onRefreshError","isOffline","resStatus","response","status","refreshTokenValid","refreshError","access_token","sessionExpired","ttl","addListener","events","requestError","removeListener","loggedIn","subscribe","moduleStatuses","pending","ready","init","_bindEvents","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","changeCounter","username","password","extension","remember","code","redirectUri","accessToken","expiresIn","endpointId","tokenType","scope","login","setData","token_type","expires_in","refresh_token_expires_in","account","get","extensionData","ownerId","id","endpoint_id","owner_id","state","brandId","display","prompt","force","implicit","loginUrl","dismissAllAlert","dismissAll","beforeLogout","result","cancelLogout","Promise","reject","console","beforeLogoutError","isImplicit","add","removeBeforeLogoutHandler","String","newAuthData","emit","url","resolve","window","location","href","freshLogin","_clientSecret","length","RcModule","proxify"],"mappings":"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","sourcesContent":["import url from 'url';\n\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport validateIsOffline from '../../lib/validateIsOffline';\nimport actionTypes from './actionTypes';\nimport authMessages from './authMessages';\nimport getAuthReducer from './getAuthReducer';\nimport loginStatus from './loginStatus';\n\nconst LoginStatusChangeEvent = 'loginStatusChange';\n\n/**\n * @class\n * @description Authentication module\n */\n@Module({\n  deps: [\n    'Client',\n    'Alert',\n    'Brand',\n    'Locale',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Environment', optional: true },\n    { dep: 'AuthOptions', optional: true },\n  ],\n})\nexport default class Auth extends RcModule {\n  _client: any;\n  _alert: any;\n  _brand: any;\n  _locale: any;\n  _tabManager: any;\n  _environment: any;\n  _beforeLogoutHandlers: Set<Function>;\n  _afterLoggedInHandlers: Set<() => any>;\n  _proxyFrame: any;\n  _proxyFrameLoaded: boolean;\n  _unbindEvents: any;\n  _lastEnvironmentCounter: number;\n  _proxyUri: any;\n  _redirectUri: string;\n  protected _usePKCE: boolean;\n\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Alert} params.alert - alert module instance\n   * @param {Brand} params.brand - brand module instance\n   * @param {Locale} params.locale - locale module instance\n   * @param {TabManager} params.tabManager - tabManager module instance\n   * @param {environment} params.Environment - environment module instance\n   * @param {String} params.redirectUri - redirect uri\n   * @param {String} params.proxyUri - proxyUri module instance\n   * @param {Number} params.defaultProxyRetry - default proxy retry time 5000\n   */\n  constructor({\n    client,\n    alert,\n    brand,\n    locale,\n    tabManager,\n    environment,\n    usePKCE = false,\n    ...options\n  }: any = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = ensureExist(client, 'client');\n    this._alert = ensureExist(alert, 'alert');\n    this._brand = ensureExist(brand, 'brand');\n    this._locale = ensureExist(locale, 'locale');\n    this._tabManager = tabManager;\n    this._environment = environment;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._usePKCE = usePKCE;\n    this._beforeLogoutHandlers = new Set();\n    this._afterLoggedInHandlers = new Set();\n    this._proxyFrame = null;\n    this._proxyFrameLoaded = false;\n    this._unbindEvents = null;\n    this._lastEnvironmentCounter = 0;\n  }\n\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n\n    const platform = this._client.service.platform();\n    const client = this._client.service._client;\n    const onRequestError = (error) => {\n      if (error instanceof Error && error.message === 'Token revoked') {\n        this.logout();\n      }\n    };\n\n    const onLoginSuccess = async () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: await platform.auth().data(),\n      });\n      const handlers = [...this._afterLoggedInHandlers];\n      for (const handler of handlers) {\n        handler();\n      }\n    };\n    const onLoginError = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n    };\n    const onLogoutSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    };\n    const onLogoutError = (error) => {\n      platform._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    };\n    const onRefreshSuccess = async () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: await platform.auth().data(),\n      });\n    };\n    const onRefreshError = async (error) => {\n      // user is still considered logged in if the refreshToken is still valid\n      const isOffline = validateIsOffline(error.message);\n\n      const resStatus = (error.response && error.response.status) || null;\n      const refreshTokenValid =\n        (isOffline || resStatus >= 500) &&\n        (await platform.auth().refreshTokenValid());\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n\n      if (\n        !refreshTokenValid &&\n        (await platform.auth().data()).access_token !== ''\n      ) {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    client.addListener(client.events.requestError, onRequestError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n      client.removeListener(client.events.requestError, onRequestError);\n    };\n  }\n\n  initialize() {\n    let loggedIn;\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatuses.pending &&\n        this._locale.ready &&\n        (!this._tabManager || this._tabManager.ready) &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this._bindEvents();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? await platform.auth().data() : null,\n        });\n      }\n      if (this._tabManager && this._tabManager.ready && this.ready) {\n        if (\n          (loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n          (!loggedIn && this.loginStatus === loginStatus.loggedIn)\n        ) {\n          loggedIn = !loggedIn;\n          this._tabManager.send(LoginStatusChangeEvent, loggedIn);\n        } else if (\n          this._tabManager.event &&\n          this._tabManager.event.name === LoginStatusChangeEvent &&\n          this._tabManager.event.args[0] !== loggedIn\n        ) {\n          /* eslint { \"prefer-destructuring\": 0 } */\n          loggedIn = this._tabManager.event.args[0];\n          this.store.dispatch({\n            type: this.actionTypes.tabSync,\n            loggedIn,\n            token: loggedIn\n              ? (await this._client.service\n                  .platform()\n                  .auth()\n                  .data())\n              : null,\n          });\n        }\n      }\n      if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindEvents();\n      }\n    });\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get token() {\n    return this.state.token;\n  }\n\n  get ownerId() {\n    return this.token.ownerId;\n  }\n\n  get endpointId() {\n    return this.token.endpointId;\n  }\n\n  get accessToken() {\n    return this.token.accessToken;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({\n    username,\n    password,\n    extension,\n    remember,\n    code,\n    redirectUri,\n    accessToken,\n    expiresIn,\n    endpointId,\n    tokenType,\n    scope,\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    let ownerId;\n    if (accessToken) {\n      await this._client.service\n        .platform()\n        .auth()\n        .setData({\n          token_type: tokenType,\n          access_token: accessToken,\n          expires_in: expiresIn,\n          refresh_token_expires_in: expiresIn,\n          scope,\n        });\n      const extensionData = await this._client\n        .account()\n        .extension()\n        .get();\n      ownerId = extensionData.id;\n    }\n    // TODO: support to set redirectUri in js sdk v4 login function\n    if (!this._client.service.platform()._redirectUri) {\n      this._client.service.platform()._redirectUri = redirectUri;\n    }\n    return this._client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n      endpoint_id: endpointId,\n      expires_in: expiresIn,\n      access_token: accessToken,\n      token_type: tokenType,\n      owner_id: ownerId,\n    });\n  }\n\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @param {Boolean} options.implicit\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({\n    redirectUri,\n    state,\n    brandId,\n    display,\n    prompt,\n    force,\n    implicit = false,\n  }) {\n    // TODO: support to set redirectUri in js sdk v4 login function\n    if (!this._client.service.platform()._redirectUri) {\n      this._client.service.platform()._redirectUri = redirectUri;\n    }\n    return `${this._client.service.platform().loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n      implicit,\n      usePKCE: this.usePKCE,\n    })}${force ? '&force' : ''}`;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout({ dismissAllAlert = true } = {}) {\n    if (dismissAllAlert) {\n      this._alert.dismissAll();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      if (this._tabManager && this._tabManager.ready) {\n        this._tabManager.send(LoginStatusChangeEvent, false);\n      }\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          if (this._tabManager && this._tabManager.ready) {\n            this._tabManager.send(LoginStatusChangeEvent, true);\n          }\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    if (this.isImplicit) {\n      this._client.service.platform()._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n      return null;\n    }\n    return this._client.service.platform().logout();\n  }\n\n  /**\n   * @function\n   * @param {Function} handler\n   * @returns {Function} return that delete handler event, call that will delete that event\n   */\n  addBeforeLogoutHandler(handler: Function): Function {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n   * @function\n   * @param {Function} handler\n   */\n  removeBeforeLogoutHandler(handler: Function) {\n    this._beforeLogoutHandlers.delete(handler);\n  }\n\n  addAfterLoggedInHandler(handler) {\n    this._afterLoggedInHandlers.add(handler);\n    return () => {\n      this._afterLoggedInHandlers.delete(handler);\n    };\n  }\n\n  @proxify\n  async refreshImplicitToken({\n    tokenType,\n    accessToken,\n    expiresIn,\n    endpointId,\n  }) {\n    try {\n      const extensionData = await this._client\n        .account()\n        .extension()\n        .get();\n      const ownerId = String(extensionData.id);\n      if (ownerId !== String(this.ownerId)) {\n        return;\n      }\n      const platform = this._client.service.platform();\n      const newAuthData = {\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        endpoint_id: endpointId,\n      };\n      platform.auth().setData(newAuthData);\n      platform.emit(platform.events.refreshSuccess, newAuthData);\n    } catch (error) {\n      console.error('refreshImplicitToken error:', error);\n    }\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.state.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return (\n      this.state.loginStatus === loginStatus.loggedIn ||\n      this.state.loginStatus === loginStatus.beforeLogout\n    );\n  }\n\n  get notLoggedIn() {\n    return this.state.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  get isImplicit() {\n    return !(\n      this.usePKCE ||\n      (this._client.service.platform()._clientSecret &&\n        this._client.service.platform()._clientSecret.length > 0)\n    );\n  }\n\n  get usePKCE() {\n    return this._usePKCE;\n  }\n}\n"],"file":"index.js"}