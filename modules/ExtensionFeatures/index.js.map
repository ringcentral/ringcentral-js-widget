{"version":3,"sources":["modules/ExtensionFeatures/index.js"],"names":["extractData","res","features","records","forEach","x","id","available","reason","ExtensionFeatures","deps","dep","optional","client","options","subscriptionFilters","extensionInfo","subscriptionHandler","message","_subscriptionHandleFn","fetchFunction","service","platform","get","json","cleanOnReset","body","hints","includes","subscriptionHints","limits","permissions","fetchData","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAMC,QAAQ,GAAG,EAAjB;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAYC,OAAZ,CAAoB,UAACC,CAAD,EAAO;AACzBH,IAAAA,QAAQ,CAACG,CAAC,CAACC,EAAH,CAAR,GAAiB;AACfC,MAAAA,SAAS,EAAEF,CAAC,CAACE;AADE,KAAjB;;AAGA,QAAI,CAACF,CAAC,CAACE,SAAP,EAAkB;AAChBL,MAAAA,QAAQ,CAACG,CAAC,CAACC,EAAH,CAAR,CAAeE,MAAf,GAAwBH,CAAC,CAACG,MAA1B;AACD;AACF,GAPD;AAQA,SAAON,QAAP;AACD;AAED;;;;;;IAOMO,iB,WAHL,gBAAO;AACNC,EAAAA,IAAI,EAAE,CAAC,QAAD,EAAW;AAAEC,IAAAA,GAAG,EAAE,0BAAP;AAAmCC,IAAAA,QAAQ,EAAE;AAA7C,GAAX;AADA,CAAP,C;;;;;AAIC;;;;;AAKA,mCAAoC;AAAA;;AAAA,QAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,QAAXC,OAAW;;AAAA;;AAClC;AACED,MAAAA,MAAM,EAANA,MADF;AAEEE,MAAAA,mBAAmB,EAAE,CAACA,gCAAoBC,aAArB,CAFvB;AAGEC,MAAAA,mBAAmB;AAAA,2FAAE,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACb,MAAKC,qBAAL,CAA2BD,OAA3B,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHrB;AAMQE,MAAAA,aANR,2BAMwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACFP,MAAM,CAACQ,OAAP,CACfC,QADe,GAEfC,GAFe,CAEX,iCAFW,CADE;;AAAA;AACdtB,kBAAAA,GADc;AAAA,oDAIbD,WAAW,CAACC,GAAG,CAACuB,IAAJ,EAAD,CAJE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKrB,OAXH;AAYEC,MAAAA,YAAY,EAAE;AAZhB,OAaKX,OAbL;;AADkC;;AAAA;AAgBnC;;;;;6GAM2BI,O;;;;;sBAExBA,OAAO,IACPA,OAAO,CAACQ,IADR,IAEAR,OAAO,CAACQ,IAAR,CAAaC,KAFb,KAGCT,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBC,QAAnB,CAA4BC,8BAAkBC,MAA9C,KACCZ,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBC,QAAnB,CAA4BC,8BAAkB3B,QAA9C,CADD,IAECgB,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBC,QAAnB,CAA4BC,8BAAkBE,WAA9C,CALF,C;;;;;;uBAOM,KAAKC,SAAL,E;;;;;;;;;;;;;;;;;;wBAbE;AACV,aAAO,mBAAP;AACD;;;;EA1B6BC,wB,oFAyC7BC,kB;;;;;;;WACU,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C;;;eAGE1B,iB","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport { selector } from '../../lib/selector';\nimport subscriptionHints from '../../enums/subscriptionHints';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\n\nfunction extractData(res) {\n  const features = {};\n  res.records.forEach((x) => {\n    features[x.id] = {\n      available: x.available,\n    };\n    if (!x.available) {\n      features[x.id].reason = x.reason;\n    }\n  });\n  return features;\n}\n\n/**\n * @class\n * @description Extension features\n */\n@Module({\n  deps: ['Client', { dep: 'ExtensionFeaturesOptions', optional: true }],\n})\nclass ExtensionFeatures extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, ...options }) {\n    super({\n      client,\n      subscriptionFilters: [subscriptionFilters.extensionInfo],\n      subscriptionHandler: async (message) => {\n        await this._subscriptionHandleFn(message);\n      },\n      async fetchFunction() {\n        const res = await client.service\n          .platform()\n          .get('/account/~/extension/~/features');\n        return extractData(res.json());\n      },\n      cleanOnReset: true,\n      ...options,\n    });\n  }\n\n  get _name() {\n    return 'extensionFeatures';\n  }\n\n  async _subscriptionHandleFn(message) {\n    if (\n      message &&\n      message.body &&\n      message.body.hints &&\n      (message.body.hints.includes(subscriptionHints.limits) ||\n        message.body.hints.includes(subscriptionHints.features) ||\n        message.body.hints.includes(subscriptionHints.permissions))\n    ) {\n      await this.fetchData();\n    }\n  }\n\n  @selector\n  features = [() => this.data, (data) => data || {}];\n}\n\nexport default ExtensionFeatures;\n"],"file":"index.js"}