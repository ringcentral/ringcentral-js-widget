{"version":3,"sources":["integration-test/spec-modules/accountPhoneNumber.js"],"names":["authzProfileBody","require","auth","client","accountPhoneNumber","account","describe","timeout","mock","mockClient","isLoginSuccess","clientHistoryRequest","ClientHistoryRequest","Map","before","restore","mockForLogin","console","error","skip","after","logout","it","retries","expect","numbers","length","equal","Object","keys","extensionToPhoneNumberMap","mockAuthzProfile","authzProfile","permissions","filter","p","permission","id"],"mappings":"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","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, accountPhoneNumber, account) => {\n  describe('AccountPhoneNumber:', () => {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    describe('when there is ReadCompanyPhoneNumbers permission:', () => {\n      before(async function() {\n        mock.restore();\n        mock.mockForLogin();\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error(\n            'Skip test case as failed to login with credential ',\n            account,\n          );\n          this.skip();\n        }\n      });\n\n      after(async () => {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(accountPhoneNumber.numbers.length).equal(2);\n      });\n\n      it('Should get extensionToPhoneNumberMap', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(\n          Object.keys(accountPhoneNumber.extensionToPhoneNumberMap).length,\n        ).equal(2);\n      });\n    });\n\n    describe(\"when there isn't ReadCompanyPhoneNumbers permission:\", () => {\n      before(async function() {\n        mock.restore();\n        mock.mockForLogin({ mockAuthzProfile: false });\n        mock.authzProfile({\n          permissions: authzProfileBody.permissions.filter(\n            (p) => p.permission.id !== 'ReadCompanyPhoneNumbers',\n          ),\n        });\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error(\n            'Skip test case as failed to login with credential ',\n            account,\n          );\n          this.skip();\n        }\n      });\n\n      after(async () => {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should not load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(accountPhoneNumber.numbers.length).equal(0);\n      });\n\n      it('Should not get extensionToPhoneNumberMap', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(\n          Object.keys(accountPhoneNumber.extensionToPhoneNumberMap).length,\n        ).equal(0);\n      });\n    });\n  });\n};\n"],"file":"accountPhoneNumber.js"}