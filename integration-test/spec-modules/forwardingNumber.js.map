{"version":3,"sources":["integration-test/spec-modules/forwardingNumber.js"],"names":["authzProfileBody","require","auth","client","forwardingNumber","account","describe","timeout","mock","mockClient","isLoginSuccess","before","restore","mockForLogin","console","error","skip","after","logout","it","retries","expect","numbers","length","equal","flipNumbers","forwardingNumbers","mockAuthzProfile","authzProfile","permissions","filter","p","permission","id","mockForwardingNumber","mockForbidden","url"],"mappings":"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","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, forwardingNumber, account) => {\n  describe('ForwardingNumber:', () => {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    // const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    describe('When has ReadUserForwardingFlipNumbers permission', () => {\n      before(async () => {\n        mock.restore();\n        mock.mockForLogin();\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error(\n            'Skip test case as failed to login with credential ',\n            account,\n          );\n          this.skip();\n        }\n      });\n\n      after(async () => {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.numbers.length).equal(2);\n      });\n\n      it('Should get flip numbers correctly', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.flipNumbers.length).equal(2);\n      });\n\n      it('Should get forwarding numbers correctly', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.forwardingNumbers.length).equal(1);\n      });\n    });\n\n    describe(\"When doesn't have ReadUserForwardingFlipNumbers permission\", () => {\n      before(async () => {\n        mock.restore();\n        mock.mockForLogin({ mockAuthzProfile: false });\n        mock.authzProfile({\n          permissions: authzProfileBody.permissions.filter(\n            (p) => p.permission.id !== 'ReadUserForwardingFlipNumbers',\n          ),\n        });\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error(\n            'Skip test case as failed to login with credential ',\n            account,\n          );\n          this.skip();\n        }\n      });\n\n      after(async () => {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should not load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.numbers.length).equal(0);\n      });\n\n      it('Should not load flip numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.flipNumbers.length).equal(0);\n      });\n\n      it('Should not load forwarding numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.forwardingNumbers.length).equal(0);\n      });\n    });\n\n    it('Should show insufficientPrivilege when get 403', async () => {\n      mock.restore();\n      mock.mockForLogin({ mockForwardingNumber: false });\n      mock.mockForbidden({\n        url:\n          'begin:http://whatever/restapi/v1.0/account/~/extension/~/forwarding-number',\n      });\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error(\n          'Skip test case as failed to login with credential ',\n          account,\n        );\n        this.skip();\n      }\n      await waitInSeconds(1);\n      expect(forwardingNumber.numbers.length).equal(0);\n      await auth.logout();\n      await waitInSeconds(1);\n    });\n  });\n};\n"],"file":"forwardingNumber.js"}