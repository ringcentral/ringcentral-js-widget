{"version":3,"sources":["integration-test/spec-modules/dialingPlan.js"],"names":["authzProfileBody","require","auth","client","dialingPlan","account","describe","timeout","mock","mockClient","isLoginSuccess","clientHistoryRequest","ClientHistoryRequest","Map","afterEach","logout","it","restore","mockForLogin","console","error","skip","retries","expect","plans","length","equal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;;eAEe,kBAACC,IAAD,EAAOC,MAAP,EAAeC,WAAf,EAA4BC,OAA5B,EAAwC;AACrDC,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7B,IAAA,KAAI,CAACC,OAAL,CAAa,KAAb;;AACAC,IAAAA,IAAI,CAACC,UAAL,CAAgBN,MAAhB;AAEA,QAAIO,cAAJ;AACA,QAAMC,oBAAoB,GAAG,IAAIC,gCAAJ,CAAyB,IAAIC,GAAJ,EAAzB,EAAoCV,MAApC,CAA7B;AAEAW,IAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AACRZ,cAAAA,IAAI,CAACa,MAAL;AADQ;AAAA,8CAEF,6BAAc,CAAd,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,CAAT;AAKAC,IAAAA,EAAE,CAAC,yEAAD,EAA4E;AAAA;AAAA;AAAA;AAAA;AAC5ER,cAAAA,IAAI,CAACS,OAAL;AACAT,cAAAA,IAAI,CAACU,YAAL;AAF4E;AAAA,8CAGrD,2BAAYhB,IAAZ,EAAkBG,OAAlB,CAHqD;;AAAA;AAG5EK,cAAAA,cAH4E;;AAI5E,kBAAI,CAACA,cAAL,EAAqB;AACnBS,gBAAAA,OAAO,CAACC,KAAR,CACE,oDADF,EAEEf,OAFF;;AAIA,gBAAA,KAAI,CAACgB,IAAL;AACD;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa,CAAb;;AAX4E;AAAA,8CAYtE,6BAAc,CAAd,CAZsE;;AAAA;AAa5EC,cAAAA,MAAM,CAACnB,WAAW,CAACoB,KAAZ,CAAkBC,MAAnB,CAAN,CAAiCC,KAAjC,CAAuC,CAAvC;;AAb4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5E,CAAF;AAeD,GA3BO,CAAR;AA4BD,C","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, dialingPlan, account) => {\n  describe('DialingPlan:', () => {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    afterEach(async () => {\n      auth.logout();\n      await waitInSeconds(1);\n    });\n\n    it('Should load availableExtensions when there is ReadExtensions permission', async () => {\n      mock.restore();\n      mock.mockForLogin();\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error(\n          'Skip test case as failed to login with credential ',\n          account,\n        );\n        this.skip();\n      }\n      this.retries(2);\n      await waitInSeconds(1);\n      expect(dialingPlan.plans.length).equal(3);\n    });\n  });\n};\n"],"file":"dialingPlan.js"}