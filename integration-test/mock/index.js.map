{"version":3,"sources":["integration-test/mock/index.js"],"names":["mockServer","createSDK","options","opts","clientId","clientSecret","server","Request","fetchMock","constructor","Response","Headers","fetch","bind","refreshDelayMs","redirectUri","cachePrefix","clearCacheOnRefreshError","SDK","mockApi","method","path","url","body","status","statusText","headers","isOnce","responseHeaders","isJson","mockUrl","mock","once","JSON","stringify","sendAsJson","times","authentication","access_token","token_type","expires_in","refresh_token","refresh_token_expires_in","scope","expireTime","Date","getTime","owner_id","endpoint_id","logout","tokenRefresh","failure","message","error_description","description","presence","id","mockResponse","uri","extension","extensionNumber","activeCalls","presenceStatus","telephonyStatus","userStatus","dndStatus","extensionId","presenceUpdate","presenceBody","dialingPlan","dialingPlanBody","extensionInfo","extensionBody","conferenceCallBringIn","conferenceCallBringInBody","removeFromConference","partyId","extensionList","extensionListBody","companyContactList","extensionsListBody","accountInfo","accountBody","apiInfo","apiInfoBody","messageSync","messageSyncBody","messageList","messageListBody","updateMessageStatus","messageItemBody","authzProfile","authzProfileBody","blockedNumber","blockedNumberBody","forwardingNumber","forwardingNumberBody","phoneNumber","phoneNumberBody","accountPhoneNumber","accountPhoneNumberBody","subscription","subscriptionBody","numberParser","numberParserBody","sms","smsBody","addressBook","addressBookBody","syncInfo","syncType","syncToken","syncTime","now","toISOString","callLog","callLogBody","records","startTime","userSettings","userSettingsBody","lockedSettings","lockedSettingsBody","assistedUsers","assistedUsersBody","device","deviceBody","conferencing","conferencingBody","numberParse","homeCountry","numberParseBody","conferenceCall","conferenceCallBody","session","on","updateConferenceCall","terminateConferenceCall","activeCallsBody","sipProvision","sipProvisionBody","fetchDL","fetchDLBody","fetchDLWithNoRecord","fetchDLWithNoRecordBody","restore","reset","mockForbidden","mockLimited","errorCode","errors","mockClient","client","service","ringOut","ringOutBody","ringOutUpdate","meeting","extra","meetingBody","meetingInvitation","meetingId","meetingInvitationBody","meetingInfo","videoPreference","query","RCV_PREFERENCES_API_KEYS","join","meetingPreferenceBody","serviceInfo","serviceInfoBody","meetingProvider","meetingProviderRcm","meetingProviderRcmBody","meetingProviderRcv","meetingProviderRcvBody","recentActivity","RegExp","videoConfiguration","videoConfigurationBody","callerId","callerIdBody","features","featuresBody","timezone","timezoneBody","mockForLogin","mockAuthzProfile","mockExtensionInfo","mockForwardingNumber","mockMessageSync","mockConferencing","mockActiveCalls","mockUpdateConference","mockNumberParser","mockRecentActivity","mockMessageSyncOnce","mockVideoConfiguration","mockUserSetting","params","dialingPlanData","extensionInfoData","accountInfoData","apiInfoData","authzProfileData","deviceData","extensionListData","extensionsListData","blockedNumberData","forwardingNumberData","messageListData","messageSyncData","phoneNumberData","callerIdData","subscriptionData","callLogData","addressBookData","sipProvisionData","fetchDLData","conferencingData","activeCallsData","numberParseData","numberParseIsOnce","updateConferenceCallBody","userSettingsData","lockedSettingsData","featuresData","mockAssistedUsers"],"mappings":"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","sourcesContent":["import { SDK } from '@ringcentral/sdk';\nimport fetchMock from 'fetch-mock';\nimport { RCV_PREFERENCES_API_KEYS } from '../../modules/RcVideo/videoHelper';\nimport accountBody from './data/accountInfo.json';\nimport accountPhoneNumberBody from './data/accountPhoneNumber.json';\nimport activeCallsBody from './data/activeCalls.json';\nimport addressBookBody from './data/addressBook.json';\nimport apiInfoBody from './data/apiInfo.json';\nimport authzProfileBody from './data/authzProfile.json';\nimport blockedNumberBody from './data/blockedNumber.json';\nimport callerIdBody from './data/callerId.json';\nimport callLogBody from './data/callLog.json';\nimport conferenceCallBody from './data/conferenceCall.json';\nimport conferenceCallBringInBody from './data/conferenceCallBringIn.json';\nimport conferencingBody from './data/conferencing.json';\nimport deviceBody from './data/device.json';\nimport dialingPlanBody from './data/dialingPlan.json';\nimport extensionListBody from './data/extension.json';\nimport extensionBody from './data/extensionInfo.json';\nimport extensionsListBody from './data/extensions.json';\nimport fetchDLBody from './data/fetchDL.json';\nimport fetchDLWithNoRecordBody from './data/fetchDLWithNoRecord.json';\nimport forwardingNumberBody from './data/forwardingNumber.json';\nimport lockedSettingsBody from './data/lockedSettings.json';\nimport meetingBody from './data/meeting.json';\nimport meetingInvitationBody from './data/meetingInvitation.json';\nimport assistedUsersBody from './data/assistedUsers.json';\nimport meetingProviderRcmBody from './data/meetingProviderRcm.json';\nimport meetingProviderRcvBody from './data/meetingProviderRcv.json';\nimport messageItemBody from './data/messageItem.json';\nimport messageListBody from './data/messageList.json';\nimport messageSyncBody from './data/messageSync.json';\nimport numberParseBody from './data/numberParse.json';\nimport numberParserBody from './data/numberParser.json';\nimport phoneNumberBody from './data/phoneNumber.json';\nimport presenceBody from './data/presence.json';\nimport ringOutBody from './data/ringOut.json';\nimport serviceInfoBody from './data/serviceInfo.json';\nimport sipProvisionBody from './data/sipProvision.json';\nimport smsBody from './data/sms.json';\nimport subscriptionBody from './data/subscription.json';\nimport timezoneBody from './data/timezone.json';\nimport updateConferenceCallBody from './data/updateConference.json';\nimport userSettingsBody from './data/userSettings.json';\nimport videoConfigurationBody from './data/videoConfiguration.json';\nimport meetingPreferenceBody from './data/videoPreference.json';\nimport featuresBody from './data/features.json';\n\nexport const mockServer = 'http://whatever';\nexport function createSDK(options = {}) {\n  const opts = {\n    clientId: 'test key',\n    clientSecret: 'test secret',\n    server: mockServer,\n    Request: fetchMock.constructor.Request,\n    Response: fetchMock.constructor.Response,\n    Headers: fetchMock.constructor.Headers,\n    fetch: fetchMock.fetchMock.bind(fetchMock),\n    refreshDelayMs: 1,\n    redirectUri: 'http://foo',\n    cachePrefix: 'sdkPrefix',\n    clearCacheOnRefreshError: false,\n    ...options,\n  };\n  return new SDK(opts);\n}\n\nexport function mockApi({\n  method = 'GET',\n  path,\n  server = mockServer,\n  url,\n  body = {},\n  status = 200,\n  statusText = 'OK',\n  headers,\n  isOnce = true,\n}) {\n  let responseHeaders;\n  const isJson = typeof body !== 'string';\n  if (isJson && !headers) {\n    responseHeaders = {\n      'Content-Type': 'application/json',\n    };\n  } else {\n    responseHeaders = headers;\n  }\n  let mockUrl;\n  if (url) {\n    mockUrl = url;\n  } else {\n    mockUrl = `${server}${path}`;\n  }\n  const mock = isOnce\n    ? fetchMock.once.bind(fetchMock)\n    : fetchMock.mock.bind(fetchMock);\n  mock(\n    mockUrl,\n    {\n      body: isJson ? JSON.stringify(body) : body,\n      status,\n      statusText,\n      headers: responseHeaders,\n      sendAsJson: false,\n    },\n    {\n      method,\n      times: isOnce ? 1 : 20,\n    },\n  );\n}\n\nexport function authentication() {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/token',\n    body: {\n      access_token: 'ACCESS_TOKEN',\n      token_type: 'bearer',\n      expires_in: 3600,\n      refresh_token: 'REFRESH_TOKEN',\n      refresh_token_expires_in: 60480,\n      scope: 'SMS RCM Foo Boo',\n      expireTime: new Date().getTime() + 3600000,\n      owner_id: '23231231\"',\n      endpoint_id: '3213213131',\n    },\n  });\n}\n\nexport function logout() {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/revoke',\n    isOnce: false,\n  });\n}\n\nexport function tokenRefresh(failure) {\n  if (!failure) {\n    mockApi({\n      method: 'POST',\n      path: '/restapi/oauth/token',\n      body: {\n        access_token: 'ACCESS_TOKEN_FROM_REFRESH',\n        token_type: 'bearer',\n        expires_in: 3600,\n        refresh_token: 'REFRESH_TOKEN_FROM_REFRESH',\n        refresh_token_expires_in: 60480,\n        scope: 'SMS RCM Foo Boo',\n      },\n    });\n  } else {\n    mockApi({\n      method: 'POST',\n      path: '/restapi/oauth/token',\n      body: {\n        message: 'Wrong token',\n        error_description: 'Wrong token',\n        description: 'Wrong token',\n      },\n      status: 400,\n    });\n  }\n}\n\nexport function presence(id, mockResponse = {}, isOnce = false) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/${id}/presence`,\n    body: {\n      uri: `https://platform.ringcentral.com/restapi/v1.0/account/123/extension/${id}/presence`,\n      extension: {\n        uri: `https://platform.ringcentral.com/restapi/v1.0/account/123/extension/${id}`,\n        extensionNumber: '101',\n        id,\n      },\n      activeCalls: [],\n      presenceStatus: 'Available',\n      telephonyStatus: 'Ringing',\n      userStatus: 'Available',\n      dndStatus: 'TakeAllCalls',\n      extensionId: id,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function presenceUpdate(id, mockResponse = {}) {\n  mockApi({\n    path: `/restapi/v1.0/account/~/extension/${id}/presence`,\n    method: 'PUT',\n    body: {\n      ...presenceBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function dialingPlan(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/dialing-plan?perPage=MAX&page=1',\n    body: {\n      ...dialingPlanBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function extensionInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~',\n    body: {\n      ...extensionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function conferenceCallBringIn(id, mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}/parties/bring-in`,\n    body: {\n      ...conferenceCallBringInBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function removeFromConference(id, partyId) {\n  mockApi({\n    method: 'DELETE',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}/parties/${partyId}`,\n  });\n}\n\nexport function extensionList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension?`,\n    body: {\n      ...extensionListBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function companyContactList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/directory/contacts?`,\n    body: {\n      ...extensionsListBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function accountInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~',\n    body: {\n      ...accountBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function apiInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0',\n    body: {\n      ...apiInfoBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function messageSync(mockResponse = {}, isOnce = false) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-sync`,\n    body: {\n      ...messageSyncBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function messageList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-store?`,\n    body: {\n      ...messageListBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function updateMessageStatus(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-store/`,\n    method: 'PUT',\n    body: {\n      ...messageItemBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function authzProfile(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/authz-profile',\n    body: {\n      ...authzProfileBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function blockedNumber(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/blocked-number',\n    body: {\n      ...blockedNumberBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function forwardingNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/forwarding-number`,\n    body: {\n      ...forwardingNumberBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function phoneNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/phone-number`,\n    body: {\n      ...phoneNumberBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function accountPhoneNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/phone-number`,\n    body: {\n      ...accountPhoneNumberBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function subscription(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n  mockApi({\n    method: 'PUT',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n  mockApi({\n    method: 'DELETE',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function numberParser(mockResponse = {}, isOnce = true) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/number-parser/`,\n    body: {\n      ...numberParserBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function sms(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/v1.0/account/~/extension/~/sms',\n    body: {\n      ...smsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function addressBook(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/address-book-sync`,\n    body: {\n      ...addressBookBody,\n      ...{\n        syncInfo: {\n          syncType: addressBookBody.syncInfo.syncType,\n          syncToken: addressBookBody.syncInfo.syncToken,\n          syncTime: new Date(Date.now()).toISOString(),\n        },\n      },\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function callLog(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/call-log-sync`,\n    body: {\n      ...callLogBody,\n      records: [\n        {\n          ...callLogBody.records[0],\n          startTime: new Date(Date.now()).toISOString(),\n        },\n        {\n          ...callLogBody.records[1],\n          startTime: new Date(Date.now()).toISOString(),\n        },\n      ],\n      ...{\n        syncInfo: {\n          syncType: callLogBody.syncInfo.syncType,\n          syncToken: callLogBody.syncInfo.syncToken,\n          syncTime: new Date(Date.now()).toISOString(),\n        },\n      },\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function userSettings(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/user-settings`,\n    body: {\n      ...userSettingsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function lockedSettings(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/meeting/locked-settings`,\n    body: {\n      ...lockedSettingsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function assistedUsers(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meetings-configuration/assisted`,\n    body: mockResponse || assistedUsersBody,\n  });\n}\n\nexport function device(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...deviceBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function conferencing(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/conferencing',\n    body: {\n      ...conferencingBody,\n      ...mockResponse,\n    },\n  });\n}\n\n// TODO: replace it with numberParser\nexport function numberParse(mockResponse = {}, homeCountry) {\n  mockApi({\n    method: 'POST',\n    path: `/restapi/v1.0/number-parser/parse?homeCountry=${homeCountry}`,\n    body: {\n      ...numberParseBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function conferenceCall(mockResponse = {}) {\n  conferenceCallBody.session.on = () => {};\n  mockApi({\n    method: 'POST',\n    path: '/restapi/v1.0/account/~/telephony/conference',\n    body: {\n      ...conferenceCallBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function updateConferenceCall(id, mockResponse = {}, isOnce = false) {\n  mockApi({\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}`,\n    body: {\n      // ...conferenceCallBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function terminateConferenceCall(id, mockResponse = {}) {\n  mockApi({\n    method: 'DELETE',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}`,\n    body: {\n      ...conferenceCallBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function activeCalls(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/active-calls`,\n    body: {\n      ...activeCallsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function sipProvision(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/client-info/sip-provision`,\n    body: {\n      ...sipProvisionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function fetchDL(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...fetchDLBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function fetchDLWithNoRecord(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...fetchDLWithNoRecordBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function restore() {\n  fetchMock.restore();\n}\n\nexport function reset() {\n  fetchMock.reset();\n}\n\nexport function mockForbidden({ method = 'GET', path, url, body = '' }) {\n  mockApi({\n    method,\n    path,\n    body,\n    url,\n    status: 403,\n  });\n}\n\nexport function mockLimited({ method = 'GET', path, url, headers }) {\n  mockApi({\n    method,\n    path,\n    url,\n    status: 503,\n    headers,\n    body: {\n      status: 503,\n      errorCode: 'CMN-211',\n      errors: [{ errorCode: 'CMN-211' }],\n    },\n  });\n}\n\nexport function mockClient(client, options = {}) {\n  client.service = createSDK(options);\n}\n\nexport function ringOut(mockResponse = {}) {\n  mockApi({\n    isOnce: false,\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/ring-out`,\n    body: {\n      ...ringOutBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function ringOutUpdate(mockResponse = {}) {\n  mockApi({\n    isOnce: false,\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/ring-out/`,\n    body: {\n      ...ringOutBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function meeting(mockResponse = {}, extra = {}) {\n  mockApi({\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting`,\n    body: {\n      ...meetingBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n    ...extra,\n  });\n}\n\nexport function meetingInvitation(meetingId = null, mockResponse = {}) {\n  const id = meetingId || meetingBody.id;\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/${id}/invitation`,\n    body: {\n      ...meetingInvitationBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function meetingInfo(\n  meetingId = null,\n  mockResponse = {},\n  isOnce = false,\n) {\n  const id = meetingId || meetingBody.id;\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/${id}`,\n    body: {\n      ...meetingBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function videoPreference() {\n  const query = `id=${RCV_PREFERENCES_API_KEYS.join('&id=')}`;\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/rcvideo/v1/account/~/extension/~/preferences?${query}`,\n    body: meetingPreferenceBody,\n    isOnce: false,\n  });\n}\n\nexport function serviceInfo(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/service-info`,\n    body: {\n      ...serviceInfoBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function meetingProvider(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/video-configuration`,\n    body: {\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function meetingProviderRcm() {\n  meetingProvider(meetingProviderRcmBody);\n}\n\nexport function meetingProviderRcv() {\n  meetingProvider(meetingProviderRcvBody);\n}\n\nexport function recentActivity(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/call-log`,\n    ),\n    body: {\n      ...callLogBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function videoConfiguration(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/video-configuration`,\n    ),\n    body: {\n      ...videoConfigurationBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function callerId(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/caller-id`,\n    ),\n    body: {\n      ...callerIdBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function features(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/features`,\n    ),\n    body: {\n      ...featuresBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function timezone(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/dictionary/timezone`,\n    body: {\n      ...timezoneBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function mockForLogin({\n  mockAuthzProfile = true,\n  mockExtensionInfo = true,\n  mockForwardingNumber = true,\n  mockMessageSync = true,\n  mockConferencing = true,\n  mockActiveCalls = true,\n  mockUpdateConference = true,\n  mockNumberParser = true,\n  mockRecentActivity = true,\n  mockMessageSyncOnce = false,\n  mockVideoConfiguration = true,\n  mockUserSetting = true,\n  ...params\n} = {}) {\n  authentication();\n  logout();\n  tokenRefresh();\n  presence('~');\n  dialingPlan(params.dialingPlanData);\n  if (mockExtensionInfo) {\n    extensionInfo(params.extensionInfoData);\n  }\n  accountInfo(params.accountInfoData);\n  apiInfo(params.apiInfoData);\n  if (mockAuthzProfile) {\n    authzProfile(params.authzProfileData);\n  }\n  device(params.deviceData);\n  extensionList(params.extensionListData);\n  companyContactList(params.extensionsListData);\n  // accountPhoneNumber(params.accountPhoneNumberData);\n  blockedNumber(params.blockedNumberData);\n  if (mockForwardingNumber) {\n    forwardingNumber(params.forwardingNumberData);\n  }\n  messageList(params.messageListData);\n\n  if (mockMessageSync) {\n    messageSync(params.messageSyncData, mockMessageSyncOnce);\n  }\n  phoneNumber(params.phoneNumberData);\n  callerId(params.callerIdData);\n  subscription(params.subscriptionData);\n  callLog(params.callLogData);\n  addressBook(params.addressBookData);\n  sipProvision(params.sipProvisionData);\n  fetchDL(params.fetchDLData);\n  if (mockConferencing) {\n    conferencing(params.conferencingData);\n  }\n  if (mockActiveCalls) {\n    activeCalls(params.activeCallsData);\n  }\n  if (mockNumberParser) {\n    numberParser(params.numberParseData, params.numberParseIsOnce);\n  }\n  if (mockUpdateConference) {\n    conferenceCall();\n    updateConferenceCall(updateConferenceCallBody.id, updateConferenceCallBody);\n  }\n  if (mockRecentActivity) {\n    recentActivity();\n  }\n  if (mockVideoConfiguration) {\n    videoConfiguration();\n  }\n  videoPreference();\n  if (mockUserSetting) {\n    userSettings(params.userSettingsData);\n  }\n  lockedSettings(params.lockedSettingsData);\n  features(params.featuresData);\n  assistedUsers(params.mockAssistedUsers);\n}\n"],"file":"index.js"}