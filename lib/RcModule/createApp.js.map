{"version":3,"sources":["lib/RcModule/createApp.ts"],"names":["createApp","main","modules","reduxEnhancer","Object","values","strict","undefined","handleReducers","reducers","entries","forEach","key","module","RcModuleV2","spawnStorageReducersKey","storage","assign","reducer","globalStorage","_initModule","then"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACO,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAQnB;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,0BANJC,OAMI;AAAA,MANJA,OAMI,6BANM,EAMN;AAAA,MALJC,aAKI,QALJA,aAKI;AACJ,6BACE;AACED,IAAAA,OAAO,+BAAME,MAAM,CAACC,MAAP,CAAcH,OAAd,CAAN,IAA8BD,IAA9B,EADT;AAEE;AACAK,IAAAA,MAAM,EAAE;AAHV,GADF,EAMEC,SANF,EAOE;AACEJ,IAAAA,aAAa,EAAbA,aADF;AAEEK,IAAAA,cAAc,EAAE,wBAACC,QAAD,EAAiC;AAC/CL,MAAAA,MAAM,CAACM,OAAP,CAAeR,OAAf,EAAwBS,OAAxB,CAAgC,iBAAmB;AAAA;AAAA,YAAjBC,GAAiB;AAAA,YAAZC,MAAY;;AACjD,YACED,GAAG,KAAK,SAAR,IACAA,GAAG,KAAK,eADR,IAEAC,MAAM,YAAYC,oBAHpB,EAIE;AACAD,UAAAA,MAAM,CAACE,iCAAD,CAAN;AACD;AACF,OARD;;AASA,UAAIb,OAAO,CAACc,OAAZ,EAAqB;AACnBZ,QAAAA,MAAM,CAACa,MAAP,CAAcR,QAAd,EAAwB;AACtBO,UAAAA,OAAO,EAAEd,OAAO,CAACc,OAAR,CAAgBE;AADH,SAAxB;AAGD;;AACD,UAAIhB,OAAO,CAACiB,aAAZ,EAA2B;AACzBf,QAAAA,MAAM,CAACa,MAAP,CAAcR,QAAd,EAAwB;AACtBU,UAAAA,aAAa,EAAEjB,OAAO,CAACiB,aAAR,CAAsBD;AADf,SAAxB;AAGD;;AACD,aAAO,4BAAgBT,QAAhB,CAAP;AACD;AAvBH,GAPF;;AAiCAR,EAAAA,IAAI,CAACmB,WAAL,GAAmBC,IAAnB,CAAwB,YAAM;AAC5B;AACAjB,IAAAA,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuBS,OAAvB,CAA+B,UAACE,MAAD;AAAA;;AAAA,aAAYA,MAAZ,aAAYA,MAAZ,8CAAYA,MAAM,CAAEO,WAApB,wDAAY,yBAAAP,MAAM,CAAlB;AAAA,KAA/B;AACD,GAHD;;AAIA,SAAOZ,IAAP;AACD,CA/CM","sourcesContent":["import { combineReducers, ReducersMapObject, StoreEnhancer } from 'redux';\nimport { createStore, RcModuleV2, spawnStorageReducersKey } from './RcModule';\n\n/**\n * Create app with FactoryModule based on RcModuleV2.\n * !! Please ensure that all dependency injection modules are based on the RcModuleV2 module.\n */\nexport const createApp = ({\n  main,\n  modules = {},\n  reduxEnhancer,\n}: {\n  main: RcModuleV2;\n  modules?: Record<string, RcModuleV2>;\n  reduxEnhancer?: StoreEnhancer;\n}) => {\n  createStore(\n    {\n      modules: [...Object.values(modules), main],\n      // disable AutoFreeze\n      strict: false,\n    },\n    undefined,\n    {\n      reduxEnhancer,\n      handleReducers: (reducers: ReducersMapObject) => {\n        Object.entries(modules).forEach(([key, module]) => {\n          if (\n            key !== 'storage' &&\n            key !== 'globalStorage' &&\n            module instanceof RcModuleV2\n          ) {\n            module[spawnStorageReducersKey]();\n          }\n        });\n        if (modules.storage) {\n          Object.assign(reducers, {\n            storage: modules.storage.reducer,\n          });\n        }\n        if (modules.globalStorage) {\n          Object.assign(reducers, {\n            globalStorage: modules.globalStorage.reducer,\n          });\n        }\n        return combineReducers(reducers);\n      },\n    },\n  );\n  main._initModule().then(() => {\n    // For scenarios without dependency injection\n    Object.values(modules).forEach((module) => module?._initModule?.());\n  });\n  return main;\n};\n"],"file":"createApp.js"}