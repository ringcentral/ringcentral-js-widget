{"version":3,"sources":["lib/proxy/getProxyServer.js"],"names":["defaultVerifyModuleFunc","module","RcModule","getProxyServer","createTarget","verifyModuleFunc","transport","options","actionTypes","baseActionTypes","_target","_getState","state","target","subModule","Object","prototype","hasOwnProperty","defineProperty","configurable","enumerable","get","_transport","ensureExist","_reducer","moduleReducer","reducer","prefix","on","events","request","requestId","payload","type","functionPath","args","actionNumber","execute","sync","split","slice","pathTokens","fnName","pop","forEach","token","result","response","error","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD;AAAA,SAAYA,MAAM,YAAYC,qBAA9B;AAAA,CAAhC;;AAEe,SAASC,cAAT,CACbC,YADa,EAGb;AAAA,MADAC,gBACA,uEADmBL,uBACnB;AACA;AAAA;AAAA;AAAA;;AACE,4BAAuC;AAAA;;AAAA;;AAAA,YAAzBM,SAAyB,QAAzBA,SAAyB;AAAA,YAAXC,OAAW;;AAAA;;AACrC,sGACKA,OADL;AAEEC,UAAAA,WAAW,EAAEC;AAFf;AAIA,cAAKC,OAAL,GAAeN,YAAY,mBACtBG,OADsB,EAA3B;;AAGA,cAAKG,OAAL,CAAaC,SAAb,GAAyB;AAAA,iBAAM,MAAKC,KAAL,CAAWC,MAAjB;AAAA,SAAzB;;AARqC,mCAS1BC,SAT0B;AAAA;;AAUnC,cACE,mBAAKJ,OAAL,EAAcK,MAAM,CAACC,SAAP,CAAiBC,cAA/B,kBAA8CH,SAA9C,KACAT,gBAAgB,CAAC,MAAKK,OAAL,CAAaI,SAAb,CAAD,CAFlB,EAGE;AACAC,YAAAA,MAAM,CAACG,cAAP,gCAA4BJ,SAA5B,EAAuC;AACrCK,cAAAA,YAAY,EAAE,KADuB;AAErCC,cAAAA,UAAU,EAAE,IAFyB;AAGrCC,cAAAA,GAHqC,iBAG/B;AACJ,uBAAO,KAAKX,OAAL,CAAaI,SAAb,CAAP;AACD;AALoC,aAAvC;AAOD;AArBkC;;AASrC,aAAK,IAAMA,SAAX,IAAwB,MAAKJ,OAA7B,EAAsC;AAAA,gBAA3BI,SAA2B;AAarC;;AAED,cAAKQ,UAAL,GAAkB,2CAAMC,uBAAN,iBAAkBjB,SAAlB,EAA6B,WAA7B,CAAlB;AACA,cAAKkB,QAAL,GAAgB,uCAAsB;AACpCC,UAAAA,aAAa,EAAE,MAAKf,OAAL,CAAagB,OADQ;AAEpCpB,UAAAA,SAAS,EAATA,SAFoC;AAGpCqB,UAAAA,MAAM,EAAE,MAAKA;AAHuB,SAAtB,CAAhB;AAMArB,QAAAA,SAAS,CAACsB,EAAV,CACEtB,SAAS,CAACuB,MAAV,CAAiBC,OADnB,EAEE;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,kBAAAA,SADF,SACEA,SADF,wBAEEC,OAFF,EAEaC,IAFb,iBAEaA,IAFb,EAEmBC,YAFnB,iBAEmBA,YAFnB,EAEiCC,IAFjC,iBAEiCA,IAFjC,EAEuCC,YAFvC,iBAEuCA,YAFvC;AAAA,iCAIUH,IAJV;AAAA,oDAKS,MAAKzB,WAAL,CAAiB6B,OAL1B,wBA2BS,MAAK7B,WAAL,CAAiB8B,IA3B1B;AAAA;;AAAA;AAAA,0CAOgCJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwBC,KAAxB,CAA8B,CAA9B,CAPhC,4DAOkBC,UAPlB;AAQcC,kBAAAA,MARd,GAQuBD,UAAU,CAACE,GAAX,EARvB;AASY9B,kBAAAA,MATZ,GASqB,MAAKH,OAT1B;AAUQ+B,kBAAAA,UAAU,CAACG,OAAX,CAAmB,UAACC,KAAD,EAAW;AAC5BhC,oBAAAA,MAAM,GAAGA,MAAM,CAACgC,KAAD,CAAf;AACD,mBAFD;AAVR;AAAA;AAAA,kDAc+B,WAAAhC,MAAM,EAAC6B,MAAD,CAAN,mCAAkBP,IAAlB,EAd/B;;AAAA;AAcgBW,kBAAAA,MAdhB;AAeUxC,kBAAAA,SAAS,CAACyC,QAAV,CAAmB;AACjBhB,oBAAAA,SAAS,EAATA,SADiB;AAEjBe,oBAAAA,MAAM,EAANA;AAFiB,mBAAnB;AAfV;AAAA;;AAAA;AAAA;AAAA;AAoBUxC,kBAAAA,SAAS,CAACyC,QAAV,CAAmB;AACjBhB,oBAAAA,SAAS,EAATA,SADiB;AAEjBiB,oBAAAA,KAAK;AAFY,mBAAnB;;AApBV;AAAA;;AAAA;AA4BM,sBAAIZ,YAAY,KAAK,MAAKxB,KAAL,CAAWwB,YAAhC,EAA8C;AAC5C9B,oBAAAA,SAAS,CAACyC,QAAV,CAAmB;AACjBhB,sBAAAA,SAAS,EAATA,SADiB;AAEjBe,sBAAAA,MAAM,EAAE,MAAKlC;AAFI,qBAAnB;AAID,mBALD,MAKO;AACLN,oBAAAA,SAAS,CAACyC,QAAV,CAAmB;AACjBhB,sBAAAA,SAAS,EAATA,SADiB;AAEjBiB,sBAAAA,KAAK,EAAE,IAAIC,KAAJ,CAAU,8BAAV;AAFU,qBAAnB;AAID;;AAtCP;;AAAA;AA0CM3C,kBAAAA,SAAS,CAACyC,QAAV,CAAmB;AACjBhB,oBAAAA,SAAS,EAATA,SADiB;AAEjBiB,oBAAAA,KAAK,EAAE,IAAIC,KAAJ,iCAAmChB,IAAnC;AAFU,mBAAnB;AA1CN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF;AA/BqC;AAmFtC;;AApFH;AAAA,MAAqB/B,qBAArB;AAAA;AAsFD","sourcesContent":["import RcModule from '../RcModule';\nimport baseActionTypes from './baseActionTypes';\nimport getProxyServerReducer from './getProxyServerReducer';\nimport ensureExist from '../ensureExist';\n\nconst defaultVerifyModuleFunc = (module) => module instanceof RcModule;\n\nexport default function getProxyServer(\n  createTarget,\n  verifyModuleFunc = defaultVerifyModuleFunc,\n) {\n  return class extends RcModule {\n    constructor({ transport, ...options }) {\n      super({\n        ...options,\n        actionTypes: baseActionTypes,\n      });\n      this._target = createTarget({\n        ...options,\n      });\n      this._target._getState = () => this.state.target;\n      for (const subModule in this._target) {\n        if (\n          this._target::Object.prototype.hasOwnProperty(subModule) &&\n          verifyModuleFunc(this._target[subModule])\n        ) {\n          Object.defineProperty(this, subModule, {\n            configurable: false,\n            enumerable: true,\n            get() {\n              return this._target[subModule];\n            },\n          });\n        }\n      }\n\n      this._transport = this::ensureExist(transport, 'transport');\n      this._reducer = getProxyServerReducer({\n        moduleReducer: this._target.reducer,\n        transport,\n        prefix: this.prefix,\n      });\n\n      transport.on(\n        transport.events.request,\n        async ({\n          requestId,\n          payload: { type, functionPath, args, actionNumber },\n        }) => {\n          switch (type) {\n            case this.actionTypes.execute:\n              {\n                const [...pathTokens] = functionPath.split('.').slice(1);\n                const fnName = pathTokens.pop();\n                let target = this._target;\n                pathTokens.forEach((token) => {\n                  target = target[token];\n                });\n                try {\n                  const result = await target[fnName](...args);\n                  transport.response({\n                    requestId,\n                    result,\n                  });\n                } catch (error) {\n                  transport.response({\n                    requestId,\n                    error,\n                  });\n                }\n              }\n              break;\n            case this.actionTypes.sync: {\n              if (actionNumber !== this.state.actionNumber) {\n                transport.response({\n                  requestId,\n                  result: this.state,\n                });\n              } else {\n                transport.response({\n                  requestId,\n                  error: new Error('State is already up to date.'),\n                });\n              }\n              break;\n            }\n            default:\n              transport.response({\n                requestId,\n                error: new Error(`Invalid request type '${type}'.`),\n              });\n              break;\n          }\n        },\n      );\n    }\n  };\n}\n"],"file":"getProxyServer.js"}