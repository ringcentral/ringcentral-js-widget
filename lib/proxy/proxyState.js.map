{"version":3,"sources":["lib/proxy/proxyState.ts"],"names":["proxyState","callback","target","key","descriptor","__proxyState__"],"mappings":";;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CACxBC,QADwB;AAAA,SAErB,UACHC,MADG,EAEHC,GAFG,EAGHC,UAHG,EAIK;AACR,QAAIF,MAAM,CAACG,cAAX,EAA2B;AACzBH,MAAAA,MAAM,CAACG,cAAP,CAAsBF,GAAtB,IAA6BF,QAA7B;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,CAACG,cAAP,uBACGF,GADH,EACSF,QADT;AAGD;;AACD,WAAOG,UAAP;AACD,GAfyB;AAAA,CAAnB","sourcesContent":["import { RcModuleV2 } from '@ringcentral-integration/core';\n\n/**\n * proxy state for client's async state changes\n *\n * @param callback it should be a async function, and run in a reducer.\n */\nexport const proxyState = <T extends RcModuleV2>(\n  callback: (module: T, state: any) => Promise<any>,\n) => (\n  target: RcModuleV2,\n  key: string,\n  descriptor?: TypedPropertyDescriptor<any>,\n): any => {\n  if (target.__proxyState__) {\n    target.__proxyState__[key] = callback;\n  } else {\n    target.__proxyState__ = {\n      [key]: callback,\n    };\n  }\n  return descriptor;\n};\n"],"file":"proxyState.js"}