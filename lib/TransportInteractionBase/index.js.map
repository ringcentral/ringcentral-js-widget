{"version":3,"sources":["lib/TransportInteractionBase/index.js"],"names":["TransportInteractionBase","_transportEvents","key","func","Error","events","registerTransportEvent","requestId","fetchFunc","res","_transport","response","result","error","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAAqBA,wB;;;AACnB,sCAAc;AAAA;;AACZ,SAAKC,gBAAL,GAAwB,EAAxB;AACD;;;;iDAEqC;AAAA,UAAbC,GAAa,QAAbA,GAAa;AAAA,UAARC,IAAQ,QAARA,IAAQ;;AACpC,UAAI,KAAKF,gBAAL,CAAsBC,GAAtB,CAAJ,EAAgC;AAC9B,cAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,WAAKH,gBAAL,CAAsBC,GAAtB,IAA6BC,IAA7B;AACD;;;4CAEuBE,M,EAAQ;AAAA;AAAA;AAAA;;AAAA;AAC9B,6BAA4BA,MAA5B,8HAAoC;AAAA;AAAA,cAAvBH,GAAuB,eAAvBA,GAAuB;AAAA,cAAlBC,IAAkB,eAAlBA,IAAkB;AAClC,eAAKG,sBAAL,CAA4B;AAAEJ,YAAAA,GAAG,EAAHA,GAAF;AAAOC,YAAAA,IAAI,EAAJA;AAAP,WAA5B;AACD;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI/B;;;;;;;;;AAEyBI,cAAAA,S,SAAAA,S,EAAWC,S,SAAAA,S;;AACnC,kBAAI,CAACA,SAAD,IAAc,OAAOA,SAAP,KAAqB,UAAvC,EAAmD,CACjD;AACD;;;;8CAGmBA,SAAS,E;;;AAArBC,cAAAA,G;;AACN,mBAAKC,UAAL,CAAgBC,QAAhB,CAAyB;AACvBJ,gBAAAA,SAAS,EAATA,SADuB;AAEvBK,gBAAAA,MAAM,EAAEH,GAFe;AAGvBI,gBAAAA,KAAK,EAAE;AAHgB,eAAzB;;;;;;;;AAMAC,cAAAA,OAAO,CAACC,GAAR;;AACA,mBAAKL,UAAL,CAAgBC,QAAhB,CAAyB;AACvBJ,gBAAAA,SAAS,EAATA,SADuB;AAEvBK,gBAAAA,MAAM,EAAE,IAFe;AAGvBC,gBAAAA,KAAK;AAHkB,eAAzB;;;;;;;;;;;wBAQkB;AACpB,aAAO,KAAKZ,gBAAZ;AACD","sourcesContent":["export default class TransportInteractionBase {\n  constructor() {\n    this._transportEvents = {};\n  }\n\n  registerTransportEvent({ key, func }) {\n    if (this._transportEvents[key]) {\n      throw new Error('transport event has already registered');\n    }\n    this._transportEvents[key] = func;\n  }\n\n  registerTransportEvents(events) {\n    for (const { key, func } of events) {\n      this.registerTransportEvent({ key, func });\n    }\n  }\n\n  async _fetchAndResponse({ requestId, fetchFunc }) {\n    if (!fetchFunc || typeof fetchFunc !== 'function') {\n      // throw new Error('Parameter `fetchFunc` is invalid!');\n    }\n\n    try {\n      const res = await fetchFunc();\n      this._transport.response({\n        requestId,\n        result: res,\n        error: null,\n      });\n    } catch (error) {\n      console.log(error);\n      this._transport.response({\n        requestId,\n        result: null,\n        error,\n      });\n    }\n  }\n\n  get transportEvents() {\n    return this._transportEvents;\n  }\n}\n"],"file":"index.js"}