{"version":3,"sources":["lib/getBaseWebpackConfig/getBaseWebpackConfig.ts"],"names":["MD5","input","crypto","createHash","update","digest","getBaseWebpackConfig","analyzeBundle","cacheDirectory","fontFileSizeLimit","imageFileSizeLimit","hashPrefix","mode","prefixSvgId","supportedLocales","themeFolder","threadLoaderOptions","useThreadLoader","preferredDevtool","useDevtool","sourceMapLoaderExcludes","babelLoaderExcludes","devtool","threadLoader","push","loader","options","plugins","DefinePlugin","JSON","stringify","BundleAnalyzerPlugin","rules","enforce","test","exclude","use","resource","jsx","svgo","removeViewBox","cleanupIDs","prefix","path","basename","modules","localIdentName","autoprefixer","includePaths","resolve","process","cwd","outputStyle","extensions","module"],"mappings":"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","sourcesContent":["import autoprefixer from 'autoprefixer';\nimport crypto from 'crypto';\nimport path from 'path';\nimport { warmup } from 'thread-loader';\nimport { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\nimport {\n  Configuration,\n  DefinePlugin,\n  Loader,\n  Plugin,\n  RuleSetRule,\n} from 'webpack';\n\nfunction MD5(input: string) {\n  return crypto.createHash('MD5').update(input).digest('hex');\n}\n\nexport interface BaseWebpackConfigOptions {\n  analyzeBundle?: boolean;\n  cacheDirectory?: boolean;\n  fontFileSizeLimit?: number;\n  imageFileSizeLimit?: number;\n  hashPrefix?: string;\n  mode?: Configuration['mode'];\n  prefixSvgId?: boolean;\n  supportedLocales?: string[];\n  themeFolder: string;\n  threadLoaderOptions?: Record<string, any>;\n  useThreadLoader?: boolean;\n  preferredDevtool?: Configuration['devtool'];\n  useDevtool?: boolean;\n  sourceMapLoaderExcludes?: RuleSetRule['exclude'];\n  babelLoaderExcludes?: RuleSetRule['exclude'];\n}\n\nexport const getBaseWebpackConfig = ({\n  analyzeBundle = false,\n  cacheDirectory = false,\n  fontFileSizeLimit = 15000,\n  imageFileSizeLimit = 20000,\n  hashPrefix = '',\n  mode = 'production',\n  prefixSvgId = false,\n  supportedLocales = [],\n  themeFolder,\n  threadLoaderOptions = {},\n  useThreadLoader = false,\n  preferredDevtool = 'eval-source-map',\n  useDevtool = mode === 'development',\n  sourceMapLoaderExcludes = /node_modules/,\n  babelLoaderExcludes = /node_modules/,\n}: BaseWebpackConfigOptions): Configuration => {\n  const devtool = useDevtool ? preferredDevtool : false;\n  const threadLoader: Loader[] = [];\n  if (useThreadLoader) {\n    warmup(threadLoaderOptions, [\n      'source-map-loader',\n      'babel-loader',\n      'sass-loader',\n    ]);\n    threadLoader.push({\n      loader: 'thread-loader',\n      options: threadLoaderOptions,\n    });\n  }\n  const plugins: Plugin[] = [\n    new DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify(mode),\n    }),\n  ];\n  if (analyzeBundle) {\n    plugins.push(new BundleAnalyzerPlugin());\n  }\n  const rules: RuleSetRule[] = [];\n\n  // source-map-loader\n  if (useDevtool) {\n    rules.push({\n      enforce: 'pre',\n      test: /\\.(js|jsx|ts|tsx)$/,\n      exclude: sourceMapLoaderExcludes,\n      use: ['source-map-loader', ...threadLoader],\n    });\n  }\n  // babel-loader\n  rules.push({\n    test: /\\.(js|jsx|ts|tsx)$/,\n    use: [\n      {\n        loader: 'babel-loader',\n        options: {\n          cacheDirectory,\n        },\n      },\n      {\n        loader: '@ringcentral-integration/locale-loader',\n        options: {\n          supportedLocales,\n        },\n      },\n      ...threadLoader,\n    ],\n    exclude: babelLoaderExcludes,\n  });\n\n  // css\n  rules.push({\n    test: /\\.css$/i,\n    use: ['style-loader', 'css-loader', ...threadLoader],\n  });\n\n  // font\n  rules.push({\n    test: /\\.woff|\\.woff2|.eot|\\.ttf/,\n    use: `url-loader?limit=${fontFileSizeLimit}&name=fonts/[name]_[hash].[ext]`,\n  });\n\n  // svg\n  rules.push({\n    test: /\\.svg/,\n    exclude: /fonts/,\n    use: ({ resource }) => [\n      'babel-loader',\n      {\n        loader: 'react-svg-loader',\n        options: {\n          jsx: true,\n          svgo: {\n            plugins: [\n              {\n                removeViewBox: false,\n              },\n              ...(prefixSvgId\n                ? [\n                    {\n                      cleanupIDs: {\n                        prefix: `${MD5(path.basename(resource, '.svg'))}-`,\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          },\n        },\n      },\n    ],\n  });\n  // images and svg font\n  rules.push({\n    test: /\\.png|\\.jpg|\\.gif|fonts(\\/|\\\\).*\\.svg/,\n    use: `url-loader?limit=${imageFileSizeLimit}&name=images/[name]_[hash].[ext]`,\n  });\n\n  // sass & scss\n  rules.push({\n    test: /\\.sass|\\.scss/,\n    use: [\n      {\n        loader: 'style-loader',\n      },\n      {\n        loader: 'css-loader',\n        options: {\n          modules: true,\n          localIdentName: `${hashPrefix}_[path]_[name]_[local]_[hash:base64:5]`,\n        },\n      },\n      {\n        loader: 'postcss-loader',\n        options: {\n          plugins: () => [autoprefixer],\n        },\n      },\n      {\n        loader: 'sass-loader',\n        options: {\n          includePaths: [\n            themeFolder,\n            path.resolve(process.cwd(), 'node_modules'),\n            path.resolve(process.cwd(), '../../node_modules'),\n          ],\n          outputStyle: 'expanded',\n        },\n      },\n      ...threadLoader,\n    ],\n  });\n  // audio\n  rules.push({\n    test: /\\.ogg$|\\.wav$/,\n    use: 'file-loader?name=audio/[name]_[hash].[ext]',\n  });\n\n  return {\n    mode,\n    devtool,\n    plugins,\n    resolve: {\n      extensions: ['.ts', '.tsx', '.js', '.jsx'],\n    },\n    module: {\n      rules,\n    },\n  };\n};\n"],"file":"getBaseWebpackConfig.js"}