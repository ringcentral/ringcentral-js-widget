{"version":3,"sources":["lib/MeetingCalendarHelper/index.ts"],"names":["formatSmartphones","dialInNumber","pinNumber","showMeetingPasswordPSTN","meetingPasswordPSTN","length","map","obj","passwordField","locationField","country","name","location","phoneNumber","join","formatDialInNumber","getPasswordTpl","meetingPassword","currentLocale","passwordLiteral","i18n","getString","replaceTextLinksToAnchors","input","pattern","replace","$0","htmlNewLine","htmlIndentation","htmlTabIndentation","repeat","formatTextToHtml","plantText","options","links","searchLinks","newLine","indentation","tabIndentation","htmlContent","split","line","forEach","uri","getRcvPstnPasswordTpl","passwordPstnLiteral","getBaseRcmTpl","brand","meeting","serviceInfo","extensionInfo","invitationInfo","accountName","meetingId","id","joinUri","password","mobileDialingNumberTpl","phoneDialingNumberTpl","passwordTpl","teleconference","brandConfig","formattedMsg","invitation","brandName","getRcmEventTpl","mainInfo","tplResult","getRcmHtmlEventTpl","getBaseRcvTpl","isMeetingSecret","shortId","productName","meetingContent","push","isATT","code","rcvAttTeleconference","rcvTeleconference","smartphones","dialNumber","getRcvEventTpl","getRcvHtmlEventTpl","getMeetingId","meetingUri","regs","MEETING_URI_REGEXP","RCM","RCV","i","matches","exec","match0","link","indexOf","substring"],"mappings":"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","sourcesContent":["import formatMessage from 'format-message';\nimport { RcVDialInNumberObj } from 'ringcentral-integration/interfaces/Rcv.model';\n\nimport {\n  MEETING_URI_REGEXP,\n  rcvAttTeleconference,\n  rcvTeleconference,\n} from './config';\nimport { formatMeetingId } from './formatMeetingId';\nimport i18n from './i18n';\nimport {\n  CommonBrand,\n  FormatToHtmlOptions,\n  RcmMainParams,\n  RcvMainParams,\n  TplResult,\n} from './index.interface';\n\nfunction formatSmartphones(\n  dialInNumber: string | RcVDialInNumberObj[],\n  pinNumber: string,\n  showMeetingPasswordPSTN: boolean,\n  meetingPasswordPSTN: string,\n) {\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return '';\n  }\n\n  if (typeof dialInNumber === 'string') {\n    return `${dialInNumber},,${pinNumber}#${\n      showMeetingPasswordPSTN ? `,,${meetingPasswordPSTN}#` : ''\n    }`;\n  }\n\n  return dialInNumber\n    .map((obj) => {\n      const passwordField = showMeetingPasswordPSTN\n        ? `,,${meetingPasswordPSTN}#`\n        : '';\n\n      const locationField =\n        obj?.country?.name && obj.location\n          ? `${obj.country.name} (${obj.location})`\n          : obj?.country?.name || '';\n\n      return `${obj.phoneNumber},,${pinNumber}#${passwordField} ${locationField}`;\n    })\n    .join('\\n\\t');\n}\n\nfunction formatDialInNumber(dialInNumber: string | RcVDialInNumberObj[]) {\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return '';\n  }\n\n  if (typeof dialInNumber === 'string') {\n    return dialInNumber;\n  }\n\n  return dialInNumber\n    .map((obj) => {\n      const locationField =\n        obj?.country?.name && obj.location\n          ? `${obj.country.name} (${obj.location})`\n          : obj?.country?.name || '';\n\n      return `${obj.phoneNumber} ${locationField}`;\n    })\n    .join('\\n\\t');\n}\n\nfunction getPasswordTpl(\n  meetingPassword: string,\n  currentLocale: string,\n): string {\n  const passwordLiteral = i18n.getString('password', currentLocale);\n  return meetingPassword ? `${passwordLiteral}: ${meetingPassword}` : '';\n}\n\n/**\n * replace all text link into anchor link\n * Should match: http://www.example.com\n * Should not match: <a href=\"http://www.example.com\">http://www.example.com </a>\n * Then replace it into <a href=\"http://www.example.com\">http://www.example.com </a>\n * @param input\n */\nexport function replaceTextLinksToAnchors(input: string): string {\n  /**\n   * [^<>\\]]+ means should match any characters except < or > or ]\n   * (?!\\s*<\\/a>) means url should not be followed by either \"</a>\" or \"     </a>\"\n   * (?!\"[^>]*>) means url should not followed by \">\n   * further explanation: origin string: <a href=\"http://www.example.com\">http://www.example.com </a> should not match\n   * (?=[\\s!,?\\]]|$) means url can be followed by punctuations or whitespace or nothing\n   */\n  // https://stackoverflow.com/questions/19060460/url-replace-with-anchor-not-replacing-existing-anchors\n\n  const pattern: RegExp = /(?:(?:ht|f)tps?:\\/\\/|www)[^<>\\]]+(?!\\s*<\\/a>)(?!\"[^>]*>)(?=[\\s!,?\\]<]|$)/gim;\n\n  return input.replace(pattern, ($0: string): string => {\n    return `<a target=\"_blank\" href=\"${$0}\">${$0}</a>`;\n  });\n}\n\nexport const htmlNewLine: string = '<br>';\nexport const htmlIndentation: string = '&nbsp;';\nexport const htmlTabIndentation: string = htmlIndentation.repeat(4);\n\nexport function formatTextToHtml(\n  plantText: string,\n  options: FormatToHtmlOptions = {},\n): string {\n  const {\n    links = [],\n    searchLinks = false,\n    newLine = htmlNewLine,\n    indentation = htmlIndentation,\n    tabIndentation = htmlTabIndentation,\n  } = options;\n\n  let htmlContent = plantText\n    .replace(/\\r\\n|\\n|\\r/g, '\\n') // formalize newline\n    .split('\\n') // split with formalized newline\n    .map((line) => {\n      return line\n        .replace(/\\t/g, tabIndentation) // replace all Tab with 4 indentations\n        .replace(/^\\s*/, ($0) => indentation.repeat($0.length)); // replace leading whtespaces with indentations\n    })\n    .join(newLine);\n\n  links.forEach((uri) => {\n    if (uri) {\n      htmlContent = htmlContent.replace(\n        uri,\n        `<a target=\"_blank\" href=\"${uri}\">${uri}</a>`,\n      );\n    }\n  });\n\n  if (searchLinks) {\n    htmlContent = replaceTextLinksToAnchors(htmlContent);\n  }\n\n  return htmlContent;\n}\n\n/**\n * Dial-in password: ${passwordPstn}\n */\nfunction getRcvPstnPasswordTpl(\n  meetingPasswordPSTN: string,\n  currentLocale: string,\n): string {\n  const passwordPstnLiteral = i18n.getString('passwordPstn', currentLocale);\n  return `${passwordPstnLiteral} ${meetingPasswordPSTN}`;\n}\n\nfunction getBaseRcmTpl(\n  { meeting, serviceInfo, extensionInfo, invitationInfo }: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n): TplResult {\n  const accountName = extensionInfo.name;\n  const meetingId = meeting.id;\n  const joinUri = meeting.links.joinUri;\n  const password = meeting.password;\n\n  const mobileDialingNumberTpl = serviceInfo.mobileDialingNumberTpl;\n  const phoneDialingNumberTpl = serviceInfo.phoneDialingNumberTpl;\n  const passwordTpl = getPasswordTpl(password, currentLocale);\n  const teleconference = brand.brandConfig.teleconference;\n\n  let formattedMsg = invitationInfo?.invitation;\n  if (!formattedMsg) {\n    formattedMsg = formatMessage(\n      i18n.getString('inviteMeetingContent', currentLocale),\n      {\n        accountName,\n        brandName: brand.name,\n        joinUri,\n        passwordTpl,\n        mobileDialingNumberTpl,\n        phoneDialingNumberTpl,\n        meetingId: formatMeetingId(meetingId),\n        teleconference,\n      },\n    );\n  }\n\n  return {\n    formattedMsg,\n    links: {\n      joinUri,\n      teleconference,\n    },\n  };\n}\n\nexport function getRcmEventTpl(\n  mainInfo: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n): string {\n  const tplResult = getBaseRcmTpl(mainInfo, brand, currentLocale);\n  return tplResult.formattedMsg;\n}\n\nexport function getRcmHtmlEventTpl(\n  mainInfo: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n): string {\n  const tplResult = getBaseRcmTpl(mainInfo, brand, currentLocale);\n  return formatTextToHtml(tplResult.formattedMsg, {\n    links: [tplResult.links.joinUri, tplResult.links.teleconference],\n  });\n}\n\nfunction getBaseRcvTpl(\n  { meeting, extensionInfo, dialInNumber }: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n): TplResult {\n  const accountName = extensionInfo.name;\n  const { meetingPassword, meetingPasswordPSTN, isMeetingSecret } = meeting;\n  const joinUri = meeting.joinUri;\n  const pinNumber = meeting.shortId;\n  let productName;\n  const meetingContent: Array<string> = [];\n  const showMeetingPasswordPSTN = !!(isMeetingSecret && meetingPasswordPSTN);\n\n  if (brand.name === 'RingCentral') {\n    productName = 'RingCentral Video';\n    meetingContent.push(\n      i18n.getString('rcvRCBrandInviteMeetingContent', currentLocale),\n    );\n  } else {\n    productName = brand.name;\n    meetingContent.push(\n      i18n.getString('rcvInviteMeetingContent', currentLocale),\n    );\n  }\n  if (dialInNumber && dialInNumber.length > 0) {\n    /* TODO: after get the translation, remove rcvInviteMeetingContentDial\n     * rcvInviteMeetingContentCountryDial is the correct one\n     */\n    meetingContent.push(\n      i18n.getString(\n        typeof dialInNumber === 'string'\n          ? 'rcvInviteMeetingContentDial'\n          : 'rcvInviteMeetingContentCountryDial',\n        currentLocale,\n      ),\n    );\n    if (showMeetingPasswordPSTN) {\n      meetingContent.push(\n        getRcvPstnPasswordTpl(meetingPasswordPSTN, currentLocale),\n      );\n    }\n  }\n  meetingContent.push(`${i18n.getString('rcvTeleconference', currentLocale)}`);\n  const passwordTpl = isMeetingSecret\n    ? getPasswordTpl(meetingPassword, currentLocale)\n    : '';\n\n  const isATT = brand.code === 'att';\n  const teleconference = isATT ? rcvAttTeleconference : rcvTeleconference;\n  const brandName = isATT ? `AT&T ${brand.name}` : brand.name;\n\n  const formattedMsg = formatMessage(meetingContent.join(''), {\n    accountName,\n    brandName,\n    joinUri,\n    passwordTpl,\n    smartphones: formatSmartphones(\n      dialInNumber,\n      pinNumber,\n      showMeetingPasswordPSTN,\n      meetingPasswordPSTN,\n    ),\n    dialNumber: formatDialInNumber(dialInNumber),\n    pinNumber: formatMeetingId(pinNumber),\n    teleconference,\n    productName,\n  });\n\n  return {\n    formattedMsg,\n    links: {\n      joinUri,\n      teleconference,\n    },\n  };\n}\n\nexport function getRcvEventTpl(\n  mainInfo: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n): string {\n  const tplResult = getBaseRcvTpl(mainInfo, brand, currentLocale);\n  return tplResult.formattedMsg;\n}\n\nexport function getRcvHtmlEventTpl(\n  mainInfo: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n): string {\n  const tplResult = getBaseRcvTpl(mainInfo, brand, currentLocale);\n  return formatTextToHtml(tplResult.formattedMsg, {\n    links: [tplResult.links.joinUri, tplResult.links.teleconference],\n  });\n}\n\nexport function getMeetingId(meetingUri: string): string {\n  if (meetingUri) {\n    const regs = [MEETING_URI_REGEXP.RCM, MEETING_URI_REGEXP.RCV];\n    for (let i = 0; i < regs.length; i += 1) {\n      const matches = regs[i].exec(meetingUri);\n      if (matches && matches.length > 0) {\n        const match0 = matches[0];\n        const link = (match0.indexOf('?') > -1\n          ? matches[0].substring(0, matches[0].indexOf('?'))\n          : match0\n        ).split('/');\n\n        const id = link[link.length - 1];\n        return id;\n      }\n    }\n  }\n\n  return null;\n}\n\nexport { formatMeetingId };\n"],"file":"index.js"}