{"version":3,"sources":["lib/usm/utils/freeze.ts"],"names":["warn","key","Error","freeze","object","Proxy","set","target","get","Reflect","deleteProperty","setPrototypeOf","defineProperty"],"mappings":";;;;;;;;;;;AAcA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAc;AACzB,QAAM,IAAIC,KAAJ,qBAAuBD,GAAvB,qBAAN;AACD,CAFD;;AAIA,SAASE,MAAT,CAAkCC,MAAlC,EAA6C;AAC3C,SAAO,IAAIC,KAAJ,CAAUD,MAAV,EAAkB;AACvBE,IAAAA,GADuB,eACnBC,MADmB,EACRN,GADQ,EACE;AACvB,aAAOD,IAAI,CAACC,GAAD,CAAX;AACD,KAHsB;AAIvBO,IAAAA,GAJuB,eAInBD,MAJmB,EAIRN,GAJQ,EAIE;AACvB,aAAOQ,OAAO,CAACD,GAAR,CAAYD,MAAZ,EAAoBN,GAApB,CAAP;AACD,KANsB;AAOvBS,IAAAA,cAPuB,0BAORH,MAPQ,EAOGN,GAPH,EAOa;AAClC,aAAOD,IAAI,CAACC,GAAD,CAAX;AACD,KATsB;AAUvBU,IAAAA,cAVuB,4BAUN;AACf,YAAM,IAAIT,KAAJ,+BAAN;AACD,KAZsB;AAavBU,IAAAA,cAbuB,0BAaRL,MAbQ,EAaGN,GAbH,EAaa;AAClC,aAAOD,IAAI,CAACC,GAAD,CAAX;AACD;AAfsB,GAAlB,CAAP;AAiBD","sourcesContent":["type Proxy<T> = T & {\n  get(): T;\n  set(value: T): void;\n};\ntype Proxify<T> = {\n  [P in keyof T]: Proxy<T[P]>;\n};\ntype Key = string;\ntype Decorator = {\n  configurable: boolean;\n  enumerable: boolean;\n  writable: boolean;\n};\n\nconst warn = (key: Key) => {\n  throw new Error(`Property '${key}' is read only.`);\n};\n\nfunction freeze<T extends object>(object: T) {\n  return new Proxy(object, {\n    set(target: T, key: Key) {\n      return warn(key);\n    },\n    get(target: T, key: Key) {\n      return Reflect.get(target, key);\n    },\n    deleteProperty(target: T, key: Key) {\n      return warn(key);\n    },\n    setPrototypeOf() {\n      throw new Error(`Frozen Object is read only.`);\n    },\n    defineProperty(target: T, key: Key) {\n      return warn(key);\n    },\n  }) as Proxify<T>;\n}\n\nexport { freeze as default };\n"],"file":"freeze.js"}