{"version":3,"sources":["lib/StorageBase/index.js"],"names":["StorageBase","deps","dep","optional","name","actionTypes","enumMap","actionTypesBase","prefix","StorageProvider","SynchronizedStorage","options","Error","_StorageProvider","_reducers","_reducer","types","reducers","key","reducer","_initialized","state","data","status","storageKey","moduleStatuses","ready","_storage","driver","RcModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUqBA,W;AARrB;;;;;OAKC,iBAAQ;AACPC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAAD;AADC,CAAR,C;;;;;AAIC,6BAKG;AAAA;;AAAA,QAJDC,IAIC,QAJDA,IAIC;AAAA,gCAHDC,WAGC;AAAA,QAHDA,WAGC,iCAHa,sBAAW;AAAEC,MAAAA,OAAO,EAAEC,2BAAX;AAA4BC,MAAAA,MAAM,EAAEJ;AAApC,KAAX,CAGb;AAAA,oCAFDK,eAEC;AAAA,QAFDA,eAEC,qCAFiBC,+BAEjB;AAAA,QADEC,OACF;;AAAA;;AACD,QAAI,CAACP,IAAL,EAAW;AACT,YAAM,IAAIQ,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,8DACKD,OADL;AAEEN,MAAAA,WAAW,EAAXA;AAFF;AAIA,UAAKQ,gBAAL,GAAwBJ,eAAxB;AACA,UAAKK,SAAL,GAAiB,EAAjB;AACA,UAAKC,QAAL,GAAgB,mCAAkB;AAChCC,MAAAA,KAAK,EAAE,MAAKX,WADoB;AAEhCY,MAAAA,QAAQ,EAAE,MAAKH;AAFiB,KAAlB,CAAhB;AAVC;AAcF;;;;2CAEiC;AAAA,UAAhBI,GAAgB,SAAhBA,GAAgB;AAAA,UAAXC,OAAW,SAAXA,OAAW;;AAChC,UAAI,KAAKC,YAAT,EAAuB;AACrB,cAAM,IAAIR,KAAJ,CAAU,+CAAV,CAAN;AACD;;AACD,UAAI,KAAKE,SAAL,CAAeI,GAAf,CAAJ,EAAyB;AACvB,cAAM,IAAIN,KAAJ,4BAA8BM,GAA9B,sBAAN;AACD;;AACD,WAAKJ,SAAL,CAAeI,GAAf,IAAsBC,OAAtB;AACD;;;4BAEOD,G,EAAK;AACX,aAAO,KAAKG,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKG,KAAL,CAAWC,IAAlB;AACD;;;wBAEY;AACX,aAAO,KAAKD,KAAL,CAAWE,MAAlB;AACD;;;wBAEgB;AACf,aAAO,KAAKF,KAAL,CAAWG,UAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,MAAL,KAAgBE,2BAAeC,KAAtC;AACD;;;wBAEY;AACX,UAAI,KAAKA,KAAT,EAAgB;AACd,eAAO,KAAKC,QAAL,CAAcC,MAArB;AACD;;AACD,aAAO,IAAP;AACD;;;;EAzDsCC,qB","sourcesContent":["import RcModule from '../RcModule';\nimport { Library } from '../di';\nimport { prefixEnum } from '../Enum';\nimport SynchronizedStorage from '../SynchronizedStorage';\n\nimport actionTypesBase from './actionTypesBase';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport getStorageReducer from './getStorageReducer';\n\n/**\n * @class\n * @description Alternative implementation of the Storage class.\n *  Allows registration of reducers so that persisted states can be computed with reducers.\n */\n@Library({\n  deps: [{ dep: 'StorageBaseOptions', optional: true }],\n})\nexport default class StorageBase extends RcModule {\n  constructor({\n    name,\n    actionTypes = prefixEnum({ enumMap: actionTypesBase, prefix: name }),\n    StorageProvider = SynchronizedStorage,\n    ...options\n  }) {\n    if (!name) {\n      throw new Error('name must be defined');\n    }\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._StorageProvider = StorageProvider;\n    this._reducers = {};\n    this._reducer = getStorageReducer({\n      types: this.actionTypes,\n      reducers: this._reducers,\n    });\n  }\n\n  registerReducer({ key, reducer }) {\n    if (this._initialized) {\n      throw new Error('Reducers must be registered before initialize');\n    }\n    if (this._reducers[key]) {\n      throw new Error(`Reducer of key: '${key}' already exists`);\n    }\n    this._reducers[key] = reducer;\n  }\n\n  getItem(key) {\n    return this.state.data[key];\n  }\n\n  get data() {\n    return this.state.data;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get storageKey() {\n    return this.state.storageKey;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get driver() {\n    if (this.ready) {\n      return this._storage.driver;\n    }\n    return null;\n  }\n}\n"],"file":"index.js"}