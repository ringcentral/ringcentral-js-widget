{"version":3,"sources":["lib/MemoryStorage/index.ts"],"names":["MemoryStorage","_data","Map","key","get","value","set","idx","keys","clear","size"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;IACaA,a;;;;SACHC,K,GAAwB,IAAIC,GAAJ,E;;;;;4BAExBC,G,EAAa;AACnB,aAAO,KAAKF,KAAL,CAAWG,GAAX,CAAeD,GAAf,CAAP;AACD;;;4BAEOA,G,EAAaE,K,EAAU;AAC7B,WAAKJ,KAAL,CAAWK,GAAX,CAAeH,GAAf,EAAoBE,KAApB;AACD;;;+BAEUF,G,EAAa;AACtB,WAAKF,KAAL,WAAkBE,GAAlB;AACD;;;wBAMGI,G,EAAa;AACf,aAAO,mBAAI,KAAKN,KAAL,CAAWO,IAAX,EAAJ,EAAuBD,GAAvB,CAAP;AACD;;;2BAEM;AACL,gCAAW,KAAKN,KAAL,CAAWO,IAAX,EAAX;AACD;;;4BAEO;AACN,aAAO,IAAP;AACD;;;4BAEO;AACN,WAAKP,KAAL,CAAWQ,KAAX;AACD;;;wBAlBY;AACX,aAAO,KAAKR,KAAL,CAAWS,IAAlB;AACD","sourcesContent":["/**\n * Simple polyfill of localStorage object for using storageModules in node\n */\nexport class MemoryStorage<T extends string | null> implements Storage {\n  private _data: Map<string, T> = new Map();\n\n  getItem(key: string) {\n    return this._data.get(key);\n  }\n\n  setItem(key: string, value: T) {\n    this._data.set(key, value);\n  }\n\n  removeItem(key: string) {\n    this._data.delete(key);\n  }\n\n  get length() {\n    return this._data.size;\n  }\n\n  key(idx: number) {\n    return [...this._data.keys()][idx];\n  }\n\n  keys() {\n    return [...this._data.keys()];\n  }\n\n  ready() {\n    return true;\n  }\n\n  clear() {\n    this._data.clear();\n  }\n}\n"],"file":"index.js"}