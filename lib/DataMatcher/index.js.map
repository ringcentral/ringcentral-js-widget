{"version":3,"sources":["lib/DataMatcher/index.js"],"names":["checkName","name","Error","DEFAULT_TTL","DEFAULT_NO_MATCH_TTL","DataMatcher","deps","dep","optional","storage","ttl","noMatchTtl","disableCache","actionTypes","base","baseActionTypes","prefix","storageKey","getReducer","getDefaultReducer","getDataReducer","getDefaultDataReducer","options","_querySources","Map","_searchProviders","_matchPromises","_matchQueues","_storage","_ttl","_noMatchTtl","_storageKey","_reducer","registerReducer","key","reducer","data","_lastCleanUp","store","subscribe","_onStateChange","output","Set","forEach","readyCheckFn","getQueriesFn","query","add","now","Date","dispatch","type","cleanUp","queries","_getQueries","timestamp","_shouldInit","init","initSuccess","_shouldReset","reset","resetSuccess","pending","ready","searchProvidersReady","searchFn","constructor","has","set","_cleanUp","match","ignoreCache","ignoreQueue","Promise","all","keys","map","_matchSource","provider","get","promise","matchSuccess","matchError","error","queuedItems","promises","matching","push","item","queue","filteredQueries","_t","length","_fetchMatchResult","concat","insertMatchEntries","values","state","status","moduleStatuses","_data","_dataMapping","RcModule","proxify","selector","getItem","Array","from","prividers","dataMap","queryResult","matchesList","_providerValue","providerName","Object"],"mappings":"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","sourcesContent":["import { all, filter, forEach } from 'ramda';\nimport RcModule from '../RcModule';\nimport { Library } from '../di';\nimport { prefixEnum } from '../Enum';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport getDefaultReducer from './getDefaultReducer';\nimport getDefaultDataReducer from './getDefaultDataReducer';\nimport proxify from '../proxy/proxify';\nimport { selector } from '../selector';\n\nexport function checkName(name) {\n  if (!name) {\n    throw new Error('DataMatcher: \"name\" is required.');\n  }\n  if (typeof name !== 'string') {\n    throw new Error('DataMatcher: \"name\" must be a string.');\n  }\n}\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_NO_MATCH_TTL = 30 * 1000;\n\n@Library({\n  deps: [\n    { dep: 'Storage', optional: true },\n    { dep: 'DataMatcherOptions', optional: true },\n  ],\n})\nexport default class DataMatcher extends RcModule {\n  constructor({\n    name,\n    storage,\n    ttl = DEFAULT_TTL,\n    noMatchTtl = DEFAULT_NO_MATCH_TTL,\n    disableCache = false,\n    actionTypes = prefixEnum({ base: baseActionTypes, prefix: name }),\n    storageKey = `${name}Data`,\n    getReducer = getDefaultReducer,\n    getDataReducer = getDefaultDataReducer,\n    ...options\n  } = {}) {\n    checkName(name);\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._querySources = new Map();\n    this._searchProviders = new Map();\n    this._matchPromises = new Map();\n    this._matchQueues = new Map();\n    if (!disableCache) {\n      this._storage = storage;\n    }\n    this._ttl = ttl;\n    this._noMatchTtl = noMatchTtl;\n\n    this._storageKey = storageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getDataReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this._lastCleanUp = 0;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _getQueries() {\n    const output = new Set();\n    this._querySources.forEach((readyCheckFn, getQueriesFn) => {\n      if (readyCheckFn()) {\n        getQueriesFn().forEach((query) => {\n          output.add(query);\n        });\n      }\n    });\n    return [...output];\n  }\n\n  _cleanUp() {\n    // throttle clean up to only run once every 100ms\n    const now = Date.now();\n    if (now - this._lastCleanUp > 100) {\n      this._lastCleanUp = now;\n      this.store.dispatch({\n        type: this.actionTypes.cleanUp,\n        queries: this._getQueries(),\n        timestamp: Date.now(),\n        ttl: this._ttl,\n      });\n    }\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      // this._cleanUp();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this._lastCleanUp = 0;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      (!this._storage || this._storage.ready) &&\n      this.searchProvidersReady\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      ((!!this._storage && !this._storage.ready) || !this.searchProvidersReady)\n    );\n  }\n\n  get searchProvidersReady() {\n    return all(({ readyCheckFn }) => readyCheckFn(), [\n      ...this._searchProviders.values(),\n    ]);\n  }\n\n  addSearchProvider({ name, searchFn, readyCheckFn }) {\n    if (!name) {\n      throw new Error(`${this.constructor.name}: \"name\" is required.`);\n    }\n    if (this._searchProviders.has(name)) {\n      throw new Error(\n        `${this.constructor.name}: A provider named \"${name}\" already exists.`,\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"searchFn\" must be a function.`,\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`,\n      );\n    }\n    this._searchProviders.set(name, {\n      searchFn,\n      readyCheckFn,\n    });\n  }\n\n  addQuerySource({ getQueriesFn, readyCheckFn }) {\n    if (typeof getQueriesFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"getQueriesFn\" must be a function.`,\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`,\n      );\n    }\n    if (this._querySources.has(getQueriesFn)) {\n      throw new Error(\n        `${this.constructor.name}: this getQueryFn has already been added.`,\n      );\n    }\n    this._querySources.set(getQueriesFn, readyCheckFn);\n  }\n\n  @proxify\n  async triggerMatch() {\n    if (this.ready) {\n      this._cleanUp();\n      await this.match({\n        queries: this._getQueries(),\n      });\n    }\n  }\n\n  @proxify\n  async match({ queries, ignoreCache = false, ignoreQueue = false }) {\n    await Promise.all(\n      [...this._searchProviders.keys()].map((name) =>\n        this._matchSource({\n          name,\n          queries,\n          ignoreCache,\n          ignoreQueue,\n        }),\n      ),\n    );\n  }\n\n  async _fetchMatchResult({ name, queries }) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.match,\n        queries,\n        name,\n      });\n      const provider = this._searchProviders.get(name);\n      if (!provider) {\n        throw new Error(\n          `${this.constructor.name}: provider named \"${name} does not exist`,\n        );\n      }\n      const promise = provider.searchFn({\n        queries,\n      });\n      this._matchPromises.set(name, {\n        promise,\n        queries,\n      });\n      const data = await promise;\n      this._matchPromises.delete(name);\n\n      this.store.dispatch({\n        type: this.actionTypes.matchSuccess,\n        name,\n        queries,\n        data,\n        timestamp: Date.now(),\n      });\n    } catch (error) {\n      this._matchPromises.delete(name);\n      this.store.dispatch({\n        type: this.actionTypes.matchError,\n        name,\n        queries,\n        error,\n        timestamp: Date.now(),\n      });\n      throw error;\n    }\n  }\n\n  @proxify\n  async _matchSource({ name, queries, ignoreCache, ignoreQueue }) {\n    const now = Date.now();\n    const data = this.data;\n    const queuedItems = {};\n    const promises = [];\n    let queue;\n    let matching;\n    if (!ignoreQueue && this._matchPromises.has(name)) {\n      matching = this._matchPromises.get(name);\n      promises.push(matching.promise);\n      matching.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n\n    if (!ignoreQueue && this._matchQueues.has(name)) {\n      queue = this._matchQueues.get(name);\n      promises.push(queue.promise);\n      queue.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n    const filteredQueries = ignoreCache\n      ? queries\n      : filter(\n          (query) =>\n            !queuedItems[query] &&\n            (!data[query] ||\n              !data[query][name] ||\n              now - data[query][name]._t > this._noMatchTtl),\n          queries,\n        );\n\n    if (filteredQueries.length) {\n      if (ignoreQueue) {\n        promises.push(\n          this._fetchMatchResult({\n            name,\n            queries: filteredQueries,\n          }),\n        );\n      } else if (!matching) {\n        matching = this._fetchMatchResult({\n          name,\n          queries: filteredQueries,\n        });\n        promises.push(matching);\n      } else if (!queue) {\n        queue = {\n          queries: filteredQueries,\n        };\n        queue.promise = (async () => {\n          await matching.promise;\n          const promise = this._fetchMatchResult({\n            name,\n            queries: queue.queries,\n          });\n          this._matchQueues.delete(name);\n          await promise;\n        })();\n        this._matchQueues.set(name, queue);\n        promises.push(queue.promise);\n      } else {\n        queue.queries = queue.queries.concat(filteredQueries);\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  /**\n   * insert matching result directly\n   */\n  @proxify\n  insertMatching({ name, data, queries }) {\n    this.store.dispatch({\n      type: this.actionTypes.insertMatchEntries,\n      data,\n      queries,\n      name,\n      timestamp: Date.now(),\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  @selector\n  _data = [\n    () =>\n      this._storage ? this._storage.getItem(this._storageKey) : this.state.data,\n    (data) => data || {},\n  ];\n\n  get dataMapping() {\n    return this._dataMapping;\n  }\n\n  @selector\n  _dataMapping = [\n    () => this.data,\n    () => this.ready,\n    () => Array.from(this._searchProviders.keys()).length,\n    (data, ready, prividers) => {\n      if (!ready || !prividers) return {};\n      const dataMap = {};\n      forEach((query) => {\n        const queryResult = data[query];\n        if (!queryResult) {\n          return;\n        }\n        let matchesList = [];\n        forEach((_providerValue, providerName) => {\n          if (\n            queryResult[providerName] &&\n            queryResult[providerName].data.length > 0\n          ) {\n            matchesList = matchesList.concat(queryResult[providerName].data);\n          }\n        }, this._searchProviders);\n        if (matchesList.length > 0) {\n          dataMap[query] = matchesList;\n        }\n      }, Object.keys(data));\n      return dataMap;\n    },\n  ];\n}\n"],"file":"index.js"}