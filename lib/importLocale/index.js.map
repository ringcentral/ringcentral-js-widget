{"version":3,"sources":["lib/importLocale/index.js"],"names":["prompt","inquirer","createPromptModule","writeFiles","localeData","sourceFolder","sourceLocale","folderPath","locale","targetData","files","ast","code","annotations","result","key","value","push","JSON","stringify","join","output","fs","writeFileSync","path","resolve","file","Object","keys","formatReason","reason","fileName","type","chalk","red","mergeTranslationData","translations","interactive","silent","sourceData","relativePath","relative","newData","shouldDelete","data","has","get","source","message","name","console","log","set","Map","filePath","dirname","originalData","translatedData","shouldSkip","content","sourceType","defaultExport","item","program","body","properties","prop","wrapInBracket","entry","extra","raw","rawValue","declaration","importLocale","defaultConfig","localizationFolder","supportedLocales","Error","mergedData"],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport chalk from 'chalk';\nimport { reduce, filter, forEach, find } from 'ramda';\nimport { parse } from '@babel/parser';\nimport generate from '@babel/generator';\nimport formatLocale from '@ringcentral-integration/i18n/lib/formatLocale';\nimport inquirer from 'inquirer';\n\nimport compileLocaleData from '../compileLocaleData';\nimport defaultConfig from '../defaultConfig';\nimport readXlfData from '../readXlfData';\nimport asyncReduce from '../asyncReduce';\nimport asyncForEach from '../asyncForEach';\n\nconst prompt = inquirer.createPromptModule();\n\nfunction writeFiles({ localeData, sourceFolder, sourceLocale }) {\n  forEach((folderPath) => {\n    forEach((locale) => {\n      if (locale !== sourceLocale) {\n        // write file\n        const targetData = localeData[folderPath].files[locale];\n        const { code } = generate(targetData.ast);\n        const annotations = reduce(\n          (result, [key, value]) => {\n            result.push(\n              `// @key: @#@${JSON.stringify(\n                key,\n              )}@#@ @source: @#@${JSON.stringify(value)}@#@`,\n            );\n            return result;\n          },\n          [],\n          targetData.annotations,\n        ).join('\\n');\n        const output = `${code}\\n\\n${annotations}\\n`;\n        fs.writeFileSync(\n          path.resolve(sourceFolder, folderPath, targetData.file),\n          output,\n        );\n      }\n    }, Object.keys(localeData[folderPath].files));\n  }, Object.keys(localeData));\n}\n\nfunction formatReason({ reason, key, fileName, type }) {\n  return `[locale] ${chalk.red(\n    `{${type}}`,\n  )} Key: '${key}', File: '${fileName}', Reason: ${reason}.`;\n}\n\nasync function mergeTranslationData({\n  localeData,\n  translations = {},\n  sourceFolder,\n  sourceLocale,\n  interactive = true,\n  silent = false,\n}) {\n  // clean up original Data\n  await asyncForEach(async (folderPath) => {\n    await asyncForEach(async (locale) => {\n      if (locale !== sourceLocale) {\n        const targetData = localeData[folderPath].files[locale];\n        const sourceData = localeData[folderPath].files[sourceLocale];\n        const relativePath = path.relative(\n          sourceFolder,\n          path.resolve(folderPath, targetData.file),\n        );\n        targetData.data = await asyncReduce(\n          async (newData, [key, value]) => {\n            const type = 'Delete';\n            let shouldDelete = false;\n            let message;\n            if (sourceData.data.has(key)) {\n              if (sourceData.data.get(key).value !== value.source) {\n                message = formatReason({\n                  type,\n                  reason: 'Source value changed',\n                  key,\n                  fileName: relativePath,\n                });\n                if (interactive) {\n                  shouldDelete = (await prompt({\n                    name: 'result',\n                    type: 'confirm',\n                    message,\n                  })).result;\n                } else {\n                  shouldDelete = true;\n                }\n              }\n            } else {\n              message = formatReason({\n                type,\n                reason: 'Source no longer exists',\n                key,\n                fileName: relativePath,\n              });\n              if (interactive) {\n                shouldDelete = (await prompt({\n                  name: 'result',\n                  type: 'confirm',\n                  message,\n                })).result;\n              } else {\n                shouldDelete = true;\n              }\n            }\n            if (shouldDelete) {\n              if (!interactive && !silent) {\n                console.log(message);\n              }\n            } else {\n              newData.set(key, value);\n            }\n\n            return newData;\n          },\n          new Map(),\n          targetData.data,\n        );\n      }\n    }, Object.keys(localeData[folderPath].files));\n  }, Object.keys(localeData));\n\n  // merge in translations\n  await asyncForEach(async (locale) => {\n    await asyncForEach(async (fileName) => {\n      const filePath = path.resolve(sourceFolder, fileName);\n      const folderPath = path.dirname(filePath);\n\n      if (\n        localeData[folderPath] &&\n        localeData[folderPath].files[sourceLocale]\n      ) {\n        const sourceData = localeData[folderPath].files[sourceLocale].data;\n        if (!localeData[folderPath].files[locale]) {\n          localeData[folderPath].files[locale] = {\n            file: `${formatLocale(locale)}.js`,\n          };\n        }\n        if (!localeData[folderPath].files[locale].data) {\n          localeData[folderPath].files[locale].data = new Map();\n        }\n        const originalData = localeData[folderPath].files[locale].data;\n        const translatedData = translations[locale][fileName];\n        await asyncForEach(async (key) => {\n          const type = 'Skip';\n          let shouldSkip = false;\n          let message;\n          if (!sourceData.has(key)) {\n            message = formatReason({\n              type,\n              reason: 'Source no longer exists',\n              key,\n              fileName,\n            });\n            if (interactive) {\n              shouldSkip = (await prompt({\n                name: 'result',\n                type: 'confirm',\n                message,\n              })).result;\n            } else {\n              shouldSkip = true;\n            }\n          } else if (sourceData.get(key).value !== translatedData[key].source) {\n            message = formatReason({\n              type,\n              reason: 'Source value changed',\n              key,\n              fileName,\n            });\n            if (interactive) {\n              shouldSkip = (await prompt({\n                name: 'result',\n                type: 'confirm',\n                message,\n              })).result;\n            } else {\n              shouldSkip = true;\n            }\n          }\n\n          if (shouldSkip) {\n            if (!interactive && !silent) {\n              console.log(message);\n            }\n          } else {\n            originalData.set(key, {\n              ...translatedData[key],\n              key,\n            });\n          }\n        }, Object.keys(translatedData));\n      }\n    }, Object.keys(translations[locale]));\n  }, Object.keys(translations));\n\n  // Update ast and generate code\n  forEach((folderPath) => {\n    forEach((locale) => {\n      if (locale !== sourceLocale) {\n        const targetData = localeData[folderPath].files[locale];\n        const sourceData = localeData[folderPath].files[sourceLocale];\n        targetData.ast = parse(sourceData.content, { sourceType: 'module' });\n        targetData.annotations = new Map();\n\n        const defaultExport = find(\n          (item) => item.type === 'ExportDefaultDeclaration',\n          targetData.ast.program.body,\n        );\n        const properties = filter((prop) => {\n          const wrapInBracket =\n            prop.key.type === 'MemberExpression' ||\n            prop.key.type === 'TemplateLiteral';\n          const key = wrapInBracket\n            ? `[${generate(prop.key).code}]`\n            : generate(prop.key).code;\n          const entry = targetData.data.get(key);\n          if (entry && entry.value) {\n            prop.value = {\n              type: 'StringLiteral',\n              value: entry.value,\n              extra: {\n                // generate desired raw to by pass babel jsesc use\n                raw: JSON.stringify(entry.value),\n                rawValue: entry.value,\n              },\n            };\n            targetData.annotations.set(key, sourceData.data.get(key).value);\n            return true;\n          }\n          return false;\n        }, defaultExport.declaration.properties);\n        defaultExport.declaration.properties = properties;\n      }\n    }, Object.keys(localeData[folderPath].files));\n  }, Object.keys(localeData));\n  return localeData;\n}\n\nexport default async function importLocale({\n  sourceFolder = defaultConfig.sourceFolder,\n  localizationFolder = defaultConfig.localizationFolder,\n  sourceLocale = defaultConfig.sourceLocale,\n  supportedLocales,\n  interactive = defaultConfig.interactive,\n  silent = defaultConfig.silent,\n} = {}) {\n  if (!supportedLocales) {\n    throw new Error('options.supportedLocales is missing');\n  }\n  const localeData = compileLocaleData({\n    sourceFolder,\n    sourceLocale,\n    supportedLocales,\n  });\n  const translations = readXlfData({\n    localizationFolder,\n    supportedLocales,\n  });\n  const mergedData = await mergeTranslationData({\n    localeData,\n    translations,\n    sourceFolder,\n    sourceLocale,\n    interactive,\n    silent,\n  });\n  writeFiles({\n    localeData: mergedData,\n    sourceFolder,\n    sourceLocale,\n  });\n}\n"],"file":"index.js"}