{"version":3,"sources":["lib/time.ts"],"names":["polling","fn","interval","waitWithCheck","timeout","Promise","race","_","reject","setTimeout","waitForSubscribe"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAEO,IAAMA,OAAO;AAAA,qEAAG,iBAAOC,EAAP,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjB,OAAOD,EAAP,KAAc,UADG;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAEXA,EAAE,EAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAGf,uBAAMC,QAAN,CAHe;;AAAA;AAAA;AAAA,mBAIfF,OAAO,CAACC,EAAD,EAAKC,QAAL,CAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPF,OAAO;AAAA;AAAA;AAAA,GAAb;;;;AAOA,IAAMG,aAAa;AAAA,sEAAG,kBAC3BF,EAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+EAEc,EAFd,yBAEzBC,QAFyB,EAEzBA,QAFyB,+BAEd,GAFc,yCAETE,OAFS,EAETA,OAFS,8BAEC,OAAO,CAFR;;AAAA,kBAIvB,OAAOH,EAAP,KAAc,UAJS;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAKrBI,OAAO,CAACC,IAAR,CAAmB,CACvBN,OAAO,CAACC,EAAD,EAAKC,QAAL,CADgB,EAEvB,IAAIG,OAAJ,CAAkB,UAACE,CAAD,EAAIC,MAAJ;AAAA,qBAAeC,UAAU,CAACD,MAAD,EAASJ,OAAT,CAAzB;AAAA,aAAlB,CAFuB,CAAnB,CALqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbD,aAAa;AAAA;AAAA;AAAA,GAAnB;;;;AAWA,IAAMO,gBAAgB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACxB,uBAAM,MAAM,IAAZ,CADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBA,gBAAgB;AAAA;AAAA;AAAA,GAAtB","sourcesContent":["import sleep from './sleep';\n\nexport const polling = async (fn: () => boolean, interval: number) => {\n  if (typeof fn !== 'function') return;\n  if (await fn()) return;\n  await sleep(interval);\n  await polling(fn, interval);\n};\n\nexport const waitWithCheck = async (\n  fn: () => boolean,\n  { interval = 100, timeout = 1000 * 5 } = {},\n) => {\n  if (typeof fn !== 'function') return;\n  await Promise.race<void>([\n    polling(fn, interval),\n    new Promise<void>((_, reject) => setTimeout(reject, timeout)),\n  ]);\n};\n\nexport const waitForSubscribe = async () => {\n  await sleep(2.5 * 1000);\n};\n"],"file":"time.js"}