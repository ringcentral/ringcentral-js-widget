{"version":3,"sources":["lib/computed/computed.ts"],"names":["computed","depsCallback","target","key","descriptor","process","env","NODE_ENV","get","Error","depsCallbackSelector","that","_store","getState","selector","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CACtBC,YADsB;AAAA,SAEnB,UAACC,MAAD,EAAYC,GAAZ,EAAyBC,UAAzB,EAAsE;AACzE,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,OAAOH,UAAU,CAACI,GAAlB,KAA0B,UAA9B,EAA0C;AACxC,cAAM,IAAIC,KAAJ,yCAAN;AACD;;AACD,UAAI,OAAOR,YAAP,KAAwB,UAA5B,EAAwC;AACtC,cAAM,IAAIQ,KAAJ,oFAAN;AAGD;AACF;;AACD,QAAMC,oBAAoB,GAAG,oCAC3B,UAACC,IAAD;AAAA,aAAa,CAACA,IAAI,CAACC,MAAL,CAAYC,QAAZ,EAAD,CAAb;AAAA,KAD2B,EAE3B;AACA,gBAAkB;AAChB,aAAOZ,YAAY,CAAC,IAAD,CAAnB;AACD,KAL0B,CAA7B;AAOA,QAAMa,QAAQ,GAAG,oCACf,UAACH,IAAD;AAAA,aAAaD,oBAAoB,CAACK,IAArB,CAA0BJ,IAA1B,CAAb;AAAA,KADe,EAEfP,UAAU,CAACI,GAFI,CAAjB;AAIA,2CACKJ,UADL;AAEEI,MAAAA,GAFF,iBAEe;AACX,eAAOM,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAP;AACD;AAJH;AAMD,GA9BuB;AAAA,CAAjB","sourcesContent":["import { createSelectorWithArray } from '../utils';\nimport { RcModuleV2 } from '../RcModule/RcModule';\n/**\n * **Description:**\n *\n * You can use `@computed` to decorate a getter function for derived data,\n * which quickly solves performance problems for computing Derived Data.\n *\n * **Example:**\n *\n * ```ts\n * class Shop {\n *   @state\n *   fruits = [];\n *\n *   @state\n *   vegetables = [];\n *\n *   @computed(({ fruits, vegetables }: Shop) => [fruits, fruits])\n *   get sum() {\n *     return this.fruits.length + this.vegetables.length;\n *   }\n * }\n * ```\n */\nexport const computed = <T extends RcModuleV2>(\n  depsCallback: (instance: T) => any[],\n) => (target: T, key: string, descriptor: TypedPropertyDescriptor<any>) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof descriptor.get !== 'function') {\n      throw new Error(`'@computed' should decorate a getter.`);\n    }\n    if (typeof depsCallback !== 'function') {\n      throw new Error(\n        `@computed() parameter should be a selector function for dependencies collection.`,\n      );\n    }\n  }\n  const depsCallbackSelector = createSelectorWithArray(\n    (that: T) => [that._store.getState()],\n    // eslint-disable-next-line func-names\n    function(this: T) {\n      return depsCallback(this);\n    },\n  );\n  const selector = createSelectorWithArray(\n    (that: T) => depsCallbackSelector.call(that),\n    descriptor.get!,\n  );\n  return {\n    ...descriptor,\n    get(this: T) {\n      return selector.call(this);\n    },\n  };\n};\n"],"file":"computed.js"}