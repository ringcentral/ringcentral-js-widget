{"version":3,"sources":["lib/phoneContext/index.tsx"],"names":["PhoneContext","React","createContext","PhoneProvider","phone","theme","defaultTheme","children","withPhone","Comp","WithPhone","props","connectModule","fn","WithModule","_","getUIProps","getUIFunctions"],"mappings":";;;;;;;;;;;;;AAAA;;AAIA;;AACA;;AAEA;;;;;;AAOA,IAAMA,YAAY,GAAGC,kBAAMC,aAAN,CAAoB,IAApB,CAArB;;eACeF,Y;;;AAER,IAAMG,aAA0D,GAAG,SAA7DA,aAA6D,OAIpE;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,wBAFJC,KAEI;AAAA,MAFJA,KAEI,2BAFIC,mBAEJ;AAAA,MADJC,QACI,QADJA,QACI;AACJ,SACE,gCAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEH;AAA9B,KACE,gCAAC,qBAAD;AAAiB,IAAA,KAAK,EAAEC;AAAxB,KAAgCE,QAAhC,CADF,CADF;AAKD,CAVM;;;;AAYA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WACE,gCAAC,YAAD,CAAc,QAAd,QACG,UAACP,KAAD;AAAA,aAAW,gCAAC,IAAD;AAAM,QAAA,KAAK,EAAEA;AAAb,SAAwBO,KAAxB,EAAX;AAAA,KADH,CADF;AAKD;;AACD,SAAOD,SAAP;AACD;;AAID;AACO,SAASE,aAAT,CAAyCC,EAAzC,EAAoE;AACzE,SAAO,UAACJ,IAAD,EAAU;AACf,QAAMK,UAAU,GAAG,yBACjB,UAACC,CAAD,EAAIJ,KAAJ;AAAA,aAAmBE,EAAE,CAACF,KAAK,CAACP,KAAP,CAAF,CAAgBY,UAAhB,CAA2BL,KAA3B,CAAnB;AAAA,KADiB,EAEjB,UAACI,CAAD,EAAIJ,KAAJ;AAAA,aAAmBE,EAAE,CAACF,KAAK,CAACP,KAAP,CAAF,CAAgBa,cAAhB,CAA+BN,KAA/B,CAAnB;AAAA,KAFiB,EAGjBF,IAHiB,CAAnB;AAIA,WAAS,UAACE,KAAD;AAAA,aACP,gCAAC,YAAD,CAAc,QAAd,QACG,UAACP,KAAD;AAAA,eAAW,gCAAC,UAAD;AAAY,UAAA,KAAK,EAAEA;AAAnB,WAA8BO,KAA9B,EAAX;AAAA,OADH,CADO;AAAA,KAAT;AAKD,GAVD;AAWD","sourcesContent":["import {\n  RcThemeProvider,\n  RcThemeProviderProps,\n} from '@ringcentral-integration/rcui';\nimport React, { FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { defaultTheme } from './theme';\n\nexport interface PhoneProviderProps<T = any> {\n  phone: T;\n  theme?: RcThemeProviderProps['theme'];\n}\n\nconst PhoneContext = React.createContext(null);\nexport default PhoneContext;\n\nexport const PhoneProvider: React.FunctionComponent<PhoneProviderProps> = ({\n  phone,\n  theme = defaultTheme,\n  children,\n}) => {\n  return (\n    <PhoneContext.Provider value={phone}>\n      <RcThemeProvider theme={theme}>{children}</RcThemeProvider>\n    </PhoneContext.Provider>\n  );\n};\n\nexport function withPhone(Comp) {\n  function WithPhone(props) {\n    return (\n      <PhoneContext.Consumer>\n        {(phone) => <Comp phone={phone} {...props} />}\n      </PhoneContext.Consumer>\n    );\n  }\n  return WithPhone;\n}\n\nexport type connectModuleProps<T> = (props: T) => any;\n\n// router properties\nexport function connectModule<T = any, K = any>(fn: connectModuleProps<T>) {\n  return (Comp) => {\n    const WithModule = connect(\n      (_, props: any) => fn(props.phone).getUIProps(props),\n      (_, props: any) => fn(props.phone).getUIFunctions(props),\n    )(Comp);\n    return (((props: K) => (\n      <PhoneContext.Consumer>\n        {(phone) => <WithModule phone={phone} {...props} />}\n      </PhoneContext.Consumer>\n    )) as any) as FunctionComponent<K>;\n  };\n}\n"],"file":"index.js"}