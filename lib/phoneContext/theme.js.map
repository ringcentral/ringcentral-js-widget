{"version":3,"sources":["lib/phoneContext/theme.ts"],"names":["brandThemeMapping","jupiterBlue","rcJupiterBlue","rcBlue","att","attRich","telus","telusRich","bt","btRich","innerGetBrandTheme","brand","defaultTheme","getBrandTheme","getBrandThemeWithJupiterBlue"],"mappings":";;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACO,IAAMA,iBAAiB,GAAG;AAC/BC,EAAAA,WAAW,EAAEC,kBADkB;AAE/BC,EAAAA,MAAM,EAAEA,kBAFuB;AAG/BC,EAAAA,GAAG,EAAEC,iBAH0B;AAI/BC,EAAAA,KAAK,EAAEC,kBAJwB;AAK/BC,EAAAA,EAAE,EAAEC;AAL2B,CAA1B;;;AAUP,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAGR;AAAA,MAFjBC,KAEiB,uEAFG,IAEH;AAAA,MADjBC,YACiB;;AACjB,MAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAOC,YAAP;AACD;;AAED,SAAOZ,iBAAiB,CAACW,KAAD,CAAjB,IAA4BC,YAAnC;AACD,CATD;;AAWO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAA4C;AAAA,MAA3CF,KAA2C,uEAAvB,IAAuB;AACvE,SAAOD,kBAAkB,CAACC,KAAD,EAAQX,iBAAiB,CAACG,MAA1B,CAAzB;AACD,CAFM;;;;AAIA,IAAMW,4BAA4B,GAAG,SAA/BA,4BAA+B,GAEzB;AAAA,MADjBH,KACiB,uEADG,IACH;AACjB,SAAOD,kBAAkB,CAACC,KAAD,EAAQX,iBAAiB,CAACC,WAA1B,CAAzB;AACD,CAJM","sourcesContent":["import { RcThemeInput } from '@ringcentral/juno';\n\nimport attRich from './brands/attRich/theme.json';\nimport btRich from './brands/btRich/theme.json';\nimport rcBlue from './brands/rcBlue/theme.json';\nimport rcJupiterBlue from './brands/rcJupiterBlue/theme.json';\nimport telusRich from './brands/telusRich/theme.json';\n\n// TODO: temporary import all, wait dynamic load way implement\nexport const brandThemeMapping = {\n  jupiterBlue: rcJupiterBlue as RcThemeInput,\n  rcBlue: rcBlue as RcThemeInput,\n  att: attRich as RcThemeInput,\n  telus: telusRich as RcThemeInput,\n  bt: btRich as RcThemeInput,\n} as const;\n\nexport type BrandTheme = keyof typeof brandThemeMapping | 'rc';\n\nconst innerGetBrandTheme = (\n  brand: BrandTheme = 'rc',\n  defaultTheme: RcThemeInput,\n): RcThemeInput => {\n  if (brand === 'rc') {\n    return defaultTheme;\n  }\n\n  return brandThemeMapping[brand] || defaultTheme;\n};\n\nexport const getBrandTheme = (brand: BrandTheme = 'rc'): RcThemeInput => {\n  return innerGetBrandTheme(brand, brandThemeMapping.rcBlue);\n};\n\nexport const getBrandThemeWithJupiterBlue = (\n  brand: BrandTheme = 'rc',\n): RcThemeInput => {\n  return innerGetBrandTheme(brand, brandThemeMapping.jupiterBlue);\n};\n"],"file":"theme.js"}