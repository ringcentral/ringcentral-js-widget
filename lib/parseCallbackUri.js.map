{"version":3,"sources":["lib/parseCallbackUri.js"],"names":["parseCallbackUri","callbackUri","url","parse","query","hash","hashObject","qs","replace","error","Error","key","Object","prototype","hasOwnProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AAEA;;;;;AAKe,SAASA,gBAAT,CAA0BC,WAA1B,EAAuC;AAAA,mBAC5BC,gBAAIC,KAAJ,CAAUF,WAAV,EAAuB,IAAvB,CAD4B;AAAA,MAC5CG,KAD4C,cAC5CA,KAD4C;AAAA,MACrCC,IADqC,cACrCA,IADqC;;AAEpD,MAAMC,UAAU,GAAGD,IAAI,GAAGE,eAAGJ,KAAH,CAASE,IAAI,CAACG,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAT,CAAH,GAAsC,EAA7D;;AACA,MAAIJ,KAAK,CAACK,KAAN,IAAeH,UAAU,CAACG,KAA9B,EAAqC;AACnC,QAAMA,KAAK,GAAG,IAAIC,KAAJ,CAAUN,KAAK,CAACK,KAAN,IAAeH,UAAU,CAACG,KAApC,CAAd;;AACA,SAAK,IAAME,GAAX,IAAkBP,KAAlB,EAAyB;AACvB,UAAWQ,MAAM,CAACC,SAAP,CAAiBC,cAAxB,MAAAV,KAAK,EAAkCO,GAAlC,CAAT,EAAiD;AAC/CF,QAAAA,KAAK,CAACE,GAAD,CAAL,GAAaP,KAAK,CAACO,GAAD,CAAlB;AACD;;AACD,UAAgBC,MAAM,CAACC,SAAP,CAAiBC,cAA7B,MAAAR,UAAU,EAAkCK,GAAlC,CAAd,EAAsD;AACpDF,QAAAA,KAAK,CAACE,GAAD,CAAL,GAAaP,KAAK,CAACO,GAAD,CAAlB;AACD;AACF;;AACD,UAAMF,KAAN;AACD;;AAED,yCACKL,KADL,GAEKE,UAFL;AAID","sourcesContent":["import url from 'url';\nimport qs from 'qs';\n\n/**\n * @function\n * @param {String} callbackUri\n * @return {Object}\n */\nexport default function parseCallbackUri(callbackUri) {\n  const { query, hash } = url.parse(callbackUri, true);\n  const hashObject = hash ? qs.parse(hash.replace(/^#/, '')) : {};\n  if (query.error || hashObject.error) {\n    const error = new Error(query.error || hashObject.error);\n    for (const key in query) {\n      if (query::Object.prototype.hasOwnProperty(key)) {\n        error[key] = query[key];\n      }\n      if (hashObject::Object.prototype.hasOwnProperty(key)) {\n        error[key] = query[key];\n      }\n    }\n    throw error;\n  }\n\n  return {\n    ...query,\n    ...hashObject,\n  };\n}\n"],"file":"parseCallbackUri.js"}