{"version":3,"sources":["lib/OAuthBase/index.js"],"names":["DEFAULT_UI_OPTIONS","OAuthBase","deps","dep","optional","alert","auth","brand","locale","tabManager","redirectUri","extralUIOptions","options","_alert","ensureExist","_auth","_brand","_locale","_tabManager","_redirectUri","_reducer","actionTypes","_extralUIOptions","pending","ready","store","dispatch","type","init","initSuccess","callbackUri","refresh","query","_refreshWithCallbackQuery","_loginWithCallbackQuery","console","error","message","authMessages","accessDenied","internalError","danger","payload","code","access_token","login","accessToken","expiresIn","expires_in","endpointId","endpoint_id","tokenType","token_type","scope","refreshImplicitToken","enumMap","baseActionTypes","prefix","name","extendedQuery","qs","stringify","force","localeId","currentLocale","ui_options","join","getLoginUrl","brandId","id","state","authState","display","implicit","isImplicit","prompt","btoa","Date","now","status","oAuthReady","url","resolve","window","location","href","RcModule","required","proxify"],"mappings":"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","sourcesContent":["import RcModule from 'ringcentral-integration/lib/RcModule';\nimport { prefixEnum } from 'ringcentral-integration/lib/Enum';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport authMessages from 'ringcentral-integration/modules/Auth/authMessages';\nimport required from 'ringcentral-integration/lib/required';\nimport qs from 'qs';\nimport url from 'url';\n\nimport parseCallbackUri from '../parseCallbackUri';\nimport baseActionTypes from './baseActionTypes';\nimport getOAuthBaseReducer from './getOAuthBaseReducer';\n\nconst DEFAULT_UI_OPTIONS = ['hide_remember_me', 'hide_tos'];\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Locale',\n    'Brand',\n    { dep: 'TabManager', optional: true },\n  ],\n})\nexport default class OAuthBase extends RcModule {\n  constructor({\n    alert,\n    auth,\n    brand,\n    locale,\n    tabManager,\n    redirectUri,\n    extralUIOptions = DEFAULT_UI_OPTIONS,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._alert = this::ensureExist(alert, 'alert');\n    this._auth = this::ensureExist(auth, 'auth');\n    this._brand = this::ensureExist(brand, 'brand');\n    this._locale = this::ensureExist(locale, 'locale');\n    this._tabManager = tabManager;\n    this._redirectUri = this::ensureExist(redirectUri, 'redirectUri');\n    this._reducer = getOAuthBaseReducer(this.actionTypes);\n    this._extralUIOptions = extralUIOptions;\n  }\n\n  get _actionTypes() {\n    return prefixEnum({ enumMap: baseActionTypes, prefix: this.name });\n  }\n\n  @required\n  get name() {\n    /* require implementation in descendent */\n    return null;\n  }\n\n  _onStateChange() {\n    if (\n      this.pending &&\n      this._auth.ready &&\n      this._locale.ready &&\n      this._alert.ready &&\n      (!this._tabManager || this._tabManager.ready)\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async _handleCallbackUri(callbackUri, refresh = false) {\n    try {\n      const query = parseCallbackUri(callbackUri);\n      if (refresh) {\n        await this._refreshWithCallbackQuery(query);\n      } else {\n        await this._loginWithCallbackQuery(query);\n      }\n    } catch (error) {\n      console.error('oauth error: ', error);\n      let message;\n      // Error handling standard in callback uri\n      // https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n      // Error handling standard in api response\n      // https://tools.ietf.org/html/rfc6749#section-4.1.2\n      switch (error.message) {\n        case 'invalid_request':\n        case 'unauthorized_client':\n        case 'access_denied':\n        case 'unsupported_response_type':\n        case 'invalid_scope':\n        case 'interaction_required':\n        case 'login_required':\n          message = authMessages.accessDenied;\n          break;\n        case 'server_error':\n        case 'temporarily_unavailable':\n        default:\n          message = authMessages.internalError;\n          break;\n      }\n      this._alert.danger({\n        message,\n        payload: error,\n      });\n    }\n  }\n\n  async _loginWithCallbackQuery(query) {\n    if (!(query.code || query.access_token)) {\n      return;\n    }\n    await this._auth.login({\n      code: query.code,\n      accessToken: query.access_token,\n      expiresIn: query.expires_in,\n      endpointId: query.endpoint_id,\n      redirectUri: this.redirectUri,\n      tokenType: query.token_type,\n      scope: query.scope,\n    });\n  }\n\n  async _refreshWithCallbackQuery(query) {\n    if (!query.access_token) {\n      return;\n    }\n    await this._auth.refreshImplicitToken({\n      tokenType: query.token_type,\n      accessToken: query.access_token,\n      expiresIn: query.expires_in,\n      endpointId: query.endpoint_id,\n    });\n  }\n\n  @required\n  async prepareOAuth() {}\n\n  @required\n  async destroyOAuth() {}\n\n  @required\n  openOAuthPage() {}\n\n  get oAuthUri() {\n    const extendedQuery = qs.stringify({\n      force: true,\n      localeId: this._locale.currentLocale,\n      ui_options: this._extralUIOptions.join(' '),\n    });\n    return `${this._auth.getLoginUrl({\n      redirectUri: this.redirectUri,\n      brandId: this._brand.id,\n      state: this.authState,\n      display: 'page',\n      implicit: this._auth.isImplicit,\n    })}&${extendedQuery}`;\n  }\n\n  get implictRefreshOAuthUri() {\n    return `${this._auth.getLoginUrl({\n      redirectUri: this.redirectUri,\n      brandId: this._brand.id,\n      state: this.authState,\n      display: 'page',\n      prompt: 'none',\n      implicit: this._auth.isImplicit,\n    })}`;\n  }\n\n  get authState() {\n    return btoa(Date.now());\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get oAuthReady() {\n    return this.state.oAuthReady;\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n}\n"],"file":"index.js"}