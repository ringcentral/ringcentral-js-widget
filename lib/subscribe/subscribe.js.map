{"version":3,"sources":["lib/subscribe/subscribe.ts"],"names":["subscribe","service","listener","Error","RcModuleV2","unsubscribe","_store","subscriptions","__subscriptions__","_unsubscribe","push","Object","assign"],"mappings":";;;;;;;;;;;AACA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAsBC,QAAtB,EAA+C;AAC/D,MAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIC,KAAJ,wCAAN;AACD;;AACD,MAAI,EAAEF,OAAO,YAAYG,oBAArB,CAAJ,EAAsC;AACpC,UAAM,IAAID,KAAJ,iDAAN;AACD;;AACD,MAAIE,WAAJ;;AACA,MAAIJ,OAAO,CAACK,MAAZ,EAAoB;AAAA;;AAClBD,IAAAA,WAAW,sBAAGJ,OAAO,CAACK,MAAX,oDAAG,gBAAgBN,SAAhB,CAA0BE,QAA1B,CAAd;AACD,GAFD,MAEO;AACL;AACA,QAAMK,aAAa,GAAGN,OAAO,CAACO,iBAAR,IAA6B,EAAnD;;AACA,QAAIC,YAAJ;;AACAF,IAAAA,aAAa,CAACG,IAAd,CAAmB,YAAM;AAAA;;AACvBD,MAAAA,YAAY,uBAAGR,OAAO,CAACK,MAAX,qDAAG,iBAAgBN,SAAhB,CAA0BE,QAA1B,CAAf;AACD,KAFD;;AAGAG,IAAAA,WAAW,GAAG;AAAA,aAAMI,YAAY,EAAlB;AAAA,KAAd;;AACAE,IAAAA,MAAM,CAACC,MAAP,CAAcX,OAAd,EAAuB;AACrBO,MAAAA,iBAAiB,EAAED;AADE,KAAvB;AAGD;;AACD,SAAOF,WAAP;AACD,CAvBD","sourcesContent":["import { Unsubscribe } from 'redux';\nimport { RcModuleV2 } from '../RcModule';\n\nconst subscribe = (service: RcModuleV2, listener: () => void) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`The 'listener' should be a function.`);\n  }\n  if (!(service instanceof RcModuleV2)) {\n    throw new Error(`The instance should be a RcModuleV2 instance.`);\n  }\n  let unsubscribe: Unsubscribe;\n  if (service._store) {\n    unsubscribe = service._store?.subscribe(listener)!;\n  } else {\n    // When constructing\n    const subscriptions = service.__subscriptions__ || [];\n    let _unsubscribe: Unsubscribe;\n    subscriptions.push(() => {\n      _unsubscribe = service._store?.subscribe(listener)!;\n    });\n    unsubscribe = () => _unsubscribe();\n    Object.assign(service, {\n      __subscriptions__: subscriptions,\n    });\n  }\n  return unsubscribe!;\n};\n\nexport { subscribe };\n"],"file":"subscribe.js"}