{"version":3,"sources":["lib/parseNumber.spec.ts"],"names":["describe","it","phonenumber","result","expect","toEqual","error","e","message"],"mappings":";;AAAA;;AAEAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BC,EAAAA,EAAE,CAAC,kEAAD,EAAqE,YAAM;AAC3E,QAAMC,WAAW,GAAG,YAApB;AACA,QAAMC,MAAM,GAAG,8BAAYD,WAAZ,CAAf;AACAE,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,OAAf,CAAuB,YAAvB;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,gEAAD,EAAmE,YAAM;AACzE,QAAMC,WAAW,GAAG,cAApB;AACA,QAAMC,MAAM,GAAG,8BAAYD,WAAZ,CAAf;AACAE,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,OAAf,CAAuB,YAAvB;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,8CAAD,EAAiD,YAAM;AACvD,QAAIK,KAAK,GAAG,IAAZ;;AACA,QAAI;AACF,UAAMJ,WAAW,GAAG,aAApB;AACA,oCAAYA,WAAZ;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACVD,MAAAA,KAAK,GAAGC,CAAR;AACD;;AACDH,IAAAA,MAAM,CAACE,KAAK,CAACE,OAAP,CAAN,CAAsBH,OAAtB,CAA8B,4BAA9B;AACD,GATC,CAAF;AAWAJ,EAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAM;AACrD,QAAIK,KAAK,GAAG,IAAZ;;AACA,QAAI;AACF,UAAMJ,WAAW,GAAG,EAApB;AACA,oCAAYA,WAAZ;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACVD,MAAAA,KAAK,GAAGC,CAAR;AACD;;AACDH,IAAAA,MAAM,CAACE,KAAK,CAACE,OAAP,CAAN,CAAsBH,OAAtB,CAA8B,4BAA9B;AACD,GATC,CAAF;AAUD,CAlCO,CAAR","sourcesContent":["import { parseNumber } from './parseNumber';\n\ndescribe('parseNumber', () => {\n  it('should return result number if phoneNumber is valid local number', () => {\n    const phonenumber = '6508498195';\n    const result = parseNumber(phonenumber);\n    expect(result).toEqual('6508498195');\n  });\n\n  it('should return local number if phoneNumber is valid e164 number', () => {\n    const phonenumber = '+16508498195';\n    const result = parseNumber(phonenumber);\n    expect(result).toEqual('6508498195');\n  });\n\n  it('should throw error if phoneNumber is invalid', () => {\n    let error = null;\n    try {\n      const phonenumber = '%^&64238478';\n      parseNumber(phonenumber);\n    } catch (e) {\n      error = e;\n    }\n    expect(error.message).toEqual('Error Type: INVALID_NUMBER');\n  });\n\n  it('should throw error if phoneNumber is empty', () => {\n    let error = null;\n    try {\n      const phonenumber = '';\n      parseNumber(phonenumber);\n    } catch (e) {\n      error = e;\n    }\n    expect(error.message).toEqual('Error Type: INVALID_NUMBER');\n  });\n});\n"],"file":"parseNumber.spec.js"}