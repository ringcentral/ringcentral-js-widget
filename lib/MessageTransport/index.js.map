{"version":3,"sources":["lib/MessageTransport/index.ts"],"names":["DEFAULT_DEVICE","addReceiver","receiveMessage","useCapture","window","addEventListener","createEmitter","sendTarget","message","targetOrigin","callback","postMessage","MessageTransport","targetWindow","origin","options","name","_onMessage","event","_origin","data","type","payload","requestId","result","error","_events","push","emit","response","_myRequests","has","get","reject","Error","resolve","request","_othersRequests","set","_addReceiver","_createEmitter","_targetWindow","Map","_postMessage","bind","on","uuid","v4","promise","Promise","timeout","setTimeout","_timeout","then","clearTimeout","TransportBase"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport TransportBase from '../TransportBase';\n\nconst DEFAULT_DEVICE = {\n  addReceiver(receiveMessage, { useCapture = false } = {}) {\n    window.addEventListener('message', receiveMessage, useCapture);\n  },\n  createEmitter(sendTarget) {\n    // Always specify an exact target origin, not *,\n    // when you use postMessage to send data to other windows.\n    // A malicious site can change the location of the window without your knowledge,\n    // and therefore it can intercept the data sent using postMessage.\n    return (message, { targetOrigin = '*', callback } = {}) => {\n      sendTarget.postMessage(message, targetOrigin);\n      if (typeof callback === 'function') callback();\n    };\n  },\n};\nexport default class MessageTransport extends TransportBase {\n  constructor({\n    addReceiver = DEFAULT_DEVICE.addReceiver,\n    createEmitter = DEFAULT_DEVICE.createEmitter,\n    targetWindow = window,\n    origin,\n    ...options\n  }) {\n    super({\n      ...options,\n      name: 'MessageTransport',\n    });\n    this._addReceiver = addReceiver;\n    this._createEmitter = createEmitter;\n    this._targetWindow = targetWindow;\n    this._origin = origin;\n    this._myRequests = new Map();\n    this._othersRequests = new Map();\n    this._postMessage = this._createEmitter(this._targetWindow);\n    this._addReceiver(this._onMessage.bind(this));\n  }\n\n  _onMessage = (event) => {\n    // TODO: confirm if the message is from iframe\n    if (this._origin && event.origin !== this._origin) {\n      return;\n    }\n    const { type, payload, requestId, result, error } = event.data;\n    switch (type) {\n      case this._events.push:\n        if (payload) {\n          this.emit(this._events.push, payload);\n        }\n        break;\n      case this._events.response:\n        if (requestId && this._myRequests.has(requestId)) {\n          if (error) {\n            this._myRequests.get(requestId).reject(new Error(error));\n          } else {\n            this._myRequests.get(requestId).resolve(result);\n          }\n        }\n        break;\n      case this._events.request:\n        if (requestId && payload) {\n          this._othersRequests.set(requestId, payload);\n          this.emit(this._events.request, {\n            requestId,\n            payload,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  addListeners({ push, response, request }) {\n    if (typeof push === 'function') {\n      this.on(this._events.push, push);\n    }\n    if (typeof response === 'function') {\n      this.on(this._events.response, response);\n    }\n    if (typeof request === 'function') {\n      this.on(this._events.request, request);\n    }\n  }\n\n  async request<T = any>({ payload }) {\n    const requestId = uuid.v4();\n    let promise = new Promise<T>((resolve, reject) => {\n      this._myRequests.set(requestId, {\n        resolve,\n        reject,\n      });\n      this._postMessage({\n        type: this._events.request,\n        requestId,\n        payload,\n      });\n    });\n    let timeout = setTimeout(() => {\n      timeout = null;\n      this._myRequests.get(requestId).reject(new Error(this._events.timeout));\n    }, this._timeout);\n    promise = promise\n      .then((result) => {\n        if (timeout) clearTimeout(timeout);\n        this._myRequests.delete(requestId);\n        return Promise.resolve(result);\n      })\n      .catch((error) => {\n        if (timeout) clearTimeout(timeout);\n        this._myRequests.delete(requestId);\n        return Promise.reject(error);\n      });\n    return promise;\n  }\n\n  response({ requestId, result, error }) {\n    const request = this._othersRequests.get(requestId);\n    if (request) {\n      this._othersRequests.delete(requestId);\n      if (error instanceof Error) {\n        error = error.message;\n      }\n      this._postMessage({\n        type: this._events.response,\n        requestId,\n        result,\n        error,\n      });\n    }\n  }\n}\n"],"file":"index.js"}