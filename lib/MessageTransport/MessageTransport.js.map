{"version":3,"sources":["lib/MessageTransport/MessageTransport.ts"],"names":["DEFAULT_DEVICE","addReceiver","receiveMessage","useCapture","window","addEventListener","createEmitter","sendTarget","message","targetOrigin","callback","postMessage","MessageTransport","targetWindow","origin","options","name","_addReceiver","_createEmitter","_targetWindow","_origin","_myRequests","_othersRequests","_postMessage","_onMessage","event","data","type","payload","requestId","result","error","_events","push","emit","response","has","get","reject","Error","resolve","request","set","Map","bind","on","uuid","v4","promise","Promise","timeout","setTimeout","JSON","stringify","_timeout","then","clearTimeout","TransportBase"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\n\nimport TransportBase from '../TransportBase';\nimport { TransportBaseProps } from '../TransportBase/TransportBase';\nimport { TransportResponseData } from '../TransportInteractionBase';\n\ntype MessageTransportListener<T = any, K = {}> = (params: {\n  requestId: string;\n  payload: MessageTransportPayload<T, K>;\n}) => any;\n\nexport type MessageTransportPayload<T = any, K = {}> = {\n  requestType: string;\n  data?: T;\n} & K;\n\nconst DEFAULT_DEVICE = {\n  addReceiver(receiveMessage, { useCapture = false } = {}) {\n    window.addEventListener('message', receiveMessage, useCapture);\n  },\n  createEmitter(sendTarget) {\n    // Always specify an exact target origin, not *,\n    // when you use postMessage to send data to other windows.\n    // A malicious site can change the location of the window without your knowledge,\n    // and therefore it can intercept the data sent using postMessage.\n    return (message, { targetOrigin = '*', callback } = {} as any) => {\n      sendTarget.postMessage(message, targetOrigin);\n      if (typeof callback === 'function') callback();\n    };\n  },\n};\nexport interface MessageTransportResponse {\n  requestId: string;\n  result: any;\n  error?: Error | string;\n}\n\ntype AddReceiver = typeof DEFAULT_DEVICE.addReceiver;\ntype CreateEmitter = typeof DEFAULT_DEVICE.createEmitter;\n\nexport interface MessageTransportProps {\n  addReceiver?: AddReceiver;\n  createEmitter?: CreateEmitter;\n  targetWindow: Window;\n  origin?: string;\n}\n\ntype MessageTransportRequestData<T = any, K = {}> = {\n  payload: MessageTransportPayload<T, K>;\n};\n\nexport default class MessageTransport extends TransportBase {\n  private _addReceiver: AddReceiver;\n  private _createEmitter: CreateEmitter;\n  private _targetWindow: Window;\n  private _origin: string;\n  private _myRequests: Map<any, any>;\n  private _othersRequests: Map<any, any>;\n  private _postMessage: any;\n\n  constructor({\n    addReceiver = DEFAULT_DEVICE.addReceiver,\n    createEmitter = DEFAULT_DEVICE.createEmitter,\n    targetWindow = window,\n    origin,\n    ...options\n  }: MessageTransportProps & Omit<TransportBaseProps, 'name'>) {\n    super({\n      ...options,\n      name: 'MessageTransport',\n    });\n    this._addReceiver = addReceiver;\n    this._createEmitter = createEmitter;\n    this._targetWindow = targetWindow;\n    this._origin = origin;\n    this._myRequests = new Map();\n    this._othersRequests = new Map();\n    this._postMessage = this._createEmitter(this._targetWindow);\n    this._addReceiver(this._onMessage.bind(this));\n  }\n\n  _onMessage = (event) => {\n    // TODO: confirm if the message is from iframe\n    if (this._origin && event.origin !== this._origin) {\n      return;\n    }\n    const { type, payload, requestId, result, error } = event.data;\n    switch (type) {\n      case this._events.push:\n        if (payload) {\n          this.emit(this._events.push, payload);\n        }\n        break;\n      case this._events.response:\n        if (requestId && this._myRequests.has(requestId)) {\n          if (error) {\n            this._myRequests.get(requestId).reject(new Error(error));\n          } else {\n            this._myRequests.get(requestId).resolve(result);\n          }\n        }\n        break;\n      case this._events.request:\n        if (requestId && payload) {\n          this._othersRequests.set(requestId, payload);\n          this.emit(this._events.request, {\n            requestId,\n            payload,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  addListeners<T = any, K = {}>({\n    push,\n    response,\n    request,\n  }: {\n    push?: MessageTransportListener<T, K>;\n    response?: MessageTransportListener<T, K>;\n    request?: MessageTransportListener<T, K>;\n  }) {\n    if (typeof push === 'function') {\n      this.on(this._events.push, push);\n    }\n    if (typeof response === 'function') {\n      this.on(this._events.response, response);\n    }\n    if (typeof request === 'function') {\n      this.on(this._events.request, request);\n    }\n  }\n\n  /** T is request data, K is response data */\n  async request<T = any, K = any>({\n    payload,\n  }: MessageTransportRequestData<T>): Promise<K> {\n    const requestId = uuid.v4();\n\n    const promise = new Promise<K>((resolve, reject) => {\n      this._myRequests.set(requestId, {\n        resolve,\n        reject,\n      });\n      this._postMessage({\n        type: this._events.request,\n        requestId,\n        payload,\n      });\n    });\n\n    let timeout = setTimeout(() => {\n      timeout = null;\n      this._myRequests\n        .get(requestId)\n        .reject(\n          new Error(`${this._events.timeout}: ${JSON.stringify(payload)}`),\n        );\n    }, this._timeout);\n\n    return promise\n      .then((result) => {\n        if (timeout) clearTimeout(timeout);\n        this._myRequests.delete(requestId);\n        return Promise.resolve(result);\n      })\n      .catch((error) => {\n        if (timeout) clearTimeout(timeout);\n        this._myRequests.delete(requestId);\n        return Promise.reject(error);\n      });\n  }\n\n  response({\n    requestId,\n    result,\n    error,\n  }: MessageTransportResponse): TransportResponseData {\n    const request = this._othersRequests.get(requestId);\n\n    if (request) {\n      this._othersRequests.delete(requestId);\n      this._postMessage({\n        type: this._events.response,\n        requestId,\n        result,\n        error: error instanceof Error ? error.message : error,\n      });\n    }\n\n    return {\n      result,\n      error,\n      requestId,\n    };\n  }\n}\n"],"file":"MessageTransport.js"}