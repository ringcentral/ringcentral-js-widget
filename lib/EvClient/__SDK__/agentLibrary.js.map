{"version":3,"sources":["lib/EvClient/__SDK__/agentLibrary.js"],"names":["C","STATUS_NULL","STATUS_NEW","STATUS_CONNECTING","STATUS_CONNECTED","STATUS_COMPLETED","CFSimpleSip","options","media","remote","video","audio","Error","browserUa","window","navigator","userAgent","toLowerCase","isSafari","isFirefox","indexOf","sessionDescriptionHandlerFactoryOptions","modifiers","SIP","Web","Modifiers","stripG722","alwaysAcquireMediaFirst","addMidLines","ua","uri","anonymous","UA","authorizationUser","password","displayName","userAgentString","USER_AGENT","register","registerExpires","transportOptions","traceSip","wsServers","maxReconnectionAttempts","dtmfType","RTP","state","logger","getLogger","on","emit","bind","session","warn","reject","setupSession","message","prototype","Object","create","EventEmitter","call","destination","checkRegistration","autoplay","local","volume","invite","sessionDescriptionHandlerOptions","constraints","answer","accept","hangup","cancel","bye","hold","local_hold","mute","log","unhold","unmute","toggleMute","sendDTMF","tone","dtmf","isRegistered","setupRemoteMedia","pc","sessionDescriptionHandler","peerConnection","remoteStream","getReceivers","MediaStream","forEach","receiver","track","addTrack","getRemoteStreams","srcObject","play","setupLocalMedia","localStream","getSenders","sender","kind","getLocalStreams","cleanupMedia","pause","onProgress","onAccepted","onEnded","onFailed","destroyMedia","close","enabled","stream","getAudioTracks","getVideoTracks","global","AddSessionNotification","processResponse","notification","formattedResponse","utils","buildDefaultResponse","model","UIModel","getInstance","notif","ui_notification","sessionAgentId","getText","incrementTotalCalls","agentSettings","agentId","currentCall","sessionId","monitorAgentId","sessionType","allowControl","uii","isMonitoring","monitoringType","isBargeInMonitor","notCurrentAgent","notSessionOne","shouldTrackSession","transferSessions","session_id","onCall","status","phone","sessionLabel","monitoring","AdminDebugEmailNotification","emailTo","requestedBy","DialGroupChangeNotification","origLoginType","loginRequest","loginType","newDgId","dialGroupChangeNotification","dialGroupId","detail","dialGroupName","dialGroupDesc","DialGroupChangePendingNotification","pendingDialGroupChange","parseInt","update_from_adminui","updateDGFromAdminUI","updateFromAdminUI","DirectAgentTransferNotification","ani","dnis","sourceType","sourceId","sourceName","voicemailUrl","DropSessionNotification","transfer","logMessage","LOG_LEVELS","DEBUG","transferEnd","EarlyUiiNotification","EndCallNotification","libInstance","endCallNotification","duration","termParty","termReason","callState","onManualOutdial","loginAgent","queueIds","configRequest","chatIds","skillProfileId","dialDest","outdialDispositions","dispositions","length","surveyPopType","pingIntervalId","setInterval","sendPingCallMessage","callDts","recordingUrl","dispositionTimeout","GatesChangeNotification","newAssignedGates","availableQueues","inboundSettings","assignedGateIds","split","a","id","foundGate","findObjById","push","gate","gateId","gateName","gateDesc","defaultDestOverride","isAgentSelectable","queues","JSON","parse","stringify","GenericNotification","messageCode","NewCallNotification","newCall","queueDts","queueTime","callType","appUrl","allowHold","allowTransfer","allowManualInternationalTransfer","allowDirectAgentTransfer","allowHangup","allowRequeue","allowEndCallForEveryone","scriptId","scriptVersion","surveyId","requeueType","hangupOnDisposition","queue","processResponseCollection","agentRecording","requeueShortcuts","baggage","surveyResponse","scriptResponse","transferPhoneBook","lead","extra_data","extraDatas","extraData","key","e","console","customLabels","notifLabels","result","savedModel","script_result","results","keys","idx","value","err","entrys","disposition","isCampaign","d","disp","isComplete","requireNote","saveSurvey","xfer","isDefault","callTokens","buildCallTokenMap","auxPhone","transferNumber","agentDailyStats","currCallTime","tokens","generic_key_value_pairs","keyValuePairs","keyValuePairsStr","parseKeyValuePairsFromString","keyValue","number","name","description","any","error","firstName","lastName","externalAgentId","agentType","email","username","PendingChatDispNotification","PendingDispNotification","PreviewLeadStateNotification","response","messageId","requestId","leadState","callback","ReverseMatchNotification","TcpaSafeLeadStateNotification","AckRequest","audioType","resp","ui_response","type","WARN","AgentStateRequest","agentState","agentAuxState","toUpperCase","formatJSON","msg","ui_request","MESSAGE_TYPES","AGENT_STATE","getMessageId","response_to","agent_id","agent_aux_state","prevState","currState","prevAuxState","currAuxState","previousState","currentState","previousAuxState","currentAuxState","prevStateStr","currStateStr","currentStateLabel","agentStatePacket","AuthenticateRequest","config","platformId","rcAccessToken","tokenType","engageAccessToken","authType","sendHttpRequest","authenticateRequest","AUTHENTICATE_TYPES","USERNAME_PASSWORD","_buildHttpRequest","RC_TOKEN","rcTokenType","ENGAGE_TOKEN","authenticatePacket","accessToken","refreshToken","socketUrl","iqUrl","socketPort","port","agents","agentDetails","path","queryParams","baseUrl","authHost","baseAuthUri","params","headers","errorMsg","HttpService","httpPost","then","authenticateResponse","fireCallback","libraryInstance","CALLBACK_TYPES","AUTHENTICATE","errResponse","errMsg","toString","httpGet","BargeInRequest","BARGE_IN","audio_state","monitor_agent_id","CallNotesRequest","notes","CALL_NOTES","CallbackCancelRequest","leadId","CALLBACK_CANCEL","lead_id","CallbacksPendingRequest","CALLBACK_PENDING","leadsRaw","leads","Array","isArray","l","leadRaw","parseLead","pendingCallbacks","auxData1","auxData2","auxData3","auxData4","auxData5","dialTime","externId","midName","sufix","title","address1","address2","city","zip","gateKeeper","CampaignDispositionsRequest","campaignId","CAMPAIGN_DISPOSITIONS","campaign_id","outboundSettings","campaignDispositions","ChatStateRequest","chatState","CHAT_STATE","currentChatState","chatStatePacket","XferColdRequest","callerId","sipHeaders","countryId","fields","i","fieldObj","XFER_COLD","dial_dest","caller_id","country_id","xfer_header","DirectAgentTransfer","targetAgentId","transferType","DIRECT_AGENT_TRANSFER","target_agent_id","transfer_type","DirectAgentTransferList","DIRECT_AGENT_TRANSFER_LIST","DispositionRequest","dispId","callbackDTS","contactForwardNumber","survey","OUTDIAL_DISPOSITION","disposition_id","call_back","call_back_DTS","contact_forwarding","outbound_externid","pending_request_id","INBOUND_DISPOSITION","obj","leadField","DispositionManualPassRequest","manual_disp","request_key","extern_id","ExtensionPresenceRequest","getExtensionPresenceInfo","extensionIds","_getExtensionPresenceInfo","extensionPresenceResponse","baseApiUri","extensionPresenceRequest","EXTENSION_PRESENCE","HangupRequest","resetPendingDisp","HANGUP","cancel_pending_disp","HoldRequest","holdState","HOLD","hold_state","currUII","onHold","LeadHistoryRequest","LEAD_HISTORY","histResponse","history","leadHistory","LeadInsertRequest","dataObj","agent_reserved","dialable","LEAD_INSERT","lead_phone","call_back_dts","callback_dts","first_name","mid_name","last_name","suffix","gate_keeper","aux_data1","aux_data2","aux_data3","aux_data4","aux_data5","LeadUpdateRequest","leadPhone","_formatBaggage","LEAD_UPDATE","bag","LoginRequest","isForce","updateLogin","checkExistingIds","chatSettings","availableChatQueues","availableSkillProfiles","availableOutdialGroups","isLoggedIn","validateDest","LOGIN","access_token","hash_code","connectionSettings","hashCode","allow_multisocket","applicationSettings","allowMultiSocket","login_type","update_login","outdial_group_id","skill_profile_id","agent_platform_id","is_force","gates","gate_id","chat_queues","chat_queue_id","Lib","updateLoginMode","INFO","loginPacket","loginDTS","Date","reconnect","agentPermissions","allowLeadSearch","accountId","corporateDirectory","isMultiSocket","broadcastChannelHelper","init","setDialGroupSettings","setGateSettings","setChatQueueSettings","setSkillProfileSettings","requireFetchedLeadsCalled","allowPreviewLeadFilters","isOnCall","activeCallUii","isPendingDisp","mockEndCallPacket","term_reason","processNotification","isOffhook","offHookTermPacket","agentProcessOffhookCallback","offhookTerm","waitingForAddSession","pendingDisp","activeAgentUiSessions","getTransferSessions","activeAgentSessions","active_call_sessions","call_session_id","map","sessionObj","transferSession","guid","dataStore","save","scriptSettings","outdialGroups","outdialGroup","g","group","progressiveEnabled","skillProfile","skillProfiles","s","profile","responseId","profileId","selectedGateIds","selectedGates","gateIds","gIdx","chatQueues","selectedChatQueueIds","selectedChatQueues","cQueues","chatQueueIds","c","cIdx","chatQueue","chatQueueId","LoginPhase1Request","LOGIN_PHASE_1","isLoggedInIS","loginPhase1Packet","isSso","isTcpaSafeMode","pciEnabled","alias","maxBreakTime","maxLunchTime","realAgentType","defaultLoginDest","altDefaultLoginDest","initLoginState","initLoginStateLabel","outboundManualDefaultRingtime","isOutboundPrepay","phoneLoginPin","agentPassword","allowCallControl","allowChat","showLeadHistory","allowManualOutboundGates","allowOffHook","allowManualCalls","allowManualPass","allowManualIntlCalls","allowLoginUpdates","allowInbound","allowOutbound","allowBlended","allowLoginControl","allowCrossQueueRequeue","disableSupervisorMonitoring","allowAutoAnswer","defaultAutoAnswerOn","allowHistoricalDialing","allowAgentStats","allowCampaignStats","allowGateStats","allowChatStats","enableFolderMode","enableTaskMode","defaultDialGroup","allow_lead_inserts","insert_campaigns","campaign","allowLeadInserts","availableCampaigns","_processCampaigns","_processChatQueueDnis","availableChatRequeueQueues","availableRequeueQueues","availableChatRooms","availableScripts","callerIds","availableAgentStates","availableCountries","insertCampaigns","dialGroups","dg","hciType","hciEnabled","hciClicker","campaigns","campaignsRaw","_processCampaign","campaignRaw","allowLeadUpdates","allowLeadUpdatesByCampaign","labelArray","p","label","replace","campaignName","surveyName","rawQueues","login_chat_queues","chat_queue","rawQueue","j","rq","LogoutRequest","LOGOUT","MultiSocketRequest","LOGIN_MULTISOCKET","get","OffhookInitRequest","OFFHOOK_INIT","offhookInitPacket","softphoneSettings","attemptingSoftphoneReconnect","OffhookTermRequest","OFFHOOK_TERM","data","wasMonitoring","offhookTermPacket","startDts","endDts","OneToOneOutdialRequest","ringTime","ONE_TO_ONE_OUTDIAL","ring_time","OneToOneOutdialCancelRequest","ONE_TO_ONE_OUTDIAL_CANCEL","PauseRecordRequest","record","pauseTime","PAUSE_RECORD","PingCallRequest","PING_CALL","PreviewDialRequest","action","searchFields","PREVIEW_DIAL","search_fields","dialer_request","requestKey","destinations","notifLead","filter","destLead","callbacks","isInsert","previewDialLeads","RecordRequest","RECORD","RequeueRequest","queueId","skillId","maintain","REQUEUE","gate_number","skill_id","maintain_agent","ScriptConfigRequest","version","SCRIPT_CONFIG","script_id","json","loadedScripts","ScriptResultRequest","jsonResult","SCRIPT_RESULT","json_result","SearchDirectoryRequest","searchDirectory","searchString","searchDirectoryRequest","_searchDirectory","filteredDirectory","searchDirResponse","SEARCH_DIR","StatsRequest","STATS","TcpaSafeRequest","TCPA_SAFE","tcpaSafeLeads","UpdateDialDestinationRequest","isSoftphoneError","UPDATE_DIAL_DESTINATION","log_softphone_error","XferWarmRequest","XFER_WARM","XferWarmCancelRequest","XFER_WARM_CANCEL","WebRTCRequest","getSipRegistrationInfo","_getSipRegistrationInfo","sipInfo","webRTCResponse","WEBRTC_INFO","ChatAgentEndRequest","CHAT_AGENT_END","ChatAliasRequest","CHAT_ALIAS","ChatDispositionRequest","dispositionId","sendAcknowlegement","CHAT_DISPOSITION","do_ack","ChatListRequest","CHAT_LIST","chatListResponse","chatList","ChatMessageRequest","whisper","CHAT_MESSAGE","dts","trim","dtsDate","from","dequeueAgentId","mediaLinks","ChatPresentedResponseRequest","responseReason","CHAT_PRESENTED_RESPONSE","response_reason","ChatRequeueRequest","maintainAgent","CHAT_REQUEUE","ChatRoomRequest","roomType","roomId","agentOne","agentTwo","CHAT_ROOM","agent_one","agent_two","room_id","ChatRoomStateRequest","chatAlias","ChatSendRequest","CHAT_SEND","senderId","roomName","dynamicCreate","ChatTypingRequest","CHAT_TYPING","LeaveChatRequest","LEAVE_CHAT","ChatManualSmsRequest","CHAT_MANUAL_SMS","MonitorChatRequest","MONITOR_CHAT","StopMonitorChatRequest","STOP_MONITOR_CHAT","monitoredAgentId","SupervisorListRequest","SUPERVISOR_LIST","tempList","supervisors","sup","fname","lname","uname","ChatClientReconnectNotification","AddChatSessionNotification","transcript","ChatActiveNotification","ChatCancelledNotification","ChatInactiveNotification","ChatPresentedNotification","channelType","taskId","chatQueueName","allowAccept","ChatTypingNotification","pendingMessage","LoadMediaNotification","newTask","operationId","chatRequeueType","idleTimeout","chatDispositions","isSuccess","buildTaskTokenMap","NewChatNotification","newChat","preChatData","messages","ERROR","t","buildChatTokenMap","prop","hasOwnProperty","AgentStats","stats","ui_stats","agent","agentStats","agentLoginType","avgTalkTime","calls","isDequeueAgent","defaultRoute","queueDesc","queueName","loginDuration","offHook","pendingDispTime","presented","rna","stateDuration","skillProfileName","totalTalkTime","utilization","callDuration","AgentDailyStats","totalLoginSessions","totalChatsHandled","totalCallsHandled","totalPreviewDials","totalManualDials","totalRna","totalSuccessDispositions","totalLoginTime","totalOffhookTime","CampaignStats","totals","campRaw","active","abandon","available","busy","complete","fax","intercept","machine","noanswer","pending","ready","staffed","totalConnects","campaignStats","ChatQueueStats","chatQueueStats","QueueStats","gateRaw","asa","avgAbandon","avgQueue","avgTalk","deflected","inQueue","longCall","longestInQueue","routing","shortAbandon","shortCall","sla","slaPass","slaFail","tAbandonTime","tQueueTime","tSpeedOfAnswer","queueStats","instance","pendingNewCallSessions","statsIntervalId","pingStatIntervalId","agentDailyIntervalId","reconnectIntervalId","location","origin","socketProtocol","chatAliasRequest","chatRoomRequest","chatSendRequest","supervisorListRequest","chatRoomStateRequest","multiSocketRequest","LocalStorageService","chatActiveNotification","chatInactiveNotification","chatDispositionRequest","chatMessageRequest","chatPresentedNotification","chatPresentedRequest","chatRequeueRequest","chatTypingNotification","chatTypingRequest","newChatNotification","loadMediaNotification","chatClientReconnectNotification","agentStateRequest","chatStateRequest","ackRequest","bargeInRequest","callNotesRequest","callbacksPendingRequest","campaignDispositionsRequest","coldXferRequest","dispositionRequest","dispositionManualPassRequest","hangupRequest","holdRequest","leadHistoryRequest","leadInsertRequest","leadUpdateRequest","logoutRequest","loginPhase1Request","offhookInitRequest","offhookTermRequest","oneToOneOutdialRequest","oneToOneOutdialCancelRequest","pauseRecordRequest","pingCallRequest","previewDialRequest","reconnectRequest","recordRequest","requeueRequest","statsRequest","tcpaSafeRequest","warmXferRequest","warmXferCancelRequest","chatListRequest","directAgentTransferListRequest","directAgentTransferRequest","webRTCRequest","currentCallPacket","addSessionNotification","dialGroupChangePendingNotification","dropSessionNotification","earlyUiiNotification","gatesChangeNotification","genericNotification","newCallNotification","agentStatsPacket","agentDailyStatsPacket","queueStatsPacket","campaignStatsPacket","chatQueueStatsPacket","socketConnected","socketDest","dialDestType","totalCalls","webRtc","muteActive","registerPending","maintainOH","autoStartOH","sipPassword","sipDialDest","rcAccountId","records","resetInstance","localStorage","prefix","setItem","getItem","remove","removeItem","requestChannel","responseChannel","currentCallMessageId","currentCallRequestCallback","self","BroadcastChannel","onmessage","_sendCurrentCall","_processCurrentCallResponse","destroy","requestCurrentCall","fn","Math","random","postMessage","apiBase","XMLHttpRequest","encodeURIComponent","that","Promise","resolve","req","_getUriEncodedParams","open","_addHeaders","_addCompletionListeners","send","_getUriEncodedBody","_isObj","setRequestHeader","addEventListener","responseText","contentType","body","join","NewCallUtils","setupAddSessionCallback","sessionUii","_delayedAddSessionCallback","processSessionsForCall","delayedSessions","addSessionNotif","addResponse","ADD_SESSION","logLevel","_db","transaction","store","objectStore","request","add","sendMessage","msgObj","socket","readyState","_requests","shift","_queuedMsgs","dest","slice","ON_MESSAGE","current_state","stateChangeResponse","responseTo","findRequestById","audioState","SILENT_MONITOR","COACH_CALL","campaignDispsResposne","callNotes","insert","update","loginPhase1Response","loginResponse","offhook","initResponse","pauseRequest","pauseRec","requeue","supervisorList","script","scriptConfigRequest","coldXfer","warmXfer","warmXferCancel","ACK","ack","chatStateResponse","agentList","agentListResponse","agentXfer","agentXferResponse","DIAL_GROUP_CHANGE","dgChangeNotif","changeResponse","DIAL_GROUP_CHANGE_PENDING","dgChangePendNotif","pendResponse","DROP_SESSION","dropSesNotif","dropSesResponse","EARLY_UII","earlyUiiNotif","earlyUiiResponse","END_CALL","endCallNotif","endCallResponse","GATES_CHANGE","gateChangeNotif","gateChangeResponse","GENERIC","genericNotif","generic","callbackFnName","findCallbackBasedOnMessageType","GENERIC_NOTIFICATION","clearInterval","NEW_CALL","newCallNotif","newCallResponse","termResponse","PREVIEW_LEAD_STATE","leadStateNotif","leadStateResponse","PENDING_DISP","pendingDispNotif","pendingDispResponse","PENDING_CHAT_DISP","pendingChatDispNotif","pendingChatDispResponse","REVERSE_MATCH","reverseMatchNotif","reverseMatchResponse","TCPA_SAFE_LEAD_STATE","leadStateTcpaNotif","leadStateTcpaResponse","CHAT_ACTIVE","activeNotif","activeResponse","CHAT_INACTIVE","inactiveNotif","inactiveResponse","CHAT_CLIENT_RECONNECT","reconnectNotif","reconnectResponse","CHAT_PRESENTED","presentedNotif","presentedResponse","typingNotif","typingResponse","CHAT_NEW","newChatNotif","newChatResponse","chatMessage","chatMessageResponse","CHAT_CANCELLED","chatCancelled","chatCancelledResponse","CHAT_ADD_SESSION","addChatSession","addChatSessionResponse","stopChatMonitor","stopChatMonitorResponse","CHAT_STOP_MONITOR","DIRECT_AGENT_ROUTE","directAgentTransfer","directAgentTransferResponse","DIRECT_AGENT_TRANSFER_NOTIF","AGENT_DEBUG_EMAIL","emailNotif","emailNotifResp","AGENT_DEBUG_EMAIL_NOTIF","CHAT_LOAD_MEDIA","loadMediaNotif","loadMediaResp","CHAT_LOAD_MEDIA_NOTIF","logoutNotification","logoutNotifResponse","closeSocket","processDialerResponse","PREVIEW_DIAL_ID","pdRequest","dialResponse","LEAD_SEARCH","PREVIEW_FETCH","TCPA_SAFE_ID","tcpaRequest","tcpaResponse","SAFE_MODE_SEARCH","SAFE_MODE_FETCH","processRequest","chatSendResponse","CHAT","CHAT_ROOM_STATE","chatRoomStateResponse","processStats","STATS_AGENT","STATS_AGENT_DAILY","onAgentDailyStats","STATS_CAMPAIGN","STATS_QUEUE","STATS_CHAT","chatStats","STATS_CHAT_QUEUE","groupProp","itemProp","textName","itemsRaw","_processItems","escapeSoftphoneUsername","str","_processItem","itemRaw","_tryConvertValueToBoolean","item","formattedKey","_convertToFormattedKey","_convertKeyForCollection","match","substr","setCallback","s4","floor","substring","objArray","idArray","idProperty","availIds","removeIds","o","r","splice","propName","isValid","isNum","test","messageType","det","stat","val","getAttribute","outerDelimiter","innerDelimiter","arr","reduce","dict","pair","sendStatsRequestMessage","sendPingRequestMessage","curLoginTime","Number","curOffhookTime","curTalkTime","curCallTime","getDialDestination","currentServer","domain","refreshAccessToken","loginHashcode","CLOSE_SOCKET","CONFIG","GENERIC_RESPONSE","LOG_CONSOLE_RESULTS","LOG_RESULTS","OPEN_SOCKET","SIP_CONNECTED","SIP_DIAL_DEST_CHANGED","SIP_ENDED","SIP_MUTE","SIP_REGISTERED","SIP_REGISTRATION_FAILED","SIP_RINGING","SIP_SWITCH_REGISTRAR","SIP_UNMUTE","SIP_UNREGISTERED","SETUP_WEB_RTC_SERVER","SIP_INIT","SIP_ANSWER","SIP_REJECT","SIP_REGISTER","SIP_HANGUP","SIP_SEND_DTMF","SIP_TOGGLE_MUTE","SOFTPHONE_RESET_SESSION","SWITCH_SOFTPHONE_REGISTRAR","initAgentLibraryCore","context","AgentLibrary","_isReconnect","openLogger","openConsoleLogger","isSecureSocket","setCallbacks","callbackMap","property","getCallbacks","getCallback","getSocket","getAuthenticateRequest","getLoginRequest","getMultiSocketRequest","getAgentConfigRequest","getLogoutRequest","getAgentDailyStats","getCallTokens","getAgentStateRequest","getOffhookInitRequest","getOffhookTermRequest","getHangupRequest","getPreviewDialRequest","getTcpaSafeRequest","getManualOutdialRequest","getManualOutdialCancelRequest","getCallNotesRequest","getCampaignDispositionsRequest","getDispositionRequest","getDispositionManualPassRequest","getWarmTransferRequest","getColdTransferRequest","getWarmTransferCancelRequest","getRequeueRequest","getBargeInRequest","getHoldRequest","getPauseRecordRequest","getRecordRequest","getChatPresentedRequest","getChatDispositionRequest","getChatMessageRequest","getChatRequeueRequest","getChatTypingRequest","getAgentStatsPacket","getAgentDailyStatsPacket","getQueueStatsPacket","getChatQueueStatsPacket","getCampaignStatsPacket","getAgentConfigPacket","getLoginPacket","getAgentStatePacket","getCurrentCallPacket","getOffhookInitPacket","getOffhookTermPacket","getChatAgentEnd","chatAgentEnd","getWebRTCRequest","getChatListRequest","getSearchDirectoryRequest","getDialGroupChangeNotification","getDialGroupChangePendingNotification","getEndCallNotification","getGatesChangeNotification","getGenericNotification","getNewCallNotification","getCurrentCall","getAddSessionNotification","getDropSessionNotification","getEarlyUiiNotification","getChatActiveNotification","getChatInactiveNotification","getChatClientReconnectNotification","getChatPresentedNotification","getChatTypingNotification","getNewChatNotification","getLoadMediaNotification","getApplicationSettings","getSoftphoneSettings","getChatSettings","getConnectionSettings","getInboundSettings","getOutboundSettings","getAgentSettings","getPendingSessions","getAgentPermissions","getAgentStats","getQueueStats","getChatQueueStats","getCampaignStats","getFilteredDirectory","getExtensionPresenceResponse","getExtensionPresenceRequest","_utils","_NewCallUtils","_HttpService","_getUIModel","initAgentLibrarySocket","openSocket","_getNewAccessToken","_buildSocketDest","_initSocket","socketOpened","currDts","threeMins","queuedMsg","unshift","getTime","WebSocket","onopen","onerror","evt","onclose","initAgentLibraryAgent","authenticateAgentWithUsernamePassword","authenticateAgentWithRcAccessToken","authenticateAgentWithEngageAccessToken","getAgentConfig","getWebRtcInfo","_setUpAndSendLogin","multiLoginRequest","logoutAgent","requestLogoutAgent","agentToLogout","requestMessage","isSupervisor","setAgentState","offhookInit","getPendingCallbacks","cancelCallback","callbackCancelRequest","requestStats","_terminatePing","terminateStats","_requestPing","updateDialDestination","updateDialDestinationRequest","getRefreshedToken","initAgentLibraryCall","bargeIn","coach","internationalColdXfer","dispositionCall","dispositionManualPass","getCampaignDispositions","holdSession","manualOutdial","manualOutdialCancel","pauseRecord","previewDial","previewFetch","searchLeads","setCallNotes","monitor","requeueCall","safeModeCall","safeModeFetch","safeSearchLeads","internationalWarmXfer","corporateDirWarmXfer","corporateDirColdXfer","getScript","savedScript","saveScriptResult","scriptResultRequest","directAgentXferList","warmDirectAgentXfer","coldDirectAgentXfer","cancelDirectAgentXfer","voicemailDirectAgentXfer","rejectDirectAgentXfer","initAgentLibraryLead","leadInsert","leadUpdate","initAgentLibraryChat","setChatAlias","publicChatRoom","privateChatRoom","sendChat","getSupervisors","chatPresentedResponse","chatWhisper","chatDisposition","chatRequeue","chatTyping","monitorAgentChats","monitorChatRequest","stopMonitoringChatsByAgent","stopMonitorChatRequest","stopMonitoringAllAgentChats","leaveChat","leaveChatRequest","setChatState","sendManualOutboundSms","chatManualSms","initAgentLibraryLogger","dbRequest","indexedDB","event","onsuccess","target","purgeLog","errorCode","onupgradeneeded","objectStoreNames","contains","createObjectStore","autoIncrement","createIndex","unique","keyPath","db","dateIndex","index","endDate","setDate","getDate","range","IDBKeyRange","upperBound","openCursor","cursor","primaryKey","clearLog","objectStoreRequest","clear","deleteDB","dbName","DBDeleteRequest","deleteDatabase","getLogRecords","startDate","maxRows","objStore","limit","lowerBound","bound","levelAndDateReturn","idxLevelAndDate","logLevelReturn","idxLogLevel","dtsNoStatsReturn","idxDTSNoStats","noStatsReturn","idxNoStats","dtsReturn","idxDTS","allValsReturn","idxAll","initAgentLibraryMultisocket","loadCurrentCall","initAgentLibraryConsoleLogger","_consoleDb","_overrideConsole","getConsoleLogRecords","only","count","browserConsole","assign","defaultConsole","_getRecord","args","arg","agentName","_saveRecord","apply","arguments","info","initAgentLibrarySoftphoneService","sipInit","SoftphoneService","setupWebRtcServer","_getSipConfig","_connected","_ended","_registered","_unregistered","_registrationFailed","_ringing","_mute","_unmute","setTimeout","_handleNoRegisterResponse","sipTerminate","opts","all","unregister","removeAllListeners","stop","sipAnswer","sipReject","sipRegister","webkitNotifications","checkPermission","requestPermission","sipHangUp","sipSendDTMF","sipToggleMute","switchSoftphoneRegistrar","maintainOffhook","autoStartOffhook","_updateOHFlags","resetSoftphoneSession","offhookParams","_rotateWebRtcServer","_getCurrentWebRtcServerInfo","webRtcServer","transport","outboundProxy","authorizationId","remoteAudioElement","document","getElementById","_registerHasResponse","clearTimeout","responseObj","initAgentLibrary"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport SIP from 'sip.js';\n\n(function() {\n  'use strict';\n  /**\n   * @fileoverview CFSimpleSip\n   */\n\n  /* CFSimpleSip\n   * @class CFSimpleSip\n   */\n\n  var C = {\n    STATUS_NULL: 0,\n    STATUS_NEW: 1,\n    STATUS_CONNECTING: 2,\n    STATUS_CONNECTED: 3,\n    STATUS_COMPLETED: 4,\n  };\n\n  /*\n   * @param {Object} options\n   */\n  var CFSimpleSip = function(options) {\n    /*\n     *  {\n     *    media: {\n     *      remote: {\n     *        audio: <DOM element>,\n     *        video: <DOM element>\n     *      },\n     *      local: {\n     *        video: <DOM element>\n     *      }\n     *    },\n     *    ua: {\n     *       <UA Configuration Options>\n     *    }\n     *  }\n     */\n\n    if (options.media.remote.video) {\n      this.video = true;\n    } else {\n      this.video = false;\n    }\n\n    if (options.media.remote.audio) {\n      this.audio = true;\n    } else {\n      this.audio = false;\n    }\n\n    if (!this.audio && !this.video) {\n      // Need to do at least audio or video\n      // Error\n      throw new Error(\n        'At least one remote audio or video element is required for CFSimpleSip.',\n      );\n    }\n\n    this.options = options;\n\n    // https://stackoverflow.com/questions/7944460/detect-safari-browser\n    var browserUa = window.navigator.userAgent.toLowerCase();\n    var isSafari = false;\n    var isFirefox = false;\n    if (browserUa.indexOf('safari') > -1 && browserUa.indexOf('chrome') < 0) {\n      isSafari = true;\n    } else if (\n      browserUa.indexOf('firefox') > -1 &&\n      browserUa.indexOf('chrome') < 0\n    ) {\n      isFirefox = true;\n    }\n    var sessionDescriptionHandlerFactoryOptions = {};\n    if (isSafari) {\n      sessionDescriptionHandlerFactoryOptions.modifiers = [\n        SIP.Web.Modifiers.stripG722,\n      ];\n    }\n\n    if (isFirefox) {\n      sessionDescriptionHandlerFactoryOptions.alwaysAcquireMediaFirst = true;\n      sessionDescriptionHandlerFactoryOptions.modifiers = [\n        SIP.Web.Modifiers.addMidLines,\n      ];\n    }\n\n    if (!this.options.ua.uri) {\n      this.anonymous = true;\n    }\n\n    this.ua = new SIP.UA({\n      // User Configurable Options\n      uri: this.options.ua.uri,\n      authorizationUser: this.options.ua.authorizationUser,\n      password: this.options.ua.password,\n      displayName: this.options.ua.displayName,\n      // Undocumented \"Advanced\" Options\n      userAgentString: SIP.C.USER_AGENT + ';' + browserUa,\n      // Fixed Options\n      register: true,\n      registerExpires: this.options.ua.registerExpires || 600,\n      sessionDescriptionHandlerFactoryOptions: sessionDescriptionHandlerFactoryOptions,\n      transportOptions: {\n        traceSip: this.options.ua.traceSip,\n        wsServers: this.options.ua.wsServers,\n        maxReconnectionAttempts: 1000,\n      },\n      dtmfType: SIP.C.dtmfType.RTP,\n    });\n\n    this.state = C.STATUS_NULL;\n\n    this.logger = this.ua.getLogger('sip.simple');\n\n    this.ua.on(\n      'registered',\n      function() {\n        this.emit('registered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'unregistered',\n      function() {\n        this.emit('unregistered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'failed',\n      function() {\n        this.emit('unregistered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'invite',\n      function(session) {\n        // If there is already an active session reject the incoming session\n        if (this.state !== C.STATUS_NULL && this.state !== C.STATUS_COMPLETED) {\n          this.logger.warn(\n            'Rejecting incoming call. CFSimpleSip only supports 1 call at a time',\n          );\n          session.reject();\n          return;\n        }\n        this.session = session;\n        this.setupSession();\n        this.emit('ringing', this.session);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'message',\n      function(message) {\n        this.emit('message', message);\n      }.bind(this),\n    );\n\n    return this;\n  };\n\n  CFSimpleSip.prototype = Object.create(SIP.EventEmitter.prototype);\n  CFSimpleSip.C = C;\n\n  // Public\n\n  CFSimpleSip.prototype.call = function(destination) {\n    if (!this.ua || !this.checkRegistration()) {\n      this.logger.warn('A registered UA is required for calling');\n      return;\n    }\n    if (this.state !== C.STATUS_NULL && this.state !== C.STATUS_COMPLETED) {\n      this.logger.warn('Cannot make more than a single call with CFSimpleSip');\n      return;\n    }\n    // Safari hack, because you cannot call .play() from a non user action\n    if (this.options.media.remote.audio) {\n      this.options.media.remote.audio.autoplay = true;\n    }\n    if (this.options.media.remote.video) {\n      this.options.media.remote.video.autoplay = true;\n    }\n    if (this.options.media.local && this.options.media.local.video) {\n      this.options.media.local.video.autoplay = true;\n      this.options.media.local.video.volume = 0;\n    }\n    this.session = this.ua.invite(destination, {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: this.audio,\n          video: this.video,\n        },\n      },\n    });\n    this.setupSession();\n\n    return this.session;\n  };\n\n  CFSimpleSip.prototype.answer = function() {\n    if (this.state !== C.STATUS_NEW && this.state !== C.STATUS_CONNECTING) {\n      this.logger.warn('No call to answer');\n      return;\n    }\n    // Safari hack, because you cannot call .play() from a non user action\n    if (this.options.media.remote.audio) {\n      this.options.media.remote.audio.autoplay = true;\n    }\n    if (this.options.media.remote.video) {\n      this.options.media.remote.video.autoplay = true;\n    }\n    return this.session.accept({\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: this.audio,\n          video: this.video,\n        },\n      },\n    });\n    // emit call is active\n  };\n\n  CFSimpleSip.prototype.reject = function() {\n    if (this.state !== C.STATUS_NEW && this.state !== C.STATUS_CONNECTING) {\n      this.logger.warn('Call is already answered');\n      return;\n    }\n    return this.session.reject();\n  };\n\n  CFSimpleSip.prototype.hangup = function() {\n    if (\n      this.state !== C.STATUS_CONNECTED &&\n      this.state !== C.STATUS_CONNECTING &&\n      this.state !== C.STATUS_NEW\n    ) {\n      this.logger.warn('No active call to hang up on');\n      return;\n    }\n    if (this.state !== C.STATUS_CONNECTED) {\n      return this.session.cancel();\n    } else {\n      return this.session.bye();\n    }\n  };\n\n  CFSimpleSip.prototype.hold = function() {\n    if (this.state !== C.STATUS_CONNECTED || this.session.local_hold) {\n      this.logger.warn('Cannot put call on hold');\n      return;\n    }\n    this.mute();\n    this.logger.log('Placing session on hold');\n    return this.session.hold();\n  };\n\n  CFSimpleSip.prototype.unhold = function() {\n    if (this.state !== C.STATUS_CONNECTED || !this.session.local_hold) {\n      this.logger.warn('Cannot unhold a call that is not on hold');\n      return;\n    }\n    this.unmute();\n    this.logger.log('Placing call off hold');\n    return this.session.unhold();\n  };\n\n  CFSimpleSip.prototype.mute = function() {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An acitve call is required to mute audio');\n      return;\n    }\n    this.logger.log('Muting Audio');\n    this.toggleMute(true);\n    this.emit('mute', this);\n  };\n\n  CFSimpleSip.prototype.unmute = function() {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An active call is required to unmute audio');\n      return;\n    }\n    this.logger.log('Unmuting Audio');\n    this.toggleMute(false);\n    this.emit('unmute', this);\n  };\n\n  CFSimpleSip.prototype.sendDTMF = function(tone) {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An active call is required to send a DTMF tone');\n      return;\n    }\n    this.logger.log('Sending DTMF tone: ' + tone);\n    this.session.dtmf(tone);\n  };\n\n  CFSimpleSip.prototype.message = function(destination, message) {\n    if (!this.ua || !this.checkRegistration()) {\n      this.logger.warn('A registered UA is required to send a message');\n      return;\n    }\n    if (!destination || !message) {\n      this.logger.warn(\n        'A destination and message are required to send a message',\n      );\n      return;\n    }\n    this.ua.message(destination, message);\n  };\n\n  // Private Helpers\n\n  CFSimpleSip.prototype.checkRegistration = function() {\n    return this.anonymous || (this.ua && this.ua.isRegistered());\n  };\n\n  CFSimpleSip.prototype.setupRemoteMedia = function() {\n    // If there is a video track, it will attach the video and audio to the same element\n    var pc = this.session.sessionDescriptionHandler.peerConnection;\n    var remoteStream;\n\n    if (pc.getReceivers) {\n      remoteStream = new window.window.MediaStream();\n      pc.getReceivers().forEach(function(receiver) {\n        var track = receiver.track;\n        if (track) {\n          remoteStream.addTrack(track);\n        }\n      });\n    } else {\n      remoteStream = pc.getRemoteStreams()[0];\n    }\n    if (this.video) {\n      this.options.media.remote.video.srcObject = remoteStream;\n      this.options.media.remote.video.play().catch(\n        function() {\n          this.logger.log('play was rejected');\n        }.bind(this),\n      );\n    } else if (this.audio) {\n      this.options.media.remote.audio.srcObject = remoteStream;\n      this.options.media.remote.audio.play().catch(\n        function() {\n          this.logger.log('play was rejected');\n        }.bind(this),\n      );\n    }\n  };\n\n  CFSimpleSip.prototype.setupLocalMedia = function() {\n    if (\n      this.video &&\n      this.options.media.local &&\n      this.options.media.local.video\n    ) {\n      var pc = this.session.sessionDescriptionHandler.peerConnection;\n      var localStream;\n      if (pc.getSenders) {\n        localStream = new window.window.MediaStream();\n        pc.getSenders().forEach(function(sender) {\n          var track = sender.track;\n          if (track && track.kind === 'video') {\n            localStream.addTrack(track);\n          }\n        });\n      } else {\n        localStream = pc.getLocalStreams()[0];\n      }\n      this.options.media.local.video.srcObject = localStream;\n      this.options.media.local.video.volume = 0;\n      this.options.media.local.video.play();\n    }\n  };\n\n  CFSimpleSip.prototype.cleanupMedia = function() {\n    if (this.video) {\n      this.options.media.remote.video.srcObject = null;\n      this.options.media.remote.video.pause();\n      if (this.options.media.local && this.options.media.local.video) {\n        this.options.media.local.video.srcObject = null;\n        this.options.media.local.video.pause();\n      }\n    }\n    if (this.audio) {\n      this.options.media.remote.audio.srcObject = null;\n      this.options.media.remote.audio.pause();\n    }\n  };\n\n  CFSimpleSip.prototype.setupSession = function() {\n    this.state = C.STATUS_NEW;\n    this.emit('new', this.session);\n\n    this.session.on('progress', this.onProgress.bind(this));\n    this.session.on('accepted', this.onAccepted.bind(this));\n    this.session.on('rejected', this.onEnded.bind(this));\n    this.session.on('failed', this.onFailed.bind(this));\n    this.session.on('terminated', this.onEnded.bind(this));\n  };\n\n  CFSimpleSip.prototype.destroyMedia = function() {\n    this.session.sessionDescriptionHandler.close();\n  };\n\n  CFSimpleSip.prototype.toggleMute = function(mute) {\n    var pc = this.session.sessionDescriptionHandler.peerConnection;\n    if (pc.getSenders) {\n      pc.getSenders().forEach(function(sender) {\n        if (sender.track) {\n          sender.track.enabled = !mute;\n        }\n      });\n    } else {\n      pc.getLocalStreams().forEach(function(stream) {\n        stream.getAudioTracks().forEach(function(track) {\n          track.enabled = !mute;\n        });\n        stream.getVideoTracks().forEach(function(track) {\n          track.enabled = !mute;\n        });\n      });\n    }\n  };\n\n  CFSimpleSip.prototype.onAccepted = function() {\n    this.state = C.STATUS_CONNECTED;\n    this.emit('connected', this.session);\n\n    this.setupLocalMedia();\n    this.setupRemoteMedia();\n    this.session.sessionDescriptionHandler.on(\n      'addTrack',\n      function() {\n        this.logger.log(\n          'A track has been added, triggering new remoteMedia setup',\n        );\n        this.setupRemoteMedia();\n      }.bind(this),\n    );\n\n    this.session.sessionDescriptionHandler.on(\n      'addStream',\n      function() {\n        this.logger.log(\n          'A stream has been added, trigger new remoteMedia setup',\n        );\n        this.setupRemoteMedia();\n      }.bind(this),\n    );\n\n    this.session.on(\n      'hold',\n      function() {\n        this.emit('hold', this.session);\n      }.bind(this),\n    );\n    this.session.on(\n      'unhold',\n      function() {\n        this.emit('unhold', this.session);\n      }.bind(this),\n    );\n    this.session.on(\n      'dtmf',\n      function(tone) {\n        this.emit('dtmf', tone);\n      }.bind(this),\n    );\n    this.session.on('bye', this.onEnded.bind(this));\n  };\n\n  CFSimpleSip.prototype.onProgress = function() {\n    this.state = C.STATUS_CONNECTING;\n    this.emit('connecting', this.session);\n  };\n\n  CFSimpleSip.prototype.onFailed = function() {\n    this.onEnded();\n  };\n\n  CFSimpleSip.prototype.onEnded = function() {\n    this.state = C.STATUS_COMPLETED;\n    this.emit('ended', this.session);\n    this.cleanupMedia();\n  };\n\n  window.CFSimpleSip = CFSimpleSip;\n  return CFSimpleSip;\n})();\n\nexport default (function() {\n  /**\n   * @fileOverview Exposed functionality for Contact Center AgentUI.\n   * @version 3.0.14\n   * @namespace AgentLibrary\n   */\n\n  return function(global) {\n    var AddSessionNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"ADD-SESSION\" packets from IntelliQueue.  This is used by\n     * the CallControlForm. Then it will increment the total_calls count.\n     *\n     * {\n     *   \"ui_notification\": {\n     *       \"@message_id\": \"IQ982008082918151403727\",\n     *       \"@response_to\": \"\",\n     *       \"@type\": \"ADD-SESSION\",\n     *       \"session_id\": { \"#text\": \"2\" },\n     *       \"uii\": { \"#text\": \"200808291814560000000900016558\" },\n     *       \"phone\": { \"#text\": \"200808291814370000000900016555\" },\n     *       \"session_type\": { \"#text\": \"AGENT\" },\n     *       \"session_label\": { \"#text\": \"Primary Agents Call Session\" },\n     *       \"allow_control\": { \"#text\": \"TRUE\" },\n     *       \"monitoring\": { \"#text\": \"FALSE\" },\n     *       \"agent_id\": { \"#text\": \"1856\" }\n     *   }\n     *  }\n     */\n    AddSessionNotification.prototype.processResponse = function(notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      var sessionAgentId = utils.getText(notif, 'agent_id');\n\n      if (utils.getText(notif, 'session_type') === 'AGENT') {\n        model.incrementTotalCalls();\n      }\n\n      if (sessionAgentId === model.agentSettings.agentId) {\n        // add the session_id of this leg to the current call packet -\n        // this way we can use it for hangups later.\n        model.currentCall.sessionId = utils.getText(notif, 'session_id');\n      } else if (sessionAgentId != '') {\n        // this is a monitoring session, lets save the monitored agent id for barge-ins\n        model.currentCall.monitorAgentId = sessionAgentId;\n      }\n\n      // Check to see if we have a transfer leg here, if so, register it\n      var sessionType = utils.getText(notif, 'session_type'),\n        allowControl = utils.getText(notif, 'allow_control'),\n        sessionId = utils.getText(notif, 'session_id'),\n        uii = utils.getText(notif, 'uii'),\n        isMonitoring = model.currentCall.isMonitoring,\n        monitoringType = model.currentCall.monitoringType;\n\n      var isBargeInMonitor = isMonitoring && monitoringType === 'FULL',\n        notCurrentAgent = sessionAgentId !== model.agentSettings.agentId,\n        notSessionOne = sessionId !== '1',\n        shouldTrackSession = false;\n\n      if (notSessionOne && notCurrentAgent) {\n        if (isBargeInMonitor) {\n          shouldTrackSession = true;\n        } else if (allowControl) {\n          if (sessionType === 'OUTBOUND' || sessionType === 'AGENT') {\n            shouldTrackSession = true;\n          }\n        }\n      }\n\n      if (shouldTrackSession) {\n        var destination = utils.getText(notif, 'phone');\n\n        if (sessionType === 'AGENT' || sessionAgentId !== '') {\n          destination = utils.getText(notif, 'agent_name');\n        }\n\n        model.transferSessions[sessionId] = {\n          sessionId: sessionId,\n          destination: destination,\n          uii: uii,\n        };\n      }\n\n      // if agent session, set on call status\n      if (notif.session_id === '2') {\n        model.agentSettings.onCall = true;\n      }\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received ADD-SESSION notification';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.phone = utils.getText(notif, 'phone');\n      formattedResponse.sessionType = utils.getText(notif, 'session_type');\n      formattedResponse.sessionLabel = utils.getText(notif, 'session_label');\n      formattedResponse.allowControl = utils.getText(notif, 'allow_control');\n      formattedResponse.monitoring = utils.getText(notif, 'monitoring');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.transferSessions = model.transferSessions;\n\n      return formattedResponse;\n    };\n\n    var AdminDebugEmailNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"AGENT-DEBUG-EMAIL\" packets from IntelliQueue\n     *\n     * {\n     *   \"ui_notification\":{\n     *      \"@message_id\":\"IQD01DEV2018071616521500004\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"AGENT-DEBUG-EMAIL\",\n     *      \"email_to\": {\n     *          \"#text\":\"rmyers@connectfirst.com\"\n     *      }\n     *      \"requested_by\": {\n     *          \"#text\":\"Ross Myers\"\n     *      }\n     *   }\n     * }\n     */\n    AdminDebugEmailNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received AGENT-DEBUG-EMAIL notification';\n      formattedResponse.emailTo = utils.getText(notif, 'email_to');\n      formattedResponse.requestedBy = utils.getText(notif, 'requested_by');\n\n      return formattedResponse;\n    };\n\n    var DialGroupChangeNotification = function() {};\n\n    /*\n     * This class is responsible for handling a DIAL_GROUP_CHANGE notification.\n     * This event is sent from IQ when an agent's dial group is changed in through the AdminUI.\n     *\n     *   {\n     *       \"ui_notification\": {\n     *           \"@message_id\": \"IQ10012016080413085500263\",\n     *           \"@type\": \"DIAL_GROUP_CHANGE\",\n     *           \"agent_id\": { \"#text\": \"1180958\" },\n     *           \"dial_group_id\": { \"#text\": \"50354\" },\n     *           \"dialGroupName\": { \"#text\": \"Preview Dial Mode\" },\n     *           \"dial_group_desc\": {}\n     *       }\n     *   }\n     */\n    DialGroupChangeNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      //Modify loginRequest with new DialGroupId\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      var origLoginType = model.loginRequest.loginType;\n      var newDgId = utils.getText(notif, 'dial_group_id');\n\n      model.dialGroupChangeNotification = notification;\n\n      // Calculate type of login - called from AdminUI when assigning agent to new dial group.\n      // Only options should be BLENDED or OUTBOUND here.\n      if (\n        newDgId &&\n        newDgId !== '' &&\n        (origLoginType === 'INBOUND' || origLoginType === 'BLENDED')\n      ) {\n        model.loginRequest.loginType = 'BLENDED';\n      } else if (newDgId && newDgId !== '') {\n        model.loginRequest.loginType = 'OUTBOUND';\n      } else if (origLoginType === 'INBOUND') {\n        model.loginRequest.loginType = 'INBOUND';\n      } else {\n        model.loginRequest.loginType = 'NO-SELECTION';\n      }\n\n      UIModel.getInstance().loginRequest.dialGroupId = newDgId;\n\n      var formattedResponse = {\n        message: 'Dial Group Updated Successfully.',\n        detail: 'Dial Group changed to [' + newDgId + '].',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        dialGroupName: utils.getText(notif, 'dialGroupName'), // camel case from server for some reason :/\n        dialGroupDesc: utils.getText(notif, 'dial_group_desc'),\n        agentId: utils.getText(notif, 'agent_id'),\n      };\n\n      return formattedResponse;\n    };\n\n    var DialGroupChangePendingNotification = function() {};\n\n    /*\n     * This class is responsible for handling a DIAL_GROUP_CHANGE_PENDING notification.\n     * This event is sent from IQ when an agent's dial group is changed and the agent is on a call.\n     *\n     * {\n     *     \"ui_notification\": {\n     *         \"@message_id\": \"IQ10012016080515294800318\",\n     *         \"@type\": \"DIAL_GROUP_CHANGE_PENDING\",\n     *         \"agent_id\": { \"#text\": \"1180958\" },\n     *         \"dial_group_id\": { \"#text\": \"50354\" },\n     *         \"update_from_adminui\": { \"#text\": \"TRUE\" }\n     *     }\n     * }\n     */\n    DialGroupChangePendingNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      model.agentSettings.pendingDialGroupChange = parseInt(\n        utils.getText(notif, 'dial_group_id'),\n        10,\n      );\n\n      // check if request originated with AdminUI\n      if (notif.update_from_adminui) {\n        model.agentSettings.updateDGFromAdminUI =\n          utils.getText(notif, 'update_from_adminui') === true;\n      } else {\n        model.agentSettings.updateDGFromAdminUI = false;\n      }\n\n      var formattedResponse = {\n        message: 'Dial Group Change Pending notification received.',\n        detail:\n          'DialGroup switch for existing session pending until active call ends.',\n        agentId: utils.getText(notif, 'agent_id'),\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        updateFromAdminUI: utils.getText(notif, 'update_from_adminui'),\n      };\n\n      return formattedResponse;\n    };\n\n    var DirectAgentTransferNotification = function() {};\n\n    /*\n     * This class is responsible for handling a DIRECT-AGENT-ROUTE notification.\n     * This event is sent from IQ when an agent is presented a direct transfer, in the case they are not in an\n     * available state to automatically be presented the call.\n     *\n     * {\n     *     \"ui_notification\": {\n     *         \"@message_id\": \"IQ10012016080515294800318\",\n     *         \"@type\": \"DIRECT-AGENT-ROUTE\",\n     *         \"response_to\": { \"#text\": \"\" },\n     *         \"agent_id\": { \"#text\": \"\" },\n     *         \"uii\": { \"#text\": \"\" },\n     *         \"status\": { \"#text\": \"\" },\n     *         \"ani\": { \"#text\": \"\" },\n     *         \"dnis\": { \"#text\": \"\" }\n     *         \"source_type\": { \"#text\": \"\" },\n     *         \"source_id\": { \"#text\": \"\" },\n     *         \"source_name\": { \"#text\": \"\" }\n     *         \"voicemail_url\": { \"#text\": \"\" }\n     *     }\n     * }\n     */\n    DirectAgentTransferNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      formattedResponse.message = 'Received DIRECT-AGENT-ROUTE notification';\n      formattedResponse.status = utils.getText(notif, 'status');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.ani = utils.getText(notif, 'ani');\n      formattedResponse.dnis = utils.getText(notif, 'dnis');\n      formattedResponse.sourceType = utils.getText(notif, 'source_type');\n      formattedResponse.sourceId = utils.getText(notif, 'source_id');\n      formattedResponse.sourceName = utils.getText(notif, 'source_name');\n      formattedResponse.voicemailUrl = utils.getText(notif, 'voicemail_url');\n\n      return formattedResponse;\n    };\n\n    var DropSessionNotification = function() {};\n\n    /*\n     * This class handles the DROP-SESSION packet from IQ. It doesn't really do anything\n     * besides format a response for the callback notification since there isn't any action needed.\n     *\n     *  {\n     *      \"ui_notification\": {\n     *          \"@message_id\":\"IQ10012016081613222800341\",\n     *          \"@response_to\":\"\",\n     *          \"@type\":\"DROP-SESSION\",\n     *          \"session_id\":{\"#text\":\"3\"},\n     *          \"uii\":{\"#text\":\"201608161322180139000000000124\"}\n     *      }\n     *  }\n     */\n    DropSessionNotification.prototype.processResponse = function(notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      var sessionId = utils.getText(notif, 'session_id');\n      var transfer = UIModel.getInstance().transferSessions[sessionId];\n\n      // Check to see if we just disconnected a transfer session\n      // If so, we need to remove the session from our map\n      if (transfer) {\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          'Transfer to ' + transfer.destination + ' has terminated',\n          '',\n        );\n        delete UIModel.getInstance().transferSessions[sessionId];\n        formattedResponse.transferEnd = transfer;\n      }\n\n      formattedResponse.message = 'Received DROP-SESSION Notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    var EarlyUiiNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"EARLY_UII\" packets from IntelliQueue.\n     * For manual outdials, this gives the uii to cancel a ringing line.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"EARLY_UII\",\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *      }\n     *  }\n     */\n    EarlyUiiNotification.prototype.processResponse = function(notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      formattedResponse.message = 'Received EARLY_UII notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    var EndCallNotification = function(libInstance) {\n      this.libInstance = libInstance;\n    };\n\n    /*\n     * This class is responsible for handling an END-CALL notification.\n     * Save the packet in the UIModel by appending it to the currentCall packet.\n     * Update the CallState field in the UIModel to \"CALL-ENDED\"\n     *\n     * {\n     *  \"ui_notification\":{\n     *      \"@message_id\":\"IQ982008082910362203349\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"END-CALL\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"2\"},\n     *      \"call_dts\":{\"#text\":\"2008-08-29 10:36:04\"},\n     *      \"call_duration\":{\"#text\":\"16\"},\n     *      \"term_party\":{\"#text\":\"CALLER\"},\n     *      \"term_reason\":{},\n     *      \"recording_url\":{},\n     *      \"disposition_timeout:{\"#text\":\"60\"}\n     *  }\n     * }\n     */\n    EndCallNotification.prototype.processResponse = function(notification) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      model.endCallNotification = notification;\n\n      // add callDuration, termParty, and termReason to the current call packet\n      model.currentCall.duration = utils.getText(notif, 'call_duration');\n      model.currentCall.termParty = utils.getText(notif, 'term_party');\n      model.currentCall.termReason = utils.getText(notif, 'term_reason');\n\n      // set call state to \"CALL-ENDED\"\n      model.agentSettings.callState = 'CALL-ENDED';\n      model.agentSettings.onCall = false;\n      model.agentSettings.onManualOutdial = false;\n\n      // Clear out any transfer sessions from the previous call\n      model.transferSessions = {};\n\n      // Check if there is a pending dial group change\n      if (\n        model.agentSettings.pendingDialGroupChange > 0 ||\n        model.agentSettings.pendingDialGroupChange == -1\n      ) {\n        // update dial group id\n        model.loginRequest.dialGroupId =\n          model.agentSettings.pendingDialGroupChange;\n\n        // send login update request\n        this.libInstance.loginAgent(\n          model.loginRequest.queueIds,\n          model.configRequest.chatIds,\n          model.configRequest.skillProfileId,\n          model.configRequest.dialGroupId,\n          model.configRequest.dialDest,\n          model.agentSettings.updateDGFromAdminUI,\n        );\n\n        // reset pending dial group variables\n        model.agentSettings.pendingDialGroupChange = 0;\n        model.agentSettings.updateDGFromAdminUI = false;\n      }\n\n      // start ping call interval timer, sends message every 30 seconds\n      // if this is not a manual outdial and we are not suppressing disposition pop\n      if (\n        model.currentCall.outdialDispositions &&\n        model.currentCall.outdialDispositions.dispositions &&\n        model.currentCall.outdialDispositions.dispositions.length > 0 &&\n        model.currentCall.surveyPopType !== 'SUPPRESS'\n      ) {\n        model.pingIntervalId = setInterval(utils.sendPingCallMessage, 30000);\n      }\n\n      var formattedResponse = {\n        message: 'End Call Notification Received.',\n        detail: '',\n        uii: utils.getText(notif, 'uii'),\n        sessionId: utils.getText(notif, 'session_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        callDts: utils.getText(notif, 'call_dts'),\n        duration: model.currentCall.duration,\n        termParty: model.currentCall.termParty,\n        termReason: model.currentCall.termReason,\n        recordingUrl: utils.getText(notif, 'recording_url'),\n        dispositionTimeout: utils.getText(notif, 'disposition_timeout'),\n      };\n\n      return formattedResponse;\n    };\n\n    var GatesChangeNotification = function() {};\n\n    /*\n     * This class is responsible for handling a gates change notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080817344100936\",\n     *          \"@type\":\"GATES_CHANGE\",\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"gate_ids\":{\"#text\":\"11117,3\"}\n     *      }\n     * }\n     */\n    GatesChangeNotification.prototype.processResponse = function(notification) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      var newAssignedGates = [];\n      var availableQueues = model.inboundSettings.availableQueues;\n      var assignedGateIds = utils.getText(notif, 'gate_ids');\n      if (assignedGateIds !== '') {\n        assignedGateIds = assignedGateIds.split(',');\n      }\n\n      for (var a = 0; a < assignedGateIds.length; a++) {\n        // find gate in avail list\n        var id = assignedGateIds[a];\n        var foundGate = utils.findObjById(availableQueues, id, 'gateId');\n        if (foundGate) {\n          newAssignedGates.push(foundGate);\n        } else {\n          // gate not in assigned list, add stub\n          var gate = {\n            gateId: id,\n            gateName: '',\n            gateDesc: '',\n            defaultDestOverride: '',\n            isAgentSelectable: false,\n          };\n          newAssignedGates.push(gate);\n        }\n      }\n\n      model.inboundSettings.queues = JSON.parse(\n        JSON.stringify(newAssignedGates),\n      );\n\n      var formattedResponse = {\n        agentId: utils.getText(notif, 'agent_id'),\n        message: 'Gates Change notification received.',\n        queues: newAssignedGates,\n      };\n\n      return formattedResponse;\n    };\n\n    var GenericNotification = function() {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@response_to\":\"1c2fe39f-a31e-aff8-8d23-92a61c88270f\",\n     *          \"@type\":\"GENERIC\",\n     *          \"message_code\":{\"#text\":\"0\"},\n     *          \"message\":{\"#text\":\"OK\"},\n     *          \"detail\":{\"#text\":\"Pending Callback Successfully Cancelled.\"}\n     *      }\n     * }\n     */\n    GenericNotification.prototype.processResponse = function(notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      // add message and detail if present\n      formattedResponse.messageCode = utils.getText(\n        notification.ui_notification,\n        'message_code',\n      );\n\n      return formattedResponse;\n    };\n\n    var NewCallNotification = function() {};\n\n    /*\n     * This class processes a \"NEW-CALL\" packet received from Intelliqueue. It will determine\n     * if the call is a regular or monitoring call:\n     * \t\t@Monitoring==true:  set state to ACTIVE-MONITORING, send NewMonitoringCall event\n     * \t\t@Monitoring==false: set state to ACTIVE, send newcall packet and increment total calls\n     *\n     *  {\"ui_notification\":{\n     *      \"@message_id\":\"IQ982010020911335300027\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"NEW-CALL\",\n     *      \"uii\":{\"#text\":\"201002091133350139990000000010\"},\n     *      \"ani\":{\"#text\":\"9548298548\"},\n     *      \"dnis\":{},\n     *      \"dial_dest\":{\"#text\":\"sip:+16789050673@sip.connectfirst.com\"},\n     *      \"call_type\":{\"#text\":\"OUTBOUND\"},\n     *      \"queue_dts\":{\"#text\":\"2010-02-09 11:33:53\"},\n     *      \"queue_time\":{\"#text\":\"-1\"},\n     *      \"agent_id\":{\"#text\":\"657\"},\n     *      \"app_url\":{},\n     *      \"is_monitoring\":{\"#text\":\"FALSE\"},\n     *      \"script_id\":{},\n     *      \"script_version\":{},\n     *      \"survey_id\":{},\n     *      \"survey_pop_type\":{\"#text\":\"SUPPRESS\"},\n     *      \"message\":{},\n     *      \"agent_recording\":{\"@default\":\"ON\",\"@pause\":\"10\",\"#text\":\"TRUE\"},\n     *      \"hangup_on_disposition\":{\"#text\":\"FALSE\"},\n     *      \"gate\":{\n     *          \"@number\":\"17038\",\n     *          \"name\":{\"#text\":\"AM Campaign\"},\n     *          \"description\":{}\n     *      },\n     *      \"outdial_dispositions\":{\n     *          \"@type\":\"CAMPAIGN|GATE\",\n     *          \"disposition\":[\n     *              { \"@contact_forwarding\":\"FALSE\", \"@disposition_id\":\"20556\", \"@is_complete\":\"1\", \"@is_default\"=\"0\", \"@require_note\"=\"0\", \"@save_survey\"=\"1\", \"@xfer\"=\"0\", \"#text\":\"Not Available\"},\n     *              { \"@contact_forwarding\":\"FALSE\", \"@disposition_id\":\"20559\", \"@is_complete\":\"1\", \"@is_default\"=\"1\", \"@require_note\"=\"1\", \"@save_survey\"=\"1\", \"@xfer\"=\"0\", #text\":\"Transfer Not Available\"}\n     *          ]\n     *      },\n     *      \"requeue_shortcuts\":{\n     *          \"requeue_shortcut\":[\n     *              { \"@gate_id\":\"2\", \"@name\":\"test queue\" \"@skill_id\":\"\"}\n     *          ]\n     *      },\n     *      \"baggage\":{\n     *          \"@allow_updates\":\"TRUE\",\n     *          \"@show_lead_passes\":\"TRUE\",\n     *          \"@show_list_name\":\"TRUE\",\n     *          \"aux_phone\":{},\n     *          \"aux_greeting\":{},\n     *          \"aux_external_url\":{},\n     *          \"aux_data1\":{\"#text\":\"BMAK\"},\n     *          \"aux_data2\":{\"#text\":\"BMAK-041653-934\"},\n     *          \"aux_data3\":{\"#text\":\"Call Ctr 1\"},\n     *          \"aux_data4\":{},\n     *          \"aux_data5\":{},\n     *          \"extern_id\":{\"#text\":\"9548298548\"},\n     *          \"lead_id\":{\"#text\":\"64306\"},\n     *          \"lead_passes\":{\"#text\":\"1\"},\n     *          \"first_name\":{\"#text\":\"Ryant\"},\n     *          \"last_name\":{\"#text\":\"Taylor\"},\n     *          \"mid_name\":{},\n     *          \"address1\":{\"#text\":\"8010 Maryland Ave\"},\n     *          \"address2\":{},\n     *          \"city\":{\"#text\":\"Cleveland\"},\n     *          \"state\":{\"#text\":\"OH\"},\n     *          \"zip\":{\"#text\":\"44105\"},\n     *          \"custom_labels\":{\n     *              \"aux_1_label\":{},\n     *              \"aux_2_label\":{},\n     *              \"aux_3_label\":{},\n     *              \"aux_4_label\":{},\n     *              \"aux_5_label\":{}\n     *          }\n     *      },\n     *      \"survey_response\":{\n     *          \"@response_id\":\"24\",\n     *          \"@survey_id\":\"1775\",\n     *          \"details\":{\n     *              \"detail\":[\n     *                  {\"@element_id\":\"9001\",\"@option_id\":\"0\",\"#text\":\"Box 1\"},\n     *                  {\"@element_id\":\"9002\",\"@option_id\":\"0\",\"#text\":\"Area 1\"},\n     *                  {\"@element_id\":\"9003\",\"@option_id\":\"6439\"},\n     *                  {\"@element_id\":\"9004\",\"@option_id\":\"6443\"},\n     *                  {\"@element_id\":\"9004\",\"@option_id\":\"6444\"},\n     *                  {\"@element_id\":\"9005\",\"@option_id\":\"6447\"},\n     *                  {\"@element_id\":\"9006\",\"@option_id\":\"0\",\"#text\":\"11/20/2013\"},\n     *                  {\"@element_id\":\"9015\",\"@option_id\":\"0\",\"#text\":\"Box 2\"},\n     *                  {\"@element_id\":\"9016\",\"@option_id\":\"0\",\"#text\":\"Area 2\"},\n     *                  {\"@element_id\":\"9017\",\"@option_id\":\"6466\"},\n     *                  {\"@element_id\":\"9018\",\"@option_id\":\"6471\"},\n     *                  {\"@element_id\":\"9018\",\"@option_id\":\"6472\"},\n     *                  {\"@element_id\":\"9019\",\"@option_id\":\"6477\"},\n     *                  {\"@element_id\":\"9020\",\"@option_id\":\"0\",\"#text\":\"11/21/2013\"}\n     *             ]\n     *          }\n     *      }\n     *    }\n     *  }\n     */\n    NewCallNotification.prototype.processResponse = function(notification) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n\n      // set up new call obj\n      var newCall = {\n        uii: utils.getText(notif, 'uii'),\n        agentId: utils.getText(notif, 'agent_id'),\n        dialDest: utils.getText(notif, 'dial_dest'),\n        queueDts: utils.getText(notif, 'queue_dts'),\n        queueTime: utils.getText(notif, 'queue_time'),\n        ani: utils.getText(notif, 'ani'),\n        dnis: utils.getText(notif, 'dnis'),\n        callType: utils.getText(notif, 'call_type'),\n        appUrl: utils.getText(notif, 'app_url'),\n        isMonitoring: utils.getText(notif, 'is_monitoring'),\n        allowHold: utils.getText(notif, 'allow_hold'),\n        allowTransfer: utils.getText(notif, 'allow_transfer'),\n        allowManualInternationalTransfer: utils.getText(\n          notif,\n          'allow_manual_international_transfer',\n        ),\n        allowDirectAgentTransfer: utils.getText(\n          notif,\n          'allow_direct_agent_transfer',\n        ),\n        allowHangup: utils.getText(notif, 'allow_hangup'),\n        allowRequeue: utils.getText(notif, 'allow_requeue'),\n        allowEndCallForEveryone: utils.getText(\n          notif,\n          'allow_endcallforeveryone',\n        ),\n        scriptId: utils.getText(notif, 'script_id'),\n        scriptVersion: utils.getText(notif, 'script_version'),\n        surveyId: utils.getText(notif, 'survey_id'),\n        surveyPopType: utils.getText(notif, 'survey_pop_type'),\n        requeueType: utils.getText(notif, 'requeue_type'),\n        hangupOnDisposition: utils.getText(notif, 'hangup_on_disposition'),\n      };\n\n      if (newCall.isMonitoring) {\n        newCall.monitoringType = utils.getText(notif, 'monitoring_type'); // FULL, COACHING, MONITOR\n      }\n\n      // set collection values\n      newCall.queue = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'gate',\n      )[0];\n      newCall.agentRecording = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'agent_recording',\n        'agentRecording',\n      )[0];\n      newCall.outdialDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'outdial_dispositions',\n        'disposition',\n      )[0];\n      newCall.requeueShortcuts =\n        utils.processResponseCollection(\n          notification,\n          'ui_notification',\n          'requeue_shortcuts',\n          'requeueShortcut',\n        )[0] || [];\n      newCall.baggage = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'baggage',\n      )[0];\n      newCall.surveyResponse = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'survey_response',\n        'detail',\n      )[0];\n      newCall.scriptResponse = {};\n      newCall.transferPhoneBook = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transfer_phone_book',\n      )[0];\n      newCall.lead = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'lead',\n      )[0];\n\n      // parse extra data correctly\n      try {\n        if (notif.lead && notif.lead.extra_data) {\n          delete newCall.lead.extraDatas;\n          newCall.lead.extraData = {};\n          for (var key in notif.lead.extra_data) {\n            newCall.lead.extraData[key] = notif.lead.extra_data[key]['#text'];\n          }\n        }\n      } catch (e) {\n        console.warn('error parsing new call lead extra data: ' + e);\n      }\n\n      if (newCall.baggage) {\n        // process custom labels correctly\n        newCall.baggage.customLabels = {};\n        var notifLabels = notif.baggage['custom_labels'];\n        for (var key in notifLabels) {\n          var result = '';\n          if (notifLabels && notifLabels[key] && notifLabels[key]['#text']) {\n            result = notifLabels[key]['#text'];\n          }\n\n          newCall.baggage.customLabels[key] = result;\n        }\n      }\n\n      // set saved script response if present\n      try {\n        var savedModel = JSON.parse(notif.script_result['#text']).model;\n        var results = {};\n        var keys = Object.keys(savedModel);\n        for (var idx = 0; idx < keys.length; idx++) {\n          var key = keys[idx];\n          var value = savedModel[key].value;\n          results[key] = value;\n        }\n        newCall.scriptResponse = results;\n      } catch (err) {}\n\n      // fix phonebook format\n      if (newCall.transferPhoneBook && newCall.transferPhoneBook.entrys) {\n        newCall.transferPhoneBook = newCall.transferPhoneBook.entrys;\n      }\n\n      // fix requeue shortcuts\n      if (\n        newCall.requeueShortcuts &&\n        newCall.requeueShortcuts.requeueShortcuts\n      ) {\n        newCall.requeueShortcuts = newCall.requeueShortcuts.requeueShortcuts;\n      }\n\n      // if only one disposition, convert to array\n      if (\n        newCall.outdialDispositions &&\n        newCall.outdialDispositions.disposition\n      ) {\n        newCall.outdialDispositions.dispositions = [\n          newCall.outdialDispositions,\n        ];\n      }\n\n      // convert numbers to boolean where applicable\n      newCall.queue.isCampaign = newCall.queue.isCampaign === '1';\n      if (\n        newCall.outdialDispositions &&\n        newCall.outdialDispositions.dispositions\n      ) {\n        for (\n          var d = 0;\n          d < newCall.outdialDispositions.dispositions.length;\n          d++\n        ) {\n          var disp = newCall.outdialDispositions.dispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.requireNote = disp.requireNote === '1';\n          disp.saveSurvey = disp.saveSurvey === '1';\n          disp.xfer = disp.xfer === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // Build token map\n      model.callTokens = buildCallTokenMap(notif, newCall);\n      newCall.baggage = model.callTokens; // add all tokens to baggage\n\n      // Is Monitoring Call?\n      if (newCall.isMonitoring) {\n        model.agentSettings.callState = 'ACTIVE-MONITORING';\n      } else {\n        model.agentSettings.callState = 'ACTIVE';\n\n        // check for preloaded transfer number\n        if (newCall.baggage && newCall.baggage.auxPhone != '') {\n          model.transferNumber = newCall.baggage.auxPhone;\n        }\n      }\n\n      // Reset the current call counter for Agent Daily Stats\n      model.agentDailyStats.currCallTime = 0;\n\n      // todo handle scripting??\n\n      model.currentCall = newCall;\n\n      return newCall;\n    };\n\n    function buildCallTokenMap(notif, newCall) {\n      var model = UIModel.getInstance();\n      var tokens = newCall.baggage || {}; // seed with baggage values\n      if (notif.baggage && notif.baggage.generic_key_value_pairs) {\n        var keyValuePairs = [];\n        var keyValuePairsStr = utils.getText(\n          notif.baggage,\n          'generic_key_value_pairs',\n        );\n        if (keyValuePairsStr.length > 0) {\n          keyValuePairs = utils.parseKeyValuePairsFromString(\n            keyValuePairsStr,\n            '|',\n            '::',\n          );\n        }\n\n        for (var keyValue in keyValuePairs) {\n          tokens[keyValue] = keyValuePairs[keyValue];\n        }\n      }\n\n      tokens['ani'] = newCall.ani;\n      tokens['dnis'] = newCall.dnis;\n      tokens['uii'] = newCall.uii;\n\n      try {\n        if (newCall.queue.number) {\n          tokens['sourceId'] = newCall.queue.number || '';\n          tokens['sourceName'] = newCall.queue.name || '';\n          tokens['sourceDesc'] = newCall.queue.description || '';\n\n          if (\n            newCall.queue.isCampaign === '1' ||\n            newCall.queue.isCampaign === true\n          ) {\n            tokens['sourceType'] = 'OUTBOUND';\n          } else {\n            tokens['sourceType'] = 'INBOUND';\n          }\n        } else {\n          tokens['sourceId'] = '0';\n          tokens['sourceType'] = 'MANUAL';\n          tokens['sourceName'] = '';\n          tokens['sourceDesc'] = '';\n        }\n      } catch (any) {\n        console.error(\n          'There was an error processing source tokenization',\n          +any,\n        );\n      }\n\n      try {\n        tokens['agentFirstName'] = model.agentSettings.firstName;\n        tokens['agentLastName'] = model.agentSettings.lastName;\n        tokens['agentExternalId'] = model.agentSettings.externalAgentId;\n        tokens['agentType'] = model.agentSettings.agentType;\n        tokens['agentEmail'] = model.agentSettings.email;\n        tokens['agentUserName'] = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    function isCampaign(gate) {\n      if (gate && gate.isCampaign) {\n        return gate.isCampaign === '1' || gate.isCampaign === true;\n      }\n      return false;\n    }\n\n    var PendingChatDispNotification = function() {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     *  {\n     *       \"ui_notification\":{\n     *           \"@message_id\":\"IQD01DEV2018062912352800014\",\n     *           \"@type\":\"PENDING_CHAT_DISP\",\n     *           \"agent_id\":{ \"#text\":\"1182160\" },\n     *           \"uii\":{ \"#text\":\"201806291234550147950000000000\" },\n     *           \"status\":{ \"#text\":\"false\" }\n     *       }\n     *   }\n     */\n    PendingChatDispNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var formattedResponse = {};\n      formattedResponse.agentId = utils.getText(\n        notification.ui_notification,\n        'agent_id',\n      );\n      formattedResponse.uii = utils.getText(\n        notification.ui_notification,\n        'uii',\n      );\n      formattedResponse.status =\n        utils.getText(notification.ui_notification, 'status') === 'true';\n\n      return formattedResponse;\n    };\n\n    var PendingDispNotification = function() {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@type\":\"PENDING_DISP\",\n     *          \"agent_id\":{\"#text\":\"3\"},\n     *          \"status\":{\"#text\":\"false\"}\n     *      }\n     * }\n     */\n    PendingDispNotification.prototype.processResponse = function(notification) {\n      var formattedResponse = {};\n      formattedResponse.agentId = utils.getText(\n        notification.ui_notification,\n        'agent_id',\n      );\n      formattedResponse.status = utils.getText(\n        notification.ui_notification,\n        'status',\n      );\n\n      return formattedResponse;\n    };\n\n    var PreviewLeadStateNotification = function() {};\n\n    /*\n     * This class is responsible for processing the lead state packet\n     * received from intelliqueue. It will decide what type of leads are\n     * being processed, and depending on if the callback is true or false, it will\n     * call the appropriate form to update the lead state.\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@type\":\"PREVIEW-LEAD-STATE\",\n     *          \"@call_type\":\"MANUAL|PREVIEW\",\n     *          \"@message_id\":\"IQ10012016092715393600184\",\n     *          \"request_id\":{\"#text\":\"IQ10012016092715390900179\"},\n     *          \"lead_state\":{\"#text\":\"ANSWER\"},\n     *          \"callback\":{\"#text\":\"FALSE\"}\n     *      }\n     *   }\n     * }\n     */\n    PreviewLeadStateNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      UIModel.getInstance().agentSettings.onManualOutdial = true;\n\n      var response = {\n        callType: notif['@call_type'],\n        messageId: notif['@message_id'],\n        requestId: utils.getText(notif, 'request_id'),\n        leadState: utils.getText(notif, 'lead_state'),\n        callback: utils.getText(notif, 'callback'),\n      };\n\n      return response;\n    };\n\n    var ReverseMatchNotification = function() {};\n\n    /*\n     * This class is responsible for processing a REVERSE_MATCH packet from IQ. It\n     * will log the packet was rec'd, save the packet to the UIModel for use by\n     * components like the WhosCallingForm\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@response_to\":\"1c2fe39f-a31e-aff8-8d23-92a61c88270f\",\n     *          \"@type\":\"REVERSE_MATCH\",\n     *          \"first_name\":{\"#text\":\"\"},\n     *          \"mid_name\":{\"#text\":\"\"},\n     *          \"last_name\":{\"#text\":\"\"},\n     *          \"address1\":{\"#text\":\"\"},\n     *          \"address2\":{\"#text\":\"\"},\n     *          \"city\":{\"#text\":\"\"},\n     *          \"state\":{\"#text\":\"\"},\n     *          \"zip\":{\"#text\":\"\"},\n     *          \"business_name\":{\"#text\":\"\"}\n     *      }\n     * }\n     */\n    ReverseMatchNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var model = UIModel.getInstance();\n\n      model.tokens['first_name'] = utils.getText(notif, 'first_name');\n      model.tokens['mid_name'] = utils.getText(notif, 'mid_name');\n      model.tokens['last_name'] = utils.getText(notif, 'last_name');\n      model.tokens['address1'] = utils.getText(notif, 'address1');\n      model.tokens['address2'] = utils.getText(notif, 'address2');\n      model.tokens['suffix'] = utils.getText(notif, 'suffix');\n      model.tokens['title'] = utils.getText(notif, 'title');\n      model.tokens['city'] = utils.getText(notif, 'city');\n      model.tokens['state'] = utils.getText(notif, 'state');\n      model.tokens['zip'] = utils.getText(notif, 'zip');\n      model.tokens['business_name'] = utils.getText(notif, 'business_name');\n\n      return model.tokens;\n    };\n\n    var TcpaSafeLeadStateNotification = function() {};\n\n    /*\n     * This class is responsible for processing the lead state packet\n     * received from intelliqueue. It will decide what type of leads are\n     * being processed, and depending on if the callback is true or false, it will\n     * call the appropriate form to update the lead state.\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@type\":\"TCPA-SAFE-LEAD-STATE\",\n     *          \"@call_type\":\"MANUAL|TCPA-SAFE\",\n     *          \"request_id\":{\"#text\":\"\"},\n     *          \"lead_state\":{\"#text\":\"CALLING\"},\n     *          \"callback\":{\"#text\":\"false\"}\n     *      }\n     * }\n     */\n    TcpaSafeLeadStateNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      var response = {\n        callType: notif['@call_type'],\n        messageId: notif['@message_id'],\n        requestId: utils.getText(notif, 'request_id'),\n        leadState: utils.getText(notif, 'lead_state'),\n        callback: utils.getText(notif, 'callback'),\n      };\n\n      return response;\n    };\n\n    var AckRequest = function(audioType, agentId, uii, monitorAgentId) {\n      this.audioType = audioType || 'FULL';\n      this.agentId = agentId;\n      this.uii = uii;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * This class processes ACK packets rec'd from IQ.\n     * This is a callback triggered by certain actions like\n     * sending dispositions or script results.\n     * NOTE: uii is added in utils message processing.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008090317393001252\",\n     *      \"@response_to\":\"1112222\",\n     *      \"@type\":\"ACK\",\n     *      \"type\":{\"#text\":\"CHAT-DISPOSITION|INBOUND-DISPOSITION|OUTDIAL-DISPOSITION|SCRIPT-RESULT\"},\n     *      \"status\":{\"#text\":\"OK|FAILURE\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    AckRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.type = utils.getText(resp, 'type');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(LOG_LEVELS.DEBUG, formattedResponse.message, response);\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          formattedResponse.message + ': ' + formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var AgentStateRequest = function(agentState, agentAuxState) {\n      if (\n        agentState.toUpperCase() == 'ON-BREAK' &&\n        UIModel.getInstance().onCall == true\n      ) {\n        this.agentState = 'BREAK-AFTER-CALL';\n        this.agentAuxState = '';\n      } else {\n        this.agentState = agentState.toUpperCase() || '';\n        this.agentAuxState = agentAuxState || '';\n      }\n    };\n\n    AgentStateRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.AGENT_STATE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          state: {\n            '#text': this.agentState,\n          },\n          agent_aux_state: {\n            '#text': this.agentAuxState,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes AGENT-STATE packets rec'd from IQ. It will check the state of the\n     * packet and then set the state on the model. It will also check for deferred surveys,\n     * if one is found it will load it at this point.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"AGENT-STATE\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"prev_state\":{\"#text\":\"ENGAGED\"},\n     *      \"current_state\":{\"#text\":\"WORKING\"},\n     *      \"agent_aux_state\":{\"#text\":\"Offhook Work\"},\n     *      \"prev_aux_state\":{}\n     *   }\n     * }\n     */\n    AgentStateRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var prevState = utils.getText(resp, 'prev_state');\n      var currState = utils.getText(resp, 'current_state');\n      var prevAuxState = utils.getText(resp, 'prev_aux_state');\n      var currAuxState = utils.getText(resp, 'agent_aux_state');\n      var model = UIModel.getInstance();\n\n      // add message and detail if present\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = response.ui_response.agent_id['#text'] || '';\n      formattedResponse.previousState = prevState;\n      formattedResponse.currentState = currState;\n      formattedResponse.previousAuxState = prevAuxState;\n      formattedResponse.currentAuxState = currAuxState;\n\n      if (status == 'OK') {\n        var prevStateStr = prevState;\n        var currStateStr = currState;\n\n        if (prevAuxState.length > 0) {\n          prevStateStr = prevAuxState;\n        }\n\n        if (currAuxState.length > 0) {\n          currStateStr = currAuxState;\n        }\n\n        // Update the state in the UIModel\n        model.agentSettings.currentState = currState;\n        model.agentSettings.currentStateLabel = currAuxState;\n        model.agentStatePacket = response;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to change agent state';\n        }\n\n        // log message response\n        var message =\n          'Unable to change agent state. ' + formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var AuthenticateRequest = function(config) {\n      this.username = config.username;\n      this.password = config.password;\n      this.platformId = config.platformId;\n      this.rcAccessToken = config.rcAccessToken;\n      this.tokenType = config.tokenType;\n      this.engageAccessToken = config.engageAccessToken;\n      this.authType = config.authType;\n    };\n\n    AuthenticateRequest.prototype.sendHttpRequest = function() {\n      UIModel.getInstance().authenticateRequest = this;\n      switch (this.authType) {\n        case AUTHENTICATE_TYPES.USERNAME_PASSWORD:\n          _buildHttpRequest(this.authType, 'login/agent', {\n            username: this.username,\n            password: this.password,\n            platformId: this.platformId,\n          });\n          break;\n        case AUTHENTICATE_TYPES.RC_TOKEN:\n          _buildHttpRequest(this.authType, 'login/rc/accesstoken', {\n            rcAccessToken: this.rcAccessToken,\n            rcTokenType: this.tokenType,\n          });\n          break;\n        case AUTHENTICATE_TYPES.ENGAGE_TOKEN:\n          _buildHttpRequest(this.authType, 'login', {});\n          break;\n      }\n    };\n\n    /*\n     * response:\n     * {\n     *   \"refreshToken\": \"223867e6-ad0f-4af1-bbe7-5090d8259065\",\n     *   \"accessToken\": \"\",\n     *   \"tokenType\": \"Bearer\",\n     *   \"platformId\": \"local\",\n     *   \"iqUrl\": \"d01-dev.vacd.biz\",\n     *   \"port\": 8080,\n     *   \"agentDetails\": [\n     *       {\n     *           \"agentId\": 1,\n     *           \"firstName\": \"D\",\n     *           \"lastName\": \"LB\",\n     *           \"email\": \"dlb@somewhere.com\",\n     *           \"username\": \"dlbooks\"\n     *       }\n     *   ],\n     *   \"adminId\": null,\n     *   \"mainAccountId\": \"99990000\"\n     * }\n     */\n    AuthenticateRequest.prototype.processResponse = function(response) {\n      var model = UIModel.getInstance();\n      model.authenticatePacket = response; // raw response packet\n      model.authenticateRequest.accessToken = response.accessToken; // TODO - dlb - store in local storage\n      model.authenticateRequest.refreshToken = response.refreshToken;\n      model.authenticateRequest.tokenType = response.tokenType;\n      model.authenticateRequest.socketUrl = response.iqUrl;\n      model.authenticateRequest.socketPort = response.port;\n      model.authenticateRequest.agents = response.agentDetails;\n      model.authenticateRequest.platformId = response.platformId;\n\n      return model.authenticateRequest;\n    };\n\n    function _buildHttpRequest(authType, path, queryParams) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseAuthUri;\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      switch (authType) {\n        case AUTHENTICATE_TYPES.USERNAME_PASSWORD:\n        case AUTHENTICATE_TYPES.RC_TOKEN:\n          params['queryParams'] = queryParams;\n          var errorMsg =\n            'Error on agent authenticate POST to engage-auth. URL: ' +\n            baseUrl +\n            path;\n          new HttpService(baseUrl).httpPost(path, params).then(\n            function(response) {\n              try {\n                response = JSON.parse(response.response);\n\n                var authenticateResponse = UIModel.getInstance().authenticateRequest.processResponse(\n                  response,\n                );\n                utils.fireCallback(\n                  UIModel.getInstance().libraryInstance,\n                  CALLBACK_TYPES.AUTHENTICATE,\n                  authenticateResponse,\n                );\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              }\n            },\n            function(err) {\n              var errResponse = {\n                type: 'Authenticate Error',\n                message: errorMsg,\n                err: err,\n              };\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              utils.fireCallback(\n                UIModel.getInstance().libraryInstance,\n                CALLBACK_TYPES.AUTHENTICATE,\n                errResponse,\n              );\n            },\n          );\n          break;\n        case AUTHENTICATE_TYPES.ENGAGE_TOKEN:\n          var errMsg =\n            'Error on agent authenticate GET to engage-auth. URL: ' +\n            baseUrl +\n            path;\n          params.headers['Authorization'] =\n            'Bearer ' +\n            utils.toString(\n              UIModel.getInstance().authenticateRequest.engageAccessToken,\n            );\n          new HttpService(baseUrl).httpGet(path, params).then(\n            function(response) {\n              try {\n                response = JSON.parse(response.response);\n\n                var authenticateResponse = UIModel.getInstance().authenticateRequest.processResponse(\n                  response,\n                );\n                utils.fireCallback(\n                  UIModel.getInstance().libraryInstance,\n                  CALLBACK_TYPES.AUTHENTICATE,\n                  authenticateResponse,\n                );\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errMsg, err);\n              }\n            },\n            function(err) {\n              utils.logMessage(LOG_LEVELS.WARN, errMsg, err);\n              utils.fireCallback(\n                UIModel.getInstance().libraryInstance,\n                CALLBACK_TYPES.AUTHENTICATE,\n                err,\n              );\n            },\n          );\n          break;\n      }\n    }\n\n    var BargeInRequest = function(audioType, agentId, uii, monitorAgentId) {\n      this.audioType = audioType || 'FULL';\n      this.agentId = agentId;\n      this.uii = uii;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UIV22008931055822\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"BARGE-IN\",\n     *      \"agent_id\":{\"#text\":\"94\"},\n     *      \"uii\":{\"#text\":\"200809031054510000000900020961\"},\n     *      \"audio_state\":{\"#text\":\"FULL\"},\n     *      \"monitor_agent_id\":{\"#text\":\"1856\"}\n     *    }\n     * }\n     */\n    BargeInRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.BARGE_IN,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          audio_state: {\n            '#text': utils.toString(this.audioType),\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes BARGE-IN packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008090317393001252\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"BARGE-IN\",\n     *      \"agent_id\":{\"#text\":\"94\"},\n     *      \"uii\":{},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{\"#text\":\"Barge-In processed successfully!\"},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    BargeInRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(LOG_LEVELS.DEBUG, formattedResponse.message, response);\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'There was an error processing the Barge-In request. ' +\n            formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var CallNotesRequest = function(notes) {\n      this.notes = notes;\n    };\n\n    /*\n     * This event is responsible for allowing an agent to tag a call with notes\n     */\n    CallNotesRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.CALL_NOTES,\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class process CALL-NOTES packets rec'd from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"CALL-NOTES\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{}\n     *   }\n     * }\n     */\n    CallNotesRequest.prototype.processResponse = function(response) {\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (formattedResponse.status === 'OK') {\n        formattedResponse.message = 'Call notes have been updated.';\n        formattedResponse.type = 'INFO_EVENT';\n      } else {\n        formattedResponse.type = 'ERROR_EVENT';\n        formattedResponse.message = 'Unable to update notes.';\n      }\n\n      return formattedResponse;\n    };\n\n    var CallbackCancelRequest = function(leadId, agentId) {\n      this.agentId = agentId || UIModel.getInstance().agentSettings.agentId;\n      this.leadId = leadId;\n    };\n\n    CallbackCancelRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CALLBACK_CANCEL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          lead_id: {\n            '#text': this.leadId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    // NOTE: cancel callback response sent as a generic notification message\n\n    var CallbacksPendingRequest = function(agentId) {\n      this.agentId = agentId || UIModel.getInstance().agentSettings.agentId;\n    };\n\n    CallbacksPendingRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CALLBACK_PENDING,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling an PENDING-CALLBACKS response packet from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"PENDING-CALLBACKS\",\n     *      \"lead\":{\n     *          \"@aux_data1\":\"\",\n     *          \"@aux_data2\":\"\",\n     *          \"@aux_data3\":\"\",\n     *          \"@aux_data4\":\"\",\n     *          \"@aux_data5\":\"\",\n     *          \"@destination\":\"5555555555\",\n     *          \"@dial_group_id\":\"\",\n     *          \"@dial_group_name\":\"\",\n     *          \"@dial_time\":\"2016-08-03 10:00\",\n     *          \"@extern_id\":\"\",\n     *          \"@lead_id\":\"\",\n     *          \"lead_id\":{},\n     *          \"extern_id\":{},\n     *          \"extern_id\":{},\n     *          \"first_name\":{},\n     *          \"mid_name\":{},\n     *          \"last_name\":{},\n     *          \"suffix\":{},\n     *          \"title\":{},\n     *          \"address1\":{},\n     *          \"address2\":{},\n     *          \"city\":{},\n     *          \"state\":{},\n     *          \"zip\":{},\n     *          \"gate_keeper\":{}\n     *      }\n     *   }\n     * }\n     */\n    CallbacksPendingRequest.prototype.processResponse = function(response) {\n      var leadsRaw = response.ui_response.lead;\n      var leads = [];\n      if (!Array.isArray(leadsRaw)) {\n        leadsRaw = [leadsRaw];\n      }\n\n      for (var l = 0; l < leadsRaw.length; l++) {\n        var leadRaw = leadsRaw[l];\n        if (leadRaw == null) {\n          continue;\n        }\n\n        leads.push(parseLead(leadRaw));\n      }\n\n      UIModel.getInstance().agentSettings.pendingCallbacks = JSON.parse(\n        JSON.stringify(leads),\n      );\n\n      return UIModel.getInstance().agentSettings.pendingCallbacks;\n    };\n\n    function parseLead(leadRaw) {\n      var lead = {\n        auxData1: leadRaw['@aux_data1'],\n        auxData2: leadRaw['@aux_data2'],\n        auxData3: leadRaw['@aux_data3'],\n        auxData4: leadRaw['@aux_data4'],\n        auxData5: leadRaw['@aux_data5'],\n        destination: leadRaw['@destination'],\n        dialGroupId: leadRaw['@dial_group_id'],\n        dialGroupName: leadRaw['@dial_group_name'],\n        dialTime: leadRaw['@dial_time'],\n        externId: leadRaw['@extern_id'],\n        leadId: leadRaw['@lead_id'],\n        firstName: utils.getText(leadRaw, 'first_name'),\n        midName: utils.getText(leadRaw, 'mid_name'),\n        lastName: utils.getText(leadRaw, 'last_name'),\n        sufix: utils.getText(leadRaw, 'suffix'),\n        title: utils.getText(leadRaw, 'title'),\n        address1: utils.getText(leadRaw, 'address1'),\n        address2: utils.getText(leadRaw, 'address2'),\n        city: utils.getText(leadRaw, 'city'),\n        state: utils.getText(leadRaw, 'state'),\n        zip: utils.getText(leadRaw, 'zip'),\n        gateKeeper: utils.getText(leadRaw, 'gate_keeper'),\n      };\n\n      return lead;\n    }\n\n    /*\n     * This request is used to get the list of dispositions for a given campaign\n     * E.g. in the lead search form for manual passes\n     *\n     */\n    var CampaignDispositionsRequest = function(campaignId) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.campaignId = campaignId;\n    };\n\n    CampaignDispositionsRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CAMPAIGN_DISPOSITIONS,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          campaign_id: {\n            '#text': utils.toString(this.campaignId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling CAMPAIGN-DISPOSITIONS packets received\n     * from IntelliQueue. It will save a copy of it in the UIModel.\n     *\n     * {\"ui_response\":{\n     *      \"@campaign_id\":\"60403\",\n     *      \"@message_id\":\"IQ10012016081813480400006\",\n     *      \"@response_to\":\"0b61c3ca-c4fc-9942-c139-da4978053c9d\",\n     *      \"@type\":\"CAMPAIGN-DISPOSITIONS\",\n     *      \"outdial_dispositions\":{\n     *          \"disposition\":[\n     *              {\"@disposition_id\":\"1\",\"#text\":\"requeue\"},\n     *              {\"@disposition_id\":\"2\",\"#text\":\"complete\"}\n     *          ]\n     *       }\n     *    }\n     * }\n     */\n    CampaignDispositionsRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var model = UIModel.getInstance();\n      var dispositions = utils.processResponseCollection(\n        resp,\n        'outdial_dispositions',\n        'disposition',\n        'disposition',\n      );\n\n      model.outboundSettings.campaignDispositions = dispositions;\n      return dispositions;\n    };\n\n    var ChatStateRequest = function(chatState) {\n      this.chatState = (chatState && chatState.toUpperCase()) || '';\n    };\n\n    ChatStateRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_STATE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          state: {\n            '#text': this.chatState,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes CHAT-STATE packets rec'd from IQ. It will check the state of the\n     * packet and then set the state on the model.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"AGENT-STATE\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"prev_state\":{\"#text\":\"CHAT-PRESENTED\"},\n     *      \"current_state\":{\"#text\":\"CHAT-ENGAGED\"}\n     *   }\n     * }\n     */\n    ChatStateRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var prevState = utils.getText(resp, 'prev_state');\n      var currState = utils.getText(resp, 'current_state');\n      var model = UIModel.getInstance();\n\n      // add message and detail if present\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = response.ui_response.agent_id['#text'] || '';\n      formattedResponse.previousState = prevState;\n      formattedResponse.currentState = currState;\n\n      if (status == 'OK') {\n        // Update the state in the UIModel\n        model.agentSettings.currentChatState = currState;\n        model.chatStatePacket = response;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to change chat state';\n        }\n\n        // log message response\n        var message =\n          'Unable to change chat state. ' + formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var XferColdRequest = function(dialDest, callerId, sipHeaders, countryId) {\n      this.dialDest = dialDest;\n      this.callerId = callerId || '';\n      this.sipHeaders = sipHeaders || [];\n      this.countryId = countryId || '';\n    };\n\n    XferColdRequest.prototype.formatJSON = function() {\n      var fields = [];\n      for (var i = 0; i < this.sipHeaders.length; i++) {\n        var fieldObj = this.sipHeaders[i];\n        fields.push({\n          '@name': utils.toString(fieldObj.name),\n          '@value': utils.toString(fieldObj.value),\n        });\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_COLD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          xfer_header: fields,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes COLD-XFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"COLD-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231447590139000000000200\"},\n     *      \"session_id\":{\"#text\":\"3\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"OK\"},\n     *      \"detail\":{}\n     *   }\n     * }\n     */\n    XferColdRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.dialDest = utils.getText(resp, 'dial_dest');\n\n      if (formattedResponse.status === 'OK') {\n      } else {\n        // log message response\n        var message =\n          'There was an error processing the Cold Xfer request. ' +\n          formattedResponse.message +\n          ' : ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var DirectAgentTransfer = function(targetAgentId, transferType, uii) {\n      this.targetAgentId = targetAgentId;\n      this.transferType = transferType;\n      this.uii = uii || UIModel.getInstance().currentCall.uii;\n    };\n\n    DirectAgentTransfer.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.DIRECT_AGENT_TRANSFER,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          target_agent_id: {\n            '#text': utils.toString(this.targetAgentId),\n          },\n          transfer_type: {\n            '#text': utils.toString(this.transferType),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes DIRECT-AGENT-TRANSFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"DIRECT-AGENT-TRANSFER\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{\"#text\":\"OK\"},\n     *      \"type\":{\"#text\":\"WARM|COLD|CANCEL\"}\n     *   }\n     * }\n     */\n    DirectAgentTransfer.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.type = utils.getText(resp, 'type');\n\n      if (formattedResponse.status !== 'OK') {\n        // log message response\n        var message =\n          'There was an error processing the Direct Agent Transfer request. ' +\n          formattedResponse.message +\n          ' : ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var DirectAgentTransferList = function() {};\n\n    DirectAgentTransferList.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes DIRECT-AGENT-TRANSFER-LIST packets rec'd from IQ.\n     *\n     *  {\n     *      \"ui_response\":{\n     *          \"@message_id\":\"IQD01DEV2018052917202600038\",\n     *          \"@response_to\":\"f0b2e8a3-87fe-13ee-4d00-9d145bfe2be8\",\n     *          \"@type\":\"DIRECT-AGENT-TRANSFER-LIST\",\n     *          \"status\":{\n     *              \"#text\":\"true\"\n     *          },\n     *          \"message\":{\n     *              \"#text\":\"OK\"\n     *          },\n     *          \"agents\": [\n     *             {\n     *                 \"@agent_aux_state\":\"AVAILABLE\",\n     *                 \"@agent_id\":\"1184160\",\n     *                 \"@agent_state\":\"AVAILABLE\",\n     *                 \"@available\":\"true\",\n     *                 \"@first_name\":\"ross\",\n     *                 \"@last_name\":\"m\",\n     *                 \"@pending_disp\":\"false\",\n     *                 \"@state_duration\":\"379\",\n     *                 \"@username\":\"rm1\"\n     *             },\n     *             {\n     *                 \"@agent_aux_state\":\"AVAILABLE\",\n     *                 \"@agent_id\":\"1184161\",\n     *                 \"@agent_state\":\"AVAILABLE\",\n     *                 \"@available\":\"true\",\n     *                 \"@first_name\":\"ross\",\n     *                 \"@last_name\":\"m\",\n     *                 \"@pending_disp\":\"false\",\n     *                 \"@state_duration\":\"84\",\n     *                 \"@username\":\"rm2\"\n     *             }\n     *         ]\n     *      }\n     *  }\n     */\n    DirectAgentTransferList.prototype.processResponse = function(response) {\n      var formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.agents = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'agents',\n      );\n\n      if (formattedResponse.status !== 'OK') {\n        // log message response\n        var message =\n          'There was an error processing the Direct Agent Transfer List request. ' +\n          formattedResponse.message +\n          ' : ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var DispositionRequest = function(\n      uii,\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      contactForwardNumber,\n      survey,\n      externId,\n      leadId,\n      requestId,\n    ) {\n      this.uii = uii;\n      this.dispId = dispId;\n      this.notes = notes;\n      this.callback = callback;\n      this.callbackDTS = callbackDTS || '';\n      this.contactForwardNumber = contactForwardNumber || null;\n      this.externId = externId || null; // outbound-disposition only\n      this.leadId = leadId || null; // outbound-disposition only\n      this.requestId = requestId || null; // outbound-disposition only (pipe leads)\n\n      /*\n       * survey = {\n       *      first_name: {\n       *          leadField: \"first_name\"\n       *          value: \"Geoff\"\n       *      },\n       *      last_name: {\n       *          leadField: \"last_name\"\n       *          value: \"Mina\"\n       *      }\n       *      ...\n       * }\n       */\n      this.survey = survey || null;\n    };\n\n    /*\n     * This class is responsible for creating an inbound or outbound disposition packet to\n     * send to intelliqueue. It will grab uii and agent_id directly from packets saved\n     * in the UIModel. Then, using the information passed in, it will\n     * create the remainder of the packet. This class is called from the ExtendedCallForm\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"IQ20160817145840132\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OUTDIAL-DISPOSITION|INBOUND-DISPOSITION\",\n     *      \"session_id\":{\"#text\":\"2\"},  <-- ONLY WHEN AVAILABLE otherwise the node is left blank. this is the AGENT session_id\n     *      \"uii\":{\"#text\":\"201608171658440139000000000165\"},\n     *      \"agent_id\":{\"#text\":\"1180958\"},\n     *      \"lead_id\":{\"#text\":\"1800\"},                 <-- OUTDIAL-DISPOSITION ONLY\n     *      \"outbound_externid\":{\"#text\":\"3038593775\"}, <-- OUTDIAL-DISPOSITION ONLY\n     *      \"pending_request_id\":{\"#text\":\"\"},          <-- OUTDIAL-DISPOSITION ONLY\n     *      \"disposition_id\":{\"#text\":\"5950\"},\n     *      \"notes\":{\"#text\":\"note here\"},\n     *      \"call_back\":{\"#text\":\"FALSE\"},\n     *      \"call_back_DTS\":{},\n     *      \"contact_forwarding\":{},\n     *      \"survey\":{\n     *          \"response\":[\n     *              {\"@extern_id\":\"text_box\",\"@lead_update_column\":\"\",\"#text\":\"hello\"},\n     *              {\"@extern_id\":\"check_box\",\"@lead_update_column\":\"\",\"#text\":\"20\"},\n     *              {\"@extern_id\":\"radio_save\",\"@lead_update_column\":\"\",\"#text\":\"23\"}\n     *          ]\n     *      }\n     *   }\n     * }\n     */\n    DispositionRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          '@type': MESSAGE_TYPES.OUTDIAL_DISPOSITION,\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          session_id: {\n            '#text': '',\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          call_back: {\n            '#text': this.callback === true ? 'TRUE' : 'FALSE',\n          },\n          call_back_DTS: {\n            '#text': utils.toString(this.callbackDTS),\n          },\n          contact_forwarding: {\n            '#text': utils.toString(this.contactForwardNumber),\n          },\n          outbound_externid: {\n            '#text': utils.toString(this.externId),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n        },\n      };\n\n      if (\n        model.currentCall.outdialDispositions &&\n        model.currentCall.outdialDispositions.type === 'GATE'\n      ) {\n        msg.ui_request['@type'] = MESSAGE_TYPES.INBOUND_DISPOSITION;\n      }\n\n      if (model.currentCall.sessionId) {\n        msg.ui_request.session_id = { '#text': model.currentCall.sessionId };\n      }\n\n      /*\n       * converts survey to this response\n       * survey : {\n       *      response: [\n       *          { \"@extern_id\":\"\", \"@lead_update_column\":\"\", \"#text\":\"\" }\n       *      ]\n       * }\n       */\n      if (this.survey !== null) {\n        var response = [];\n        var keys = Object.keys(this.survey);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var obj = {\n            '@extern_id': key,\n            '@lead_update_column': utils.toString(this.survey[key].leadField),\n            '#text': utils.toString(this.survey[key].value),\n          };\n          response.push(obj);\n        }\n        msg.ui_request.survey = { response: response };\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    var DispositionManualPassRequest = function(\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      leadId,\n      requestId,\n      externId,\n    ) {\n      this.dispId = dispId;\n      this.notes = notes;\n      this.callback = callback;\n      this.callbackDTS = callbackDTS || '';\n      this.leadId = leadId || null;\n      this.requestId = requestId || null;\n      this.externId = externId || null;\n    };\n\n    /*\n     * Sends an OUTDIAL-DISPOSITION request, just a separate class\n     * specifically for dispositions on manual pass.\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"UIV220089241119416\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OUTDIAL-DISPOSITION\",\n     *      \"manual_disp\":{\"#text\":\"TRUE\"},\n     *      \"request_key\":{\"#text\":\"IQ10012016081719070100875\"},\n     *      \"session_id\":{},\n     *      \"uii\":{},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"lead_id\":{\"#text\":\"213215\"},\n     *      \"outbound_externid\":{\"#text\":\"909809\"},\n     *      \"disposition_id\":{\"#text\":\"126\"},\n     *      \"notes\":{\"#text\":\"here are my notes :)\"},\n     *      \"call_back\":{\"#text\":\"TRUE | FALSE\"},\n     *      \"call_back_DTS\":{\"#text\":\"2008-09-30 22:30:00 | null\"},\n     *      \"contact_forwarding\":{\"#text\":\"null\"}\n     *    }\n     * }\n     */\n    DispositionManualPassRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          '@type': MESSAGE_TYPES.OUTDIAL_DISPOSITION,\n          manual_disp: {\n            '#text': 'TRUE',\n          },\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          request_key: {\n            '#text': utils.toString(this.requestId),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          call_back: {\n            '#text': this.callback === true ? 'TRUE' : 'FALSE',\n          },\n          call_back_DTS: {\n            '#text': utils.toString(this.callbackDTS),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          extern_id: {\n            '#text': utils.toString(this.externId),\n          },\n          contact_forwarding: {\n            '#text': 'null',\n          },\n          session_id: {},\n          uii: {},\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ExtensionPresenceRequest = function() {};\n\n    ExtensionPresenceRequest.prototype.getExtensionPresenceInfo = function(\n      extensionIds,\n    ) {\n      UIModel.getInstance().ExtensionPresenceRequest = this;\n      _getExtensionPresenceInfo('rcdirectory/getExtensionPresenceStatus', {\n        extensionIds: extensionIds,\n      });\n    };\n\n    ExtensionPresenceRequest.prototype.processResponse = function(response) {\n      UIModel.getInstance().extensionPresenceResponse = response;\n      return UIModel.getInstance().extensionPresenceResponse;\n    };\n\n    function _getExtensionPresenceInfo(path, queryParams) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseApiUri;\n      var engageAccessToken =\n        'Bearer ' +\n        utils.toString(\n          UIModel.getInstance().authenticateRequest.engageAccessToken,\n        );\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      params.headers['Authorization'] = engageAccessToken;\n      params['queryParams'] = queryParams;\n      var errorMsg =\n        'Error while fetching extension presence response. URL: ' +\n        baseUrl +\n        path;\n\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function(response) {\n          try {\n            response = JSON.parse(response.response);\n            var extensionPresenceResponse = UIModel.getInstance().extensionPresenceRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.EXTENSION_PRESENCE,\n              extensionPresenceResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function(err) {\n          var errResponse = {\n            type: 'Error while fetching extension presence response.',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.EXTENSION_PRESENCE,\n            errResponse,\n          );\n        },\n      );\n    }\n\n    var HangupRequest = function(sessionId, resetPendingDisp) {\n      this.sessionId = sessionId || null;\n      this.resetPendingDisp = resetPendingDisp || false;\n    };\n\n    HangupRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.HANGUP,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(UIModel.getInstance().currentCall.uii),\n          },\n          session_id: {\n            '#text': utils.toString(\n              this.sessionId === null\n                ? UIModel.getInstance().currentCall.sessionId\n                : this.sessionId,\n            ),\n          },\n          cancel_pending_disp: {\n            '#text': this.resetPendingDisp === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var HoldRequest = function(holdState, sessionId) {\n      this.holdState = holdState;\n      this.sessionId = sessionId || '1';\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"HOLD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"1\"},\n     *      \"hold_state\":{\"#text\":\"ON\"}\n     *    }\n     * }\n     */\n    HoldRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.HOLD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n          hold_state: {\n            '#text':\n              this.holdState === true || this.holdState === 'true'\n                ? 'ON'\n                : 'OFF',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes HOLD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"HOLD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"1\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"hold_state\":{\"#text\":\"ON\"}\n     *    }\n     * }\n     */\n    HoldRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.holdState = utils.getText(resp, 'hold_state') === 'ON';\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message =\n              'Broadcasting new hold state of ' + formattedResponse.holdState;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Broadcasting new hold state of ' + formattedResponse.holdState,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Hold Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Error processing HOLD request. ' +\n            +formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail;\n        }\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'Error processing HOLD request. ' + formattedResponse.detail,\n          response,\n        );\n      }\n\n      var model = UIModel.getInstance();\n      if (\n        formattedResponse.sessionId !== '1' &&\n        model.transferSessions[formattedResponse.sessionId]\n      ) {\n        // we have a hold for a transfer session\n        model.transferSessions[formattedResponse.sessionId].onHold =\n          formattedResponse.holdState;\n      }\n\n      return formattedResponse;\n    };\n\n    var LeadHistoryRequest = function(leadId) {\n      this.leadId = leadId;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"lead_id\":{\"#text\":\"12\"},\n     *    }\n     * }\n     */\n    LeadHistoryRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_HISTORY,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-HISTORY packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@lead_id\":\"2653\",\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"previous_dial\":{\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *      }\n     *   }\n     * }\n     *\n     * OR\n     *\n     * {\"ui_response\":{\n     *      \"@lead_id\":\"2653\",\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"previous_dial\":[\n     *        {\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *        },\n     *        {\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *        }\n     *      ]\n     *   }\n     * }\n     */\n    LeadHistoryRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var histResponse = {\n        leadId: resp['@lead_id'],\n      };\n\n      var history = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'previous_dial',\n      );\n\n      // always return array, even if only one item\n      if (!Array.isArray(history)) {\n        history = [history];\n      }\n      histResponse.leadHistory = history;\n\n      return histResponse;\n    };\n\n    var LeadInsertRequest = function(dataObj) {\n      // handle boolean value conversion\n      if (dataObj.agent_reserved && dataObj.agent_reserved === true) {\n        dataObj.agent_reserved = '1';\n      } else {\n        dataObj.agent_reserved = '0';\n      }\n\n      if (dataObj.dialable && dataObj.dialable === true) {\n        dataObj.dialable = '1';\n      } else {\n        dataObj.dialable = '0';\n      }\n\n      this.dataObj = dataObj;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-INSERT\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"campaign_id\":{\"#text\":\"\"},\n     *      \"lead_phone\":{\"#text\":\"\"},\n     *      \"dialable\":{\"#text\":\"\"},\n     *      \"agent_reserved\":{\"#text\":\"\"},\n     *      \"callback_dts\":{\"#text\":\"\"},\n     *      \"first_name\":{\"#text\":\"\"},\n     *      \"mid_name\":{\"#text\":\"\"},\n     *      \"last_name\":{\"#text\":\"\"},\n     *      \"suffix\":{\"#text\":\"\"},\n     *      \"title\":{\"#text\":\"\"},\n     *      \"address1\":{\"#text\":\"\"},\n     *      \"address2\":{\"#text\":\"\"},\n     *      \"city\":{\"#text\":\"\"},\n     *      \"state\":{\"#text\":\"\"},\n     *      \"zip\":{\"#text\":\"\"},\n     *      \"email\":{\"#text\":\"\"},\n     *      \"gateKeeper\":{\"#text\":\"\"},\n     *      \"aux_data1\":{\"#text\":\"\"},\n     *      \"aux_data2\":{\"#text\":\"\"},\n     *      \"aux_data3\":{\"#text\":\"\"},\n     *      \"aux_data4\":{\"#text\":\"\"},\n     *      \"aux_data5\":{\"#text\":\"\"},\n     *    }\n     * }\n     */\n    LeadInsertRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_INSERT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.dataObj.agent_id),\n          },\n          campaign_id: {\n            '#text': utils.toString(this.dataObj.campaign_id),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.dataObj.lead_phone),\n          },\n          dialable: {\n            '#text': utils.toString(this.dataObj.dialable),\n          },\n          agent_reserved: {\n            '#text': utils.toString(this.dataObj.agent_reserved),\n          },\n          call_back_dts: {\n            '#text': utils.toString(this.dataObj.callback_dts),\n          },\n          first_name: {\n            '#text': utils.toString(this.dataObj.first_name),\n          },\n          mid_name: {\n            '#text': utils.toString(this.dataObj.mid_name),\n          },\n          last_name: {\n            '#text': utils.toString(this.dataObj.last_name),\n          },\n          suffix: {\n            '#text': utils.toString(this.dataObj.suffix),\n          },\n          title: {\n            '#text': utils.toString(this.dataObj.title),\n          },\n          address1: {\n            '#text': utils.toString(this.dataObj.address1),\n          },\n          address2: {\n            '#text': utils.toString(this.dataObj.address2),\n          },\n          city: {\n            '#text': utils.toString(this.dataObj.city),\n          },\n          state: {\n            '#text': utils.toString(this.dataObj.state),\n          },\n          zip: {\n            '#text': utils.toString(this.dataObj.zip),\n          },\n          email: {\n            '#text': utils.toString(this.dataObj.email),\n          },\n          gate_keeper: {\n            '#text': utils.toString(this.dataObj.gate_keeper),\n          },\n          aux_data1: {\n            '#text': utils.toString(this.dataObj.aux_data1),\n          },\n          aux_data2: {\n            '#text': utils.toString(this.dataObj.aux_data2),\n          },\n          aux_data3: {\n            '#text': utils.toString(this.dataObj.aux_data3),\n          },\n          aux_data4: {\n            '#text': utils.toString(this.dataObj.aux_data4),\n          },\n          aux_data5: {\n            '#text': utils.toString(this.dataObj.aux_data5),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-INSERT packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-INSERT\",\n     *      \"status\":{\"#text\":\"TRUE|FALSE\"},\n     *      \"msg\":{\"#text\":\"\"},\n     *      \"detail\":{\"#text\":\"\"},\n     *   }\n     * }\n     */\n    LeadInsertRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = resp.msg['#text'];\n\n      return formattedResponse;\n    };\n\n    var LeadUpdateRequest = function(leadId, leadPhone, baggage) {\n      this.leadId = leadId;\n      this.leadPhone = leadPhone;\n      this.baggage = baggage;\n      this.agentId = utils.toString(\n        UIModel.getInstance().agentSettings.agentId,\n      );\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-UPDATE\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"lead_id\":{\"#text\":\"12\"},\n     *      \"lead_phone\":{\"#text\":\"12\"},\n     *       \"baggage\":{\n     *          \"lead_id\":{\"#text\":\"64306\"},\n     *          \"extern_id\":{\"#text\":\"9548298548\"},\n     *          \"first_name\":{\"#text\":\"Ryant\"},\n     *          \"mid_name\":{},\n     *          \"last_name\":{\"#text\":\"Taylor\"},\n     *          \"state\":{\"#text\":\"OH\"},\n     *          \"aux_data1\":{\"#text\":\"BMAK\"},\n     *          \"aux_data2\":{\"#text\":\"BMAK-041653-934\"},\n     *          \"aux_data3\":{\"#text\":\"Call Ctr 1\"},\n     *          \"aux_data4\":{},\n     *          \"aux_data5\":{},\n     *          \"address1\":{\"#text\":\"8010 Maryland Ave\"},\n     *          \"address2\":{},\n     *          \"city\":{\"#text\":\"Cleveland\"},\n     *          \"zip\":{\"#text\":\"44105\"},\n     *          \"aux_external_url\":{},\n     *          \"aux_greeting\":{},\n     *          \"aux_phone\":{}\n     *      },\n     *    }\n     * }\n     */\n    LeadUpdateRequest.prototype.formatJSON = function() {\n      // make sure required baggage fields are present\n      this.baggage = _formatBaggage(this.baggage);\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_UPDATE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          baggage: this.baggage,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-UPDATE packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-UPDATE\",\n     *      \"status\":{\"#text\":\"TRUE|FALSE\"},\n     *      \"msg\":{\"#text\":\"64306\"},\n     *      \"detail\":{\"#text\":\"64306\"},\n     *   }\n     * }\n     */\n    LeadUpdateRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = resp.msg['#text'];\n\n      return formattedResponse;\n    };\n\n    var _formatBaggage = function(baggage) {\n      var bag = {};\n      bag.first_name = { '#text': baggage.first_name || '' };\n      bag.mid_name = { '#text': baggage.mid_name || '' };\n      bag.last_name = { '#text': baggage.last_name || '' };\n      bag.suffix = { '#text': baggage.suffix || '' };\n      bag.title = { '#text': baggage.title || '' };\n      bag.address1 = { '#text': baggage.address1 || '' };\n      bag.address2 = { '#text': baggage.address2 || '' };\n      bag.city = { '#text': baggage.city || '' };\n      bag.state = { '#text': baggage.state || '' };\n      bag.zip = { '#text': baggage.zip || '' };\n      bag.email = { '#text': baggage.email || '' };\n      bag.gate_keeper = { '#text': baggage.gate_keeper || '' };\n      bag.extern_id = { '#text': baggage.extern_id || '' };\n      bag.aux_data1 = { '#text': baggage.aux_data1 || '' };\n      bag.aux_data2 = { '#text': baggage.aux_data2 || '' };\n      bag.aux_data3 = { '#text': baggage.aux_data3 || '' };\n      bag.aux_data4 = { '#text': baggage.aux_data4 || '' };\n      bag.aux_data5 = { '#text': baggage.aux_data5 || '' };\n\n      return bag;\n    };\n\n    var LoginRequest = function(\n      dialDest,\n      queueIds,\n      chatIds,\n      skillProfileId,\n      dialGroupId,\n      updateFromAdminUI,\n      isForce,\n    ) {\n      this.queueIds = queueIds || [];\n      this.chatIds = chatIds || [];\n      this.skillProfileId = skillProfileId || '';\n      this.dialGroupId = dialGroupId || '';\n      this.dialDest = dialDest || '';\n      this.updateFromAdminUI = updateFromAdminUI || false;\n      this.loginType = 'NO-SELECTION';\n      this.updateLogin = false;\n      this.isForce = isForce;\n\n      // Remove any ids agent doesn't have access to\n      var model = UIModel.getInstance();\n      this.queueIds = utils.checkExistingIds(\n        model.inboundSettings.availableQueues,\n        this.queueIds,\n        'gateId',\n      );\n      this.chatIds = utils.checkExistingIds(\n        model.chatSettings.availableChatQueues,\n        this.chatIds,\n        'chatQueueId',\n      );\n      this.skillProfileId =\n        utils.checkExistingIds(\n          model.inboundSettings.availableSkillProfiles,\n          [this.skillProfileId],\n          'profileId',\n        )[0] || '';\n      this.dialGroupId =\n        utils.checkExistingIds(\n          model.outboundSettings.availableOutdialGroups,\n          [this.dialGroupId],\n          'dialGroupId',\n        )[0] || '';\n\n      // Set loginType value\n      if (this.queueIds.length > 0 && this.dialGroupId !== '') {\n        this.loginType = 'BLENDED';\n      } else if (this.queueIds.length > 0) {\n        this.loginType = 'INBOUND';\n      } else if (this.dialGroupId !== '') {\n        this.loginType = 'OUTBOUND';\n      } else if (this.chatIds.length > 0) {\n        this.loginType = 'CHAT';\n      } else {\n        this.loginType = 'NO-SELECTION';\n      }\n\n      // set updateLogin value\n      if (model.agentSettings.isLoggedIn) {\n        this.updateLogin = true;\n        this.dialDest = UIModel.getInstance().agentSettings.dialDest;\n      }\n\n      // validate dialDest is sip or 10-digit num\n      if (!utils.validateDest(this.dialDest)) {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'dialDest [' +\n            this.dialDest +\n            '] must be a valid sip or 10-digit DID',\n          '',\n        );\n      }\n    };\n\n    LoginRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          access_token: {\n            '#text': UIModel.getInstance().authenticateRequest.accessToken,\n          },\n          hash_code: {\n            '#text': UIModel.getInstance().connectionSettings.hashCode,\n          },\n          allow_multisocket: {\n            '#text': utils.toString(\n              UIModel.getInstance().applicationSettings.allowMultiSocket,\n            ),\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          login_type: {\n            '#text': this.loginType,\n          },\n          update_login: {\n            '#text': utils.toString(this.updateLogin),\n          },\n          outdial_group_id: {\n            '#text': utils.toString(this.dialGroupId),\n          },\n          skill_profile_id: {\n            '#text': utils.toString(this.skillProfileId),\n          },\n          update_from_adminui: {\n            '#text': utils.toString(this.updateFromAdminUI),\n          },\n          agent_platform_id: {\n            '#text': utils.toString(2), // Hard-coded platformId for agent-js repo\n          },\n          is_force: {\n            '#text': utils.toString(this.isForce),\n          },\n        },\n      };\n\n      // add arrays\n      var queueIds = [];\n      for (var i = 0; i < this.queueIds.length; i++) {\n        if (this.queueIds[i] !== '') {\n          queueIds.push({ '#text': utils.toString(this.queueIds[i]) });\n        }\n      }\n      if (queueIds.length > 0) {\n        msg.ui_request.gates = { gate_id: queueIds };\n      } else {\n        msg.ui_request.gates = {};\n      }\n\n      var chatIds = [];\n      for (var i = 0; i < this.chatIds.length; i++) {\n        if (this.chatIds[i] !== '') {\n          chatIds.push({ '#text': utils.toString(this.chatIds[i]) });\n        }\n      }\n      if (chatIds.length > 0) {\n        msg.ui_request.chat_queues = { chat_queue_id: chatIds };\n      } else {\n        msg.ui_request.chat_queues = {};\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This function is responsible for handling the response to Login from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082513212000447\",\n     *      \"@response_to\":\"IQ201608251121200\",\n     *      \"@type\":\"LOGIN\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"status\":{\"#text\":\"SUCCESS\"},\n     *      \"message\":{\"#text\":\"Hello Geoffrey Mina!\"},\n     *      \"detail\":{\"#text\":\"Logon request processed successfully!\"},\n     *      \"hash_code\":{\"#text\":\"404946966\"},\n     *      \"login_type\":{\"#text\":\"BLENDED\"},\n     *      \"outdial_group_id\":{\"#text\":\"50692\"},\n     *      \"skill_profile_id\":{\"#text\":\"1513\"},\n     *      \"gates\":{\n     *          \"gate_id\":[\n     *              {\"#text\":\"11116\"},\n     *              {\"#text\":\"11117\"}\n     *          ]\n     *      },\n     *      \"chat_queues\":{\n     *          \"chat_queue_id\":{\"#text\":\"30\"}\n     *      }\n     *    }\n     * }\n     */\n    LoginRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var detail = utils.getText(resp, 'detail');\n      var model = UIModel.getInstance();\n      var message = '';\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var Lib = UIModel.getInstance().libraryInstance;\n\n      if (detail === 'Logon Session Configuration Updated!') {\n        // this is an update login packet\n        model.agentSettings.updateLoginMode = true;\n\n        message = 'Logon Session Configuration Updated!';\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n      }\n\n      if (status === 'SUCCESS') {\n        if (!model.agentSettings.isLoggedIn) {\n          // fresh login, set UI Model properties\n          model.loginPacket = response;\n          model.agentSettings.isLoggedIn = true;\n          model.agentSettings.loginDTS = new Date();\n          model.connectionSettings.reconnect = true;\n          model.agentPermissions.allowLeadSearch = false;\n          model.agentSettings.dialDest = utils.getText(resp, 'dial_dest');\n          model.agentSettings.loginType = utils.getText(resp, 'login_type');\n          model.agentSettings.accountId = utils.getText(resp, 'account_id');\n          model.agentSettings.corporateDirectory = utils.getText(\n            resp,\n            'corporate_dir',\n          );\n\n          model.connectionSettings.isMultiSocket =\n            utils.getText(resp, 'is_multisocket') === 'true';\n\n          // If we allow multisocket, lets setup a listener for other tabs to request data\n          if (\n            model.applicationSettings.allowMultiSocket === true ||\n            model.connectionSettings.isMultiSocket === true\n          ) {\n            broadcastChannelHelper.init();\n          }\n\n          // Set collection values\n          setDialGroupSettings(response);\n          setGateSettings(response);\n          setChatQueueSettings(response);\n          setSkillProfileSettings(response);\n        } else {\n          if (model.agentSettings.updateLoginMode) {\n            model.agentSettings.dialDest = utils.getText(resp, 'dial_dest');\n            model.agentSettings.loginType = utils.getText(resp, 'login_type');\n            model.agentSettings.accountId = utils.getText(resp, 'account_id');\n\n            // This was an update login request\n            model.agentSettings.updateLoginMode = false;\n\n            // reset to false before updating dial group settings\n            model.agentPermissions.allowLeadSearch = false;\n            model.agentPermissions.requireFetchedLeadsCalled = false;\n            model.agentPermissions.allowPreviewLeadFilters = false;\n\n            // Set collection values\n            setDialGroupSettings(response);\n            setGateSettings(response);\n            setChatQueueSettings(response);\n            setSkillProfileSettings(response);\n          } else {\n            // this was a reconnect\n            message = 'Processed a Layer 2 Reconnect Successfully';\n\n            model.connectionSettings.isOnCall = utils.getText(\n              resp,\n              'is_on_call',\n            );\n            model.connectionSettings.activeCallUii = utils.getText(\n              resp,\n              'active_call_uii',\n            );\n            model.connectionSettings.isPendingDisp = utils.getText(\n              resp,\n              'is_pending_disp',\n            );\n\n            if (model.connectionSettings.isOnCall === false) {\n              if (model.currentCall.uii) {\n                var mockEndCallPacket = {\n                  ui_notification: {\n                    '@message_id': '',\n                    '@type': 'END-CALL',\n                    uii: { '#text': model.currentCall.uii },\n                    term_reason: { '#text': 'SOCKET-DISCONNECT' },\n                  },\n                };\n\n                utils.processNotification(Lib, mockEndCallPacket);\n              }\n\n              if (model.agentSettings.isOffhook) {\n                var offHookTermPacket = {\n                  ui_notification: {\n                    agent_id: {\n                      '#text': UIModel.getInstance().agentSettings.agentId,\n                    },\n                    '@type': 'OFF-HOOK-TERM',\n                    '@message_id': '',\n                  },\n                };\n\n                var agentProcessOffhookCallback = utils.processNotification(\n                  Lib,\n                  offHookTermPacket,\n                );\n                Lib.offhookTerm(agentProcessOffhookCallback);\n              }\n            } else if (\n              model.connectionSettings.isOnCall &&\n              (model.currentCall.uii !==\n                model.connectionSettings.activeCallUii ||\n                Lib.waitingForAddSession === true)\n            ) {\n              //if the agent does not know it is on a call, but IQ thinks it is on a call\n              //normally in the case of disconnect during transition\n\n              model.currentCall.uii = model.connectionSettings.activeCallUii;\n              model.currentCall.pendingDisp = false;\n              Lib.hangup(1, true);\n            } else {\n              //agent still is on call and there are transferSessions, verify no transferSession were drop\n              var activeAgentUiSessions = Lib.getTransferSessions();\n              var activeAgentSessions = response.ui_response.active_call_sessions.call_session_id.map(\n                function(sessionObj) {\n                  return sessionObj['#text'];\n                },\n              );\n\n              for (var transferSession in activeAgentUiSessions) {\n                if (activeAgentSessions.indexOf(transferSession) === -1) {\n                  //if the active ui session is no longer active, we need to tell the ui\n                  delete UIModel.getInstance().transferSessions[\n                    transferSession\n                  ];\n                }\n              }\n            }\n\n            utils.logMessage(LOG_LEVELS.INFO, message, response);\n          }\n        }\n\n        // always update guid and agent login hashcode if found\n        model.connectionSettings.hashCode =\n          utils.getText(resp, 'hash_code') || model.connectionSettings.hashCode;\n        model.agentSettings.guid =\n          utils.getText(resp, 'guid') || model.agentSettings.guid;\n        model.dataStore.save('agent_id', utils.getText(resp, 'agent_id'));\n        model.dataStore.save('hash_code', utils.getText(resp, 'hash_code'));\n        formattedResponse.agentSettings = model.agentSettings;\n        formattedResponse.agentPermissions = model.agentPermissions;\n        formattedResponse.applicationSettings = model.applicationSettings;\n        formattedResponse.chatSettings = model.chatSettings;\n        formattedResponse.connectionSettings = model.connectionSettings;\n        formattedResponse.inboundSettings = model.inboundSettings;\n        formattedResponse.outboundSettings = model.outboundSettings;\n        formattedResponse.scriptSettings = model.scriptSettings;\n      } else {\n        // Login failed\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Agent configuration attempt failed (2nd layer login)';\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    function setDialGroupSettings(response) {\n      var model = UIModel.getInstance();\n      var outdialGroups = model.outboundSettings.availableOutdialGroups;\n      model.outboundSettings.outdialGroup = {}; // reset\n      for (var g = 0; g < outdialGroups.length; g++) {\n        var group = outdialGroups[g];\n        if (\n          group.dialGroupId === response.ui_response.outdial_group_id['#text']\n        ) {\n          model.agentPermissions.allowLeadSearch = group.allowLeadSearch;\n          model.agentPermissions.allowPreviewLeadFilters =\n            group.allowPreviewLeadFilters;\n          model.agentPermissions.progressiveEnabled = group.progressiveEnabled;\n          model.outboundSettings.outdialGroup = JSON.parse(\n            JSON.stringify(group),\n          ); // copy object\n\n          // Only used for Preview or TCPA Safe accounts.\n          // If set to true, only allow fetching new leads when current leads are called or expired\n          model.agentPermissions.requireFetchedLeadsCalled =\n            group.requireFetchedLeadsCalled;\n        }\n      }\n    }\n\n    function setSkillProfileSettings(response) {\n      var model = UIModel.getInstance();\n      model.inboundSettings.skillProfile = {};\n      var skillProfiles = model.inboundSettings.availableSkillProfiles;\n      for (var s = 0; s < skillProfiles.length; s++) {\n        var profile = skillProfiles[s];\n        var responseId = utils.getText(\n          response.ui_response,\n          'skill_profile_id',\n        );\n        if (profile.profileId === responseId) {\n          model.inboundSettings.skillProfile = JSON.parse(\n            JSON.stringify(profile),\n          ); // copy object\n        }\n      }\n    }\n\n    function setGateSettings(response) {\n      var model = UIModel.getInstance();\n      var gates = model.inboundSettings.availableQueues;\n      var selectedGateIds = [];\n      var selectedGates = [];\n      var gateIds = response.ui_response.gates.gate_id || [];\n\n      if (!Array.isArray(gateIds)) {\n        gateIds = [gateIds];\n      }\n\n      for (var s = 0; s < gateIds.length; s++) {\n        var obj = gateIds[s];\n        selectedGateIds.push(obj['#text']);\n      }\n\n      for (var gIdx = 0; gIdx < gates.length; gIdx++) {\n        var gate = gates[gIdx];\n        if (selectedGateIds.indexOf(gate.gateId) > -1) {\n          selectedGates.push(gate);\n        }\n      }\n\n      model.inboundSettings.queues = JSON.parse(JSON.stringify(selectedGates)); // copy array\n    }\n\n    function setChatQueueSettings(response) {\n      var model = UIModel.getInstance();\n      var chatQueues = model.chatSettings.availableChatQueues;\n      var selectedChatQueueIds = [];\n      var selectedChatQueues = [];\n      var cQueues = response.ui_response.chat_queues || {};\n      var chatQueueIds = cQueues.chat_queue_id || [];\n\n      if (!Array.isArray(chatQueueIds)) {\n        chatQueueIds = [chatQueueIds];\n      }\n\n      for (var c = 0; c < chatQueueIds.length; c++) {\n        var obj = chatQueueIds[c];\n        selectedChatQueueIds.push(obj['#text']);\n      }\n\n      for (var cIdx = 0; cIdx < chatQueues.length; cIdx++) {\n        var chatQueue = chatQueues[cIdx];\n        if (selectedChatQueueIds.indexOf(chatQueue.chatQueueId) > -1) {\n          selectedChatQueues.push(chatQueue);\n        }\n      }\n\n      model.chatSettings.chatQueues = JSON.parse(\n        JSON.stringify(selectedChatQueues),\n      ); // copy array\n    }\n\n    var LoginPhase1Request = function() {};\n\n    LoginPhase1Request.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN_PHASE_1,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          reconnect: {\n            '#text': utils.toString(\n              UIModel.getInstance().connectionSettings.reconnect,\n            ),\n          },\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          access_token: {\n            '#text': utils.toString(\n              UIModel.getInstance().authenticateRequest.accessToken,\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This function is responsible for handling the login packet received from IntelliServices. It will save\n     * a copy of it in the UIModel as loginPacket, as well as set the isLoggedInIS variable to\n     * true (for reconnect purposes) and the loginDTS with the current date/time.\n     *\n     * {\"ui_response\":{\n     *      \"@type\":\"login\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"is_sso:{\"#text\":\"TRUE\"|\"FALSE\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"agent_pwd\":{\"#text\":\"bound25\"},\n     *      \"first_name\":{\"#text\":\"mandy\"},\n     *      \"last_name\":{\"#text\":\"pants\"},\n     *      \"email\":{\"#text\":\"mandypants@aol.coim\"},\n     *      \"agent_type\":{\"#text\":\"AGENT\"},\n     *      \"external_agent_id\":{\"#text\":\"blahblah\"},\n     *      \"default_login_dest\":{\"#text\":\"9548298548|123\"},\n     *      \"alt_default_login_dest\":{\"#text\":\"9548298548|123\"},\n     *      \"iq_url\":{\"#text\":\"dev.connectfirst.com\"},\n     *      \"iq_port\":{\"#text\":\"1313\"},\n     *      \"iq_ssl_port\":{\"#text\":\"1213\"},\n     *      \"iq_secret_key\":{\"#text\":\"F-OFF\"},\n     *      \"allow_inbound\":{\"#text\":\"1\"},\n     *      \"allow_outbound\":{\"#text\":\"1\"},\n     *      \"allow_chat\":{\"#text\":\"1\"},\n     *      \"allow_blended\":{\"#text\":\"0\"},\n     *      \"allow_off_hook\":{\"#text\":\"1\"},\n     *      \"allow_call_control\":{\"#text\":\"1\"},\n     *      \"allow_login_control\":{\"#text\":\"1\"},\n     *      \"allow_login_updates\":{\"#text\":\"1\"},\n     *      \"allow_lead_inserts\":{\"#text\":\"1\"},\n     *      \"show_lead_history\":{\"#text\":\"1\"},\n     *      \"allow_cross_gate_requeue\":{\"#text\":\"1\"},\n     *      \"phone_login_dial_group\":{\"#text\":\"44\"},\n     *      \"phone_login_pin\":{\"#text\":\"1234\"},\n     *      \"allow_manual_calls\":{\"#text\":\"1\"},\n     *      \"allow_manual_intl_calls\":{\"#text\":\"0\"},\n     *      \"init_login_state\":{\"#text\":\"ON-BREAK\"},\n     *      \"init_login_state_label\":{\"#text\":\"Morning Break\"},\n     *      \"outbound_prepay\":{\"#text\":\"0\"},\n     *      \"max_break_time\":{\"#text\":\"-1\"},\n     *      \"max_lunch_time\":{\"#text\":\"-1\"},\n     *      \"allow_lead_search\":{\"#text\":\"YES_ALL\"},\n     *      \"tcpa_safe_mode\":{\"#text\":\"1|0\"},\n     *      \"pci_enabled\":{\"#text\":\"1|0\"},\n     *      \"login_gates\":{\n     *          \"gate\":[\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"37\",\"@gate_name\":\"test\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"42\",\"@gate_name\":\"test gate two\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"43\",\"@gate_name\":\"test gate three\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"Amandas Other Gate\",\"@gate_id\":\"46\",\"@gate_name\":\"You know it!\"}\n     *          ]\n     *      },\n     *      \"login_chat_queues\":{\n     *          \"chat_queue\":[\n     *              {\"@chat_queue_description\":\"\",\"@chat_queue_id\":\"\",\"@chat_queue_name\":\"\"},\n     *              {\"@chat_queue_description\":\"\",\"@chat_queue_id\":\"\",\"@chat_queue_name\":\"\"}\n     *          ]\n     *      },\n     *      \"outdial_groups\":{\n     *          \"group\":[\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"\",\"@dial_group_id\":\"44\",\"@dial_group_name\":\"Geoff Dial Test\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"2\",\"@dial_group_desc\":\"AutoDial Configured Dial Group\",\"@dial_group_id\":\"46\",\"@dial_group_name\":\"Phone Only test5\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"Test\",\"@dial_group_id\":\"200000\",\"@dial_group_name\":\"Test\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"Test\",\"@dial_group_id\":\"200010\",\"@dial_group_name\":\"Carissa's Test Group\",\"@dial_mode\":\"PREDICTIVE\"}\n     *          ]\n     *      },\"skill_profiles\":{\n     *          \"profile\":[\n     *              {\"@profile_desc\":\"\",\"@profile_id\":\"571\",\"@profile_name\":\"skill1\"},\n     *              {\"@profile_desc\":\"\",\"@profile_id\":\"572\",\"@profile_name\":\"skill2\"}\n     *          ]\n     *      },\n     *      \"requeue_gates\":{\n     *          \"gate_group\":[\n     *              {\n     *                  \"@gate_group_id\":\"18\",\n     *                  \"@group_name\":\"new gate group\",\n     *                  \"gates\":{\n     *                      \"gate\":[\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"37\",\"@gate_name\":\"test\"},\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"43\",\"@gate_name\":\"test gate three\"},\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"42\",\"@gate_name\":\"test gate two\"}\n     *                      ]\n     *                  },\n     *                  \"skills\":{\n     *                      \"skill\":[\n     *                          {\"@skill_desc\":\"\",\"@skill_id\":\"58\",\"@skill_name\":\"one\"},\n     *                          {\"@skill_desc\":\"\",\"@skill_id\":\"59\",\"@skill_name\":\"two\"},\n     *                      ]\n     *                  }\n     *              }\n     *          ]\n     *      },\n     *      \"chat_rooms\":{},\n     *      \"scripts\": {\n     *           \"script\": {\n     *               \"@script_id\": \"15\",\n     *               \"@script_name\": \"Don't Read This Script\"\n     *           }\n     *      },\n     *      \"campaigns\": {\n     *          \"campaign\": {\n     *              \"@allow_lead_updates\": \"\",\n     *              \"@campaign_id\": \"\",\n     *              \"@campaign_name\": \"\",\n     *              \"@survey_id\": \"\",\n     *              \"@survey_name\": \"\",\n     *              \"custom_labels\": {\n     *                  \"@aux_1_label\": \"\",\n     *                  \"@aux_2_label\": \"\",\n     *                  \"@aux_3_label\": \"\",\n     *                  \"@aux_4_label\": \"\",\n     *                  \"@aux_5_label\": \"\"\n     *              },\n     *              \"generic_key_value_pairs\": {}\n     *          }\n     *      },\n     *      \"account_countries\":{\n     *          \"country\":[\n     *              {\"@country_id\":\"BRA\"},{\"@country_id\":\"FRA\"},{\"@country_id\":\"GER\"}\n     *          ]\n     *      }\n     *   }\n     * }\n     */\n    LoginPhase1Request.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var model = UIModel.getInstance();\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (status === 'OK') {\n        if (!model.applicationSettings.isLoggedInIS) {\n          // save login packet properties to UIModel\n          model.loginPhase1Packet = response;\n          model.applicationSettings.isLoggedInIS = true;\n          model.applicationSettings.isSso = utils.getText(resp, 'is_sso');\n          model.applicationSettings.isTcpaSafeMode =\n            utils.getText(resp, 'tcpa_safe_mode') === '1';\n          model.applicationSettings.pciEnabled =\n            utils.getText(resp, 'pci_enabled') === '1';\n          model.chatSettings.alias =\n            utils.getText(resp, 'first_name') +\n            ' ' +\n            utils.getText(resp, 'last_name');\n\n          model.agentSettings.loginDTS = new Date();\n          model.agentSettings.maxBreakTime = utils.getText(\n            resp,\n            'max_break_time',\n          );\n          model.agentSettings.maxLunchTime = utils.getText(\n            resp,\n            'max_lunch_time',\n          );\n          model.agentSettings.firstName = utils.getText(resp, 'first_name');\n          model.agentSettings.lastName = utils.getText(resp, 'last_name');\n          model.agentSettings.email = utils.getText(resp, 'email');\n          model.agentSettings.agentId = utils.getText(resp, 'agent_id');\n          model.agentSettings.externalAgentId = utils.getText(\n            resp,\n            'external_agent_id',\n          );\n          model.agentSettings.agentType = utils.getText(resp, 'agent_type');\n          model.agentSettings.realAgentType = utils.getText(\n            resp,\n            'real_agent_type',\n          );\n          model.agentSettings.defaultLoginDest = utils.getText(\n            resp,\n            'default_login_dest',\n          );\n          model.agentSettings.altDefaultLoginDest = utils.getText(\n            resp,\n            'alt_default_login_dest',\n          );\n          model.agentSettings.initLoginState = utils.getText(\n            resp,\n            'init_login_state',\n          );\n          model.agentSettings.initLoginStateLabel = utils.getText(\n            resp,\n            'init_login_state_label',\n          );\n          model.agentSettings.outboundManualDefaultRingtime = utils.getText(\n            resp,\n            'outbound_manual_default_ringtime',\n          );\n          model.agentSettings.isOutboundPrepay =\n            utils.getText(resp, 'outbound_prepay') === '1';\n          model.agentSettings.phoneLoginPin = utils.getText(\n            resp,\n            'phone_login_pin',\n          );\n          model.agentSettings.username = utils.getText(resp, 'username');\n          model.agentSettings.agentPassword = utils.getText(resp, 'agent_pwd');\n\n          model.agentPermissions.allowCallControl =\n            utils.getText(resp, 'allow_call_control') === '1';\n          model.agentPermissions.allowChat =\n            utils.getText(resp, 'allow_chat') === '1';\n          model.agentPermissions.showLeadHistory =\n            utils.getText(resp, 'show_lead_history') === '1';\n          model.agentPermissions.allowManualOutboundGates =\n            utils.getText(resp, 'allow_manual_outbound_gates') === '1';\n          model.agentPermissions.allowOffHook =\n            utils.getText(resp, 'allow_off_hook') === '1';\n          model.agentPermissions.allowManualCalls =\n            utils.getText(resp, 'allow_manual_calls') === '1';\n          model.agentPermissions.allowManualPass =\n            utils.getText(resp, 'allow_manual_pass') === '1';\n          model.agentPermissions.allowManualIntlCalls =\n            utils.getText(resp, 'allow_manual_intl_calls') === '1';\n          model.agentPermissions.allowLoginUpdates =\n            utils.getText(resp, 'allow_login_updates') === '1';\n          model.agentPermissions.allowInbound =\n            utils.getText(resp, 'allow_inbound') === '1';\n          model.agentPermissions.allowOutbound =\n            utils.getText(resp, 'allow_outbound') === '1';\n          model.agentPermissions.allowBlended =\n            utils.getText(resp, 'allow_blended') === '1';\n          model.agentPermissions.allowLoginControl =\n            utils.getText(resp, 'allow_login_control') === '1';\n          model.agentPermissions.allowCrossQueueRequeue =\n            utils.getText(resp, 'allow_cross_gate_requeue') === '1';\n          model.agentPermissions.disableSupervisorMonitoring =\n            utils.getText(resp, 'disable_supervisor_monitoring') === '1';\n          model.agentPermissions.allowAutoAnswer =\n            utils.getText(resp, 'allow_auto_answer') === '1';\n          model.agentPermissions.defaultAutoAnswerOn =\n            utils.getText(resp, 'default_auto_answer_on') === '1';\n          model.agentPermissions.allowHistoricalDialing =\n            utils.getText(resp, 'allow_historical_dialing') === '1';\n          model.agentPermissions.allowAgentStats =\n            utils.getText(resp, 'allow_agent_stats') === '1';\n          model.agentPermissions.allowCampaignStats =\n            utils.getText(resp, 'allow_camp_stats') === '1';\n          model.agentPermissions.allowGateStats =\n            utils.getText(resp, 'allow_gate_stats') === '1';\n          model.agentPermissions.allowChatStats =\n            utils.getText(resp, 'allow_chat_stats') === '1';\n          model.agentPermissions.enableFolderMode =\n            utils.getText(resp, 'enable_folder_mode') === '1';\n          model.agentPermissions.enableTaskMode =\n            utils.getText(resp, 'enable_task_mode') === '1';\n\n          model.outboundSettings.defaultDialGroup = utils.getText(\n            resp,\n            'phone_login_dial_group',\n          );\n\n          if (\n            response.ui_response.allow_lead_inserts &&\n            typeof resp.insert_campaigns !== 'undefined' &&\n            response.ui_response.insert_campaigns.campaign\n          ) {\n            model.agentPermissions.allowLeadInserts =\n              utils.getText(resp, 'allow_lead_inserts') === '1';\n          }\n\n          // Set collection values\n          model.outboundSettings.availableCampaigns = _processCampaigns(\n            response,\n          );\n          model.chatSettings.availableChatQueues = utils.processResponseCollection(\n            response.ui_response,\n            'login_chat_queues',\n            'chat_queue',\n          );\n          _processChatQueueDnis(model.chatSettings, response);\n          model.chatSettings.availableChatRequeueQueues = utils.processResponseCollection(\n            response.ui_response,\n            'chat_requeue_queues',\n            'chat_group',\n          );\n          model.inboundSettings.availableQueues = utils.processResponseCollection(\n            response.ui_response,\n            'login_gates',\n            'gate',\n          );\n          model.inboundSettings.availableSkillProfiles = utils.processResponseCollection(\n            response.ui_response,\n            'skill_profiles',\n            'profile',\n          );\n          model.inboundSettings.availableRequeueQueues = utils.processResponseCollection(\n            response.ui_response,\n            'requeue_gates',\n            'gate_group',\n          );\n          model.chatSettings.availableChatRooms = utils.processResponseCollection(\n            response.ui_response,\n            'chat_rooms',\n            'room',\n          );\n          model.scriptSettings.availableScripts = utils.processResponseCollection(\n            response.ui_response,\n            'scripts',\n            'script',\n          );\n          model.agentSettings.callerIds = utils.processResponseCollection(\n            response.ui_response,\n            'caller_ids',\n            'caller_id',\n          );\n          model.agentSettings.availableAgentStates = utils.processResponseCollection(\n            response.ui_response,\n            'agent_states',\n            'agent_state',\n          );\n          model.applicationSettings.availableCountries = utils.processResponseCollection(\n            response.ui_response,\n            'account_countries',\n            'country',\n          );\n          model.outboundSettings.insertCampaigns = utils.processResponseCollection(\n            response.ui_response,\n            'insert_campaigns',\n            'campaign',\n          );\n\n          var dialGroups = utils.processResponseCollection(\n            response.ui_response,\n            'outdial_groups',\n            'group',\n          );\n          // set boolean values\n          for (var dg = 0; dg < dialGroups.length; dg++) {\n            var group = dialGroups[dg];\n            group.allowLeadSearch = group.allowLeadSearch === 'YES';\n            group.allowPreviewLeadFilters =\n              group.allowPreviewLeadFilters === '1';\n            group.progressiveEnabled = group.progressiveEnabled === '1';\n            group.requireFetchedLeadsCalled =\n              group.requireFetchedLeadsCalled === '1';\n            group.hciType = parseInt(group.hciEnabled) || 0;\n            group.hciEnabled =\n              group.hciEnabled === '1' || group.hciEnabled === '2';\n            group.hciClicker = group.hciClicker === '1';\n          }\n          model.outboundSettings.availableOutdialGroups = dialGroups;\n        }\n      }\n\n      formattedResponse.agentSettings = model.agentSettings;\n      formattedResponse.agentPermissions = model.agentPermissions;\n      formattedResponse.applicationSettings = model.applicationSettings;\n      formattedResponse.chatSettings = model.chatSettings;\n      formattedResponse.connectionSettings = model.connectionSettings;\n      formattedResponse.inboundSettings = model.inboundSettings;\n      formattedResponse.outboundSettings = model.outboundSettings;\n      formattedResponse.scriptSettings = model.scriptSettings;\n\n      return formattedResponse;\n    };\n\n    function _processCampaigns(response) {\n      var campaigns = [];\n      var campaignsRaw = null;\n\n      if (typeof response.ui_response.campaigns.campaign !== 'undefined') {\n        campaignsRaw = response.ui_response.campaigns.campaign;\n      }\n\n      if (campaignsRaw) {\n        if (!Array.isArray(campaignsRaw)) {\n          campaignsRaw = [campaignsRaw];\n        }\n\n        for (var c = 0; c < campaignsRaw.length; c++) {\n          campaigns.push(_processCampaign(campaignsRaw[c]));\n        }\n      }\n\n      return campaigns;\n    }\n\n    function _processCampaign(campaignRaw) {\n      // single campaign object\n      var campaignId = campaignRaw['@campaign_id'];\n      var allowLeadUpdates = campaignRaw['@allow_lead_updates']; // 0 = no update, 1 = allow phone update, 2 = don't allow phone update\n      UIModel.getInstance().agentPermissions.allowLeadUpdatesByCampaign[\n        campaignId\n      ] = allowLeadUpdates;\n\n      var customLabels = campaignRaw['custom_labels'];\n      var labelArray = [];\n\n      for (var p in customLabels) {\n        var label = p.replace(/@/, ''); // remove leading '@'\n        var obj = {};\n        obj[label] = customLabels[p];\n\n        labelArray.push(obj);\n      }\n\n      return {\n        campaignId: campaignId,\n        campaignName: campaignRaw['@campaign_name'],\n        surveyId: campaignRaw['@survey_id'],\n        surveyName: campaignRaw['@survey_name'],\n        customLabels: labelArray,\n        allowLeadUpdates: allowLeadUpdates,\n      };\n    }\n\n    /**\n     * example packet\n     *  {\n     *      \"chat_queue\":[\n     *          {\n     *              \"@chat_queue_desc\":\"\",\n     *              \"@chat_queue_id\":\"74\",\n     *              \"@chat_queue_name\":\"Please don't delete\"\n     *          },\n     *          {\n     *              \"@chat_queue_desc\":\"blah\",\n     *              \"@chat_queue_id\":\"131\",\n     *              \"@chat_queue_name\":\"cris chat queue\",\n     *              \"dnis\":[\n     *                  {\"#text\":\"5555551215\"},\n     *                  {\"#text\":\"5555554444\"},\n     *                  {\"#text\":\"8885551212\"},\n     *                  {\"#text\":\"97687\"}\n     *              ]\n     *          }\n     *      ]\n     *   }\n     *\n     *\n     *      This function will format the dnis list and put them back on chatSettings.availableChatQueues\n     **/\n    function _processChatQueueDnis(chatSettings, response) {\n      var queues = chatSettings.availableChatQueues;\n      var rawQueues = response.ui_response.login_chat_queues.chat_queue;\n\n      if (!Array.isArray(rawQueues)) {\n        rawQueues = [rawQueues];\n      }\n\n      for (var i = 0; i < queues.length; i++) {\n        var queue = queues[i];\n\n        var rawQueue = {};\n        for (var j = 0; j < rawQueues.length; j++) {\n          var rq = rawQueues[j];\n          if (rq['@chat_queue_id'] === queue.chatQueueId) {\n            rawQueue = rq;\n            break;\n          }\n        }\n\n        if (rawQueue.dnis) {\n          if (!Array.isArray(rawQueue.dnis)) {\n            rawQueue.dnis = [rawQueue.dnis];\n          }\n\n          // update the dnis array to just be a list\n          queue.dnis = rawQueue.dnis.map(function(d) {\n            return d['#text'];\n          });\n        }\n      }\n    }\n\n    var LogoutRequest = function(agentId, message) {\n      this.agentId = agentId;\n      this.message = message || '';\n    };\n\n    LogoutRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGOUT,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          message: {\n            '#text': this.message,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    LogoutRequest.prototype.processResponse = function(notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      return formattedResponse;\n    };\n    var MultiSocketRequest = function() {};\n\n    MultiSocketRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN_MULTISOCKET,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': JSON.parse(model.dataStore.get('agent_id')), //fetch agent_id and hash_code from browser's local storage\n          },\n          hash_code: {\n            '#text': JSON.parse(model.dataStore.get('hash_code')),\n          },\n        },\n      };\n      UIModel.getInstance().loginRequest = new LoginRequest(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n      );\n      return JSON.stringify(msg);\n    };\n\n    var OffhookInitRequest = function() {};\n\n    OffhookInitRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.OFFHOOK_INIT,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          dial_dest: {\n            '#text': UIModel.getInstance().agentSettings.dialDest,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling an off-hook-init response packet from IntelliQueue.\n     * If the offhookinit is successful, it will go into the UIModel and set the isOffhook variable\n     * to true.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"UI2005\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OFF-HOOK-INIT\",\n     *      \"status\":{\"#text\":\"OK|FAILURE\"},\n     *      \"monitoring\":{\"#text:\"TRUE|FALSE\"},\n     *      \"message\":{},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    OffhookInitRequest.prototype.processResponse = function(response) {\n      var status = response.ui_response.status['#text'];\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (status === 'OK') {\n        var isMonitoring = utils.getText(response.ui_response, 'monitoring');\n        UIModel.getInstance().offhookInitPacket = response;\n        UIModel.getInstance().agentSettings.isOffhook = true;\n        UIModel.getInstance().agentSettings.isMonitoring = isMonitoring;\n        formattedResponse.monitoring = isMonitoring;\n\n        // make sure to reset softphone reconnect bool\n        UIModel.getInstance().softphoneSettings.attemptingSoftphoneReconnect = false;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to process offhook request';\n        }\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          formattedResponse.message + ' ' + formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var OffhookTermRequest = function() {};\n\n    OffhookTermRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.OFFHOOK_TERM,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * Process an OFF-HOOK-TERM packet and update various variables in the UI\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"IQ10012016080217135001344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OFF-HOOK-TERM\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"start_dts\":{\"#text\":\"2016-08-02 17:11:38\"},\n     *      \"end_dts\":{\"#text\":\"2016-08-02 17:14:07\"},\n     *      \"monitoring\":{\"#text\":\"0\"}\n     *    }\n     * }\n     */\n    OffhookTermRequest.prototype.processResponse = function(data) {\n      var notif = data.ui_notification;\n      var monitoring = utils.getText(notif, 'monitoring') === '1';\n      var model = UIModel.getInstance();\n\n      model.agentSettings.wasMonitoring = monitoring;\n      model.offhookTermPacket = data;\n      model.agentSettings.isOffhook = false;\n      model.agentSettings.isMonitoring = false;\n\n      var formattedResponse = {\n        status: 'OK',\n        agentId: utils.getText(notif, 'agent_id'),\n        startDts: utils.getText(notif, 'start_dts'),\n        endDts: utils.getText(notif, 'end_dts'),\n        monitoring: monitoring,\n      };\n\n      return formattedResponse;\n    };\n\n    var OneToOneOutdialRequest = function(\n      destination,\n      callerId,\n      ringTime,\n      countryId,\n      gateId,\n    ) {\n      this.destination = destination;\n      this.callerId = callerId;\n      this.ringTime = ringTime || '60';\n      this.countryId = countryId || 'USA';\n      this.gateId = gateId || '';\n    };\n\n    OneToOneOutdialRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.ONE_TO_ONE_OUTDIAL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          destination: {\n            '#text': utils.toString(this.destination),\n          },\n          ring_time: {\n            '#text': utils.toString(this.ringTime),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          gate_id: {\n            '#text': utils.toString(this.gateId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var OneToOneOutdialCancelRequest = function(uii) {\n      this.uii = uii;\n    };\n\n    /*\n     * This class is responsible for creating a new packet to cancel\n     * an in-progress outbound call.\n     */\n    OneToOneOutdialCancelRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.ONE_TO_ONE_OUTDIAL_CANCEL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var PauseRecordRequest = function(record) {\n      this.record = record;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PAUSE-RECORD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"record\":{\"#text\":\"TRUE | FALSE\"},\n     *      \"pause\":{\"#text\":\"10\"}\n     *    }\n     * }\n     */\n    PauseRecordRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var pauseTime = '10';\n      if (\n        model.currentCall.agentRecording &&\n        model.currentCall.agentRecording.pause\n      ) {\n        pauseTime = model.currentCall.agentRecording.pause;\n      }\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PAUSE_RECORD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          record: {\n            '#text': utils.toString(this.record === true ? 'TRUE' : 'FALSE'),\n          },\n          pause: {\n            '#text': utils.toString(pauseTime),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes PAUSE-RECORD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PAUSE-RECORD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"status\":{\"#text\":\"OK | FAILURE\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"state\":{\"#text\":\"RECORDING | PAUSED\"},\n     *      \"pause\":{\"#text\":\"10\"}\n     *    }\n     * }\n     */\n    PauseRecordRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.state = utils.getText(resp, 'state');\n      formattedResponse.pause = utils.getText(resp, 'pause');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message =\n              'Broadcasting new record state of ' + formattedResponse.state;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Broadcasting new record state of ' + formattedResponse.state,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Pause Record Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Error processing PAUSE-RECORD request.' +\n            formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail;\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var PingCallRequest = function() {};\n\n    PingCallRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PING_CALL,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().currentCall.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var PreviewDialRequest = function(\n      action,\n      searchFields,\n      requestId,\n      leadPhone,\n    ) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.searchFields = searchFields || [];\n      this.requestId = requestId || '';\n      this.action = action || '';\n      this.leadPhone = leadPhone || ''; // pipe leads only\n    };\n\n    /*\n     * searchFields = [\n     *  {key: \"name\", value: \"Danielle\"},\n     *  {key: \"number\", value: \"5555555555\"\n     * ];\n     */\n    PreviewDialRequest.prototype.formatJSON = function() {\n      var fields = {};\n      for (var i = 0; i < this.searchFields.length; i++) {\n        var fieldObj = this.searchFields[i];\n        fields[fieldObj.key] = { '#text': utils.toString(fieldObj.value) };\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PREVIEW_DIAL,\n          '@message_id': utils.getMessageId(),\n          '@action': this.action,\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          search_fields: fields,\n          // { \"name\": {\"#text\": \"Danielle\" } }\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling PREVIEW-DIAL packets received\n     * from the dialer. It will save a copy of it in the UIModel.\n     *\n     * {\"dialer_request\":{\n     *      \"@action\":\"\", // <-- empty for Preview fetch, otherwise \"SEARCH\"\n     *      \"@callbacks\":\"TRUE|FALSE\"\n     *      ,\"@message_id\":\"ID2008091513163400220\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PREVIEW_DIAL\",\n     *      \"dial_group_id\":{\"#text\":\"200018\"},\n     *      \"account_id\":{\"#text\":\"99999999\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"is_insert\":{\"#text\":\"TRUE|FALSE\"}, <--- TRUE if search triggered by insert\n     *      \"destinations\":{\n     *          \"lead\":[\n     *              {\n     *                  \"@aux_data1\":\"\",\"@aux_data2\":\"\",\"@aux_data3\":\"\",\"@aux_data4\":\"\",\"@aux_data5\":\"\",\n     *                  \"@aux_phone\":\"\",\"@campaign_id\":\"51\",\"@destination\":\"9548298548\",\"@dnis\":\"1112223333\",\n     *                  \"@extern_id\":\"amanda\",\"@lead_id\":\"2646\",\"@lead_state\":\"PENDING\",\"@live_answer_msg\":\"\",\n     *                  \"@mach_answer_msg\":\"\",\"@machine_detect\":\"FALSE\",\"@request_key\":\"IQ982008091516241101125\",\n     *                  \"@valid_until\":\"2008-09-15 17:24:11\",\"extern_id\":{\"#text\":\"9548298548\"},\n     *                  \"first_name\":{\"#text\":\"Amanda\"},\"mid_name\":{\"#text\":\"Amanda\"},\"last_name\":{\"#text\":\"Machutta2\"},\n     *                  \"address1\":{},\"address2\":{},\"city\":{},\"state\":{},\"zip\":{},\"aux_greeting\":{},\n     *                  \"aux_external_url\":{}, \"app_url\":{}\n     *              },\n     *          ]\n     *      }\n     *    }\n     * }\n     */\n    PreviewDialRequest.prototype.processResponse = function(notification) {\n      var notif = notification.dialer_request;\n      var model = UIModel.getInstance();\n      var leads = utils.processResponseCollection(\n        notif,\n        'destinations',\n        'lead',\n      );\n\n      // send over requestId (as well as requestKey for backwards compatibility)\n      // to match previewLeadState.notification property\n      for (var l = 0; l < leads.length; l++) {\n        var lead = leads[l];\n        lead.requestId = lead.requestKey;\n        lead.ani = lead.destination; // add ani prop since used in new call packet & update lead\n\n        // In case of a single lead returned, the XML converter to JSON will add lead as an object and not an array\n        //\n        if (!Array.isArray(notif.destinations.lead)) {\n          notif.destinations.lead = [notif.destinations.lead];\n        }\n\n        // parse extra data correctly\n        try {\n          var notifLead = notif.destinations.lead[l];\n\n          if (notifLead.extra_data) {\n            // if this lead doesn't match the current lead, find it from the notification\n            if (notifLead['@lead_id'] !== lead.leadId) {\n              notifLead = notif.destinations.lead.filter(function(destLead) {\n                return destLead['@lead_id'] === lead.leadId;\n              });\n            }\n\n            delete lead.extraDatas;\n            lead.extraData = {};\n            for (var key in notifLead.extra_data) {\n              lead.extraData[key] = notifLead.extra_data[key]['#text'];\n            }\n          }\n        } catch (e) {\n          console.warn('error parsing lead extra data: ' + e);\n        }\n      }\n\n      var formattedResponse = {\n        action: notif['@action'],\n        callbacks: notif['@callbacks'] === 'TRUE',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        isInsert: utils.getText(notif, 'is_insert'),\n        leads: leads,\n      };\n\n      if (notif['@callbacks'] === 'TRUE') {\n        utils.logMessage(\n          LOG_LEVELS.INFO,\n          \"New CALLBACK packet request rec'd from dialer\",\n          notification,\n        );\n        // clear callbacks??\n        //model.callbacks = [];\n        for (var l = 0; l < leads.length; l++) {\n          var lead = leads[l];\n          model.callbacks.push(lead);\n        }\n      } else {\n        model.outboundSettings.previewDialLeads = leads;\n      }\n\n      return formattedResponse;\n    };\n\n    var RecordRequest = function(record) {\n      this.record = record;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"RECORD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"record\":{\"#text\":\"TRUE | FALSE\"}\n     *    }\n     * }\n     */\n    RecordRequest.prototype.formatJSON = function() {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.RECORD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          record: {\n            '#text': this.record === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes RECORD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"RECORD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"state\":{\"#text\":\"RECORDING | STOPPED\"}\n     *    }\n     * }\n     */\n    RecordRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.state = utils.getText(resp, 'state');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message =\n              'Broadcasting new record state of ' + formattedResponse.state;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            formattedResponse.message,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Record Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Error processing RECORD request.' +\n            formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail;\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var RequeueRequest = function(queueId, skillId, maintain) {\n      this.queueId = queueId;\n      this.skillId = skillId;\n      this.maintain = maintain;\n    };\n\n    RequeueRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.REQUEUE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          gate_number: {\n            '#text': utils.toString(this.queueId),\n          },\n          skill_id: {\n            '#text': utils.toString(this.skillId),\n          },\n          maintain_agent: {\n            '#text': this.maintain === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes RE-QUEUE packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103291\",\n     *      \"@response_to\":\"UIV220088281716486\",\n     *      \"@type\":\"RE-QUEUE\",\n     *      \"status\":\"OK\",\n     *      \"message\":\"Success.\",\n     *      \"detail\":\"The re-queue request was successfully processed.\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808281716090000000900028070\"},\n     *      \"gate_number\":{\"#text\":\"19\"},\n     *      \"maintain_agent\":{\"#text\":\"FALSE\"}\n     *    }\n     * }\n     */\n    RequeueRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.queueId = utils.getText(resp, 'gate_number');\n\n      if (formattedResponse.status === 'OK') {\n      } else {\n        var message =\n          'There was an error processing the requeue request. ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var ScriptConfigRequest = function(scriptId, version) {\n      this.scriptId = scriptId;\n      this.version = version || null;\n    };\n\n    /*\n     * This event is responsible for requesting a script object\n     */\n    ScriptConfigRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.SCRIPT_CONFIG,\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          script_id: {\n            '#text': utils.toString(this.scriptId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class process SCRIPT-CONFIG packets received from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"SCRIPT-CONFIG\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"script_id\":{\"#text\":\"123\"},\n     *      \"version\":{\"#text\":\"1\"},\n     *      \"json\":{},\n     *   }\n     * }\n     */\n    ScriptConfigRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (formattedResponse.status === 'true') {\n        formattedResponse.status = true;\n        formattedResponse.scriptId = utils.getText(resp, 'script_id');\n        formattedResponse.version = utils.getText(resp, 'version');\n        formattedResponse.json = utils.getText(resp, 'json');\n\n        // store script on model\n        UIModel.getInstance().scriptSettings.loadedScripts[\n          formattedResponse.scriptId\n        ] = formattedResponse;\n      } else {\n        formattedResponse.status = false;\n      }\n\n      return formattedResponse;\n    };\n\n    var ScriptResultRequest = function(uii, scriptId, jsonResult) {\n      this.uii = uii;\n      this.scriptId = scriptId;\n      this.jsonResult = jsonResult;\n    };\n\n    /*\n     * This event is responsible for sending the script result object\n     */\n    ScriptResultRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.SCRIPT_RESULT,\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          script_id: {\n            '#text': utils.toString(this.scriptId),\n          },\n          json_result: {\n            '#text': JSON.stringify(this.jsonResult),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var SearchDirectoryRequest = function() {};\n\n    SearchDirectoryRequest.prototype.searchDirectory = function(searchString) {\n      UIModel.getInstance().searchDirectoryRequest = this;\n      _searchDirectory('rcdirectory/getRcCorporateDirectory', searchString);\n    };\n\n    SearchDirectoryRequest.prototype.processResponse = function(response) {\n      UIModel.getInstance().filteredDirectory = response;\n      return UIModel.getInstance().filteredDirectory;\n    };\n\n    function _searchDirectory(path, searchString) {\n      var model = UIModel.getInstance();\n      var accountId = model.agentSettings.accountId; //subAccountId\n      var baseUrl = model.authHost + model.baseApiUri;\n      var engageAccessToken =\n        'Bearer ' +\n        utils.toString(\n          UIModel.getInstance().authenticateRequest.engageAccessToken,\n        );\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        queryParams: {},\n      };\n      params.headers['Authorization'] = engageAccessToken;\n      params.queryParams['searchString'] = searchString;\n      params.queryParams['accountId'] = accountId;\n      var errorMsg = 'Error on request to search Directory: ' + baseUrl + path;\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function(response) {\n          try {\n            response = JSON.parse(response.response);\n            var searchDirResponse = UIModel.getInstance().searchDirectoryRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SEARCH_DIR,\n              searchDirResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function(err) {\n          var errResponse = {\n            type: 'Error retrieving directory list',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SEARCH_DIR,\n            errResponse,\n          );\n        },\n      );\n    }\n\n    var StatsRequest = function() {};\n\n    /*\n     * { \"ui_request\": {\n     *      \"@response_to\":\"\",\n     *      \"@message_id\":\"IS20160901142437535\",\n     *      \"@type\":\"STATS\"\n     *    }\n     * }\n     */\n    StatsRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.STATS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var TcpaSafeRequest = function(action, searchFields, requestId, leadPhone) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.searchFields = searchFields || [];\n      this.requestId = requestId || '';\n      this.action = action || '';\n      this.leadPhone = leadPhone || ''; // pipe leads only\n    };\n\n    /*\n     * searchFields = [\n     *  {key: \"name\", value: \"Danielle\"},\n     *  {key: \"number\", value: \"5555555555\"\n     * ];\n     */\n    TcpaSafeRequest.prototype.formatJSON = function() {\n      var fields = {};\n      for (var i = 0; i < this.searchFields.length; i++) {\n        var fieldObj = this.searchFields[i];\n        fields[fieldObj.key] = { '#text': utils.toString(fieldObj.value) };\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.TCPA_SAFE,\n          '@message_id': utils.getMessageId(),\n          '@action': this.action,\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          search_fields: fields,\n          // { \"name\": {\"#text\": \"Danielle\"} }\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling TCPA-SAFE packets received\n     * from the dialer. It will save a copy of it in the UIModel.\n     *\n     * {\"dialer_request\":{\n     *      \"@action\":\"\",\n     *      \"@callbacks\":\"TRUE|FALSE\"\n     *      ,\"@message_id\":\"ID2008091513163400220\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"TCPA_SAFE\",\n     *      \"dial_group_id\":{\"#text\":\"200018\"},\n     *      \"account_id\":{\"#text\":\"99999999\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"is_insert\":{\"#text\":\"TRUE|FALSE\"}, <--- TRUE if search triggered by insert\n     *      \"destinations\":{\n     *          \"lead\":[\n     *              {\n     *                  \"@aux_data1\":\"\",\"@aux_data2\":\"\",\"@aux_data3\":\"\",\"@aux_data4\":\"\",\"@aux_data5\":\"\",\n     *                  \"@aux_phone\":\"\",\"@campaign_id\":\"51\",\"@destination\":\"9548298548\",\"@dnis\":\"1112223333\",\n     *                  \"@extern_id\":\"amanda\",\"@lead_id\":\"2646\",\"@lead_state\":\"PENDING\",\"@live_answer_msg\":\"\",\n     *                  \"@mach_answer_msg\":\"\",\"@machine_detect\":\"FALSE\",\"@request_key\":\"IQ982008091516241101125\",\n     *                  \"@valid_until\":\"2008-09-15 17:24:11\",\"extern_id\":{\"#text\":\"9548298548\"},\n     *                  \"first_name\":{\"#text\":\"Amanda\"},\"mid_name\":{\"#text\":\"Amanda\"},\"last_name\":{\"#text\":\"Machutta2\"},\n     *                  \"address1\":{},\"address2\":{},\"city\":{},\"state\":{},\"zip\":{},\"aux_greeting\":{},\n     *                  \"aux_external_url\":{}, \"app_url\":{}\n     *              },\n     *          ]\n     *      }\n     *    }\n     * }\n     *\n     */\n    TcpaSafeRequest.prototype.processResponse = function(notification) {\n      var notif = notification.dialer_request;\n      var model = UIModel.getInstance();\n      var leads = utils.processResponseCollection(\n        notif,\n        'destinations',\n        'lead',\n      );\n\n      // send over requestId (as well as requestKey for backwards compatibility)\n      // to match tcpaSafeLeadState.notification property\n      for (var l = 0; l < leads.length; l++) {\n        var lead = leads[l];\n        lead.requestId = lead.requestKey;\n        lead.ani = lead.destination; // add ani prop since used in new call packet & update lead\n\n        // parse extra data correctly\n        try {\n          var notifLead = notif.destinations.lead[l];\n\n          if (notifLead.extra_data) {\n            // if this lead doesn't match the current lead, find it from the notification\n            if (notifLead['@lead_id'] !== lead.leadId) {\n              notifLead = notif.destinations.lead.filter(function(destLead) {\n                return destLead['@lead_id'] === lead.leadId;\n              });\n            }\n\n            delete lead.extraDatas;\n            lead.extraData = {};\n            for (var key in notifLead.extra_data) {\n              lead.extraData[key] = notifLead.extra_data[key]['#text'];\n            }\n          }\n        } catch (e) {\n          console.warn('error parsing lead extra data: ' + e);\n        }\n      }\n\n      var formattedResponse = {\n        action: notif['@action'],\n        callbacks: notif['@callbacks'] === 'TRUE',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        isInsert: utils.getText(notif, 'is_insert'),\n        leads: leads,\n      };\n\n      if (notif['@callbacks'] === 'TRUE') {\n        var message = \"New CALLBACK packet request rec'd from dialer\";\n        utils.logMessage(LOG_LEVELS.INFO, message, notification);\n        // clear callbacks??\n        //model.callbacks = [];\n        for (var l = 0; l < leads.length; l++) {\n          var lead = leads[l];\n          model.callbacks.push(lead);\n        }\n      } else {\n        model.outboundSettings.tcpaSafeLeads = leads;\n      }\n\n      return formattedResponse;\n    };\n\n    var UpdateDialDestinationRequest = function(dialDest, isSoftphoneError) {\n      this.dialDest = dialDest;\n      this.isSoftphoneError = isSoftphoneError || false;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":MESSAGE_TYPES.UPDATE_DIAL_DESTINATION,\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":\"1\",\n     *      \"dial_dest\":{\"#text\":\"blah@something.com\"},\n     *      \"log_softphone_error\": {\"#text\":\"TRUE|FALSE\"},\n     *    }\n     * }\n     */\n    UpdateDialDestinationRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.UPDATE_DIAL_DESTINATION,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          log_softphone_error: {\n            '#text': utils.toString(\n              this.isSoftphoneError === true ? 'TRUE' : 'FALSE',\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var XferWarmRequest = function(dialDest, callerId, sipHeaders, countryId) {\n      this.dialDest = dialDest;\n      this.callerId = callerId || '';\n      this.sipHeaders = sipHeaders || [];\n      this.countryId = countryId;\n    };\n\n    XferWarmRequest.prototype.formatJSON = function() {\n      var fields = [];\n      for (var i = 0; i < this.sipHeaders.length; i++) {\n        var fieldObj = this.sipHeaders[i];\n        fields.push({\n          '@name': utils.toString(fieldObj.name),\n          '@value': utils.toString(fieldObj.value),\n        });\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_WARM,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          xfer_header: fields,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes WARM-XFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"WARM-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231447590139000000000200\"},\n     *      \"session_id\":{\"#text\":\"3\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"OK\"},\"detail\":{}\n     *    }\n     * }\n     *  Response on CANCEL:\n     *  {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082315005000264\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"WARM-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231501090139000000000204\"},\n     *      \"session_id\":{},\n     *      \"status\":{\"#text\":\"FAILURE\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"Transfer CANCELED\"},\n     *      \"detail\":{\"#text\":\"NOANSWER after 3 seconds.\"}\n     *    }\n     * }\n     */\n    XferWarmRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.dialDest = utils.getText(resp, 'dial_dest');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          'Warm Xfer to ' +\n            formattedResponse.dialDest +\n            ' processed successfully.',\n          response,\n        );\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'There was an error processing the Warm Xfer request. ' +\n            formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var XferWarmCancelRequest = function(dialDest) {\n      this.dialDest = dialDest;\n    };\n\n    XferWarmCancelRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_WARM_CANCEL,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var WebRTCRequest = function() {};\n\n    WebRTCRequest.prototype.getSipRegistrationInfo = function() {\n      UIModel.getInstance().WebRTCRequest = this;\n      _getSipRegistrationInfo('sip/sipRegistrationInfo', {\n        agentId: UIModel.getInstance().agentSettings.agentId,\n      });\n    };\n\n    /*\n     * legacy response\n     * {\n     *   \"sipInfo\": [\n     *       {\n     *           \"transport\": \"wss\",\n     *           \"username\": \"yadvendra_agent\",\n     *           \"password\": \"oct@2018\",\n     *           \"domain\": \"d03-reg1.vacd.biz\",\n     *           \"outboundProxy\": \"d03-reg1.vacd.biz:8089/freeswitch\"\n     *       }\n     *   ]\n     * }\n     *\n     * RC SSO response\n     * {\n     *   \"sipInfo\": [\n     *       {\n     *           \"transport\": \"WSS\",\n     *           \"username\": \"18662032059*101\",\n     *           \"password\": \"B77O85vO\",\n     *           \"authorizationId\": \"400017513008\",\n     *           \"domain\": \"sip-cfintams.lab.nordigy.ru\",\n     *           \"outboundProxy\": \"webphone-sip-cfintams.lab.nordigy.ru:8083\"\n     *       }\n     *   ]\n     * }\n     * */\n    WebRTCRequest.prototype.processResponse = function(response) {\n      var softphoneSettings = UIModel.getInstance().softphoneSettings;\n      softphoneSettings.sipInfo = response.sipInfo;\n\n      return softphoneSettings.sipInfo;\n    };\n\n    function _getSipRegistrationInfo(path, queryParams) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseApiUri;\n      var engageAccessToken =\n        'Bearer ' +\n        utils.toString(\n          UIModel.getInstance().authenticateRequest.engageAccessToken,\n        );\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      params.headers['Authorization'] = engageAccessToken;\n      params['queryParams'] = queryParams;\n      var errorMsg =\n        'Error on request get to sip registration info. URL: ' + baseUrl + path;\n\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function(response) {\n          try {\n            response = JSON.parse(response.response);\n            var webRTCResponse = UIModel.getInstance().WebRTCRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.WEBRTC_INFO,\n              webRTCResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function(err) {\n          var errResponse = {\n            type: 'Error retrieving sip registration information',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.WEBRTC_INFO,\n            errResponse,\n          );\n        },\n      );\n    }\n    var ChatAgentEndRequest = function(agentId, uii) {\n      this.uii = uii;\n      this.agentId = agentId;\n    };\n\n    /*\n\n    External Chat :\n    when agent submits a chat end request, send \"CHAT-AGENT-END\" request to IntelliQueue\n\n    {\n        \"ui_request\" : {\n            \"@destination\" : \"IQ\",\n            \"@type\" : MESSAGE_TYPES.CHAT_AGENT_END,\n            \"uii\":{\n                \"#text\":utils.toString(this.uii)\n            },\n            \"agent_id\":{\n                \"#text\":utils.toString(this.agentId)\n            }\n        }\n    }\n\n    */\n\n    ChatAgentEndRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_AGENT_END,\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatAliasRequest = function(alias) {\n      this.alias = alias;\n    };\n\n    /*\n     * This class is responsible for creating the request to change chat alias\n     * packet and sending it to intelliservices.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ALIAS\",\n     *      \"alias\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatAliasRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_ALIAS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          alias: {\n            '#text': utils.toString(this.alias),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatDispositionRequest = function(\n      uii,\n      agentId,\n      dispositionId,\n      notes,\n      sendAcknowlegement,\n      survey,\n      sessionId,\n    ) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.dispositionId = dispositionId;\n      this.notes = notes || '';\n      this.sendAcknowlegement = sendAcknowlegement || false;\n      this.sessionId = sessionId;\n\n      /*\n       * survey = {\n       *      first_name: {\n       *          leadField: \"first_name\"\n       *          value: \"Geoff\"\n       *      },\n       *      last_name: {\n       *          leadField: \"last_name\"\n       *          value: \"Mina\"\n       *      }\n       *      ...\n       * }\n       */\n      this.survey = survey || null;\n    };\n\n    /*\n     * External Chat:\n     * When agent dispositions a chat, send \"CHAT-DISPOSITION\" request to IntelliQueue\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DISPOSITION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"session_id\" : {\"#text\" : \"\"},\n     *      \"disposition_id\":{\"#text\":\"\"},\n     *      \"notes\":{\"#text\":\"hello\"},\n     *      \"do_ack\":{\"#text\":\"true\"},\n     *      \"survey\":{\n     *          \"response\":[\n     *              {\"@extern_id\":\"text_box\",\"#text\":\"hello\"},\n     *              {\"@extern_id\":\"check_box\",\"#text\":\"20\"},\n     *              {\"@extern_id\":\"radio_save\",\"#text\":\"23\"}\n     *          ]\n     *      }\n     *    }\n     * }\n     */\n    ChatDispositionRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_DISPOSITION,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispositionId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          do_ack: {\n            '#text': this.sendAcknowlegement === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      /*\n       * converts survey to this response\n       * survey : {\n       *      response: [\n       *          { \"@extern_id\":\"\", \"@lead_update_column\":\"\", \"#text\":\"\" }\n       *      ]\n       * }\n       */\n      if (this.survey !== null) {\n        var response = [];\n        var keys = Object.keys(this.survey);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var obj = {\n            '@extern_id': key,\n            '#text': utils.toString(this.survey[key].value),\n          };\n          response.push(obj);\n        }\n        msg.ui_request.survey = { response: response };\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatListRequest = function(agentId, monitorAgentId) {\n      this.agentId = agentId;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * External Chat:\n     * Requests a list of all chats by monitor agent id\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-LIST\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n\n    ChatListRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-LIST\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_response\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-LIST\",\n     *          \"@response_to\":\"\",\n     *          \"agent_id\":{\"#text\":\"17\"},\n     *          \"monitor_agent_id\":{\"#text\":\"18\"},\n     *          \"chat_list\": {}\n     *      }\n     *  }\n     */\n\n    ChatListRequest.prototype.processResponse = function(response) {\n      var notif = response.ui_response;\n      var model = UIModel.getInstance();\n      model.chatListResponse = response;\n\n      return {\n        message: 'Received CHAT-LIST notification',\n        status: 'OK',\n        messageId: notif['@message_id'],\n        agentId: utils.getText(notif, 'agent_id'),\n        monitorAgentId: utils.getText(notif, 'monitor_agent_id'),\n        chatList: utils.processResponseCollection(\n          notif,\n          'chat_list',\n          'active_chat',\n        ),\n      };\n    };\n\n    var ChatMessageRequest = function(uii, agentId, message, whisper) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.message = message;\n      this.whisper = whisper;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a chat message, send \"CHAT-MESSAGE\" request to IntelliQueue\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-MESSAGE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"hello\"},\n     *      \"whisper\":{\"#text\":\"true|false\"}\n     *    }\n     * }\n     */\n    ChatMessageRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_MESSAGE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n          whisper: {\n            '#text': utils.toString(this.whisper),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling external CHAT-MESSAGE packets received from\n     * IntelliQueue.\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-MESSAGE\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"account_id\":{\"#text\":\"\"},\n     *      \"from\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"hello\"},\n     *      \"dts\":{\"#text\":\"2017-05-10 12:40:28\"},\n     *      \"dequeue_agent_id\":{\"#text\":\"123\"},\n     *      \"whisper\":{\"#text\":'TRUE'|'FALSE'\"}\n     *    }\n     * }\n     */\n\n    ChatMessageRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_notification;\n      var dts = utils.getText(resp, 'dts').trim();\n      var dtsDate = new Date(dts.replace(' ', 'T'));\n      var formattedResponse = {\n        uii: utils.getText(resp, 'uii'),\n        accountId: utils.getText(resp, 'account_id'),\n        from: utils.getText(resp, 'from'),\n        type: utils.getText(resp, 'type'),\n        message: utils.getText(resp, 'message'),\n        whisper: utils.getText(resp, 'whisper'),\n        dequeueAgentId: utils.getText(resp, 'dequeue_agent_id'),\n        dts: dtsDate,\n        mediaLinks: utils.processResponseCollection(\n          resp,\n          'media_links',\n          'link',\n        ),\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New CHAT-MESSAGE packet received from IntelliQueue',\n        response,\n      );\n\n      return formattedResponse;\n    };\n\n    var ChatPresentedResponseRequest = function(\n      uii,\n      messageId,\n      response,\n      responseReason,\n    ) {\n      this.uii = uii;\n      this.messageId = messageId;\n      this.response = response;\n      this.responseReason = responseReason || '';\n    };\n\n    /*\n     * External Chat:\n     * When Agent receives a CHAT-PRESENTED notification, respond with\n     * either ACCEPT or REJECT for presented chat.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-PRESENTED-RESPONSE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"response\":{\"#text\":\"ACCEPT|REJECT\"},\n     *      \"response_reason\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatPresentedResponseRequest.prototype.formatJSON = function() {\n      //TODO-TASK add operation id to response (generated in SDK)\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_PRESENTED_RESPONSE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': this.messageId,\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          response: {\n            '#text': utils.toString(this.response),\n          },\n          response_reason: {\n            '#text': utils.toString(this.responseReason),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatRequeueRequest = function(\n      uii,\n      agentId,\n      chatQueueId,\n      skillId,\n      maintainAgent,\n    ) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.chatQueueId = chatQueueId;\n      this.skillId = skillId || '';\n      this.maintainAgent = maintainAgent || false;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a chat message, send \"CHAT-REQUEUE\" request to IntelliQueue\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-REQUEUE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"chat_queue_id\":{\"#text\":\"\"},\n     *      \"skill_id\":{\"#text\":\"\"},\n     *      \"maintain_agent\":{\"#text\":\"true|false\"}\n     *    }\n     * }\n     */\n    ChatRequeueRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_REQUEUE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          chat_queue_id: {\n            '#text': utils.toString(this.chatQueueId),\n          },\n          skill_id: {\n            '#text': utils.toString(this.skillId),\n          },\n          maintain_agent: {\n            '#text': utils.toString(this.maintainAgent),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatRoomRequest = function(\n      action,\n      roomType,\n      roomId,\n      agentOne,\n      agentTwo,\n    ) {\n      this.action = action;\n      this.roomType = roomType;\n      this.roomId = roomId;\n      this.agentOne = agentOne || '';\n      this.agentTwo = agentTwo || '';\n    };\n\n    /*\n     * This class is responsible for sending the packet requesting to either enter\n     * a chatroom, or to exit a chatroom to IS. It also handles private chats. There are\n     * two possible ways these packets could look:\n     *\n     * //PUBLIC\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM\",\n     *      \"@room_type\":\"PUBLIC\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"action\":{\"#text\":\"EXIT|ENTER\"}\n     *    }\n     * }\n     * -OR-\n     * // PRIVATE\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM\",\n     *      \"@room_type\":\"PRIVATE\",\n     *      \"agent_one\":{\"#text\":\"\"},\n     *      \"agent_two\":{\"#text\":\"\"},\n     *      \"action\":{\"#text\":\"ENTER|EXIT\"}\n     *    }\n     * }\n     *\n     */\n    ChatRoomRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_ROOM,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          action: {\n            '#text': utils.toString(this.action),\n          },\n        },\n      };\n\n      if (this.action !== 'EXIT') {\n        msg.ui_request['@room_type'] = this.roomType;\n      }\n\n      if (this.roomType === 'PRIVATE' && this.action === 'ENTER') {\n        msg.ui_request.agent_one = { '#text': utils.toString(this.agentOne) };\n        msg.ui_request.agent_two = { '#text': utils.toString(this.agentTwo) };\n      } else {\n        msg.ui_request.room_id = { '#text': utils.toString(this.roomId) };\n      }\n      return JSON.stringify(msg);\n    };\n\n    var ChatRoomStateRequest = function() {};\n\n    /*\n     * This class is responsible for processing CHAT-ROOM-STATE packets received\n     * from IntelliServices.\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM-STATE\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"chat_alias\":{\"#text\":\"\"},\n     *      \"state\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatRoomStateRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_request;\n      var formattedResponse = {\n        roomId: utils.getText(resp, 'room_id'),\n        agentId: utils.getText(resp, 'agent_id'),\n        chatAlias: utils.getText(resp, 'chat_alias'),\n        state: utils.getText(resp, 'state'),\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'Chat-Room-State update packet received for room #' +\n          formattedResponse.roomId,\n        response,\n      );\n      return formattedResponse;\n    };\n\n    var ChatSendRequest = function(roomId, message) {\n      this.roomId = roomId;\n      this.message = message;\n    };\n\n    /*\n     * This class is responsible for creating the CHAT message packet and sending\n     * it to IntelliServices.\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_id\":{\"#text\":\"\"}\n     *      \"message\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatSendRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_SEND,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          room_id: {\n            '#text': utils.toString(this.roomId),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling CHAT packets received from\n     * IntelliServices.\n     *\n     * //PUBLIC\n     * {\"ui_request\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_type\":\"GROUP\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"sender\":{\"#text\":\"\"},\n     *      \"sender_id\":{\"#text\":\"\"},\n     *      \"room_name\":{\"#text\":\"\"}\n     *    }\n     * }\n     * -OR-\n     * // PRIVATE\n     * {\"ui_request\":{\n     *      \"@dynamic_create\":\"TRUE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_type\":\"PRIVATE\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"sender\":{\"#text\":\"\"},\n     *      \"room_name\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n\n    ChatSendRequest.prototype.processResponse = function(response) {\n      var resp = response.ui_request;\n      var formattedResponse = {\n        roomType: utils.getText(resp, 'room_type'),\n        roomId: utils.getText(resp, 'room_id'),\n        message: utils.getText(resp, 'message'),\n        sender: utils.getText(resp, 'sender'),\n        senderId: utils.getText(resp, 'sender_id'),\n        roomName: utils.getText(resp, 'room_name'),\n        dynamicCreate: utils.getText(resp, 'dynamic_create') === 'TRUE',\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New CHAT packet received from IntelliServices',\n        response,\n      );\n\n      return formattedResponse;\n    };\n\n    var ChatTypingRequest = function(uii, message) {\n      this.uii = uii;\n      this.message = message;\n    };\n\n    /*\n     * External Chat:\n     * Agent sends typing message to notify client widgets,\n     * but the agent's pending message is not sent going this direction.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-TYPING\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatTypingRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_TYPING,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var LeaveChatRequest = function(uii, agentId, sessionId) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.sessionId = sessionId;\n    };\n\n    /*\n     * External Chat:\n     * Requests to terminate a chat session on an existing chat uii\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DROP-SESSION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"session_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    LeaveChatRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAVE_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatManualSmsRequest = function(\n      agentId,\n      chatQueueId,\n      ani,\n      dnis,\n      message,\n    ) {\n      this.agentId = agentId;\n      this.chatQueueId = chatQueueId;\n      this.ani = ani;\n      this.dnis = dnis;\n      this.message = message;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a manual sms message, send \"MANUAL-SMS\" request to IntelliQueue\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"MANUAL-SMS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"1995\"},\n     *      \"chatQueueId\":{\"#text\":\"44\"},\n     *      \"ani\":{\"#text\":\"1231231234\"},\n     *      \"dnis\":{\"#text\":\"5435435432\"},\n     *      \"message\":{\"#text\":\"hello\"}\n     *    }\n     * }\n     */\n    ChatManualSmsRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_MANUAL_SMS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          chat_queue_id: {\n            '#text': utils.toString(this.chatQueueId),\n          },\n          ani: {\n            '#text': utils.toString(this.ani),\n          },\n          dnis: {\n            '#text': utils.toString(this.dnis),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var MonitorChatRequest = function(monitorAgentId) {\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * External Chat:\n     * Requests a new session on an existing chat uii\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-MONITOR\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    MonitorChatRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.MONITOR_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var StopMonitorChatRequest = function(monitorAgentId) {\n      this.monitorAgentId = monitorAgentId || '';\n    };\n\n    /*\n     * External Chat:\n     * Requests a termination of a chat monitor session for an agent\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DROP-MONITORING-SESSION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    StopMonitorChatRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.STOP_MONITOR_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * Process a CHAT-DROP-MONITORING-SESSION notification. Used to notify supervisor monitors that agent has logged out.\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"IQ10012016080217135001344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-DROP-MONITORING-SESSION\",\n     *      \"monitored_agent_id\":{\"#text\":\"1\"}\n     *    }\n     * }\n     */\n    StopMonitorChatRequest.prototype.processResponse = function(data) {\n      var notif = data.ui_notification;\n\n      return { monitoredAgentId: utils.getText(notif, 'monitored_agent_id') };\n    };\n\n    var SupervisorListRequest = function() {};\n\n    /*\n     * This class is responsible for creating a packet to request a list of\n     * supervisors from IntelliServices. This is used by the chat function so an\n     * agent can grab a list of supervisors and then select one for a private chat.\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"SUPERVISOR-LIST\",\n     *      \"agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    SupervisorListRequest.prototype.formatJSON = function() {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.SUPERVISOR_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling the SUPERVISOR-LIST packet\n     * rec'd from intelliservices. It will save a copy of this list in the\n     * UIModel under a variable called \"supervisors\". Whenever a new list\n     * is rec'd it is overwritten.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"supervisor\":[\n     *          {\"id\":{\"#text\":\"\"}, \"fname\":{\"#text\":\"\"}, \"lname\":{\"#text\":\"\"}, \"uname\":{\"#text\":\"\"} }\n     *          {\"id\":{\"#text\":\"\"}, \"fname\":{\"#text\":\"\"}, \"lname\":{\"#text\":\"\"}, \"uname\":{\"#text\":\"\"} }\n     *      ]\n     *    }\n     * }\n     */\n\n    SupervisorListRequest.prototype.processResponse = function(response) {\n      var model = UIModel.getInstance();\n      var tempList = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'supervisor',\n      );\n      var supervisors = [];\n\n      for (var i = 0; i < tempList.length; i++) {\n        var sup = tempList[i];\n        supervisors.push({\n          agentId: sup.id,\n          firstName: sup.fname,\n          lastName: sup.lname,\n          username: sup.uname,\n        });\n      }\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New supervisor list received ',\n        supervisors,\n      );\n      model.supervisors = supervisors;\n\n      return model.supervisors;\n    };\n\n    var ChatClientReconnectNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-CLIENT-RECONNECT\" packets from IntelliQueue.\n     * This is sent when a chat connect message is sent to a non-archieved chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-CLIENT-RECONNECT\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *          \"agent_id\":{\"#text\":\"1\"}\n     *      }\n     *  }\n     */\n\n    ChatClientReconnectNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-CLIENT-RECONNECT notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        agentId: utils.getText(notif, 'agent_id'),\n      };\n    };\n\n    var AddChatSessionNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"ADD-CHAT-SESSION\" packets from IntelliQueue.\n     *\n     * {\n     *   \"ui_notification\": {\n     *       \"@message_id\": \"IQ982008082918151403727\",\n     *       \"@response_to\": \"\",\n     *       \"@type\": \"ADD-CHAT-SESSION\",\n     *       \"session_id\": { \"#text\": \"2\" },\n     *       \"uii\": { \"#text\": \"200808291814560000000900016558\" },\n     *       \"session_type\": { \"#text\": \"AGENT|MONITORING\" },\n     *       \"agent_id\": { \"#text\": \"1856\" } // null unless monitor type,\n     *       \"transcript\": { }\n     *   }\n     *  }\n     */\n    AddChatSessionNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received ADD-CHAT-SESSION notification';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.sessionType = utils.getText(notif, 'session_type');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.transcript = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transcript',\n      )[0];\n\n      return formattedResponse;\n    };\n\n    var ChatActiveNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-ACTIVE\" packets from IntelliQueue.\n     * This is sent in response to an agent's CHAT-PRESENTED-RESPONSE accept request.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-ACTIVE\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"is_monitoring\":{\"#text\":\"TRUE\"|\"FALSE\"}\n     *      }\n     *  }\n     */\n    ChatActiveNotification.prototype.processResponse = function(notification) {\n      var notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-ACTIVE notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        isMonitoring: utils.getText(notif, 'is_monitoring'),\n      };\n    };\n\n    var ChatCancelledNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for processing \"CHAT-CANCELLED\" packets from IntelliQueue.\n     * If an agent is presented a chat and doesn't respond before the timeout, the CHAT-CANCELLED\n     * message is sent from IQ.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-CANCELLED\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *      }\n     *  }\n     */\n    ChatCancelledNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-CANCELLED notification',\n        status: 'OK',\n        messageId: notif['@message_id'],\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n      };\n    };\n\n    var ChatInactiveNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-INACTIVE\" packets from IntelliQueue.\n     * This is sent to the agent when the last session is disconnected from a chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-INACTIVE\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"disposition_timeout\":{\"#text\":\"30\"},\n     *          \"dequeue_agent_id\":{\"#text\":\"123\"}\n     *      }\n     *  }\n     */\n    ChatInactiveNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-INACTIVE notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        dispositionTimeout: utils.getText(notif, 'disposition_timeout'),\n        dequeueAgentId: utils.getText(notif, 'dequeue_agent_id'),\n      };\n    };\n\n    var ChatPresentedNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-PRESENTED\" packets from IntelliQueue.\n     * When this notification is received, the Agent can either Accept or Decline which will\n     * be sent back to IntelliQueue as a CHAT-PRESENTED-RESPONSE.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-PRESENTED\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"task_id\":{\"#text\":\"123\"}, // only applicable for Engage Digital tasks\n     *          \"chat_queue_id\":{\"#text\":\"3\"},\n     *          \"chat_queue_name\":{\"#text\":\"Support Chat\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"channel_type\":{\"#text\":\"\"},\n     *          \"allow_accept\":{\"#text\":\"TRUE|FALSE\"}\n     *      }\n     *  }\n     */\n    ChatPresentedNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      // TODO-TASK add operation id\n\n      return {\n        message: 'Received CHAT-PRESENTED notification',\n        status: 'OK',\n        messageId: notif['@message_id'],\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        channelType: utils.getText(notif, 'channel_type'),\n        taskId: utils.getText(notif, 'task_id'),\n        chatQueueId: utils.getText(notif, 'chat_queue_id'),\n        chatQueueName: utils.getText(notif, 'chat_queue_name'),\n        allowAccept: utils.getText(notif, 'allow_accept'),\n      };\n    };\n\n    var ChatTypingNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-TYPING\" packets from IntelliQueue.\n     * When this notification is received, the AgentUI will show the pending message\n     * so far from the client chat widget and typing notification.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-TYPING\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"from\":{\"#text\":\"\"},\n     *          \"message\":{\"#text\":\"this is the message before actual send\"}\n     *          \"dequeue_agent_id\":{\"#text\":\"123\"}\n     *      }\n     *  }\n     */\n    ChatTypingNotification.prototype.processResponse = function(notification) {\n      var notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-TYPING notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        from: utils.getText(notif, 'from'),\n        type: utils.getText(notif, 'type'),\n        pendingMessage: utils.getText(notif, 'message'),\n        dequeueAgentId: utils.getText(notif, 'dequeue_agent_id'),\n      };\n    };\n\n    var LoadMediaNotification = function() {};\n\n    /*\n     * Engage Digital Chat:\n     * This class is responsible for handling \"LOAD-MEDIA\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"LOAD-MEDIA\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"task_id\":{\"#text\":\"\"}\n     *          \"operation_id\":{\"#text\":\"\"}\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"session_id\":{\"#text\":\"2\"},\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"queue_dts\":{\"#text\":\"\"},\n     *          \"queue_time\":{\"#text\":\"\"},\n     *          \"chat_queue_id\":{\"#text\":\"\"},\n     *          \"chat_queue_name\":{\"#text\":\"\"},\n     *          \"chat_requeue_type\" : {\"#text\":\"\"}\n     *          \"channel_type\":{\"#text\":\"ENGAGE-DIGITAL\"},\n     *          \"idle_timeout\":{\"#text\":\"\"},\n     *          \"chat_dispositions\":{\n     *              \"disposition\":[\n     *                  { \"@disposition_id\":\"2\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"@email_template_id\":\"1\", \"#text\":\"Complete\"},\n     *                  { \"@disposition_id\":\"3\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"#text\":\"Requeue\"}\n     *              ]\n     *          },\n     *          \"chat_requeue_shortcuts\" :{\n     *              shortcut : [\n     *                {@chat_requeue_shortcut_id:\"3\", @name:\"test\", @rank:\"1\",@requeue_chat_queue_id:\"74\",@skill_id:\"\"}\n     *              ]\n     *          }\n     *      }\n     *  }\n     */\n    LoadMediaNotification.prototype.processResponse = function(notification) {\n      var notif = notification.ui_notification;\n\n      var dts = utils.getText(notif, 'queue_dts');\n      dts = new Date(dts.replace(' ', 'T'));\n\n      // set up new task obj\n      var newTask = {\n        uii: utils.getText(notif, 'uii'),\n        taskId: utils.getText(notif, 'task_id'),\n        operationId: utils.getText(notif, 'operation_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        sessionId: utils.getText(notif, 'session_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        queueDts: dts,\n        queueTime: utils.getText(notif, 'queue_time'),\n        chatQueueId: utils.getText(notif, 'chat_queue_id'),\n        chatQueueName: utils.getText(notif, 'chat_queue_name'),\n        chatRequeueType: utils.getText(notif, 'chat_requeue_type'),\n        channelType: utils.getText(notif, 'channel_type'),\n        idleTimeout: utils.getText(notif, 'idle_timeout'),\n      };\n\n      newTask.requeueShortcuts = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_requeue_shortcuts',\n        'shortcut',\n      )[0];\n      newTask.chatDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_dispositions',\n        'disposition',\n      )[0];\n\n      if (newTask.chatDispositions && newTask.chatDispositions.disposition) {\n        newTask.chatDispositions.dispositions = [newTask.chatDispositions];\n      } else {\n        newTask.chatDispositions = newTask.chatDispositions.dispositions;\n      }\n\n      // convert numbers to boolean\n      if (newTask.chatDispositions) {\n        for (var d = 0; d < newTask.chatDispositions.length; d++) {\n          var disp = newTask.chatDispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.isSuccess = disp.isSuccess === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // Build token map\n      newTask.baggage = buildTaskTokenMap(newTask);\n\n      return newTask;\n    };\n\n    function buildTaskTokenMap(newTask) {\n      var tokens = {};\n      var model = UIModel.getInstance();\n\n      try {\n        tokens['chatQueueId'] = newTask.chatQueueId;\n        tokens['chatQueueName'] = newTask.chatQueueName;\n        tokens['uii'] = newTask.uii;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for basic chat info. ',\n          any,\n        );\n      }\n\n      try {\n        tokens['agentFirstName'] = model.agentSettings.firstName;\n        tokens['agentLastName'] = model.agentSettings.lastName;\n        tokens['agentExternalId'] = model.agentSettings.externalAgentId;\n        tokens['agentType'] = model.agentSettings.agentType;\n        tokens['agentEmail'] = model.agentSettings.email;\n        tokens['agentUserName'] = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    var NewChatNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"NEW-CHAT\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"NEW-CHAT\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"session_id\":{\"#text\":\"2\"},\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"queue_dts\":{\"#text\":\"\"},\n     *          \"queue_time\":{\"#text\":\"\"},\n     *          \"chat_queue_id\":{\"#text\":\"\"},\n     *          \"chat_queue_name\":{\"#text\":\"\"},\n     *          \"chat_requeue_type\" : {\"#text\":\"\"}\n     *          \"app_url\":{\"#text\":\"\"},\n     *          \"channel_type\":{\"#text\":\"\"},\n     *          \"ani\":{\"#text\":\"\"},\n     *          \"dnis\":{\"#text\":\"\"},\n     *          \"survey_pop_type\":{\"#text\":\"\"},\n     *          \"script_id\":{\"#text\":\"\"},\n     *          \"script_version\":{\"#text\":\"\"},\n     *          \"idle_timeout\":{\"#text\":\"\"},\n     *          \"is_monitoring\":{#text\":\"TRUE\"|\"FALSE\"},\n     *          \"monitored_agent_id\":{\"#text\":\"123\"| \"\"} <-- only populated if is_monitoring == TRUE\n     *          \"chat_dispositions\":{\n     *              \"disposition\":[\n     *                  { \"@disposition_id\":\"2\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"@email_template_id\":\"1\", \"#text\":\"Complete\"},\n     *                  { \"@disposition_id\":\"3\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"#text\":\"Requeue\"}\n     *              ]\n     *          },\n     *          \"chat_requeue_shortcuts\" :{\n     *              shortcut : [\n     *                {@chat_requeue_shortcut_id:\"3\", @name:\"test\", @rank:\"1\",@requeue_chat_queue_id:\"74\",@skill_id:\"\"}\n     *              ]\n     *          }\n     *          \"transcript\":{\n     *              \"message\":[\n     *                  { \"@from\":\"system\", \"@type\":\"SYSTEM\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"User1 connected\"},\n     *                  { \"@from\":\"dlbooks\", \"@type\":\"AGENT\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"Hello\"},\n     *                  { \"@from\":\"user1\", \"@type\":\"CLIENT\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"Hi\"}\n     *              ]\n     *          },\n     *          \"json_baggage\":{\"#text\":\"json_string_form_data\"}, <--- pre-form chat data\n     *      }\n     *  }\n     */\n    NewChatNotification.prototype.processResponse = function(notification) {\n      var notif = notification.ui_notification;\n\n      var dts = utils.getText(notif, 'queue_dts');\n      dts = new Date(dts.replace(' ', 'T'));\n\n      // set up new chat obj\n      var newChat = {\n        uii: utils.getText(notif, 'uii'),\n        accountId: utils.getText(notif, 'account_id'),\n        sessionId: utils.getText(notif, 'session_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        queueDts: dts,\n        queueTime: utils.getText(notif, 'queue_time'),\n        chatQueueId: utils.getText(notif, 'chat_queue_id'),\n        chatQueueName: utils.getText(notif, 'chat_queue_name'),\n        chatRequeueType: utils.getText(notif, 'chat_requeue_type'),\n        appUrl: utils.getText(notif, 'app_url'),\n        channelType: utils.getText(notif, 'channel_type'),\n        ani: utils.getText(notif, 'ani'),\n        dnis: utils.getText(notif, 'dnis'),\n        surveyPopType: utils.getText(notif, 'survey_pop_type'),\n        scriptId: utils.getText(notif, 'script_id'),\n        scriptVersion: utils.getText(notif, 'script_version'),\n        idleTimeout: utils.getText(notif, 'idle_timeout'),\n        isMonitoring: utils.getText(notif, 'is_monitoring'),\n        monitoredAgentId: utils.getText(notif, 'monitored_agent_id'),\n        preChatData: utils.getText(notif, 'json_baggage'),\n      };\n\n      newChat.requeueShortcuts = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_requeue_shortcuts',\n        'shortcut',\n      )[0];\n      newChat.chatDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_dispositions',\n        'disposition',\n      )[0];\n      newChat.transcript = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transcript',\n        'message',\n      )[0];\n      newChat.baggage = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'json_baggage',\n      )[0];\n\n      if (newChat.chatDispositions && newChat.chatDispositions.disposition) {\n        newChat.chatDispositions.dispositions = [newChat.chatDispositions];\n      } else {\n        newChat.chatDispositions = newChat.chatDispositions.dispositions;\n      }\n\n      if (newChat.transcript && newChat.transcript.message) {\n        newChat.transcript = [newChat.transcript];\n      } else {\n        newChat.transcript = newChat.transcript.messages;\n      }\n\n      if (newChat.preChatData) {\n        try {\n          newChat.preChatData = JSON.parse(newChat.preChatData);\n        } catch (err) {\n          utils.logMessage(\n            LOG_LEVELS.ERROR,\n            'Error parsing the pre-form chat data.',\n            notif,\n          );\n        }\n      }\n\n      // convert numbers to boolean\n      if (newChat.chatDispositions) {\n        for (var d = 0; d < newChat.chatDispositions.length; d++) {\n          var disp = newChat.chatDispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.isSuccess = disp.isSuccess === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // convert dates\n      if (newChat.transcript) {\n        for (var t = 0; t < newChat.transcript.length; t++) {\n          var msg = newChat.transcript[t];\n          if (msg.dts) {\n            msg.dts = new Date(msg.dts.replace(' ', 'T'));\n          }\n        }\n      }\n\n      // Build token map\n      newChat.baggage = buildChatTokenMap(notif, newChat);\n\n      return newChat;\n    };\n\n    function buildChatTokenMap(notif, newChat) {\n      var tokens = {};\n      var model = UIModel.getInstance();\n\n      if (newChat.preChatData) {\n        for (var prop in newChat.preChatData) {\n          if (newChat.preChatData.hasOwnProperty(prop)) {\n            tokens[prop] = newChat.preChatData[prop];\n          }\n        }\n      }\n\n      try {\n        tokens['chatQueueId'] = newChat.chatQueueId;\n        tokens['chatQueueName'] = newChat.chatQueueName;\n        tokens['ani'] = newChat.ani;\n        tokens['dnis'] = newChat.dnis;\n        tokens['uii'] = newChat.uii;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for basic chat info. ',\n          any,\n        );\n      }\n\n      try {\n        tokens['agentFirstName'] = model.agentSettings.firstName;\n        tokens['agentLastName'] = model.agentSettings.lastName;\n        tokens['agentExternalId'] = model.agentSettings.externalAgentId;\n        tokens['agentType'] = model.agentSettings.agentType;\n        tokens['agentEmail'] = model.agentSettings.email;\n        tokens['agentUserName'] = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    var AgentStats = function() {};\n\n    /*\n     * This class is responsible for handling an Agent Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel. Could be a single agent or array of agents.\n     *\n      {\"ui_stats\":{\n           \"@type\":\"AGENT\",\n           \"agent\":{\n               \"@alt\":\"INBOUND\",\n               \"@atype\":\"AGENT\",\n               \"@avgtt\":\"00.0\",\n               \"@calls\":\"0\",\n               \"@da\":\"0\",\n               \"@droute\":\"6789050673\",\n               \"@f\":\"John\",\n               \"@gdesc\":\"\",\n               \"@gname\":\"\",\n               \"@id\":\"1856\",\n               \"@l\":\"Doe\",\n               \"@ldur\":\"6\",\n               \"@ltype\":\"INBOUND\",\n               \"@oh\":\"0\",\n               \"@pd\":\"0\",\n               \"@pdt\":\"0\",\n               \"@pres\":\"0\",\n               \"@rna\":\"0\",\n               \"@sdur\":\"6\",\n               \"@sp\":\"\",\n               \"@state\":\"AVAILABLE\",\n               \"@ttt\":\"0\",\n               \"@u\":\"jdoe\",\n               \"@uii\":\"\",\n               \"@util\":\"0.00\",\n               \"@call_duration:0\"\n           }\n         }\n      }\n     */\n    AgentStats.prototype.processResponse = function(stats) {\n      var resp = stats.ui_stats.agent;\n      var agentStats = [];\n\n      if (!Array.isArray(resp)) {\n        resp = [resp];\n      }\n\n      try {\n        for (var i = 0; i < resp.length; i++) {\n          agentStats.push({\n            agentLoginType: resp[i]['@alt'],\n            agentType: resp[i]['@atype'],\n            avgTalkTime: resp[i]['@avgtt'],\n            calls: resp[i]['@calls'],\n            isDequeueAgent: resp[i]['@da'],\n            defaultRoute: resp[i]['@droute'],\n            firstName: resp[i]['@f'],\n            queueDesc: resp[i]['@gdesc'],\n            queueName: resp[i]['@gname'],\n            agentId: resp[i]['@id'],\n            lastName: resp[i]['@l'],\n            loginDuration: resp[i]['@ldur'],\n            loginType: resp[i]['@ltype'],\n            offHook: resp[i]['@oh'],\n            pendingDisp: resp[i]['@pd'],\n            pendingDispTime: resp[i]['@pdt'],\n            presented: resp[i]['@pres'],\n            rna: resp[i]['@rna'],\n            stateDuration: resp[i]['@sdur'],\n            skillProfileName: resp[i]['@sp'],\n            agentState: resp[i]['@state'],\n            totalTalkTime: resp[i]['@ttt'],\n            username: resp[i]['@u'],\n            uii: resp[i]['@uii'],\n            utilization: resp[i]['@util'],\n            callDuration: resp[i]['@call_duration'],\n          });\n        }\n      } catch (e) {}\n\n      UIModel.getInstance().agentStats = agentStats;\n      return agentStats;\n    };\n\n    var AgentDailyStats = function() {};\n\n    /*\n     * This class is responsible for handling an Agent Daily Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\"ui_stats\":{\n     *      \"@type\":\"AGENTDAILY\",\n     *      \"agent_id\":{\"#text\":\"1180723\"},\n     *      \"total_login_sessions\":{\"#text\":\"1\"},\n     *      \"total_calls_handled\":{\"#text\":\"0\"},\n     *      \"total_preview_dials\":{\"#text\":\"0\"},\n     *      \"total_manual_dials\":{\"#text\":\"0\"},\n     *      \"total_rna\":{\"#text\":\"0\"},\n     *      \"total_talk_time\":{\"#text\":\"0\"},\n     *      \"total_offhook_time\":{\"#text\":\"0\"},\n     *      \"total_login_time\":{\"#text\":\"7808\"},\n     *      \"total_success_dispositions\":{\"#text\":\"0\"}\n     *    }\n     * }\n     */\n    AgentDailyStats.prototype.processResponse = function(stats) {\n      var model = UIModel.getInstance().agentDailyStats;\n      var resp = stats.ui_stats;\n\n      model.agentId = utils.getText(resp, 'agent_id');\n      model.totalLoginSessions = utils.getText(resp, 'total_login_sessions');\n      model.totalChatsHandled = utils.getText(resp, 'total_chats_handled');\n      model.totalCallsHandled = utils.getText(resp, 'total_calls_handled');\n      model.totalPreviewDials = utils.getText(resp, 'total_preview_dials');\n      model.totalManualDials = utils.getText(resp, 'total_manual_dials');\n      model.totalRna = utils.getText(resp, 'total_rna');\n      model.totalSuccessDispositions = utils.getText(\n        resp,\n        'total_success_dispositions',\n      );\n\n      if (!model.totalTalkTime) {\n        // init daily stats to first stats packet if they don't exist\n        model.totalLoginTime = utils.getText(resp, 'total_login_time');\n        model.totalOffhookTime = utils.getText(resp, 'total_offhook_time');\n        model.totalTalkTime = utils.getText(resp, 'total_talk_time');\n        model.currCallTime = '0';\n      }\n\n      return model;\n    };\n\n    var CampaignStats = function() {};\n\n    /*\n     * This class is responsible for handling a Campaign Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\"ui_stats\":{\n     *      \"@type\":\"CAMPAIGN\",\n     *      \"campaign\":[\n     *          {\n     *              \"@a\":\"0\",\"@aba\":\"0\",\"@an\":\"0\",\"@av\":\"0\",\"@b\":\"0\",\"@c\":\"1\",\"@e\":\"0\",\"@f\":\"0\",\n     *              \"@id\":\"60275\",\"@int\":\"0\",\"@m\":\"0\",\"@na\":\"0\",\"@name\":\"Test Campaign\",\n     *              \"@p\":\"0\",\"@r\":\"1\",\"@s\":\"0\",\"@tc\":\"0\",\"@ttt\":\"0\"\n     *          },\n     *          {\n     *              \"@a\":\"0\",\"@aba\":\"0\",\"@an\":\"0\",\"@av\":\"0\",\"@b\":\"0\",\"@c\":\"0\",\"@e\":\"0\",\"@f\":\"0\",\n     *              \"@id\":\"60293\",\"@int\":\"0\",\"@m\":\"0\",\"@na\":\"0\",\"@name\":\"Test Campaign w\\\\ Search\",\n     *              \"@p\":\"0\",\"@r\":\"19\",\"@s\":\"0\",\"@tc\":\"0\",\"@ttt\":\"0\"\n     *          }\n     *     ],\n     *     \"totals\":{\n     *          \"noanswer\":{\"#text\":\"0\"},\n     *          \"totalConnects\":{\"#text\":\"0\"},\n     *          \"pending\":{\"#text\":\"0\"},\n     *          \"active\":{\"#text\":\"0\"},\n     *          \"error\":{\"#text\":\"0\"},\n     *          \"totalTalkTime\":{\"#text\":\"0\"},\n     *          \"answer\":{\"#text\":\"0\"},\n     *          \"abandon\":{\"#text\":\"0\"},\n     *          \"ready\":{\"#text\":\"20\"},\n     *          \"machine\":{\"#text\":\"0\"},\n     *          \"intercept\":{\"#text\":\"0\"},\n     *          \"busy\":{\"#text\":\"0\"},\n     *          \"complete\":{\"#text\":\"1\"},\n     *          \"fax\":{\"#text\":\"0\"}\n     *     }\n     *   }\n     * }\n     */\n    CampaignStats.prototype.processResponse = function(stats) {\n      var resp = stats.ui_stats;\n      var totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      var campaigns = [];\n      var campRaw = null;\n\n      if (!Array.isArray(resp.campaign)) {\n        resp.campaign = [resp.campaign];\n      }\n\n      for (var c = 0; c < resp.campaign.length; c++) {\n        campRaw = resp.campaign[c];\n\n        if (campRaw == null) {\n          continue;\n        }\n\n        campaigns.push({\n          active: campRaw['@a'],\n          abandon: campRaw['@aba'],\n          answer: campRaw['@an'],\n          available: campRaw['@av'],\n          busy: campRaw['@b'],\n          complete: campRaw['@c'],\n          error: campRaw['@e'],\n          fax: campRaw['@f'],\n          campaignId: campRaw['@id'],\n          intercept: campRaw['@int'],\n          machine: campRaw['@m'],\n          noanswer: campRaw['@na'],\n          campaignName: campRaw['@name'],\n          pending: campRaw['@p'],\n          ready: campRaw['@r'],\n          staffed: campRaw['@s'],\n          totalConnects: campRaw['@tc'],\n          totalTalkTime: campRaw['@ttt'],\n        });\n      }\n\n      var campaignStats = {\n        type: resp['@type'],\n        campaigns: campaigns,\n        totals: totals,\n      };\n\n      UIModel.getInstance().campaignStats = campaignStats;\n\n      return campaignStats;\n    };\n\n    var ChatQueueStats = function() {};\n\n    /*\n     * This class is responsible for handling an Chat Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     *{\n     *  \"ui_stats\": {\n     *  \"@type\": \"CHAT\",\n     *  \"chatQueue\": [\n     *      {\n     *          \"@active\": \"1\",\n     *          \"@available\": \"0\",\n     *          \"@avgAbandon\": \"00.0\",\n     *          \"@avgChatTime\": \"00.0\",\n     *          \"@avgQueueTime\": \"00.0\",\n     *          \"@chatQueueId\": \"1\",\n     *          \"@chatQueueName\": \"testing chat quuee\",\n     *          \"@deflected\": \"0\",\n     *          \"@inQueue\": \"0\",\n     *          \"@longestInQueue\": \"0\",\n     *          \"@presented\": \"0\",\n     *          \"@routing\": \"0\",\n     *          \"@staffed\": \"0\",\n     *          \"@totalAbandonTime\": \"0\",\n     *          \"@totalAnswerTime\": \"0\",\n     *          \"@totalChatTime\": \"0\",\n     *          \"@totalQueueTime\": \"0\",\n     *          \"@utilization\": \"00.0\"\n     *      },\n     *      {\n     *          \"@active\": \"0\",\n     *          \"@available\": \"0\",\n     *          \"@avgAbandon\": \"00.0\",\n     *          \"@avgChatTime\": \"00.0\",\n     *          \"@avgQueueTime\": \"00.0\",\n     *          \"@chatQueueId\": \"3\",\n     *          \"@chatQueueName\": \"testing test\",\n     *          \"@deflected\": \"0\",\n     *          \"@inQueue\": \"0\",\n     *          \"@longestInQueue\": \"0\",\n     *          \"@presented\": \"0\",\n     *          \"@routing\": \"0\",\n     *          \"@staffed\": \"0\",\n     *          \"@totalAbandonTime\": \"0\",\n     *          \"@totalAnswerTime\": \"0\",\n     *          \"@totalChatTime\": \"0\",\n     *          \"@totalQueueTime\": \"0\",\n     *          \"@utilization\": \"00.0\"\n     *      }\n     *  ],\n     *  \"totals\": {\n     *      \"routing\": {\"#text\": \"0\"},\n     *      \"ttotalAnswerTime\": {\"#text\": \"0\"},\n     *      \"inQueue\": { \"#text\": \"0\"},\n     *      \"ttotalChatTime\": {\"#text\": \"0\"},\n     *      \"ttotalAbandonTime\": {\"#text\": \"0\"},\n     *      \"presented\": {\"#text\": \"0},\n     *      \"accepted\": {\"#text\": \"0\"},\n     *      \"deflected\": {\"#text\": \"0\"},\n     *      \"active\": {\"#text\": \"1\"},\n     *      \"abandoned\": {\"#text\": \"0\"},\n     *      \"ttotalQueueTime\": {\"#text\": \"0\"}\n     *   }\n     *  }\n     *}\n     */\n    ChatQueueStats.prototype.processResponse = function(stats) {\n      var resp = stats.ui_stats;\n      var totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      var chatQueues = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'chatQueue',\n      );\n\n      var chatQueueStats = {\n        type: resp['@type'],\n        chatQueues: chatQueues,\n        totals: totals,\n      };\n\n      UIModel.getInstance().chatQueueStats = chatQueueStats;\n\n      return chatQueueStats;\n    };\n\n    var QueueStats = function() {};\n\n    /*\n     * This class is responsible for handling an Queue Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\n     *   \"ui_stats\":{\n     *       \"@type\":\"GATE\",\n     *       \"gate\":{\n     *           \"@aba\":\"0\",\"@active\":\"0\",\"@ans\":\"0\",\"@asa\":\"00.0\",\"@avail\":\"2\",\n     *           \"@avga\":\"00.0\",\"@avgq\":\"00.0\",\"@avgt\":\"00.0\",\"@def\":\"0\",\"@id\":\"12126\",\n     *           \"@inq\":\"0\",\"@long_c\":\"0\",\"@longq\":\"0\",\"@name\":\"Cris inbound\",\n     *           \"@pres\":\"0\",\"@route\":\"0\",\"@short_aba\":\"0\",\"@short_c\":\"0\",\"@sla\":\"100.0\",\n     *           \"@sla_f\":\"0\",\"@sla_p\":\"0\",\"@staff\":\"2\",\"@t_aba\":\"0\",\"@t_q\":\"0\",\"@t_soa\":\"0\",\"@util\":\"00.0\"\n     *       },\n     *       \"totals\":{\n     *           \"inQueue\":{\"#text\":\"0\"},\n     *           \"answered\":{\"#text\":\"0\"},\n     *           \"totalABATime\":{\"#text\":\"0\"},\n     *           \"active\":{\"#text\":\"0\"},\n     *           \"longCall\":{\"#text\":\"0\"},\n     *           \"shortCall\":{\"#text\":\"0\"},\n     *           \"slaPass\":{\"#text\":\"0\"},\n     *           \"totalQueueTime\":{\"#text\":\"0\"},\n     *           \"routing\":{\"#text\":\"0\"},\n     *           \"totalTalkTime\":{\"#text\":\"0\"},\n     *           \"shortAbandon\":{\"#text\":\"0\"},\n     *           \"presented\":{\"#text\":\"0\"},\n     *           \"totalSOA\":{\"#text\":\"0\"},\n     *           \"slaFail\":{\"#text\":\"0\"},\n     *           \"deflected\":{\"#text\":\"0\"},\n     *           \"abandoned\":{\"#text\":\"0\"}\n     *      }\n     *   }\n     * }\n     */\n    QueueStats.prototype.processResponse = function(stats) {\n      var resp = stats.ui_stats;\n      var totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      var queues = [];\n      var gateRaw = {};\n\n      if (!Array.isArray(resp.gate)) {\n        resp.gate = [resp.gate];\n      }\n\n      for (var c = 0; c < resp.gate.length; c++) {\n        gateRaw = resp.gate[c];\n        if (gateRaw == null) {\n          continue;\n        }\n\n        queues.push({\n          abandon: gateRaw['@aba'],\n          active: gateRaw['@active'],\n          answer: gateRaw['@ans'],\n          asa: gateRaw['@asa'],\n          available: gateRaw['@avail'],\n          avgAbandon: gateRaw['@avga'],\n          avgQueue: gateRaw['@avgq'],\n          avgTalk: gateRaw['@avgt'],\n          deflected: gateRaw['@def'],\n          queueId: gateRaw['@id'],\n          inQueue: gateRaw['@inq'],\n          longCall: gateRaw['@long_c'],\n          longestInQueue: gateRaw['@longq'],\n          queueName: gateRaw['@name'],\n          presented: gateRaw['@pres'],\n          routing: gateRaw['@route'],\n          shortAbandon: gateRaw['@short_aba'],\n          shortCall: gateRaw['@short_c'],\n          sla: gateRaw['@sla'],\n          slaPass: gateRaw['@sla_p'],\n          slaFail: gateRaw['@sla_f'],\n          staffed: gateRaw['@staff'],\n          tAbandonTime: gateRaw['@t_aba'],\n          tQueueTime: gateRaw['@t_q'],\n          tSpeedOfAnswer: gateRaw['@t_soa'],\n          utilization: gateRaw['@util'],\n        });\n      }\n\n      var queueStats = {\n        type: resp['@type'],\n        queues: queues,\n        totals: totals,\n      };\n\n      UIModel.getInstance().queueStats = queueStats;\n\n      return queueStats;\n    };\n\n    var UIModel = (function() {\n      var instance;\n\n      function init() {\n        // Singleton\n\n        // Private methods and variables here //\n        //function privateMethod(){\n        //    console.log( \"I am private\" );\n        //}\n        //\n        //var privateVariable = \"I'm also private\";\n\n        // Public methods and variables\n        return {\n          currentCall: {}, // save the NEW-CALL notification in parsed form\n          pendingNewCallSessions: {}, // save any pending call sessions, in case the new call packet hasn't arrived\n          callTokens: {}, // Stores a map of all tokens for a call\n          callbacks: [],\n          libraryInstance: null, // Initialized to the library instance on startup\n          pingIntervalId: null, // The id of the timer used to send ping-call messages\n          statsIntervalId: null, // The id of the timer used to send stats request messages\n          pingStatIntervalId: null, // The id of the timer used to send ping-call beat messages\n          agentDailyIntervalId: null, // The id of the timer used to update some agent daily stats values\n          reconnectIntervalId: null, // The id of the timer used to try reconnecting the socket\n          waitingForAddSession: null,\n          authHost: window.location.origin, // default to protocol + hostname + port\n          socketProtocol: 'wss://', // default to secure socket unless local test flag passed in on initialization\n          baseAuthUri: '/api/auth/', // the path to engage-auth e.g.: http://localhost:81/api/auth/ or window.location.origin + \"/api/auth/\",\n          baseApiUri: '/api/v1/', // the path to engage-api\n\n          // internal chat requests\n          chatAliasRequest: null,\n          chatRoomRequest: null,\n          chatSendRequest: null,\n          supervisorListRequest: null,\n          chatRoomStateRequest: new ChatRoomStateRequest(),\n\n          //multi-socket\n          multiSocketRequest: new MultiSocketRequest(),\n          dataStore: new LocalStorageService('agentSDK'),\n\n          // external chat requests/notifications\n          chatActiveNotification: new ChatActiveNotification(),\n          chatInactiveNotification: new ChatInactiveNotification(),\n          chatDispositionRequest: null,\n          chatMessageRequest: new ChatMessageRequest(),\n          chatPresentedNotification: new ChatPresentedNotification(),\n          chatPresentedRequest: null,\n          chatRequeueRequest: null,\n          chatTypingNotification: new ChatTypingNotification(),\n          chatTypingRequest: null,\n          newChatNotification: new NewChatNotification(),\n          loadMediaNotification: new LoadMediaNotification(),\n          chatClientReconnectNotification: new ChatClientReconnectNotification(),\n\n          // request instances\n          agentStateRequest: null,\n          chatStateRequest: null,\n          ackRequest: new AckRequest(),\n          bargeInRequest: null,\n          callNotesRequest: null,\n          callbacksPendingRequest: null,\n          campaignDispositionsRequest: null,\n          loginRequest: null,\n          coldXferRequest: null,\n          dispositionRequest: null,\n          dispositionManualPassRequest: null,\n          hangupRequest: null,\n          holdRequest: null,\n          leadHistoryRequest: null,\n          leadInsertRequest: null,\n          leadUpdateRequest: null,\n          logoutRequest: null,\n          authenticateRequest: null, // get RC access token\n          loginPhase1Request: null,\n          offhookInitRequest: null,\n          offhookTermRequest: null,\n          oneToOneOutdialRequest: null,\n          oneToOneOutdialCancelRequest: null,\n          pauseRecordRequest: null,\n          pingCallRequest: null,\n          previewDialRequest: null,\n          reconnectRequest: null,\n          recordRequest: null,\n          requeueRequest: null,\n          statsRequest: null,\n          tcpaSafeRequest: null,\n          warmXferRequest: null,\n          warmXferCancelRequest: null,\n          chatListRequest: null,\n          directAgentTransferListRequest: null,\n          directAgentTransferRequest: null,\n          webRTCRequest: null,\n          searchDirectoryRequest: null,\n          extensionPresenceRequest: null,\n\n          // response packets\n          agentStatePacket: null,\n          chatStatePacket: null,\n          loginPacket: null,\n          currentCallPacket: null,\n          authenticatePacket: null,\n          loginPhase1Packet: null,\n          offhookInitPacket: null,\n          offhookTermPacket: null,\n          transferSessions: {},\n          chatListResponse: null,\n\n          // notification packets\n          addSessionNotification: new AddSessionNotification(),\n          dialGroupChangeNotification: new DialGroupChangeNotification(),\n          dialGroupChangePendingNotification: new DialGroupChangePendingNotification(),\n          dropSessionNotification: new DropSessionNotification(),\n          earlyUiiNotification: new EarlyUiiNotification(),\n          endCallNotification: new EndCallNotification(),\n          gatesChangeNotification: new GatesChangeNotification(),\n          genericNotification: new GenericNotification(),\n          newCallNotification: new NewCallNotification(),\n\n          // stats packets\n          agentStatsPacket: new AgentStats(),\n          agentDailyStatsPacket: new AgentDailyStats(),\n          queueStatsPacket: new QueueStats(),\n          campaignStatsPacket: new CampaignStats(),\n          chatQueueStatsPacket: new ChatQueueStats(),\n\n          // application state\n          applicationSettings: {\n            availableCountries: [],\n            isLoggedInIS: false, // a check for whether or not user is logged in with IntelliServices\n            socketConnected: false,\n            socketDest: '',\n            isTcpaSafeMode: false, // Comes in at the account-level - will get set to true if this interface should be in tcpa-safe-mode only.\n            isSso: false, // Passed in on phase 1 login response, if agent signed in through RC single sign-on path set to true\n            dialDestType: '', // What type of phone are we setting up: e.g. \"RC_SOFTPHONE\", \"LEGACY_SOFTPHONE\", \"RC_PHONE\" (for RC office ext)// Comes in at the account-level - will get set to true if this interface should be in tcpa-safe-mode only.\n            allowMultiSocket: false, // Determines whether agent can open a new socket under the same login\n          },\n\n          // stat objects\n          agentStats: [],\n          agentDailyStats: {},\n          campaignStats: {},\n          queueStats: {},\n          chatQueueStats: {},\n\n          // current agent settings\n          agentSettings: {\n            accountId: null, // account agent belongs to\n            agentId: 0,\n            agentPassword: '', //agent Password\n            agentType: 'AGENT', // AGENT | SUPERVISOR\n            altDefaultLoginDest: '',\n            availableAgentStates: [],\n            callerIds: [],\n            callState: null, // display the current state of the call\n            corporateDirectory: false,\n            currentState: 'OFFLINE', // Agent system/base state\n            currentStateLabel: '', // Agent aux state label\n            defaultLoginDest: '',\n            dialDest: '', // Destination agent is logged in with for offhook session, set on configure response, if multi values in format \"xxxx|,,xxxx\"\n            email: '',\n            externalAgentId: '',\n            firstName: '',\n            guid: '', // unique key generated on login, used for accessing spring endpoints\n            isLoggedIn: false, // agent is logged in to the platform\n            isOffhook: false, // track whether or not the agent has an active offhook session\n            isMonitoring: false, // track whether or not the offhook session is for monitoring\n            initLoginState: 'AVAILABLE', // state agent is placed in on successful login\n            initLoginStateLabel: 'Available', // state label for agent on successful login\n            isOutboundPrepay: false, // determines if agent is a prepay agent\n            lastName: '',\n            loginDTS: null, // date and time of the final login phase (IQ)\n            loginType: 'NO-SELECTION', // Could be INBOUND | OUTBOUND | BLENDED | NO-SELECTION, set on login response\n            maxBreakTime: -1,\n            maxLunchTime: -1,\n            onCall: false, // true if agent is on an active call\n            onManualOutdial: false, // true if agent is on a manual outdial call\n            outboundManualDefaultRingtime: '30',\n            pendingCallbacks: [],\n            pendingDialGroupChange: 0, // Set to Dial Group Id if we are waiting to change dial groups until agent ends call\n            phoneLoginPin: '',\n            realAgentType: 'AGENT',\n            supervisors: [], // Used for agent chat\n            totalCalls: 0, // Call counter that is incremented every time a new session is received\n            transferNumber: '', // May be pre-populated by an external interface, if so, the transfer functionality uses it\n            updateDGFromAdminUI: false, // if pending Dial Group change came from AdminUI, set to true (only used if request is pending)\n            updateLoginMode: false, // gets set to true when doing an update login (for events control)\n            username: '', // Agent's username\n            wasMonitoring: false, // used to track if the last call was a monitoring call\n          },\n\n          // current agent permissions\n          agentPermissions: {\n            allowBlended: true, // Controls whether or not the agent can log into both inbound queues and an outbound dialgroup\n            allowCallControl: true, // Set from the the login response packet\n            allowChat: false, // Controls whether or not the agent has the option to open the Chat Queue Manager\n            allowCrossQueueRequeue: false, // Controls whether or not the agent can requeue to a different queue group\n            allowInbound: true, // Controls whether or not the agent can log into an inbound queue\n            allowLeadInserts: false, // Controls whether or not the agents can insert leads\n            allowLeadSearch: false, // Controlled by the dial-group allow_lead_search setting. Enables or disables the lead search\n            allowLoginControl: true, // Controls whether or not the agent can log in\n            allowLoginUpdates: true, // Controls whether or not the agent can update their login\n            allowManualCalls: true, // Controls whether or not the agents have the option to make a manual outbound call\n            allowManualPass: true, // Controls whether or not the agent has the option to make a manual pass on a lead\n            allowManualIntlCalls: false, // Controls whether or not the agent has the option to make international manual outbound calls\n            allowManualOutboundGates: false, // Controls whether or not the agent has the option to select queues to convert manual outbound calls to\n            allowOffHook: true, // Controls whether or not the agents can go offhook\n            allowOutbound: true, // Controls whether or not the agent can log into an outdial group\n            allowPreviewLeadFilters: false, // Controlled by the dial-group allow_preview_lead_filters setting. Enables or disables the filters on the preview style forms\n            allowLeadUpdatesByCampaign: {}, // For each campaign ID, store whether leads can be updated\n            disableSupervisorMonitoring: true, // Controls whether or not a supervisor can view agent stats\n            progressiveEnabled: false, // Preview dial feature that enables auto-calls from the preview window.\n            requireFetchedLeadsCalled: false, // Controlled by the dial-group require_fetched_leads_called setting. Enables or disables the requirement to only fetch new leads when current leads are called or expired. ONly for Preview or TCPA-SAFE.\n            showLeadHistory: true, // Controls whether or not the agents can view lead history\n            enableTaskMode: false, // Controls whether or not the agent has access to Digital task mode\n            enableFolderMode: false, // Controls whether or not the agent has access to Digital folder mode\n          },\n\n          // chat\n          chatSettings: {\n            availableChatQueues: [], // List of all chat queues agent has access to, set on login\n            availableChatRooms: [], // List of all chat rooms agent has access to, set on login\n            chatQueues: [], // Array of chat queues agent is signed into\n            alias: '', // Chat alias, on-login this is the UID, but is changed if the user changes it\n          },\n\n          // connection objects\n          connectionSettings: {\n            hashCode: '', // used specifically for reconnects\n            reconnect: false, // variable tracks the type of login, on init it's false...once connected it's set to true\n            isMultiSocket: false,\n          },\n\n          // inbound settings\n          inboundSettings: {\n            availableQueues: [], // array of queues agent has access to, set on login\n            availableSkillProfiles: [], // array of skill profiles agent has access to, set on login\n            queues: [], // array of queues agent is signed into, set on config response\n            skillProfile: {}, // The skill profile the agent is signed into, set on config response\n          },\n\n          // outbound settings\n          outboundSettings: {\n            availableCampaigns: [], // array of campaigns agent has access to, set on login\n            availableOutdialGroups: [], // array of dial groups agent has access to, set on login\n            insertCampaigns: [],\n            defaultDialGroup: 0,\n            outdialGroup: {}, // dial group agent is signed into\n            previewDialLeads: [], // list of leads returned from preview dial request\n            tcpaSafeLeads: [], // list of leads returned from tcpa safe request\n            campaignDispositions: [], // list of campaign dispositions for specific campaign\n          },\n\n          scriptSettings: {\n            availableScripts: [], // array of all scripts associated with any campaigns or queues agent is logged into\n            loadedScripts: {}, // stores script data by script id e.g. {1:{}, 32:{}}\n          },\n\n          softphoneSettings: {\n            webRtc: null, // stores the CFSimpleSip object\n            isRegistered: false, // whether or not the softphone is currently registered\n            muteActive: false, // whether or not the softphone is muted\n            registerPending: null, // timeout to trigger no register response\n            maintainOH: false, // based on the configurable agent setting to keep offhook session after ending call\n            autoStartOH: false, // determines whether or not to start an offhook session automatically after softphone registrar reconnect\n            wsServers: [], // current sip server domain + user credentials, set as array for SIP.js ua object\n            sipInfo: [], // array of sip server domains + user credentials for softphone registration, retrieved from engage-auth\n            uri: '', // username + @ + domain\n            displayName: '', // username - Used to register softphone with freeswitch (legacy)\n            authorizationUser: '', // username - Used to register softphone with freeswitch (legacy)\n            sipPassword: '', // password for sip softphone registration\n            sipDialDest: '', // dialDest used for softphone connection\n            attemptingSoftphoneReconnect: false, // set to true when attempting to rotate softphone registrar and reconnect\n            //manualSoftphoneReconnect: false     // set to true when agent triggered registrar rotation\n          },\n\n          // Filtered Directory\n          filteredDirectory: {\n            rcAccountId: '',\n            records: [],\n          },\n\n          extensionPresenceResponse: [],\n\n          // Public methods\n          incrementTotalCalls: function() {\n            this.agentSettings.totalCalls = this.agentSettings.totalCalls + 1;\n          },\n        };\n      }\n\n      return {\n        // Get the Singleton instance if one exists\n        // or create one if it doesn't\n        getInstance: function() {\n          if (!instance) {\n            instance = init();\n          }\n          return instance;\n        },\n\n        resetInstance: function() {\n          instance = null;\n        },\n      };\n    })();\n\n    var LocalStorageService = function(name) {\n      if (!window.localStorage) {\n        console.log('Browser does not support HTML5 Web Storage');\n      }\n      this.prefix = name + ':';\n    };\n    LocalStorageService.prototype.save = function(key, value) {\n      // TODO: that window.localStorage is add by ringcentral-integration\n      if (!window.localStorage || !key || !value) {\n        console.log('Missing parameters key or value on add');\n        return false;\n      }\n      window.localStorage.setItem(this.prefix + key, JSON.stringify(value));\n    };\n    LocalStorageService.prototype.get = function(key) {\n      // TODO: that window.localStorage is add by ringcentral-integration\n      if (\n        !window.localStorage ||\n        !key ||\n        !window.localStorage.getItem(this.prefix + key)\n      ) {\n        console.log('Missing parameter key on retrieve');\n        return false;\n      }\n      return window.localStorage.getItem(this.prefix + key);\n    };\n\n    LocalStorageService.prototype.remove = function(key) {\n      // TODO: that window.localStorage is add by ringcentral-integration\n      if (\n        !window.localStorage ||\n        !key ||\n        !window.localStorage.getItem(this.prefix + key)\n      ) {\n        console.log('Missing parameter key on remove');\n        return false;\n      }\n      window.localStorage.removeItem(this.prefix + key);\n    };\n    // --------------------------\n    // BroadcastChannelHelper.js\n    // --------------------------\n    var broadcastChannelHelper = {\n      // Generate handlers to request / response BroadcastChannels\n      //\n      requestChannel: null,\n      responseChannel: null,\n      currentCallMessageId: null,\n      currentCallRequestCallback: null,\n\n      // Registers the request / response channels\n      //\n      init: function() {\n        if (this.requestChannel != null) {\n          return;\n        }\n\n        var self = this;\n        this.requestChannel = new BroadcastChannel('ev-multisocket-request');\n        this.responseChannel = new BroadcastChannel('ev-multisocket-response');\n\n        // Listen for requests coming from the requestChannel\n        //\n        this.requestChannel.onmessage = function(e) {\n          var type = e.data.type;\n          var messageId = e.data.messageId;\n\n          switch (type) {\n            case 'currentCall':\n              self._sendCurrentCall(messageId);\n              break;\n          }\n        };\n\n        // Listen for requests coming from the responseChannel\n        //\n        this.responseChannel.onmessage = function(e) {\n          var type = e.data.type;\n\n          switch (type) {\n            case 'currentCall':\n              self._processCurrentCallResponse(e.data.data, e.data.messageId);\n          }\n        };\n      },\n\n      destroy: function() {\n        if (this.requestChannel == null) {\n          return;\n        }\n\n        this.requestChannel.onmessage = null;\n        this.responseChannel.onmessage = null;\n\n        this.requestChannel.close();\n        this.responseChannel.close();\n\n        this.requestChannel = null;\n        this.responseChannel = null;\n      },\n\n      // ----------------------------------------------------\n      // Current Call, Request & Response\n      // ----------------------------------------------------\n\n      // When a new tab opens and needs to get the current call, it can do so with this method.  Passing\n      // a callback function to response with (could be a Promise if we are using them in SDK). Once\n      // a response is retrieved, it will be handled in the \"processCurrentCall\" method, and returned\n      // back to the original callback function\n      //\n      requestCurrentCall: function(fn) {\n        this.currentCallMessageId = Math.random();\n        this.currentCallRequestCallback = fn;\n\n        this.requestChannel.postMessage({\n          type: 'currentCall',\n          messageId: this.currentCallMessageId,\n        });\n      },\n\n      // Any instance that has knowledge of the current call can respond to the request\n      //\n      _sendCurrentCall: function(messageId) {\n        if (UIModel.getInstance().currentCall != null) {\n          var obj = {\n            type: 'currentCall',\n            messageId: messageId,\n            data: UIModel.getInstance().currentCall,\n          };\n\n          this.responseChannel.postMessage(obj);\n        }\n      },\n\n      // When a current call response is received, every tab will try to process it.  Only the original\n      // requestor will be able to process it successfully.\n      //\n      _processCurrentCallResponse: function(data, messageId) {\n        if (this.currentCallMessageId === messageId) {\n          // Set the current call model\n          UIModel.getInstance().currentCall = data;\n\n          // Alert the original method that our data is now available.\n          if (this.currentCallRequestCallback != null) {\n            this.currentCallRequestCallback(data);\n          }\n\n          // Null out properties - this ensure subsequent responses from other tabs will be ignored.\n          this.currentCallMessageId = null;\n          this.currentCallRequestCallback = null;\n        }\n      },\n    };\n\n    function HttpService(apiBase) {\n      this.XMLHttpRequest = window.XMLHttpRequest;\n      this.encodeURIComponent = window.encodeURIComponent;\n      this.apiBase = apiBase || 'http://localhost:81';\n\n      var that = this;\n\n      /**\n       * Makes a GET request to Engage Auth.\n       *\n       * @param {string} path - Relative path to append to apiUrl.\n       * @param {Object} config - Object describing different properties of the request.\n       * @returns {Promise} Promise that represents status of the request. Resolves if server responds with 200 status code, and is rejected otherwise.\n       */\n      this.httpGet = function(path, config) {\n        return new Promise(function(resolve, reject) {\n          var req = new that.XMLHttpRequest();\n          var queryParams = '';\n          if (config.queryParams) {\n            queryParams = '?' + _getUriEncodedParams(config.queryParams);\n          }\n          req.open('GET', that.apiBase + path + queryParams);\n          _addHeaders(config, req);\n          _addCompletionListeners(resolve, reject, req);\n          req.send();\n        });\n      };\n\n      /**\n       * Makes a GET request to Engage Auth.\n       *\n       * @param {string} path - Relative path to append to apiUrl.\n       * @param {Object} config - Object describing different properties of the request.\n       * @returns {Promise} Promise that represents status of the request. Resolves if server responds with 200 status code, and is rejected otherwise.\n       */\n      this.httpPost = function(path, config) {\n        return new Promise(function(resolve, reject) {\n          var req = new that.XMLHttpRequest();\n          var queryParams = '';\n          if (config.queryParams) {\n            queryParams = '?' + _getUriEncodedParams(config.queryParams);\n          }\n          req.open('POST', that.apiBase + path + queryParams);\n          _addHeaders(config, req);\n          _addCompletionListeners(resolve, reject, req);\n          req.send(_getUriEncodedBody(config));\n        });\n      };\n\n      /**\n       * Utility method used to check if an argument is actually an object.\n       *\n       * @param {*} obj\n       */\n      function _isObj(obj) {\n        return typeof obj === 'object' && obj !== null;\n      }\n\n      /**\n       * Adds headers to XMLHttpRequest based on configuration object.\n       *\n       * @param {Object} config - Config object passed to HttpService methods.\n       * @param {XMLHttpRequest} req - Instance of XMLHttpRequest that needs to be configured.\n       */\n      function _addHeaders(config, req) {\n        if (!_isObj(config)) {\n          return;\n        }\n\n        var headers = config.headers;\n\n        if (!_isObj(headers)) {\n          return;\n        }\n\n        for (var key in headers) {\n          req.setRequestHeader(key, headers[key]);\n        }\n      }\n\n      /**\n       * Configures an XMLHttpRequest object to properly resolve/reject a promise, depending on the outcome of the request.\n       *\n       * @param {Function} resolve - Resolve callback function from a promise. Invoked if the request completed successfully.\n       * @param {Function} reject - Reject callback function from a promise. Invoked if the request failed.\n       * @param {XMLHttpRequest} req - Instance of XMLHttpRequest that will be configured.\n       */\n      function _addCompletionListeners(resolve, reject, req) {\n        req.addEventListener('error', function(e) {\n          reject(e);\n        });\n        req.addEventListener('timeout', function() {\n          reject(new Error('request timeout'));\n        });\n        req.addEventListener('load', function() {\n          if (this.status !== 200) {\n            reject({\n              status: this.status,\n              response: this.responseText,\n            });\n          } else {\n            resolve({\n              status: this.status,\n              response: this.responseText,\n            });\n          }\n        });\n      }\n\n      /**\n       * Takes a config object and serializes/URI encodes the contents of the body property. If the \"Content-Type\" header is set\n       * to \"application/json\", it encodes the payload as JSON. Otherwise, we assume that the payload should be x-www-form-urlencoded.\n       */\n      function _getUriEncodedBody(config) {\n        var contentType =\n          config && config.headers && config.headers['Content-Type'];\n        var body = (config && config.body) || '';\n\n        if (contentType === 'application/json') {\n          body = JSON.stringify(body);\n        } else {\n          if (_isObj(body)) {\n            body = _getUriEncodedParams(body);\n          }\n        }\n\n        return body;\n      }\n\n      function _getUriEncodedParams(params) {\n        if (!_isObj(params)) {\n          return;\n        }\n\n        return Object.keys(params)\n          .map(function(key) {\n            return (\n              encodeURIComponent(key) + '=' + encodeURIComponent(params[key])\n            );\n          })\n          .join('&');\n      }\n    }\n\n    function NewCallUtils(instance, data) {\n      this.instance = instance;\n      this.data = data;\n\n      var that = this;\n\n      this.setupAddSessionCallback = function() {\n        var sessionUii = utils.getText(data.ui_notification, 'uii'),\n          sessionId = utils.getText(data.ui_notification, 'session_id'),\n          call = UIModel.getInstance().currentCall;\n\n        if (call.uii === sessionUii) {\n          // we already have a new call packet for this session\n          _delayedAddSessionCallback(that.instance, that.data);\n        } else {\n          // uii mismatch, but call has been dispositioned\n          UIModel.getInstance().pendingNewCallSessions[sessionUii] =\n            UIModel.getInstance().pendingNewCallSessions[sessionUii] || {};\n          UIModel.getInstance().pendingNewCallSessions[sessionUii][\n            sessionId\n          ] = that;\n        }\n      };\n\n      this.processSessionsForCall = function() {\n        var uii = UIModel.getInstance().currentCall.uii,\n          delayedSessions = UIModel.getInstance().pendingNewCallSessions[uii];\n\n        if (delayedSessions && Object.keys(delayedSessions).length > 0) {\n          // we have delayed sessions to process\n          for (var sessionId in delayedSessions) {\n            if (delayedSessions.hasOwnProperty(sessionId)) {\n              var session = delayedSessions[sessionId];\n              _delayedAddSessionCallback(session.instance, session.data);\n            } else {\n              console.error(\n                'error processing sessions for uii: ' +\n                  uii +\n                  ' session: ' +\n                  sessionId,\n              );\n            }\n          }\n\n          delete UIModel.getInstance().pendingNewCallSessions[uii];\n        }\n      };\n\n      function _delayedAddSessionCallback(instance, data) {\n        var addSessionNotif = new AddSessionNotification();\n        var addResponse = addSessionNotif.processResponse(data);\n        utils.fireCallback(instance, CALLBACK_TYPES.ADD_SESSION, addResponse);\n      }\n    }\n\n    var utils = {\n      logMessage: function(logLevel, message, data) {\n        var instance = UIModel.getInstance().libraryInstance;\n        if (instance._db) {\n          try {\n            var transaction = instance._db.transaction(['logger'], 'readwrite');\n            var store = transaction.objectStore('logger');\n\n            var record = {\n              logLevel: logLevel,\n              message: message,\n              dts: new Date(),\n              data: data,\n            };\n\n            var request = store.add(record);\n          } catch (err) {\n            console.error('Error adding log message: ' + err);\n          }\n        } else {\n          //console.log(\"AgentLibrary: indexedDb not available\");\n        }\n      },\n\n      sendMessage: function(instance, msg) {\n        var msgObj = JSON.parse(msg);\n\n        if (instance.socket && instance.socket.readyState === 1) {\n          // add message id to request map, then send message\n          var type = msgObj.ui_request['@type'];\n          var destination = msgObj.ui_request['@destination'];\n          var message =\n            'Sending ' + type + ' request message to ' + destination;\n          instance._requests.push({\n            id: msgObj.ui_request['@message_id'],\n            type: msgObj.ui_request['@type'],\n            msg: msgObj.ui_request,\n          });\n\n          // keep rolling window of latest 1000 requests\n          if (instance._requests.length > 1000) {\n            instance._requests.shift();\n          }\n\n          instance.socket.send(msg);\n\n          if (type === 'STATS') {\n            utils.logMessage(LOG_LEVELS.STATS, message, msgObj);\n          } else {\n            utils.logMessage(LOG_LEVELS.INFO, message, msgObj);\n          }\n        } else {\n          // add message to queue if socket is not open.\n          instance._queuedMsgs.push({ dts: new Date(), msg: msg });\n        }\n      },\n\n      processResponse: function(instance, response) {\n        var type = response.ui_response['@type'];\n        var messageId = response.ui_response['@message_id'];\n        var dest =\n          messageId === '' || !messageId ? 'IS' : messageId.slice(0, 2);\n        var message =\n          'Received ' + type.toUpperCase() + ' response message from ' + dest;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n\n        // Send generic on message response\n        utils.fireCallback(instance, CALLBACK_TYPES.ON_MESSAGE, response);\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.AGENT_STATE:\n            if (UIModel.getInstance().agentStateRequest === null) {\n              UIModel.getInstance().agentStateRequest = new AgentStateRequest(\n                response.ui_response.current_state['#text'],\n                response.ui_response.agent_aux_state['#text'],\n              );\n            }\n            var stateChangeResponse = UIModel.getInstance().agentStateRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.AGENT_STATE,\n              stateChangeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.BARGE_IN:\n            var resp = UIModel.getInstance().bargeInRequest.processResponse(\n              response,\n            );\n            var responseTo = response.ui_response['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            if (request) {\n              // found corresponding request, fire registered callback for type\n              var audioState = request.msg.audio_state['#text'];\n              if (audioState === 'MUTE') {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.SILENT_MONITOR,\n                  resp,\n                );\n              } else if (audioState === 'COACHING') {\n                utils.fireCallback(instance, CALLBACK_TYPES.COACH_CALL, resp);\n              } else {\n                utils.fireCallback(instance, CALLBACK_TYPES.BARGE_IN, resp);\n              }\n            } else {\n              // no corresponding request, just fire FULL audio type BARGE-IN callback\n              utils.fireCallback(instance, CALLBACK_TYPES.BARGE_IN, resp);\n            }\n            break;\n          case MESSAGE_TYPES.CAMPAIGN_DISPOSITIONS:\n            var campaignDispsResposne = UIModel.getInstance().campaignDispositionsRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CAMPAIGN_DISPOSITIONS,\n              campaignDispsResposne,\n            );\n            break;\n          case MESSAGE_TYPES.CALL_NOTES:\n            var callNotes = UIModel.getInstance().callNotesRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.CALL_NOTES, callNotes);\n            break;\n          case MESSAGE_TYPES.CALLBACK_PENDING:\n            var pendingCallbacks = UIModel.getInstance().callbacksPendingRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CALLBACK_PENDING,\n              pendingCallbacks,\n            );\n            break;\n          case MESSAGE_TYPES.HOLD:\n            var holdRequest;\n            if (UIModel.getInstance().holdRequest === null) {\n              holdRequest = new HoldRequest();\n            } else {\n              holdRequest = UIModel.getInstance().holdRequest;\n            }\n            var hold = holdRequest.processResponse(response);\n            utils.fireCallback(instance, CALLBACK_TYPES.HOLD, hold);\n            break;\n          case MESSAGE_TYPES.LEAD_HISTORY:\n            var history = UIModel.getInstance().leadHistoryRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_HISTORY, history);\n            break;\n          case MESSAGE_TYPES.LEAD_INSERT:\n            var insert = UIModel.getInstance().leadInsertRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_INSERT, insert);\n            break;\n          case MESSAGE_TYPES.LEAD_UPDATE:\n            var update = UIModel.getInstance().leadUpdateRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_UPDATE, update);\n            break;\n          case MESSAGE_TYPES.LOGIN_PHASE_1:\n            var loginPhase1Response = UIModel.getInstance().loginPhase1Request.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOGIN_PHASE_1,\n              loginPhase1Response,\n            );\n            break;\n          case MESSAGE_TYPES.LOGIN:\n            var loginResponse = UIModel.getInstance().loginRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LOGIN, loginResponse);\n            break;\n          case MESSAGE_TYPES.OFFHOOK_INIT:\n            var offhook = new OffhookInitRequest();\n            var initResponse = offhook.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.OFFHOOK_INIT,\n              initResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PAUSE_RECORD:\n            var pauseRequest;\n            if (UIModel.getInstance().pauseRecordRequest === null) {\n              pauseRequest = new PauseRecordRequest();\n            } else {\n              pauseRequest = UIModel.getInstance().pauseRecordRequest;\n            }\n            var pauseRec = pauseRequest.processResponse(response);\n            utils.fireCallback(instance, CALLBACK_TYPES.PAUSE_RECORD, pauseRec);\n            break;\n          case MESSAGE_TYPES.RECORD:\n            var record = UIModel.getInstance().recordRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.RECORD, record);\n            break;\n          case MESSAGE_TYPES.REQUEUE:\n            var requeue = UIModel.getInstance().requeueRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.REQUEUE, requeue);\n            break;\n          case MESSAGE_TYPES.SUPERVISOR_LIST:\n            var supervisorList = UIModel.getInstance().supervisorListRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.SUPERVISOR_LIST,\n              supervisorList,\n            );\n            break;\n          case MESSAGE_TYPES.SCRIPT_CONFIG:\n            var script = UIModel.getInstance().scriptConfigRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.SCRIPT_CONFIG, script);\n            break;\n          case MESSAGE_TYPES.XFER_COLD:\n            var coldXfer = UIModel.getInstance().coldXferRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.XFER_COLD, coldXfer);\n            break;\n          case MESSAGE_TYPES.XFER_WARM:\n            var warmXfer = UIModel.getInstance().warmXferRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.XFER_WARM, warmXfer);\n            break;\n          case MESSAGE_TYPES.XFER_WARM_CANCEL:\n            var warmXferCancel = UIModel.getInstance().warmXferCancelRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.XFER_WARM_CANCEL,\n              warmXferCancel,\n            );\n            break;\n          case MESSAGE_TYPES.ACK:\n            var ack = UIModel.getInstance().ackRequest.processResponse(\n              response,\n            );\n            var responseTo = response.ui_response['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            ack.uii = request.msg.uii && request.msg.uii['#text'];\n            utils.fireCallback(instance, CALLBACK_TYPES.ACK, ack);\n            break;\n          case MESSAGE_TYPES.CHAT_LIST:\n            var chatList = new ChatListRequest();\n            var chatListResponse = chatList.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_LIST,\n              chatListResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_STATE:\n            var chatState = new ChatStateRequest();\n            var chatStateResponse = chatState.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_STATE,\n              chatStateResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_TRANSFER_LIST:\n            var agentList = new DirectAgentTransferList();\n            var agentListResponse = agentList.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n              agentListResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_TRANSFER:\n            var agentXfer = new DirectAgentTransfer();\n            var agentXferResponse = agentXfer.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER,\n              agentXferResponse,\n            );\n            break;\n        }\n      },\n\n      processNotification: function(instance, data) {\n        var type = data.ui_notification['@type'];\n        var messageId = data.ui_notification['@message_id'];\n        var dest = messageId === '' ? 'IS' : messageId.slice(0, 2);\n        var message =\n          'Received ' +\n          type.toUpperCase() +\n          ' notification message from ' +\n          dest;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, data);\n\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.ADD_SESSION:\n            new NewCallUtils(instance, data).setupAddSessionCallback();\n            break;\n          case MESSAGE_TYPES.DIAL_GROUP_CHANGE:\n            var dgChangeNotif = new DialGroupChangeNotification();\n            var changeResponse = dgChangeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIAL_GROUP_CHANGE,\n              changeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIAL_GROUP_CHANGE_PENDING:\n            var dgChangePendNotif = new DialGroupChangePendingNotification();\n            var pendResponse = dgChangePendNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIAL_GROUP_CHANGE_PENDING,\n              pendResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DROP_SESSION:\n            var dropSesNotif = new DropSessionNotification(instance);\n            var dropSesResponse = dropSesNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DROP_SESSION,\n              dropSesResponse,\n            );\n            break;\n          case MESSAGE_TYPES.EARLY_UII:\n            var earlyUiiNotif = new EarlyUiiNotification(instance);\n            var earlyUiiResponse = earlyUiiNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.EARLY_UII,\n              earlyUiiResponse,\n            );\n            break;\n          case MESSAGE_TYPES.END_CALL:\n            var endCallNotif = new EndCallNotification(instance);\n            var endCallResponse = endCallNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.END_CALL,\n              endCallResponse,\n            );\n            break;\n          case MESSAGE_TYPES.GATES_CHANGE:\n            var gateChangeNotif = new GatesChangeNotification();\n            var gateChangeResponse = gateChangeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.GATES_CHANGE,\n              gateChangeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.GENERIC:\n            var genericNotif = new GenericNotification();\n            var generic = genericNotif.processResponse(data);\n            var responseTo = data.ui_notification['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            if (request) {\n              // found corresponding request, fire registered callback for type\n              var type = request.type;\n              var callbackFnName = utils.findCallbackBasedOnMessageType(type);\n\n              if (callbackFnName) {\n                if (type === MESSAGE_TYPES.CALLBACK_CANCEL) {\n                  generic.leadId = request.msg.lead_id['#text'];\n                }\n                utils.fireCallback(instance, callbackFnName, generic);\n              } else {\n                // no registered callback, fallback to generic notification\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.GENERIC_NOTIFICATION,\n                  generic,\n                );\n              }\n            } else {\n              if (generic.messageCode === '001') {\n                // caller hangup, stop pinging call\n                if (UIModel.getInstance().pingIntervalId) {\n                  clearInterval(UIModel.getInstance().pingIntervalId);\n                }\n              }\n\n              // no corresponding request, just fire generic notification callback\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.GENERIC_NOTIFICATION,\n                generic,\n              );\n            }\n            break;\n          case MESSAGE_TYPES.NEW_CALL:\n            var newCallNotif = new NewCallNotification();\n            var newCallResponse = newCallNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.NEW_CALL,\n              newCallResponse,\n            );\n            new NewCallUtils(instance, data).processSessionsForCall();\n\n            break;\n          case MESSAGE_TYPES.OFFHOOK_TERM:\n            if (UIModel.getInstance().offhookTermRequest === null) {\n              // offhook term initiated by IQ\n              UIModel.getInstance().offhookTermRequest = new OffhookTermRequest();\n            }\n            var termResponse = UIModel.getInstance().offhookTermRequest.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.OFFHOOK_TERM,\n              termResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PREVIEW_LEAD_STATE:\n            var leadStateNotif = new PreviewLeadStateNotification();\n            var leadStateResponse = leadStateNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PREVIEW_LEAD_STATE,\n              leadStateResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PENDING_DISP:\n            var pendingDispNotif = new PendingDispNotification();\n            var pendingDispResponse = pendingDispNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PENDING_DISP,\n              pendingDispResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PENDING_CHAT_DISP:\n            var pendingChatDispNotif = new PendingChatDispNotification();\n            var pendingChatDispResponse = pendingChatDispNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PENDING_CHAT_DISP,\n              pendingChatDispResponse,\n            );\n            break;\n          case MESSAGE_TYPES.REVERSE_MATCH:\n            var reverseMatchNotif = new ReverseMatchNotification();\n            var reverseMatchResponse = reverseMatchNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.REVERSE_MATCH,\n              reverseMatchResponse,\n            );\n            break;\n          case MESSAGE_TYPES.TCPA_SAFE_LEAD_STATE:\n            var leadStateTcpaNotif = new TcpaSafeLeadStateNotification();\n            var leadStateTcpaResponse = leadStateTcpaNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.TCPA_SAFE_LEAD_STATE,\n              leadStateTcpaResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_ACTIVE:\n            var activeNotif = new ChatActiveNotification();\n            var activeResponse = activeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ACTIVE,\n              activeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_INACTIVE:\n            var inactiveNotif = new ChatInactiveNotification();\n            var inactiveResponse = inactiveNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_INACTIVE,\n              inactiveResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_CLIENT_RECONNECT:\n            var reconnectNotif = new ChatClientReconnectNotification();\n            var reconnectResponse = reconnectNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_CLIENT_RECONNECT,\n              reconnectResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_PRESENTED:\n            var presentedNotif = new ChatPresentedNotification();\n            var presentedResponse = presentedNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_PRESENTED,\n              presentedResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_TYPING:\n            var typingNotif = new ChatTypingNotification();\n            var typingResponse = typingNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_TYPING,\n              typingResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_NEW:\n            var newChatNotif = new NewChatNotification();\n            var newChatResponse = newChatNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_NEW,\n              newChatResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_MESSAGE:\n            var chatMessage = new ChatMessageRequest();\n            var chatMessageResponse = chatMessage.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_MESSAGE,\n              chatMessageResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_CANCELLED:\n            var chatCancelled = new ChatCancelledNotification();\n            var chatCancelledResponse = chatCancelled.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_CANCELLED,\n              chatCancelledResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_ADD_SESSION:\n            var addChatSession = new AddChatSessionNotification();\n            var addChatSessionResponse = addChatSession.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ADD_SESSION,\n              addChatSessionResponse,\n            );\n            break;\n          case MESSAGE_TYPES.STOP_MONITOR_CHAT:\n            var stopChatMonitor = new StopMonitorChatRequest();\n            var stopChatMonitorResponse = stopChatMonitor.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_STOP_MONITOR,\n              stopChatMonitorResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_ROUTE:\n            var directAgentTransfer = new DirectAgentTransferNotification();\n            var directAgentTransferResponse = directAgentTransfer.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_NOTIF,\n              directAgentTransferResponse,\n            );\n            break;\n          case MESSAGE_TYPES.AGENT_DEBUG_EMAIL:\n            var emailNotif = new AdminDebugEmailNotification();\n            var emailNotifResp = emailNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.AGENT_DEBUG_EMAIL_NOTIF,\n              emailNotifResp,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_LOAD_MEDIA:\n            var loadMediaNotif = new LoadMediaNotification();\n            var loadMediaResp = loadMediaNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_LOAD_MEDIA_NOTIF,\n              loadMediaResp,\n            );\n            break;\n          case MESSAGE_TYPES.LOGOUT:\n            var logoutNotification = new LogoutRequest();\n            var logoutNotifResponse = logoutNotification.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOGOUT,\n              logoutNotifResponse,\n            );\n            var model = UIModel.getInstance();\n\n            //remove agent_id and hash_code from local storage\n            model.dataStore.remove('agent_id');\n            model.dataStore.remove('hash_code');\n\n            // set login flag here in case notification initiated externally\n            // and not in response to agent logout request\n            model.agentSettings.isLoggedIn = false;\n\n            instance.closeSocket();\n            break;\n          case MESSAGE_TYPES.MONITOR_CHAT:\n            //TODO: do this\n\n            break;\n          case MESSAGE_TYPES.LEAVE_CHAT:\n            //TODO: do this\n\n            break;\n        }\n      },\n\n      processDialerResponse: function(instance, response) {\n        var type = response.dialer_request['@type'];\n        var messageId = response.dialer_request['@message_id'];\n        var dest = messageId === '' ? 'IS' : messageId.slice(0, 2);\n        var message =\n          'Received ' +\n          type.toUpperCase() +\n          ' dialer response message from ' +\n          dest;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n\n        // Send generic on message response\n        utils.fireCallback(instance, CALLBACK_TYPES.ON_MESSAGE, response);\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.PREVIEW_DIAL_ID:\n            var pdRequest = new PreviewDialRequest();\n            var dialResponse = pdRequest.processResponse(response);\n            if (dialResponse.action.toUpperCase() === 'SEARCH') {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.LEAD_SEARCH,\n                dialResponse,\n              );\n            } else {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.PREVIEW_FETCH,\n                dialResponse,\n              );\n            }\n            break;\n          case MESSAGE_TYPES.TCPA_SAFE_ID:\n            var tcpaRequest = new TcpaSafeRequest();\n            var tcpaResponse = tcpaRequest.processResponse(response);\n            if (tcpaResponse.action.toUpperCase() === 'SEARCH') {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.SAFE_MODE_SEARCH,\n                tcpaResponse,\n              );\n            } else {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.SAFE_MODE_FETCH,\n                tcpaResponse,\n              );\n            }\n            break;\n        }\n      },\n\n      processRequest: function(instance, message) {\n        var type = message.ui_request['@type'];\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.CHAT_SEND:\n            var chatSendRequest = new ChatSendRequest();\n            var chatSendResponse = chatSendRequest.processResponse(message);\n            utils.fireCallback(instance, CALLBACK_TYPES.CHAT, chatSendResponse);\n            break;\n          case MESSAGE_TYPES.CHAT_ROOM_STATE:\n            var chatRoomStateRequest = new ChatRoomStateRequest();\n            var chatRoomStateResponse = chatRoomStateRequest.processResponse(\n              message,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ROOM_STATE,\n              chatRoomStateResponse,\n            );\n            break;\n        }\n      },\n\n      processStats: function(instance, data) {\n        var type = data.ui_stats['@type'];\n        var message =\n          'Received ' + type.toUpperCase() + ' response message from IS';\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.STATS_AGENT:\n            var agentStats = UIModel.getInstance().agentStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_AGENT,\n              agentStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_AGENT_DAILY:\n            var agentDailyStats = UIModel.getInstance().agentDailyStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_AGENT_DAILY,\n              agentDailyStats,\n            );\n\n            // start daily stats interval timer, request update every second\n            if (UIModel.getInstance().agentDailyIntervalId === null) {\n              UIModel.getInstance().agentDailyIntervalId = setInterval(\n                utils.onAgentDailyStats,\n                1000,\n              );\n            }\n\n            break;\n          case MESSAGE_TYPES.STATS_CAMPAIGN:\n            var campaignStats = UIModel.getInstance().campaignStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_CAMPAIGN,\n              campaignStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_QUEUE:\n            var queueStats = UIModel.getInstance().queueStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_QUEUE,\n              queueStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_CHAT:\n            var chatStats = UIModel.getInstance().chatQueueStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_CHAT_QUEUE,\n              chatStats,\n            );\n            break;\n        }\n      },\n\n      /*\n       * Take the xml marked JSON, group and item property names and reformat to\n       * simple javascript object without the xml markers.\n       * Will work recursively down the tree on nested objects and arrays.\n       *\n       * example of acceptable response tree (groupProp = requeue_gates, itemProp = gate_group):\n       *   \"requeue_gates\": {\n       *       \"gate_group\": [\n       *           {\n       *               \"@gate_group_id\": \"4\",\n       *               \"@group_name\": \"Test Gate Group\",\n       *               \"gates\": {\n       *                   \"gate\": [\n       *                       {\n       *                           \"@gate_desc\": \"\",\n       *                           \"@gate_id\": \"10951\",\n       *                           \"@gate_name\": \"CD ACD Queue\"\n       *                       },\n       *                       {\n       *                           \"@gate_desc\": \"\",\n       *                           \"@gate_id\": \"11036\",\n       *                           \"@gate_name\": \"Xerox Test Gate\"\n       *                       }\n       *                   ]\n       *               },\n       *               \"skills\": {\n       *                   \"skill\": [\n       *                       {\n       *                           \"@skill_desc\": \"\",\n       *                           \"@skill_id\": \"322\",\n       *                           \"@skill_name\": \"English\"\n       *                       },\n       *                       {\n       *                           \"@skill_desc\": \"\",\n       *                           \"@skill_id\": \"323\",\n       *                           \"@skill_name\": \"Spanish\"\n       *                       }\n       *                   ]\n       *               }\n       *           },\n       *           {\n       *               \"@gate_group_id\": \"14292\",\n       *               \"@group_name\": \"New Test Group\",\n       *               \"gates\": {\n       *                   \"gate\": {\n       *                       \"@gate_desc\": \"\",\n       *                       \"@gate_id\": \"15535\",\n       *                       \"@gate_name\": \"New Test Gate\"\n       *                   }\n       *               },\n       *               \"skills\": {\n       *                   \"skill\": {\n       *                       \"@skill_desc\": \"\",\n       *                       \"@skill_id\": \"1658\",\n       *                       \"@skill_name\": \"new skill\"\n       *                   }\n       *               }\n       *           }\n       *       ]\n       *   }\n       *\n       *   OR\n       *\n       *   \"outdial_dispositions\": {\n       *       \"@type\": \"GATE\",\n       *       \"disposition\": [\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          },\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          }\n       *      ]\n       *   }\n       *\n       *   OR\n       *\n       *   \"outdial_dispositions\": {\n       *       \"@type\": \"GATE\",\n       *       \"disposition\": {\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          }\n       *      }\n       *   }\n       */\n\n      processResponseCollection: function(\n        response,\n        groupProp,\n        itemProp,\n        textName,\n      ) {\n        textName = textName || 'text';\n\n        if (\n          response[groupProp] &&\n          typeof response[groupProp][itemProp] !== 'undefined'\n        ) {\n          var itemsRaw = response[groupProp][itemProp];\n          return this._processItems(itemsRaw, textName);\n        } else {\n          return [];\n        }\n      },\n\n      escapeSoftphoneUsername: function(str) {\n        return str && str.replace(/[@]/g, '_at_');\n      },\n\n      _processItems: function(itemsRaw, textName) {\n        var result = [];\n        if (typeof itemsRaw === 'undefined' || itemsRaw === null) {\n          return result;\n        }\n\n        if (!Array.isArray(itemsRaw)) {\n          itemsRaw = [itemsRaw];\n        }\n\n        for (var i = 0; i < itemsRaw.length; i++) {\n          result.push(this._processItem(itemsRaw[i], textName));\n        }\n\n        return result;\n      },\n\n      _processItem: function(itemRaw, textName) {\n        /*\n         * Be sure that the item we are processing is not a #text node only, where the \"texName\" is also \"text\". If this\n         * is the case, it means there's a default value that needs to get converted and isn't going to be mapped to a custom\n         * field.  Therefore, we treat it as just a single value, not an object.\n         */\n        if (\n          textName === 'text' &&\n          Object.keys(itemRaw).length === 1 &&\n          itemRaw['#text'] != null\n        ) {\n          return this._tryConvertValueToBoolean(itemRaw['#text']);\n        }\n\n        // Convert the raw item to a new item, with keys and values processed below\n        //\n        var item = {};\n        for (var key in itemRaw) {\n          var formattedKey = this._convertToFormattedKey(key, textName);\n\n          var value = itemRaw[key];\n\n          // If we aren't an object, set the value and continue to next key\n          if (typeof value !== 'object') {\n            item[formattedKey] = this._tryConvertValueToBoolean(value);\n            continue;\n          }\n\n          if (\n            (Array.isArray(value) && value.length === 0) ||\n            Object.keys(value).length === 0\n          ) {\n            // Empty property\n            item[formattedKey] = '';\n          } else if (Array.isArray(value) || Object.keys(value).length > 1) {\n            // Array or object with more than one key\n            formattedKey = this._convertKeyForCollection(formattedKey);\n            item[formattedKey] = this._processItems(value, textName);\n          } else if (\n            Object.keys(value).length === 1 &&\n            value['#text'] != null\n          ) {\n            // One property of type \"#text\"\n            item[formattedKey] = value['#text'];\n          } else {\n            // One property not with key \"#text\"\n            item[formattedKey] = this._processItems(\n              value[Object.keys(value)[0]],\n              'text',\n            );\n          }\n        }\n\n        return item;\n      },\n\n      _convertToFormattedKey: function(key, textName) {\n        var formattedKey;\n        if (key.match(/^#/)) {\n          // dealing with text property\n          formattedKey = textName;\n        } else {\n          // dealing with attribute\n          formattedKey = key.replace(/@/, ''); // remove leading '@'\n          formattedKey = formattedKey.replace(/_([a-z])/g, function(g) {\n            return g[1].toUpperCase();\n          }); // convert to camelCase\n        }\n\n        return formattedKey;\n      },\n\n      _convertKeyForCollection: function(formattedKey) {\n        if (formattedKey.substr(formattedKey.length - 1) !== 's') {\n          return formattedKey + 's';\n        }\n\n        return formattedKey;\n      },\n\n      _tryConvertValueToBoolean: function(value) {\n        if (value === null) {\n          return null;\n        }\n\n        // can't convert 0 | 1 to boolean since some are counters\n        if (value.toUpperCase() === 'TRUE') {\n          return true;\n        } else if (value.toUpperCase() === 'FALSE') {\n          return false;\n        } else {\n          return value;\n        }\n      },\n\n      fireCallback: function(instance, type, response) {\n        response = response || '';\n        if (\n          typeof type !== 'undefined' &&\n          typeof instance.callbacks[type] === 'function'\n        ) {\n          instance.callbacks[type].call(instance, response);\n        }\n      },\n\n      setCallback: function(instance, type, callback) {\n        if (typeof type !== 'undefined' && typeof callback !== 'undefined') {\n          instance.callbacks[type] = callback;\n        }\n      },\n\n      getMessageId: function() {\n        function s4() {\n          return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n        }\n\n        return (\n          s4() +\n          s4() +\n          '-' +\n          s4() +\n          '-' +\n          s4() +\n          '-' +\n          s4() +\n          '-' +\n          s4() +\n          s4() +\n          s4()\n        );\n      },\n\n      // check whether the given array of ids exist in the given array of objects\n      // if not available, remove the id\n      // returns the clean list of acceptable ids\n      checkExistingIds: function(objArray, idArray, idProperty) {\n        var availIds = [];\n        var removeIds = [];\n\n        // get list of available ids\n        for (var o = 0; o < objArray.length; o++) {\n          availIds.push(parseInt(objArray[o][idProperty], 10));\n        }\n\n        // go through selected ids and mark unfound ones for removal\n        for (var i = 0; i < idArray.length; i++) {\n          if (availIds.indexOf(parseInt(idArray[i], 10)) === -1) {\n            // selected id not found in available list, mark for removal\n            removeIds.push(parseInt(idArray[i], 10));\n          }\n        }\n\n        // remove marked ids\n        for (var r = idArray.length - 1; r >= 0; r--) {\n          if (removeIds.indexOf(parseInt(idArray[r], 10)) > -1) {\n            // remove\n            idArray.splice(r, 1);\n          }\n        }\n\n        return idArray;\n      },\n\n      // find an object by given id in an array of objects\n      findObjById: function(objArray, id, propName) {\n        for (var o = 0; o < objArray.length; o++) {\n          var obj = objArray[o];\n          if (obj[propName] === id) {\n            return obj;\n          }\n        }\n\n        return null;\n      },\n\n      // check whether agent dialDest is either a 10-digit number or valid sip\n      validateDest: function(dialDest) {\n        var isValid = false;\n        var isNum = /^\\d+$/.test(dialDest);\n        if (isNum && dialDest.length === 10) {\n          // is a 10-digit number\n          isValid = true;\n        } else if (\n          dialDest.slice(0, 4).toLowerCase() === 'sip:' &&\n          dialDest.indexOf('@') !== -1\n        ) {\n          // has sip prefix and '@'\n          isValid = true;\n        }\n\n        return isValid;\n      },\n\n      // pass in MESSAGE_TYPE string (e.g. \"CANCEL-CALLBACK\"),\n      // return corresponding CALLBACK_TYPE function name string (e.g. \"callbackCancelResponse\")\n      findCallbackBasedOnMessageType: function(messageType) {\n        var callbackFnName = '';\n        for (var key in MESSAGE_TYPES) {\n          if (MESSAGE_TYPES[key] === messageType) {\n            callbackFnName = CALLBACK_TYPES[key];\n          }\n        }\n        return callbackFnName;\n      },\n\n      // add message, detail, and status values to the formattedResponse\n      // returned from each request processResponse method\n      buildDefaultResponse: function(response) {\n        var message = '';\n        var detail = '';\n        var status = '';\n        var msg = '';\n        var det = '';\n        var stat = '';\n\n        // add message and detail if present\n        if (response.ui_response) {\n          msg = response.ui_response.message;\n          det = response.ui_response.detail;\n          stat = response.ui_response.status;\n        } else if (response.ui_notification) {\n          msg = response.ui_notification.message;\n          det = response.ui_notification.detail;\n          stat = response.ui_notification.status;\n        }\n\n        if (msg) {\n          message = msg['#text'] || '';\n        }\n        if (det) {\n          detail = det['#text'] || '';\n        }\n        if (stat) {\n          status = stat['#text'] || '';\n        }\n\n        return {\n          message: message,\n          detail: detail,\n          status: status,\n        };\n      },\n\n      toString: function(val) {\n        if (val) {\n          return val.toString();\n        } else {\n          return '';\n        }\n      },\n\n      // safely check if property exists and return empty string\n      // instead of undefined if it doesn't exist\n      // convert \"TRUE\" | \"FALSE\" to boolean\n      getText: function(obj, prop) {\n        var o = obj[prop];\n        if (o && o['#text']) {\n          if (o['#text'].toUpperCase() === 'TRUE') {\n            return true;\n          } else if (o['#text'].toUpperCase() === 'FALSE') {\n            return false;\n          } else {\n            return o['#text'] || '';\n          }\n        } else {\n          return '';\n        }\n      },\n\n      // safely check if property exists and return empty string\n      // instead of undefined if it doesn't exist\n      // convert \"TRUE\" | \"FALSE\" to boolean\n      getAttribute: function(obj, prop) {\n        var o = obj[prop];\n        if (o && o[prop]) {\n          if (o[prop].toUpperCase() === 'TRUE') {\n            return true;\n          } else if (o[prop].toUpperCase() === 'FALSE') {\n            return false;\n          } else {\n            return o[prop] || '';\n          }\n        } else {\n          return '';\n        }\n      },\n\n      // Parses a string of key value pairs and returns an Array of KeyValue objects.\n      // @param str The string of keyvalue pairs to parse\n      // @param outerDelimiter The delimiter that separates each keyValue pair\n      // @param innerDelimiter The delimiter that separates each key from its value\n      parseKeyValuePairsFromString: function(\n        str,\n        outerDelimiter,\n        innerDelimiter,\n      ) {\n        if (!str) {\n          return [];\n        }\n\n        var arr = str.split(outerDelimiter).reduce(function(dict, pair) {\n          var keyValue = pair.split(innerDelimiter);\n          dict[keyValue[0]] = keyValue[1];\n          return dict;\n        }, {});\n\n        return arr;\n      },\n\n      // Finds a request by responseTo id\n      findRequestById: function(instance, id) {\n        var request = null;\n        for (var i = 0; i < instance._requests.length; i++) {\n          if (instance._requests[i].id === id) {\n            request = instance._requests[i];\n            break;\n          }\n        }\n        return request;\n      },\n\n      // called every 30 seconds letting intelliQueue know\n      // not to archive the call so dispositions and other call\n      // clean up actions can happen\n      sendPingCallMessage: function() {\n        UIModel.getInstance().pingCallRequest = new PingCallRequest();\n        var msg = UIModel.getInstance().pingCallRequest.formatJSON();\n        var msgObj = JSON.parse(msg);\n        var agentId = utils.getText(msgObj.ui_request, 'agent_id');\n        var uii = utils.getText(msgObj.ui_request, 'uii');\n        if (agentId === '' || uii === '') {\n          utils.logMessage(\n            LOG_LEVELS.WARN,\n            'PING-CALL message failed, agentId or UII is empty',\n            msgObj,\n          );\n        } else {\n          utils.sendMessage(UIModel.getInstance().libraryInstance, msg);\n        }\n      },\n\n      // called every 5 seconds to request stats from IntelliServices\n      sendStatsRequestMessage: function() {\n        UIModel.getInstance().statsRequest = new StatsRequest();\n        var msg = UIModel.getInstance().statsRequest.formatJSON();\n        utils.sendMessage(UIModel.getInstance().libraryInstance, msg);\n      },\n\n      // called every 20 seconds to ping IntelliSocket whent stats are disabled\n      sendPingRequestMessage: function() {\n        var msg = 'BEAT';\n        var instance = UIModel.getInstance().libraryInstance;\n        if (instance.socket && instance.socket.readyState === 1) {\n          instance.socket.send('BEAT');\n        }\n      },\n\n      // called every second\n      // if we have received agent daily stats\n      // start incrementing various data points since not all\n      // data is incremented when we want on the IntelliServices side\n      onAgentDailyStats: function() {\n        if (Object.keys(UIModel.getInstance().agentDailyStats).length !== 0) {\n          var agentSettings = UIModel.getInstance().agentSettings,\n            stats = UIModel.getInstance().agentDailyStats;\n\n          var curLoginTime = stats.totalLoginTime;\n          stats.totalLoginTime = Number(curLoginTime) + 1;\n\n          if (agentSettings.isOffhook) {\n            var curOffhookTime = stats.totalOffhookTime;\n            stats.totalOffhookTime = Number(curOffhookTime) + 1;\n          }\n\n          if (agentSettings.currentState == 'ENGAGED') {\n            var curTalkTime = stats.totalTalkTime;\n            stats.totalTalkTime = Number(curTalkTime) + 1;\n\n            var curCallTime = stats.currCallTime;\n            stats.currCallTime = Number(curCallTime) + 1;\n          }\n        }\n      },\n\n      // called in loginAgent if 'integrated' dial destination passed in\n      getDialDestination: function() {\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n        var dialDestType = model.applicationSettings.dialDestType;\n\n        var dialDest = '';\n\n        // default to the first server in the array\n        if (softphoneSettings.sipInfo.length > 0) {\n          var currentServer = softphoneSettings.sipInfo[0];\n          if (dialDestType === 'LEGACY_SOFTPHONE') {\n            dialDest =\n              'sip:' +\n              utils.escapeSoftphoneUsername(currentServer.username) +\n              '@' +\n              currentServer.domain;\n          } else if (dialDestType === 'RC_SOFTPHONE') {\n            dialDest =\n              utils.escapeSoftphoneUsername(currentServer.username) +\n              '@RC_SOFTPHONE';\n          }\n        }\n\n        return dialDest;\n      },\n\n      // get valid access token based on agentId and login hash code\n      refreshAccessToken: function() {\n        var model = UIModel.getInstance();\n        var baseUrl = model.authHost + model.baseAuthUri;\n        var errorMsg = 'Error in opening WebSocket on retrieving access token';\n        var params = {\n          queryParams: {\n            loginHashcode: model.connectionSettings.hashCode,\n            agentId: model.agentSettings.agentId,\n            platformId: model.authenticateRequest.platformId,\n          },\n        };\n\n        new HttpService(baseUrl).httpPost('login/agent/hashcode', params).then(\n          function(response) {\n            try {\n              response = JSON.parse(response.response);\n              UIModel.getInstance().authenticateRequest.engageAccessToken =\n                response.accessToken;\n            } catch (err) {\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n            }\n          },\n          function(err) {\n            var errResponse = {\n              type: 'refreshAccessToken Error',\n              message: errorMsg,\n            };\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          },\n        );\n      },\n    };\n\n    // CONSTANTS\n\n    /*jshint esnext: true */\n    const LOG_LEVELS = {\n      DEBUG: 'debug',\n      STATS: 'stats',\n      INFO: 'info',\n      WARN: 'warn',\n      ERROR: 'error',\n    };\n\n    const AUTHENTICATE_TYPES = {\n      USERNAME_PASSWORD: 'USERNAME_PASSWORD',\n      RC_TOKEN: 'RC_TOKEN',\n      ENGAGE_TOKEN: 'ENGAGE_TOKEN',\n    };\n\n    // add all callback types to setCallback method description\n    const CALLBACK_TYPES = {\n      ACK: 'acknowledgeResponse',\n      ADD_SESSION: 'addSessionNotification',\n      AGENT_DEBUG_EMAIL_NOTIF: 'agentDebugEmailNotification',\n      AGENT_STATE: 'agentStateResponse',\n      AUTHENTICATE: 'authenticateResponse',\n      BARGE_IN: 'bargeInResponse',\n      CALLBACK_CANCEL: 'callbackCancelResponse',\n      CALLBACK_PENDING: 'callbacksPendingResponse',\n      CALL_NOTES: 'callNotesResponse',\n      CAMPAIGN_DISPOSITIONS: 'campaignDispositionsResponse',\n      CHAT: 'chatResponse', // internal chat\n      CHAT_ACTIVE: 'chatActiveNotification', // external chat\n      CHAT_ADD_SESSION: 'addChatSessionNotification', // external chat\n      CHAT_CANCELLED: 'chatCancelledNotification', // external chat\n      CHAT_CLIENT_RECONNECT: 'chatClientReconnectNotification',\n      CHAT_INACTIVE: 'chatInactiveNotification', // external chat\n      CHAT_LIST: 'chatListResponse', // external chat\n      CHAT_LOAD_MEDIA: 'chatLoadMediaResponse', // engage digital task\n      CHAT_MESSAGE: 'chatMessageNotification', // external chat\n      CHAT_NEW: 'chatNewNotification', // external chat\n      CHAT_PRESENTED: 'chatPresentedNotification', // external chat\n      CHAT_ROOM_STATE: 'chatRoomStateResponse',\n      CHAT_STATE: 'chatStateResponse', // external chat\n      CHAT_STOP_MONITOR: 'stopAgentChatMonitorNotification', // external chat\n      CHAT_TYPING: 'chatTypingNotification', // external chat\n      CLOSE_SOCKET: 'closeResponse',\n      COACH_CALL: 'coachResponse',\n      CONFIG: 'configureResponse',\n      DIAL_GROUP_CHANGE: 'dialGroupChangeNotification',\n      DIAL_GROUP_CHANGE_PENDING: 'dialGroupChangePendingNotification',\n      DIRECT_AGENT_TRANSFER: 'directAgentTransferResponse',\n      DIRECT_AGENT_TRANSFER_LIST: 'directAgentTransferListResponse',\n      DIRECT_AGENT_TRANSFER_NOTIF: 'directAgentTransferNotification',\n      DROP_SESSION: 'dropSessionNotification',\n      EARLY_UII: 'earlyUiiNotification',\n      END_CALL: 'endCallNotification',\n      GATES_CHANGE: 'gatesChangeNotification',\n      GENERIC_NOTIFICATION: 'genericNotification',\n      GENERIC_RESPONSE: 'genericResponse',\n      HOLD: 'holdResponse',\n      LEAD_HISTORY: 'leadHistoryResponse',\n      LEAD_INSERT: 'leadInsertResponse',\n      LEAD_SEARCH: 'leadSearchResponse',\n      LEAD_UPDATE: 'leadUpdateResponse',\n      LOGIN: 'loginResponse',\n      LOGIN_PHASE_1: 'loginPhase1Response',\n      LOGIN_MULTISOCKET: 'multiSocketResponse',\n      LOGOUT: 'logoutResponse',\n      LOG_CONSOLE_RESULTS: 'logConsoleResultsResponse',\n      LOG_RESULTS: 'logResultsResponse',\n      NEW_CALL: 'newCallNotification',\n      OFFHOOK_INIT: 'offhookInitResponse',\n      OFFHOOK_TERM: 'offhookTermNotification',\n      OPEN_SOCKET: 'openResponse',\n      PAUSE_RECORD: 'pauseRecordResponse',\n      PENDING_CHAT_DISP: 'pendingChatDispNotification',\n      PENDING_DISP: 'pendingDispNotification',\n      PREVIEW_FETCH: 'previewFetchResponse',\n      PREVIEW_LEAD_STATE: 'previewLeadStateNotification',\n      RECORD: 'recordResponse',\n      REQUEUE: 'requeueResponse',\n      REVERSE_MATCH: 'reverseMatchNotification',\n      SAFE_MODE_FETCH: 'safeModeFetchResponse',\n      SAFE_MODE_SEARCH: 'safeModeSearchResponse',\n      SCRIPT_CONFIG: 'scriptConfigResponse',\n      SILENT_MONITOR: 'monitorResponse',\n      STATS_AGENT: 'agentStats',\n      STATS_AGENT_DAILY: 'agentDailyStats',\n      STATS_CAMPAIGN: 'campaignStats',\n      STATS_CHAT_QUEUE: 'chatQueueStats',\n      STATS_QUEUE: 'queueStats',\n      SUPERVISOR_LIST: 'supervisorListResponse',\n      TCPA_SAFE_LEAD_STATE: 'tcpaSafeLeadStateNotification',\n      WEBRTC_INFO: 'webRtcInfoResponse',\n      XFER_COLD: 'coldXferResponse',\n      XFER_WARM: 'warmXferResponse',\n      SEARCH_DIR: 'searchDirectoryResponse',\n      EXTENSION_PRESENCE: 'extensionPresenceInfo',\n\n      // SOFTPHONE Callbacks\n      SIP_CONNECTED: 'sipConnectedNotification',\n      SIP_DIAL_DEST_CHANGED: 'sipDialDestChangedNotification',\n      SIP_ENDED: 'sipEndedNotification',\n      SIP_MUTE: 'sipMuteResponse',\n      SIP_REGISTERED: 'sipRegisteredNotification',\n      SIP_REGISTRATION_FAILED: 'sipRegistrationFailedNotification',\n      SIP_RINGING: 'sipRingingNotification',\n      SIP_SWITCH_REGISTRAR: 'sipSwitchRegistrarNotification',\n      SIP_UNMUTE: 'sipUnmuteResponse',\n      SIP_UNREGISTERED: 'sipUnregisteredNotification',\n    };\n\n    const MESSAGE_TYPES = {\n      ACK: 'ACK',\n      ADD_SESSION: 'ADD-SESSION',\n      AGENT_DEBUG_EMAIL: 'AGENT-DEBUG-EMAIL',\n      AGENT_STATE: 'AGENT-STATE',\n      BARGE_IN: 'BARGE-IN',\n      CALLBACK_CANCEL: 'CANCEL-CALLBACK',\n      CALLBACK_PENDING: 'PENDING-CALLBACKS',\n      CALL_NOTES: 'CALL-NOTES',\n      CAMPAIGN_DISPOSITIONS: 'CAMPAIGN-DISPOSITIONS',\n      CHAT_ACTIVE: 'CHAT-ACTIVE', // external chat\n      CHAT_ADD_SESSION: 'ADD-CHAT-SESSION', // external chat\n      CHAT_AGENT_END: 'CHAT-END', // external chat\n      CHAT_ALIAS: 'CHAT-ALIAS', // internal chat\n      CHAT_CANCELLED: 'CHAT-CANCELLED', // external chat\n      CHAT_CLIENT_RECONNECT: 'CHAT-CLIENT-RECONNECT', // external chat\n      CHAT_DISPOSITION: 'CHAT-DISPOSITION', // external chat\n      CHAT_INACTIVE: 'CHAT-INACTIVE', // external chat\n      CHAT_LIST: 'CHAT-LIST', // external chat\n      CHAT_MANUAL_SMS: 'MANUAL-SMS', // external chat\n      CHAT_MESSAGE: 'CHAT-MESSAGE', // external chat\n      CHAT_NEW: 'NEW-CHAT', // external chat\n      CHAT_PRESENTED: 'CHAT-PRESENTED', // external chat\n      CHAT_PRESENTED_RESPONSE: 'CHAT-PRESENTED-RESPONSE', // external chat\n      CHAT_REQUEUE: 'CHAT-REQUEUE', // external chat\n      CHAT_ROOM: 'CHAT-ROOM', // internal chat\n      CHAT_ROOM_STATE: 'CHAT-ROOM-STATE', // internal chat\n      CHAT_SEND: 'CHAT', // internal chat\n      CHAT_STATE: 'CHAT-STATE', // external chat\n      CHAT_TYPING: 'CHAT-TYPING', // external chat\n      CHAT_LOAD_MEDIA: 'LOAD-MEDIA', // engage digital task\n      DIAL_GROUP_CHANGE: 'DIAL_GROUP_CHANGE',\n      DIAL_GROUP_CHANGE_PENDING: 'DIAL_GROUP_CHANGE_PENDING',\n      DIRECT_AGENT_ROUTE: 'DIRECT-AGENT-ROUTE',\n      DIRECT_AGENT_TRANSFER: 'DIRECT-AGENT-TRANSFER',\n      DIRECT_AGENT_TRANSFER_LIST: 'DIRECT-AGENT-TRANSFER-LIST',\n      DROP_SESSION: 'DROP-SESSION',\n      EARLY_UII: 'EARLY_UII',\n      END_CALL: 'END-CALL',\n      GATES_CHANGE: 'GATES_CHANGE',\n      GENERIC: 'GENERIC',\n      HANGUP: 'HANGUP',\n      HOLD: 'HOLD',\n      INBOUND_DISPOSITION: 'INBOUND-DISPOSITION',\n      LEAD_HISTORY: 'LEAD-HISTORY',\n      LEAD_INSERT: 'LEAD-INSERT',\n      LEAD_UPDATE: 'LEAD-UPDATE',\n      LEAVE_CHAT: 'CHAT-DROP-SESSION', // external chat\n      LOGIN: 'LOGIN',\n      LOGIN_PHASE_1: 'LOGIN-PHASE-1',\n      LOGIN_MULTISOCKET: 'MULTISOCKET',\n      LOGOUT: 'LOGOUT',\n      MONITOR_CHAT: 'CHAT-MONITOR', // external chat\n      NEW_CALL: 'NEW-CALL',\n      OFFHOOK_INIT: 'OFF-HOOK-INIT',\n      OFFHOOK_TERM: 'OFF-HOOK-TERM',\n      ONE_TO_ONE_OUTDIAL: 'ONE-TO-ONE-OUTDIAL',\n      ONE_TO_ONE_OUTDIAL_CANCEL: 'ONE-TO-ONE-OUTDIAL-CANCEL',\n      ON_MESSAGE: 'ON-MESSAGE',\n      OUTDIAL_DISPOSITION: 'OUTDIAL-DISPOSITION',\n      PAUSE_RECORD: 'PAUSE-RECORD',\n      PENDING_CHAT_DISP: 'PENDING-CHAT-DISP', // external chat\n      PENDING_DISP: 'PENDING_DISP',\n      PING_CALL: 'PING-CALL',\n      PREVIEW_DIAL: 'PREVIEW-DIAL',\n      PREVIEW_DIAL_ID: 'PREVIEW_DIAL',\n      PREVIEW_LEAD_STATE: 'PREVIEW-LEAD-STATE',\n      RECORD: 'RECORD',\n      REQUEUE: 'RE-QUEUE',\n      REVERSE_MATCH: 'REVERSE_MATCH',\n      SCRIPT_CONFIG: 'SCRIPT-CONFIG',\n      SCRIPT_RESULT: 'SCRIPT-RESULT',\n      STATS: 'STATS',\n      STATS_AGENT: 'AGENT',\n      STATS_AGENT_DAILY: 'AGENTDAILY',\n      STATS_CAMPAIGN: 'CAMPAIGN',\n      STATS_CHAT: 'CHAT',\n      STATS_QUEUE: 'GATE',\n      STOP_MONITOR_CHAT: 'CHAT-DROP-MONITORING-SESSION', // external chat\n      SUPERVISOR_LIST: 'SUPERVISOR-LIST', // internal chat\n      TCPA_SAFE: 'TCPA-SAFE',\n      TCPA_SAFE_ID: 'TCPA_SAFE',\n      TCPA_SAFE_LEAD_STATE: 'TCPA-SAFE-LEAD-STATE',\n      UPDATE_DIAL_DESTINATION: 'UPDATE_DIAL_DESTINATION',\n      XFER_COLD: 'COLD-XFER',\n      XFER_WARM: 'WARM-XFER',\n      XFER_WARM_CANCEL: 'WARM-XFER-CANCEL',\n      // SOFTPHONE message types\n      SETUP_WEB_RTC_SERVER: 'SETUP_WEB_RTC_SERVER',\n      SIP_INIT: 'SIP_INIT',\n      SIP_ANSWER: 'SIP_ANSWER',\n      SIP_REJECT: 'SIP_REJECT',\n      SIP_REGISTER: 'SIP_REGISTER',\n      SIP_HANGUP: 'SIP_HANGUP',\n      SIP_SEND_DTMF: 'SIP_SEND_DTMF',\n      SIP_TOGGLE_MUTE: 'SIP_TOGGLE_MUTE',\n      SOFTPHONE_RESET_SESSION: 'SOFTPHONE_RESET_SESSION',\n      SWITCH_SOFTPHONE_REGISTRAR: 'SWITCH_SOFTPHONE_REGISTRAR',\n    };\n\n    /*\n     * Init wrapper for the core module.\n     * @param {Object} The Object that the library gets attached to in\n     * library.init.js.  If the library was not loaded with an AMD loader such as\n     * require.js, this is the global Object.\n     */\n    function initAgentLibraryCore(context) {\n      'use strict';\n\n      /**\n         * This is the constructor for the Library Object. Note that the constructor is also being\n         * attached to the context that the library was loaded in.\n         * @param {Object} [config={}] Set authHost, if the WebSocket should be secure or not with the testingLocal boolean, and callback functions.\n         * @constructor\n         * @namespace Core\n         * @memberof AgentLibrary\n         * @property {object} callbacks Internal map of registered callback functions\n         * @property {array} _requests Internal map of requests by message id, private property.\n         * @property {array} _queuedMsgs Array of pending messages to be sent when socket reconnected\n         * @property {boolean} _isReconnect Whether or not we are doing a reconnect for the socket\n         * @example\n          var Lib = new AgentLibrary({\n               authHost:'d01-test.cf.dev:8080', // window.location.origin\n               testingLocal: true,\n               allowMultiSocket: true,\n               callbacks: {\n                   closeResponse: onCloseFunction,\n                   openResponse: onOpenFunction\n               }\n          });\n         */\n      var AgentLibrary = (context.AgentLibrary = function(config) {\n        config = config || {};\n\n        // define properties\n        this.callbacks = {};\n        this._requests = [];\n        this._queuedMsgs = [];\n        this._isReconnect = false;\n\n        // start with new model instance\n        UIModel.resetInstance();\n\n        // set instance on model object\n        UIModel.getInstance().libraryInstance = this;\n\n        // initialize indexedDB for logging\n        this.openLogger();\n        this.openConsoleLogger();\n\n        // set default values\n        if (typeof config.callbacks !== 'undefined') {\n          this.callbacks = config.callbacks;\n        }\n\n        if (typeof config.authHost !== 'undefined') {\n          UIModel.getInstance().authHost = config.authHost;\n        }\n\n        if (config.isSecureSocket !== 'undefined') {\n          if (typeof config.isSecureSocket === 'string') {\n            config.isSecureSocket =\n              config.isSecureSocket.toLowerCase() === 'true';\n          }\n          UIModel.getInstance().socketProtocol = config.isSecureSocket\n            ? 'wss://'\n            : 'ws://';\n        }\n\n        UIModel.getInstance().applicationSettings.allowMultiSocket =\n          config.allowMultiSocket === true;\n\n        return this;\n      });\n\n      /**\n       * Set multiple callback functions based on type\n       * @memberof AgentLibrary.Core\n       * @param {Object} callbackMap Contains map of callback types to their respective functions:<br />\n       * <tt>callbackMap = {<br />\n       *      closeResponse: onCloseFunction,<br />\n       *      openResponse: onOpenFunction<br />\n       * }\n       * </tt>\n       *<br />\n       * Possible callback types:\n       * <li>\"addSessionNotification\"</li>\n       * <li>\"agentStateResponse\"</li>\n       * <li>\"acknowledgeResponse\"</li>\n       * <li>\"bargeInResponse\"</li>\n       * <li>\"closeResponse\"</li>\n       * <li>\"coachResponse\"</li>\n       * <li>\"configureResponse\"</li>\n       * <li>\"callNotesResponse\"</li>\n       * <li>\"callbacksPendingResponse\"</li>\n       * <li>\"callbackCancelResponse\"</li>\n       * <li>\"campaignDispositionsResponse\"</li>\n       * <li>\"chatResponse\"</li>\n       * <li>\"dialGroupChangeNotification\"</li>\n       * <li>\"dialGroupChangePendingNotification\"</li>\n       * <li>\"dropSessionNotification\"</li>\n       * <li>\"earlyUiiNotification\"</li>\n       * <li>\"endCallNotification\"</li>\n       * <li>\"gatesChangeNotification\"</li>\n       * <li>\"genericNotification\"</li>\n       * <li>\"genericResponse\"</li>\n       * <li>\"holdResponse\"</li>\n       * <li>\"leadSearchResponse\"</li>\n       * <li>\"loginResponse\"</li>\n       * <li>\"logoutResponse\"</li>\n       * <li>\"monitorResponse\"</li>\n       * <li>\"newCallNotification\"</li>\n       * <li>\"offhookInitResponse\"</li>\n       * <li>\"offhookTermNotification\"</li>\n       * <li>\"openResponse\"</li>\n       * <li>\"pauseRecordResponse\"</li>\n       * <li>\"pendingDispNotification\"</li>\n       * <li>\"previewFetchResponse\"</li>\n       * <li>\"previewLeadStateNotification\"</li>\n       * <li>\"recordResponse\"</li>\n       * <li>\"requeueResponse\"</li>\n       * <li>\"reverseMatchNotification\"</li>\n       * <li>\"safeModeFetchResponse\"</li>\n       * <li>\"safeModeSearchResponse\"</li>\n       * <li>\"scriptConfigResponse\"</li>\n       * <li>\"supervisorListResponse\"</li>\n       * <li>\"coldXferResponse\"</li>\n       * <li>\"warmXferResponse\"</li>\n       * <li>\"agentStats\"</li>\n       * <li>\"agentDailyStats\"</li>\n       * <li>\"campaignStats\"</li>\n       * <li>\"queueStats\"</li>\n       * <li>\"chatQueueStats\"</li>\n       * @type {object}\n       */\n      AgentLibrary.prototype.setCallbacks = function(callbackMap) {\n        for (var property in callbackMap) {\n          this.callbacks[property] = callbackMap[property];\n        }\n      };\n\n      /**\n       * Set an individual callback function for the given type\n       * @memberof AgentLibrary.Core\n       * @param {string} type The name of the event that fires the callback function\n       * @param {function} callback The function to call for the given type\n       */\n      AgentLibrary.prototype.setCallback = function(type, callback) {\n        this.callbacks[type] = callback;\n      };\n\n      /**\n       * Get the map of all registered callbacks\n       * @memberof AgentLibrary.Core\n       * @returns {array}\n       */\n      AgentLibrary.prototype.getCallbacks = function() {\n        return this.callbacks;\n      };\n\n      /**\n       * Get a given registered callback by type\n       * @memberof AgentLibrary.Core\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallback = function(type) {\n        return this.callbacks[type];\n      };\n\n      /**\n       * Get the socket connection to IntelliSocket\n       * @memberof AgentLibrary.Core\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getSocket = function(type) {\n        return this.socket;\n      };\n\n      /**\n       * @namespace Requests\n       * @memberof AgentLibrary.Core\n       */\n\n      ////////////////////////////\n      // requests and responses //\n      ////////////////////////////\n      /**\n       * Get outgoing Authenticate Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAuthenticateRequest = function() {\n        return UIModel.getInstance().authenticateRequest;\n      };\n      /**\n       * Get outgoing Login Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoginRequest = function() {\n        return UIModel.getInstance().loginRequest;\n      };\n      /**\n       * Get the MultiSocket Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getMultiSocketRequest = function() {\n        return UIModel.getInstance().multiSocketRequest;\n      };\n      /**\n       * Get outgoing Login Phase 1 Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentConfigRequest = function() {\n        return UIModel.getInstance().loginPhase1Request;\n      };\n      /**\n       * Get outgoing Logout Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLogoutRequest = function() {\n        return UIModel.getInstance().logoutRequest;\n      };\n      /**\n       * Get latest Agent Daily Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStats = function() {\n        return UIModel.getInstance().agentDailyStats;\n      };\n      /**\n       * Get latest Call Tokens object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallTokens = function() {\n        return UIModel.getInstance().callTokens;\n      };\n      /**\n       * Get latest outgoing Agent State Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStateRequest = function() {\n        return UIModel.getInstance().agentStateRequest;\n      };\n      /**\n       * Get latest outgoing offhook init Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookInitRequest = function() {\n        return UIModel.getInstance().offhookInitRequest;\n      };\n      /**\n       * Get latest outgoing offhook termination Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookTermRequest = function() {\n        return UIModel.getInstance().offhookTermRequest;\n      };\n      /**\n       * Get latest outgoing Hangup Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getHangupRequest = function() {\n        return UIModel.getInstance().hangupRequest;\n      };\n      /**\n       * Get latest outgoing Preview Dial Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getPreviewDialRequest = function() {\n        return UIModel.getInstance().previewDialRequest;\n      };\n      /**\n       * Get latest TCPA Safe Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getTcpaSafeRequest = function() {\n        return UIModel.getInstance().tcpaSafeRequest;\n      };\n      /**\n       * Get latest Manual Outdial Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getManualOutdialRequest = function() {\n        return UIModel.getInstance().oneToOneOutdialRequest;\n      };\n      /**\n       * Get latest Manual Outdial Cancel Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getManualOutdialCancelRequest = function() {\n        return UIModel.getInstance().oneToOneOutdialCancelRequest;\n      };\n      /**\n       * Get latest Call Notes Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallNotesRequest = function() {\n        return UIModel.getInstance().callNotesRequest;\n      };\n      /**\n       * Get latest Campaign Dispositions Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignDispositionsRequest = function() {\n        return UIModel.getInstance().campaignDispositionsRequest;\n      };\n      /**\n       * Get latest Disposition Call Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDispositionRequest = function() {\n        return UIModel.getInstance().dispositionRequest;\n      };\n      /**\n       * Get latest Disposition Manual Pass Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDispositionManualPassRequest = function() {\n        return UIModel.getInstance().dispositionManualPassRequest;\n      };\n      /**\n       * Get latest Warm Transfer Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getWarmTransferRequest = function() {\n        return UIModel.getInstance().warmXferRequest;\n      };\n      /**\n       * Get latest Cold Transfer Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getColdTransferRequest = function() {\n        return UIModel.getInstance().coldXferRequest;\n      };\n      /**\n       * Get latest Warm Transfer Cancel Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getWarmTransferCancelRequest = function() {\n        return UIModel.getInstance().warmXferCancelRequest;\n      };\n      /**\n       * Get latest Requeue Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getRequeueRequest = function() {\n        return UIModel.getInstance().requeueRequest;\n      };\n      /**\n       * Get latest Barge-In Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getBargeInRequest = function() {\n        return UIModel.getInstance().bargeInRequest;\n      };\n      /**\n       * Get latest Hold Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getHoldRequest = function() {\n        return UIModel.getInstance().holdRequest;\n      };\n      /**\n       * Get latest Pause Record Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getPauseRecordRequest = function() {\n        return UIModel.getInstance().pauseRecordRequest;\n      };\n      /**\n       * Get latest Record Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getRecordRequest = function() {\n        return UIModel.getInstance().recordRequest;\n      };\n      /**\n       * Get latest Chat Presented Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatPresentedRequest = function() {\n        return UIModel.getInstance().chatPresentedRequest;\n      };\n      /**\n       * Get latest Chat Disposition Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatDispositionRequest = function() {\n        return UIModel.getInstance().chatDispositionRequest;\n      };\n      /**\n       * Get latest Chat Message Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatMessageRequest = function() {\n        return UIModel.getInstance().chatMessageRequest;\n      };\n      /**\n       * Get latest Chat Requeue Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatRequeueRequest = function() {\n        return UIModel.getInstance().chatRequeueRequest;\n      };\n      /**\n       * Get latest Chat Typing Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatTypingRequest = function() {\n        return UIModel.getInstance().chatTypingRequest;\n      };\n      /**\n       * Get latest Agent Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStatsPacket = function() {\n        return UIModel.getInstance().agentStatsPacket;\n      };\n      /**\n       * Get latest Agent Daily Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStatsPacket = function() {\n        return UIModel.getInstance().agentDailyStatsPacket;\n      };\n      /**\n       * Get latest Queue Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getQueueStatsPacket = function() {\n        return UIModel.getInstance().queueStatsPacket;\n      };\n      /**\n       * Get latest Chat Queue Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatQueueStatsPacket = function() {\n        return UIModel.getInstance().chatQueueStatsPacket;\n      };\n      /**\n       * Get latest Campaign Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignStatsPacket = function() {\n        return UIModel.getInstance().campaignStatsPacket;\n      };\n      /**\n       * Get packet received on successful Phase 1 login\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentConfigPacket = function() {\n        return UIModel.getInstance().loginPhase1Packet;\n      };\n      /**\n       * Get packet received on successful Login (2nd layer login)\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoginPacket = function() {\n        return UIModel.getInstance().loginPacket;\n      };\n      /**\n       * Get latest received packet for Agent State\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStatePacket = function() {\n        return UIModel.getInstance().agentStatePacket;\n      };\n      /**\n       * Get latest received packet for the Current Call\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCurrentCallPacket = function() {\n        return UIModel.getInstance().currentCallPacket;\n      };\n      /**\n       * Get latest received packet for initiating an offhook session\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookInitPacket = function() {\n        return UIModel.getInstance().offhookInitPacket;\n      };\n      /**\n       * Get latest received packet for terminating an offhook session\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookTermPacket = function() {\n        return UIModel.getInstance().offhookTermPacket;\n      };\n\n      /**\n       * Get chat agent end request class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getChatAgentEnd = function() {\n        return UIModel.getInstance().chatAgentEnd;\n      };\n\n      /**\n       * Get WebRTC request class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getWebRTCRequest = function() {\n        return UIModel.getInstance().webRTCRequest;\n      };\n\n      AgentLibrary.prototype.getChatListRequest = function() {\n        return UIModel.getInstance().chatListRequest;\n      };\n\n      /**\n       * Get SearchDirectoryRequest class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getSearchDirectoryRequest = function() {\n        return UIModel.getInstance().searchDirectoryRequest;\n      };\n\n      /**\n       * @namespace Notifications\n       * @memberof AgentLibrary.Core\n       */\n      ///////////////////\n      // notifications //\n      ///////////////////\n      /**\n       * Get Dial Group Change notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDialGroupChangeNotification = function() {\n        return UIModel.getInstance().dialGroupChangeNotification;\n      };\n      /**\n       * Get Dial Group Change Pending notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDialGroupChangePendingNotification = function() {\n        return UIModel.getInstance().dialGroupChangePendingNotification;\n      };\n      /**\n       * Get End Call notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getEndCallNotification = function() {\n        return UIModel.getInstance().endCallNotification;\n      };\n      /**\n       * Get Gates Change notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getGatesChangeNotification = function() {\n        return UIModel.getInstance().gatesChangeNotification;\n      };\n      /**\n       * Get Generic notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getGenericNotification = function() {\n        return UIModel.getInstance().genericNotification;\n      };\n      /**\n       * Get New Call notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getNewCallNotification = function() {\n        return UIModel.getInstance().newCallNotification;\n      };\n      /**\n       * Get current call object\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCurrentCall = function() {\n        return UIModel.getInstance().currentCall;\n      };\n      /**\n       * Get Add Session notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAddSessionNotification = function() {\n        return UIModel.getInstance().addSessionNotification;\n      };\n      /**\n       * Get Drop Session notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDropSessionNotification = function() {\n        return UIModel.getInstance().dropSessionNotification;\n      };\n      /**\n       * Get Early UII notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getEarlyUiiNotification = function() {\n        return UIModel.getInstance().earlyUiiNotification;\n      };\n      /**\n       * Get Chat Active notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatActiveNotification = function() {\n        return UIModel.getInstance().chatActiveNotification;\n      };\n      /**\n       * Get Chat Inactive notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatInactiveNotification = function() {\n        return UIModel.getInstance().chatInactiveNotification;\n      };\n      /**\n       * Get Chat Inactive notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatClientReconnectNotification = function() {\n        return UIModel.getInstance().chatClientReconnectNotification;\n      };\n      /**\n       * Get Chat Presented notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatPresentedNotification = function() {\n        return UIModel.getInstance().chatPresentedNotification;\n      };\n      /**\n       * Get Chat Typing notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatTypingNotification = function() {\n        return UIModel.getInstance().chatTypingNotification;\n      };\n      /**\n       * Get New Chat notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getNewChatNotification = function() {\n        return UIModel.getInstance().newChatNotification;\n      };\n      /**\n       * Get Load Media notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoadMediaNotification = function() {\n        return UIModel.getInstance().loadMediaNotification;\n      };\n\n      /**\n       * @namespace Settings\n       * @memberof AgentLibrary.Core\n       */\n      //////////////////////\n      // settings objects //\n      //////////////////////\n      /**\n       * Get Application Settings object containing the current state of application related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getApplicationSettings = function() {\n        return UIModel.getInstance().applicationSettings;\n      };\n      /**\n       * Get Softphone Settings object containing the current state of SIP related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getSoftphoneSettings = function() {\n        return UIModel.getInstance().softphoneSettings;\n      };\n      /**\n       * Get Chat Settings object containing the current state of chat related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatSettings = function() {\n        return UIModel.getInstance().chatSettings;\n      };\n      /**\n       * Get Connection Settings object containing the current state of connection related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getConnectionSettings = function() {\n        return UIModel.getInstance().connectionSettings;\n      };\n      /**\n       * Get Inbound Settings object containing the current state of inbound related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getInboundSettings = function() {\n        return UIModel.getInstance().inboundSettings;\n      };\n      /**\n       * Get Outbound Settings object containing the current state of outbound related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOutboundSettings = function() {\n        return UIModel.getInstance().outboundSettings;\n      };\n      /**\n       * Get Agent Settings object containing the current state of agent related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentSettings = function() {\n        return UIModel.getInstance().agentSettings;\n      };\n      /**\n       * Get Transfer Sessions\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getTransferSessions = function() {\n        return UIModel.getInstance().transferSessions;\n      };\n\n      AgentLibrary.prototype.getPendingSessions = function() {\n        return UIModel.getInstance().pendingNewCallSessions;\n      };\n      /**\n       * Get the Agent Permissions object containing the current state of agent permissions\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentPermissions = function() {\n        return UIModel.getInstance().agentPermissions;\n      };\n\n      /**\n       * @namespace Stats\n       * @memberof AgentLibrary.Core\n       */\n      ///////////////////\n      // stats objects //\n      ///////////////////\n\n      /**\n       * Get the Agent stats object containing the current state of agent stats\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStats = function() {\n        return UIModel.getInstance().agentStats;\n      };\n      /**\n       * Get the Agent Daily stats object containing the current state of agent daily stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStats = function() {\n        return UIModel.getInstance().agentDailyStats;\n      };\n      /**\n       * Get the Queue stats object containing the current state of queue stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getQueueStats = function() {\n        return UIModel.getInstance().queueStats;\n      };\n      /**\n       * Get the Chat Queue stats object containing the current state of chat queue stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatQueueStats = function() {\n        return UIModel.getInstance().chatQueueStats;\n      };\n      /**\n       * Get the Campaign stats object containing the current state of campaign stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignStats = function() {\n        return UIModel.getInstance().campaignStats;\n      };\n\n      /**\n       * Get filteredDirectory object containing the filtered directory data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getFilteredDirectory = function() {\n        return UIModel.getInstance().filteredDirectory;\n      };\n\n      /**\n       * Get extensionPresenceResponse object containing the presenceInfo of extensionIds\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getExtensionPresenceResponse = function() {\n        return UIModel.getInstance().extensionPresenceResponse;\n      };\n\n      /**\n       * Get ExtensionPresenceRequest class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getExtensionPresenceRequest = function() {\n        return UIModel.getInstance().extensionPresenceRequest;\n      };\n\n      /**********************\n       *  PRIVATE FUNCTIONS *\n       **********************/\n\n      AgentLibrary.prototype._utils = utils;\n\n      AgentLibrary.prototype._NewCallUtils = NewCallUtils;\n\n      AgentLibrary.prototype._HttpService = HttpService;\n\n      AgentLibrary.prototype._getUIModel = function() {\n        return UIModel;\n      };\n    }\n\n    function initAgentLibrarySocket(context) {\n      'use strict';\n      var AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openSocket = function(agentId, callback) {\n        var instance = this;\n        utils.setCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, callback);\n        if ('WebSocket' in context) {\n          if (!instance.socket) {\n            var model = UIModel.getInstance();\n\n            model.agentSettings.agentId = agentId; // set agentId here since id is in scope\n\n            if (instance._isReconnect) {\n              // update access_token on reconnect\n              _getNewAccessToken(instance);\n            } else {\n              _buildSocketDest();\n              _initSocket(instance);\n            }\n          }\n        } else {\n          console.error('WebSocket NOT supported by your Browser');\n          utils.logMessage(\n            LOG_LEVELS.WARN,\n            'WebSocket NOT supported by your Browser',\n            '',\n          );\n        }\n      };\n\n      AgentLibrary.prototype.closeSocket = function() {\n        this.socket.close();\n      };\n\n      // when socket is successfully opened, check to see if there are any queued messaged\n      // and if so, send them.\n      AgentLibrary.prototype.socketOpened = function() {\n        var instance = this;\n        var currDts = new Date();\n        var threeMins = 3 * 60 * 1000; // milliseconds\n        var queuedMsg;\n\n        // get agent configuration information - \"phase 1 login\"\n        UIModel.getInstance().loginPhase1Request = new LoginPhase1Request();\n        var msg = UIModel.getInstance().loginPhase1Request.formatJSON();\n        utils.sendMessage(this, msg);\n\n        // if this is a reconnect, we need to re-authenticate with IntelliServices & IntelliQueue\n        if (instance._isReconnect) {\n          instance._isReconnect = false;\n          // Add IntelliQueue reconnect\n          var loginRequest = JSON.parse(\n            UIModel.getInstance().loginRequest.formatJSON(),\n          );\n          var hashCode = UIModel.getInstance().connectionSettings.hashCode;\n          loginRequest.ui_request.hash_code = {\n            '#text': hashCode,\n          };\n          loginRequest.ui_request.update_login = {\n            '#text': 'FALSE',\n          };\n          loginRequest.ui_request.reconnect = {\n            '#text': 'TRUE',\n          };\n          instance._queuedMsgs.unshift({\n            dts: new Date(),\n            msg: JSON.stringify(loginRequest),\n          });\n        }\n        for (var idx = 0; idx < instance._queuedMsgs.length; idx++) {\n          queuedMsg = instance._queuedMsgs[idx];\n          if (currDts.getTime() - queuedMsg.dts.getTime() < threeMins) {\n            // message queued less than 3 mins ago, send\n            utils.logMessage(\n              LOG_LEVELS.DEBUG,\n              'Sending queued message to IntelliSocket.',\n              queuedMsg.msg,\n            );\n            utils.sendMessage(instance, queuedMsg.msg);\n          } else {\n            // message expired, don't send\n            utils.logMessage(\n              LOG_LEVELS.DEBUG,\n              'Queued message expired, discarding.',\n              queuedMsg.msg,\n            );\n          }\n        }\n        // reset queued messages\n        instance._queuedMsgs = [];\n      };\n\n      // build WebSocket destination based on current agentId and access token\n      function _buildSocketDest() {\n        var model = UIModel.getInstance();\n        var socketDest = model.applicationSettings.socketDest;\n        socketDest = model.socketProtocol + model.authenticateRequest.socketUrl;\n        socketDest += ':' + model.authenticateRequest.socketPort;\n        socketDest += '?access_token=' + model.authenticateRequest.accessToken;\n        socketDest += '&agent_id=' + model.agentSettings.agentId;\n\n        model.applicationSettings.socketDest = socketDest; // seems redundant, but needed to update value on model\n        return socketDest;\n      }\n\n      // connect socket, setup socket event listeners\n      function _initSocket(instance) {\n        var socketDest = UIModel.getInstance().applicationSettings.socketDest;\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          'Attempting to open socket connection to ' + socketDest,\n          '',\n        );\n\n        instance.socket = new WebSocket(socketDest);\n\n        instance.socket.onopen = function() {\n          // stop reconnect timer\n          clearInterval(UIModel.getInstance().reconnectIntervalId);\n          UIModel.getInstance().reconnectIntervalId = null;\n\n          UIModel.getInstance().applicationSettings.socketConnected = true;\n          utils.fireCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, {\n            reconnect: instance._isReconnect,\n          });\n          instance.socketOpened();\n        };\n\n        instance.socket.onerror = function(err) {\n          utils.fireCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, {\n            error: err,\n          });\n        };\n\n        instance.socket.onmessage = function(evt) {\n          if (evt.data !== 'BOP') {\n            var data = JSON.parse(evt.data);\n            if (data.ui_response) {\n              utils.processResponse(instance, data);\n            } else if (data.ui_notification) {\n              utils.processNotification(instance, data);\n            } else if (data.dialer_request) {\n              utils.processDialerResponse(instance, data);\n            } else if (data.ui_stats) {\n              utils.processStats(instance, data);\n            } else if (data.ui_request) {\n              utils.processRequest(instance, data);\n            }\n          }\n        };\n\n        instance.socket.onclose = function() {\n          utils.fireCallback(instance, CALLBACK_TYPES.CLOSE_SOCKET, '');\n          UIModel.getInstance().applicationSettings.socketConnected = false;\n          instance.socket = null;\n\n          // cancel daily stats timer\n          clearInterval(UIModel.getInstance().agentDailyIntervalId);\n          UIModel.getInstance().agentDailyIntervalId = null;\n\n          // cancel stats timer\n          clearInterval(UIModel.getInstance().statsIntervalId);\n          UIModel.getInstance().statsIntervalId = null;\n\n          // cancel BEAT timer\n          clearInterval(UIModel.getInstance().pingStatIntervalId);\n          UIModel.getInstance().pingStatIntervalId = null;\n\n          // if we are still logged in, set reconnect flag and try to reconnect\n          if (UIModel.getInstance().agentSettings.isLoggedIn) {\n            instance._isReconnect = true;\n            console.warn(\n              'AgentLibrary: WebSocket is not connected, attempting to reconnect.',\n            );\n\n            // try reconnect every 5 seconds\n            UIModel.getInstance().reconnectIntervalId = setInterval(function() {\n              instance.openSocket(UIModel.getInstance().agentSettings.agentId);\n            }, 5000);\n          }\n        };\n      }\n\n      // get valid access token based on agentId and login hash code\n      function _getNewAccessToken(instance) {\n        var model = UIModel.getInstance();\n        var baseUrl = model.authHost + model.baseAuthUri;\n        var errorMsg = 'Error in opening WebSocket on retrieving access token';\n        var params = {\n          queryParams: {\n            loginHashcode: model.connectionSettings.hashCode,\n            agentId: model.agentSettings.agentId,\n            platformId: model.authenticateRequest.platformId,\n          },\n        };\n\n        new HttpService(baseUrl).httpPost('login/agent/hashcode', params).then(\n          function(response) {\n            try {\n              response = JSON.parse(response.response);\n              UIModel.getInstance().authenticateRequest.accessToken =\n                response.accessToken;\n              _buildSocketDest();\n              _initSocket(instance);\n            } catch (err) {\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n            }\n          },\n          function(err) {\n            var errResponse = {\n              type: 'WebSocket Error',\n              message: errorMsg,\n            };\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          },\n        );\n      }\n    }\n\n    function initAgentLibraryAgent(context) {\n      /**\n       * @namespace Agent\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Sends authenticate request to Engage Auth. Can either pass in 3 params of username, password, and platformId or\n       * two params of jwt and tokenType. In each case a callback function may optionally be specified.\n       * @memberof AgentLibrary.Agent\n       * @param {string} username Agent's username\n       * @param {string} password Agent's password\n       * @param {string} platformId Designate the platform where the agent is set up\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithUsernamePassword = function(\n        username,\n        password,\n        platformId,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          username: username,\n          password: password,\n          platformId: platformId,\n          authType: AUTHENTICATE_TYPES.USERNAME_PASSWORD,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends authenticate request to Engage Auth. Returns an array of agents to continue login process.\n       * @memberof AgentLibrary.Agent\n       * @param {string} rcAccessToken JSON Web Token received from RingCentral Single Sign-on API\n       * @param {string} tokenType string type received from RingCentral Single Sign-on API\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithRcAccessToken = function(\n        rcAccessToken,\n        tokenType,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          rcAccessToken: rcAccessToken,\n          tokenType: tokenType,\n          authType: AUTHENTICATE_TYPES.RC_TOKEN,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends authenticate request to Engage Auth. Returns an array of agents to continue login process.\n       * @memberof AgentLibrary.Agent\n       * @param {string} engageAccessToken JSON Web Token received from RingCentral Single Sign-on API\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithEngageAccessToken = function(\n        engageAccessToken,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          engageAccessToken: engageAccessToken,\n          authType: AUTHENTICATE_TYPES.ENGAGE_TOKEN,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends request to IntelliQueue to get the agent's available products for login\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when loginPhase1 response received\n       */\n      AgentLibrary.prototype.getAgentConfig = function(callback) {\n        UIModel.getInstance().loginPhase1Request = new LoginPhase1Request();\n        var msg = UIModel.getInstance().loginPhase1Request.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LOGIN_PHASE_1, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends request to the WebRTC Endpoint URL and process the response.\n       * @memberof AgentLibrary.Agent\n       *\n       * @param {function} [callback=null] Callback function when web rtc info response received\n       */\n      AgentLibrary.prototype.getWebRtcInfo = function(callback) {\n        var model = UIModel.getInstance();\n        model.webRTCRequest = new WebRTCRequest();\n        model.webRTCRequest.getSipRegistrationInfo();\n\n        utils.setCallback(this, CALLBACK_TYPES.WEBRTC_INFO, callback);\n      };\n\n      /**\n       * Sends agent configure message (2nd layer login) to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} dialDest The agent's number, sip | DID.\n       * @param {string[]} [queueIds=null] The queue ids the agent will be logged into.\n       * @param {string[]} [chatIds=null] The chat ids the agent will be logged into.\n       * @param {string} [skillProfileId=null] The skill profile the agent will be logged into.\n       * @param {string} [dialGroupId=null] The outbound dial group id the agent will be logged into.\n       * @param {string} [updateFromAdminUI=false] Whether the request is generated from the AdminUI or not.\n       * @param {boolean} isForce Whether the agent login is forcing an existing agentlogin out.\n       * @param {function} [callback=null] Callback function when configureAgent response received.\n       */\n      AgentLibrary.prototype.loginAgent = function(\n        dialDest,\n        queueIds,\n        chatIds,\n        skillProfileId,\n        dialGroupId,\n        updateFromAdminUI,\n        isForce,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n        var config = {\n          dialDest: dialDest,\n          queueIds: queueIds,\n          chatIds: chatIds,\n          skillProfileId: skillProfileId,\n          dialGroupId: dialGroupId,\n          updateFromAdminUI: updateFromAdminUI,\n          isForce: isForce,\n        };\n        var instance = this;\n\n        // if dialDest is set to `integrated`, we are doing an integrated softphone\n        // and need to get SIP credentials\n        if (config.dialDest === 'integrated') {\n          // set up some global variables to track dial dest type for later offhook init\n          if (model.applicationSettings.isSso) {\n            model.applicationSettings.dialDestType = 'RC_SOFTPHONE';\n          } else {\n            model.applicationSettings.dialDestType = 'LEGACY_SOFTPHONE';\n          }\n\n          if (model.softphoneSettings.sipInfo.length === 0) {\n            // call engage-auth api to get webRtc info\n            model.libraryInstance.getWebRtcInfo(function() {\n              config.dialDest = utils.getDialDestination();\n              _setUpAndSendLogin(config, callback, instance);\n            });\n          } else {\n            // set webRtc info from model, could be an update login\n            config.dialDest = utils.getDialDestination();\n            _setUpAndSendLogin(config, callback, instance);\n          }\n        } else {\n          // set up some global variables to track dial dest type for later offhook init\n          if (config.dialDest === 'RC_PHONE') {\n            model.applicationSettings.dialDestType = 'RC_PHONE';\n          }\n\n          _setUpAndSendLogin(config, callback, instance);\n        }\n      };\n\n      function _setUpAndSendLogin(config, callback, instance) {\n        UIModel.getInstance().loginRequest = new LoginRequest(\n          config.dialDest,\n          config.queueIds,\n          config.chatIds,\n          config.skillProfileId,\n          config.dialGroupId,\n          config.updateFromAdminUI,\n          config.isForce,\n        );\n        var msg = UIModel.getInstance().loginRequest.formatJSON();\n\n        utils.setCallback(instance, CALLBACK_TYPES.LOGIN, callback);\n        utils.sendMessage(instance, msg);\n      }\n      /**\n       * Sends multisocket message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when multisocket response received.\n       */\n      AgentLibrary.prototype.multiLoginRequest = function(callback) {\n        var model = UIModel.getInstance();\n        model.multiSocketRequest = new MultiSocketRequest();\n        var msg = model.multiSocketRequest.formatJSON();\n        if (\n          model.dataStore.get('agent_id') &&\n          model.dataStore.get('hash_code')\n        ) {\n          utils.setCallback(this, CALLBACK_TYPES.LOGIN_MULTISOCKET, callback);\n          utils.sendMessage(this, msg);\n        } else {\n          this.getAgentConfig(callback);\n        }\n      };\n\n      /**\n       * Sends agent logout message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {number} agentId Id of the agent that will be logged out.\n       * @param {function} [callback=null] Callback function when logoutAgent response received.\n       */\n      AgentLibrary.prototype.logoutAgent = function(agentId, callback) {\n        var model = UIModel.getInstance();\n        if (model.agentSettings.isLoggedIn) {\n          model.agentSettings.isLoggedIn = false;\n          model.logoutRequest = new LogoutRequest(agentId);\n          var msg = model.logoutRequest.formatJSON();\n\n          // socket closed in callback function\n          utils.setCallback(this, CALLBACK_TYPES.LOGOUT, callback);\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Sends agent logout for the given agent to logout message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {number} agentToLogout Id of the agent that will be logged out.\n       * @param {number} [requestMessage=\"\"] Message to send for the logout request.\n       * @param {function} [callback=null] Callback function when logoutAgent response received.\n       */\n      AgentLibrary.prototype.requestLogoutAgent = function(\n        agentToLogout,\n        requestMessage,\n        callback,\n      ) {\n        var isSupervisor =\n          UIModel.getInstance().agentSettings.agentType === 'SUPERVISOR';\n        if (isSupervisor) {\n          //This is a supervisor request to log an agent out. Create the\n          //logout packet and then send the packet to IntelliQueue.\n          UIModel.getInstance().logoutRequest = new LogoutRequest(\n            agentToLogout,\n            requestMessage,\n          );\n          utils.setCallback(this, CALLBACK_TYPES.LOGOUT, callback);\n          var msg = UIModel.getInstance().logoutRequest.formatJSON();\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Sends agent state change message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} agentState The system/base state to transition to <br />\n       * AVAILABLE | TRANSITION | ENGAGED | ON-BREAK | WORKING | AWAY | LUNCH | AUX-UNAVAIL-NO-OFFHOOK | AUX-UNAVAIL-OFFHOOK\n       * @param {string} [agentAuxState=\"\"] The aux state display label\n       * @param {function} [callback=null] Callback function when agentState response received\n       */\n      AgentLibrary.prototype.setAgentState = function(\n        agentState,\n        agentAuxState,\n        callback,\n      ) {\n        UIModel.getInstance().agentStateRequest = new AgentStateRequest(\n          agentState,\n          agentAuxState,\n        );\n        var msg = UIModel.getInstance().agentStateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.AGENT_STATE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Initiates an agent offhook session\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when offhookInit response received\n       */\n      AgentLibrary.prototype.offhookInit = function(callback) {\n        UIModel.getInstance().offhookInitRequest = new OffhookInitRequest();\n        var msg = UIModel.getInstance().offhookInitRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.OFFHOOK_INIT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Terminates agent's offhook session\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when pending callbacks response received\n       */\n      AgentLibrary.prototype.offhookTerm = function(callback) {\n        UIModel.getInstance().offhookTermRequest = new OffhookTermRequest();\n        var msg = UIModel.getInstance().offhookTermRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.OFFHOOK_TERM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Returns scheduled callbacks for the given agent\n       * @memberof AgentLibrary.Agent\n       * @param {number} [agentId=logged in agent id] Id of agent to get callbacks for\n       * @param {function} [callback=null] Callback function when pending callbacks response received\n       */\n      AgentLibrary.prototype.getPendingCallbacks = function(agentId, callback) {\n        UIModel.getInstance().callbacksPendingRequest = new CallbacksPendingRequest(\n          agentId,\n        );\n        var msg = UIModel.getInstance().callbacksPendingRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALLBACK_PENDING, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel a scheduled callback for the given agent based on lead id\n       * @memberof AgentLibrary.Agent\n       * @param {number} leadId Id of lead callback to cancel\n       * @param {number} [agentId=logged in agent id] Id of agent to cancel specified lead callback for\n       * @param {function} [callback=null] Callback function when callback is canceled\n       */\n      AgentLibrary.prototype.cancelCallback = function(\n        leadId,\n        agentId,\n        callback,\n      ) {\n        UIModel.getInstance().callbackCancelRequest = new CallbackCancelRequest(\n          leadId,\n          agentId,\n        );\n        var msg = UIModel.getInstance().callbackCancelRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALLBACK_CANCEL, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request stats messages to be sent every 5 seconds. The stats responses will be sent as\n       * four possible callback types: agentStats, agentDailyStats, campaignStats, or queueStats\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.requestStats = function() {\n        // start stats interval timer, request stats every 5 seconds\n        if (UIModel.getInstance().statsIntervalId === null) {\n          UIModel.getInstance().statsIntervalId = setInterval(\n            utils.sendStatsRequestMessage,\n            5000,\n          );\n          _terminatePing();\n        }\n      };\n\n      /**\n       * Terminate stats messages sent to the agent every 5 seconds.\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.terminateStats = function() {\n        clearInterval(UIModel.getInstance().statsIntervalId);\n        UIModel.getInstance().statsIntervalId = null;\n        _requestPing();\n      };\n\n      function _requestPing() {\n        // start ping interval timer, request BEAT every 20 seconds\n        if (UIModel.getInstance().pingStatIntervalId === null) {\n          UIModel.getInstance().pingStatIntervalId = setInterval(\n            utils.sendPingRequestMessage,\n            20000,\n          );\n        }\n      }\n\n      function _terminatePing() {\n        clearInterval(UIModel.getInstance().pingStatIntervalId);\n        UIModel.getInstance().pingStatIntervalId = null;\n      }\n\n      /**\n       * Set the agent dial destination\n       * @memberof AgentLibrary.Agent\n       * @param {string} dialDest The dial destination used for softphone registration\n       * @param {boolean} isSoftphoneError True - if we want to log this dial destination update as a softphone error\n       */\n      AgentLibrary.prototype.updateDialDestination = function(\n        dialDest,\n        isSoftphoneError,\n      ) {\n        UIModel.getInstance().updateDialDestinationRequest = new UpdateDialDestinationRequest(\n          dialDest,\n          isSoftphoneError,\n        );\n        var msg = UIModel.getInstance().updateDialDestinationRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Search Directory for the searchString passed to function.\n       * @memberof AgentLibrary.Agent\n       * @param {string} searchString The search filter for PBX directory\n       */\n      AgentLibrary.prototype.searchDirectory = function(\n        searchString,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n\n        model.searchDirectoryRequest = new SearchDirectoryRequest(searchString);\n        model.searchDirectoryRequest.searchDirectory(searchString);\n        utils.setCallback(this, CALLBACK_TYPES.SEARCH_DIR, callback);\n      };\n\n      /**\n       * Refresh Token method\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.getRefreshedToken = function() {\n        utils.refreshAccessToken();\n      };\n\n      /**\n       * get Extension Presence  Info for the extension Ids passed to function.\n       * @memberof AgentLibrary.Agent\n       * @param {string} extensionIds The extension Ids of RC\n       */\n      AgentLibrary.prototype.getExtensionPresenceInfo = function(\n        extensionIds,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n        model.extensionPresenceRequest = new ExtensionPresenceRequest(\n          extensionIds,\n        );\n        model.extensionPresenceRequest.getExtensionPresenceInfo(extensionIds);\n        utils.setCallback(this, CALLBACK_TYPES.EXTENSION_PRESENCE, callback);\n      };\n    }\n\n    function initAgentLibraryCall(context) {\n      /**\n       * @namespace Call\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Barge in on a call, can hear all parties and be heard by all\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when barge in response received\n       */\n      AgentLibrary.prototype.bargeIn = function(\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'FULL',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.BARGE_IN, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Add a coaching session to the call, can hear all parties but only able to speak on agent channel\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when coaching session response received\n       */\n      AgentLibrary.prototype.coach = function(\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'COACHING',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.COACH_CALL, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {function} [callback=null] Callback function when cold transfer response received\n       */\n      AgentLibrary.prototype.coldXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n        );\n        var msg = UIModel.getInstance().coldXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.internationalColdXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().coldXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a disposition for an inbound or outbound call\n       * @memberof AgentLibrary.Call\n       * @param {string} uii UII (unique id) for call\n       * @param {string} dispId The disposition id\n       * @param {string} notes Agent notes for call\n       * @param {boolean} callback Boolean for whether or not this call is a callback\n       * @param {string} [callbackDTS=\"\"] date time stamp if callback\n       * @param {string} [contactForwardNumber=null] Number for contact forwarding\n       * @param {string} [survey=null] The survey response values for the call.\n       * Format: survey = [ { label: \"\", externId: \"\", leadUpdateColumn: \"\"} ]\n       * @param {string} [externId=null] The external id associated with the lead for this call (only for Outbound Dispositions).\n       * @param {string} [leadId=null] The lead id associated with this call (only for Outbound Dispositions).\n       * @param {string} [requestId=null] The request id associated with a preview fetched lead (only for Outbound Dispositions).\n       */\n      AgentLibrary.prototype.dispositionCall = function(\n        uii,\n        dispId,\n        notes,\n        callback,\n        callbackDTS,\n        contactForwardNumber,\n        survey,\n        externId,\n        leadId,\n        requestId,\n      ) {\n        var model = UIModel.getInstance();\n        model.dispositionRequest = new DispositionRequest(\n          uii,\n          dispId,\n          notes,\n          callback,\n          callbackDTS,\n          contactForwardNumber,\n          survey,\n          externId,\n          leadId,\n          requestId,\n        );\n        var msg = model.dispositionRequest.formatJSON();\n        utils.sendMessage(this, msg);\n\n        // cancel ping call timer\n        if (model.pingIntervalId) {\n          clearInterval(model.pingIntervalId);\n          model.pingIntervalId = null;\n        }\n      };\n\n      /**\n       * Send a disposition for a manual pass on a lead\n       * @memberof AgentLibrary.Call\n       * @param {string} dispId The disposition id\n       * @param {string} notes Agent notes for call\n       * @param {boolean} callback Boolean for whether or not this call is a callback\n       * @param {string} [callbackDTS=\"\"] date time stamp if callback\n       * @param {string} [leadId=null] The lead id\n       * @param {string} [requestId=null] The request key for the lead\n       * @param {string} [externId=null] The external id of the lead\n       */\n      AgentLibrary.prototype.dispositionManualPass = function(\n        dispId,\n        notes,\n        callback,\n        callbackDTS,\n        leadId,\n        requestId,\n        externId,\n      ) {\n        UIModel.getInstance().dispositionManualPassRequest = new DispositionManualPassRequest(\n          dispId,\n          notes,\n          callback,\n          callbackDTS,\n          leadId,\n          requestId,\n          externId,\n        );\n        var msg = UIModel.getInstance().dispositionManualPassRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get a list of all campaign dispositions for given campaign id\n       * @memberof AgentLibrary.Call\n       * @param {string} campaignId Id for campaign to get dispositions for\n       * @param {function} [callback=null] Callback function when campaign dispositions response received\n       */\n      AgentLibrary.prototype.getCampaignDispositions = function(\n        campaignId,\n        callback,\n      ) {\n        UIModel.getInstance().campaignDispositionsRequest = new CampaignDispositionsRequest(\n          campaignId,\n        );\n        var msg = UIModel.getInstance().campaignDispositionsRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CAMPAIGN_DISPOSITIONS, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a hangup request message\n       * @memberof AgentLibrary.Call\n       * @param {string} [sessionId=\"\"] Session to hangup, defaults to current call session id\n       * @param {boolean} resetPendingDisp, reset pendingDisp to false, in case of bad reconnect\n       */\n      AgentLibrary.prototype.hangup = function(sessionId, resetPendingDisp) {\n        UIModel.getInstance().hangupRequest = new HangupRequest(\n          sessionId,\n          resetPendingDisp,\n        );\n        var msg = UIModel.getInstance().hangupRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Place a call on hold\n       * @memberof AgentLibrary.Call\n       * @param {boolean} holdState Whether we are putting call on hold or taking off hold - values true | false\n       * @param {function} [callback=null] Callback function when hold response received\n       */\n      AgentLibrary.prototype.hold = function(holdState, callback) {\n        UIModel.getInstance().holdRequest = new HoldRequest(holdState);\n        var msg = UIModel.getInstance().holdRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.HOLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Place a specified session of a call on hold\n       * @memberof AgentLibrary.Call\n       * @param {boolean} holdState Whether we are putting call on hold or taking off hold - values true | false\n       * @param {integer|string} sessionId session id of the call to place on hold\n       * @param {function} [callback=null] Callback function when hold response received\n       */\n      AgentLibrary.prototype.holdSession = function(\n        holdState,\n        sessionId,\n        callback,\n      ) {\n        UIModel.getInstance().holdRequest = new HoldRequest(\n          holdState,\n          sessionId,\n        );\n        var msg = UIModel.getInstance().holdRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.HOLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a manual outdial request message\n       * @memberof AgentLibrary.Call\n       * @param {string} destination Number to call - ANI\n       * @param {number} callerId Number displayed to callee, DNIS\n       * @param {number} [ringTime=60] Time in seconds to ring call\n       * @param {string} [countryId='USA'] Country for the destination number\n       * @param {number} [queueId=''] Queue id to tie manual call to\n       */\n      AgentLibrary.prototype.manualOutdial = function(\n        destination,\n        callerId,\n        ringTime,\n        countryId,\n        queueId,\n      ) {\n        UIModel.getInstance().oneToOneOutdialRequest = new OneToOneOutdialRequest(\n          destination,\n          callerId,\n          ringTime,\n          countryId,\n          queueId,\n        );\n        var msg = UIModel.getInstance().oneToOneOutdialRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancels a manual outdial request by UII.\n       * @memberof AgentLibrary.Call\n       * @param {string} uii UII of manual call request, the UII is returned in the EARLY_UII notification.\n       */\n      AgentLibrary.prototype.manualOutdialCancel = function(uii) {\n        UIModel.getInstance().oneToOneOutdialCancelRequest = new OneToOneOutdialCancelRequest(\n          uii,\n        );\n        var msg = UIModel.getInstance().oneToOneOutdialCancelRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pause call recording\n       * @memberof AgentLibrary.Call\n       * @param {boolean} record Whether we are recording or not\n       * @param {function} [callback=null] Callback function when pause record response received\n       */\n      AgentLibrary.prototype.pauseRecord = function(record, callback) {\n        UIModel.getInstance().pauseRecordRequest = new PauseRecordRequest(\n          record,\n        );\n        var msg = UIModel.getInstance().pauseRecordRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.PAUSE_RECORD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a preview dial request to call lead based on request id and (optional) lead phone.\n       * Call previewFetch method first to get request id.\n       * @memberof AgentLibrary.Call\n       * @param {number} requestId Pending request id sent back with lead, required to dial lead.\n       * @param {number} [leadPhone=\"\"] Lead phone number. Only needed if there are multiple numbers loaded for given lead.\n       */\n      AgentLibrary.prototype.previewDial = function(requestId, leadPhone) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          '',\n          [],\n          requestId,\n          leadPhone,\n        );\n        var msg = UIModel.getInstance().previewDialRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a message to fetch preview dialable leads\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when preview fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.previewFetch = function(searchFields, callback) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          '',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().previewDialRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.PREVIEW_FETCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pull back leads that match search criteria\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when lead search completed, returns matched leads\n       */\n      AgentLibrary.prototype.searchLeads = function(searchFields, callback) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          'search',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().previewDialRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_SEARCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Set agent notes for a call\n       * @memberof AgentLibrary.Call\n       * @param {string} notes Agent notes to add to call\n       * @param {function} [callback=null] Callback function when call notes response received\n       */\n      AgentLibrary.prototype.setCallNotes = function(notes, callback) {\n        UIModel.getInstance().callNotesRequest = new CallNotesRequest(notes);\n        var msg = UIModel.getInstance().callNotesRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALL_NOTES, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Add a silent monitor session to a call, can hear all channels but can't be heard by any party\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when silent monitor response received\n       */\n      AgentLibrary.prototype.monitor = function(\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'MUTE',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SILENT_MONITOR, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Toggle call recording based on passed in boolean true | false\n       * @memberof AgentLibrary.Call\n       * @param {boolean} record Whether we are recording or not\n       * @param {function} [callback=null] Callback function when record response received\n       */\n      AgentLibrary.prototype.record = function(record, callback) {\n        UIModel.getInstance().recordRequest = new RecordRequest(record);\n        var msg = UIModel.getInstance().recordRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.RECORD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Requeue a call\n       * @memberof AgentLibrary.Call\n       * @param {number} queueId Queue Id to send the call to\n       * @param {number} skillId Skill Id for the requeued call\n       * @param {boolean} maintain Whether or not to maintain the current agent\n       * @param {function} [callback=null] Callback function when requeue response received\n       */\n      AgentLibrary.prototype.requeueCall = function(\n        queueId,\n        skillId,\n        maintain,\n        callback,\n      ) {\n        UIModel.getInstance().requeueRequest = new RequeueRequest(\n          queueId,\n          skillId,\n          maintain,\n        );\n        var msg = UIModel.getInstance().requeueRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.REQUEUE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a TCPA Safe call request to call lead based on request id and (optional) lead phone.\n       * Call safeModeFetch method first to get request id.\n       * @memberof AgentLibrary.Call\n       * @param {number} requestId Pending request id sent back with lead, required to dial lead.\n       * @param {number} [leadPhone=\"\"] Lead phone number. Only needed if there are multiple numbers loaded for given lead.\n       */\n      AgentLibrary.prototype.safeModeCall = function(requestId, leadPhone) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          '',\n          [],\n          requestId,\n          leadPhone,\n        );\n        var msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a message to fetch safe mode dialable leads\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when safe mode fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.safeModeFetch = function(searchFields, callback) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          '',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SAFE_MODE_FETCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pull back Safe Mode leads that match search criteria\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when safe mode fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.safeSearchLeads = function(\n        searchFields,\n        callback,\n      ) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          'search',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SAFE_MODE_SEARCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.internationalWarmXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().warmXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.warmXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n        );\n        var msg = UIModel.getInstance().warmXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel a warm transfer\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number that was transfered to\n       */\n      AgentLibrary.prototype.warmXferCancel = function(dialDest) {\n        UIModel.getInstance().warmXferCancelRequest = new XferWarmCancelRequest(\n          dialDest,\n        );\n        var msg = UIModel.getInstance().warmXferCancelRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.corporateDirWarmXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().warmXferRequest.formatJSON();\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when cold transfer response received\n       */\n      AgentLibrary.prototype.corporateDirColdXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().coldXferRequest.formatJSON();\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Requests a script object based on given id\n       * @memberof AgentLibrary.Call\n       * @param {number} scriptId Id of script\n       * @param {number} version The version number of the script, if the current loaded script version matches,\n       *                 just return current script. Otherwise, fetch new version of script.\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.getScript = function(scriptId, version, callback) {\n        var model = UIModel.getInstance();\n        var script = model.scriptSettings.loadedScripts[scriptId];\n        utils.setCallback(this, CALLBACK_TYPES.SCRIPT_CONFIG, callback);\n\n        if (script && script.version === version) {\n          // return from memory\n          var savedScript = UIModel.getInstance().scriptSettings.loadedScripts[\n            scriptId\n          ];\n          callback(savedScript);\n        } else {\n          // load script\n          model.scriptConfigRequest = new ScriptConfigRequest(scriptId);\n          var msg = UIModel.getInstance().scriptConfigRequest.formatJSON();\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Saves the results from a script\n       * @memberof AgentLibrary.Call\n       * @param {string} uii The UII of the call the script results belong to\n       * @param {number} scriptId Id of script\n       * @param {object} jsonResult JSON object of script results, name/value pairs\n       */\n      AgentLibrary.prototype.saveScriptResult = function(\n        uii,\n        scriptId,\n        jsonResult,\n      ) {\n        UIModel.getInstance().scriptResultRequest = new ScriptResultRequest(\n          uii,\n          scriptId,\n          jsonResult,\n        );\n        var msg = UIModel.getInstance().scriptResultRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get available list of agents available for Direct Transfer\n       * @memberof AgentLibrary.Call\n       */\n      AgentLibrary.prototype.directAgentXferList = function(callback) {\n        UIModel.getInstance().directAgentTransferListRequest = new DirectAgentTransferList();\n        var msg = UIModel.getInstance().directAgentTransferListRequest.formatJSON();\n\n        utils.setCallback(\n          this,\n          CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n          callback,\n        );\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer directly to an available agent from the directAgentXferList result and stay on the call\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.warmDirectAgentXfer = function(targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'WARM',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer directly to an available agent from the directAgentXferList result\n       * and terminate the current agents call session\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.coldDirectAgentXfer = function(targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'COLD',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel the request to transfer directly to an agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.cancelDirectAgentXfer = function(targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'CANCEL',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send the direct agent transfer straight to voicemail, avoid any attempts to connect to the target agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to receive the voicemail\n       */\n      AgentLibrary.prototype.voicemailDirectAgentXfer = function(\n        targetAgentId,\n      ) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'VOICEMAIL',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Reject a presented direct agent transfer, if WARM requesting agent will be notified to try again,\n       * if COLD a voicemail will be left for the target agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to receive the voicemail\n       */\n      AgentLibrary.prototype.rejectDirectAgentXfer = function(uii) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          '0',\n          'REJECT',\n          uii,\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryLead(context) {\n      /**\n       * @namespace Lead\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Get the history for a given lead\n       * @memberof AgentLibrary.Lead\n       * @param {number} leadId The lead id to retrieve history for\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadHistory = function(leadId, callback) {\n        UIModel.getInstance().leadHistoryRequest = new LeadHistoryRequest(\n          leadId,\n        );\n        var msg = UIModel.getInstance().leadHistoryRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_HISTORY, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Insert a lead to the given campaign\n       * @memberof AgentLibrary.Lead\n       * @param {object} dataObj agentId, campaignId, and lead info\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadInsert = function(dataObj, callback) {\n        UIModel.getInstance().leadInsertRequest = new LeadInsertRequest(\n          dataObj,\n        );\n        var msg = UIModel.getInstance().leadInsertRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_INSERT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Update lead information\n       * @memberof AgentLibrary.Lead\n       * @param {string} leadId Id for lead to update\n       * @param {string} leadPhone Lead phone number\n       * @param {object} baggage Object containing lead information\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadUpdate = function(\n        leadId,\n        leadPhone,\n        baggage,\n        callback,\n      ) {\n        UIModel.getInstance().leadUpdateRequest = new LeadUpdateRequest(\n          leadId,\n          leadPhone,\n          baggage,\n        );\n        var msg = UIModel.getInstance().leadUpdateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_UPDATE, callback);\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryChat(context) {\n      /**\n       * @namespace Chat\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Set the agent chat alias\n       * @memberof AgentLibrary.Chat\n       * @param {string} alias The alias string to be used for agent chat messages\n       * @deprecated\n       */\n      AgentLibrary.prototype.setChatAlias = function(alias) {\n        UIModel.getInstance().chatAliasRequest = new ChatAliasRequest(alias);\n        var msg = UIModel.getInstance().chatAliasRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to enter/exit a public chat room\n       * @memberof AgentLibrary.Chat\n       * @param {string} action \"ENTER\" | \"EXIT\"\n       * @param {number} roomId Chat room id\n       * @deprecated\n       */\n      AgentLibrary.prototype.publicChatRoom = function(action, roomId) {\n        UIModel.getInstance().chatRoomRequest = new ChatRoomRequest(\n          action,\n          'PUBLIC',\n          roomId,\n        );\n        var msg = UIModel.getInstance().chatRoomRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to enter/exit a private chat room\n       * @memberof AgentLibrary.Chat\n       * @param {string} action \"ENTER\" | \"EXIT\"\n       * @param {number} roomId Chat room id\n       * @param {number} agentOne Id for the logged in agent\n       * @param {number} agentTwo Id for the agent or supervisor the logged in agent is chatting with\n       * @deprecated\n       */\n      AgentLibrary.prototype.privateChatRoom = function(\n        action,\n        roomId,\n        agentOne,\n        agentTwo,\n      ) {\n        UIModel.getInstance().chatRoomRequest = new ChatRoomRequest(\n          action,\n          'PRIVATE',\n          roomId,\n          agentOne,\n          agentTwo,\n        );\n        var msg = UIModel.getInstance().chatRoomRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a chat message to the given room\n       * @memberof AgentLibrary.Chat\n       * @param {number} roomId Id for chat room\n       * @param {string} message The message to be sent\n       * @param {function} [callback=null] Callback function when chat message received\n       * @deprecated\n       */\n      AgentLibrary.prototype.sendChat = function(roomId, message, callback) {\n        UIModel.getInstance().chatSendRequest = new ChatSendRequest(\n          roomId,\n          message,\n        );\n        var msg = UIModel.getInstance().chatSendRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get list of supervisors for logged in agent\n       * @memberof AgentLibrary.Chat\n       * @param {function} [callback=null] Callback function when chat message received\n       * @deprecated\n       */\n      AgentLibrary.prototype.getSupervisors = function(callback) {\n        UIModel.getInstance().supervisorListRequest = new SupervisorListRequest();\n        var msg = UIModel.getInstance().supervisorListRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SUPERVISOR_LIST, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send accept/decline response when a chat is presented to an agent\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} messageId Id tied to chat presented notification which this response is connected to.\n       * @param {string} response ACCEPT|REJECT response\n       * @param {string} responseReason Agent reason for Reject\n       */\n      AgentLibrary.prototype.chatPresentedResponse = function(\n        uii,\n        messageId,\n        response,\n        responseReason,\n      ) {\n        UIModel.getInstance().chatPresentedRequest = new ChatPresentedResponseRequest(\n          uii,\n          messageId,\n          response,\n          responseReason,\n        );\n        var msg = UIModel.getInstance().chatPresentedRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send an external chat message\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId The agent associated with the chat\n       * @param {string} message The message sent by the agent\n       */\n      AgentLibrary.prototype.chatMessage = function(uii, agentId, message) {\n        UIModel.getInstance().chatMessageRequest = new ChatMessageRequest(\n          uii,\n          agentId,\n          message,\n          false,\n        );\n        var msg = UIModel.getInstance().chatMessageRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send an whisper type chat message\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId The agent associated with the chat\n       * @param {string} message The message sent by the agent\n       */\n      AgentLibrary.prototype.chatWhisper = function(uii, agentId, message) {\n        UIModel.getInstance().chatMessageRequest = new ChatMessageRequest(\n          uii,\n          agentId,\n          message,\n          true,\n        );\n        var msg = UIModel.getInstance().chatMessageRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a disposition to end a chat session\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {number} agentId The agent's id\n       * @param {number} dispositionId Id of the selected disposition\n       * @param {string} [notes=\"\"] Agent notes\n       * @param {boolean} sendAcknowlegement Whether or not to fire callback\n       * @param {object} [script=null] Script data associated with the chat session\n       * @param {number} sessionId Id for chat session\n       */\n      AgentLibrary.prototype.chatDisposition = function(\n        uii,\n        agentId,\n        dispositionId,\n        notes,\n        sendAcknowlegement,\n        script,\n        sessionId,\n      ) {\n        UIModel.getInstance().chatDispositionRequest = new ChatDispositionRequest(\n          uii,\n          agentId,\n          dispositionId,\n          notes,\n          sendAcknowlegement,\n          script,\n          sessionId,\n        );\n        var msg = UIModel.getInstance().chatDispositionRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send the chat to a different Chat Queue\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {number} agentId The agent's id\n       * @param {number} chatQueueId Id of the Chat Queue to requeue to\n       * @param {number} skillId Skill id associated with the Chat Queue\n       * @param {boolean} [maintainAgent=fakse] Whether or not to keep the current agent connected to the chat on requeue\n       */\n      AgentLibrary.prototype.chatRequeue = function(\n        uii,\n        agentId,\n        chatQueueId,\n        skillId,\n        maintainAgent,\n      ) {\n        UIModel.getInstance().chatRequeueRequest = new ChatRequeueRequest(\n          uii,\n          agentId,\n          chatQueueId,\n          skillId,\n          maintainAgent,\n        );\n        var msg = UIModel.getInstance().chatRequeueRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sent when agent starts/stops typing\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} message Pending Agent message - sent to any monitoring Supervisors\n       */\n      AgentLibrary.prototype.chatTyping = function(uii, message) {\n        UIModel.getInstance().chatTypingRequest = new ChatTypingRequest(\n          uii,\n          message,\n        );\n        var msg = UIModel.getInstance().chatTypingRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to add a session on an existing chat\n       * @memberof AgentLibrary.Chat\n       * @param {string} monitorAgentId Agent id handling this chat, the agent being monitored\n       */\n      AgentLibrary.prototype.monitorAgentChats = function(monitorAgentId) {\n        UIModel.getInstance().monitorChatRequest = new MonitorChatRequest(\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().monitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to stop a chat monitoring session for a specific agent\n       * @memberof AgentLibrary.Chat\n       * @param {string} monitorAgentId Agent id of agent being monitored\n       */\n      AgentLibrary.prototype.stopMonitoringChatsByAgent = function(\n        monitorAgentId,\n      ) {\n        UIModel.getInstance().stopMonitorChatRequest = new StopMonitorChatRequest(\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().stopMonitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to drop all chat monitoring sessions for the logged in agent\n       * @memberof AgentLibrary.Chat\n       */\n      AgentLibrary.prototype.stopMonitoringAllAgentChats = function() {\n        UIModel.getInstance().stopMonitorChatRequest = new StopMonitorChatRequest();\n        var msg = UIModel.getInstance().stopMonitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to terminate an active chat session\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId Current logged in agent id\n       * @param {string} sessionId Chat session id\n       */\n      AgentLibrary.prototype.leaveChat = function(uii, agentId, sessionId) {\n        UIModel.getInstance().leaveChatRequest = new LeaveChatRequest(\n          uii,\n          agentId,\n          sessionId,\n        );\n        var msg = UIModel.getInstance().leaveChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request a list of active chats by agent id\n       * @memberof AgentLibrary.Chat\n       * @param {string} agentId Current logged in agent id\n       * @param {string} monitorAgentId Agent id handling chats\n       * @param {function} [callback=null] Callback function when chat-list request received\n       */\n      AgentLibrary.prototype.chatList = function(\n        agentId,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().chatListRequest = new ChatListRequest(\n          agentId,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().chatListRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT_LIST, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * set chat in state of agent-chat-end\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId Current logged in agent id\n       */\n\n      AgentLibrary.prototype.chatAgentEnd = function(agentId, uii) {\n        UIModel.getInstance().chatAgentEnd = new ChatAgentEndRequest(\n          agentId,\n          uii,\n        );\n        var msg = UIModel.getInstance().chatAgentEnd.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends chat state change message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} chatState The base chat state <br />\n       * CHAT-AVAILABLE | CHAT-PRESENTED | CHAT-ENGAGED | CHAT-RNA\n       * @param {function} [callback=null] Callback function when chatState response received\n       */\n      AgentLibrary.prototype.setChatState = function(chatState, callback) {\n        UIModel.getInstance().chatStateRequest = new ChatStateRequest(\n          chatState,\n        );\n        var msg = UIModel.getInstance().chatStateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT_STATE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * initialize a chat session by sending a manual outbound sms\n       * @memberof AgentLibrary.Chat\n       * @param {string} agentId Current logged in agent id\n       * @param {number} chatQueueId Id of the Chat Queue to send this sms through\n       * @param {number} ani to receive the sms\n       * @param {number} dnis to be used for the sms\n       * @param {string} message content\n       */\n\n      AgentLibrary.prototype.sendManualOutboundSms = function(\n        agentId,\n        chatQueueId,\n        ani,\n        dnis,\n        message,\n      ) {\n        UIModel.getInstance().chatManualSms = new ChatManualSmsRequest(\n          agentId,\n          chatQueueId,\n          ani,\n          dnis,\n          message,\n        );\n        var msg = UIModel.getInstance().chatManualSms.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryLogger(context) {\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openLogger = function() {\n        var instance = this;\n\n        if ('indexedDB' in context) {\n          // Open database\n          var dbRequest = indexedDB.open('AgentLibraryLogging', 6); // version number\n\n          dbRequest.onerror = function(event) {\n            console.error('Error requesting DB access');\n          };\n\n          dbRequest.onsuccess = function(event) {\n            instance._db = event.target.result;\n\n            //prune items older than 2 days\n            instance.purgeLog(instance._db, 'logger');\n\n            instance._db.onerror = function(event) {\n              // Generic error handler for all errors targeted at this database requests\n              console.error(\n                'AgentLibrary: Database error - ' + event.target.errorCode,\n              );\n            };\n\n            instance._db.onsuccess = function(event) {\n              console.log('AgentLibrary: Successful logging of record');\n            };\n          };\n\n          // This event is only implemented in recent browsers\n          dbRequest.onupgradeneeded = function(event) {\n            instance._db = event.target.result;\n\n            // Create an objectStore to hold log information. Key path should be unique\n            if (!instance._db.objectStoreNames.contains('logger')) {\n              var objectStore = instance._db.createObjectStore('logger', {\n                autoIncrement: true,\n              });\n\n              // simple indicies: index name, index column path\n              objectStore.createIndex('logLevel', 'logLevel', {\n                unique: false,\n              });\n              objectStore.createIndex('dts', 'dts', { unique: false });\n\n              // index for logLevel and date range\n              var name = 'levelAndDate';\n              var keyPath = ['logLevel', 'dts'];\n              objectStore.createIndex(name, keyPath, { unique: false });\n            }\n          };\n        } else {\n          console.warn(\n            'AgentLibrary: indexedDB NOT supported by your Browser.',\n          );\n        }\n      };\n\n      /**\n       * Purge records older than 2 days from the AgentLibrary log\n       * @memberof AgentLibrary\n       */\n      AgentLibrary.prototype.purgeLog = function(db, store) {\n        var instance = this;\n\n        if (db) {\n          try {\n            var transaction = db.transaction([store], 'readwrite');\n            var objectStore = transaction.objectStore(store);\n            var dateIndex = objectStore.index('dts');\n            var endDate = new Date();\n            endDate.setDate(endDate.getDate() - 2); // two days ago\n\n            var range = IDBKeyRange.upperBound(endDate);\n            dateIndex.openCursor(range).onsuccess = function(event) {\n              var cursor = event.target.result;\n              if (cursor) {\n                objectStore.delete(cursor.primaryKey);\n                cursor.continue();\n              }\n            };\n          } catch (err) {\n            // no op\n          }\n        }\n      };\n\n      /**\n       * Clear the AgentLibrary log by emptying the IndexedDB object store\n       * @memberof AgentLibrary\n       */\n      AgentLibrary.prototype.clearLog = function(db) {\n        var transaction = db.transaction(['logger'], 'readwrite');\n        var objectStore = transaction.objectStore('logger');\n\n        var objectStoreRequest = objectStore.clear();\n\n        objectStoreRequest.onsuccess = function(event) {\n          console.log('AgentLibrary: logger database cleared');\n        };\n      };\n\n      AgentLibrary.prototype.deleteDB = function(dbName) {\n        dbName = dbName || 'AgentLibraryLogging';\n        var DBDeleteRequest = indexedDB.deleteDatabase(dbName);\n\n        DBDeleteRequest.onerror = function(event) {\n          console.log('Error deleting database.', dbName);\n        };\n\n        DBDeleteRequest.onsuccess = function(event) {\n          console.log('Database', dbName, 'deleted successfully');\n        };\n      };\n\n      AgentLibrary.prototype.getLogRecords = function(\n        logLevel,\n        startDate,\n        endDate,\n        maxRows,\n        callback,\n      ) {\n        logLevel = logLevel || '';\n        var instance = this;\n        var transaction = instance._db.transaction(['logger'], 'readonly');\n        var objStore = transaction.objectStore('logger');\n        var index = null,\n          cursor = null,\n          range = null,\n          limit = maxRows || 100;\n        utils.setCallback(instance, CALLBACK_TYPES.LOG_RESULTS, callback);\n\n        if (\n          logLevel !== '' &&\n          logLevel.toUpperCase() !== 'ALL' &&\n          logLevel.toUpperCase() !== 'NO-STATS'\n        ) {\n          // looking for specific log level type\n          if (startDate && endDate) {\n            var lowerBound = [logLevel.toLowerCase(), startDate];\n            var upperBound = [logLevel.toLowerCase(), endDate];\n            range = IDBKeyRange.bound(lowerBound, upperBound);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound([logLevel.toLowerCase(), startDate]);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound([logLevel.toLowerCase(), endDate]);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            var levelAndDateReturn = [];\n            var idxLevelAndDate = 0;\n            index = objStore.index('levelAndDate');\n            index.openCursor(range, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxLevelAndDate < limit) {\n                levelAndDateReturn.push(cursor.value);\n                idxLevelAndDate = idxLevelAndDate + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  levelAndDateReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all within log level\n            var logLevelReturn = [];\n            var idxLogLevel = 0;\n            index = objStore.index('logLevel');\n            index.openCursor(logLevel, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxLogLevel < limit) {\n                logLevelReturn.push(cursor.value);\n                idxLogLevel = idxLogLevel + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  logLevelReturn,\n                );\n              }\n            };\n          }\n        } else if (logLevel.toUpperCase() === 'NO-STATS') {\n          // give us all types except stats\n          if (startDate && endDate) {\n            range = IDBKeyRange.bound(startDate, endDate);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound(startDate);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound(endDate);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            var dtsNoStatsReturn = [];\n            var idxDTSNoStats = 0;\n            index = objStore.index('dts');\n\n            index.openCursor(range, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxDTSNoStats < limit) {\n                if (cursor.value.logLevel !== 'stats') {\n                  dtsNoStatsReturn.push(cursor.value);\n                  idxDTSNoStats = idxDTSNoStats + 1;\n                }\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  dtsNoStatsReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all records\n            var noStatsReturn = [];\n            var idxNoStats = 0;\n            objStore.openCursor().onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxNoStats < limit) {\n                if (cursor.value.logLevel !== 'stats') {\n                  noStatsReturn.push(cursor.value);\n                  idxNoStats = idxNoStats + 1;\n                }\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  noStatsReturn,\n                );\n              }\n            };\n          }\n        } else {\n          // give us all log level types\n          if (startDate && endDate) {\n            range = IDBKeyRange.bound(startDate, endDate);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound(startDate);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound(endDate);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            var dtsReturn = [];\n            var idxDTS = 0;\n            index = objStore.index('dts');\n\n            index.openCursor(range, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxDTS < limit) {\n                dtsReturn.push(cursor.value);\n                idxDTS = idxDTS + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  dtsReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all records\n            var allValsReturn = [];\n            var idxAll = 0;\n            objStore.openCursor().onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxAll < limit) {\n                allValsReturn.push(cursor.value);\n                idxAll = idxAll + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  allValsReturn,\n                );\n              }\n            };\n          }\n        }\n\n        return null;\n      };\n    }\n\n    function initAgentLibraryMultisocket(context) {\n      /**\n       * @namespace Multisocket\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Method to request call details from other tabs using the broadcast channel, for multisocket\n       */\n      AgentLibrary.prototype.loadCurrentCall = function(callback) {\n        broadcastChannelHelper.requestCurrentCall(callback);\n      };\n    }\n    function initAgentLibraryConsoleLogger(context) {\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openConsoleLogger = function() {\n        var instance = this;\n\n        if ('indexedDB' in context) {\n          var dbRequest = indexedDB.open('AgentLibraryConsoleLogging', 1);\n\n          dbRequest.onerror = function(event) {\n            console.error('Error requesting DB access');\n          };\n\n          dbRequest.onsuccess = function(event) {\n            instance._consoleDb = event.target.result;\n\n            //prune items older than 2 days\n            instance.purgeLog(instance._consoleDb, 'consoleLogger');\n\n            instance._consoleDb.onerror = function(event) {\n              // Generic error handler for all errors targeted at this database requests\n              console.error(\n                'AgentLibrary: Database error - ' + event.target.errorCode,\n              );\n            };\n\n            instance._consoleDb.onsuccess = function(event) {\n              console.log('AgentLibrary: Successful logging of record');\n            };\n\n            _overrideConsole();\n          };\n\n          // This event is only implemented in recent browsers\n          dbRequest.onupgradeneeded = function(event) {\n            instance._consoleDb = event.target.result;\n\n            // Create an objectStore to hold log information. Key path should be unique\n            if (\n              !instance._consoleDb.objectStoreNames.contains('consoleLogger')\n            ) {\n              var objectStore = instance._consoleDb.createObjectStore(\n                'consoleLogger',\n                { autoIncrement: true },\n              );\n\n              // simple indicies: index name, index column path\n              objectStore.createIndex('type', 'type', { unique: false });\n              objectStore.createIndex('dts', 'dts', { unique: false });\n              objectStore.createIndex('agentId', 'agentId', { unique: false });\n\n              // index for type and agent id\n              var name = 'typeAndAgent';\n              var keyPath = ['type', 'agentId'];\n              objectStore.createIndex(name, keyPath, { unique: false });\n            }\n\n            _overrideConsole();\n          };\n        } else {\n          console.warn(\n            'AgentLibrary: indexedDB NOT supported by your Browser.',\n          );\n        }\n      };\n\n      AgentLibrary.prototype.getConsoleLogRecords = function(type, callback) {\n        var agentId = UIModel.getInstance().agentSettings.agentId; // only return records for this agent id\n        var instance = this;\n        var transaction = instance._consoleDb.transaction(\n          ['consoleLogger'],\n          'readonly',\n        );\n        var objStore = transaction.objectStore('consoleLogger');\n        var index = null,\n          cursor = null,\n          range = null,\n          limit = 5000;\n\n        utils.setCallback(\n          instance,\n          CALLBACK_TYPES.LOG_CONSOLE_RESULTS,\n          callback,\n        );\n\n        var result = [];\n        if (type) {\n          // everything with this type\n          index = objStore.index('typeAndAgent');\n          range = IDBKeyRange.only([type.toUpperCase(), agentId]);\n        } else {\n          index = objStore.index('agentId');\n          range = IDBKeyRange.only(agentId);\n        }\n\n        var count = 0;\n        index.openCursor(range, 'prev').onsuccess = function(event) {\n          cursor = event.target.result;\n          if (cursor && count < limit) {\n            result.push(cursor.value);\n            count++;\n            cursor.continue();\n          } else {\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOG_CONSOLE_RESULTS,\n              result,\n            );\n          }\n        };\n      };\n\n      function _overrideConsole() {\n        // override the window.console functions, process as normal then save to the local db\n        var browserConsole = Object.assign({}, window.console);\n        (function(defaultConsole) {\n          var instance;\n          if (\n            UIModel &&\n            UIModel.getInstance() &&\n            UIModel.getInstance().libraryInstance\n          ) {\n            instance = UIModel.getInstance().libraryInstance;\n          } else {\n            // fallback\n            instance = new AgentLibrary();\n          }\n\n          var agentSettings = UIModel.getInstance().agentSettings;\n\n          function _getRecord(type, args) {\n            var result = [];\n            for (var i = 0; i < args.length; i++) {\n              var arg = args[i];\n              if (typeof arg === 'function') {\n                result.push(arg.toString());\n              } else if (typeof arg === 'object') {\n                try {\n                  result.push(JSON.stringify(arg));\n                } catch (e) {}\n              } else {\n                result.push(arg);\n              }\n            }\n\n            return {\n              type: type,\n              message: result.join(' '),\n              dts: new Date(),\n              agentId: agentSettings.agentId,\n              agentName: agentSettings.firstName + ' ' + agentSettings.lastName,\n            };\n          }\n\n          function _saveRecord(type, args) {\n            if (instance._consoleDb) {\n              var transaction = instance._consoleDb.transaction(\n                ['consoleLogger'],\n                'readwrite',\n              );\n              var store = transaction.objectStore('consoleLogger');\n\n              store.add(_getRecord(type, args));\n            }\n          }\n\n          window.console.log = function() {\n            defaultConsole.log.apply(this, arguments);\n            _saveRecord('LOG', arguments);\n          };\n          window.console.info = function() {\n            defaultConsole.info.apply(this, arguments);\n            _saveRecord('INFO', arguments);\n          };\n          window.console.warn = function() {\n            defaultConsole.warn.apply(this, arguments);\n            _saveRecord('WARN', arguments);\n          };\n          window.console.error = function() {\n            defaultConsole.error.apply(this, arguments);\n            _saveRecord('ERROR', arguments);\n          };\n        })(browserConsole);\n      }\n    }\n\n    function initAgentLibrarySoftphoneService(context) {\n      /**\n       * @namespace Softphone\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      //////////////////////\n      // PUBLIC FUNCTIONS //\n      //////////////////////\n      /* These functions are available externally to agent-js or other parent apps */\n\n      /**\n       * Initializes the SIP library, sets up callback functions\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipInit = function() {\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n\n        // if webRtc settings not yet set, do so now\n        if (\n          softphoneSettings.uri === '' ||\n          softphoneSettings.wsServers.length === 0 ||\n          softphoneSettings.displayName === '' ||\n          softphoneSettings.authorizationUser === ''\n        ) {\n          SoftphoneService.setupWebRtcServer();\n        }\n\n        if (softphoneSettings.wsServers.length > 0) {\n          var webRtc = new CFSimpleSip(_getSipConfig());\n\n          // callbacks\n          webRtc.on('connected', _connected);\n          webRtc.on('ended', _ended);\n          webRtc.on('registered', _registered);\n          webRtc.on('unregistered', _unregistered);\n          webRtc.on('registrationFailed', _registrationFailed);\n          webRtc.on('ringing', _ringing);\n          webRtc.on('mute', _mute);\n          webRtc.on('unmute', _unmute);\n\n          // after 15 sec of no registration response, rotate the registrar\n          softphoneSettings.registerPending = setTimeout(\n            _handleNoRegisterResponse,\n            15 * 1000,\n          );\n          softphoneSettings.webRtc = webRtc; // set back on the UIModel instance\n        } else {\n          console.error('Unable to setup WebRtc server');\n        }\n      };\n\n      /**\n       * clear webRtc settings, hangup, unregister\n       * @memberof AgentLibrary.Softphone\n       * @returns boolean - success state\n       */\n      AgentLibrary.prototype.sipTerminate = function() {\n        var model = UIModel.getInstance();\n        var webRtc = model.softphoneSettings.webRtc;\n        if (webRtc && webRtc.ua) {\n          var opts = {\n            all: true,\n          };\n          model.libraryInstance.offhookTerm(); // TODO - dlb - set up callback with agent-js??\n          webRtc.hangup();\n          webRtc.ua.unregister(opts);\n\n          webRtc.removeAllListeners('connected');\n          webRtc.removeAllListeners('ended');\n          webRtc.removeAllListeners('registered');\n          webRtc.removeAllListeners('unregistered');\n          webRtc.removeAllListeners('registrationFailed');\n          webRtc.removeAllListeners('ringing');\n          webRtc.removeAllListeners('mute');\n          webRtc.removeAllListeners('unmute');\n\n          webRtc.ua.stop();\n          webRtc = null;\n          model.softphoneSettings.webRtc = webRtc; // set back on model\n          model.softphoneSettings.isRegistered = false;\n          model.softphoneSettings.muteActive = false;\n          model.softphoneSettings.registerPending = null;\n          model.softphoneSettings.uri = '';\n\n          return true;\n        }\n\n        console.warn('sipTerminate: sip rtc settings or ua missing', webRtc);\n        return false;\n      };\n\n      /**\n       * Sends a session.accept response to a SIP invite event.\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipAnswer = function() {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc) {\n          webRtc.answer();\n        }\n      };\n\n      /**\n       * Sends a session.reject response to a SIP invite event.\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipReject = function() {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc && webRtc.reject) {\n          webRtc.reject();\n        }\n      };\n\n      /**\n       * Request microphone access, if already registered, call hangup\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipRegister = function() {\n        var model = UIModel.getInstance();\n        var webRtc = model.softphoneSettings.webRtc;\n\n        try {\n          // enable microphone access notification if not already done\n          if (\n            window.webkitNotifications &&\n            window.webkitNotifications.checkPermission() !== 0\n          ) {\n            window.webkitNotifications.requestPermission();\n          }\n\n          if (!webRtc) {\n            return;\n          }\n\n          // if already registered, hangup\n          if (model.softphoneSettings.isRegistered) {\n            model.libraryInstance.sipHangUp();\n          }\n        } catch (e) {\n          console.error('sip reg error:' + e);\n        }\n      };\n\n      /**\n       * Sends session.cancel if connected, or session.bye if not connected to a call\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipHangUp = function() {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc && webRtc.hangup) {\n          webRtc.hangup();\n        }\n      };\n\n      /**\n       * Sends session.dtmf for the tone specified\n       * @memberof AgentLibrary.Softphone\n       * @param {string} dtmf The dtmf tone to send\n       */\n      AgentLibrary.prototype.sipSendDTMF = function(dtmf) {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc) {\n          webRtc.sendDTMF(dtmf);\n        }\n      };\n\n      /**\n       * Toggles call audio on/off\n       * @memberof AgentLibrary.Softphone\n       * @param {boolean} state The dtmf tone to send\n       */\n      AgentLibrary.prototype.sipToggleMute = function(state) {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        var webRtc = softphoneSettings.webRtc;\n        var muteActive = softphoneSettings.muteActive;\n\n        if (webRtc) {\n          if (muteActive || state === false) {\n            webRtc.unmute();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SIP_UNMUTE,\n              { message: 'Call unmuted' },\n            );\n          } else {\n            webRtc.mute();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SIP_MUTE,\n              { message: 'Call muted' },\n            );\n          }\n        }\n      };\n\n      AgentLibrary.prototype.switchSoftphoneRegistrar = function(\n        maintainOffhook,\n        autoStartOffhook,\n      ) {\n        var model = UIModel.getInstance();\n\n        if (typeof autoStartOffhook === 'undefined') {\n          autoStartOffhook = true;\n        }\n        if (\n          model.softphoneSettings.attemptingSoftphoneReconnect &&\n          autoStartOffhook\n        ) {\n          _updateOHFlags(maintainOffhook, autoStartOffhook);\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_SWITCH_REGISTRAR,\n            {\n              message: 'Updating offhook flags, set status message',\n              status: 'UPDATE',\n            },\n          );\n        } else {\n          model.libraryInstance.resetSoftphoneSession({\n            maintainOH: maintainOffhook,\n            autoStartOH: autoStartOffhook,\n          });\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_SWITCH_REGISTRAR,\n            { message: 'Triggering softphone registrar swap', status: 'RESET' },\n          );\n        }\n      };\n\n      AgentLibrary.prototype.resetSoftphoneSession = function(offhookParams) {\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n        if (\n          softphoneSettings.isRegistered &&\n          !softphoneSettings.attemptingSoftphoneReconnect\n        ) {\n          model.libraryInstance.sipTerminate(); // clear current SIP.js object\n          _rotateWebRtcServer();\n          SoftphoneService.setupWebRtcServer();\n\n          if (offhookParams) {\n            if (offhookParams.maintainOH === 'null') {\n              offhookParams.maintainOH = softphoneSettings.maintainOH; // default to model setting\n            }\n            _updateOHFlags(offhookParams.maintainOH, offhookParams.autoStartOH);\n          }\n\n          model.libraryInstance.sipInit();\n          model.libraryInstance.sipRegister();\n        }\n      };\n\n      ////////////////////////\n      // INTERNAL FUNCTIONS //\n      ////////////////////////\n      /* These functions are globally available to the AgentSDK app */\n\n      var SoftphoneService = {\n        setupWebRtcServer: function() {\n          var model = UIModel.getInstance();\n          var softphoneSettings = model.softphoneSettings;\n\n          // webRtcServerInfo format for Legacy\n          // [\n          //     {\n          //        \"transport\": \"wss\",\n          //        \"username\": \"yadvendra_agent\",\n          //        \"password\": \"oct@2018\",\n          //        \"domain\": \"d03-reg1.vacd.biz\",\n          //        \"outboundProxy\": \"d03-reg1.vacd.biz:8089/freeswitch\"\n          //    }\n          // ]\n          //\n          // webRtcServerInfo format for RC Int API\n          // [\n          //     {\n          //        \"transport\": \"WSS\",\n          //        \"username\": \"18662032059*101\",\n          //        \"password\": \"B77O85vO\",\n          //        \"authorizationId\": \"400017513008\",\n          //        \"domain\": \"sip-cfintams.lab.nordigy.ru\",\n          //        \"outboundProxy\": \"webphone-sip-cfintams.lab.nordigy.ru:8083\"\n          //    }\n          // ]\n          var sipInfo = _getCurrentWebRtcServerInfo();\n          if (sipInfo !== null) {\n            var username = sipInfo.username.toLowerCase();\n            var webRtcServer =\n              sipInfo.transport.toLowerCase() + '://' + sipInfo.outboundProxy; // e.g. \"wss://aws87-f06-ccw01.vacd.biz:8089/freeswitch\";\n\n            softphoneSettings.uri =\n              utils.escapeSoftphoneUsername(username) + '@' + sipInfo.domain;\n            softphoneSettings.wsServers = [webRtcServer];\n            softphoneSettings.displayName = username;\n            softphoneSettings.authorizationUser = sipInfo.authorizationId;\n\n            softphoneSettings.sipPassword = sipInfo.password;\n            softphoneSettings.sipDialDest = 'sip:' + softphoneSettings.uri;\n\n            return {\n              webRtcServer: webRtcServer,\n              username: username,\n              password: softphoneSettings.sipPassword,\n              domain: sipInfo.domain || null,\n              dialDest: softphoneSettings.sipDialDest || null,\n              uri: softphoneSettings.uri || null,\n              wsServers: softphoneSettings.wsServers || [],\n            };\n          }\n\n          return null;\n        },\n      };\n\n      ///////////////////////\n      // PRIVATE FUNCTIONS //\n      ///////////////////////\n      /* These functions are just used within this softphoneService.js file */\n\n      function _getSipConfig() {\n        var remoteAudioElement = document.getElementById('remoteAudio'), // audio node on index.html\n          model = UIModel.getInstance(),\n          softphoneSettings = model.softphoneSettings,\n          config = {\n            media: {\n              remote: {\n                audio: remoteAudioElement,\n              },\n            },\n            ua: {\n              displayName: utils.escapeSoftphoneUsername(\n                softphoneSettings.displayName,\n              ),\n              authorizationUser: utils.escapeSoftphoneUsername(\n                softphoneSettings.authorizationUser,\n              ),\n              password: softphoneSettings.sipPassword,\n              uri: softphoneSettings.uri,\n              wsServers: softphoneSettings.wsServers,\n              traceSip: true,\n              registerExpires: 60,\n              userAgentString: navigator.userAgent,\n            },\n          };\n        return config;\n      }\n\n      function _handleNoRegisterResponse() {\n        // registration timeout reached, rotate registrar\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n\n        // we want to force a registrar refresh\n        softphoneSettings.isRegistered = true;\n\n        model.libraryInstance.switchSoftphoneRegistrar(\n          softphoneSettings.maintainOH,\n          softphoneSettings.autoStartOH,\n        );\n      }\n\n      // clear registration timeout\n      function _registerHasResponse() {\n        clearTimeout(UIModel.getInstance().softphoneSettings.registerPending);\n      }\n\n      function _rotateWebRtcServer() {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        var sipInfo = softphoneSettings.sipInfo;\n        if (sipInfo.length > 1) {\n          sipInfo.push(sipInfo.shift());\n          softphoneSettings.attemptingSoftphoneReconnect = true;\n        }\n      }\n\n      function _updateOHFlags(maintainOffhook, autoStartOffhook) {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        softphoneSettings.maintainOH = maintainOffhook;\n        softphoneSettings.autoStartOH = autoStartOffhook;\n      }\n\n      function _getCurrentWebRtcServerInfo() {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        return softphoneSettings.sipInfo != null &&\n          softphoneSettings.sipInfo.length > 0\n          ? softphoneSettings.sipInfo[0]\n          : null;\n      }\n\n      ///////////////////////////////\n      // SIP JS CALLBACK FUNCTIONS //\n      ///////////////////////////////\n      /* These functions bubble up SIP callbacks to the UI */\n\n      function _connected() {\n        // send response to agent-js\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_CONNECTED,\n          { message: 'SIP connected' },\n        );\n      }\n\n      function _ended() {\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_ENDED,\n          { message: 'SIP ended' },\n        );\n      }\n\n      function _registered() {\n        var model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = true;\n\n        // check if dial destination has changed to a new registrar,\n        // but not just with the IQ replacement of @RC_SOFTPHONE\n        if (\n          model.agentSettings.dialDest !==\n            model.softphoneSettings.sipDialDest &&\n          model.agentSettings.dialDest.indexOf('@RC_SOFTPHONE') === -1\n        ) {\n          // update agent dial dest on instance\n          model.agentSettings.dialDest = JSON.parse(\n            JSON.stringify(model.softphoneSettings.sipDialDest),\n          );\n\n          // notify agent of change\n          var responseObj = {\n            message: 'SIP dial destination changed',\n            dialDest: model.agentSettings.dialDest,\n            maintainOH: model.softphoneSettings.maintainOH,\n            autoStartOH: model.softphoneSettings.autoStartOH,\n          };\n\n          if (!model.softphoneSettings.autoStartOH) {\n            model.softphoneSettings.attemptingSoftphoneReconnect = false; // done with reconnect steps for now\n          }\n\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_DIAL_DEST_CHANGED,\n            responseObj,\n          );\n\n          // update dial destination on agent login record, send request to IQ\n          model.libraryInstance.updateDialDestination(\n            model.agentSettings.dialDest,\n            true,\n          );\n        }\n\n        utils.fireCallback(\n          model.libraryInstance,\n          CALLBACK_TYPES.SIP_REGISTERED,\n          { message: 'SIP registered' },\n        );\n      }\n\n      function _unregistered() {\n        var model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = false;\n        model.libraryInstance.sipTerminate();\n        model.libraryInstance.sipInit();\n      }\n\n      function _registrationFailed() {\n        var model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = false;\n        model.libraryInstance.sipTerminate();\n      }\n\n      function _ringing(notif) {\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_RINGING,\n          { message: 'SIP ringing', data: notif },\n        );\n      }\n\n      function _mute() {\n        UIModel.getInstance().softphoneSettings.muteActive = true;\n      }\n\n      function _unmute() {\n        UIModel.getInstance().softphoneSettings.muteActive = false;\n      }\n    }\n\n    var initAgentLibrary = function(context) {\n      initAgentLibraryCore(context);\n      initAgentLibrarySocket(context);\n      initAgentLibraryAgent(context);\n      initAgentLibraryCall(context);\n      initAgentLibraryLead(context);\n      initAgentLibraryChat(context);\n      initAgentLibraryLogger(context);\n      initAgentLibraryConsoleLogger(context);\n      initAgentLibrarySoftphoneService(context);\n      initAgentLibraryMultisocket(context);\n\n      return context.AgentLibrary;\n    };\n    return initAgentLibrary(this);\n  }.call(this, this);\n}.call(window));\n"],"file":"agentLibrary.js"}