{"version":3,"sources":["lib/EvClient/__SDK__/agentLibrary.js"],"names":["localStorage","window","C","STATUS_NULL","STATUS_NEW","STATUS_CONNECTING","STATUS_CONNECTED","STATUS_COMPLETED","CFSimpleSip","options","media","remote","video","audio","Error","browserUa","navigator","userAgent","toLowerCase","isSafari","isFirefox","indexOf","sessionDescriptionHandlerFactoryOptions","modifiers","SIP","Web","Modifiers","stripG722","alwaysAcquireMediaFirst","addMidLines","ua","uri","anonymous","UA","authorizationUser","password","displayName","userAgentString","USER_AGENT","register","registerExpires","transportOptions","traceSip","wsServers","maxReconnectionAttempts","dtmfType","RTP","state","logger","getLogger","on","emit","bind","session","warn","reject","setupSession","message","prototype","Object","create","EventEmitter","call","destination","checkRegistration","autoplay","local","volume","invite","sessionDescriptionHandlerOptions","constraints","answer","accept","hangup","cancel","bye","hold","local_hold","mute","log","unhold","unmute","toggleMute","sendDTMF","tone","dtmf","isRegistered","setupRemoteMedia","pc","sessionDescriptionHandler","peerConnection","remoteStream","getReceivers","MediaStream","forEach","receiver","track","addTrack","getRemoteStreams","srcObject","play","setupLocalMedia","localStream","getSenders","sender","kind","getLocalStreams","cleanupMedia","pause","onProgress","onAccepted","onEnded","onFailed","destroyMedia","close","enabled","stream","getAudioTracks","getVideoTracks","global","AddSessionNotification","processResponse","notification","formattedResponse","utils","buildDefaultResponse","model","UIModel","getInstance","notif","ui_notification","sessionAgentId","getText","incrementTotalCalls","agentSettings","agentId","currentCall","sessionId","monitorAgentId","sessionType","allowControl","uii","isMonitoring","monitoringType","isBargeInMonitor","notCurrentAgent","notSessionOne","shouldTrackSession","transferSessions","session_id","onCall","status","phone","sessionLabel","monitoring","AdminDebugEmailNotification","emailTo","requestedBy","DialGroupChangeNotification","origLoginType","loginRequest","loginType","newDgId","dialGroupChangeNotification","dialGroupId","detail","dialGroupName","dialGroupDesc","DialGroupChangePendingNotification","pendingDialGroupChange","parseInt","update_from_adminui","updateDGFromAdminUI","updateFromAdminUI","DirectAgentTransferNotification","ani","dnis","sourceType","sourceId","sourceName","voicemailUrl","DropSessionNotification","transfer","logMessage","LOG_LEVELS","DEBUG","transferEnd","EarlyUiiNotification","EndCallNotification","libInstance","endCallNotification","duration","termParty","termReason","callState","onManualOutdial","loginAgent","queueIds","configRequest","chatIds","skillProfileId","dialDest","outdialDispositions","dispositions","length","surveyPopType","pingIntervalId","setInterval","sendPingCallMessage","callDts","recordingUrl","dispositionTimeout","GatesChangeNotification","newAssignedGates","availableQueues","inboundSettings","assignedGateIds","split","a","id","foundGate","findObjById","push","gate","gateId","gateName","gateDesc","defaultDestOverride","isAgentSelectable","queues","JSON","parse","stringify","GenericNotification","messageCode","NewCallNotification","newCall","queueDts","queueTime","callType","appUrl","allowHold","allowTransfer","allowManualInternationalTransfer","allowDirectAgentTransfer","allowHangup","allowRequeue","allowEndCallForEveryone","scriptId","scriptVersion","surveyId","requeueType","hangupOnDisposition","queue","processResponseCollection","agentRecording","requeueShortcuts","baggage","surveyResponse","scriptResponse","transferPhoneBook","lead","extra_data","extraDatas","extraData","key","e","console","customLabels","notifLabels","custom_labels","result","savedModel","script_result","results","keys","idx","value","err","entrys","disposition","isCampaign","d","disp","isComplete","requireNote","saveSurvey","xfer","isDefault","callTokens","buildCallTokenMap","auxPhone","transferNumber","agentDailyStats","currCallTime","tokens","generic_key_value_pairs","keyValuePairs","keyValuePairsStr","parseKeyValuePairsFromString","keyValue","number","name","sourceDesc","description","any","error","agentFirstName","firstName","agentLastName","lastName","agentExternalId","externalAgentId","agentType","agentEmail","email","agentUserName","username","PendingChatDispNotification","PendingDispNotification","PreviewLeadStateNotification","response","messageId","requestId","leadState","callback","ReverseMatchNotification","first_name","mid_name","last_name","address1","address2","suffix","title","city","zip","business_name","TcpaSafeLeadStateNotification","AckRequest","audioType","resp","ui_response","type","WARN","AgentStateRequest","agentState","agentAuxState","toUpperCase","formatJSON","msg","ui_request","MESSAGE_TYPES","AGENT_STATE","getMessageId","response_to","agent_id","agent_aux_state","prevState","currState","prevAuxState","currAuxState","previousState","currentState","previousAuxState","currentAuxState","prevStateStr","currStateStr","currentStateLabel","agentStatePacket","AuthenticateRequest","config","platformId","rcAccessToken","tokenType","engageAccessToken","authType","sendHttpRequest","authenticateRequest","AUTHENTICATE_TYPES","USERNAME_PASSWORD","_buildHttpRequest","RC_TOKEN","rcTokenType","ENGAGE_TOKEN","authenticatePacket","accessToken","refreshToken","socketUrl","iqUrl","socketPort","port","agents","agentDetails","path","queryParams","baseUrl","authHost","baseAuthUri","params","headers","errorMsg","HttpService","httpPost","then","authenticateResponse","fireCallback","libraryInstance","CALLBACK_TYPES","AUTHENTICATE","errResponse","errMsg","Authorization","toString","httpGet","BargeInRequest","BARGE_IN","audio_state","monitor_agent_id","CallNotesRequest","notes","CALL_NOTES","CallbackCancelRequest","leadId","CALLBACK_CANCEL","lead_id","CallbacksPendingRequest","CALLBACK_PENDING","leadsRaw","leads","Array","isArray","l","leadRaw","parseLead","pendingCallbacks","auxData1","auxData2","auxData3","auxData4","auxData5","dialTime","externId","midName","sufix","gateKeeper","CampaignDispositionsRequest","campaignId","CAMPAIGN_DISPOSITIONS","campaign_id","outboundSettings","campaignDispositions","ChatStateRequest","chatState","CHAT_STATE","currentChatState","chatStatePacket","XferColdRequest","callerId","sipHeaders","countryId","fields","i","fieldObj","XFER_COLD","dial_dest","caller_id","country_id","xfer_header","DirectAgentTransfer","targetAgentId","transferType","DIRECT_AGENT_TRANSFER","target_agent_id","transfer_type","DirectAgentTransferList","DIRECT_AGENT_TRANSFER_LIST","DispositionRequest","dispId","callbackDTS","contactForwardNumber","survey","OUTDIAL_DISPOSITION","disposition_id","call_back","call_back_DTS","contact_forwarding","outbound_externid","pending_request_id","INBOUND_DISPOSITION","obj","leadField","DispositionManualPassRequest","manual_disp","request_key","extern_id","ExtensionPresenceRequest","getExtensionPresenceInfo","extensionIds","_getExtensionPresenceInfo","extensionPresenceResponse","baseApiUri","extensionPresenceRequest","EXTENSION_PRESENCE","HangupRequest","resetPendingDisp","HANGUP","cancel_pending_disp","HoldRequest","holdState","HOLD","hold_state","currUII","onHold","LeadHistoryRequest","LEAD_HISTORY","histResponse","history","leadHistory","LeadInsertRequest","dataObj","agent_reserved","dialable","LEAD_INSERT","lead_phone","call_back_dts","callback_dts","gate_keeper","aux_data1","aux_data2","aux_data3","aux_data4","aux_data5","LeadUpdateRequest","leadPhone","_formatBaggage","LEAD_UPDATE","bag","LoginRequest","isForce","updateLogin","checkExistingIds","chatSettings","availableChatQueues","availableSkillProfiles","availableOutdialGroups","isLoggedIn","validateDest","LOGIN","access_token","hash_code","connectionSettings","hashCode","allow_multisocket","applicationSettings","allowMultiSocket","login_type","update_login","outdial_group_id","skill_profile_id","agent_platform_id","is_force","gates","gate_id","chat_queues","chat_queue_id","Lib","updateLoginMode","INFO","loginPacket","loginDTS","Date","reconnect","agentPermissions","allowLeadSearch","accountId","corporateDirectory","isMultiSocket","broadcastChannelHelper","init","setDialGroupSettings","setGateSettings","setChatQueueSettings","setSkillProfileSettings","requireFetchedLeadsCalled","allowPreviewLeadFilters","isOnCall","activeCallUii","isPendingDisp","mockEndCallPacket","term_reason","processNotification","isOffhook","offHookTermPacket","agentProcessOffhookCallback","offhookTerm","waitingForAddSession","pendingDisp","activeAgentUiSessions","getTransferSessions","activeAgentSessions","active_call_sessions","call_session_id","map","sessionObj","transferSession","guid","dataStore","save","scriptSettings","outdialGroups","outdialGroup","g","group","progressiveEnabled","skillProfile","skillProfiles","s","profile","responseId","profileId","selectedGateIds","selectedGates","gateIds","gIdx","chatQueues","selectedChatQueueIds","selectedChatQueues","cQueues","chatQueueIds","c","cIdx","chatQueue","chatQueueId","LoginPhase1Request","LOGIN_PHASE_1","isLoggedInIS","loginPhase1Packet","isSso","isTcpaSafeMode","pciEnabled","alias","maxBreakTime","maxLunchTime","realAgentType","defaultLoginDest","altDefaultLoginDest","initLoginState","initLoginStateLabel","outboundManualDefaultRingtime","isOutboundPrepay","phoneLoginPin","agentPassword","allowCallControl","allowChat","showLeadHistory","allowManualOutboundGates","allowOffHook","allowManualCalls","allowManualPass","allowManualIntlCalls","allowLoginUpdates","allowInbound","allowOutbound","allowBlended","allowLoginControl","allowCrossQueueRequeue","disableSupervisorMonitoring","allowAutoAnswer","defaultAutoAnswerOn","allowHistoricalDialing","allowAgentStats","allowCampaignStats","allowGateStats","allowChatStats","enableFolderMode","enableTaskMode","defaultDialGroup","allow_lead_inserts","insert_campaigns","campaign","allowLeadInserts","availableCampaigns","_processCampaigns","_processChatQueueDnis","availableChatRequeueQueues","availableRequeueQueues","availableChatRooms","availableScripts","callerIds","availableAgentStates","availableCountries","insertCampaigns","dialGroups","dg","hciType","hciEnabled","hciClicker","campaigns","campaignsRaw","_processCampaign","campaignRaw","allowLeadUpdates","allowLeadUpdatesByCampaign","labelArray","p","label","replace","campaignName","surveyName","rawQueues","login_chat_queues","chat_queue","rawQueue","j","rq","LogoutRequest","LOGOUT","MultiSocketRequest","LOGIN_MULTISOCKET","get","OffhookInitRequest","OFFHOOK_INIT","offhookInitPacket","softphoneSettings","attemptingSoftphoneReconnect","OffhookTermRequest","OFFHOOK_TERM","data","wasMonitoring","offhookTermPacket","startDts","endDts","OneToOneOutdialRequest","ringTime","ONE_TO_ONE_OUTDIAL","ring_time","OneToOneOutdialCancelRequest","ONE_TO_ONE_OUTDIAL_CANCEL","PauseRecordRequest","record","pauseTime","PAUSE_RECORD","PingCallRequest","PING_CALL","PreviewDialRequest","action","searchFields","PREVIEW_DIAL","search_fields","dialer_request","requestKey","destinations","notifLead","filter","destLead","callbacks","isInsert","previewDialLeads","RecordRequest","RECORD","RequeueRequest","queueId","skillId","maintain","REQUEUE","gate_number","skill_id","maintain_agent","ScriptConfigRequest","version","SCRIPT_CONFIG","script_id","json","loadedScripts","ScriptResultRequest","jsonResult","SCRIPT_RESULT","json_result","SearchDirectoryRequest","searchDirectory","searchString","searchDirectoryRequest","_searchDirectory","filteredDirectory","searchDirResponse","SEARCH_DIR","StatsRequest","STATS","TcpaSafeRequest","TCPA_SAFE","tcpaSafeLeads","UpdateDialDestinationRequest","isSoftphoneError","UPDATE_DIAL_DESTINATION","log_softphone_error","XferWarmRequest","XFER_WARM","XferWarmCancelRequest","XFER_WARM_CANCEL","WebRTCRequest","getSipRegistrationInfo","_getSipRegistrationInfo","sipInfo","webRTCResponse","WEBRTC_INFO","ChatAgentEndRequest","CHAT_AGENT_END","ChatAliasRequest","CHAT_ALIAS","ChatDispositionRequest","dispositionId","sendAcknowlegement","CHAT_DISPOSITION","do_ack","ChatListRequest","CHAT_LIST","chatListResponse","chatList","ChatMessageRequest","whisper","CHAT_MESSAGE","dts","trim","dtsDate","from","dequeueAgentId","mediaLinks","ChatPresentedResponseRequest","responseReason","CHAT_PRESENTED_RESPONSE","response_reason","ChatRequeueRequest","maintainAgent","CHAT_REQUEUE","ChatRoomRequest","roomType","roomId","agentOne","agentTwo","CHAT_ROOM","agent_one","agent_two","room_id","ChatRoomStateRequest","chatAlias","ChatSendRequest","CHAT_SEND","senderId","roomName","dynamicCreate","ChatTypingRequest","CHAT_TYPING","LeaveChatRequest","LEAVE_CHAT","ChatManualSmsRequest","CHAT_MANUAL_SMS","MonitorChatRequest","MONITOR_CHAT","StopMonitorChatRequest","STOP_MONITOR_CHAT","monitoredAgentId","SupervisorListRequest","SUPERVISOR_LIST","tempList","supervisors","sup","fname","lname","uname","ChatClientReconnectNotification","AddChatSessionNotification","transcript","ChatActiveNotification","ChatCancelledNotification","ChatInactiveNotification","ChatPresentedNotification","channelType","chatQueueName","allowAccept","ChatTypingNotification","pendingMessage","NewChatNotification","newChat","chatRequeueType","idleTimeout","preChatData","chatDispositions","messages","ERROR","isSuccess","t","buildChatTokenMap","prop","hasOwnProperty","AgentStats","stats","ui_stats","agent","agentStats","agentLoginType","avgTalkTime","calls","isDequeueAgent","defaultRoute","queueDesc","queueName","loginDuration","offHook","pendingDispTime","presented","rna","stateDuration","skillProfileName","totalTalkTime","utilization","callDuration","AgentDailyStats","totalLoginSessions","totalChatsHandled","totalCallsHandled","totalPreviewDials","totalManualDials","totalRna","totalSuccessDispositions","totalLoginTime","totalOffhookTime","CampaignStats","totals","campRaw","active","abandon","available","busy","complete","fax","intercept","machine","noanswer","pending","ready","staffed","totalConnects","campaignStats","ChatQueueStats","chatQueueStats","QueueStats","gateRaw","asa","avgAbandon","avgQueue","avgTalk","deflected","inQueue","longCall","longestInQueue","routing","shortAbandon","shortCall","sla","slaPass","slaFail","tAbandonTime","tQueueTime","tSpeedOfAnswer","queueStats","instance","pendingNewCallSessions","statsIntervalId","pingStatIntervalId","agentDailyIntervalId","reconnectIntervalId","location","origin","socketProtocol","chatAliasRequest","chatRoomRequest","chatSendRequest","supervisorListRequest","chatRoomStateRequest","multiSocketRequest","LocalStorageService","chatActiveNotification","chatInactiveNotification","chatDispositionRequest","chatMessageRequest","chatPresentedNotification","chatPresentedRequest","chatRequeueRequest","chatTypingNotification","chatTypingRequest","newChatNotification","chatClientReconnectNotification","agentStateRequest","chatStateRequest","ackRequest","bargeInRequest","callNotesRequest","callbacksPendingRequest","campaignDispositionsRequest","coldXferRequest","dispositionRequest","dispositionManualPassRequest","hangupRequest","holdRequest","leadHistoryRequest","leadInsertRequest","leadUpdateRequest","logoutRequest","loginPhase1Request","offhookInitRequest","offhookTermRequest","oneToOneOutdialRequest","oneToOneOutdialCancelRequest","pauseRecordRequest","pingCallRequest","previewDialRequest","reconnectRequest","recordRequest","requeueRequest","statsRequest","tcpaSafeRequest","warmXferRequest","warmXferCancelRequest","chatListRequest","directAgentTransferListRequest","directAgentTransferRequest","webRTCRequest","currentCallPacket","addSessionNotification","dialGroupChangePendingNotification","dropSessionNotification","earlyUiiNotification","gatesChangeNotification","genericNotification","newCallNotification","agentStatsPacket","agentDailyStatsPacket","queueStatsPacket","campaignStatsPacket","chatQueueStatsPacket","socketConnected","socketDest","dialDestType","totalCalls","webRtc","muteActive","registerPending","maintainOH","autoStartOH","sipPassword","sipDialDest","rcAccountId","records","resetInstance","prefix","setItem","getItem","remove","removeItem","requestChannel","responseChannel","currentCallMessageId","currentCallRequestCallback","self","BroadcastChannel","onmessage","_sendCurrentCall","_processCurrentCallResponse","destroy","requestCurrentCall","fn","Math","random","postMessage","apiBase","XMLHttpRequest","encodeURIComponent","that","Promise","resolve","req","_getUriEncodedParams","open","_addHeaders","_addCompletionListeners","send","_getUriEncodedBody","_isObj","setRequestHeader","addEventListener","responseText","contentType","body","join","NewCallUtils","setupAddSessionCallback","sessionUii","_delayedAddSessionCallback","processSessionsForCall","delayedSessions","addSessionNotif","addResponse","ADD_SESSION","logLevel","_db","transaction","store","objectStore","request","add","sendMessage","msgObj","socket","readyState","_requests","shift","_queuedMsgs","dest","slice","ON_MESSAGE","current_state","stateChangeResponse","responseTo","findRequestById","audioState","SILENT_MONITOR","COACH_CALL","campaignDispsResposne","callNotes","insert","update","loginPhase1Response","loginResponse","offhook","initResponse","pauseRequest","pauseRec","requeue","supervisorList","script","scriptConfigRequest","coldXfer","warmXfer","warmXferCancel","ACK","ack","chatStateResponse","agentList","agentListResponse","agentXfer","agentXferResponse","DIAL_GROUP_CHANGE","dgChangeNotif","changeResponse","DIAL_GROUP_CHANGE_PENDING","dgChangePendNotif","pendResponse","DROP_SESSION","dropSesNotif","dropSesResponse","EARLY_UII","earlyUiiNotif","earlyUiiResponse","END_CALL","endCallNotif","endCallResponse","GATES_CHANGE","gateChangeNotif","gateChangeResponse","GENERIC","genericNotif","generic","callbackFnName","findCallbackBasedOnMessageType","GENERIC_NOTIFICATION","clearInterval","NEW_CALL","newCallNotif","newCallResponse","termResponse","PREVIEW_LEAD_STATE","leadStateNotif","leadStateResponse","PENDING_DISP","pendingDispNotif","pendingDispResponse","PENDING_CHAT_DISP","pendingChatDispNotif","pendingChatDispResponse","REVERSE_MATCH","reverseMatchNotif","reverseMatchResponse","TCPA_SAFE_LEAD_STATE","leadStateTcpaNotif","leadStateTcpaResponse","CHAT_ACTIVE","activeNotif","activeResponse","CHAT_INACTIVE","inactiveNotif","inactiveResponse","CHAT_CLIENT_RECONNECT","reconnectNotif","reconnectResponse","CHAT_PRESENTED","presentedNotif","presentedResponse","typingNotif","typingResponse","CHAT_NEW","newChatNotif","newChatResponse","chatMessage","chatMessageResponse","CHAT_CANCELLED","chatCancelled","chatCancelledResponse","CHAT_ADD_SESSION","addChatSession","addChatSessionResponse","stopChatMonitor","stopChatMonitorResponse","CHAT_STOP_MONITOR","DIRECT_AGENT_ROUTE","directAgentTransfer","directAgentTransferResponse","DIRECT_AGENT_TRANSFER_NOTIF","AGENT_DEBUG_EMAIL","emailNotif","emailNotifResp","AGENT_DEBUG_EMAIL_NOTIF","logoutNotification","logoutNotifResponse","closeSocket","processDialerResponse","PREVIEW_DIAL_ID","pdRequest","dialResponse","LEAD_SEARCH","PREVIEW_FETCH","TCPA_SAFE_ID","tcpaRequest","tcpaResponse","SAFE_MODE_SEARCH","SAFE_MODE_FETCH","processRequest","chatSendResponse","CHAT","CHAT_ROOM_STATE","chatRoomStateResponse","processStats","STATS_AGENT","STATS_AGENT_DAILY","onAgentDailyStats","STATS_CAMPAIGN","STATS_QUEUE","STATS_CHAT","chatStats","STATS_CHAT_QUEUE","groupProp","itemProp","textName","itemsRaw","_processItems","escapeSoftphoneUsername","str","_processItem","itemRaw","_tryConvertValueToBoolean","item","formattedKey","_convertToFormattedKey","_convertKeyForCollection","match","substr","setCallback","s4","floor","substring","objArray","idArray","idProperty","availIds","removeIds","o","r","splice","propName","isValid","isNum","test","messageType","det","stat","val","getAttribute","outerDelimiter","innerDelimiter","arr","reduce","dict","pair","sendStatsRequestMessage","sendPingRequestMessage","curLoginTime","Number","curOffhookTime","curTalkTime","curCallTime","getDialDestination","currentServer","domain","refreshAccessToken","loginHashcode","CLOSE_SOCKET","CONFIG","GENERIC_RESPONSE","LOG_CONSOLE_RESULTS","LOG_RESULTS","OPEN_SOCKET","SIP_CONNECTED","SIP_DIAL_DEST_CHANGED","SIP_ENDED","SIP_MUTE","SIP_REGISTERED","SIP_REGISTRATION_FAILED","SIP_RINGING","SIP_SWITCH_REGISTRAR","SIP_UNMUTE","SIP_UNREGISTERED","SETUP_WEB_RTC_SERVER","SIP_INIT","SIP_ANSWER","SIP_REJECT","SIP_REGISTER","SIP_HANGUP","SIP_SEND_DTMF","SIP_TOGGLE_MUTE","SOFTPHONE_RESET_SESSION","SWITCH_SOFTPHONE_REGISTRAR","initAgentLibraryCore","context","AgentLibrary","_isReconnect","openLogger","openConsoleLogger","isSecureSocket","setCallbacks","callbackMap","property","getCallbacks","getCallback","getSocket","getAuthenticateRequest","getLoginRequest","getMultiSocketRequest","getAgentConfigRequest","getLogoutRequest","getAgentDailyStats","getCallTokens","getAgentStateRequest","getOffhookInitRequest","getOffhookTermRequest","getHangupRequest","getPreviewDialRequest","getTcpaSafeRequest","getManualOutdialRequest","getManualOutdialCancelRequest","getCallNotesRequest","getCampaignDispositionsRequest","getDispositionRequest","getDispositionManualPassRequest","getWarmTransferRequest","getColdTransferRequest","getWarmTransferCancelRequest","getRequeueRequest","getBargeInRequest","getHoldRequest","getPauseRecordRequest","getRecordRequest","getChatPresentedRequest","getChatDispositionRequest","getChatMessageRequest","getChatRequeueRequest","getChatTypingRequest","getAgentStatsPacket","getAgentDailyStatsPacket","getQueueStatsPacket","getChatQueueStatsPacket","getCampaignStatsPacket","getAgentConfigPacket","getLoginPacket","getAgentStatePacket","getCurrentCallPacket","getOffhookInitPacket","getOffhookTermPacket","getChatAgentEnd","chatAgentEnd","getWebRTCRequest","getChatListRequest","getSearchDirectoryRequest","getDialGroupChangeNotification","getDialGroupChangePendingNotification","getEndCallNotification","getGatesChangeNotification","getGenericNotification","getNewCallNotification","getCurrentCall","getAddSessionNotification","getDropSessionNotification","getEarlyUiiNotification","getChatActiveNotification","getChatInactiveNotification","getChatClientReconnectNotification","getChatPresentedNotification","getChatTypingNotification","getNewChatNotification","getApplicationSettings","getSoftphoneSettings","getChatSettings","getConnectionSettings","getInboundSettings","getOutboundSettings","getAgentSettings","getPendingSessions","getAgentPermissions","getAgentStats","getQueueStats","getChatQueueStats","getCampaignStats","getFilteredDirectory","getExtensionPresenceResponse","getExtensionPresenceRequest","_utils","_NewCallUtils","_HttpService","_getUIModel","initAgentLibrarySocket","openSocket","_getNewAccessToken","_buildSocketDest","_initSocket","socketOpened","currDts","threeMins","queuedMsg","unshift","getTime","WebSocket","onopen","onerror","evt","onclose","initAgentLibraryAgent","authenticateAgentWithUsernamePassword","authenticateAgentWithRcAccessToken","authenticateAgentWithEngageAccessToken","getAgentConfig","getWebRtcInfo","_setUpAndSendLogin","multiLoginRequest","logoutAgent","requestLogoutAgent","agentToLogout","requestMessage","isSupervisor","setAgentState","offhookInit","getPendingCallbacks","cancelCallback","callbackCancelRequest","requestStats","_terminatePing","terminateStats","_requestPing","updateDialDestination","updateDialDestinationRequest","getRefreshedToken","initAgentLibraryCall","bargeIn","coach","internationalColdXfer","dispositionCall","dispositionManualPass","getCampaignDispositions","holdSession","manualOutdial","manualOutdialCancel","pauseRecord","previewDial","previewFetch","searchLeads","setCallNotes","monitor","requeueCall","safeModeCall","safeModeFetch","safeSearchLeads","internationalWarmXfer","corporateDirWarmXfer","corporateDirColdXfer","getScript","savedScript","saveScriptResult","scriptResultRequest","directAgentXferList","warmDirectAgentXfer","coldDirectAgentXfer","cancelDirectAgentXfer","voicemailDirectAgentXfer","rejectDirectAgentXfer","initAgentLibraryLead","leadInsert","leadUpdate","initAgentLibraryChat","setChatAlias","publicChatRoom","privateChatRoom","sendChat","getSupervisors","chatPresentedResponse","chatWhisper","chatDisposition","chatRequeue","chatTyping","monitorAgentChats","monitorChatRequest","stopMonitoringChatsByAgent","stopMonitorChatRequest","stopMonitoringAllAgentChats","leaveChat","leaveChatRequest","setChatState","sendManualOutboundSms","chatManualSms","initAgentLibraryLogger","dbRequest","indexedDB","event","onsuccess","target","purgeLog","errorCode","onupgradeneeded","objectStoreNames","contains","createObjectStore","autoIncrement","createIndex","unique","keyPath","db","dateIndex","index","endDate","setDate","getDate","range","IDBKeyRange","upperBound","openCursor","cursor","primaryKey","clearLog","objectStoreRequest","clear","deleteDB","dbName","DBDeleteRequest","deleteDatabase","getLogRecords","startDate","maxRows","objStore","limit","lowerBound","bound","levelAndDateReturn","idxLevelAndDate","logLevelReturn","idxLogLevel","dtsNoStatsReturn","idxDTSNoStats","noStatsReturn","idxNoStats","dtsReturn","idxDTS","allValsReturn","idxAll","initAgentLibraryMultisocket","loadCurrentCall","initAgentLibraryConsoleLogger","_consoleDb","_overrideConsole","getConsoleLogRecords","only","count","browserConsole","defaultConsole","_getRecord","text","agentName","_saveRecord","info","initAgentLibrarySoftphoneService","sipInit","SoftphoneService","setupWebRtcServer","_getSipConfig","_connected","_ended","_registered","_unregistered","_registrationFailed","_ringing","_mute","_unmute","setTimeout","_handleNoRegisterResponse","sipAnswer","sipReject","sipRegister","webkitNotifications","checkPermission","requestPermission","sipHangUp","sipSendDTMF","sipToggleMute","switchSoftphoneRegistrar","maintainOffhook","autoStartOffhook","_updateOHFlags","resetSoftphoneSession","offhookParams","_reset","_rotateWebRtcServer","_getCurrentWebRtcServerInfo","webRtcServer","transport","outboundProxy","authorizationId","remoteAudioElement","document","getElementById","_registerHasResponse","clearTimeout","opts","all","unregister","removeAllListeners","stop","responseObj","initAgentLibrary"],"mappings":"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","sourcesContent":["import SIP from 'sip.js';\n\nconst localStorage = window.localStorage;\n\n(function() {\n  /**\n   * @fileoverview CFSimpleSip\n   */\n\n  /* CFSimpleSip\n   * @class CFSimpleSip\n   */\n\n  const C = {\n    STATUS_NULL: 0,\n    STATUS_NEW: 1,\n    STATUS_CONNECTING: 2,\n    STATUS_CONNECTED: 3,\n    STATUS_COMPLETED: 4,\n  };\n\n  /*\n   * @param {Object} options\n   */\n  const CFSimpleSip = function(options) {\n    /*\n     *  {\n     *    media: {\n     *      remote: {\n     *        audio: <DOM element>,\n     *        video: <DOM element>\n     *      },\n     *      local: {\n     *        video: <DOM element>\n     *      }\n     *    },\n     *    ua: {\n     *       <UA Configuration Options>\n     *    }\n     *  }\n     */\n\n    if (options.media.remote.video) {\n      this.video = true;\n    } else {\n      this.video = false;\n    }\n\n    if (options.media.remote.audio) {\n      this.audio = true;\n    } else {\n      this.audio = false;\n    }\n\n    if (!this.audio && !this.video) {\n      // Need to do at least audio or video\n      // Error\n      throw new Error(\n        'At least one remote audio or video element is required for CFSimpleSip.',\n      );\n    }\n\n    this.options = options;\n\n    // https://stackoverflow.com/questions/7944460/detect-safari-browser\n    const browserUa = window.navigator.userAgent.toLowerCase();\n    let isSafari = false;\n    let isFirefox = false;\n    if (browserUa.indexOf('safari') > -1 && browserUa.indexOf('chrome') < 0) {\n      isSafari = true;\n    } else if (\n      browserUa.indexOf('firefox') > -1 &&\n      browserUa.indexOf('chrome') < 0\n    ) {\n      isFirefox = true;\n    }\n    const sessionDescriptionHandlerFactoryOptions = {};\n    if (isSafari) {\n      sessionDescriptionHandlerFactoryOptions.modifiers = [\n        SIP.Web.Modifiers.stripG722,\n      ];\n    }\n\n    if (isFirefox) {\n      sessionDescriptionHandlerFactoryOptions.alwaysAcquireMediaFirst = true;\n      sessionDescriptionHandlerFactoryOptions.modifiers = [\n        SIP.Web.Modifiers.addMidLines,\n      ];\n    }\n\n    if (!this.options.ua.uri) {\n      this.anonymous = true;\n    }\n\n    this.ua = new SIP.UA({\n      // User Configurable Options\n      uri: this.options.ua.uri,\n      authorizationUser: this.options.ua.authorizationUser,\n      password: this.options.ua.password,\n      displayName: this.options.ua.displayName,\n      // Undocumented \"Advanced\" Options\n      userAgentString: `${SIP.C.USER_AGENT};${browserUa}`,\n      // Fixed Options\n      register: true,\n      registerExpires: this.options.ua.registerExpires || 600,\n      sessionDescriptionHandlerFactoryOptions,\n      transportOptions: {\n        traceSip: this.options.ua.traceSip,\n        wsServers: this.options.ua.wsServers,\n        maxReconnectionAttempts: 1000,\n      },\n      dtmfType: SIP.C.dtmfType.RTP,\n    });\n\n    this.state = C.STATUS_NULL;\n\n    this.logger = this.ua.getLogger('sip.simple');\n\n    this.ua.on(\n      'registered',\n      function() {\n        this.emit('registered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'unregistered',\n      function() {\n        this.emit('unregistered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'failed',\n      function() {\n        this.emit('unregistered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'invite',\n      function(session) {\n        // If there is already an active session reject the incoming session\n        if (this.state !== C.STATUS_NULL && this.state !== C.STATUS_COMPLETED) {\n          this.logger.warn(\n            'Rejecting incoming call. CFSimpleSip only supports 1 call at a time',\n          );\n          session.reject();\n          return;\n        }\n        this.session = session;\n        this.setupSession();\n        this.emit('ringing', this.session);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'message',\n      function(message) {\n        this.emit('message', message);\n      }.bind(this),\n    );\n\n    return this;\n  };\n\n  CFSimpleSip.prototype = Object.create(SIP.EventEmitter.prototype);\n  CFSimpleSip.C = C;\n\n  // Public\n\n  CFSimpleSip.prototype.call = function(destination) {\n    if (!this.ua || !this.checkRegistration()) {\n      this.logger.warn('A registered UA is required for calling');\n      return;\n    }\n    if (this.state !== C.STATUS_NULL && this.state !== C.STATUS_COMPLETED) {\n      this.logger.warn('Cannot make more than a single call with CFSimpleSip');\n      return;\n    }\n    // Safari hack, because you cannot call .play() from a non user action\n    if (this.options.media.remote.audio) {\n      this.options.media.remote.audio.autoplay = true;\n    }\n    if (this.options.media.remote.video) {\n      this.options.media.remote.video.autoplay = true;\n    }\n    if (this.options.media.local && this.options.media.local.video) {\n      this.options.media.local.video.autoplay = true;\n      this.options.media.local.video.volume = 0;\n    }\n    this.session = this.ua.invite(destination, {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: this.audio,\n          video: this.video,\n        },\n      },\n    });\n    this.setupSession();\n\n    return this.session;\n  };\n\n  CFSimpleSip.prototype.answer = function() {\n    if (this.state !== C.STATUS_NEW && this.state !== C.STATUS_CONNECTING) {\n      this.logger.warn('No call to answer');\n      return;\n    }\n    // Safari hack, because you cannot call .play() from a non user action\n    if (this.options.media.remote.audio) {\n      this.options.media.remote.audio.autoplay = true;\n    }\n    if (this.options.media.remote.video) {\n      this.options.media.remote.video.autoplay = true;\n    }\n    return this.session.accept({\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: this.audio,\n          video: this.video,\n        },\n      },\n    });\n    // emit call is active\n  };\n\n  CFSimpleSip.prototype.reject = function() {\n    if (this.state !== C.STATUS_NEW && this.state !== C.STATUS_CONNECTING) {\n      this.logger.warn('Call is already answered');\n      return;\n    }\n    return this.session.reject();\n  };\n\n  CFSimpleSip.prototype.hangup = function() {\n    if (\n      this.state !== C.STATUS_CONNECTED &&\n      this.state !== C.STATUS_CONNECTING &&\n      this.state !== C.STATUS_NEW\n    ) {\n      this.logger.warn('No active call to hang up on');\n      return;\n    }\n    if (this.state !== C.STATUS_CONNECTED) {\n      return this.session.cancel();\n    }\n    return this.session.bye();\n  };\n\n  CFSimpleSip.prototype.hold = function() {\n    if (this.state !== C.STATUS_CONNECTED || this.session.local_hold) {\n      this.logger.warn('Cannot put call on hold');\n      return;\n    }\n    this.mute();\n    this.logger.log('Placing session on hold');\n    return this.session.hold();\n  };\n\n  CFSimpleSip.prototype.unhold = function() {\n    if (this.state !== C.STATUS_CONNECTED || !this.session.local_hold) {\n      this.logger.warn('Cannot unhold a call that is not on hold');\n      return;\n    }\n    this.unmute();\n    this.logger.log('Placing call off hold');\n    return this.session.unhold();\n  };\n\n  CFSimpleSip.prototype.mute = function() {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An acitve call is required to mute audio');\n      return;\n    }\n    this.logger.log('Muting Audio');\n    this.toggleMute(true);\n    this.emit('mute', this);\n  };\n\n  CFSimpleSip.prototype.unmute = function() {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An active call is required to unmute audio');\n      return;\n    }\n    this.logger.log('Unmuting Audio');\n    this.toggleMute(false);\n    this.emit('unmute', this);\n  };\n\n  CFSimpleSip.prototype.sendDTMF = function(tone) {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An active call is required to send a DTMF tone');\n      return;\n    }\n    this.logger.log(`Sending DTMF tone: ${tone}`);\n    this.session.dtmf(tone);\n  };\n\n  CFSimpleSip.prototype.message = function(destination, message) {\n    if (!this.ua || !this.checkRegistration()) {\n      this.logger.warn('A registered UA is required to send a message');\n      return;\n    }\n    if (!destination || !message) {\n      this.logger.warn(\n        'A destination and message are required to send a message',\n      );\n      return;\n    }\n    this.ua.message(destination, message);\n  };\n\n  // Private Helpers\n\n  CFSimpleSip.prototype.checkRegistration = function() {\n    return this.anonymous || (this.ua && this.ua.isRegistered());\n  };\n\n  CFSimpleSip.prototype.setupRemoteMedia = function() {\n    // If there is a video track, it will attach the video and audio to the same element\n    const pc = this.session.sessionDescriptionHandler.peerConnection;\n    let remoteStream;\n\n    if (pc.getReceivers) {\n      remoteStream = new window.window.MediaStream();\n      pc.getReceivers().forEach(function(receiver) {\n        const track = receiver.track;\n        if (track) {\n          remoteStream.addTrack(track);\n        }\n      });\n    } else {\n      remoteStream = pc.getRemoteStreams()[0];\n    }\n    if (this.video) {\n      this.options.media.remote.video.srcObject = remoteStream;\n      this.options.media.remote.video.play().catch(\n        function() {\n          this.logger.log('play was rejected');\n        }.bind(this),\n      );\n    } else if (this.audio) {\n      this.options.media.remote.audio.srcObject = remoteStream;\n      this.options.media.remote.audio.play().catch(\n        function() {\n          this.logger.log('play was rejected');\n        }.bind(this),\n      );\n    }\n  };\n\n  CFSimpleSip.prototype.setupLocalMedia = function() {\n    if (\n      this.video &&\n      this.options.media.local &&\n      this.options.media.local.video\n    ) {\n      const pc = this.session.sessionDescriptionHandler.peerConnection;\n      let localStream;\n      if (pc.getSenders) {\n        localStream = new window.window.MediaStream();\n        pc.getSenders().forEach(function(sender) {\n          const track = sender.track;\n          if (track && track.kind === 'video') {\n            localStream.addTrack(track);\n          }\n        });\n      } else {\n        localStream = pc.getLocalStreams()[0];\n      }\n      this.options.media.local.video.srcObject = localStream;\n      this.options.media.local.video.volume = 0;\n      this.options.media.local.video.play();\n    }\n  };\n\n  CFSimpleSip.prototype.cleanupMedia = function() {\n    if (this.video) {\n      this.options.media.remote.video.srcObject = null;\n      this.options.media.remote.video.pause();\n      if (this.options.media.local && this.options.media.local.video) {\n        this.options.media.local.video.srcObject = null;\n        this.options.media.local.video.pause();\n      }\n    }\n    if (this.audio) {\n      this.options.media.remote.audio.srcObject = null;\n      this.options.media.remote.audio.pause();\n    }\n  };\n\n  CFSimpleSip.prototype.setupSession = function() {\n    this.state = C.STATUS_NEW;\n    this.emit('new', this.session);\n\n    this.session.on('progress', this.onProgress.bind(this));\n    this.session.on('accepted', this.onAccepted.bind(this));\n    this.session.on('rejected', this.onEnded.bind(this));\n    this.session.on('failed', this.onFailed.bind(this));\n    this.session.on('terminated', this.onEnded.bind(this));\n  };\n\n  CFSimpleSip.prototype.destroyMedia = function() {\n    this.session.sessionDescriptionHandler.close();\n  };\n\n  CFSimpleSip.prototype.toggleMute = function(mute) {\n    const pc = this.session.sessionDescriptionHandler.peerConnection;\n    if (pc.getSenders) {\n      pc.getSenders().forEach(function(sender) {\n        if (sender.track) {\n          sender.track.enabled = !mute;\n        }\n      });\n    } else {\n      pc.getLocalStreams().forEach(function(stream) {\n        stream.getAudioTracks().forEach(function(track) {\n          track.enabled = !mute;\n        });\n        stream.getVideoTracks().forEach(function(track) {\n          track.enabled = !mute;\n        });\n      });\n    }\n  };\n\n  CFSimpleSip.prototype.onAccepted = function() {\n    this.state = C.STATUS_CONNECTED;\n    this.emit('connected', this.session);\n\n    this.setupLocalMedia();\n    this.setupRemoteMedia();\n    this.session.sessionDescriptionHandler.on(\n      'addTrack',\n      function() {\n        this.logger.log(\n          'A track has been added, triggering new remoteMedia setup',\n        );\n        this.setupRemoteMedia();\n      }.bind(this),\n    );\n\n    this.session.sessionDescriptionHandler.on(\n      'addStream',\n      function() {\n        this.logger.log(\n          'A stream has been added, trigger new remoteMedia setup',\n        );\n        this.setupRemoteMedia();\n      }.bind(this),\n    );\n\n    this.session.on(\n      'hold',\n      function() {\n        this.emit('hold', this.session);\n      }.bind(this),\n    );\n    this.session.on(\n      'unhold',\n      function() {\n        this.emit('unhold', this.session);\n      }.bind(this),\n    );\n    this.session.on(\n      'dtmf',\n      function(tone) {\n        this.emit('dtmf', tone);\n      }.bind(this),\n    );\n    this.session.on('bye', this.onEnded.bind(this));\n  };\n\n  CFSimpleSip.prototype.onProgress = function() {\n    this.state = C.STATUS_CONNECTING;\n    this.emit('connecting', this.session);\n  };\n\n  CFSimpleSip.prototype.onFailed = function() {\n    this.onEnded();\n  };\n\n  CFSimpleSip.prototype.onEnded = function() {\n    this.state = C.STATUS_COMPLETED;\n    this.emit('ended', this.session);\n    this.cleanupMedia();\n  };\n\n  window.CFSimpleSip = CFSimpleSip;\n  return CFSimpleSip;\n})();\n\nexport default (function() {\n  /**\n   * @fileOverview Exposed functionality for Contact Center AgentUI.\n   * @version 3.0.14\n   * @namespace AgentLibrary\n   */\n\n  return function(global) {\n    const AddSessionNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"ADD-SESSION\" packets from IntelliQueue.  This is used by\n     * the CallControlForm. Then it will increment the total_calls count.\n     *\n     * {\n     *   \"ui_notification\": {\n     *       \"@message_id\": \"IQ982008082918151403727\",\n     *       \"@response_to\": \"\",\n     *       \"@type\": \"ADD-SESSION\",\n     *       \"session_id\": { \"#text\": \"2\" },\n     *       \"uii\": { \"#text\": \"200808291814560000000900016558\" },\n     *       \"phone\": { \"#text\": \"200808291814370000000900016555\" },\n     *       \"session_type\": { \"#text\": \"AGENT\" },\n     *       \"session_label\": { \"#text\": \"Primary Agents Call Session\" },\n     *       \"allow_control\": { \"#text\": \"TRUE\" },\n     *       \"monitoring\": { \"#text\": \"FALSE\" },\n     *       \"agent_id\": { \"#text\": \"1856\" }\n     *   }\n     *  }\n     */\n    AddSessionNotification.prototype.processResponse = function(notification) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n      const model = UIModel.getInstance();\n      const notif = notification.ui_notification;\n      const sessionAgentId = utils.getText(notif, 'agent_id');\n\n      if (utils.getText(notif, 'session_type') === 'AGENT') {\n        model.incrementTotalCalls();\n      }\n\n      if (sessionAgentId === model.agentSettings.agentId) {\n        // add the session_id of this leg to the current call packet -\n        // this way we can use it for hangups later.\n        model.currentCall.sessionId = utils.getText(notif, 'session_id');\n      } else if (sessionAgentId != '') {\n        // this is a monitoring session, lets save the monitored agent id for barge-ins\n        model.currentCall.monitorAgentId = sessionAgentId;\n      }\n\n      // Check to see if we have a transfer leg here, if so, register it\n      const sessionType = utils.getText(notif, 'session_type');\n      const allowControl = utils.getText(notif, 'allow_control');\n      const sessionId = utils.getText(notif, 'session_id');\n      const uii = utils.getText(notif, 'uii');\n      const isMonitoring = model.currentCall.isMonitoring;\n      const monitoringType = model.currentCall.monitoringType;\n\n      const isBargeInMonitor = isMonitoring && monitoringType === 'FULL';\n      const notCurrentAgent = sessionAgentId !== model.agentSettings.agentId;\n      const notSessionOne = sessionId !== '1';\n      let shouldTrackSession = false;\n\n      if (notSessionOne && notCurrentAgent) {\n        if (isBargeInMonitor) {\n          shouldTrackSession = true;\n        } else if (allowControl) {\n          if (sessionType === 'OUTBOUND' || sessionType === 'AGENT') {\n            shouldTrackSession = true;\n          }\n        }\n      }\n\n      if (shouldTrackSession) {\n        let destination = utils.getText(notif, 'phone');\n\n        if (sessionType === 'AGENT' || sessionAgentId !== '') {\n          destination = utils.getText(notif, 'agent_name');\n        }\n\n        model.transferSessions[sessionId] = {\n          sessionId,\n          destination,\n          uii,\n        };\n      }\n\n      // if agent session, set on call status\n      if (notif.session_id === '2') {\n        model.agentSettings.onCall = true;\n      }\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received ADD-SESSION notification';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.phone = utils.getText(notif, 'phone');\n      formattedResponse.sessionType = utils.getText(notif, 'session_type');\n      formattedResponse.sessionLabel = utils.getText(notif, 'session_label');\n      formattedResponse.allowControl = utils.getText(notif, 'allow_control');\n      formattedResponse.monitoring = utils.getText(notif, 'monitoring');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.transferSessions = model.transferSessions;\n\n      return formattedResponse;\n    };\n\n    const AdminDebugEmailNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"AGENT-DEBUG-EMAIL\" packets from IntelliQueue\n     *\n     * {\n     *   \"ui_notification\":{\n     *      \"@message_id\":\"IQD01DEV2018071616521500004\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"AGENT-DEBUG-EMAIL\",\n     *      \"email_to\": {\n     *          \"#text\":\"rmyers@connectfirst.com\"\n     *      }\n     *      \"requested_by\": {\n     *          \"#text\":\"Ross Myers\"\n     *      }\n     *   }\n     * }\n     */\n    AdminDebugEmailNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n      const notif = notification.ui_notification;\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received AGENT-DEBUG-EMAIL notification';\n      formattedResponse.emailTo = utils.getText(notif, 'email_to');\n      formattedResponse.requestedBy = utils.getText(notif, 'requested_by');\n\n      return formattedResponse;\n    };\n\n    const DialGroupChangeNotification = function() {};\n\n    /*\n     * This class is responsible for handling a DIAL_GROUP_CHANGE notification.\n     * This event is sent from IQ when an agent's dial group is changed in through the AdminUI.\n     *\n     *   {\n     *       \"ui_notification\": {\n     *           \"@message_id\": \"IQ10012016080413085500263\",\n     *           \"@type\": \"DIAL_GROUP_CHANGE\",\n     *           \"agent_id\": { \"#text\": \"1180958\" },\n     *           \"dial_group_id\": { \"#text\": \"50354\" },\n     *           \"dialGroupName\": { \"#text\": \"Preview Dial Mode\" },\n     *           \"dial_group_desc\": {}\n     *       }\n     *   }\n     */\n    DialGroupChangeNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      // Modify loginRequest with new DialGroupId\n      const model = UIModel.getInstance();\n      const notif = notification.ui_notification;\n      const origLoginType = model.loginRequest.loginType;\n      const newDgId = utils.getText(notif, 'dial_group_id');\n\n      model.dialGroupChangeNotification = notification;\n\n      // Calculate type of login - called from AdminUI when assigning agent to new dial group.\n      // Only options should be BLENDED or OUTBOUND here.\n      if (\n        newDgId &&\n        newDgId !== '' &&\n        (origLoginType === 'INBOUND' || origLoginType === 'BLENDED')\n      ) {\n        model.loginRequest.loginType = 'BLENDED';\n      } else if (newDgId && newDgId !== '') {\n        model.loginRequest.loginType = 'OUTBOUND';\n      } else if (origLoginType === 'INBOUND') {\n        model.loginRequest.loginType = 'INBOUND';\n      } else {\n        model.loginRequest.loginType = 'NO-SELECTION';\n      }\n\n      UIModel.getInstance().loginRequest.dialGroupId = newDgId;\n\n      const formattedResponse = {\n        message: 'Dial Group Updated Successfully.',\n        detail: `Dial Group changed to [${newDgId}].`,\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        dialGroupName: utils.getText(notif, 'dialGroupName'), // camel case from server for some reason :/\n        dialGroupDesc: utils.getText(notif, 'dial_group_desc'),\n        agentId: utils.getText(notif, 'agent_id'),\n      };\n\n      return formattedResponse;\n    };\n\n    const DialGroupChangePendingNotification = function() {};\n\n    /*\n     * This class is responsible for handling a DIAL_GROUP_CHANGE_PENDING notification.\n     * This event is sent from IQ when an agent's dial group is changed and the agent is on a call.\n     *\n     * {\n     *     \"ui_notification\": {\n     *         \"@message_id\": \"IQ10012016080515294800318\",\n     *         \"@type\": \"DIAL_GROUP_CHANGE_PENDING\",\n     *         \"agent_id\": { \"#text\": \"1180958\" },\n     *         \"dial_group_id\": { \"#text\": \"50354\" },\n     *         \"update_from_adminui\": { \"#text\": \"TRUE\" }\n     *     }\n     * }\n     */\n    DialGroupChangePendingNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const model = UIModel.getInstance();\n      const notif = notification.ui_notification;\n      model.agentSettings.pendingDialGroupChange = parseInt(\n        utils.getText(notif, 'dial_group_id'),\n        10,\n      );\n\n      // check if request originated with AdminUI\n      if (notif.update_from_adminui) {\n        model.agentSettings.updateDGFromAdminUI =\n          utils.getText(notif, 'update_from_adminui') === true;\n      } else {\n        model.agentSettings.updateDGFromAdminUI = false;\n      }\n\n      const formattedResponse = {\n        message: 'Dial Group Change Pending notification received.',\n        detail:\n          'DialGroup switch for existing session pending until active call ends.',\n        agentId: utils.getText(notif, 'agent_id'),\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        updateFromAdminUI: utils.getText(notif, 'update_from_adminui'),\n      };\n\n      return formattedResponse;\n    };\n\n    const DirectAgentTransferNotification = function() {};\n\n    /*\n     * This class is responsible for handling a DIRECT-AGENT-ROUTE notification.\n     * This event is sent from IQ when an agent is presented a direct transfer, in the case they are not in an\n     * available state to automatically be presented the call.\n     *\n     * {\n     *     \"ui_notification\": {\n     *         \"@message_id\": \"IQ10012016080515294800318\",\n     *         \"@type\": \"DIRECT-AGENT-ROUTE\",\n     *         \"response_to\": { \"#text\": \"\" },\n     *         \"agent_id\": { \"#text\": \"\" },\n     *         \"uii\": { \"#text\": \"\" },\n     *         \"status\": { \"#text\": \"\" },\n     *         \"ani\": { \"#text\": \"\" },\n     *         \"dnis\": { \"#text\": \"\" }\n     *         \"source_type\": { \"#text\": \"\" },\n     *         \"source_id\": { \"#text\": \"\" },\n     *         \"source_name\": { \"#text\": \"\" }\n     *         \"voicemail_url\": { \"#text\": \"\" }\n     *     }\n     * }\n     */\n    DirectAgentTransferNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n      const notif = notification.ui_notification;\n\n      formattedResponse.message = 'Received DIRECT-AGENT-ROUTE notification';\n      formattedResponse.status = utils.getText(notif, 'status');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.ani = utils.getText(notif, 'ani');\n      formattedResponse.dnis = utils.getText(notif, 'dnis');\n      formattedResponse.sourceType = utils.getText(notif, 'source_type');\n      formattedResponse.sourceId = utils.getText(notif, 'source_id');\n      formattedResponse.sourceName = utils.getText(notif, 'source_name');\n      formattedResponse.voicemailUrl = utils.getText(notif, 'voicemail_url');\n\n      return formattedResponse;\n    };\n\n    const DropSessionNotification = function() {};\n\n    /*\n     * This class handles the DROP-SESSION packet from IQ. It doesn't really do anything\n     * besides format a response for the callback notification since there isn't any action needed.\n     *\n     *  {\n     *      \"ui_notification\": {\n     *          \"@message_id\":\"IQ10012016081613222800341\",\n     *          \"@response_to\":\"\",\n     *          \"@type\":\"DROP-SESSION\",\n     *          \"session_id\":{\"#text\":\"3\"},\n     *          \"uii\":{\"#text\":\"201608161322180139000000000124\"}\n     *      }\n     *  }\n     */\n    DropSessionNotification.prototype.processResponse = function(notification) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n      const notif = notification.ui_notification;\n\n      const sessionId = utils.getText(notif, 'session_id');\n      const transfer = UIModel.getInstance().transferSessions[sessionId];\n\n      // Check to see if we just disconnected a transfer session\n      // If so, we need to remove the session from our map\n      if (transfer) {\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          `Transfer to ${transfer.destination} has terminated`,\n          '',\n        );\n        delete UIModel.getInstance().transferSessions[sessionId];\n        formattedResponse.transferEnd = transfer;\n      }\n\n      formattedResponse.message = 'Received DROP-SESSION Notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    const EarlyUiiNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"EARLY_UII\" packets from IntelliQueue.\n     * For manual outdials, this gives the uii to cancel a ringing line.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"EARLY_UII\",\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *      }\n     *  }\n     */\n    EarlyUiiNotification.prototype.processResponse = function(notification) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n      const notif = notification.ui_notification;\n\n      formattedResponse.message = 'Received EARLY_UII notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    const EndCallNotification = function(libInstance) {\n      this.libInstance = libInstance;\n    };\n\n    /*\n     * This class is responsible for handling an END-CALL notification.\n     * Save the packet in the UIModel by appending it to the currentCall packet.\n     * Update the CallState field in the UIModel to \"CALL-ENDED\"\n     *\n     * {\n     *  \"ui_notification\":{\n     *      \"@message_id\":\"IQ982008082910362203349\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"END-CALL\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"2\"},\n     *      \"call_dts\":{\"#text\":\"2008-08-29 10:36:04\"},\n     *      \"call_duration\":{\"#text\":\"16\"},\n     *      \"term_party\":{\"#text\":\"CALLER\"},\n     *      \"term_reason\":{},\n     *      \"recording_url\":{},\n     *      \"disposition_timeout:{\"#text\":\"60\"}\n     *  }\n     * }\n     */\n    EndCallNotification.prototype.processResponse = function(notification) {\n      const model = UIModel.getInstance();\n      const notif = notification.ui_notification;\n      model.endCallNotification = notification;\n\n      // add callDuration, termParty, and termReason to the current call packet\n      model.currentCall.duration = utils.getText(notif, 'call_duration');\n      model.currentCall.termParty = utils.getText(notif, 'term_party');\n      model.currentCall.termReason = utils.getText(notif, 'term_reason');\n\n      // set call state to \"CALL-ENDED\"\n      model.agentSettings.callState = 'CALL-ENDED';\n      model.agentSettings.onCall = false;\n      model.agentSettings.onManualOutdial = false;\n\n      // Clear out any transfer sessions from the previous call\n      model.transferSessions = {};\n\n      // Check if there is a pending dial group change\n      if (\n        model.agentSettings.pendingDialGroupChange > 0 ||\n        model.agentSettings.pendingDialGroupChange == -1\n      ) {\n        // update dial group id\n        model.loginRequest.dialGroupId =\n          model.agentSettings.pendingDialGroupChange;\n\n        // send login update request\n        this.libInstance.loginAgent(\n          model.loginRequest.queueIds,\n          model.configRequest.chatIds,\n          model.configRequest.skillProfileId,\n          model.configRequest.dialGroupId,\n          model.configRequest.dialDest,\n          model.agentSettings.updateDGFromAdminUI,\n        );\n\n        // reset pending dial group variables\n        model.agentSettings.pendingDialGroupChange = 0;\n        model.agentSettings.updateDGFromAdminUI = false;\n      }\n\n      // start ping call interval timer, sends message every 30 seconds\n      // if this is not a manual outdial and we are not suppressing disposition pop\n      if (\n        model.currentCall.outdialDispositions &&\n        model.currentCall.outdialDispositions.dispositions &&\n        model.currentCall.outdialDispositions.dispositions.length > 0 &&\n        model.currentCall.surveyPopType !== 'SUPPRESS'\n      ) {\n        model.pingIntervalId = setInterval(utils.sendPingCallMessage, 30000);\n      }\n\n      const formattedResponse = {\n        message: 'End Call Notification Received.',\n        detail: '',\n        uii: utils.getText(notif, 'uii'),\n        sessionId: utils.getText(notif, 'session_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        callDts: utils.getText(notif, 'call_dts'),\n        duration: model.currentCall.duration,\n        termParty: model.currentCall.termParty,\n        termReason: model.currentCall.termReason,\n        recordingUrl: utils.getText(notif, 'recording_url'),\n        dispositionTimeout: utils.getText(notif, 'disposition_timeout'),\n      };\n\n      return formattedResponse;\n    };\n\n    const GatesChangeNotification = function() {};\n\n    /*\n     * This class is responsible for handling a gates change notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080817344100936\",\n     *          \"@type\":\"GATES_CHANGE\",\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"gate_ids\":{\"#text\":\"11117,3\"}\n     *      }\n     * }\n     */\n    GatesChangeNotification.prototype.processResponse = function(notification) {\n      const model = UIModel.getInstance();\n      const notif = notification.ui_notification;\n      const newAssignedGates = [];\n      const availableQueues = model.inboundSettings.availableQueues;\n      let assignedGateIds = utils.getText(notif, 'gate_ids');\n      if (assignedGateIds !== '') {\n        assignedGateIds = assignedGateIds.split(',');\n      }\n\n      for (let a = 0; a < assignedGateIds.length; a++) {\n        // find gate in avail list\n        const id = assignedGateIds[a];\n        const foundGate = utils.findObjById(availableQueues, id, 'gateId');\n        if (foundGate) {\n          newAssignedGates.push(foundGate);\n        } else {\n          // gate not in assigned list, add stub\n          const gate = {\n            gateId: id,\n            gateName: '',\n            gateDesc: '',\n            defaultDestOverride: '',\n            isAgentSelectable: false,\n          };\n          newAssignedGates.push(gate);\n        }\n      }\n\n      model.inboundSettings.queues = JSON.parse(\n        JSON.stringify(newAssignedGates),\n      );\n\n      const formattedResponse = {\n        agentId: utils.getText(notif, 'agent_id'),\n        message: 'Gates Change notification received.',\n        queues: newAssignedGates,\n      };\n\n      return formattedResponse;\n    };\n\n    const GenericNotification = function() {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@response_to\":\"1c2fe39f-a31e-aff8-8d23-92a61c88270f\",\n     *          \"@type\":\"GENERIC\",\n     *          \"message_code\":{\"#text\":\"0\"},\n     *          \"message\":{\"#text\":\"OK\"},\n     *          \"detail\":{\"#text\":\"Pending Callback Successfully Cancelled.\"}\n     *      }\n     * }\n     */\n    GenericNotification.prototype.processResponse = function(notification) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n\n      // add message and detail if present\n      formattedResponse.messageCode = utils.getText(\n        notification.ui_notification,\n        'message_code',\n      );\n\n      return formattedResponse;\n    };\n\n    const NewCallNotification = function() {};\n\n    /*\n     * This class processes a \"NEW-CALL\" packet received from Intelliqueue. It will determine\n     * if the call is a regular or monitoring call:\n     * \t\t@Monitoring==true:  set state to ACTIVE-MONITORING, send NewMonitoringCall event\n     * \t\t@Monitoring==false: set state to ACTIVE, send newcall packet and increment total calls\n     *\n     *  {\"ui_notification\":{\n     *      \"@message_id\":\"IQ982010020911335300027\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"NEW-CALL\",\n     *      \"uii\":{\"#text\":\"201002091133350139990000000010\"},\n     *      \"ani\":{\"#text\":\"9548298548\"},\n     *      \"dnis\":{},\n     *      \"dial_dest\":{\"#text\":\"sip:+16789050673@sip.connectfirst.com\"},\n     *      \"call_type\":{\"#text\":\"OUTBOUND\"},\n     *      \"queue_dts\":{\"#text\":\"2010-02-09 11:33:53\"},\n     *      \"queue_time\":{\"#text\":\"-1\"},\n     *      \"agent_id\":{\"#text\":\"657\"},\n     *      \"app_url\":{},\n     *      \"is_monitoring\":{\"#text\":\"FALSE\"},\n     *      \"script_id\":{},\n     *      \"script_version\":{},\n     *      \"survey_id\":{},\n     *      \"survey_pop_type\":{\"#text\":\"SUPPRESS\"},\n     *      \"message\":{},\n     *      \"agent_recording\":{\"@default\":\"ON\",\"@pause\":\"10\",\"#text\":\"TRUE\"},\n     *      \"hangup_on_disposition\":{\"#text\":\"FALSE\"},\n     *      \"gate\":{\n     *          \"@number\":\"17038\",\n     *          \"name\":{\"#text\":\"AM Campaign\"},\n     *          \"description\":{}\n     *      },\n     *      \"outdial_dispositions\":{\n     *          \"@type\":\"CAMPAIGN|GATE\",\n     *          \"disposition\":[\n     *              { \"@contact_forwarding\":\"FALSE\", \"@disposition_id\":\"20556\", \"@is_complete\":\"1\", \"@is_default\"=\"0\", \"@require_note\"=\"0\", \"@save_survey\"=\"1\", \"@xfer\"=\"0\", \"#text\":\"Not Available\"},\n     *              { \"@contact_forwarding\":\"FALSE\", \"@disposition_id\":\"20559\", \"@is_complete\":\"1\", \"@is_default\"=\"1\", \"@require_note\"=\"1\", \"@save_survey\"=\"1\", \"@xfer\"=\"0\", #text\":\"Transfer Not Available\"}\n     *          ]\n     *      },\n     *      \"requeue_shortcuts\":{\n     *          \"requeue_shortcut\":[\n     *              { \"@gate_id\":\"2\", \"@name\":\"test queue\" \"@skill_id\":\"\"}\n     *          ]\n     *      },\n     *      \"baggage\":{\n     *          \"@allow_updates\":\"TRUE\",\n     *          \"@show_lead_passes\":\"TRUE\",\n     *          \"@show_list_name\":\"TRUE\",\n     *          \"aux_phone\":{},\n     *          \"aux_greeting\":{},\n     *          \"aux_external_url\":{},\n     *          \"aux_data1\":{\"#text\":\"BMAK\"},\n     *          \"aux_data2\":{\"#text\":\"BMAK-041653-934\"},\n     *          \"aux_data3\":{\"#text\":\"Call Ctr 1\"},\n     *          \"aux_data4\":{},\n     *          \"aux_data5\":{},\n     *          \"extern_id\":{\"#text\":\"9548298548\"},\n     *          \"lead_id\":{\"#text\":\"64306\"},\n     *          \"lead_passes\":{\"#text\":\"1\"},\n     *          \"first_name\":{\"#text\":\"Ryant\"},\n     *          \"last_name\":{\"#text\":\"Taylor\"},\n     *          \"mid_name\":{},\n     *          \"address1\":{\"#text\":\"8010 Maryland Ave\"},\n     *          \"address2\":{},\n     *          \"city\":{\"#text\":\"Cleveland\"},\n     *          \"state\":{\"#text\":\"OH\"},\n     *          \"zip\":{\"#text\":\"44105\"},\n     *          \"custom_labels\":{\n     *              \"aux_1_label\":{},\n     *              \"aux_2_label\":{},\n     *              \"aux_3_label\":{},\n     *              \"aux_4_label\":{},\n     *              \"aux_5_label\":{}\n     *          }\n     *      },\n     *      \"survey_response\":{\n     *          \"@response_id\":\"24\",\n     *          \"@survey_id\":\"1775\",\n     *          \"details\":{\n     *              \"detail\":[\n     *                  {\"@element_id\":\"9001\",\"@option_id\":\"0\",\"#text\":\"Box 1\"},\n     *                  {\"@element_id\":\"9002\",\"@option_id\":\"0\",\"#text\":\"Area 1\"},\n     *                  {\"@element_id\":\"9003\",\"@option_id\":\"6439\"},\n     *                  {\"@element_id\":\"9004\",\"@option_id\":\"6443\"},\n     *                  {\"@element_id\":\"9004\",\"@option_id\":\"6444\"},\n     *                  {\"@element_id\":\"9005\",\"@option_id\":\"6447\"},\n     *                  {\"@element_id\":\"9006\",\"@option_id\":\"0\",\"#text\":\"11/20/2013\"},\n     *                  {\"@element_id\":\"9015\",\"@option_id\":\"0\",\"#text\":\"Box 2\"},\n     *                  {\"@element_id\":\"9016\",\"@option_id\":\"0\",\"#text\":\"Area 2\"},\n     *                  {\"@element_id\":\"9017\",\"@option_id\":\"6466\"},\n     *                  {\"@element_id\":\"9018\",\"@option_id\":\"6471\"},\n     *                  {\"@element_id\":\"9018\",\"@option_id\":\"6472\"},\n     *                  {\"@element_id\":\"9019\",\"@option_id\":\"6477\"},\n     *                  {\"@element_id\":\"9020\",\"@option_id\":\"0\",\"#text\":\"11/21/2013\"}\n     *             ]\n     *          }\n     *      }\n     *    }\n     *  }\n     */\n    NewCallNotification.prototype.processResponse = function(notification) {\n      const model = UIModel.getInstance();\n      const notif = notification.ui_notification;\n\n      // set up new call obj\n      const newCall = {\n        uii: utils.getText(notif, 'uii'),\n        agentId: utils.getText(notif, 'agent_id'),\n        dialDest: utils.getText(notif, 'dial_dest'),\n        queueDts: utils.getText(notif, 'queue_dts'),\n        queueTime: utils.getText(notif, 'queue_time'),\n        ani: utils.getText(notif, 'ani'),\n        dnis: utils.getText(notif, 'dnis'),\n        callType: utils.getText(notif, 'call_type'),\n        appUrl: utils.getText(notif, 'app_url'),\n        isMonitoring: utils.getText(notif, 'is_monitoring'),\n        allowHold: utils.getText(notif, 'allow_hold'),\n        allowTransfer: utils.getText(notif, 'allow_transfer'),\n        allowManualInternationalTransfer: utils.getText(\n          notif,\n          'allow_manual_international_transfer',\n        ),\n        allowDirectAgentTransfer: utils.getText(\n          notif,\n          'allow_direct_agent_transfer',\n        ),\n        allowHangup: utils.getText(notif, 'allow_hangup'),\n        allowRequeue: utils.getText(notif, 'allow_requeue'),\n        allowEndCallForEveryone: utils.getText(\n          notif,\n          'allow_endcallforeveryone',\n        ),\n        scriptId: utils.getText(notif, 'script_id'),\n        scriptVersion: utils.getText(notif, 'script_version'),\n        surveyId: utils.getText(notif, 'survey_id'),\n        surveyPopType: utils.getText(notif, 'survey_pop_type'),\n        requeueType: utils.getText(notif, 'requeue_type'),\n        hangupOnDisposition: utils.getText(notif, 'hangup_on_disposition'),\n      };\n\n      if (newCall.isMonitoring) {\n        newCall.monitoringType = utils.getText(notif, 'monitoring_type'); // FULL, COACHING, MONITOR\n      }\n\n      // set collection values\n      newCall.queue = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'gate',\n      )[0];\n      newCall.agentRecording = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'agent_recording',\n        'agentRecording',\n      )[0];\n      newCall.outdialDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'outdial_dispositions',\n        'disposition',\n      )[0];\n      newCall.requeueShortcuts =\n        utils.processResponseCollection(\n          notification,\n          'ui_notification',\n          'requeue_shortcuts',\n          'requeueShortcut',\n        )[0] || [];\n      newCall.baggage = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'baggage',\n      )[0];\n      newCall.surveyResponse = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'survey_response',\n        'detail',\n      )[0];\n      newCall.scriptResponse = {};\n      newCall.transferPhoneBook = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transfer_phone_book',\n      )[0];\n      newCall.lead = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'lead',\n      )[0];\n\n      // parse extra data correctly\n      try {\n        if (notif.lead && notif.lead.extra_data) {\n          delete newCall.lead.extraDatas;\n          newCall.lead.extraData = {};\n          for (var key in notif.lead.extra_data) {\n            newCall.lead.extraData[key] = notif.lead.extra_data[key]['#text'];\n          }\n        }\n      } catch (e) {\n        console.warn(`error parsing new call lead extra data: ${e}`);\n      }\n\n      if (newCall.baggage) {\n        // process custom labels correctly\n        newCall.baggage.customLabels = {};\n        const notifLabels = notif.baggage.custom_labels;\n        for (var key in notifLabels) {\n          let result = '';\n          if (notifLabels && notifLabels[key] && notifLabels[key]['#text']) {\n            result = notifLabels[key]['#text'];\n          }\n\n          newCall.baggage.customLabels[key] = result;\n        }\n      }\n\n      // set saved script response if present\n      try {\n        const savedModel = JSON.parse(notif.script_result['#text']).model;\n        const results = {};\n        const keys = Object.keys(savedModel);\n        for (let idx = 0; idx < keys.length; idx++) {\n          var key = keys[idx];\n          const value = savedModel[key].value;\n          results[key] = value;\n        }\n        newCall.scriptResponse = results;\n      } catch (err) {}\n\n      // fix phonebook format\n      if (newCall.transferPhoneBook && newCall.transferPhoneBook.entrys) {\n        newCall.transferPhoneBook = newCall.transferPhoneBook.entrys;\n      }\n\n      // fix requeue shortcuts\n      if (\n        newCall.requeueShortcuts &&\n        newCall.requeueShortcuts.requeueShortcuts\n      ) {\n        newCall.requeueShortcuts = newCall.requeueShortcuts.requeueShortcuts;\n      }\n\n      // if only one disposition, convert to array\n      if (\n        newCall.outdialDispositions &&\n        newCall.outdialDispositions.disposition\n      ) {\n        newCall.outdialDispositions.dispositions = [\n          newCall.outdialDispositions,\n        ];\n      }\n\n      // convert numbers to boolean where applicable\n      newCall.queue.isCampaign = newCall.queue.isCampaign === '1';\n      if (\n        newCall.outdialDispositions &&\n        newCall.outdialDispositions.dispositions\n      ) {\n        for (\n          let d = 0;\n          d < newCall.outdialDispositions.dispositions.length;\n          d++\n        ) {\n          const disp = newCall.outdialDispositions.dispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.requireNote = disp.requireNote === '1';\n          disp.saveSurvey = disp.saveSurvey === '1';\n          disp.xfer = disp.xfer === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // Build token map\n      model.callTokens = buildCallTokenMap(notif, newCall);\n      newCall.baggage = model.callTokens; // add all tokens to baggage\n\n      // Is Monitoring Call?\n      if (newCall.isMonitoring) {\n        model.agentSettings.callState = 'ACTIVE-MONITORING';\n      } else {\n        model.agentSettings.callState = 'ACTIVE';\n\n        // check for preloaded transfer number\n        if (newCall.baggage && newCall.baggage.auxPhone != '') {\n          model.transferNumber = newCall.baggage.auxPhone;\n        }\n      }\n\n      // Reset the current call counter for Agent Daily Stats\n      model.agentDailyStats.currCallTime = 0;\n\n      // todo handle scripting??\n\n      model.currentCall = newCall;\n\n      return newCall;\n    };\n\n    function buildCallTokenMap(notif, newCall) {\n      const model = UIModel.getInstance();\n      const tokens = newCall.baggage || {}; // seed with baggage values\n      if (notif.baggage && notif.baggage.generic_key_value_pairs) {\n        let keyValuePairs = [];\n        const keyValuePairsStr = utils.getText(\n          notif.baggage,\n          'generic_key_value_pairs',\n        );\n        if (keyValuePairsStr.length > 0) {\n          keyValuePairs = utils.parseKeyValuePairsFromString(\n            keyValuePairsStr,\n            '|',\n            '::',\n          );\n        }\n\n        for (const keyValue in keyValuePairs) {\n          tokens[keyValue] = keyValuePairs[keyValue];\n        }\n      }\n\n      tokens.ani = newCall.ani;\n      tokens.dnis = newCall.dnis;\n      tokens.uii = newCall.uii;\n\n      try {\n        if (newCall.queue.number) {\n          tokens.sourceId = newCall.queue.number || '';\n          tokens.sourceName = newCall.queue.name || '';\n          tokens.sourceDesc = newCall.queue.description || '';\n\n          if (\n            newCall.queue.isCampaign === '1' ||\n            newCall.queue.isCampaign === true\n          ) {\n            tokens.sourceType = 'OUTBOUND';\n          } else {\n            tokens.sourceType = 'INBOUND';\n          }\n        } else {\n          tokens.sourceId = '0';\n          tokens.sourceType = 'MANUAL';\n          tokens.sourceName = '';\n          tokens.sourceDesc = '';\n        }\n      } catch (any) {\n        console.error(\n          'There was an error processing source tokenization',\n          +any,\n        );\n      }\n\n      try {\n        tokens.agentFirstName = model.agentSettings.firstName;\n        tokens.agentLastName = model.agentSettings.lastName;\n        tokens.agentExternalId = model.agentSettings.externalAgentId;\n        tokens.agentType = model.agentSettings.agentType;\n        tokens.agentEmail = model.agentSettings.email;\n        tokens.agentUserName = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    function isCampaign(gate) {\n      if (gate && gate.isCampaign) {\n        return gate.isCampaign === '1' || gate.isCampaign === true;\n      }\n      return false;\n    }\n\n    const PendingChatDispNotification = function() {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     *  {\n     *       \"ui_notification\":{\n     *           \"@message_id\":\"IQD01DEV2018062912352800014\",\n     *           \"@type\":\"PENDING_CHAT_DISP\",\n     *           \"agent_id\":{ \"#text\":\"1182160\" },\n     *           \"uii\":{ \"#text\":\"201806291234550147950000000000\" },\n     *           \"status\":{ \"#text\":\"false\" }\n     *       }\n     *   }\n     */\n    PendingChatDispNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const formattedResponse = {};\n      formattedResponse.agentId = utils.getText(\n        notification.ui_notification,\n        'agent_id',\n      );\n      formattedResponse.uii = utils.getText(\n        notification.ui_notification,\n        'uii',\n      );\n      formattedResponse.status =\n        utils.getText(notification.ui_notification, 'status') === 'true';\n\n      return formattedResponse;\n    };\n\n    const PendingDispNotification = function() {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@type\":\"PENDING_DISP\",\n     *          \"agent_id\":{\"#text\":\"3\"},\n     *          \"status\":{\"#text\":\"false\"}\n     *      }\n     * }\n     */\n    PendingDispNotification.prototype.processResponse = function(notification) {\n      const formattedResponse = {};\n      formattedResponse.agentId = utils.getText(\n        notification.ui_notification,\n        'agent_id',\n      );\n      formattedResponse.status = utils.getText(\n        notification.ui_notification,\n        'status',\n      );\n\n      return formattedResponse;\n    };\n\n    const PreviewLeadStateNotification = function() {};\n\n    /*\n     * This class is responsible for processing the lead state packet\n     * received from intelliqueue. It will decide what type of leads are\n     * being processed, and depending on if the callback is true or false, it will\n     * call the appropriate form to update the lead state.\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@type\":\"PREVIEW-LEAD-STATE\",\n     *          \"@call_type\":\"MANUAL|PREVIEW\",\n     *          \"@message_id\":\"IQ10012016092715393600184\",\n     *          \"request_id\":{\"#text\":\"IQ10012016092715390900179\"},\n     *          \"lead_state\":{\"#text\":\"ANSWER\"},\n     *          \"callback\":{\"#text\":\"FALSE\"}\n     *      }\n     *   }\n     * }\n     */\n    PreviewLeadStateNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n\n      UIModel.getInstance().agentSettings.onManualOutdial = true;\n\n      const response = {\n        callType: notif['@call_type'],\n        messageId: notif['@message_id'],\n        requestId: utils.getText(notif, 'request_id'),\n        leadState: utils.getText(notif, 'lead_state'),\n        callback: utils.getText(notif, 'callback'),\n      };\n\n      return response;\n    };\n\n    const ReverseMatchNotification = function() {};\n\n    /*\n     * This class is responsible for processing a REVERSE_MATCH packet from IQ. It\n     * will log the packet was rec'd, save the packet to the UIModel for use by\n     * components like the WhosCallingForm\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@response_to\":\"1c2fe39f-a31e-aff8-8d23-92a61c88270f\",\n     *          \"@type\":\"REVERSE_MATCH\",\n     *          \"first_name\":{\"#text\":\"\"},\n     *          \"mid_name\":{\"#text\":\"\"},\n     *          \"last_name\":{\"#text\":\"\"},\n     *          \"address1\":{\"#text\":\"\"},\n     *          \"address2\":{\"#text\":\"\"},\n     *          \"city\":{\"#text\":\"\"},\n     *          \"state\":{\"#text\":\"\"},\n     *          \"zip\":{\"#text\":\"\"},\n     *          \"business_name\":{\"#text\":\"\"}\n     *      }\n     * }\n     */\n    ReverseMatchNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n      const model = UIModel.getInstance();\n\n      model.tokens.first_name = utils.getText(notif, 'first_name');\n      model.tokens.mid_name = utils.getText(notif, 'mid_name');\n      model.tokens.last_name = utils.getText(notif, 'last_name');\n      model.tokens.address1 = utils.getText(notif, 'address1');\n      model.tokens.address2 = utils.getText(notif, 'address2');\n      model.tokens.suffix = utils.getText(notif, 'suffix');\n      model.tokens.title = utils.getText(notif, 'title');\n      model.tokens.city = utils.getText(notif, 'city');\n      model.tokens.state = utils.getText(notif, 'state');\n      model.tokens.zip = utils.getText(notif, 'zip');\n      model.tokens.business_name = utils.getText(notif, 'business_name');\n\n      return model.tokens;\n    };\n\n    const TcpaSafeLeadStateNotification = function() {};\n\n    /*\n     * This class is responsible for processing the lead state packet\n     * received from intelliqueue. It will decide what type of leads are\n     * being processed, and depending on if the callback is true or false, it will\n     * call the appropriate form to update the lead state.\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@type\":\"TCPA-SAFE-LEAD-STATE\",\n     *          \"@call_type\":\"MANUAL|TCPA-SAFE\",\n     *          \"request_id\":{\"#text\":\"\"},\n     *          \"lead_state\":{\"#text\":\"CALLING\"},\n     *          \"callback\":{\"#text\":\"false\"}\n     *      }\n     * }\n     */\n    TcpaSafeLeadStateNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n\n      const response = {\n        callType: notif['@call_type'],\n        messageId: notif['@message_id'],\n        requestId: utils.getText(notif, 'request_id'),\n        leadState: utils.getText(notif, 'lead_state'),\n        callback: utils.getText(notif, 'callback'),\n      };\n\n      return response;\n    };\n\n    const AckRequest = function(audioType, agentId, uii, monitorAgentId) {\n      this.audioType = audioType || 'FULL';\n      this.agentId = agentId;\n      this.uii = uii;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * This class processes ACK packets rec'd from IQ.\n     * This is a callback triggered by certain actions like\n     * sending dispositions or script results.\n     * NOTE: uii is added in utils message processing.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008090317393001252\",\n     *      \"@response_to\":\"1112222\",\n     *      \"@type\":\"ACK\",\n     *      \"type\":{\"#text\":\"CHAT-DISPOSITION|INBOUND-DISPOSITION|OUTDIAL-DISPOSITION|SCRIPT-RESULT\"},\n     *      \"status\":{\"#text\":\"OK|FAILURE\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    AckRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.type = utils.getText(resp, 'type');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(LOG_LEVELS.DEBUG, formattedResponse.message, response);\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          `${formattedResponse.message}: ${formattedResponse.detail}`,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    const AgentStateRequest = function(agentState, agentAuxState) {\n      if (\n        agentState.toUpperCase() == 'ON-BREAK' &&\n        UIModel.getInstance().onCall == true\n      ) {\n        this.agentState = 'BREAK-AFTER-CALL';\n        this.agentAuxState = '';\n      } else {\n        this.agentState = agentState.toUpperCase() || '';\n        this.agentAuxState = agentAuxState || '';\n      }\n    };\n\n    AgentStateRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.AGENT_STATE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          state: {\n            '#text': this.agentState,\n          },\n          agent_aux_state: {\n            '#text': this.agentAuxState,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes AGENT-STATE packets rec'd from IQ. It will check the state of the\n     * packet and then set the state on the model. It will also check for deferred surveys,\n     * if one is found it will load it at this point.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"AGENT-STATE\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"prev_state\":{\"#text\":\"ENGAGED\"},\n     *      \"current_state\":{\"#text\":\"WORKING\"},\n     *      \"agent_aux_state\":{\"#text\":\"Offhook Work\"},\n     *      \"prev_aux_state\":{}\n     *   }\n     * }\n     */\n    AgentStateRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const status = utils.getText(resp, 'status');\n      const prevState = utils.getText(resp, 'prev_state');\n      const currState = utils.getText(resp, 'current_state');\n      const prevAuxState = utils.getText(resp, 'prev_aux_state');\n      const currAuxState = utils.getText(resp, 'agent_aux_state');\n      const model = UIModel.getInstance();\n\n      // add message and detail if present\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = response.ui_response.agent_id['#text'] || '';\n      formattedResponse.previousState = prevState;\n      formattedResponse.currentState = currState;\n      formattedResponse.previousAuxState = prevAuxState;\n      formattedResponse.currentAuxState = currAuxState;\n\n      if (status == 'OK') {\n        let prevStateStr = prevState;\n        let currStateStr = currState;\n\n        if (prevAuxState.length > 0) {\n          prevStateStr = prevAuxState;\n        }\n\n        if (currAuxState.length > 0) {\n          currStateStr = currAuxState;\n        }\n\n        // Update the state in the UIModel\n        model.agentSettings.currentState = currState;\n        model.agentSettings.currentStateLabel = currAuxState;\n        model.agentStatePacket = response;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to change agent state';\n        }\n\n        // log message response\n        const message = `Unable to change agent state. ${formattedResponse.detail}`;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const AuthenticateRequest = function(config) {\n      this.username = config.username;\n      this.password = config.password;\n      this.platformId = config.platformId;\n      this.rcAccessToken = config.rcAccessToken;\n      this.tokenType = config.tokenType;\n      this.engageAccessToken = config.engageAccessToken;\n      this.authType = config.authType;\n    };\n\n    AuthenticateRequest.prototype.sendHttpRequest = function() {\n      UIModel.getInstance().authenticateRequest = this;\n      switch (this.authType) {\n        case AUTHENTICATE_TYPES.USERNAME_PASSWORD:\n          _buildHttpRequest(this.authType, 'login/agent', {\n            username: this.username,\n            password: this.password,\n            platformId: this.platformId,\n          });\n          break;\n        case AUTHENTICATE_TYPES.RC_TOKEN:\n          _buildHttpRequest(this.authType, 'login/rc/accesstoken', {\n            rcAccessToken: this.rcAccessToken,\n            rcTokenType: this.tokenType,\n          });\n          break;\n        case AUTHENTICATE_TYPES.ENGAGE_TOKEN:\n          _buildHttpRequest(this.authType, 'login', {});\n          break;\n      }\n    };\n\n    /*\n     * response:\n     * {\n     *   \"refreshToken\": \"223867e6-ad0f-4af1-bbe7-5090d8259065\",\n     *   \"accessToken\": \"\",\n     *   \"tokenType\": \"Bearer\",\n     *   \"platformId\": \"local\",\n     *   \"iqUrl\": \"d01-dev.vacd.biz\",\n     *   \"port\": 8080,\n     *   \"agentDetails\": [\n     *       {\n     *           \"agentId\": 1,\n     *           \"firstName\": \"D\",\n     *           \"lastName\": \"LB\",\n     *           \"email\": \"dlb@somewhere.com\",\n     *           \"username\": \"dlbooks\"\n     *       }\n     *   ],\n     *   \"adminId\": null,\n     *   \"mainAccountId\": \"99990000\"\n     * }\n     */\n    AuthenticateRequest.prototype.processResponse = function(response) {\n      const model = UIModel.getInstance();\n      model.authenticatePacket = response; // raw response packet\n      model.authenticateRequest.accessToken = response.accessToken; // TODO - dlb - store in local storage\n      model.authenticateRequest.refreshToken = response.refreshToken;\n      model.authenticateRequest.tokenType = response.tokenType;\n      model.authenticateRequest.socketUrl = response.iqUrl;\n      model.authenticateRequest.socketPort = response.port;\n      model.authenticateRequest.agents = response.agentDetails;\n      model.authenticateRequest.platformId = response.platformId;\n\n      return model.authenticateRequest;\n    };\n\n    function _buildHttpRequest(authType, path, queryParams) {\n      const model = UIModel.getInstance();\n      const baseUrl = model.authHost + model.baseAuthUri;\n      const params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      switch (authType) {\n        case AUTHENTICATE_TYPES.USERNAME_PASSWORD:\n        case AUTHENTICATE_TYPES.RC_TOKEN:\n          params.queryParams = queryParams;\n          var errorMsg = `Error on agent authenticate POST to engage-auth. URL: ${baseUrl}${path}`;\n          new HttpService(baseUrl).httpPost(path, params).then(\n            function(response) {\n              try {\n                response = JSON.parse(response.response);\n\n                const authenticateResponse = UIModel.getInstance().authenticateRequest.processResponse(\n                  response,\n                );\n                utils.fireCallback(\n                  UIModel.getInstance().libraryInstance,\n                  CALLBACK_TYPES.AUTHENTICATE,\n                  authenticateResponse,\n                );\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              }\n            },\n            function(err) {\n              const errResponse = {\n                type: 'Authenticate Error',\n                message: errorMsg,\n              };\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              utils.fireCallback(\n                UIModel.getInstance().libraryInstance,\n                CALLBACK_TYPES.AUTHENTICATE,\n                errResponse,\n              );\n            },\n          );\n          break;\n        case AUTHENTICATE_TYPES.ENGAGE_TOKEN:\n          var errMsg = `Error on agent authenticate GET to engage-auth. URL: ${baseUrl}${path}`;\n          params.headers.Authorization = `Bearer ${utils.toString(\n            UIModel.getInstance().authenticateRequest.engageAccessToken,\n          )}`;\n          new HttpService(baseUrl).httpGet(path, params).then(\n            function(response) {\n              try {\n                response = JSON.parse(response.response);\n\n                const authenticateResponse = UIModel.getInstance().authenticateRequest.processResponse(\n                  response,\n                );\n                utils.fireCallback(\n                  UIModel.getInstance().libraryInstance,\n                  CALLBACK_TYPES.AUTHENTICATE,\n                  authenticateResponse,\n                );\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errMsg, err);\n              }\n            },\n            function(err) {\n              utils.logMessage(LOG_LEVELS.WARN, errMsg, err);\n              utils.fireCallback(\n                UIModel.getInstance().libraryInstance,\n                CALLBACK_TYPES.AUTHENTICATE,\n                err,\n              );\n            },\n          );\n          break;\n      }\n    }\n\n    const BargeInRequest = function(audioType, agentId, uii, monitorAgentId) {\n      this.audioType = audioType || 'FULL';\n      this.agentId = agentId;\n      this.uii = uii;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UIV22008931055822\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"BARGE-IN\",\n     *      \"agent_id\":{\"#text\":\"94\"},\n     *      \"uii\":{\"#text\":\"200809031054510000000900020961\"},\n     *      \"audio_state\":{\"#text\":\"FULL\"},\n     *      \"monitor_agent_id\":{\"#text\":\"1856\"}\n     *    }\n     * }\n     */\n    BargeInRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.BARGE_IN,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          audio_state: {\n            '#text': utils.toString(this.audioType),\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes BARGE-IN packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008090317393001252\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"BARGE-IN\",\n     *      \"agent_id\":{\"#text\":\"94\"},\n     *      \"uii\":{},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{\"#text\":\"Barge-In processed successfully!\"},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    BargeInRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(LOG_LEVELS.DEBUG, formattedResponse.message, response);\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          `There was an error processing the Barge-In request. ${formattedResponse.detail}`,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    const CallNotesRequest = function(notes) {\n      this.notes = notes;\n    };\n\n    /*\n     * This event is responsible for allowing an agent to tag a call with notes\n     */\n    CallNotesRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.CALL_NOTES,\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class process CALL-NOTES packets rec'd from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"CALL-NOTES\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{}\n     *   }\n     * }\n     */\n    CallNotesRequest.prototype.processResponse = function(response) {\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      if (formattedResponse.status === 'OK') {\n        formattedResponse.message = 'Call notes have been updated.';\n        formattedResponse.type = 'INFO_EVENT';\n      } else {\n        formattedResponse.type = 'ERROR_EVENT';\n        formattedResponse.message = 'Unable to update notes.';\n      }\n\n      return formattedResponse;\n    };\n\n    const CallbackCancelRequest = function(leadId, agentId) {\n      this.agentId = agentId || UIModel.getInstance().agentSettings.agentId;\n      this.leadId = leadId;\n    };\n\n    CallbackCancelRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CALLBACK_CANCEL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          lead_id: {\n            '#text': this.leadId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    // NOTE: cancel callback response sent as a generic notification message\n\n    const CallbacksPendingRequest = function(agentId) {\n      this.agentId = agentId || UIModel.getInstance().agentSettings.agentId;\n    };\n\n    CallbacksPendingRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CALLBACK_PENDING,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling an PENDING-CALLBACKS response packet from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"PENDING-CALLBACKS\",\n     *      \"lead\":{\n     *          \"@aux_data1\":\"\",\n     *          \"@aux_data2\":\"\",\n     *          \"@aux_data3\":\"\",\n     *          \"@aux_data4\":\"\",\n     *          \"@aux_data5\":\"\",\n     *          \"@destination\":\"5555555555\",\n     *          \"@dial_group_id\":\"\",\n     *          \"@dial_group_name\":\"\",\n     *          \"@dial_time\":\"2016-08-03 10:00\",\n     *          \"@extern_id\":\"\",\n     *          \"@lead_id\":\"\",\n     *          \"lead_id\":{},\n     *          \"extern_id\":{},\n     *          \"extern_id\":{},\n     *          \"first_name\":{},\n     *          \"mid_name\":{},\n     *          \"last_name\":{},\n     *          \"suffix\":{},\n     *          \"title\":{},\n     *          \"address1\":{},\n     *          \"address2\":{},\n     *          \"city\":{},\n     *          \"state\":{},\n     *          \"zip\":{},\n     *          \"gate_keeper\":{}\n     *      }\n     *   }\n     * }\n     */\n    CallbacksPendingRequest.prototype.processResponse = function(response) {\n      let leadsRaw = response.ui_response.lead;\n      const leads = [];\n      if (!Array.isArray(leadsRaw)) {\n        leadsRaw = [leadsRaw];\n      }\n\n      for (let l = 0; l < leadsRaw.length; l++) {\n        const leadRaw = leadsRaw[l];\n        if (leadRaw == null) {\n          continue;\n        }\n\n        leads.push(parseLead(leadRaw));\n      }\n\n      UIModel.getInstance().agentSettings.pendingCallbacks = JSON.parse(\n        JSON.stringify(leads),\n      );\n\n      return UIModel.getInstance().agentSettings.pendingCallbacks;\n    };\n\n    function parseLead(leadRaw) {\n      const lead = {\n        auxData1: leadRaw['@aux_data1'],\n        auxData2: leadRaw['@aux_data2'],\n        auxData3: leadRaw['@aux_data3'],\n        auxData4: leadRaw['@aux_data4'],\n        auxData5: leadRaw['@aux_data5'],\n        destination: leadRaw['@destination'],\n        dialGroupId: leadRaw['@dial_group_id'],\n        dialGroupName: leadRaw['@dial_group_name'],\n        dialTime: leadRaw['@dial_time'],\n        externId: leadRaw['@extern_id'],\n        leadId: leadRaw['@lead_id'],\n        firstName: utils.getText(leadRaw, 'first_name'),\n        midName: utils.getText(leadRaw, 'mid_name'),\n        lastName: utils.getText(leadRaw, 'last_name'),\n        sufix: utils.getText(leadRaw, 'suffix'),\n        title: utils.getText(leadRaw, 'title'),\n        address1: utils.getText(leadRaw, 'address1'),\n        address2: utils.getText(leadRaw, 'address2'),\n        city: utils.getText(leadRaw, 'city'),\n        state: utils.getText(leadRaw, 'state'),\n        zip: utils.getText(leadRaw, 'zip'),\n        gateKeeper: utils.getText(leadRaw, 'gate_keeper'),\n      };\n\n      return lead;\n    }\n\n    /*\n     * This request is used to get the list of dispositions for a given campaign\n     * E.g. in the lead search form for manual passes\n     *\n     */\n    const CampaignDispositionsRequest = function(campaignId) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.campaignId = campaignId;\n    };\n\n    CampaignDispositionsRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CAMPAIGN_DISPOSITIONS,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          campaign_id: {\n            '#text': utils.toString(this.campaignId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling CAMPAIGN-DISPOSITIONS packets received\n     * from IntelliQueue. It will save a copy of it in the UIModel.\n     *\n     * {\"ui_response\":{\n     *      \"@campaign_id\":\"60403\",\n     *      \"@message_id\":\"IQ10012016081813480400006\",\n     *      \"@response_to\":\"0b61c3ca-c4fc-9942-c139-da4978053c9d\",\n     *      \"@type\":\"CAMPAIGN-DISPOSITIONS\",\n     *      \"outdial_dispositions\":{\n     *          \"disposition\":[\n     *              {\"@disposition_id\":\"1\",\"#text\":\"requeue\"},\n     *              {\"@disposition_id\":\"2\",\"#text\":\"complete\"}\n     *          ]\n     *       }\n     *    }\n     * }\n     */\n    CampaignDispositionsRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const model = UIModel.getInstance();\n      const dispositions = utils.processResponseCollection(\n        resp,\n        'outdial_dispositions',\n        'disposition',\n        'disposition',\n      );\n\n      model.outboundSettings.campaignDispositions = dispositions;\n      return dispositions;\n    };\n\n    const ChatStateRequest = function(chatState) {\n      this.chatState = (chatState && chatState.toUpperCase()) || '';\n    };\n\n    ChatStateRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_STATE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          state: {\n            '#text': this.chatState,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes CHAT-STATE packets rec'd from IQ. It will check the state of the\n     * packet and then set the state on the model.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"AGENT-STATE\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"prev_state\":{\"#text\":\"CHAT-PRESENTED\"},\n     *      \"current_state\":{\"#text\":\"CHAT-ENGAGED\"}\n     *   }\n     * }\n     */\n    ChatStateRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const status = utils.getText(resp, 'status');\n      const prevState = utils.getText(resp, 'prev_state');\n      const currState = utils.getText(resp, 'current_state');\n      const model = UIModel.getInstance();\n\n      // add message and detail if present\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = response.ui_response.agent_id['#text'] || '';\n      formattedResponse.previousState = prevState;\n      formattedResponse.currentState = currState;\n\n      if (status == 'OK') {\n        // Update the state in the UIModel\n        model.agentSettings.currentChatState = currState;\n        model.chatStatePacket = response;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to change chat state';\n        }\n\n        // log message response\n        const message = `Unable to change chat state. ${formattedResponse.detail}`;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const XferColdRequest = function(\n      dialDest,\n      callerId,\n      sipHeaders,\n      countryId,\n    ) {\n      this.dialDest = dialDest;\n      this.callerId = callerId || '';\n      this.sipHeaders = sipHeaders || [];\n      this.countryId = countryId || '';\n    };\n\n    XferColdRequest.prototype.formatJSON = function() {\n      const fields = [];\n      for (let i = 0; i < this.sipHeaders.length; i++) {\n        const fieldObj = this.sipHeaders[i];\n        fields.push({\n          '@name': utils.toString(fieldObj.name),\n          '@value': utils.toString(fieldObj.value),\n        });\n      }\n\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_COLD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          xfer_header: fields,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes COLD-XFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"COLD-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231447590139000000000200\"},\n     *      \"session_id\":{\"#text\":\"3\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"OK\"},\n     *      \"detail\":{}\n     *   }\n     * }\n     */\n    XferColdRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.dialDest = utils.getText(resp, 'dial_dest');\n\n      if (formattedResponse.status === 'OK') {\n      } else {\n        // log message response\n        const message = `There was an error processing the Cold Xfer request. ${formattedResponse.message} : ${formattedResponse.detail}`;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const DirectAgentTransfer = function(targetAgentId, transferType, uii) {\n      this.targetAgentId = targetAgentId;\n      this.transferType = transferType;\n      this.uii = uii || UIModel.getInstance().currentCall.uii;\n    };\n\n    DirectAgentTransfer.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.DIRECT_AGENT_TRANSFER,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          target_agent_id: {\n            '#text': utils.toString(this.targetAgentId),\n          },\n          transfer_type: {\n            '#text': utils.toString(this.transferType),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes DIRECT-AGENT-TRANSFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"DIRECT-AGENT-TRANSFER\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{\"#text\":\"OK\"},\n     *      \"type\":{\"#text\":\"WARM|COLD|CANCEL\"}\n     *   }\n     * }\n     */\n    DirectAgentTransfer.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.type = utils.getText(resp, 'type');\n\n      if (formattedResponse.status !== 'OK') {\n        // log message response\n        const message = `There was an error processing the Direct Agent Transfer request. ${formattedResponse.message} : ${formattedResponse.detail}`;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const DirectAgentTransferList = function() {};\n\n    DirectAgentTransferList.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes DIRECT-AGENT-TRANSFER-LIST packets rec'd from IQ.\n     *\n     *  {\n     *      \"ui_response\":{\n     *          \"@message_id\":\"IQD01DEV2018052917202600038\",\n     *          \"@response_to\":\"f0b2e8a3-87fe-13ee-4d00-9d145bfe2be8\",\n     *          \"@type\":\"DIRECT-AGENT-TRANSFER-LIST\",\n     *          \"status\":{\n     *              \"#text\":\"true\"\n     *          },\n     *          \"message\":{\n     *              \"#text\":\"OK\"\n     *          },\n     *          \"agents\": [\n     *             {\n     *                 \"@agent_aux_state\":\"AVAILABLE\",\n     *                 \"@agent_id\":\"1184160\",\n     *                 \"@agent_state\":\"AVAILABLE\",\n     *                 \"@available\":\"true\",\n     *                 \"@first_name\":\"ross\",\n     *                 \"@last_name\":\"m\",\n     *                 \"@pending_disp\":\"false\",\n     *                 \"@state_duration\":\"379\",\n     *                 \"@username\":\"rm1\"\n     *             },\n     *             {\n     *                 \"@agent_aux_state\":\"AVAILABLE\",\n     *                 \"@agent_id\":\"1184161\",\n     *                 \"@agent_state\":\"AVAILABLE\",\n     *                 \"@available\":\"true\",\n     *                 \"@first_name\":\"ross\",\n     *                 \"@last_name\":\"m\",\n     *                 \"@pending_disp\":\"false\",\n     *                 \"@state_duration\":\"84\",\n     *                 \"@username\":\"rm2\"\n     *             }\n     *         ]\n     *      }\n     *  }\n     */\n    DirectAgentTransferList.prototype.processResponse = function(response) {\n      const formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.agents = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'agents',\n      );\n\n      if (formattedResponse.status !== 'OK') {\n        // log message response\n        const message = `There was an error processing the Direct Agent Transfer List request. ${formattedResponse.message} : ${formattedResponse.detail}`;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const DispositionRequest = function(\n      uii,\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      contactForwardNumber,\n      survey,\n      externId,\n      leadId,\n      requestId,\n    ) {\n      this.uii = uii;\n      this.dispId = dispId;\n      this.notes = notes;\n      this.callback = callback;\n      this.callbackDTS = callbackDTS || '';\n      this.contactForwardNumber = contactForwardNumber || null;\n      this.externId = externId || null; // outbound-disposition only\n      this.leadId = leadId || null; // outbound-disposition only\n      this.requestId = requestId || null; // outbound-disposition only (pipe leads)\n\n      /*\n       * survey = {\n       *      first_name: {\n       *          leadField: \"first_name\"\n       *          value: \"Geoff\"\n       *      },\n       *      last_name: {\n       *          leadField: \"last_name\"\n       *          value: \"Mina\"\n       *      }\n       *      ...\n       * }\n       */\n      this.survey = survey || null;\n    };\n\n    /*\n     * This class is responsible for creating an inbound or outbound disposition packet to\n     * send to intelliqueue. It will grab uii and agent_id directly from packets saved\n     * in the UIModel. Then, using the information passed in, it will\n     * create the remainder of the packet. This class is called from the ExtendedCallForm\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"IQ20160817145840132\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OUTDIAL-DISPOSITION|INBOUND-DISPOSITION\",\n     *      \"session_id\":{\"#text\":\"2\"},  <-- ONLY WHEN AVAILABLE otherwise the node is left blank. this is the AGENT session_id\n     *      \"uii\":{\"#text\":\"201608171658440139000000000165\"},\n     *      \"agent_id\":{\"#text\":\"1180958\"},\n     *      \"lead_id\":{\"#text\":\"1800\"},                 <-- OUTDIAL-DISPOSITION ONLY\n     *      \"outbound_externid\":{\"#text\":\"3038593775\"}, <-- OUTDIAL-DISPOSITION ONLY\n     *      \"pending_request_id\":{\"#text\":\"\"},          <-- OUTDIAL-DISPOSITION ONLY\n     *      \"disposition_id\":{\"#text\":\"5950\"},\n     *      \"notes\":{\"#text\":\"note here\"},\n     *      \"call_back\":{\"#text\":\"FALSE\"},\n     *      \"call_back_DTS\":{},\n     *      \"contact_forwarding\":{},\n     *      \"survey\":{\n     *          \"response\":[\n     *              {\"@extern_id\":\"text_box\",\"@lead_update_column\":\"\",\"#text\":\"hello\"},\n     *              {\"@extern_id\":\"check_box\",\"@lead_update_column\":\"\",\"#text\":\"20\"},\n     *              {\"@extern_id\":\"radio_save\",\"@lead_update_column\":\"\",\"#text\":\"23\"}\n     *          ]\n     *      }\n     *   }\n     * }\n     */\n    DispositionRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          '@type': MESSAGE_TYPES.OUTDIAL_DISPOSITION,\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          session_id: {\n            '#text': '',\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          call_back: {\n            '#text': this.callback === true ? 'TRUE' : 'FALSE',\n          },\n          call_back_DTS: {\n            '#text': utils.toString(this.callbackDTS),\n          },\n          contact_forwarding: {\n            '#text': utils.toString(this.contactForwardNumber),\n          },\n          outbound_externid: {\n            '#text': utils.toString(this.externId),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n        },\n      };\n\n      if (\n        model.currentCall.outdialDispositions &&\n        model.currentCall.outdialDispositions.type === 'GATE'\n      ) {\n        msg.ui_request['@type'] = MESSAGE_TYPES.INBOUND_DISPOSITION;\n      }\n\n      if (model.currentCall.sessionId) {\n        msg.ui_request.session_id = { '#text': model.currentCall.sessionId };\n      }\n\n      /*\n       * converts survey to this response\n       * survey : {\n       *      response: [\n       *          { \"@extern_id\":\"\", \"@lead_update_column\":\"\", \"#text\":\"\" }\n       *      ]\n       * }\n       */\n      if (this.survey !== null) {\n        const response = [];\n        const keys = Object.keys(this.survey);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const obj = {\n            '@extern_id': key,\n            '@lead_update_column': utils.toString(this.survey[key].leadField),\n            '#text': utils.toString(this.survey[key].value),\n          };\n          response.push(obj);\n        }\n        msg.ui_request.survey = { response };\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    const DispositionManualPassRequest = function(\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      leadId,\n      requestId,\n      externId,\n    ) {\n      this.dispId = dispId;\n      this.notes = notes;\n      this.callback = callback;\n      this.callbackDTS = callbackDTS || '';\n      this.leadId = leadId || null;\n      this.requestId = requestId || null;\n      this.externId = externId || null;\n    };\n\n    /*\n     * Sends an OUTDIAL-DISPOSITION request, just a separate class\n     * specifically for dispositions on manual pass.\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"UIV220089241119416\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OUTDIAL-DISPOSITION\",\n     *      \"manual_disp\":{\"#text\":\"TRUE\"},\n     *      \"request_key\":{\"#text\":\"IQ10012016081719070100875\"},\n     *      \"session_id\":{},\n     *      \"uii\":{},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"lead_id\":{\"#text\":\"213215\"},\n     *      \"outbound_externid\":{\"#text\":\"909809\"},\n     *      \"disposition_id\":{\"#text\":\"126\"},\n     *      \"notes\":{\"#text\":\"here are my notes :)\"},\n     *      \"call_back\":{\"#text\":\"TRUE | FALSE\"},\n     *      \"call_back_DTS\":{\"#text\":\"2008-09-30 22:30:00 | null\"},\n     *      \"contact_forwarding\":{\"#text\":\"null\"}\n     *    }\n     * }\n     */\n    DispositionManualPassRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          '@type': MESSAGE_TYPES.OUTDIAL_DISPOSITION,\n          manual_disp: {\n            '#text': 'TRUE',\n          },\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          request_key: {\n            '#text': utils.toString(this.requestId),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          call_back: {\n            '#text': this.callback === true ? 'TRUE' : 'FALSE',\n          },\n          call_back_DTS: {\n            '#text': utils.toString(this.callbackDTS),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          extern_id: {\n            '#text': utils.toString(this.externId),\n          },\n          contact_forwarding: {\n            '#text': 'null',\n          },\n          session_id: {},\n          uii: {},\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const ExtensionPresenceRequest = function() {};\n\n    ExtensionPresenceRequest.prototype.getExtensionPresenceInfo = function(\n      extensionIds,\n    ) {\n      UIModel.getInstance().ExtensionPresenceRequest = this;\n      _getExtensionPresenceInfo('rcdirectory/getExtensionPresenceStatus', {\n        extensionIds,\n      });\n    };\n\n    ExtensionPresenceRequest.prototype.processResponse = function(response) {\n      UIModel.getInstance().extensionPresenceResponse = response;\n      return UIModel.getInstance().extensionPresenceResponse;\n    };\n\n    function _getExtensionPresenceInfo(path, queryParams) {\n      const model = UIModel.getInstance();\n      const baseUrl = model.authHost + model.baseApiUri;\n      const engageAccessToken = `Bearer ${utils.toString(\n        UIModel.getInstance().authenticateRequest.engageAccessToken,\n      )}`;\n      const params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      params.headers.Authorization = engageAccessToken;\n      params.queryParams = queryParams;\n      const errorMsg = `Error while fetching extension presence response. URL: ${baseUrl}${path}`;\n\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function(response) {\n          try {\n            response = JSON.parse(response.response);\n            const extensionPresenceResponse = UIModel.getInstance().extensionPresenceRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.EXTENSION_PRESENCE,\n              extensionPresenceResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function(err) {\n          const errResponse = {\n            type: 'Error while fetching extension presence response.',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.EXTENSION_PRESENCE,\n            errResponse,\n          );\n        },\n      );\n    }\n\n    const HangupRequest = function(sessionId, resetPendingDisp) {\n      this.sessionId = sessionId || null;\n      this.resetPendingDisp = resetPendingDisp || false;\n    };\n\n    HangupRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.HANGUP,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(UIModel.getInstance().currentCall.uii),\n          },\n          session_id: {\n            '#text': utils.toString(\n              this.sessionId === null\n                ? UIModel.getInstance().currentCall.sessionId\n                : this.sessionId,\n            ),\n          },\n          cancel_pending_disp: {\n            '#text': this.resetPendingDisp === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const HoldRequest = function(holdState, sessionId) {\n      this.holdState = holdState;\n      this.sessionId = sessionId || '1';\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"HOLD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"1\"},\n     *      \"hold_state\":{\"#text\":\"ON\"}\n     *    }\n     * }\n     */\n    HoldRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.HOLD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n          hold_state: {\n            '#text':\n              this.holdState === true || this.holdState === 'true'\n                ? 'ON'\n                : 'OFF',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes HOLD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"HOLD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"1\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"hold_state\":{\"#text\":\"ON\"}\n     *    }\n     * }\n     */\n    HoldRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n      let currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.holdState = utils.getText(resp, 'hold_state') === 'ON';\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message = `Broadcasting new hold state of ${formattedResponse.holdState}`;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            `Broadcasting new hold state of ${formattedResponse.holdState}`,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Hold Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = `Error processing HOLD request. ${+formattedResponse.message}\\n${\n            formattedResponse.detail\n          }`;\n        }\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          `Error processing HOLD request. ${formattedResponse.detail}`,\n          response,\n        );\n      }\n\n      const model = UIModel.getInstance();\n      if (\n        formattedResponse.sessionId !== '1' &&\n        model.transferSessions[formattedResponse.sessionId]\n      ) {\n        // we have a hold for a transfer session\n        model.transferSessions[formattedResponse.sessionId].onHold =\n          formattedResponse.holdState;\n      }\n\n      return formattedResponse;\n    };\n\n    const LeadHistoryRequest = function(leadId) {\n      this.leadId = leadId;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"lead_id\":{\"#text\":\"12\"},\n     *    }\n     * }\n     */\n    LeadHistoryRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_HISTORY,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-HISTORY packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@lead_id\":\"2653\",\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"previous_dial\":{\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *      }\n     *   }\n     * }\n     *\n     * OR\n     *\n     * {\"ui_response\":{\n     *      \"@lead_id\":\"2653\",\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"previous_dial\":[\n     *        {\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *        },\n     *        {\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *        }\n     *      ]\n     *   }\n     * }\n     */\n    LeadHistoryRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const histResponse = {\n        leadId: resp['@lead_id'],\n      };\n\n      let history = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'previous_dial',\n      );\n\n      // always return array, even if only one item\n      if (!Array.isArray(history)) {\n        history = [history];\n      }\n      histResponse.leadHistory = history;\n\n      return histResponse;\n    };\n\n    const LeadInsertRequest = function(dataObj) {\n      // handle boolean value conversion\n      if (dataObj.agent_reserved && dataObj.agent_reserved === true) {\n        dataObj.agent_reserved = '1';\n      } else {\n        dataObj.agent_reserved = '0';\n      }\n\n      if (dataObj.dialable && dataObj.dialable === true) {\n        dataObj.dialable = '1';\n      } else {\n        dataObj.dialable = '0';\n      }\n\n      this.dataObj = dataObj;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-INSERT\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"campaign_id\":{\"#text\":\"\"},\n     *      \"lead_phone\":{\"#text\":\"\"},\n     *      \"dialable\":{\"#text\":\"\"},\n     *      \"agent_reserved\":{\"#text\":\"\"},\n     *      \"callback_dts\":{\"#text\":\"\"},\n     *      \"first_name\":{\"#text\":\"\"},\n     *      \"mid_name\":{\"#text\":\"\"},\n     *      \"last_name\":{\"#text\":\"\"},\n     *      \"suffix\":{\"#text\":\"\"},\n     *      \"title\":{\"#text\":\"\"},\n     *      \"address1\":{\"#text\":\"\"},\n     *      \"address2\":{\"#text\":\"\"},\n     *      \"city\":{\"#text\":\"\"},\n     *      \"state\":{\"#text\":\"\"},\n     *      \"zip\":{\"#text\":\"\"},\n     *      \"email\":{\"#text\":\"\"},\n     *      \"gateKeeper\":{\"#text\":\"\"},\n     *      \"aux_data1\":{\"#text\":\"\"},\n     *      \"aux_data2\":{\"#text\":\"\"},\n     *      \"aux_data3\":{\"#text\":\"\"},\n     *      \"aux_data4\":{\"#text\":\"\"},\n     *      \"aux_data5\":{\"#text\":\"\"},\n     *    }\n     * }\n     */\n    LeadInsertRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_INSERT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.dataObj.agent_id),\n          },\n          campaign_id: {\n            '#text': utils.toString(this.dataObj.campaign_id),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.dataObj.lead_phone),\n          },\n          dialable: {\n            '#text': utils.toString(this.dataObj.dialable),\n          },\n          agent_reserved: {\n            '#text': utils.toString(this.dataObj.agent_reserved),\n          },\n          call_back_dts: {\n            '#text': utils.toString(this.dataObj.callback_dts),\n          },\n          first_name: {\n            '#text': utils.toString(this.dataObj.first_name),\n          },\n          mid_name: {\n            '#text': utils.toString(this.dataObj.mid_name),\n          },\n          last_name: {\n            '#text': utils.toString(this.dataObj.last_name),\n          },\n          suffix: {\n            '#text': utils.toString(this.dataObj.suffix),\n          },\n          title: {\n            '#text': utils.toString(this.dataObj.title),\n          },\n          address1: {\n            '#text': utils.toString(this.dataObj.address1),\n          },\n          address2: {\n            '#text': utils.toString(this.dataObj.address2),\n          },\n          city: {\n            '#text': utils.toString(this.dataObj.city),\n          },\n          state: {\n            '#text': utils.toString(this.dataObj.state),\n          },\n          zip: {\n            '#text': utils.toString(this.dataObj.zip),\n          },\n          email: {\n            '#text': utils.toString(this.dataObj.email),\n          },\n          gate_keeper: {\n            '#text': utils.toString(this.dataObj.gate_keeper),\n          },\n          aux_data1: {\n            '#text': utils.toString(this.dataObj.aux_data1),\n          },\n          aux_data2: {\n            '#text': utils.toString(this.dataObj.aux_data2),\n          },\n          aux_data3: {\n            '#text': utils.toString(this.dataObj.aux_data3),\n          },\n          aux_data4: {\n            '#text': utils.toString(this.dataObj.aux_data4),\n          },\n          aux_data5: {\n            '#text': utils.toString(this.dataObj.aux_data5),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-INSERT packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-INSERT\",\n     *      \"status\":{\"#text\":\"TRUE|FALSE\"},\n     *      \"msg\":{\"#text\":\"\"},\n     *      \"detail\":{\"#text\":\"\"},\n     *   }\n     * }\n     */\n    LeadInsertRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = resp.msg['#text'];\n\n      return formattedResponse;\n    };\n\n    const LeadUpdateRequest = function(leadId, leadPhone, baggage) {\n      this.leadId = leadId;\n      this.leadPhone = leadPhone;\n      this.baggage = baggage;\n      this.agentId = utils.toString(\n        UIModel.getInstance().agentSettings.agentId,\n      );\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-UPDATE\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"lead_id\":{\"#text\":\"12\"},\n     *      \"lead_phone\":{\"#text\":\"12\"},\n     *       \"baggage\":{\n     *          \"lead_id\":{\"#text\":\"64306\"},\n     *          \"extern_id\":{\"#text\":\"9548298548\"},\n     *          \"first_name\":{\"#text\":\"Ryant\"},\n     *          \"mid_name\":{},\n     *          \"last_name\":{\"#text\":\"Taylor\"},\n     *          \"state\":{\"#text\":\"OH\"},\n     *          \"aux_data1\":{\"#text\":\"BMAK\"},\n     *          \"aux_data2\":{\"#text\":\"BMAK-041653-934\"},\n     *          \"aux_data3\":{\"#text\":\"Call Ctr 1\"},\n     *          \"aux_data4\":{},\n     *          \"aux_data5\":{},\n     *          \"address1\":{\"#text\":\"8010 Maryland Ave\"},\n     *          \"address2\":{},\n     *          \"city\":{\"#text\":\"Cleveland\"},\n     *          \"zip\":{\"#text\":\"44105\"},\n     *          \"aux_external_url\":{},\n     *          \"aux_greeting\":{},\n     *          \"aux_phone\":{}\n     *      },\n     *    }\n     * }\n     */\n    LeadUpdateRequest.prototype.formatJSON = function() {\n      // make sure required baggage fields are present\n      this.baggage = _formatBaggage(this.baggage);\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_UPDATE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          baggage: this.baggage,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-UPDATE packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-UPDATE\",\n     *      \"status\":{\"#text\":\"TRUE|FALSE\"},\n     *      \"msg\":{\"#text\":\"64306\"},\n     *      \"detail\":{\"#text\":\"64306\"},\n     *   }\n     * }\n     */\n    LeadUpdateRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = resp.msg['#text'];\n\n      return formattedResponse;\n    };\n\n    var _formatBaggage = function(baggage) {\n      const bag = {};\n      bag.first_name = { '#text': baggage.first_name || '' };\n      bag.mid_name = { '#text': baggage.mid_name || '' };\n      bag.last_name = { '#text': baggage.last_name || '' };\n      bag.suffix = { '#text': baggage.suffix || '' };\n      bag.title = { '#text': baggage.title || '' };\n      bag.address1 = { '#text': baggage.address1 || '' };\n      bag.address2 = { '#text': baggage.address2 || '' };\n      bag.city = { '#text': baggage.city || '' };\n      bag.state = { '#text': baggage.state || '' };\n      bag.zip = { '#text': baggage.zip || '' };\n      bag.email = { '#text': baggage.email || '' };\n      bag.gate_keeper = { '#text': baggage.gate_keeper || '' };\n      bag.extern_id = { '#text': baggage.extern_id || '' };\n      bag.aux_data1 = { '#text': baggage.aux_data1 || '' };\n      bag.aux_data2 = { '#text': baggage.aux_data2 || '' };\n      bag.aux_data3 = { '#text': baggage.aux_data3 || '' };\n      bag.aux_data4 = { '#text': baggage.aux_data4 || '' };\n      bag.aux_data5 = { '#text': baggage.aux_data5 || '' };\n\n      return bag;\n    };\n\n    const LoginRequest = function(\n      dialDest,\n      queueIds,\n      chatIds,\n      skillProfileId,\n      dialGroupId,\n      updateFromAdminUI,\n      isForce,\n    ) {\n      this.queueIds = queueIds || [];\n      this.chatIds = chatIds || [];\n      this.skillProfileId = skillProfileId || '';\n      this.dialGroupId = dialGroupId || '';\n      this.dialDest = dialDest || '';\n      this.updateFromAdminUI = updateFromAdminUI || false;\n      this.loginType = 'NO-SELECTION';\n      this.updateLogin = false;\n      this.isForce = isForce;\n\n      // Remove any ids agent doesn't have access to\n      const model = UIModel.getInstance();\n      this.queueIds = utils.checkExistingIds(\n        model.inboundSettings.availableQueues,\n        this.queueIds,\n        'gateId',\n      );\n      this.chatIds = utils.checkExistingIds(\n        model.chatSettings.availableChatQueues,\n        this.chatIds,\n        'chatQueueId',\n      );\n      this.skillProfileId =\n        utils.checkExistingIds(\n          model.inboundSettings.availableSkillProfiles,\n          [this.skillProfileId],\n          'profileId',\n        )[0] || '';\n      this.dialGroupId =\n        utils.checkExistingIds(\n          model.outboundSettings.availableOutdialGroups,\n          [this.dialGroupId],\n          'dialGroupId',\n        )[0] || '';\n\n      // Set loginType value\n      if (this.queueIds.length > 0 && this.dialGroupId !== '') {\n        this.loginType = 'BLENDED';\n      } else if (this.queueIds.length > 0) {\n        this.loginType = 'INBOUND';\n      } else if (this.dialGroupId !== '') {\n        this.loginType = 'OUTBOUND';\n      } else if (this.chatIds.length > 0) {\n        this.loginType = 'CHAT';\n      } else {\n        this.loginType = 'NO-SELECTION';\n      }\n\n      // set updateLogin value\n      if (model.agentSettings.isLoggedIn) {\n        this.updateLogin = true;\n        this.dialDest = UIModel.getInstance().agentSettings.dialDest;\n      }\n\n      // validate dialDest is sip or 10-digit num\n      if (!utils.validateDest(this.dialDest)) {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          `dialDest [${this.dialDest}] must be a valid sip or 10-digit DID`,\n          '',\n        );\n      }\n    };\n\n    LoginRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          access_token: {\n            '#text': UIModel.getInstance().authenticateRequest.accessToken,\n          },\n          hash_code: {\n            '#text': UIModel.getInstance().connectionSettings.hashCode,\n          },\n          allow_multisocket: {\n            '#text': utils.toString(\n              UIModel.getInstance().applicationSettings.allowMultiSocket,\n            ),\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          login_type: {\n            '#text': this.loginType,\n          },\n          update_login: {\n            '#text': utils.toString(this.updateLogin),\n          },\n          outdial_group_id: {\n            '#text': utils.toString(this.dialGroupId),\n          },\n          skill_profile_id: {\n            '#text': utils.toString(this.skillProfileId),\n          },\n          update_from_adminui: {\n            '#text': utils.toString(this.updateFromAdminUI),\n          },\n          agent_platform_id: {\n            '#text': utils.toString(2), // Hard-coded platformId for agent-js repo\n          },\n          is_force: {\n            '#text': utils.toString(this.isForce),\n          },\n        },\n      };\n\n      // add arrays\n      const queueIds = [];\n      for (var i = 0; i < this.queueIds.length; i++) {\n        if (this.queueIds[i] !== '') {\n          queueIds.push({ '#text': utils.toString(this.queueIds[i]) });\n        }\n      }\n      if (queueIds.length > 0) {\n        msg.ui_request.gates = { gate_id: queueIds };\n      } else {\n        msg.ui_request.gates = {};\n      }\n\n      const chatIds = [];\n      for (var i = 0; i < this.chatIds.length; i++) {\n        if (this.chatIds[i] !== '') {\n          chatIds.push({ '#text': utils.toString(this.chatIds[i]) });\n        }\n      }\n      if (chatIds.length > 0) {\n        msg.ui_request.chat_queues = { chat_queue_id: chatIds };\n      } else {\n        msg.ui_request.chat_queues = {};\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This function is responsible for handling the response to Login from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082513212000447\",\n     *      \"@response_to\":\"IQ201608251121200\",\n     *      \"@type\":\"LOGIN\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"status\":{\"#text\":\"SUCCESS\"},\n     *      \"message\":{\"#text\":\"Hello Geoffrey Mina!\"},\n     *      \"detail\":{\"#text\":\"Logon request processed successfully!\"},\n     *      \"hash_code\":{\"#text\":\"404946966\"},\n     *      \"login_type\":{\"#text\":\"BLENDED\"},\n     *      \"outdial_group_id\":{\"#text\":\"50692\"},\n     *      \"skill_profile_id\":{\"#text\":\"1513\"},\n     *      \"gates\":{\n     *          \"gate_id\":[\n     *              {\"#text\":\"11116\"},\n     *              {\"#text\":\"11117\"}\n     *          ]\n     *      },\n     *      \"chat_queues\":{\n     *          \"chat_queue_id\":{\"#text\":\"30\"}\n     *      }\n     *    }\n     * }\n     */\n    LoginRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const status = utils.getText(resp, 'status');\n      const detail = utils.getText(resp, 'detail');\n      const model = UIModel.getInstance();\n      let message = '';\n      const formattedResponse = utils.buildDefaultResponse(response);\n      const Lib = UIModel.getInstance().libraryInstance;\n\n      if (detail === 'Logon Session Configuration Updated!') {\n        // this is an update login packet\n        model.agentSettings.updateLoginMode = true;\n\n        message = 'Logon Session Configuration Updated!';\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n      }\n\n      if (status === 'SUCCESS') {\n        if (!model.agentSettings.isLoggedIn) {\n          // fresh login, set UI Model properties\n          model.loginPacket = response;\n          model.agentSettings.isLoggedIn = true;\n          model.agentSettings.loginDTS = new Date();\n          model.connectionSettings.reconnect = true;\n          model.agentPermissions.allowLeadSearch = false;\n          model.agentSettings.dialDest = utils.getText(resp, 'dial_dest');\n          model.agentSettings.loginType = utils.getText(resp, 'login_type');\n          model.agentSettings.accountId = utils.getText(resp, 'account_id');\n          model.agentSettings.corporateDirectory = utils.getText(\n            resp,\n            'corporate_dir',\n          );\n\n          model.connectionSettings.isMultiSocket =\n            utils.getText(resp, 'is_multisocket') === 'true';\n\n          // If we allow multisocket, lets setup a listener for other tabs to request data\n          if (\n            model.applicationSettings.allowMultiSocket === true ||\n            model.connectionSettings.isMultiSocket === true\n          ) {\n            broadcastChannelHelper.init();\n          }\n\n          // Set collection values\n          setDialGroupSettings(response);\n          setGateSettings(response);\n          setChatQueueSettings(response);\n          setSkillProfileSettings(response);\n        } else if (model.agentSettings.updateLoginMode) {\n          model.agentSettings.dialDest = utils.getText(resp, 'dial_dest');\n          model.agentSettings.loginType = utils.getText(resp, 'login_type');\n          model.agentSettings.accountId = utils.getText(resp, 'account_id');\n\n          // This was an update login request\n          model.agentSettings.updateLoginMode = false;\n\n          // reset to false before updating dial group settings\n          model.agentPermissions.allowLeadSearch = false;\n          model.agentPermissions.requireFetchedLeadsCalled = false;\n          model.agentPermissions.allowPreviewLeadFilters = false;\n\n          // Set collection values\n          setDialGroupSettings(response);\n          setGateSettings(response);\n          setChatQueueSettings(response);\n          setSkillProfileSettings(response);\n        } else {\n          // this was a reconnect\n          message = 'Processed a Layer 2 Reconnect Successfully';\n\n          model.connectionSettings.isOnCall = utils.getText(resp, 'is_on_call');\n          model.connectionSettings.activeCallUii = utils.getText(\n            resp,\n            'active_call_uii',\n          );\n          model.connectionSettings.isPendingDisp = utils.getText(\n            resp,\n            'is_pending_disp',\n          );\n\n          if (model.connectionSettings.isOnCall === false) {\n            if (model.currentCall.uii) {\n              const mockEndCallPacket = {\n                ui_notification: {\n                  '@message_id': '',\n                  '@type': 'END-CALL',\n                  uii: { '#text': model.currentCall.uii },\n                  term_reason: { '#text': 'SOCKET-DISCONNECT' },\n                },\n              };\n\n              utils.processNotification(Lib, mockEndCallPacket);\n            }\n\n            if (model.agentSettings.isOffhook) {\n              const offHookTermPacket = {\n                ui_notification: {\n                  agent_id: {\n                    '#text': UIModel.getInstance().agentSettings.agentId,\n                  },\n                  '@type': 'OFF-HOOK-TERM',\n                  '@message_id': '',\n                },\n              };\n\n              const agentProcessOffhookCallback = utils.processNotification(\n                Lib,\n                offHookTermPacket,\n              );\n              Lib.offhookTerm(agentProcessOffhookCallback);\n            }\n          } else if (\n            model.connectionSettings.isOnCall &&\n            (model.currentCall.uii !== model.connectionSettings.activeCallUii ||\n              Lib.waitingForAddSession === true)\n          ) {\n            // if the agent does not know it is on a call, but IQ thinks it is on a call\n            // normally in the case of disconnect during transition\n\n            model.currentCall.uii = model.connectionSettings.activeCallUii;\n            model.currentCall.pendingDisp = false;\n            Lib.hangup(1, true);\n          } else {\n            // agent still is on call and there are transferSessions, verify no transferSession were drop\n            const activeAgentUiSessions = Lib.getTransferSessions();\n            const activeAgentSessions = response.ui_response.active_call_sessions.call_session_id.map(\n              function(sessionObj) {\n                return sessionObj['#text'];\n              },\n            );\n\n            for (const transferSession in activeAgentUiSessions) {\n              if (activeAgentSessions.indexOf(transferSession) === -1) {\n                // if the active ui session is no longer active, we need to tell the ui\n                delete UIModel.getInstance().transferSessions[transferSession];\n              }\n            }\n          }\n\n          utils.logMessage(LOG_LEVELS.INFO, message, response);\n        }\n\n        // always update guid and agent login hashcode if found\n        model.connectionSettings.hashCode =\n          utils.getText(resp, 'hash_code') || model.connectionSettings.hashCode;\n        model.agentSettings.guid =\n          utils.getText(resp, 'guid') || model.agentSettings.guid;\n        model.dataStore.save('agent_id', utils.getText(resp, 'agent_id'));\n        model.dataStore.save('hash_code', utils.getText(resp, 'hash_code'));\n        formattedResponse.agentSettings = model.agentSettings;\n        formattedResponse.agentPermissions = model.agentPermissions;\n        formattedResponse.applicationSettings = model.applicationSettings;\n        formattedResponse.chatSettings = model.chatSettings;\n        formattedResponse.connectionSettings = model.connectionSettings;\n        formattedResponse.inboundSettings = model.inboundSettings;\n        formattedResponse.outboundSettings = model.outboundSettings;\n        formattedResponse.scriptSettings = model.scriptSettings;\n      } else {\n        // Login failed\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Agent configuration attempt failed (2nd layer login)';\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    function setDialGroupSettings(response) {\n      const model = UIModel.getInstance();\n      const outdialGroups = model.outboundSettings.availableOutdialGroups;\n      model.outboundSettings.outdialGroup = {}; // reset\n      for (let g = 0; g < outdialGroups.length; g++) {\n        const group = outdialGroups[g];\n        if (\n          group.dialGroupId === response.ui_response.outdial_group_id['#text']\n        ) {\n          model.agentPermissions.allowLeadSearch = group.allowLeadSearch;\n          model.agentPermissions.allowPreviewLeadFilters =\n            group.allowPreviewLeadFilters;\n          model.agentPermissions.progressiveEnabled = group.progressiveEnabled;\n          model.outboundSettings.outdialGroup = JSON.parse(\n            JSON.stringify(group),\n          ); // copy object\n\n          // Only used for Preview or TCPA Safe accounts.\n          // If set to true, only allow fetching new leads when current leads are called or expired\n          model.agentPermissions.requireFetchedLeadsCalled =\n            group.requireFetchedLeadsCalled;\n        }\n      }\n    }\n\n    function setSkillProfileSettings(response) {\n      const model = UIModel.getInstance();\n      model.inboundSettings.skillProfile = {};\n      const skillProfiles = model.inboundSettings.availableSkillProfiles;\n      for (let s = 0; s < skillProfiles.length; s++) {\n        const profile = skillProfiles[s];\n        const responseId = utils.getText(\n          response.ui_response,\n          'skill_profile_id',\n        );\n        if (profile.profileId === responseId) {\n          model.inboundSettings.skillProfile = JSON.parse(\n            JSON.stringify(profile),\n          ); // copy object\n        }\n      }\n    }\n\n    function setGateSettings(response) {\n      const model = UIModel.getInstance();\n      const gates = model.inboundSettings.availableQueues;\n      const selectedGateIds = [];\n      const selectedGates = [];\n      let gateIds = response.ui_response.gates.gate_id || [];\n\n      if (!Array.isArray(gateIds)) {\n        gateIds = [gateIds];\n      }\n\n      for (let s = 0; s < gateIds.length; s++) {\n        const obj = gateIds[s];\n        selectedGateIds.push(obj['#text']);\n      }\n\n      for (let gIdx = 0; gIdx < gates.length; gIdx++) {\n        const gate = gates[gIdx];\n        if (selectedGateIds.indexOf(gate.gateId) > -1) {\n          selectedGates.push(gate);\n        }\n      }\n\n      model.inboundSettings.queues = JSON.parse(JSON.stringify(selectedGates)); // copy array\n    }\n\n    function setChatQueueSettings(response) {\n      const model = UIModel.getInstance();\n      const chatQueues = model.chatSettings.availableChatQueues;\n      const selectedChatQueueIds = [];\n      const selectedChatQueues = [];\n      const cQueues = response.ui_response.chat_queues || {};\n      let chatQueueIds = cQueues.chat_queue_id || [];\n\n      if (!Array.isArray(chatQueueIds)) {\n        chatQueueIds = [chatQueueIds];\n      }\n\n      for (let c = 0; c < chatQueueIds.length; c++) {\n        const obj = chatQueueIds[c];\n        selectedChatQueueIds.push(obj['#text']);\n      }\n\n      for (let cIdx = 0; cIdx < chatQueues.length; cIdx++) {\n        const chatQueue = chatQueues[cIdx];\n        if (selectedChatQueueIds.indexOf(chatQueue.chatQueueId) > -1) {\n          selectedChatQueues.push(chatQueue);\n        }\n      }\n\n      model.chatSettings.chatQueues = JSON.parse(\n        JSON.stringify(selectedChatQueues),\n      ); // copy array\n    }\n\n    const LoginPhase1Request = function() {};\n\n    LoginPhase1Request.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN_PHASE_1,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          reconnect: {\n            '#text': utils.toString(\n              UIModel.getInstance().connectionSettings.reconnect,\n            ),\n          },\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          access_token: {\n            '#text': utils.toString(\n              UIModel.getInstance().authenticateRequest.accessToken,\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This function is responsible for handling the login packet received from IntelliServices. It will save\n     * a copy of it in the UIModel as loginPacket, as well as set the isLoggedInIS variable to\n     * true (for reconnect purposes) and the loginDTS with the current date/time.\n     *\n     * {\"ui_response\":{\n     *      \"@type\":\"login\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"is_sso:{\"#text\":\"TRUE\"|\"FALSE\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"agent_pwd\":{\"#text\":\"bound25\"},\n     *      \"first_name\":{\"#text\":\"mandy\"},\n     *      \"last_name\":{\"#text\":\"pants\"},\n     *      \"email\":{\"#text\":\"mandypants@aol.coim\"},\n     *      \"agent_type\":{\"#text\":\"AGENT\"},\n     *      \"external_agent_id\":{\"#text\":\"blahblah\"},\n     *      \"default_login_dest\":{\"#text\":\"9548298548|123\"},\n     *      \"alt_default_login_dest\":{\"#text\":\"9548298548|123\"},\n     *      \"iq_url\":{\"#text\":\"dev.connectfirst.com\"},\n     *      \"iq_port\":{\"#text\":\"1313\"},\n     *      \"iq_ssl_port\":{\"#text\":\"1213\"},\n     *      \"iq_secret_key\":{\"#text\":\"F-OFF\"},\n     *      \"allow_inbound\":{\"#text\":\"1\"},\n     *      \"allow_outbound\":{\"#text\":\"1\"},\n     *      \"allow_chat\":{\"#text\":\"1\"},\n     *      \"allow_blended\":{\"#text\":\"0\"},\n     *      \"allow_off_hook\":{\"#text\":\"1\"},\n     *      \"allow_call_control\":{\"#text\":\"1\"},\n     *      \"allow_login_control\":{\"#text\":\"1\"},\n     *      \"allow_login_updates\":{\"#text\":\"1\"},\n     *      \"allow_lead_inserts\":{\"#text\":\"1\"},\n     *      \"show_lead_history\":{\"#text\":\"1\"},\n     *      \"allow_cross_gate_requeue\":{\"#text\":\"1\"},\n     *      \"phone_login_dial_group\":{\"#text\":\"44\"},\n     *      \"phone_login_pin\":{\"#text\":\"1234\"},\n     *      \"allow_manual_calls\":{\"#text\":\"1\"},\n     *      \"allow_manual_intl_calls\":{\"#text\":\"0\"},\n     *      \"init_login_state\":{\"#text\":\"ON-BREAK\"},\n     *      \"init_login_state_label\":{\"#text\":\"Morning Break\"},\n     *      \"outbound_prepay\":{\"#text\":\"0\"},\n     *      \"max_break_time\":{\"#text\":\"-1\"},\n     *      \"max_lunch_time\":{\"#text\":\"-1\"},\n     *      \"allow_lead_search\":{\"#text\":\"YES_ALL\"},\n     *      \"tcpa_safe_mode\":{\"#text\":\"1|0\"},\n     *      \"pci_enabled\":{\"#text\":\"1|0\"},\n     *      \"login_gates\":{\n     *          \"gate\":[\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"37\",\"@gate_name\":\"test\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"42\",\"@gate_name\":\"test gate two\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"43\",\"@gate_name\":\"test gate three\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"Amandas Other Gate\",\"@gate_id\":\"46\",\"@gate_name\":\"You know it!\"}\n     *          ]\n     *      },\n     *      \"login_chat_queues\":{\n     *          \"chat_queue\":[\n     *              {\"@chat_queue_description\":\"\",\"@chat_queue_id\":\"\",\"@chat_queue_name\":\"\"},\n     *              {\"@chat_queue_description\":\"\",\"@chat_queue_id\":\"\",\"@chat_queue_name\":\"\"}\n     *          ]\n     *      },\n     *      \"outdial_groups\":{\n     *          \"group\":[\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"\",\"@dial_group_id\":\"44\",\"@dial_group_name\":\"Geoff Dial Test\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"2\",\"@dial_group_desc\":\"AutoDial Configured Dial Group\",\"@dial_group_id\":\"46\",\"@dial_group_name\":\"Phone Only test5\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"Test\",\"@dial_group_id\":\"200000\",\"@dial_group_name\":\"Test\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"Test\",\"@dial_group_id\":\"200010\",\"@dial_group_name\":\"Carissa's Test Group\",\"@dial_mode\":\"PREDICTIVE\"}\n     *          ]\n     *      },\"skill_profiles\":{\n     *          \"profile\":[\n     *              {\"@profile_desc\":\"\",\"@profile_id\":\"571\",\"@profile_name\":\"skill1\"},\n     *              {\"@profile_desc\":\"\",\"@profile_id\":\"572\",\"@profile_name\":\"skill2\"}\n     *          ]\n     *      },\n     *      \"requeue_gates\":{\n     *          \"gate_group\":[\n     *              {\n     *                  \"@gate_group_id\":\"18\",\n     *                  \"@group_name\":\"new gate group\",\n     *                  \"gates\":{\n     *                      \"gate\":[\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"37\",\"@gate_name\":\"test\"},\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"43\",\"@gate_name\":\"test gate three\"},\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"42\",\"@gate_name\":\"test gate two\"}\n     *                      ]\n     *                  },\n     *                  \"skills\":{\n     *                      \"skill\":[\n     *                          {\"@skill_desc\":\"\",\"@skill_id\":\"58\",\"@skill_name\":\"one\"},\n     *                          {\"@skill_desc\":\"\",\"@skill_id\":\"59\",\"@skill_name\":\"two\"},\n     *                      ]\n     *                  }\n     *              }\n     *          ]\n     *      },\n     *      \"chat_rooms\":{},\n     *      \"scripts\": {\n     *           \"script\": {\n     *               \"@script_id\": \"15\",\n     *               \"@script_name\": \"Don't Read This Script\"\n     *           }\n     *      },\n     *      \"campaigns\": {\n     *          \"campaign\": {\n     *              \"@allow_lead_updates\": \"\",\n     *              \"@campaign_id\": \"\",\n     *              \"@campaign_name\": \"\",\n     *              \"@survey_id\": \"\",\n     *              \"@survey_name\": \"\",\n     *              \"custom_labels\": {\n     *                  \"@aux_1_label\": \"\",\n     *                  \"@aux_2_label\": \"\",\n     *                  \"@aux_3_label\": \"\",\n     *                  \"@aux_4_label\": \"\",\n     *                  \"@aux_5_label\": \"\"\n     *              },\n     *              \"generic_key_value_pairs\": {}\n     *          }\n     *      },\n     *      \"account_countries\":{\n     *          \"country\":[\n     *              {\"@country_id\":\"BRA\"},{\"@country_id\":\"FRA\"},{\"@country_id\":\"GER\"}\n     *          ]\n     *      }\n     *   }\n     * }\n     */\n    LoginPhase1Request.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const status = utils.getText(resp, 'status');\n      const model = UIModel.getInstance();\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      if (status === 'OK') {\n        if (!model.applicationSettings.isLoggedInIS) {\n          // save login packet properties to UIModel\n          model.loginPhase1Packet = response;\n          model.applicationSettings.isLoggedInIS = true;\n          model.applicationSettings.isSso = utils.getText(resp, 'is_sso');\n          model.applicationSettings.isTcpaSafeMode =\n            utils.getText(resp, 'tcpa_safe_mode') === '1';\n          model.applicationSettings.pciEnabled =\n            utils.getText(resp, 'pci_enabled') === '1';\n          model.chatSettings.alias = `${utils.getText(\n            resp,\n            'first_name',\n          )} ${utils.getText(resp, 'last_name')}`;\n\n          model.agentSettings.loginDTS = new Date();\n          model.agentSettings.maxBreakTime = utils.getText(\n            resp,\n            'max_break_time',\n          );\n          model.agentSettings.maxLunchTime = utils.getText(\n            resp,\n            'max_lunch_time',\n          );\n          model.agentSettings.firstName = utils.getText(resp, 'first_name');\n          model.agentSettings.lastName = utils.getText(resp, 'last_name');\n          model.agentSettings.email = utils.getText(resp, 'email');\n          model.agentSettings.agentId = utils.getText(resp, 'agent_id');\n          model.agentSettings.externalAgentId = utils.getText(\n            resp,\n            'external_agent_id',\n          );\n          model.agentSettings.agentType = utils.getText(resp, 'agent_type');\n          model.agentSettings.realAgentType = utils.getText(\n            resp,\n            'real_agent_type',\n          );\n          model.agentSettings.defaultLoginDest = utils.getText(\n            resp,\n            'default_login_dest',\n          );\n          model.agentSettings.altDefaultLoginDest = utils.getText(\n            resp,\n            'alt_default_login_dest',\n          );\n          model.agentSettings.initLoginState = utils.getText(\n            resp,\n            'init_login_state',\n          );\n          model.agentSettings.initLoginStateLabel = utils.getText(\n            resp,\n            'init_login_state_label',\n          );\n          model.agentSettings.outboundManualDefaultRingtime = utils.getText(\n            resp,\n            'outbound_manual_default_ringtime',\n          );\n          model.agentSettings.isOutboundPrepay =\n            utils.getText(resp, 'outbound_prepay') === '1';\n          model.agentSettings.phoneLoginPin = utils.getText(\n            resp,\n            'phone_login_pin',\n          );\n          model.agentSettings.username = utils.getText(resp, 'username');\n          model.agentSettings.agentPassword = utils.getText(resp, 'agent_pwd');\n\n          model.agentPermissions.allowCallControl =\n            utils.getText(resp, 'allow_call_control') === '1';\n          model.agentPermissions.allowChat =\n            utils.getText(resp, 'allow_chat') === '1';\n          model.agentPermissions.showLeadHistory =\n            utils.getText(resp, 'show_lead_history') === '1';\n          model.agentPermissions.allowManualOutboundGates =\n            utils.getText(resp, 'allow_manual_outbound_gates') === '1';\n          model.agentPermissions.allowOffHook =\n            utils.getText(resp, 'allow_off_hook') === '1';\n          model.agentPermissions.allowManualCalls =\n            utils.getText(resp, 'allow_manual_calls') === '1';\n          model.agentPermissions.allowManualPass =\n            utils.getText(resp, 'allow_manual_pass') === '1';\n          model.agentPermissions.allowManualIntlCalls =\n            utils.getText(resp, 'allow_manual_intl_calls') === '1';\n          model.agentPermissions.allowLoginUpdates =\n            utils.getText(resp, 'allow_login_updates') === '1';\n          model.agentPermissions.allowInbound =\n            utils.getText(resp, 'allow_inbound') === '1';\n          model.agentPermissions.allowOutbound =\n            utils.getText(resp, 'allow_outbound') === '1';\n          model.agentPermissions.allowBlended =\n            utils.getText(resp, 'allow_blended') === '1';\n          model.agentPermissions.allowLoginControl =\n            utils.getText(resp, 'allow_login_control') === '1';\n          model.agentPermissions.allowCrossQueueRequeue =\n            utils.getText(resp, 'allow_cross_gate_requeue') === '1';\n          model.agentPermissions.disableSupervisorMonitoring =\n            utils.getText(resp, 'disable_supervisor_monitoring') === '1';\n          model.agentPermissions.allowAutoAnswer =\n            utils.getText(resp, 'allow_auto_answer') === '1';\n          model.agentPermissions.defaultAutoAnswerOn =\n            utils.getText(resp, 'default_auto_answer_on') === '1';\n          model.agentPermissions.allowHistoricalDialing =\n            utils.getText(resp, 'allow_historical_dialing') === '1';\n          model.agentPermissions.allowAgentStats =\n            utils.getText(resp, 'allow_agent_stats') === '1';\n          model.agentPermissions.allowCampaignStats =\n            utils.getText(resp, 'allow_camp_stats') === '1';\n          model.agentPermissions.allowGateStats =\n            utils.getText(resp, 'allow_gate_stats') === '1';\n          model.agentPermissions.allowChatStats =\n            utils.getText(resp, 'allow_chat_stats') === '1';\n          model.agentPermissions.enableFolderMode =\n            utils.getText(resp, 'enable_folder_mode') === '1';\n          model.agentPermissions.enableTaskMode =\n            utils.getText(resp, 'enable_task_mode') === '1';\n\n          model.outboundSettings.defaultDialGroup = utils.getText(\n            resp,\n            'phone_login_dial_group',\n          );\n\n          if (\n            response.ui_response.allow_lead_inserts &&\n            typeof resp.insert_campaigns !== 'undefined' &&\n            response.ui_response.insert_campaigns.campaign\n          ) {\n            model.agentPermissions.allowLeadInserts =\n              utils.getText(resp, 'allow_lead_inserts') === '1';\n          }\n\n          // Set collection values\n          model.outboundSettings.availableCampaigns = _processCampaigns(\n            response,\n          );\n          model.chatSettings.availableChatQueues = utils.processResponseCollection(\n            response.ui_response,\n            'login_chat_queues',\n            'chat_queue',\n          );\n          _processChatQueueDnis(model.chatSettings, response);\n          model.chatSettings.availableChatRequeueQueues = utils.processResponseCollection(\n            response.ui_response,\n            'chat_requeue_queues',\n            'chat_group',\n          );\n          model.inboundSettings.availableQueues = utils.processResponseCollection(\n            response.ui_response,\n            'login_gates',\n            'gate',\n          );\n          model.inboundSettings.availableSkillProfiles = utils.processResponseCollection(\n            response.ui_response,\n            'skill_profiles',\n            'profile',\n          );\n          model.inboundSettings.availableRequeueQueues = utils.processResponseCollection(\n            response.ui_response,\n            'requeue_gates',\n            'gate_group',\n          );\n          model.chatSettings.availableChatRooms = utils.processResponseCollection(\n            response.ui_response,\n            'chat_rooms',\n            'room',\n          );\n          model.scriptSettings.availableScripts = utils.processResponseCollection(\n            response.ui_response,\n            'scripts',\n            'script',\n          );\n          model.agentSettings.callerIds = utils.processResponseCollection(\n            response.ui_response,\n            'caller_ids',\n            'caller_id',\n          );\n          model.agentSettings.availableAgentStates = utils.processResponseCollection(\n            response.ui_response,\n            'agent_states',\n            'agent_state',\n          );\n          model.applicationSettings.availableCountries = utils.processResponseCollection(\n            response.ui_response,\n            'account_countries',\n            'country',\n          );\n          model.outboundSettings.insertCampaigns = utils.processResponseCollection(\n            response.ui_response,\n            'insert_campaigns',\n            'campaign',\n          );\n\n          const dialGroups = utils.processResponseCollection(\n            response.ui_response,\n            'outdial_groups',\n            'group',\n          );\n          // set boolean values\n          for (let dg = 0; dg < dialGroups.length; dg++) {\n            const group = dialGroups[dg];\n            group.allowLeadSearch = group.allowLeadSearch === 'YES';\n            group.allowPreviewLeadFilters =\n              group.allowPreviewLeadFilters === '1';\n            group.progressiveEnabled = group.progressiveEnabled === '1';\n            group.requireFetchedLeadsCalled =\n              group.requireFetchedLeadsCalled === '1';\n            group.hciType = parseInt(group.hciEnabled) || 0;\n            group.hciEnabled =\n              group.hciEnabled === '1' || group.hciEnabled === '2';\n            group.hciClicker = group.hciClicker === '1';\n          }\n          model.outboundSettings.availableOutdialGroups = dialGroups;\n        }\n      }\n\n      formattedResponse.agentSettings = model.agentSettings;\n      formattedResponse.agentPermissions = model.agentPermissions;\n      formattedResponse.applicationSettings = model.applicationSettings;\n      formattedResponse.chatSettings = model.chatSettings;\n      formattedResponse.connectionSettings = model.connectionSettings;\n      formattedResponse.inboundSettings = model.inboundSettings;\n      formattedResponse.outboundSettings = model.outboundSettings;\n      formattedResponse.scriptSettings = model.scriptSettings;\n\n      return formattedResponse;\n    };\n\n    function _processCampaigns(response) {\n      const campaigns = [];\n      let campaignsRaw = null;\n\n      if (typeof response.ui_response.campaigns.campaign !== 'undefined') {\n        campaignsRaw = response.ui_response.campaigns.campaign;\n      }\n\n      if (campaignsRaw) {\n        if (!Array.isArray(campaignsRaw)) {\n          campaignsRaw = [campaignsRaw];\n        }\n\n        for (let c = 0; c < campaignsRaw.length; c++) {\n          campaigns.push(_processCampaign(campaignsRaw[c]));\n        }\n      }\n\n      return campaigns;\n    }\n\n    function _processCampaign(campaignRaw) {\n      // single campaign object\n      const campaignId = campaignRaw['@campaign_id'];\n      const allowLeadUpdates = campaignRaw['@allow_lead_updates']; // 0 = no update, 1 = allow phone update, 2 = don't allow phone update\n      UIModel.getInstance().agentPermissions.allowLeadUpdatesByCampaign[\n        campaignId\n      ] = allowLeadUpdates;\n\n      const customLabels = campaignRaw.custom_labels;\n      const labelArray = [];\n\n      for (const p in customLabels) {\n        const label = p.replace(/@/, ''); // remove leading '@'\n        const obj = {};\n        obj[label] = customLabels[p];\n\n        labelArray.push(obj);\n      }\n\n      return {\n        campaignId,\n        campaignName: campaignRaw['@campaign_name'],\n        surveyId: campaignRaw['@survey_id'],\n        surveyName: campaignRaw['@survey_name'],\n        customLabels: labelArray,\n        allowLeadUpdates,\n      };\n    }\n\n    /**\n     * example packet\n     *  {\n     *      \"chat_queue\":[\n     *          {\n     *              \"@chat_queue_desc\":\"\",\n     *              \"@chat_queue_id\":\"74\",\n     *              \"@chat_queue_name\":\"Please don't delete\"\n     *          },\n     *          {\n     *              \"@chat_queue_desc\":\"blah\",\n     *              \"@chat_queue_id\":\"131\",\n     *              \"@chat_queue_name\":\"cris chat queue\",\n     *              \"dnis\":[\n     *                  {\"#text\":\"5555551215\"},\n     *                  {\"#text\":\"5555554444\"},\n     *                  {\"#text\":\"8885551212\"},\n     *                  {\"#text\":\"97687\"}\n     *              ]\n     *          }\n     *      ]\n     *   }\n     *\n     *\n     *      This function will format the dnis list and put them back on chatSettings.availableChatQueues\n     * */\n    function _processChatQueueDnis(chatSettings, response) {\n      const queues = chatSettings.availableChatQueues;\n      let rawQueues = response.ui_response.login_chat_queues.chat_queue;\n\n      if (!Array.isArray(rawQueues)) {\n        rawQueues = [rawQueues];\n      }\n\n      for (let i = 0; i < queues.length; i++) {\n        const queue = queues[i];\n\n        let rawQueue = {};\n        for (let j = 0; j < rawQueues.length; j++) {\n          const rq = rawQueues[j];\n          if (rq['@chat_queue_id'] === queue.chatQueueId) {\n            rawQueue = rq;\n            break;\n          }\n        }\n\n        if (rawQueue.dnis) {\n          if (!Array.isArray(rawQueue.dnis)) {\n            rawQueue.dnis = [rawQueue.dnis];\n          }\n\n          // update the dnis array to just be a list\n          queue.dnis = rawQueue.dnis.map(function(d) {\n            return d['#text'];\n          });\n        }\n      }\n    }\n\n    const LogoutRequest = function(agentId, message) {\n      this.agentId = agentId;\n      this.message = message || '';\n    };\n\n    LogoutRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGOUT,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          message: {\n            '#text': this.message,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    LogoutRequest.prototype.processResponse = function(notification) {\n      const formattedResponse = utils.buildDefaultResponse(notification);\n\n      return formattedResponse;\n    };\n    const MultiSocketRequest = function() {};\n\n    MultiSocketRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN_MULTISOCKET,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': JSON.parse(model.dataStore.get('agent_id')), // fetch agent_id and hash_code from browser's local storage\n          },\n          hash_code: {\n            '#text': JSON.parse(model.dataStore.get('hash_code')),\n          },\n        },\n      };\n      UIModel.getInstance().loginRequest = new LoginRequest(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n      );\n      return JSON.stringify(msg);\n    };\n\n    const OffhookInitRequest = function() {};\n\n    OffhookInitRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.OFFHOOK_INIT,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          dial_dest: {\n            '#text': UIModel.getInstance().agentSettings.dialDest,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling an off-hook-init response packet from IntelliQueue.\n     * If the offhookinit is successful, it will go into the UIModel and set the isOffhook variable\n     * to true.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"UI2005\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OFF-HOOK-INIT\",\n     *      \"status\":{\"#text\":\"OK|FAILURE\"},\n     *      \"monitoring\":{\"#text:\"TRUE|FALSE\"},\n     *      \"message\":{},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    OffhookInitRequest.prototype.processResponse = function(response) {\n      const status = response.ui_response.status['#text'];\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      if (status === 'OK') {\n        const isMonitoring = utils.getText(response.ui_response, 'monitoring');\n        UIModel.getInstance().offhookInitPacket = response;\n        UIModel.getInstance().agentSettings.isOffhook = true;\n        UIModel.getInstance().agentSettings.isMonitoring = isMonitoring;\n        formattedResponse.monitoring = isMonitoring;\n\n        // make sure to reset softphone reconnect bool\n        UIModel.getInstance().softphoneSettings.attemptingSoftphoneReconnect = false;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to process offhook request';\n        }\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          `${formattedResponse.message} ${formattedResponse.detail}`,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    const OffhookTermRequest = function() {};\n\n    OffhookTermRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.OFFHOOK_TERM,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * Process an OFF-HOOK-TERM packet and update various variables in the UI\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"IQ10012016080217135001344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OFF-HOOK-TERM\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"start_dts\":{\"#text\":\"2016-08-02 17:11:38\"},\n     *      \"end_dts\":{\"#text\":\"2016-08-02 17:14:07\"},\n     *      \"monitoring\":{\"#text\":\"0\"}\n     *    }\n     * }\n     */\n    OffhookTermRequest.prototype.processResponse = function(data) {\n      const notif = data.ui_notification;\n      const monitoring = utils.getText(notif, 'monitoring') === '1';\n      const model = UIModel.getInstance();\n\n      model.agentSettings.wasMonitoring = monitoring;\n      model.offhookTermPacket = data;\n      model.agentSettings.isOffhook = false;\n      model.agentSettings.isMonitoring = false;\n\n      const formattedResponse = {\n        status: 'OK',\n        agentId: utils.getText(notif, 'agent_id'),\n        startDts: utils.getText(notif, 'start_dts'),\n        endDts: utils.getText(notif, 'end_dts'),\n        monitoring,\n      };\n\n      return formattedResponse;\n    };\n\n    const OneToOneOutdialRequest = function(\n      destination,\n      callerId,\n      ringTime,\n      countryId,\n      gateId,\n    ) {\n      this.destination = destination;\n      this.callerId = callerId;\n      this.ringTime = ringTime || '60';\n      this.countryId = countryId || 'USA';\n      this.gateId = gateId || '';\n    };\n\n    OneToOneOutdialRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.ONE_TO_ONE_OUTDIAL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          destination: {\n            '#text': utils.toString(this.destination),\n          },\n          ring_time: {\n            '#text': utils.toString(this.ringTime),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          gate_id: {\n            '#text': utils.toString(this.gateId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const OneToOneOutdialCancelRequest = function(uii) {\n      this.uii = uii;\n    };\n\n    /*\n     * This class is responsible for creating a new packet to cancel\n     * an in-progress outbound call.\n     */\n    OneToOneOutdialCancelRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.ONE_TO_ONE_OUTDIAL_CANCEL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const PauseRecordRequest = function(record) {\n      this.record = record;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PAUSE-RECORD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"record\":{\"#text\":\"TRUE | FALSE\"},\n     *      \"pause\":{\"#text\":\"10\"}\n     *    }\n     * }\n     */\n    PauseRecordRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      let pauseTime = '10';\n      if (\n        model.currentCall.agentRecording &&\n        model.currentCall.agentRecording.pause\n      ) {\n        pauseTime = model.currentCall.agentRecording.pause;\n      }\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PAUSE_RECORD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          record: {\n            '#text': utils.toString(this.record === true ? 'TRUE' : 'FALSE'),\n          },\n          pause: {\n            '#text': utils.toString(pauseTime),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes PAUSE-RECORD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PAUSE-RECORD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"status\":{\"#text\":\"OK | FAILURE\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"state\":{\"#text\":\"RECORDING | PAUSED\"},\n     *      \"pause\":{\"#text\":\"10\"}\n     *    }\n     * }\n     */\n    PauseRecordRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n      let currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.state = utils.getText(resp, 'state');\n      formattedResponse.pause = utils.getText(resp, 'pause');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message = `Broadcasting new record state of ${formattedResponse.state}`;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            `Broadcasting new record state of ${formattedResponse.state}`,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Pause Record Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = `Error processing PAUSE-RECORD request.${formattedResponse.message}\\n${formattedResponse.detail}`;\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const PingCallRequest = function() {};\n\n    PingCallRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PING_CALL,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().currentCall.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const PreviewDialRequest = function(\n      action,\n      searchFields,\n      requestId,\n      leadPhone,\n    ) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.searchFields = searchFields || [];\n      this.requestId = requestId || '';\n      this.action = action || '';\n      this.leadPhone = leadPhone || ''; // pipe leads only\n    };\n\n    /*\n     * searchFields = [\n     *  {key: \"name\", value: \"Danielle\"},\n     *  {key: \"number\", value: \"5555555555\"\n     * ];\n     */\n    PreviewDialRequest.prototype.formatJSON = function() {\n      const fields = {};\n      for (let i = 0; i < this.searchFields.length; i++) {\n        const fieldObj = this.searchFields[i];\n        fields[fieldObj.key] = { '#text': utils.toString(fieldObj.value) };\n      }\n\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PREVIEW_DIAL,\n          '@message_id': utils.getMessageId(),\n          '@action': this.action,\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          search_fields: fields,\n          // { \"name\": {\"#text\": \"Danielle\" } }\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling PREVIEW-DIAL packets received\n     * from the dialer. It will save a copy of it in the UIModel.\n     *\n     * {\"dialer_request\":{\n     *      \"@action\":\"\", // <-- empty for Preview fetch, otherwise \"SEARCH\"\n     *      \"@callbacks\":\"TRUE|FALSE\"\n     *      ,\"@message_id\":\"ID2008091513163400220\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PREVIEW_DIAL\",\n     *      \"dial_group_id\":{\"#text\":\"200018\"},\n     *      \"account_id\":{\"#text\":\"99999999\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"is_insert\":{\"#text\":\"TRUE|FALSE\"}, <--- TRUE if search triggered by insert\n     *      \"destinations\":{\n     *          \"lead\":[\n     *              {\n     *                  \"@aux_data1\":\"\",\"@aux_data2\":\"\",\"@aux_data3\":\"\",\"@aux_data4\":\"\",\"@aux_data5\":\"\",\n     *                  \"@aux_phone\":\"\",\"@campaign_id\":\"51\",\"@destination\":\"9548298548\",\"@dnis\":\"1112223333\",\n     *                  \"@extern_id\":\"amanda\",\"@lead_id\":\"2646\",\"@lead_state\":\"PENDING\",\"@live_answer_msg\":\"\",\n     *                  \"@mach_answer_msg\":\"\",\"@machine_detect\":\"FALSE\",\"@request_key\":\"IQ982008091516241101125\",\n     *                  \"@valid_until\":\"2008-09-15 17:24:11\",\"extern_id\":{\"#text\":\"9548298548\"},\n     *                  \"first_name\":{\"#text\":\"Amanda\"},\"mid_name\":{\"#text\":\"Amanda\"},\"last_name\":{\"#text\":\"Machutta2\"},\n     *                  \"address1\":{},\"address2\":{},\"city\":{},\"state\":{},\"zip\":{},\"aux_greeting\":{},\n     *                  \"aux_external_url\":{}, \"app_url\":{}\n     *              },\n     *          ]\n     *      }\n     *    }\n     * }\n     */\n    PreviewDialRequest.prototype.processResponse = function(notification) {\n      const notif = notification.dialer_request;\n      const model = UIModel.getInstance();\n      const leads = utils.processResponseCollection(\n        notif,\n        'destinations',\n        'lead',\n      );\n\n      // send over requestId (as well as requestKey for backwards compatibility)\n      // to match previewLeadState.notification property\n      for (var l = 0; l < leads.length; l++) {\n        var lead = leads[l];\n        lead.requestId = lead.requestKey;\n        lead.ani = lead.destination; // add ani prop since used in new call packet & update lead\n\n        // In case of a single lead returned, the XML converter to JSON will add lead as an object and not an array\n        //\n        if (!Array.isArray(notif.destinations.lead)) {\n          notif.destinations.lead = [notif.destinations.lead];\n        }\n\n        // parse extra data correctly\n        try {\n          let notifLead = notif.destinations.lead[l];\n\n          if (notifLead.extra_data) {\n            // if this lead doesn't match the current lead, find it from the notification\n            if (notifLead['@lead_id'] !== lead.leadId) {\n              notifLead = notif.destinations.lead.filter(function(destLead) {\n                return destLead['@lead_id'] === lead.leadId;\n              });\n            }\n\n            delete lead.extraDatas;\n            lead.extraData = {};\n            for (const key in notifLead.extra_data) {\n              lead.extraData[key] = notifLead.extra_data[key]['#text'];\n            }\n          }\n        } catch (e) {\n          console.warn(`error parsing lead extra data: ${e}`);\n        }\n      }\n\n      const formattedResponse = {\n        action: notif['@action'],\n        callbacks: notif['@callbacks'] === 'TRUE',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        isInsert: utils.getText(notif, 'is_insert'),\n        leads,\n      };\n\n      if (notif['@callbacks'] === 'TRUE') {\n        utils.logMessage(\n          LOG_LEVELS.INFO,\n          \"New CALLBACK packet request rec'd from dialer\",\n          notification,\n        );\n        // clear callbacks??\n        // model.callbacks = [];\n        for (var l = 0; l < leads.length; l++) {\n          var lead = leads[l];\n          model.callbacks.push(lead);\n        }\n      } else {\n        model.outboundSettings.previewDialLeads = leads;\n      }\n\n      return formattedResponse;\n    };\n\n    const RecordRequest = function(record) {\n      this.record = record;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"RECORD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"record\":{\"#text\":\"TRUE | FALSE\"}\n     *    }\n     * }\n     */\n    RecordRequest.prototype.formatJSON = function() {\n      const model = UIModel.getInstance();\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.RECORD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          record: {\n            '#text': this.record === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes RECORD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"RECORD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"state\":{\"#text\":\"RECORDING | STOPPED\"}\n     *    }\n     * }\n     */\n    RecordRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n      let currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.state = utils.getText(resp, 'state');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message = `Broadcasting new record state of ${formattedResponse.state}`;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            formattedResponse.message,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Record Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = `Error processing RECORD request.${formattedResponse.message}\\n${formattedResponse.detail}`;\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const RequeueRequest = function(queueId, skillId, maintain) {\n      this.queueId = queueId;\n      this.skillId = skillId;\n      this.maintain = maintain;\n    };\n\n    RequeueRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.REQUEUE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          gate_number: {\n            '#text': utils.toString(this.queueId),\n          },\n          skill_id: {\n            '#text': utils.toString(this.skillId),\n          },\n          maintain_agent: {\n            '#text': this.maintain === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes RE-QUEUE packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103291\",\n     *      \"@response_to\":\"UIV220088281716486\",\n     *      \"@type\":\"RE-QUEUE\",\n     *      \"status\":\"OK\",\n     *      \"message\":\"Success.\",\n     *      \"detail\":\"The re-queue request was successfully processed.\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808281716090000000900028070\"},\n     *      \"gate_number\":{\"#text\":\"19\"},\n     *      \"maintain_agent\":{\"#text\":\"FALSE\"}\n     *    }\n     * }\n     */\n    RequeueRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.queueId = utils.getText(resp, 'gate_number');\n\n      if (formattedResponse.status === 'OK') {\n      } else {\n        const message = `There was an error processing the requeue request. ${formattedResponse.detail}`;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    const ScriptConfigRequest = function(scriptId, version) {\n      this.scriptId = scriptId;\n      this.version = version || null;\n    };\n\n    /*\n     * This event is responsible for requesting a script object\n     */\n    ScriptConfigRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.SCRIPT_CONFIG,\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          script_id: {\n            '#text': utils.toString(this.scriptId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class process SCRIPT-CONFIG packets received from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"SCRIPT-CONFIG\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"script_id\":{\"#text\":\"123\"},\n     *      \"version\":{\"#text\":\"1\"},\n     *      \"json\":{},\n     *   }\n     * }\n     */\n    ScriptConfigRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      if (formattedResponse.status === 'true') {\n        formattedResponse.status = true;\n        formattedResponse.scriptId = utils.getText(resp, 'script_id');\n        formattedResponse.version = utils.getText(resp, 'version');\n        formattedResponse.json = utils.getText(resp, 'json');\n\n        // store script on model\n        UIModel.getInstance().scriptSettings.loadedScripts[\n          formattedResponse.scriptId\n        ] = formattedResponse;\n      } else {\n        formattedResponse.status = false;\n      }\n\n      return formattedResponse;\n    };\n\n    const ScriptResultRequest = function(uii, scriptId, jsonResult) {\n      this.uii = uii;\n      this.scriptId = scriptId;\n      this.jsonResult = jsonResult;\n    };\n\n    /*\n     * This event is responsible for sending the script result object\n     */\n    ScriptResultRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.SCRIPT_RESULT,\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          script_id: {\n            '#text': utils.toString(this.scriptId),\n          },\n          json_result: {\n            '#text': JSON.stringify(this.jsonResult),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const SearchDirectoryRequest = function() {};\n\n    SearchDirectoryRequest.prototype.searchDirectory = function(searchString) {\n      UIModel.getInstance().searchDirectoryRequest = this;\n      _searchDirectory('rcdirectory/getRcCorporateDirectory', searchString);\n    };\n\n    SearchDirectoryRequest.prototype.processResponse = function(response) {\n      UIModel.getInstance().filteredDirectory = response;\n      return UIModel.getInstance().filteredDirectory;\n    };\n\n    function _searchDirectory(path, searchString) {\n      const model = UIModel.getInstance();\n      const accountId = model.agentSettings.accountId; // subAccountId\n      const baseUrl = model.authHost + model.baseApiUri;\n      const engageAccessToken = `Bearer ${utils.toString(\n        UIModel.getInstance().authenticateRequest.engageAccessToken,\n      )}`;\n      const params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        queryParams: {},\n      };\n      params.headers.Authorization = engageAccessToken;\n      params.queryParams.searchString = searchString;\n      params.queryParams.accountId = accountId;\n      const errorMsg = `Error on request to search Directory: ${baseUrl}${path}`;\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function(response) {\n          try {\n            response = JSON.parse(response.response);\n            const searchDirResponse = UIModel.getInstance().searchDirectoryRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SEARCH_DIR,\n              searchDirResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function(err) {\n          const errResponse = {\n            type: 'Error retrieving directory list',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SEARCH_DIR,\n            errResponse,\n          );\n        },\n      );\n    }\n\n    const StatsRequest = function() {};\n\n    /*\n     * { \"ui_request\": {\n     *      \"@response_to\":\"\",\n     *      \"@message_id\":\"IS20160901142437535\",\n     *      \"@type\":\"STATS\"\n     *    }\n     * }\n     */\n    StatsRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.STATS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const TcpaSafeRequest = function(\n      action,\n      searchFields,\n      requestId,\n      leadPhone,\n    ) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.searchFields = searchFields || [];\n      this.requestId = requestId || '';\n      this.action = action || '';\n      this.leadPhone = leadPhone || ''; // pipe leads only\n    };\n\n    /*\n     * searchFields = [\n     *  {key: \"name\", value: \"Danielle\"},\n     *  {key: \"number\", value: \"5555555555\"\n     * ];\n     */\n    TcpaSafeRequest.prototype.formatJSON = function() {\n      const fields = {};\n      for (let i = 0; i < this.searchFields.length; i++) {\n        const fieldObj = this.searchFields[i];\n        fields[fieldObj.key] = { '#text': utils.toString(fieldObj.value) };\n      }\n\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.TCPA_SAFE,\n          '@message_id': utils.getMessageId(),\n          '@action': this.action,\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          search_fields: fields,\n          // { \"name\": {\"#text\": \"Danielle\"} }\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling TCPA-SAFE packets received\n     * from the dialer. It will save a copy of it in the UIModel.\n     *\n     * {\"dialer_request\":{\n     *      \"@action\":\"\",\n     *      \"@callbacks\":\"TRUE|FALSE\"\n     *      ,\"@message_id\":\"ID2008091513163400220\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"TCPA_SAFE\",\n     *      \"dial_group_id\":{\"#text\":\"200018\"},\n     *      \"account_id\":{\"#text\":\"99999999\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"is_insert\":{\"#text\":\"TRUE|FALSE\"}, <--- TRUE if search triggered by insert\n     *      \"destinations\":{\n     *          \"lead\":[\n     *              {\n     *                  \"@aux_data1\":\"\",\"@aux_data2\":\"\",\"@aux_data3\":\"\",\"@aux_data4\":\"\",\"@aux_data5\":\"\",\n     *                  \"@aux_phone\":\"\",\"@campaign_id\":\"51\",\"@destination\":\"9548298548\",\"@dnis\":\"1112223333\",\n     *                  \"@extern_id\":\"amanda\",\"@lead_id\":\"2646\",\"@lead_state\":\"PENDING\",\"@live_answer_msg\":\"\",\n     *                  \"@mach_answer_msg\":\"\",\"@machine_detect\":\"FALSE\",\"@request_key\":\"IQ982008091516241101125\",\n     *                  \"@valid_until\":\"2008-09-15 17:24:11\",\"extern_id\":{\"#text\":\"9548298548\"},\n     *                  \"first_name\":{\"#text\":\"Amanda\"},\"mid_name\":{\"#text\":\"Amanda\"},\"last_name\":{\"#text\":\"Machutta2\"},\n     *                  \"address1\":{},\"address2\":{},\"city\":{},\"state\":{},\"zip\":{},\"aux_greeting\":{},\n     *                  \"aux_external_url\":{}, \"app_url\":{}\n     *              },\n     *          ]\n     *      }\n     *    }\n     * }\n     *\n     */\n    TcpaSafeRequest.prototype.processResponse = function(notification) {\n      const notif = notification.dialer_request;\n      const model = UIModel.getInstance();\n      const leads = utils.processResponseCollection(\n        notif,\n        'destinations',\n        'lead',\n      );\n\n      // send over requestId (as well as requestKey for backwards compatibility)\n      // to match tcpaSafeLeadState.notification property\n      for (var l = 0; l < leads.length; l++) {\n        var lead = leads[l];\n        lead.requestId = lead.requestKey;\n        lead.ani = lead.destination; // add ani prop since used in new call packet & update lead\n\n        // parse extra data correctly\n        try {\n          let notifLead = notif.destinations.lead[l];\n\n          if (notifLead.extra_data) {\n            // if this lead doesn't match the current lead, find it from the notification\n            if (notifLead['@lead_id'] !== lead.leadId) {\n              notifLead = notif.destinations.lead.filter(function(destLead) {\n                return destLead['@lead_id'] === lead.leadId;\n              });\n            }\n\n            delete lead.extraDatas;\n            lead.extraData = {};\n            for (const key in notifLead.extra_data) {\n              lead.extraData[key] = notifLead.extra_data[key]['#text'];\n            }\n          }\n        } catch (e) {\n          console.warn(`error parsing lead extra data: ${e}`);\n        }\n      }\n\n      const formattedResponse = {\n        action: notif['@action'],\n        callbacks: notif['@callbacks'] === 'TRUE',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        isInsert: utils.getText(notif, 'is_insert'),\n        leads,\n      };\n\n      if (notif['@callbacks'] === 'TRUE') {\n        const message = \"New CALLBACK packet request rec'd from dialer\";\n        utils.logMessage(LOG_LEVELS.INFO, message, notification);\n        // clear callbacks??\n        // model.callbacks = [];\n        for (var l = 0; l < leads.length; l++) {\n          var lead = leads[l];\n          model.callbacks.push(lead);\n        }\n      } else {\n        model.outboundSettings.tcpaSafeLeads = leads;\n      }\n\n      return formattedResponse;\n    };\n\n    const UpdateDialDestinationRequest = function(dialDest, isSoftphoneError) {\n      this.dialDest = dialDest;\n      this.isSoftphoneError = isSoftphoneError || false;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":MESSAGE_TYPES.UPDATE_DIAL_DESTINATION,\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":\"1\",\n     *      \"dial_dest\":{\"#text\":\"blah@something.com\"},\n     *      \"log_softphone_error\": {\"#text\":\"TRUE|FALSE\"},\n     *    }\n     * }\n     */\n    UpdateDialDestinationRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.UPDATE_DIAL_DESTINATION,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          log_softphone_error: {\n            '#text': utils.toString(\n              this.isSoftphoneError === true ? 'TRUE' : 'FALSE',\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const XferWarmRequest = function(\n      dialDest,\n      callerId,\n      sipHeaders,\n      countryId,\n    ) {\n      this.dialDest = dialDest;\n      this.callerId = callerId || '';\n      this.sipHeaders = sipHeaders || [];\n      this.countryId = countryId;\n    };\n\n    XferWarmRequest.prototype.formatJSON = function() {\n      const fields = [];\n      for (let i = 0; i < this.sipHeaders.length; i++) {\n        const fieldObj = this.sipHeaders[i];\n        fields.push({\n          '@name': utils.toString(fieldObj.name),\n          '@value': utils.toString(fieldObj.value),\n        });\n      }\n\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_WARM,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          xfer_header: fields,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes WARM-XFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"WARM-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231447590139000000000200\"},\n     *      \"session_id\":{\"#text\":\"3\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"OK\"},\"detail\":{}\n     *    }\n     * }\n     *  Response on CANCEL:\n     *  {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082315005000264\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"WARM-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231501090139000000000204\"},\n     *      \"session_id\":{},\n     *      \"status\":{\"#text\":\"FAILURE\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"Transfer CANCELED\"},\n     *      \"detail\":{\"#text\":\"NOANSWER after 3 seconds.\"}\n     *    }\n     * }\n     */\n    XferWarmRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_response;\n      const formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.dialDest = utils.getText(resp, 'dial_dest');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          `Warm Xfer to ${formattedResponse.dialDest} processed successfully.`,\n          response,\n        );\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          `There was an error processing the Warm Xfer request. ${formattedResponse.message}\\n${formattedResponse.detail}`,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    const XferWarmCancelRequest = function(dialDest) {\n      this.dialDest = dialDest;\n    };\n\n    XferWarmCancelRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_WARM_CANCEL,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const WebRTCRequest = function() {};\n\n    WebRTCRequest.prototype.getSipRegistrationInfo = function() {\n      UIModel.getInstance().WebRTCRequest = this;\n      _getSipRegistrationInfo('sip/sipRegistrationInfo', {\n        agentId: UIModel.getInstance().agentSettings.agentId,\n      });\n    };\n\n    /*\n     * legacy response\n     * {\n     *   \"sipInfo\": [\n     *       {\n     *           \"transport\": \"wss\",\n     *           \"username\": \"yadvendra_agent\",\n     *           \"password\": \"oct@2018\",\n     *           \"domain\": \"d03-reg1.vacd.biz\",\n     *           \"outboundProxy\": \"d03-reg1.vacd.biz:8089/freeswitch\"\n     *       }\n     *   ]\n     * }\n     *\n     * RC SSO response\n     * {\n     *   \"sipInfo\": [\n     *       {\n     *           \"transport\": \"WSS\",\n     *           \"username\": \"18662032059*101\",\n     *           \"password\": \"B77O85vO\",\n     *           \"authorizationId\": \"400017513008\",\n     *           \"domain\": \"sip-cfintams.lab.nordigy.ru\",\n     *           \"outboundProxy\": \"webphone-sip-cfintams.lab.nordigy.ru:8083\"\n     *       }\n     *   ]\n     * }\n     * */\n    WebRTCRequest.prototype.processResponse = function(response) {\n      const softphoneSettings = UIModel.getInstance().softphoneSettings;\n      softphoneSettings.sipInfo = response.sipInfo;\n\n      return softphoneSettings.sipInfo;\n    };\n\n    function _getSipRegistrationInfo(path, queryParams) {\n      const model = UIModel.getInstance();\n      const baseUrl = model.authHost + model.baseApiUri;\n      const engageAccessToken = `Bearer ${utils.toString(\n        UIModel.getInstance().authenticateRequest.engageAccessToken,\n      )}`;\n      const params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      params.headers.Authorization = engageAccessToken;\n      params.queryParams = queryParams;\n      const errorMsg = `Error on request get to sip registration info. URL: ${baseUrl}${path}`;\n\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function(response) {\n          try {\n            response = JSON.parse(response.response);\n            const webRTCResponse = UIModel.getInstance().WebRTCRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.WEBRTC_INFO,\n              webRTCResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function(err) {\n          const errResponse = {\n            type: 'Error retrieving sip registration information',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.WEBRTC_INFO,\n            errResponse,\n          );\n        },\n      );\n    }\n    const ChatAgentEndRequest = function(agentId, uii) {\n      this.uii = uii;\n      this.agentId = agentId;\n    };\n\n    /*\n\n    External Chat :\n    when agent submits a chat end request, send \"CHAT-AGENT-END\" request to IntelliQueue\n\n    {\n        \"ui_request\" : {\n            \"@destination\" : \"IQ\",\n            \"@type\" : MESSAGE_TYPES.CHAT_AGENT_END,\n            \"uii\":{\n                \"#text\":utils.toString(this.uii)\n            },\n            \"agent_id\":{\n                \"#text\":utils.toString(this.agentId)\n            }\n        }\n    }\n\n    */\n\n    ChatAgentEndRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_AGENT_END,\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const ChatAliasRequest = function(alias) {\n      this.alias = alias;\n    };\n\n    /*\n     * This class is responsible for creating the request to change chat alias\n     * packet and sending it to intelliservices.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ALIAS\",\n     *      \"alias\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatAliasRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_ALIAS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          alias: {\n            '#text': utils.toString(this.alias),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const ChatDispositionRequest = function(\n      uii,\n      agentId,\n      dispositionId,\n      notes,\n      sendAcknowlegement,\n      survey,\n      sessionId,\n    ) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.dispositionId = dispositionId;\n      this.notes = notes || '';\n      this.sendAcknowlegement = sendAcknowlegement || false;\n      this.sessionId = sessionId;\n\n      /*\n       * survey = {\n       *      first_name: {\n       *          leadField: \"first_name\"\n       *          value: \"Geoff\"\n       *      },\n       *      last_name: {\n       *          leadField: \"last_name\"\n       *          value: \"Mina\"\n       *      }\n       *      ...\n       * }\n       */\n      this.survey = survey || null;\n    };\n\n    /*\n     * External Chat:\n     * When agent dispositions a chat, send \"CHAT-DISPOSITION\" request to IntelliQueue\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DISPOSITION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"session_id\" : {\"#text\" : \"\"},\n     *      \"disposition_id\":{\"#text\":\"\"},\n     *      \"notes\":{\"#text\":\"hello\"},\n     *      \"do_ack\":{\"#text\":\"true\"},\n     *      \"survey\":{\n     *          \"response\":[\n     *              {\"@extern_id\":\"text_box\",\"#text\":\"hello\"},\n     *              {\"@extern_id\":\"check_box\",\"#text\":\"20\"},\n     *              {\"@extern_id\":\"radio_save\",\"#text\":\"23\"}\n     *          ]\n     *      }\n     *    }\n     * }\n     */\n    ChatDispositionRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_DISPOSITION,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispositionId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          do_ack: {\n            '#text': this.sendAcknowlegement === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      /*\n       * converts survey to this response\n       * survey : {\n       *      response: [\n       *          { \"@extern_id\":\"\", \"@lead_update_column\":\"\", \"#text\":\"\" }\n       *      ]\n       * }\n       */\n      if (this.survey !== null) {\n        const response = [];\n        const keys = Object.keys(this.survey);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const obj = {\n            '@extern_id': key,\n            '#text': utils.toString(this.survey[key].value),\n          };\n          response.push(obj);\n        }\n        msg.ui_request.survey = { response };\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    const ChatListRequest = function(agentId, monitorAgentId) {\n      this.agentId = agentId;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * External Chat:\n     * Requests a list of all chats by monitor agent id\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-LIST\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n\n    ChatListRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-LIST\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_response\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-LIST\",\n     *          \"@response_to\":\"\",\n     *          \"agent_id\":{\"#text\":\"17\"},\n     *          \"monitor_agent_id\":{\"#text\":\"18\"},\n     *          \"chat_list\": {}\n     *      }\n     *  }\n     */\n\n    ChatListRequest.prototype.processResponse = function(response) {\n      const notif = response.ui_response;\n      const model = UIModel.getInstance();\n      model.chatListResponse = response;\n\n      return {\n        message: 'Received CHAT-LIST notification',\n        status: 'OK',\n        messageId: notif['@message_id'],\n        agentId: utils.getText(notif, 'agent_id'),\n        monitorAgentId: utils.getText(notif, 'monitor_agent_id'),\n        chatList: utils.processResponseCollection(\n          notif,\n          'chat_list',\n          'active_chat',\n        ),\n      };\n    };\n\n    const ChatMessageRequest = function(uii, agentId, message, whisper) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.message = message;\n      this.whisper = whisper;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a chat message, send \"CHAT-MESSAGE\" request to IntelliQueue\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-MESSAGE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"hello\"},\n     *      \"whisper\":{\"#text\":\"true|false\"}\n     *    }\n     * }\n     */\n    ChatMessageRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_MESSAGE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n          whisper: {\n            '#text': utils.toString(this.whisper),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling external CHAT-MESSAGE packets received from\n     * IntelliQueue.\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-MESSAGE\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"account_id\":{\"#text\":\"\"},\n     *      \"from\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"hello\"},\n     *      \"dts\":{\"#text\":\"2017-05-10 12:40:28\"},\n     *      \"dequeue_agent_id\":{\"#text\":\"123\"},\n     *      \"whisper\":{\"#text\":'TRUE'|'FALSE'\"}\n     *    }\n     * }\n     */\n\n    ChatMessageRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_notification;\n      const dts = utils.getText(resp, 'dts').trim();\n      const dtsDate = new Date(dts.replace(' ', 'T'));\n      const formattedResponse = {\n        uii: utils.getText(resp, 'uii'),\n        accountId: utils.getText(resp, 'account_id'),\n        from: utils.getText(resp, 'from'),\n        type: utils.getText(resp, 'type'),\n        message: utils.getText(resp, 'message'),\n        whisper: utils.getText(resp, 'whisper'),\n        dequeueAgentId: utils.getText(resp, 'dequeue_agent_id'),\n        dts: dtsDate,\n        mediaLinks: utils.processResponseCollection(\n          resp,\n          'media_links',\n          'link',\n        ),\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New CHAT-MESSAGE packet received from IntelliQueue',\n        response,\n      );\n\n      return formattedResponse;\n    };\n\n    const ChatPresentedResponseRequest = function(\n      uii,\n      messageId,\n      response,\n      responseReason,\n    ) {\n      this.uii = uii;\n      this.messageId = messageId;\n      this.response = response;\n      this.responseReason = responseReason || '';\n    };\n\n    /*\n     * External Chat:\n     * When Agent receives a CHAT-PRESENTED notification, respond with\n     * either ACCEPT or REJECT for presented chat.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-PRESENTED\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"response\":{\"#text\":\"ACCEPT|REJECT\"},\n     *      \"response_reason\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatPresentedResponseRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_PRESENTED_RESPONSE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': this.messageId,\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          response: {\n            '#text': utils.toString(this.response),\n          },\n          response_reason: {\n            '#text': utils.toString(this.responseReason),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const ChatRequeueRequest = function(\n      uii,\n      agentId,\n      chatQueueId,\n      skillId,\n      maintainAgent,\n    ) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.chatQueueId = chatQueueId;\n      this.skillId = skillId || '';\n      this.maintainAgent = maintainAgent || false;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a chat message, send \"CHAT-REQUEUE\" request to IntelliQueue\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-REQUEUE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"chat_queue_id\":{\"#text\":\"\"},\n     *      \"skill_id\":{\"#text\":\"\"},\n     *      \"maintain_agent\":{\"#text\":\"true|false\"}\n     *    }\n     * }\n     */\n    ChatRequeueRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_REQUEUE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          chat_queue_id: {\n            '#text': utils.toString(this.chatQueueId),\n          },\n          skill_id: {\n            '#text': utils.toString(this.skillId),\n          },\n          maintain_agent: {\n            '#text': utils.toString(this.maintainAgent),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const ChatRoomRequest = function(\n      action,\n      roomType,\n      roomId,\n      agentOne,\n      agentTwo,\n    ) {\n      this.action = action;\n      this.roomType = roomType;\n      this.roomId = roomId;\n      this.agentOne = agentOne || '';\n      this.agentTwo = agentTwo || '';\n    };\n\n    /*\n     * This class is responsible for sending the packet requesting to either enter\n     * a chatroom, or to exit a chatroom to IS. It also handles private chats. There are\n     * two possible ways these packets could look:\n     *\n     * //PUBLIC\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM\",\n     *      \"@room_type\":\"PUBLIC\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"action\":{\"#text\":\"EXIT|ENTER\"}\n     *    }\n     * }\n     * -OR-\n     * // PRIVATE\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM\",\n     *      \"@room_type\":\"PRIVATE\",\n     *      \"agent_one\":{\"#text\":\"\"},\n     *      \"agent_two\":{\"#text\":\"\"},\n     *      \"action\":{\"#text\":\"ENTER|EXIT\"}\n     *    }\n     * }\n     *\n     */\n    ChatRoomRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_ROOM,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          action: {\n            '#text': utils.toString(this.action),\n          },\n        },\n      };\n\n      if (this.action !== 'EXIT') {\n        msg.ui_request['@room_type'] = this.roomType;\n      }\n\n      if (this.roomType === 'PRIVATE' && this.action === 'ENTER') {\n        msg.ui_request.agent_one = { '#text': utils.toString(this.agentOne) };\n        msg.ui_request.agent_two = { '#text': utils.toString(this.agentTwo) };\n      } else {\n        msg.ui_request.room_id = { '#text': utils.toString(this.roomId) };\n      }\n      return JSON.stringify(msg);\n    };\n\n    const ChatRoomStateRequest = function() {};\n\n    /*\n     * This class is responsible for processing CHAT-ROOM-STATE packets received\n     * from IntelliServices.\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM-STATE\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"chat_alias\":{\"#text\":\"\"},\n     *      \"state\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatRoomStateRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_request;\n      const formattedResponse = {\n        roomId: utils.getText(resp, 'room_id'),\n        agentId: utils.getText(resp, 'agent_id'),\n        chatAlias: utils.getText(resp, 'chat_alias'),\n        state: utils.getText(resp, 'state'),\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        `Chat-Room-State update packet received for room #${formattedResponse.roomId}`,\n        response,\n      );\n      return formattedResponse;\n    };\n\n    const ChatSendRequest = function(roomId, message) {\n      this.roomId = roomId;\n      this.message = message;\n    };\n\n    /*\n     * This class is responsible for creating the CHAT message packet and sending\n     * it to IntelliServices.\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_id\":{\"#text\":\"\"}\n     *      \"message\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatSendRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_SEND,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          room_id: {\n            '#text': utils.toString(this.roomId),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling CHAT packets received from\n     * IntelliServices.\n     *\n     * //PUBLIC\n     * {\"ui_request\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_type\":\"GROUP\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"sender\":{\"#text\":\"\"},\n     *      \"sender_id\":{\"#text\":\"\"},\n     *      \"room_name\":{\"#text\":\"\"}\n     *    }\n     * }\n     * -OR-\n     * // PRIVATE\n     * {\"ui_request\":{\n     *      \"@dynamic_create\":\"TRUE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_type\":\"PRIVATE\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"sender\":{\"#text\":\"\"},\n     *      \"room_name\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n\n    ChatSendRequest.prototype.processResponse = function(response) {\n      const resp = response.ui_request;\n      const formattedResponse = {\n        roomType: utils.getText(resp, 'room_type'),\n        roomId: utils.getText(resp, 'room_id'),\n        message: utils.getText(resp, 'message'),\n        sender: utils.getText(resp, 'sender'),\n        senderId: utils.getText(resp, 'sender_id'),\n        roomName: utils.getText(resp, 'room_name'),\n        dynamicCreate: utils.getText(resp, 'dynamic_create') === 'TRUE',\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New CHAT packet received from IntelliServices',\n        response,\n      );\n\n      return formattedResponse;\n    };\n\n    const ChatTypingRequest = function(uii, message) {\n      this.uii = uii;\n      this.message = message;\n    };\n\n    /*\n     * External Chat:\n     * Agent sends typing message to notify client widgets,\n     * but the agent's pending message is not sent going this direction.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-TYPING\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatTypingRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_TYPING,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const LeaveChatRequest = function(uii, agentId, sessionId) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.sessionId = sessionId;\n    };\n\n    /*\n     * External Chat:\n     * Requests to terminate a chat session on an existing chat uii\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DROP-SESSION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"session_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    LeaveChatRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAVE_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const ChatManualSmsRequest = function(\n      agentId,\n      chatQueueId,\n      ani,\n      dnis,\n      message,\n    ) {\n      this.agentId = agentId;\n      this.chatQueueId = chatQueueId;\n      this.ani = ani;\n      this.dnis = dnis;\n      this.message = message;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a manual sms message, send \"MANUAL-SMS\" request to IntelliQueue\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"MANUAL-SMS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"1995\"},\n     *      \"chatQueueId\":{\"#text\":\"44\"},\n     *      \"ani\":{\"#text\":\"1231231234\"},\n     *      \"dnis\":{\"#text\":\"5435435432\"},\n     *      \"message\":{\"#text\":\"hello\"}\n     *    }\n     * }\n     */\n    ChatManualSmsRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_MANUAL_SMS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          chat_queue_id: {\n            '#text': utils.toString(this.chatQueueId),\n          },\n          ani: {\n            '#text': utils.toString(this.ani),\n          },\n          dnis: {\n            '#text': utils.toString(this.dnis),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const MonitorChatRequest = function(monitorAgentId) {\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * External Chat:\n     * Requests a new session on an existing chat uii\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-MONITOR\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    MonitorChatRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.MONITOR_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    const StopMonitorChatRequest = function(monitorAgentId) {\n      this.monitorAgentId = monitorAgentId || '';\n    };\n\n    /*\n     * External Chat:\n     * Requests a termination of a chat monitor session for an agent\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DROP-MONITORING-SESSION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    StopMonitorChatRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.STOP_MONITOR_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * Process a CHAT-DROP-MONITORING-SESSION notification. Used to notify supervisor monitors that agent has logged out.\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"IQ10012016080217135001344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-DROP-MONITORING-SESSION\",\n     *      \"monitored_agent_id\":{\"#text\":\"1\"}\n     *    }\n     * }\n     */\n    StopMonitorChatRequest.prototype.processResponse = function(data) {\n      const notif = data.ui_notification;\n\n      return { monitoredAgentId: utils.getText(notif, 'monitored_agent_id') };\n    };\n\n    const SupervisorListRequest = function() {};\n\n    /*\n     * This class is responsible for creating a packet to request a list of\n     * supervisors from IntelliServices. This is used by the chat function so an\n     * agent can grab a list of supervisors and then select one for a private chat.\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"SUPERVISOR-LIST\",\n     *      \"agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    SupervisorListRequest.prototype.formatJSON = function() {\n      const msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.SUPERVISOR_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling the SUPERVISOR-LIST packet\n     * rec'd from intelliservices. It will save a copy of this list in the\n     * UIModel under a variable called \"supervisors\". Whenever a new list\n     * is rec'd it is overwritten.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"supervisor\":[\n     *          {\"id\":{\"#text\":\"\"}, \"fname\":{\"#text\":\"\"}, \"lname\":{\"#text\":\"\"}, \"uname\":{\"#text\":\"\"} }\n     *          {\"id\":{\"#text\":\"\"}, \"fname\":{\"#text\":\"\"}, \"lname\":{\"#text\":\"\"}, \"uname\":{\"#text\":\"\"} }\n     *      ]\n     *    }\n     * }\n     */\n\n    SupervisorListRequest.prototype.processResponse = function(response) {\n      const model = UIModel.getInstance();\n      const tempList = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'supervisor',\n      );\n      const supervisors = [];\n\n      for (let i = 0; i < tempList.length; i++) {\n        const sup = tempList[i];\n        supervisors.push({\n          agentId: sup.id,\n          firstName: sup.fname,\n          lastName: sup.lname,\n          username: sup.uname,\n        });\n      }\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New supervisor list received ',\n        supervisors,\n      );\n      model.supervisors = supervisors;\n\n      return model.supervisors;\n    };\n\n    const ChatClientReconnectNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-CLIENT-RECONNECT\" packets from IntelliQueue.\n     * This is sent when a chat connect message is sent to a non-archieved chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-CLIENT-RECONNECT\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *          \"agent_id\":{\"#text\":\"1\"}\n     *      }\n     *  }\n     */\n\n    ChatClientReconnectNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-CLIENT-RECONNECT notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        agentId: utils.getText(notif, 'agent_id'),\n      };\n    };\n\n    const AddChatSessionNotification = function() {};\n\n    /*\n     * This class is responsible for handling \"ADD-CHAT-SESSION\" packets from IntelliQueue.\n     *\n     * {\n     *   \"ui_notification\": {\n     *       \"@message_id\": \"IQ982008082918151403727\",\n     *       \"@response_to\": \"\",\n     *       \"@type\": \"ADD-CHAT-SESSION\",\n     *       \"session_id\": { \"#text\": \"2\" },\n     *       \"uii\": { \"#text\": \"200808291814560000000900016558\" },\n     *       \"session_type\": { \"#text\": \"AGENT|MONITORING\" },\n     *       \"agent_id\": { \"#text\": \"1856\" } // null unless monitor type,\n     *       \"transcript\": { }\n     *   }\n     *  }\n     */\n    AddChatSessionNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n      const formattedResponse = utils.buildDefaultResponse(notification);\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received ADD-CHAT-SESSION notification';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.sessionType = utils.getText(notif, 'session_type');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.transcript = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transcript',\n      )[0];\n\n      return formattedResponse;\n    };\n\n    const ChatActiveNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-ACTIVE\" packets from IntelliQueue.\n     * This is sent in response to an agent's CHAT-PRESENTED-RESPONSE accept request.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-ACTIVE\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"is_monitoring\":{\"#text\":\"TRUE\"|\"FALSE\"}\n     *      }\n     *  }\n     */\n    ChatActiveNotification.prototype.processResponse = function(notification) {\n      const notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-ACTIVE notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        isMonitoring: utils.getText(notif, 'is_monitoring'),\n      };\n    };\n\n    const ChatCancelledNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for processing \"CHAT-CANCELLED\" packets from IntelliQueue.\n     * If an agent is presented a chat and doesn't respond before the timeout, the CHAT-CANCELLED\n     * message is sent from IQ.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-CANCELLED\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *      }\n     *  }\n     */\n    ChatCancelledNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-CANCELLED notification',\n        status: 'OK',\n        messageId: notif['@message_id'],\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n      };\n    };\n\n    const ChatInactiveNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-INACTIVE\" packets from IntelliQueue.\n     * This is sent to the agent when the last session is disconnected from a chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-INACTIVE\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"disposition_timeout\":{\"#text\":\"30\"},\n     *          \"dequeue_agent_id\":{\"#text\":\"123\"}\n     *      }\n     *  }\n     */\n    ChatInactiveNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-INACTIVE notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        dispositionTimeout: utils.getText(notif, 'disposition_timeout'),\n        dequeueAgentId: utils.getText(notif, 'dequeue_agent_id'),\n      };\n    };\n\n    const ChatPresentedNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-PRESENTED\" packets from IntelliQueue.\n     * When this notification is received, the Agent can either Accept or Decline which will\n     * be sent back to IntelliQueue as a CHAT-PRESENTED-RESPONSE.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-PRESENTED\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"chat_queue_id\":{\"#text\":\"3\"},\n     *          \"chat_queue_name\":{\"#text\":\"Support Chat\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"channel_type\":{\"#text\":\"\"},\n     *          \"allow_accept\":{\"#text\":\"TRUE|FALSE\"}\n     *      }\n     *  }\n     */\n    ChatPresentedNotification.prototype.processResponse = function(\n      notification,\n    ) {\n      const notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-PRESENTED notification',\n        status: 'OK',\n        messageId: notif['@message_id'],\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        channelType: utils.getText(notif, 'channel_type'),\n        chatQueueId: utils.getText(notif, 'chat_queue_id'),\n        chatQueueName: utils.getText(notif, 'chat_queue_name'),\n        allowAccept: utils.getText(notif, 'allow_accept'),\n      };\n    };\n\n    const ChatTypingNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-TYPING\" packets from IntelliQueue.\n     * When this notification is received, the AgentUI will show the pending message\n     * so far from the client chat widget and typing notification.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-TYPING\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"from\":{\"#text\":\"\"},\n     *          \"message\":{\"#text\":\"this is the message before actual send\"}\n     *          \"dequeue_agent_id\":{\"#text\":\"123\"}\n     *      }\n     *  }\n     */\n    ChatTypingNotification.prototype.processResponse = function(notification) {\n      const notif = notification.ui_notification;\n\n      return {\n        message: 'Received CHAT-TYPING notification',\n        status: 'OK',\n        accountId: utils.getText(notif, 'account_id'),\n        uii: utils.getText(notif, 'uii'),\n        from: utils.getText(notif, 'from'),\n        type: utils.getText(notif, 'type'),\n        pendingMessage: utils.getText(notif, 'message'),\n        dequeueAgentId: utils.getText(notif, 'dequeue_agent_id'),\n      };\n    };\n\n    const NewChatNotification = function() {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"NEW-CHAT\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"NEW-CHAT\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"session_id\":{\"#text\":\"2\"},\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"queue_dts\":{\"#text\":\"\"},\n     *          \"queue_time\":{\"#text\":\"\"},\n     *          \"chat_queue_id\":{\"#text\":\"\"},\n     *          \"chat_queue_name\":{\"#text\":\"\"},\n     *          \"chat_requeue_type\" : {\"#text\":\"\"}\n     *          \"app_url\":{\"#text\":\"\"},\n     *          \"channel_type\":{\"#text\":\"\"},\n     *          \"ani\":{\"#text\":\"\"},\n     *          \"dnis\":{\"#text\":\"\"},\n     *          \"survey_pop_type\":{\"#text\":\"\"},\n     *          \"script_id\":{\"#text\":\"\"},\n     *          \"script_version\":{\"#text\":\"\"},\n     *          \"idle_timeout\":{\"#text\":\"\"},\n     *          \"is_monitoring\":{#text\":\"TRUE\"|\"FALSE\"},\n     *          \"monitored_agent_id\":{\"#text\":\"123\"| \"\"} <-- only populated if is_monitoring == TRUE\n     *          \"requeue_shortcuts\":{\n     *              \"requeue_shortcut\":{\n     *                  \"@chat_queue_id\":\"2\",\n     *                  \"@name\":\"test queue\",\n     *                  \"@skill_id\":\"\"\n     *              }\n     *          },\n     *          \"chat_dispositions\":{\n     *              \"disposition\":[\n     *                  { \"@disposition_id\":\"2\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"@email_template_id\":\"1\", \"#text\":\"Complete\"},\n     *                  { \"@disposition_id\":\"3\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"#text\":\"Requeue\"}\n     *              ]\n     *          },\n     *          \"chat_requeue_shortcuts\" :{\n     *              shortcut : [\n     *                {@chat_requeue_shortcut_id:\"3\", @name:\"test\", @rank:\"1\",@requeue_chat_queue_id:\"74\",@skill_id:\"\"}\n     *              ]\n     *          }\n     *          \"transcript\":{\n     *              \"message\":[\n     *                  { \"@from\":\"system\", \"@type\":\"SYSTEM\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"User1 connected\"},\n     *                  { \"@from\":\"dlbooks\", \"@type\":\"AGENT\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"Hello\"},\n     *                  { \"@from\":\"user1\", \"@type\":\"CLIENT\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"Hi\"}\n     *              ]\n     *          },\n     *          \"json_baggage\":{\"#text\":\"json_string_form_data\"}, <--- pre-form chat data\n     *      }\n     *  }\n     */\n    NewChatNotification.prototype.processResponse = function(notification) {\n      const notif = notification.ui_notification;\n\n      let dts = utils.getText(notif, 'queue_dts');\n      dts = new Date(dts.replace(' ', 'T'));\n\n      // set up new call obj\n      const newChat = {\n        uii: utils.getText(notif, 'uii'),\n        accountId: utils.getText(notif, 'account_id'),\n        sessionId: utils.getText(notif, 'session_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        queueDts: dts,\n        queueTime: utils.getText(notif, 'queue_time'),\n        chatQueueId: utils.getText(notif, 'chat_queue_id'),\n        chatQueueName: utils.getText(notif, 'chat_queue_name'),\n        chatRequeueType: utils.getText(notif, 'chat_requeue_type'),\n        appUrl: utils.getText(notif, 'app_url'),\n        channelType: utils.getText(notif, 'channel_type'),\n        ani: utils.getText(notif, 'ani'),\n        dnis: utils.getText(notif, 'dnis'),\n        surveyPopType: utils.getText(notif, 'survey_pop_type'),\n        scriptId: utils.getText(notif, 'script_id'),\n        scriptVersion: utils.getText(notif, 'script_version'),\n        idleTimeout: utils.getText(notif, 'idle_timeout'),\n        isMonitoring: utils.getText(notif, 'is_monitoring'),\n        monitoredAgentId: utils.getText(notif, 'monitored_agent_id'),\n        preChatData: utils.getText(notif, 'json_baggage'),\n      };\n\n      newChat.requeueShortcuts = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_requeue_shortcuts',\n        'shortcut',\n      )[0];\n      newChat.chatDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_dispositions',\n        'disposition',\n      )[0];\n      newChat.transcript = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transcript',\n        'message',\n      )[0];\n      newChat.baggage = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'json_baggage',\n      )[0];\n\n      if (newChat.chatDispositions && newChat.chatDispositions.disposition) {\n        newChat.chatDispositions.dispositions = [newChat.chatDispositions];\n      } else {\n        newChat.chatDispositions = newChat.chatDispositions.dispositions;\n      }\n\n      if (newChat.transcript && newChat.transcript.message) {\n        newChat.transcript = [newChat.transcript];\n      } else {\n        newChat.transcript = newChat.transcript.messages;\n      }\n\n      if (newChat.preChatData) {\n        try {\n          newChat.preChatData = JSON.parse(newChat.preChatData);\n        } catch (err) {\n          utils.logMessage(\n            LOG_LEVELS.ERROR,\n            'Error parsing the pre-form chat data.',\n            notif,\n          );\n        }\n      }\n\n      // convert numbers to boolean\n      if (newChat.chatDispositions) {\n        for (let d = 0; d < newChat.chatDispositions.length; d++) {\n          const disp = newChat.chatDispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.isSuccess = disp.isSuccess === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // convert dates\n      if (newChat.transcript) {\n        for (let t = 0; t < newChat.transcript.length; t++) {\n          const msg = newChat.transcript[t];\n          if (msg.dts) {\n            msg.dts = new Date(msg.dts.replace(' ', 'T'));\n          }\n        }\n      }\n\n      // Build token map\n      newChat.baggage = buildChatTokenMap(notif, newChat);\n\n      return newChat;\n    };\n\n    function buildChatTokenMap(notif, newChat) {\n      const tokens = {};\n      const model = UIModel.getInstance();\n\n      if (newChat.preChatData) {\n        for (const prop in newChat.preChatData) {\n          if (newChat.preChatData.hasOwnProperty(prop)) {\n            tokens[prop] = newChat.preChatData[prop];\n          }\n        }\n      }\n\n      try {\n        tokens.chatQueueId = newChat.chatQueueId;\n        tokens.chatQueueName = newChat.chatQueueName;\n        tokens.ani = newChat.ani;\n        tokens.dnis = newChat.dnis;\n        tokens.uii = newChat.uii;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for basic chat info. ',\n          any,\n        );\n      }\n\n      try {\n        tokens.agentFirstName = model.agentSettings.firstName;\n        tokens.agentLastName = model.agentSettings.lastName;\n        tokens.agentExternalId = model.agentSettings.externalAgentId;\n        tokens.agentType = model.agentSettings.agentType;\n        tokens.agentEmail = model.agentSettings.email;\n        tokens.agentUserName = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    const AgentStats = function() {};\n\n    /*\n     * This class is responsible for handling an Agent Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel. Could be a single agent or array of agents.\n     *\n      {\"ui_stats\":{\n           \"@type\":\"AGENT\",\n           \"agent\":{\n               \"@alt\":\"INBOUND\",\n               \"@atype\":\"AGENT\",\n               \"@avgtt\":\"00.0\",\n               \"@calls\":\"0\",\n               \"@da\":\"0\",\n               \"@droute\":\"6789050673\",\n               \"@f\":\"John\",\n               \"@gdesc\":\"\",\n               \"@gname\":\"\",\n               \"@id\":\"1856\",\n               \"@l\":\"Doe\",\n               \"@ldur\":\"6\",\n               \"@ltype\":\"INBOUND\",\n               \"@oh\":\"0\",\n               \"@pd\":\"0\",\n               \"@pdt\":\"0\",\n               \"@pres\":\"0\",\n               \"@rna\":\"0\",\n               \"@sdur\":\"6\",\n               \"@sp\":\"\",\n               \"@state\":\"AVAILABLE\",\n               \"@ttt\":\"0\",\n               \"@u\":\"jdoe\",\n               \"@uii\":\"\",\n               \"@util\":\"0.00\",\n               \"@call_duration:0\"\n           }\n         }\n      }\n     */\n    AgentStats.prototype.processResponse = function(stats) {\n      let resp = stats.ui_stats.agent;\n      const agentStats = [];\n\n      if (!Array.isArray(resp)) {\n        resp = [resp];\n      }\n\n      try {\n        for (let i = 0; i < resp.length; i++) {\n          agentStats.push({\n            agentLoginType: resp[i]['@alt'],\n            agentType: resp[i]['@atype'],\n            avgTalkTime: resp[i]['@avgtt'],\n            calls: resp[i]['@calls'],\n            isDequeueAgent: resp[i]['@da'],\n            defaultRoute: resp[i]['@droute'],\n            firstName: resp[i]['@f'],\n            queueDesc: resp[i]['@gdesc'],\n            queueName: resp[i]['@gname'],\n            agentId: resp[i]['@id'],\n            lastName: resp[i]['@l'],\n            loginDuration: resp[i]['@ldur'],\n            loginType: resp[i]['@ltype'],\n            offHook: resp[i]['@oh'],\n            pendingDisp: resp[i]['@pd'],\n            pendingDispTime: resp[i]['@pdt'],\n            presented: resp[i]['@pres'],\n            rna: resp[i]['@rna'],\n            stateDuration: resp[i]['@sdur'],\n            skillProfileName: resp[i]['@sp'],\n            agentState: resp[i]['@state'],\n            totalTalkTime: resp[i]['@ttt'],\n            username: resp[i]['@u'],\n            uii: resp[i]['@uii'],\n            utilization: resp[i]['@util'],\n            callDuration: resp[i]['@call_duration'],\n          });\n        }\n      } catch (e) {}\n\n      UIModel.getInstance().agentStats = agentStats;\n      return agentStats;\n    };\n\n    const AgentDailyStats = function() {};\n\n    /*\n     * This class is responsible for handling an Agent Daily Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\"ui_stats\":{\n     *      \"@type\":\"AGENTDAILY\",\n     *      \"agent_id\":{\"#text\":\"1180723\"},\n     *      \"total_login_sessions\":{\"#text\":\"1\"},\n     *      \"total_calls_handled\":{\"#text\":\"0\"},\n     *      \"total_preview_dials\":{\"#text\":\"0\"},\n     *      \"total_manual_dials\":{\"#text\":\"0\"},\n     *      \"total_rna\":{\"#text\":\"0\"},\n     *      \"total_talk_time\":{\"#text\":\"0\"},\n     *      \"total_offhook_time\":{\"#text\":\"0\"},\n     *      \"total_login_time\":{\"#text\":\"7808\"},\n     *      \"total_success_dispositions\":{\"#text\":\"0\"}\n     *    }\n     * }\n     */\n    AgentDailyStats.prototype.processResponse = function(stats) {\n      const model = UIModel.getInstance().agentDailyStats;\n      const resp = stats.ui_stats;\n\n      model.agentId = utils.getText(resp, 'agent_id');\n      model.totalLoginSessions = utils.getText(resp, 'total_login_sessions');\n      model.totalChatsHandled = utils.getText(resp, 'total_chats_handled');\n      model.totalCallsHandled = utils.getText(resp, 'total_calls_handled');\n      model.totalPreviewDials = utils.getText(resp, 'total_preview_dials');\n      model.totalManualDials = utils.getText(resp, 'total_manual_dials');\n      model.totalRna = utils.getText(resp, 'total_rna');\n      model.totalSuccessDispositions = utils.getText(\n        resp,\n        'total_success_dispositions',\n      );\n\n      if (!model.totalTalkTime) {\n        // init daily stats to first stats packet if they don't exist\n        model.totalLoginTime = utils.getText(resp, 'total_login_time');\n        model.totalOffhookTime = utils.getText(resp, 'total_offhook_time');\n        model.totalTalkTime = utils.getText(resp, 'total_talk_time');\n        model.currCallTime = '0';\n      }\n\n      return model;\n    };\n\n    const CampaignStats = function() {};\n\n    /*\n     * This class is responsible for handling a Campaign Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\"ui_stats\":{\n     *      \"@type\":\"CAMPAIGN\",\n     *      \"campaign\":[\n     *          {\n     *              \"@a\":\"0\",\"@aba\":\"0\",\"@an\":\"0\",\"@av\":\"0\",\"@b\":\"0\",\"@c\":\"1\",\"@e\":\"0\",\"@f\":\"0\",\n     *              \"@id\":\"60275\",\"@int\":\"0\",\"@m\":\"0\",\"@na\":\"0\",\"@name\":\"Test Campaign\",\n     *              \"@p\":\"0\",\"@r\":\"1\",\"@s\":\"0\",\"@tc\":\"0\",\"@ttt\":\"0\"\n     *          },\n     *          {\n     *              \"@a\":\"0\",\"@aba\":\"0\",\"@an\":\"0\",\"@av\":\"0\",\"@b\":\"0\",\"@c\":\"0\",\"@e\":\"0\",\"@f\":\"0\",\n     *              \"@id\":\"60293\",\"@int\":\"0\",\"@m\":\"0\",\"@na\":\"0\",\"@name\":\"Test Campaign w\\\\ Search\",\n     *              \"@p\":\"0\",\"@r\":\"19\",\"@s\":\"0\",\"@tc\":\"0\",\"@ttt\":\"0\"\n     *          }\n     *     ],\n     *     \"totals\":{\n     *          \"noanswer\":{\"#text\":\"0\"},\n     *          \"totalConnects\":{\"#text\":\"0\"},\n     *          \"pending\":{\"#text\":\"0\"},\n     *          \"active\":{\"#text\":\"0\"},\n     *          \"error\":{\"#text\":\"0\"},\n     *          \"totalTalkTime\":{\"#text\":\"0\"},\n     *          \"answer\":{\"#text\":\"0\"},\n     *          \"abandon\":{\"#text\":\"0\"},\n     *          \"ready\":{\"#text\":\"20\"},\n     *          \"machine\":{\"#text\":\"0\"},\n     *          \"intercept\":{\"#text\":\"0\"},\n     *          \"busy\":{\"#text\":\"0\"},\n     *          \"complete\":{\"#text\":\"1\"},\n     *          \"fax\":{\"#text\":\"0\"}\n     *     }\n     *   }\n     * }\n     */\n    CampaignStats.prototype.processResponse = function(stats) {\n      const resp = stats.ui_stats;\n      const totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      const campaigns = [];\n      let campRaw = null;\n\n      if (!Array.isArray(resp.campaign)) {\n        resp.campaign = [resp.campaign];\n      }\n\n      for (let c = 0; c < resp.campaign.length; c++) {\n        campRaw = resp.campaign[c];\n\n        if (campRaw == null) {\n          continue;\n        }\n\n        campaigns.push({\n          active: campRaw['@a'],\n          abandon: campRaw['@aba'],\n          answer: campRaw['@an'],\n          available: campRaw['@av'],\n          busy: campRaw['@b'],\n          complete: campRaw['@c'],\n          error: campRaw['@e'],\n          fax: campRaw['@f'],\n          campaignId: campRaw['@id'],\n          intercept: campRaw['@int'],\n          machine: campRaw['@m'],\n          noanswer: campRaw['@na'],\n          campaignName: campRaw['@name'],\n          pending: campRaw['@p'],\n          ready: campRaw['@r'],\n          staffed: campRaw['@s'],\n          totalConnects: campRaw['@tc'],\n          totalTalkTime: campRaw['@ttt'],\n        });\n      }\n\n      const campaignStats = {\n        type: resp['@type'],\n        campaigns,\n        totals,\n      };\n\n      UIModel.getInstance().campaignStats = campaignStats;\n\n      return campaignStats;\n    };\n\n    const ChatQueueStats = function() {};\n\n    /*\n     * This class is responsible for handling an Chat Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     *{\n     *  \"ui_stats\": {\n     *  \"@type\": \"CHAT\",\n     *  \"chatQueue\": [\n     *      {\n     *          \"@active\": \"1\",\n     *          \"@available\": \"0\",\n     *          \"@avgAbandon\": \"00.0\",\n     *          \"@avgChatTime\": \"00.0\",\n     *          \"@avgQueueTime\": \"00.0\",\n     *          \"@chatQueueId\": \"1\",\n     *          \"@chatQueueName\": \"testing chat quuee\",\n     *          \"@deflected\": \"0\",\n     *          \"@inQueue\": \"0\",\n     *          \"@longestInQueue\": \"0\",\n     *          \"@presented\": \"0\",\n     *          \"@routing\": \"0\",\n     *          \"@staffed\": \"0\",\n     *          \"@totalAbandonTime\": \"0\",\n     *          \"@totalAnswerTime\": \"0\",\n     *          \"@totalChatTime\": \"0\",\n     *          \"@totalQueueTime\": \"0\",\n     *          \"@utilization\": \"00.0\"\n     *      },\n     *      {\n     *          \"@active\": \"0\",\n     *          \"@available\": \"0\",\n     *          \"@avgAbandon\": \"00.0\",\n     *          \"@avgChatTime\": \"00.0\",\n     *          \"@avgQueueTime\": \"00.0\",\n     *          \"@chatQueueId\": \"3\",\n     *          \"@chatQueueName\": \"testing test\",\n     *          \"@deflected\": \"0\",\n     *          \"@inQueue\": \"0\",\n     *          \"@longestInQueue\": \"0\",\n     *          \"@presented\": \"0\",\n     *          \"@routing\": \"0\",\n     *          \"@staffed\": \"0\",\n     *          \"@totalAbandonTime\": \"0\",\n     *          \"@totalAnswerTime\": \"0\",\n     *          \"@totalChatTime\": \"0\",\n     *          \"@totalQueueTime\": \"0\",\n     *          \"@utilization\": \"00.0\"\n     *      }\n     *  ],\n     *  \"totals\": {\n     *      \"routing\": {\"#text\": \"0\"},\n     *      \"ttotalAnswerTime\": {\"#text\": \"0\"},\n     *      \"inQueue\": { \"#text\": \"0\"},\n     *      \"ttotalChatTime\": {\"#text\": \"0\"},\n     *      \"ttotalAbandonTime\": {\"#text\": \"0\"},\n     *      \"presented\": {\"#text\": \"0},\n     *      \"accepted\": {\"#text\": \"0\"},\n     *      \"deflected\": {\"#text\": \"0\"},\n     *      \"active\": {\"#text\": \"1\"},\n     *      \"abandoned\": {\"#text\": \"0\"},\n     *      \"ttotalQueueTime\": {\"#text\": \"0\"}\n     *   }\n     *  }\n     *}\n     */\n    ChatQueueStats.prototype.processResponse = function(stats) {\n      const resp = stats.ui_stats;\n      const totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      const chatQueues = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'chatQueue',\n      );\n\n      const chatQueueStats = {\n        type: resp['@type'],\n        chatQueues,\n        totals,\n      };\n\n      UIModel.getInstance().chatQueueStats = chatQueueStats;\n\n      return chatQueueStats;\n    };\n\n    const QueueStats = function() {};\n\n    /*\n     * This class is responsible for handling an Queue Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\n     *   \"ui_stats\":{\n     *       \"@type\":\"GATE\",\n     *       \"gate\":{\n     *           \"@aba\":\"0\",\"@active\":\"0\",\"@ans\":\"0\",\"@asa\":\"00.0\",\"@avail\":\"2\",\n     *           \"@avga\":\"00.0\",\"@avgq\":\"00.0\",\"@avgt\":\"00.0\",\"@def\":\"0\",\"@id\":\"12126\",\n     *           \"@inq\":\"0\",\"@long_c\":\"0\",\"@longq\":\"0\",\"@name\":\"Cris inbound\",\n     *           \"@pres\":\"0\",\"@route\":\"0\",\"@short_aba\":\"0\",\"@short_c\":\"0\",\"@sla\":\"100.0\",\n     *           \"@sla_f\":\"0\",\"@sla_p\":\"0\",\"@staff\":\"2\",\"@t_aba\":\"0\",\"@t_q\":\"0\",\"@t_soa\":\"0\",\"@util\":\"00.0\"\n     *       },\n     *       \"totals\":{\n     *           \"inQueue\":{\"#text\":\"0\"},\n     *           \"answered\":{\"#text\":\"0\"},\n     *           \"totalABATime\":{\"#text\":\"0\"},\n     *           \"active\":{\"#text\":\"0\"},\n     *           \"longCall\":{\"#text\":\"0\"},\n     *           \"shortCall\":{\"#text\":\"0\"},\n     *           \"slaPass\":{\"#text\":\"0\"},\n     *           \"totalQueueTime\":{\"#text\":\"0\"},\n     *           \"routing\":{\"#text\":\"0\"},\n     *           \"totalTalkTime\":{\"#text\":\"0\"},\n     *           \"shortAbandon\":{\"#text\":\"0\"},\n     *           \"presented\":{\"#text\":\"0\"},\n     *           \"totalSOA\":{\"#text\":\"0\"},\n     *           \"slaFail\":{\"#text\":\"0\"},\n     *           \"deflected\":{\"#text\":\"0\"},\n     *           \"abandoned\":{\"#text\":\"0\"}\n     *      }\n     *   }\n     * }\n     */\n    QueueStats.prototype.processResponse = function(stats) {\n      const resp = stats.ui_stats;\n      const totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      const queues = [];\n      let gateRaw = {};\n\n      if (!Array.isArray(resp.gate)) {\n        resp.gate = [resp.gate];\n      }\n\n      for (let c = 0; c < resp.gate.length; c++) {\n        gateRaw = resp.gate[c];\n        if (gateRaw == null) {\n          continue;\n        }\n\n        queues.push({\n          abandon: gateRaw['@aba'],\n          active: gateRaw['@active'],\n          answer: gateRaw['@ans'],\n          asa: gateRaw['@asa'],\n          available: gateRaw['@avail'],\n          avgAbandon: gateRaw['@avga'],\n          avgQueue: gateRaw['@avgq'],\n          avgTalk: gateRaw['@avgt'],\n          deflected: gateRaw['@def'],\n          queueId: gateRaw['@id'],\n          inQueue: gateRaw['@inq'],\n          longCall: gateRaw['@long_c'],\n          longestInQueue: gateRaw['@longq'],\n          queueName: gateRaw['@name'],\n          presented: gateRaw['@pres'],\n          routing: gateRaw['@route'],\n          shortAbandon: gateRaw['@short_aba'],\n          shortCall: gateRaw['@short_c'],\n          sla: gateRaw['@sla'],\n          slaPass: gateRaw['@sla_p'],\n          slaFail: gateRaw['@sla_f'],\n          staffed: gateRaw['@staff'],\n          tAbandonTime: gateRaw['@t_aba'],\n          tQueueTime: gateRaw['@t_q'],\n          tSpeedOfAnswer: gateRaw['@t_soa'],\n          utilization: gateRaw['@util'],\n        });\n      }\n\n      const queueStats = {\n        type: resp['@type'],\n        queues,\n        totals,\n      };\n\n      UIModel.getInstance().queueStats = queueStats;\n\n      return queueStats;\n    };\n\n    var UIModel = (function() {\n      let instance;\n\n      function init() {\n        // Singleton\n\n        // Private methods and variables here //\n        // function privateMethod(){\n        //    console.log( \"I am private\" );\n        // }\n        //\n        // var privateVariable = \"I'm also private\";\n\n        // Public methods and variables\n        return {\n          currentCall: {}, // save the NEW-CALL notification in parsed form\n          pendingNewCallSessions: {}, // save any pending call sessions, in case the new call packet hasn't arrived\n          callTokens: {}, // Stores a map of all tokens for a call\n          callbacks: [],\n          libraryInstance: null, // Initialized to the library instance on startup\n          pingIntervalId: null, // The id of the timer used to send ping-call messages\n          statsIntervalId: null, // The id of the timer used to send stats request messages\n          pingStatIntervalId: null, // The id of the timer used to send ping-call beat messages\n          agentDailyIntervalId: null, // The id of the timer used to update some agent daily stats values\n          reconnectIntervalId: null, // The id of the timer used to try reconnecting the socket\n          waitingForAddSession: null,\n          authHost: window.location.origin, // default to protocol + hostname + port\n          socketProtocol: 'wss://', // default to secure socket unless local test flag passed in on initialization\n          baseAuthUri: '/api/auth/', // the path to engage-auth e.g.: http://localhost:81/api/auth/ or window.location.origin + \"/api/auth/\",\n          baseApiUri: '/api/v1/', // the path to engage-api\n\n          // internal chat requests\n          chatAliasRequest: null,\n          chatRoomRequest: null,\n          chatSendRequest: null,\n          supervisorListRequest: null,\n          chatRoomStateRequest: new ChatRoomStateRequest(),\n\n          // multi-socket\n          multiSocketRequest: new MultiSocketRequest(),\n          dataStore: new LocalStorageService('agentSDK'),\n\n          // external chat requests/notifications\n          chatActiveNotification: new ChatActiveNotification(),\n          chatInactiveNotification: new ChatInactiveNotification(),\n          chatDispositionRequest: null,\n          chatMessageRequest: new ChatMessageRequest(),\n          chatPresentedNotification: new ChatPresentedNotification(),\n          chatPresentedRequest: null,\n          chatRequeueRequest: null,\n          chatTypingNotification: new ChatTypingNotification(),\n          chatTypingRequest: null,\n          newChatNotification: new NewChatNotification(),\n          chatClientReconnectNotification: new ChatClientReconnectNotification(),\n\n          // request instances\n          agentStateRequest: null,\n          chatStateRequest: null,\n          ackRequest: new AckRequest(),\n          bargeInRequest: null,\n          callNotesRequest: null,\n          callbacksPendingRequest: null,\n          campaignDispositionsRequest: null,\n          loginRequest: null,\n          coldXferRequest: null,\n          dispositionRequest: null,\n          dispositionManualPassRequest: null,\n          hangupRequest: null,\n          holdRequest: null,\n          leadHistoryRequest: null,\n          leadInsertRequest: null,\n          leadUpdateRequest: null,\n          logoutRequest: null,\n          authenticateRequest: null, // get RC access token\n          loginPhase1Request: null,\n          offhookInitRequest: null,\n          offhookTermRequest: null,\n          oneToOneOutdialRequest: null,\n          oneToOneOutdialCancelRequest: null,\n          pauseRecordRequest: null,\n          pingCallRequest: null,\n          previewDialRequest: null,\n          reconnectRequest: null,\n          recordRequest: null,\n          requeueRequest: null,\n          statsRequest: null,\n          tcpaSafeRequest: null,\n          warmXferRequest: null,\n          warmXferCancelRequest: null,\n          chatListRequest: null,\n          directAgentTransferListRequest: null,\n          directAgentTransferRequest: null,\n          webRTCRequest: null,\n          searchDirectoryRequest: null,\n          extensionPresenceRequest: null,\n\n          // response packets\n          agentStatePacket: null,\n          chatStatePacket: null,\n          loginPacket: null,\n          currentCallPacket: null,\n          authenticatePacket: null,\n          loginPhase1Packet: null,\n          offhookInitPacket: null,\n          offhookTermPacket: null,\n          transferSessions: {},\n          chatListResponse: null,\n\n          // notification packets\n          addSessionNotification: new AddSessionNotification(),\n          dialGroupChangeNotification: new DialGroupChangeNotification(),\n          dialGroupChangePendingNotification: new DialGroupChangePendingNotification(),\n          dropSessionNotification: new DropSessionNotification(),\n          earlyUiiNotification: new EarlyUiiNotification(),\n          endCallNotification: new EndCallNotification(),\n          gatesChangeNotification: new GatesChangeNotification(),\n          genericNotification: new GenericNotification(),\n          newCallNotification: new NewCallNotification(),\n\n          // stats packets\n          agentStatsPacket: new AgentStats(),\n          agentDailyStatsPacket: new AgentDailyStats(),\n          queueStatsPacket: new QueueStats(),\n          campaignStatsPacket: new CampaignStats(),\n          chatQueueStatsPacket: new ChatQueueStats(),\n\n          // application state\n          applicationSettings: {\n            availableCountries: [],\n            isLoggedInIS: false, // a check for whether or not user is logged in with IntelliServices\n            socketConnected: false,\n            socketDest: '',\n            isTcpaSafeMode: false, // Comes in at the account-level - will get set to true if this interface should be in tcpa-safe-mode only.\n            isSso: false, // Passed in on phase 1 login response, if agent signed in through RC single sign-on path set to true\n            dialDestType: '', // What type of phone are we setting up: e.g. \"RC_SOFTPHONE\", \"LEGACY_SOFTPHONE\", \"RC_PHONE\" (for RC office ext)// Comes in at the account-level - will get set to true if this interface should be in tcpa-safe-mode only.\n            allowMultiSocket: false, // Determines whether agent can open a new socket under the same login\n          },\n\n          // stat objects\n          agentStats: [],\n          agentDailyStats: {},\n          campaignStats: {},\n          queueStats: {},\n          chatQueueStats: {},\n\n          // current agent settings\n          agentSettings: {\n            accountId: null, // account agent belongs to\n            agentId: 0,\n            agentPassword: '', // agent Password\n            agentType: 'AGENT', // AGENT | SUPERVISOR\n            altDefaultLoginDest: '',\n            availableAgentStates: [],\n            callerIds: [],\n            callState: null, // display the current state of the call\n            corporateDirectory: false,\n            currentState: 'OFFLINE', // Agent system/base state\n            currentStateLabel: '', // Agent aux state label\n            defaultLoginDest: '',\n            dialDest: '', // Destination agent is logged in with for offhook session, set on configure response, if multi values in format \"xxxx|,,xxxx\"\n            email: '',\n            externalAgentId: '',\n            firstName: '',\n            guid: '', // unique key generated on login, used for accessing spring endpoints\n            isLoggedIn: false, // agent is logged in to the platform\n            isOffhook: false, // track whether or not the agent has an active offhook session\n            isMonitoring: false, // track whether or not the offhook session is for monitoring\n            initLoginState: 'AVAILABLE', // state agent is placed in on successful login\n            initLoginStateLabel: 'Available', // state label for agent on successful login\n            isOutboundPrepay: false, // determines if agent is a prepay agent\n            lastName: '',\n            loginDTS: null, // date and time of the final login phase (IQ)\n            loginType: 'NO-SELECTION', // Could be INBOUND | OUTBOUND | BLENDED | NO-SELECTION, set on login response\n            maxBreakTime: -1,\n            maxLunchTime: -1,\n            onCall: false, // true if agent is on an active call\n            onManualOutdial: false, // true if agent is on a manual outdial call\n            outboundManualDefaultRingtime: '30',\n            pendingCallbacks: [],\n            pendingDialGroupChange: 0, // Set to Dial Group Id if we are waiting to change dial groups until agent ends call\n            phoneLoginPin: '',\n            realAgentType: 'AGENT',\n            supervisors: [], // Used for agent chat\n            totalCalls: 0, // Call counter that is incremented every time a new session is received\n            transferNumber: '', // May be pre-populated by an external interface, if so, the transfer functionality uses it\n            updateDGFromAdminUI: false, // if pending Dial Group change came from AdminUI, set to true (only used if request is pending)\n            updateLoginMode: false, // gets set to true when doing an update login (for events control)\n            username: '', // Agent's username\n            wasMonitoring: false, // used to track if the last call was a monitoring call\n          },\n\n          // current agent permissions\n          agentPermissions: {\n            allowBlended: true, // Controls whether or not the agent can log into both inbound queues and an outbound dialgroup\n            allowCallControl: true, // Set from the the login response packet\n            allowChat: false, // Controls whether or not the agent has the option to open the Chat Queue Manager\n            allowCrossQueueRequeue: false, // Controls whether or not the agent can requeue to a different queue group\n            allowInbound: true, // Controls whether or not the agent can log into an inbound queue\n            allowLeadInserts: false, // Controls whether or not the agents can insert leads\n            allowLeadSearch: false, // Controlled by the dial-group allow_lead_search setting. Enables or disables the lead search\n            allowLoginControl: true, // Controls whether or not the agent can log in\n            allowLoginUpdates: true, // Controls whether or not the agent can update their login\n            allowManualCalls: true, // Controls whether or not the agents have the option to make a manual outbound call\n            allowManualPass: true, // Controls whether or not the agent has the option to make a manual pass on a lead\n            allowManualIntlCalls: false, // Controls whether or not the agent has the option to make international manual outbound calls\n            allowManualOutboundGates: false, // Controls whether or not the agent has the option to select queues to convert manual outbound calls to\n            allowOffHook: true, // Controls whether or not the agents can go offhook\n            allowOutbound: true, // Controls whether or not the agent can log into an outdial group\n            allowPreviewLeadFilters: false, // Controlled by the dial-group allow_preview_lead_filters setting. Enables or disables the filters on the preview style forms\n            allowLeadUpdatesByCampaign: {}, // For each campaign ID, store whether leads can be updated\n            disableSupervisorMonitoring: true, // Controls whether or not a supervisor can view agent stats\n            progressiveEnabled: false, // Preview dial feature that enables auto-calls from the preview window.\n            requireFetchedLeadsCalled: false, // Controlled by the dial-group require_fetched_leads_called setting. Enables or disables the requirement to only fetch new leads when current leads are called or expired. ONly for Preview or TCPA-SAFE.\n            showLeadHistory: true, // Controls whether or not the agents can view lead history\n            enableTaskMode: false, // Controls whether or not the agent has access to Digital task mode\n            enableFolderMode: false, // Controls whether or not the agent has access to Digital folder mode\n          },\n\n          // chat\n          chatSettings: {\n            availableChatQueues: [], // List of all chat queues agent has access to, set on login\n            availableChatRooms: [], // List of all chat rooms agent has access to, set on login\n            chatQueues: [], // Array of chat queues agent is signed into\n            alias: '', // Chat alias, on-login this is the UID, but is changed if the user changes it\n          },\n\n          // connection objects\n          connectionSettings: {\n            hashCode: '', // used specifically for reconnects\n            reconnect: false, // variable tracks the type of login, on init it's false...once connected it's set to true\n            isMultiSocket: false,\n          },\n\n          // inbound settings\n          inboundSettings: {\n            availableQueues: [], // array of queues agent has access to, set on login\n            availableSkillProfiles: [], // array of skill profiles agent has access to, set on login\n            queues: [], // array of queues agent is signed into, set on config response\n            skillProfile: {}, // The skill profile the agent is signed into, set on config response\n          },\n\n          // outbound settings\n          outboundSettings: {\n            availableCampaigns: [], // array of campaigns agent has access to, set on login\n            availableOutdialGroups: [], // array of dial groups agent has access to, set on login\n            insertCampaigns: [],\n            defaultDialGroup: 0,\n            outdialGroup: {}, // dial group agent is signed into\n            previewDialLeads: [], // list of leads returned from preview dial request\n            tcpaSafeLeads: [], // list of leads returned from tcpa safe request\n            campaignDispositions: [], // list of campaign dispositions for specific campaign\n          },\n\n          scriptSettings: {\n            availableScripts: [], // array of all scripts associated with any campaigns or queues agent is logged into\n            loadedScripts: {}, // stores script data by script id e.g. {1:{}, 32:{}}\n          },\n\n          softphoneSettings: {\n            webRtc: null, // stores the CFSimpleSip object\n            isRegistered: false, // whether or not the softphone is currently registered\n            muteActive: false, // whether or not the softphone is muted\n            registerPending: null, // timeout to trigger no register response\n            maintainOH: false, // based on the configurable agent setting to keep offhook session after ending call\n            autoStartOH: false, // determines whether or not to start an offhook session automatically after softphone registrar reconnect\n            wsServers: [], // current sip server domain + user credentials, set as array for SIP.js ua object\n            sipInfo: [], // array of sip server domains + user credentials for softphone registration, retrieved from engage-auth\n            uri: '', // username + @ + domain\n            displayName: '', // username - Used to register softphone with freeswitch (legacy)\n            authorizationUser: '', // username - Used to register softphone with freeswitch (legacy)\n            sipPassword: '', // password for sip softphone registration\n            sipDialDest: '', // dialDest used for softphone connection\n            attemptingSoftphoneReconnect: false, // set to true when attempting to rotate softphone registrar and reconnect\n            // manualSoftphoneReconnect: false     // set to true when agent triggered registrar rotation\n          },\n\n          // Filtered Directory\n          filteredDirectory: {\n            rcAccountId: '',\n            records: [],\n          },\n\n          extensionPresenceResponse: [],\n\n          // Public methods\n          incrementTotalCalls() {\n            this.agentSettings.totalCalls = this.agentSettings.totalCalls + 1;\n          },\n        };\n      }\n\n      return {\n        // Get the Singleton instance if one exists\n        // or create one if it doesn't\n        getInstance() {\n          if (!instance) {\n            instance = init();\n          }\n          return instance;\n        },\n\n        resetInstance() {\n          instance = null;\n        },\n      };\n    })();\n\n    var LocalStorageService = function(name) {\n      if (!window.localStorage) {\n        console.log('Browser does not support HTML5 Web Storage');\n      }\n      this.prefix = `${name}:`;\n    };\n    LocalStorageService.prototype.save = function(key, value) {\n      if (!key || !value) {\n        console.log('Missing parameters key or value on add');\n        return false;\n      }\n      localStorage.setItem(this.prefix + key, JSON.stringify(value));\n    };\n    LocalStorageService.prototype.get = function(key) {\n      if (!key || !localStorage.getItem(this.prefix + key)) {\n        console.log('Missing parameter key on retrieve');\n        return false;\n      }\n      return localStorage.getItem(this.prefix + key);\n    };\n\n    LocalStorageService.prototype.remove = function(key) {\n      if (!key || !localStorage.getItem(this.prefix + key)) {\n        console.log('Missing parameter key on remove');\n        return false;\n      }\n      localStorage.removeItem(this.prefix + key);\n    };\n    // --------------------------\n    // BroadcastChannelHelper.js\n    // --------------------------\n    var broadcastChannelHelper = {\n      // Generate handlers to request / response BroadcastChannels\n      //\n      requestChannel: null,\n      responseChannel: null,\n      currentCallMessageId: null,\n      currentCallRequestCallback: null,\n\n      // Registers the request / response channels\n      //\n      init() {\n        if (this.requestChannel != null) {\n          return;\n        }\n\n        const self = this;\n        this.requestChannel = new BroadcastChannel('ev-multisocket-request');\n        this.responseChannel = new BroadcastChannel('ev-multisocket-response');\n\n        // Listen for requests coming from the requestChannel\n        //\n        this.requestChannel.onmessage = function(e) {\n          const type = e.data.type;\n          const messageId = e.data.messageId;\n\n          switch (type) {\n            case 'currentCall':\n              self._sendCurrentCall(messageId);\n              break;\n          }\n        };\n\n        // Listen for requests coming from the responseChannel\n        //\n        this.responseChannel.onmessage = function(e) {\n          const type = e.data.type;\n\n          switch (type) {\n            case 'currentCall':\n              self._processCurrentCallResponse(e.data.data, e.data.messageId);\n          }\n        };\n      },\n\n      destroy() {\n        if (this.requestChannel == null) {\n          return;\n        }\n\n        this.requestChannel.onmessage = null;\n        this.responseChannel.onmessage = null;\n\n        this.requestChannel.close();\n        this.responseChannel.close();\n\n        this.requestChannel = null;\n        this.responseChannel = null;\n      },\n\n      // ----------------------------------------------------\n      // Current Call, Request & Response\n      // ----------------------------------------------------\n\n      // When a new tab opens and needs to get the current call, it can do so with this method.  Passing\n      // a callback function to response with (could be a Promise if we are using them in SDK). Once\n      // a response is retrieved, it will be handled in the \"processCurrentCall\" method, and returned\n      // back to the original callback function\n      //\n      requestCurrentCall(fn) {\n        this.currentCallMessageId = Math.random();\n        this.currentCallRequestCallback = fn;\n\n        this.requestChannel.postMessage({\n          type: 'currentCall',\n          messageId: this.currentCallMessageId,\n        });\n      },\n\n      // Any instance that has knowledge of the current call can respond to the request\n      //\n      _sendCurrentCall(messageId) {\n        if (UIModel.getInstance().currentCall != null) {\n          const obj = {\n            type: 'currentCall',\n            messageId,\n            data: UIModel.getInstance().currentCall,\n          };\n\n          this.responseChannel.postMessage(obj);\n        }\n      },\n\n      // When a current call response is received, every tab will try to process it.  Only the original\n      // requestor will be able to process it successfully.\n      //\n      _processCurrentCallResponse(data, messageId) {\n        if (this.currentCallMessageId === messageId) {\n          // Set the current call model\n          UIModel.getInstance().currentCall = data;\n\n          // Alert the original method that our data is now available.\n          if (this.currentCallRequestCallback != null) {\n            this.currentCallRequestCallback(data);\n          }\n\n          // Null out properties - this ensure subsequent responses from other tabs will be ignored.\n          this.currentCallMessageId = null;\n          this.currentCallRequestCallback = null;\n        }\n      },\n    };\n\n    function HttpService(apiBase) {\n      this.XMLHttpRequest = window.XMLHttpRequest;\n      this.encodeURIComponent = window.encodeURIComponent;\n      this.apiBase = apiBase || 'http://localhost:81';\n\n      const that = this;\n\n      /**\n       * Makes a GET request to Engage Auth.\n       *\n       * @param {string} path - Relative path to append to apiUrl.\n       * @param {Object} config - Object describing different properties of the request.\n       * @returns {Promise} Promise that represents status of the request. Resolves if server responds with 200 status code, and is rejected otherwise.\n       */\n      this.httpGet = function(path, config) {\n        return new Promise(function(resolve, reject) {\n          const req = new that.XMLHttpRequest();\n          let queryParams = '';\n          if (config.queryParams) {\n            queryParams = `?${_getUriEncodedParams(config.queryParams)}`;\n          }\n          req.open('GET', that.apiBase + path + queryParams);\n          _addHeaders(config, req);\n          _addCompletionListeners(resolve, reject, req);\n          req.send();\n        });\n      };\n\n      /**\n       * Makes a GET request to Engage Auth.\n       *\n       * @param {string} path - Relative path to append to apiUrl.\n       * @param {Object} config - Object describing different properties of the request.\n       * @returns {Promise} Promise that represents status of the request. Resolves if server responds with 200 status code, and is rejected otherwise.\n       */\n      this.httpPost = function(path, config) {\n        return new Promise(function(resolve, reject) {\n          const req = new that.XMLHttpRequest();\n          let queryParams = '';\n          if (config.queryParams) {\n            queryParams = `?${_getUriEncodedParams(config.queryParams)}`;\n          }\n          req.open('POST', that.apiBase + path + queryParams);\n          _addHeaders(config, req);\n          _addCompletionListeners(resolve, reject, req);\n          req.send(_getUriEncodedBody(config));\n        });\n      };\n\n      /**\n       * Utility method used to check if an argument is actually an object.\n       *\n       * @param {*} obj\n       */\n      function _isObj(obj) {\n        return typeof obj === 'object' && obj !== null;\n      }\n\n      /**\n       * Adds headers to XMLHttpRequest based on configuration object.\n       *\n       * @param {Object} config - Config object passed to HttpService methods.\n       * @param {XMLHttpRequest} req - Instance of XMLHttpRequest that needs to be configured.\n       */\n      function _addHeaders(config, req) {\n        if (!_isObj(config)) {\n          return;\n        }\n\n        const headers = config.headers;\n\n        if (!_isObj(headers)) {\n          return;\n        }\n\n        for (const key in headers) {\n          req.setRequestHeader(key, headers[key]);\n        }\n      }\n\n      /**\n       * Configures an XMLHttpRequest object to properly resolve/reject a promise, depending on the outcome of the request.\n       *\n       * @param {Function} resolve - Resolve callback function from a promise. Invoked if the request completed successfully.\n       * @param {Function} reject - Reject callback function from a promise. Invoked if the request failed.\n       * @param {XMLHttpRequest} req - Instance of XMLHttpRequest that will be configured.\n       */\n      function _addCompletionListeners(resolve, reject, req) {\n        req.addEventListener('error', function(e) {\n          reject(e);\n        });\n        req.addEventListener('timeout', function() {\n          reject(new Error('request timeout'));\n        });\n        req.addEventListener('load', function() {\n          if (this.status !== 200) {\n            reject({\n              status: this.status,\n              response: this.responseText,\n            });\n          } else {\n            resolve({\n              status: this.status,\n              response: this.responseText,\n            });\n          }\n        });\n      }\n\n      /**\n       * Takes a config object and serializes/URI encodes the contents of the body property. If the \"Content-Type\" header is set\n       * to \"application/json\", it encodes the payload as JSON. Otherwise, we assume that the payload should be x-www-form-urlencoded.\n       */\n      function _getUriEncodedBody(config) {\n        const contentType =\n          config && config.headers && config.headers['Content-Type'];\n        let body = (config && config.body) || '';\n\n        if (contentType === 'application/json') {\n          body = JSON.stringify(body);\n        } else if (_isObj(body)) {\n          body = _getUriEncodedParams(body);\n        }\n\n        return body;\n      }\n\n      function _getUriEncodedParams(params) {\n        if (!_isObj(params)) {\n          return;\n        }\n\n        return Object.keys(params)\n          .map(function(key) {\n            return `${encodeURIComponent(\n              key,\n            )}=${encodeURIComponent(params[key])}`;\n          })\n          .join('&');\n      }\n    }\n\n    function NewCallUtils(instance, data) {\n      this.instance = instance;\n      this.data = data;\n\n      const that = this;\n\n      this.setupAddSessionCallback = function() {\n        const sessionUii = utils.getText(data.ui_notification, 'uii');\n        const sessionId = utils.getText(data.ui_notification, 'session_id');\n        const call = UIModel.getInstance().currentCall;\n\n        if (call.uii === sessionUii) {\n          // we already have a new call packet for this session\n          _delayedAddSessionCallback(that.instance, that.data);\n        } else {\n          // uii mismatch, but call has been dispositioned\n          UIModel.getInstance().pendingNewCallSessions[sessionUii] =\n            UIModel.getInstance().pendingNewCallSessions[sessionUii] || {};\n          UIModel.getInstance().pendingNewCallSessions[sessionUii][\n            sessionId\n          ] = that;\n        }\n      };\n\n      this.processSessionsForCall = function() {\n        const uii = UIModel.getInstance().currentCall.uii;\n        const delayedSessions = UIModel.getInstance().pendingNewCallSessions[\n          uii\n        ];\n\n        if (delayedSessions && Object.keys(delayedSessions).length > 0) {\n          // we have delayed sessions to process\n          for (const sessionId in delayedSessions) {\n            if (delayedSessions.hasOwnProperty(sessionId)) {\n              const session = delayedSessions[sessionId];\n              _delayedAddSessionCallback(session.instance, session.data);\n            } else {\n              console.error(\n                `error processing sessions for uii: ${uii} session: ${sessionId}`,\n              );\n            }\n          }\n\n          delete UIModel.getInstance().pendingNewCallSessions[uii];\n        }\n      };\n\n      function _delayedAddSessionCallback(instance, data) {\n        const addSessionNotif = new AddSessionNotification();\n        const addResponse = addSessionNotif.processResponse(data);\n        utils.fireCallback(instance, CALLBACK_TYPES.ADD_SESSION, addResponse);\n      }\n    }\n\n    var utils = {\n      logMessage(logLevel, message, data) {\n        const instance = UIModel.getInstance().libraryInstance;\n        if (instance._db) {\n          try {\n            const transaction = instance._db.transaction(\n              ['logger'],\n              'readwrite',\n            );\n            const store = transaction.objectStore('logger');\n\n            const record = {\n              logLevel,\n              message,\n              dts: new Date(),\n              data,\n            };\n\n            const request = store.add(record);\n          } catch (err) {\n            console.error(`Error adding log message: ${err}`);\n          }\n        } else {\n          // console.log(\"AgentLibrary: indexedDb not available\");\n        }\n      },\n\n      sendMessage(instance, msg) {\n        const msgObj = JSON.parse(msg);\n\n        if (instance.socket && instance.socket.readyState === 1) {\n          // add message id to request map, then send message\n          const type = msgObj.ui_request['@type'];\n          const destination = msgObj.ui_request['@destination'];\n          const message = `Sending ${type} request message to ${destination}`;\n          instance._requests.push({\n            id: msgObj.ui_request['@message_id'],\n            type: msgObj.ui_request['@type'],\n            msg: msgObj.ui_request,\n          });\n\n          // keep rolling window of latest 1000 requests\n          if (instance._requests.length > 1000) {\n            instance._requests.shift();\n          }\n\n          instance.socket.send(msg);\n\n          if (type === 'STATS') {\n            utils.logMessage(LOG_LEVELS.STATS, message, msgObj);\n          } else {\n            utils.logMessage(LOG_LEVELS.INFO, message, msgObj);\n          }\n        } else {\n          // add message to queue if socket is not open.\n          instance._queuedMsgs.push({ dts: new Date(), msg });\n        }\n      },\n\n      processResponse(instance, response) {\n        const type = response.ui_response['@type'];\n        const messageId = response.ui_response['@message_id'];\n        const dest =\n          messageId === '' || !messageId ? 'IS' : messageId.slice(0, 2);\n        const message = `Received ${type.toUpperCase()} response message from ${dest}`;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n\n        // Send generic on message response\n        utils.fireCallback(instance, CALLBACK_TYPES.ON_MESSAGE, response);\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.AGENT_STATE:\n            if (UIModel.getInstance().agentStateRequest === null) {\n              UIModel.getInstance().agentStateRequest = new AgentStateRequest(\n                response.ui_response.current_state['#text'],\n                response.ui_response.agent_aux_state['#text'],\n              );\n            }\n            var stateChangeResponse = UIModel.getInstance().agentStateRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.AGENT_STATE,\n              stateChangeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.BARGE_IN:\n            var resp = UIModel.getInstance().bargeInRequest.processResponse(\n              response,\n            );\n            var responseTo = response.ui_response['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            if (request) {\n              // found corresponding request, fire registered callback for type\n              const audioState = request.msg.audio_state['#text'];\n              if (audioState === 'MUTE') {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.SILENT_MONITOR,\n                  resp,\n                );\n              } else if (audioState === 'COACHING') {\n                utils.fireCallback(instance, CALLBACK_TYPES.COACH_CALL, resp);\n              } else {\n                utils.fireCallback(instance, CALLBACK_TYPES.BARGE_IN, resp);\n              }\n            } else {\n              // no corresponding request, just fire FULL audio type BARGE-IN callback\n              utils.fireCallback(instance, CALLBACK_TYPES.BARGE_IN, resp);\n            }\n            break;\n          case MESSAGE_TYPES.CAMPAIGN_DISPOSITIONS:\n            var campaignDispsResposne = UIModel.getInstance().campaignDispositionsRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CAMPAIGN_DISPOSITIONS,\n              campaignDispsResposne,\n            );\n            break;\n          case MESSAGE_TYPES.CALL_NOTES:\n            var callNotes = UIModel.getInstance().callNotesRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.CALL_NOTES, callNotes);\n            break;\n          case MESSAGE_TYPES.CALLBACK_PENDING:\n            var pendingCallbacks = UIModel.getInstance().callbacksPendingRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CALLBACK_PENDING,\n              pendingCallbacks,\n            );\n            break;\n          case MESSAGE_TYPES.HOLD:\n            var holdRequest;\n            if (UIModel.getInstance().holdRequest === null) {\n              holdRequest = new HoldRequest();\n            } else {\n              holdRequest = UIModel.getInstance().holdRequest;\n            }\n            var hold = holdRequest.processResponse(response);\n            utils.fireCallback(instance, CALLBACK_TYPES.HOLD, hold);\n            break;\n          case MESSAGE_TYPES.LEAD_HISTORY:\n            var history = UIModel.getInstance().leadHistoryRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_HISTORY, history);\n            break;\n          case MESSAGE_TYPES.LEAD_INSERT:\n            var insert = UIModel.getInstance().leadInsertRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_INSERT, insert);\n            break;\n          case MESSAGE_TYPES.LEAD_UPDATE:\n            var update = UIModel.getInstance().leadUpdateRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_UPDATE, update);\n            break;\n          case MESSAGE_TYPES.LOGIN_PHASE_1:\n            var loginPhase1Response = UIModel.getInstance().loginPhase1Request.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOGIN_PHASE_1,\n              loginPhase1Response,\n            );\n            break;\n          case MESSAGE_TYPES.LOGIN:\n            var loginResponse = UIModel.getInstance().loginRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LOGIN, loginResponse);\n            break;\n          case MESSAGE_TYPES.OFFHOOK_INIT:\n            var offhook = new OffhookInitRequest();\n            var initResponse = offhook.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.OFFHOOK_INIT,\n              initResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PAUSE_RECORD:\n            var pauseRequest;\n            if (UIModel.getInstance().pauseRecordRequest === null) {\n              pauseRequest = new PauseRecordRequest();\n            } else {\n              pauseRequest = UIModel.getInstance().pauseRecordRequest;\n            }\n            var pauseRec = pauseRequest.processResponse(response);\n            utils.fireCallback(instance, CALLBACK_TYPES.PAUSE_RECORD, pauseRec);\n            break;\n          case MESSAGE_TYPES.RECORD:\n            var record = UIModel.getInstance().recordRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.RECORD, record);\n            break;\n          case MESSAGE_TYPES.REQUEUE:\n            var requeue = UIModel.getInstance().requeueRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.REQUEUE, requeue);\n            break;\n          case MESSAGE_TYPES.SUPERVISOR_LIST:\n            var supervisorList = UIModel.getInstance().supervisorListRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.SUPERVISOR_LIST,\n              supervisorList,\n            );\n            break;\n          case MESSAGE_TYPES.SCRIPT_CONFIG:\n            var script = UIModel.getInstance().scriptConfigRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.SCRIPT_CONFIG, script);\n            break;\n          case MESSAGE_TYPES.XFER_COLD:\n            var coldXfer = UIModel.getInstance().coldXferRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.XFER_COLD, coldXfer);\n            break;\n          case MESSAGE_TYPES.XFER_WARM:\n            var warmXfer = UIModel.getInstance().warmXferRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.XFER_WARM, warmXfer);\n            break;\n          case MESSAGE_TYPES.XFER_WARM_CANCEL:\n            var warmXferCancel = UIModel.getInstance().warmXferCancelRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.XFER_WARM_CANCEL,\n              warmXferCancel,\n            );\n            break;\n          case MESSAGE_TYPES.ACK:\n            var ack = UIModel.getInstance().ackRequest.processResponse(\n              response,\n            );\n            var responseTo = response.ui_response['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            ack.uii = request.msg.uii && request.msg.uii['#text'];\n            utils.fireCallback(instance, CALLBACK_TYPES.ACK, ack);\n            break;\n          case MESSAGE_TYPES.CHAT_LIST:\n            var chatList = new ChatListRequest();\n            var chatListResponse = chatList.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_LIST,\n              chatListResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_STATE:\n            var chatState = new ChatStateRequest();\n            var chatStateResponse = chatState.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_STATE,\n              chatStateResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_TRANSFER_LIST:\n            var agentList = new DirectAgentTransferList();\n            var agentListResponse = agentList.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n              agentListResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_TRANSFER:\n            var agentXfer = new DirectAgentTransfer();\n            var agentXferResponse = agentXfer.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER,\n              agentXferResponse,\n            );\n            break;\n        }\n      },\n\n      processNotification(instance, data) {\n        var type = data.ui_notification['@type'];\n        const messageId = data.ui_notification['@message_id'];\n        const dest = messageId === '' ? 'IS' : messageId.slice(0, 2);\n        const message = `Received ${type.toUpperCase()} notification message from ${dest}`;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, data);\n\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.ADD_SESSION:\n            new NewCallUtils(instance, data).setupAddSessionCallback();\n            break;\n          case MESSAGE_TYPES.DIAL_GROUP_CHANGE:\n            var dgChangeNotif = new DialGroupChangeNotification();\n            var changeResponse = dgChangeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIAL_GROUP_CHANGE,\n              changeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIAL_GROUP_CHANGE_PENDING:\n            var dgChangePendNotif = new DialGroupChangePendingNotification();\n            var pendResponse = dgChangePendNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIAL_GROUP_CHANGE_PENDING,\n              pendResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DROP_SESSION:\n            var dropSesNotif = new DropSessionNotification(instance);\n            var dropSesResponse = dropSesNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DROP_SESSION,\n              dropSesResponse,\n            );\n            break;\n          case MESSAGE_TYPES.EARLY_UII:\n            var earlyUiiNotif = new EarlyUiiNotification(instance);\n            var earlyUiiResponse = earlyUiiNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.EARLY_UII,\n              earlyUiiResponse,\n            );\n            break;\n          case MESSAGE_TYPES.END_CALL:\n            var endCallNotif = new EndCallNotification(instance);\n            var endCallResponse = endCallNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.END_CALL,\n              endCallResponse,\n            );\n            break;\n          case MESSAGE_TYPES.GATES_CHANGE:\n            var gateChangeNotif = new GatesChangeNotification();\n            var gateChangeResponse = gateChangeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.GATES_CHANGE,\n              gateChangeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.GENERIC:\n            var genericNotif = new GenericNotification();\n            var generic = genericNotif.processResponse(data);\n            var responseTo = data.ui_notification['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            if (request) {\n              // found corresponding request, fire registered callback for type\n              var type = request.type;\n              const callbackFnName = utils.findCallbackBasedOnMessageType(type);\n\n              if (callbackFnName) {\n                if (type === MESSAGE_TYPES.CALLBACK_CANCEL) {\n                  generic.leadId = request.msg.lead_id['#text'];\n                }\n                utils.fireCallback(instance, callbackFnName, generic);\n              } else {\n                // no registered callback, fallback to generic notification\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.GENERIC_NOTIFICATION,\n                  generic,\n                );\n              }\n            } else {\n              if (generic.messageCode === '001') {\n                // caller hangup, stop pinging call\n                if (UIModel.getInstance().pingIntervalId) {\n                  clearInterval(UIModel.getInstance().pingIntervalId);\n                }\n              }\n\n              // no corresponding request, just fire generic notification callback\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.GENERIC_NOTIFICATION,\n                generic,\n              );\n            }\n            break;\n          case MESSAGE_TYPES.NEW_CALL:\n            var newCallNotif = new NewCallNotification();\n            var newCallResponse = newCallNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.NEW_CALL,\n              newCallResponse,\n            );\n            new NewCallUtils(instance, data).processSessionsForCall();\n\n            break;\n          case MESSAGE_TYPES.OFFHOOK_TERM:\n            if (UIModel.getInstance().offhookTermRequest === null) {\n              // offhook term initiated by IQ\n              UIModel.getInstance().offhookTermRequest = new OffhookTermRequest();\n            }\n            var termResponse = UIModel.getInstance().offhookTermRequest.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.OFFHOOK_TERM,\n              termResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PREVIEW_LEAD_STATE:\n            var leadStateNotif = new PreviewLeadStateNotification();\n            var leadStateResponse = leadStateNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PREVIEW_LEAD_STATE,\n              leadStateResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PENDING_DISP:\n            var pendingDispNotif = new PendingDispNotification();\n            var pendingDispResponse = pendingDispNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PENDING_DISP,\n              pendingDispResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PENDING_CHAT_DISP:\n            var pendingChatDispNotif = new PendingChatDispNotification();\n            var pendingChatDispResponse = pendingChatDispNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PENDING_CHAT_DISP,\n              pendingChatDispResponse,\n            );\n            break;\n          case MESSAGE_TYPES.REVERSE_MATCH:\n            var reverseMatchNotif = new ReverseMatchNotification();\n            var reverseMatchResponse = reverseMatchNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.REVERSE_MATCH,\n              reverseMatchResponse,\n            );\n            break;\n          case MESSAGE_TYPES.TCPA_SAFE_LEAD_STATE:\n            var leadStateTcpaNotif = new TcpaSafeLeadStateNotification();\n            var leadStateTcpaResponse = leadStateTcpaNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.TCPA_SAFE_LEAD_STATE,\n              leadStateTcpaResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_ACTIVE:\n            var activeNotif = new ChatActiveNotification();\n            var activeResponse = activeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ACTIVE,\n              activeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_INACTIVE:\n            var inactiveNotif = new ChatInactiveNotification();\n            var inactiveResponse = inactiveNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_INACTIVE,\n              inactiveResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_CLIENT_RECONNECT:\n            var reconnectNotif = new ChatClientReconnectNotification();\n            var reconnectResponse = reconnectNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_CLIENT_RECONNECT,\n              reconnectResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_PRESENTED:\n            var presentedNotif = new ChatPresentedNotification();\n            var presentedResponse = presentedNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_PRESENTED,\n              presentedResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_TYPING:\n            var typingNotif = new ChatTypingNotification();\n            var typingResponse = typingNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_TYPING,\n              typingResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_NEW:\n            var newChatNotif = new NewChatNotification();\n            var newChatResponse = newChatNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_NEW,\n              newChatResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_MESSAGE:\n            var chatMessage = new ChatMessageRequest();\n            var chatMessageResponse = chatMessage.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_MESSAGE,\n              chatMessageResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_CANCELLED:\n            var chatCancelled = new ChatCancelledNotification();\n            var chatCancelledResponse = chatCancelled.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_CANCELLED,\n              chatCancelledResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_ADD_SESSION:\n            var addChatSession = new AddChatSessionNotification();\n            var addChatSessionResponse = addChatSession.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ADD_SESSION,\n              addChatSessionResponse,\n            );\n            break;\n          case MESSAGE_TYPES.STOP_MONITOR_CHAT:\n            var stopChatMonitor = new StopMonitorChatRequest();\n            var stopChatMonitorResponse = stopChatMonitor.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_STOP_MONITOR,\n              stopChatMonitorResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_ROUTE:\n            var directAgentTransfer = new DirectAgentTransferNotification();\n            var directAgentTransferResponse = directAgentTransfer.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_NOTIF,\n              directAgentTransferResponse,\n            );\n            break;\n          case MESSAGE_TYPES.AGENT_DEBUG_EMAIL:\n            var emailNotif = new AdminDebugEmailNotification();\n            var emailNotifResp = emailNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.AGENT_DEBUG_EMAIL_NOTIF,\n              emailNotifResp,\n            );\n            break;\n          case MESSAGE_TYPES.LOGOUT:\n            var logoutNotification = new LogoutRequest();\n            var logoutNotifResponse = logoutNotification.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOGOUT,\n              logoutNotifResponse,\n            );\n            var model = UIModel.getInstance();\n            model.dataStore.remove('agent_id'); // remove agent_id and hash_code from local storage\n            model.dataStore.remove('hash_code');\n            var instance = model.libraryInstance;\n            model.agentSettings.isLoggedIn = false;\n            instance.closeSocket();\n            break;\n          case MESSAGE_TYPES.MONITOR_CHAT:\n            // TODO: do this\n\n            break;\n          case MESSAGE_TYPES.LEAVE_CHAT:\n            // TODO: do this\n\n            break;\n        }\n      },\n\n      processDialerResponse(instance, response) {\n        const type = response.dialer_request['@type'];\n        const messageId = response.dialer_request['@message_id'];\n        const dest = messageId === '' ? 'IS' : messageId.slice(0, 2);\n        const message = `Received ${type.toUpperCase()} dialer response message from ${dest}`;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n\n        // Send generic on message response\n        utils.fireCallback(instance, CALLBACK_TYPES.ON_MESSAGE, response);\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.PREVIEW_DIAL_ID:\n            var pdRequest = new PreviewDialRequest();\n            var dialResponse = pdRequest.processResponse(response);\n            if (dialResponse.action.toUpperCase() === 'SEARCH') {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.LEAD_SEARCH,\n                dialResponse,\n              );\n            } else {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.PREVIEW_FETCH,\n                dialResponse,\n              );\n            }\n            break;\n          case MESSAGE_TYPES.TCPA_SAFE_ID:\n            var tcpaRequest = new TcpaSafeRequest();\n            var tcpaResponse = tcpaRequest.processResponse(response);\n            if (tcpaResponse.action.toUpperCase() === 'SEARCH') {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.SAFE_MODE_SEARCH,\n                tcpaResponse,\n              );\n            } else {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.SAFE_MODE_FETCH,\n                tcpaResponse,\n              );\n            }\n            break;\n        }\n      },\n\n      processRequest(instance, message) {\n        const type = message.ui_request['@type'];\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.CHAT_SEND:\n            var chatSendRequest = new ChatSendRequest();\n            var chatSendResponse = chatSendRequest.processResponse(message);\n            utils.fireCallback(instance, CALLBACK_TYPES.CHAT, chatSendResponse);\n            break;\n          case MESSAGE_TYPES.CHAT_ROOM_STATE:\n            var chatRoomStateRequest = new ChatRoomStateRequest();\n            var chatRoomStateResponse = chatRoomStateRequest.processResponse(\n              message,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ROOM_STATE,\n              chatRoomStateResponse,\n            );\n            break;\n        }\n      },\n\n      processStats(instance, data) {\n        const type = data.ui_stats['@type'];\n        const message = `Received ${type.toUpperCase()} response message from IS`;\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.STATS_AGENT:\n            var agentStats = UIModel.getInstance().agentStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_AGENT,\n              agentStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_AGENT_DAILY:\n            var agentDailyStats = UIModel.getInstance().agentDailyStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_AGENT_DAILY,\n              agentDailyStats,\n            );\n\n            // start daily stats interval timer, request update every second\n            if (UIModel.getInstance().agentDailyIntervalId === null) {\n              UIModel.getInstance().agentDailyIntervalId = setInterval(\n                utils.onAgentDailyStats,\n                1000,\n              );\n            }\n\n            break;\n          case MESSAGE_TYPES.STATS_CAMPAIGN:\n            var campaignStats = UIModel.getInstance().campaignStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_CAMPAIGN,\n              campaignStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_QUEUE:\n            var queueStats = UIModel.getInstance().queueStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_QUEUE,\n              queueStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_CHAT:\n            var chatStats = UIModel.getInstance().chatQueueStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_CHAT_QUEUE,\n              chatStats,\n            );\n            break;\n        }\n      },\n\n      /*\n       * Take the xml marked JSON, group and item property names and reformat to\n       * simple javascript object without the xml markers.\n       * Will work recursively down the tree on nested objects and arrays.\n       *\n       * example of acceptable response tree (groupProp = requeue_gates, itemProp = gate_group):\n       *   \"requeue_gates\": {\n       *       \"gate_group\": [\n       *           {\n       *               \"@gate_group_id\": \"4\",\n       *               \"@group_name\": \"Test Gate Group\",\n       *               \"gates\": {\n       *                   \"gate\": [\n       *                       {\n       *                           \"@gate_desc\": \"\",\n       *                           \"@gate_id\": \"10951\",\n       *                           \"@gate_name\": \"CD ACD Queue\"\n       *                       },\n       *                       {\n       *                           \"@gate_desc\": \"\",\n       *                           \"@gate_id\": \"11036\",\n       *                           \"@gate_name\": \"Xerox Test Gate\"\n       *                       }\n       *                   ]\n       *               },\n       *               \"skills\": {\n       *                   \"skill\": [\n       *                       {\n       *                           \"@skill_desc\": \"\",\n       *                           \"@skill_id\": \"322\",\n       *                           \"@skill_name\": \"English\"\n       *                       },\n       *                       {\n       *                           \"@skill_desc\": \"\",\n       *                           \"@skill_id\": \"323\",\n       *                           \"@skill_name\": \"Spanish\"\n       *                       }\n       *                   ]\n       *               }\n       *           },\n       *           {\n       *               \"@gate_group_id\": \"14292\",\n       *               \"@group_name\": \"New Test Group\",\n       *               \"gates\": {\n       *                   \"gate\": {\n       *                       \"@gate_desc\": \"\",\n       *                       \"@gate_id\": \"15535\",\n       *                       \"@gate_name\": \"New Test Gate\"\n       *                   }\n       *               },\n       *               \"skills\": {\n       *                   \"skill\": {\n       *                       \"@skill_desc\": \"\",\n       *                       \"@skill_id\": \"1658\",\n       *                       \"@skill_name\": \"new skill\"\n       *                   }\n       *               }\n       *           }\n       *       ]\n       *   }\n       *\n       *   OR\n       *\n       *   \"outdial_dispositions\": {\n       *       \"@type\": \"GATE\",\n       *       \"disposition\": [\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          },\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          }\n       *      ]\n       *   }\n       *\n       *   OR\n       *\n       *   \"outdial_dispositions\": {\n       *       \"@type\": \"GATE\",\n       *       \"disposition\": {\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          }\n       *      }\n       *   }\n       */\n\n      processResponseCollection(response, groupProp, itemProp, textName) {\n        textName = textName || 'text';\n\n        if (\n          response[groupProp] &&\n          typeof response[groupProp][itemProp] !== 'undefined'\n        ) {\n          const itemsRaw = response[groupProp][itemProp];\n          return this._processItems(itemsRaw, textName);\n        }\n        return [];\n      },\n\n      escapeSoftphoneUsername(str) {\n        return str && str.replace(/[@]/g, '_at_');\n      },\n\n      _processItems(itemsRaw, textName) {\n        const result = [];\n        if (typeof itemsRaw === 'undefined' || itemsRaw === null) {\n          return result;\n        }\n\n        if (!Array.isArray(itemsRaw)) {\n          itemsRaw = [itemsRaw];\n        }\n\n        for (let i = 0; i < itemsRaw.length; i++) {\n          result.push(this._processItem(itemsRaw[i], textName));\n        }\n\n        return result;\n      },\n\n      _processItem(itemRaw, textName) {\n        /*\n         * Be sure that the item we are processing is not a #text node only, where the \"texName\" is also \"text\". If this\n         * is the case, it means there's a default value that needs to get converted and isn't going to be mapped to a custom\n         * field.  Therefore, we treat it as just a single value, not an object.\n         */\n        if (\n          textName === 'text' &&\n          Object.keys(itemRaw).length === 1 &&\n          itemRaw['#text'] != null\n        ) {\n          return this._tryConvertValueToBoolean(itemRaw['#text']);\n        }\n\n        // Convert the raw item to a new item, with keys and values processed below\n        //\n        const item = {};\n        for (const key in itemRaw) {\n          let formattedKey = this._convertToFormattedKey(key, textName);\n\n          const value = itemRaw[key];\n\n          // If we aren't an object, set the value and continue to next key\n          if (typeof value !== 'object') {\n            item[formattedKey] = this._tryConvertValueToBoolean(value);\n            continue;\n          }\n\n          if (\n            (Array.isArray(value) && value.length === 0) ||\n            Object.keys(value).length === 0\n          ) {\n            // Empty property\n            item[formattedKey] = '';\n          } else if (Array.isArray(value) || Object.keys(value).length > 1) {\n            // Array or object with more than one key\n            formattedKey = this._convertKeyForCollection(formattedKey);\n            item[formattedKey] = this._processItems(value, textName);\n          } else if (\n            Object.keys(value).length === 1 &&\n            value['#text'] != null\n          ) {\n            // One property of type \"#text\"\n            item[formattedKey] = value['#text'];\n          } else {\n            // One property not with key \"#text\"\n            item[formattedKey] = this._processItems(\n              value[Object.keys(value)[0]],\n              'text',\n            );\n          }\n        }\n\n        return item;\n      },\n\n      _convertToFormattedKey(key, textName) {\n        let formattedKey;\n        if (key.match(/^#/)) {\n          // dealing with text property\n          formattedKey = textName;\n        } else {\n          // dealing with attribute\n          formattedKey = key.replace(/@/, ''); // remove leading '@'\n          formattedKey = formattedKey.replace(/_([a-z])/g, function(g) {\n            return g[1].toUpperCase();\n          }); // convert to camelCase\n        }\n\n        return formattedKey;\n      },\n\n      _convertKeyForCollection(formattedKey) {\n        if (formattedKey.substr(formattedKey.length - 1) !== 's') {\n          return `${formattedKey}s`;\n        }\n\n        return formattedKey;\n      },\n\n      _tryConvertValueToBoolean(value) {\n        if (value === null) {\n          return null;\n        }\n\n        // can't convert 0 | 1 to boolean since some are counters\n        if (value.toUpperCase() === 'TRUE') {\n          return true;\n        }\n        if (value.toUpperCase() === 'FALSE') {\n          return false;\n        }\n        return value;\n      },\n\n      fireCallback(instance, type, response) {\n        response = response || '';\n        if (\n          typeof type !== 'undefined' &&\n          typeof instance.callbacks[type] === 'function'\n        ) {\n          instance.callbacks[type].call(instance, response);\n        }\n      },\n\n      setCallback(instance, type, callback) {\n        if (typeof type !== 'undefined' && typeof callback !== 'undefined') {\n          instance.callbacks[type] = callback;\n        }\n      },\n\n      getMessageId() {\n        function s4() {\n          return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n        }\n\n        return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n      },\n\n      // check whether the given array of ids exist in the given array of objects\n      // if not available, remove the id\n      // returns the clean list of acceptable ids\n      checkExistingIds(objArray, idArray, idProperty) {\n        const availIds = [];\n        const removeIds = [];\n\n        // get list of available ids\n        for (let o = 0; o < objArray.length; o++) {\n          availIds.push(parseInt(objArray[o][idProperty], 10));\n        }\n\n        // go through selected ids and mark unfound ones for removal\n        for (let i = 0; i < idArray.length; i++) {\n          if (availIds.indexOf(parseInt(idArray[i], 10)) === -1) {\n            // selected id not found in available list, mark for removal\n            removeIds.push(parseInt(idArray[i], 10));\n          }\n        }\n\n        // remove marked ids\n        for (let r = idArray.length - 1; r >= 0; r--) {\n          if (removeIds.indexOf(parseInt(idArray[r], 10)) > -1) {\n            // remove\n            idArray.splice(r, 1);\n          }\n        }\n\n        return idArray;\n      },\n\n      // find an object by given id in an array of objects\n      findObjById(objArray, id, propName) {\n        for (let o = 0; o < objArray.length; o++) {\n          const obj = objArray[o];\n          if (obj[propName] === id) {\n            return obj;\n          }\n        }\n\n        return null;\n      },\n\n      // check whether agent dialDest is either a 10-digit number or valid sip\n      validateDest(dialDest) {\n        let isValid = false;\n        const isNum = /^\\d+$/.test(dialDest);\n        if (isNum && dialDest.length === 10) {\n          // is a 10-digit number\n          isValid = true;\n        } else if (\n          dialDest.slice(0, 4).toLowerCase() === 'sip:' &&\n          dialDest.indexOf('@') !== -1\n        ) {\n          // has sip prefix and '@'\n          isValid = true;\n        }\n\n        return isValid;\n      },\n\n      // pass in MESSAGE_TYPE string (e.g. \"CANCEL-CALLBACK\"),\n      // return corresponding CALLBACK_TYPE function name string (e.g. \"callbackCancelResponse\")\n      findCallbackBasedOnMessageType(messageType) {\n        let callbackFnName = '';\n        for (const key in MESSAGE_TYPES) {\n          if (MESSAGE_TYPES[key] === messageType) {\n            callbackFnName = CALLBACK_TYPES[key];\n          }\n        }\n        return callbackFnName;\n      },\n\n      // add message, detail, and status values to the formattedResponse\n      // returned from each request processResponse method\n      buildDefaultResponse(response) {\n        let message = '';\n        let detail = '';\n        let status = '';\n        let msg = '';\n        let det = '';\n        let stat = '';\n\n        // add message and detail if present\n        if (response.ui_response) {\n          msg = response.ui_response.message;\n          det = response.ui_response.detail;\n          stat = response.ui_response.status;\n        } else if (response.ui_notification) {\n          msg = response.ui_notification.message;\n          det = response.ui_notification.detail;\n          stat = response.ui_notification.status;\n        }\n\n        if (msg) {\n          message = msg['#text'] || '';\n        }\n        if (det) {\n          detail = det['#text'] || '';\n        }\n        if (stat) {\n          status = stat['#text'] || '';\n        }\n\n        return {\n          message,\n          detail,\n          status,\n        };\n      },\n\n      toString(val) {\n        if (val) {\n          return val.toString();\n        }\n        return '';\n      },\n\n      // safely check if property exists and return empty string\n      // instead of undefined if it doesn't exist\n      // convert \"TRUE\" | \"FALSE\" to boolean\n      getText(obj, prop) {\n        const o = obj[prop];\n        if (o && o['#text']) {\n          if (o['#text'].toUpperCase() === 'TRUE') {\n            return true;\n          }\n          if (o['#text'].toUpperCase() === 'FALSE') {\n            return false;\n          }\n          return o['#text'] || '';\n        }\n        return '';\n      },\n\n      // safely check if property exists and return empty string\n      // instead of undefined if it doesn't exist\n      // convert \"TRUE\" | \"FALSE\" to boolean\n      getAttribute(obj, prop) {\n        const o = obj[prop];\n        if (o && o[prop]) {\n          if (o[prop].toUpperCase() === 'TRUE') {\n            return true;\n          }\n          if (o[prop].toUpperCase() === 'FALSE') {\n            return false;\n          }\n          return o[prop] || '';\n        }\n        return '';\n      },\n\n      // Parses a string of key value pairs and returns an Array of KeyValue objects.\n      // @param str The string of keyvalue pairs to parse\n      // @param outerDelimiter The delimiter that separates each keyValue pair\n      // @param innerDelimiter The delimiter that separates each key from its value\n      parseKeyValuePairsFromString(str, outerDelimiter, innerDelimiter) {\n        if (!str) {\n          return [];\n        }\n\n        const arr = str.split(outerDelimiter).reduce(function(dict, pair) {\n          const keyValue = pair.split(innerDelimiter);\n          dict[keyValue[0]] = keyValue[1];\n          return dict;\n        }, {});\n\n        return arr;\n      },\n\n      // Finds a request by responseTo id\n      findRequestById(instance, id) {\n        let request = null;\n        for (let i = 0; i < instance._requests.length; i++) {\n          if (instance._requests[i].id === id) {\n            request = instance._requests[i];\n            break;\n          }\n        }\n        return request;\n      },\n\n      // called every 30 seconds letting intelliQueue know\n      // not to archive the call so dispositions and other call\n      // clean up actions can happen\n      sendPingCallMessage() {\n        UIModel.getInstance().pingCallRequest = new PingCallRequest();\n        const msg = UIModel.getInstance().pingCallRequest.formatJSON();\n        const msgObj = JSON.parse(msg);\n        const agentId = utils.getText(msgObj.ui_request, 'agent_id');\n        const uii = utils.getText(msgObj.ui_request, 'uii');\n        if (agentId === '' || uii === '') {\n          utils.logMessage(\n            LOG_LEVELS.WARN,\n            'PING-CALL message failed, agentId or UII is empty',\n            msgObj,\n          );\n        } else {\n          utils.sendMessage(UIModel.getInstance().libraryInstance, msg);\n        }\n      },\n\n      // called every 5 seconds to request stats from IntelliServices\n      sendStatsRequestMessage() {\n        UIModel.getInstance().statsRequest = new StatsRequest();\n        const msg = UIModel.getInstance().statsRequest.formatJSON();\n        utils.sendMessage(UIModel.getInstance().libraryInstance, msg);\n      },\n\n      // called every 20 seconds to ping IntelliSocket whent stats are disabled\n      sendPingRequestMessage() {\n        const msg = 'BEAT';\n        const instance = UIModel.getInstance().libraryInstance;\n        if (instance.socket && instance.socket.readyState === 1) {\n          instance.socket.send('BEAT');\n        }\n      },\n\n      // called every second\n      // if we have received agent daily stats\n      // start incrementing various data points since not all\n      // data is incremented when we want on the IntelliServices side\n      onAgentDailyStats() {\n        if (Object.keys(UIModel.getInstance().agentDailyStats).length !== 0) {\n          const agentSettings = UIModel.getInstance().agentSettings;\n          const stats = UIModel.getInstance().agentDailyStats;\n\n          const curLoginTime = stats.totalLoginTime;\n          stats.totalLoginTime = Number(curLoginTime) + 1;\n\n          if (agentSettings.isOffhook) {\n            const curOffhookTime = stats.totalOffhookTime;\n            stats.totalOffhookTime = Number(curOffhookTime) + 1;\n          }\n\n          if (agentSettings.currentState == 'ENGAGED') {\n            const curTalkTime = stats.totalTalkTime;\n            stats.totalTalkTime = Number(curTalkTime) + 1;\n\n            const curCallTime = stats.currCallTime;\n            stats.currCallTime = Number(curCallTime) + 1;\n          }\n        }\n      },\n\n      // called in loginAgent if 'integrated' dial destination passed in\n      getDialDestination() {\n        const model = UIModel.getInstance();\n        const softphoneSettings = model.softphoneSettings;\n        const dialDestType = model.applicationSettings.dialDestType;\n\n        let dialDest = '';\n\n        // default to the first server in the array\n        if (softphoneSettings.sipInfo.length > 0) {\n          const currentServer = softphoneSettings.sipInfo[0];\n          if (dialDestType === 'LEGACY_SOFTPHONE') {\n            dialDest = `sip:${utils.escapeSoftphoneUsername(\n              currentServer.username,\n            )}@${currentServer.domain}`;\n          } else if (dialDestType === 'RC_SOFTPHONE') {\n            dialDest = `${utils.escapeSoftphoneUsername(\n              currentServer.username,\n            )}@RC_SOFTPHONE`;\n          }\n        }\n\n        return dialDest;\n      },\n\n      // get valid access token based on agentId and login hash code\n      refreshAccessToken() {\n        const model = UIModel.getInstance();\n        const baseUrl = model.authHost + model.baseAuthUri;\n        const errorMsg =\n          'Error in opening WebSocket on retrieving access token';\n        const params = {\n          queryParams: {\n            loginHashcode: model.connectionSettings.hashCode,\n            agentId: model.agentSettings.agentId,\n            platformId: model.authenticateRequest.platformId,\n          },\n        };\n\n        new HttpService(baseUrl).httpPost('login/agent/hashcode', params).then(\n          function(response) {\n            try {\n              response = JSON.parse(response.response);\n              UIModel.getInstance().authenticateRequest.engageAccessToken =\n                response.accessToken;\n            } catch (err) {\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n            }\n          },\n          function(err) {\n            const errResponse = {\n              type: 'refreshAccessToken Error',\n              message: errorMsg,\n            };\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          },\n        );\n      },\n    };\n\n    // CONSTANTS\n\n    /* jshint esnext: true */\n    const LOG_LEVELS = {\n      DEBUG: 'debug',\n      STATS: 'stats',\n      INFO: 'info',\n      WARN: 'warn',\n      ERROR: 'error',\n    };\n\n    const AUTHENTICATE_TYPES = {\n      USERNAME_PASSWORD: 'USERNAME_PASSWORD',\n      RC_TOKEN: 'RC_TOKEN',\n      ENGAGE_TOKEN: 'ENGAGE_TOKEN',\n    };\n\n    // add all callback types to setCallback method description\n    const CALLBACK_TYPES = {\n      ACK: 'acknowledgeResponse',\n      ADD_SESSION: 'addSessionNotification',\n      AGENT_DEBUG_EMAIL_NOTIF: 'agentDebugEmailNotification',\n      AGENT_STATE: 'agentStateResponse',\n      AUTHENTICATE: 'authenticateResponse',\n      BARGE_IN: 'bargeInResponse',\n      CALLBACK_CANCEL: 'callbackCancelResponse',\n      CALLBACK_PENDING: 'callbacksPendingResponse',\n      CALL_NOTES: 'callNotesResponse',\n      CAMPAIGN_DISPOSITIONS: 'campaignDispositionsResponse',\n      CHAT: 'chatResponse', // internal chat\n      CHAT_ACTIVE: 'chatActiveNotification', // external chat\n      CHAT_ADD_SESSION: 'addChatSessionNotification', // external chat\n      CHAT_CANCELLED: 'chatCancelledNotification', // external chat\n      CHAT_CLIENT_RECONNECT: 'chatClientReconnectNotification',\n      CHAT_INACTIVE: 'chatInactiveNotification', // external chat\n      CHAT_LIST: 'chatListResponse', // external chat\n      CHAT_MESSAGE: 'chatMessageNotification', // external chat\n      CHAT_NEW: 'chatNewNotification', // external chat\n      CHAT_PRESENTED: 'chatPresentedNotification', // external chat\n      CHAT_ROOM_STATE: 'chatRoomStateResponse',\n      CHAT_STATE: 'chatStateResponse', // external chat\n      CHAT_STOP_MONITOR: 'stopAgentChatMonitorNotification', // external chat\n      CHAT_TYPING: 'chatTypingNotification', // external chat\n      CLOSE_SOCKET: 'closeResponse',\n      COACH_CALL: 'coachResponse',\n      CONFIG: 'configureResponse',\n      DIAL_GROUP_CHANGE: 'dialGroupChangeNotification',\n      DIAL_GROUP_CHANGE_PENDING: 'dialGroupChangePendingNotification',\n      DIRECT_AGENT_TRANSFER: 'directAgentTransferResponse',\n      DIRECT_AGENT_TRANSFER_LIST: 'directAgentTransferListResponse',\n      DIRECT_AGENT_TRANSFER_NOTIF: 'directAgentTransferNotification',\n      DROP_SESSION: 'dropSessionNotification',\n      EARLY_UII: 'earlyUiiNotification',\n      END_CALL: 'endCallNotification',\n      GATES_CHANGE: 'gatesChangeNotification',\n      GENERIC_NOTIFICATION: 'genericNotification',\n      GENERIC_RESPONSE: 'genericResponse',\n      HOLD: 'holdResponse',\n      LEAD_HISTORY: 'leadHistoryResponse',\n      LEAD_INSERT: 'leadInsertResponse',\n      LEAD_SEARCH: 'leadSearchResponse',\n      LEAD_UPDATE: 'leadUpdateResponse',\n      LOGIN: 'loginResponse',\n      LOGIN_PHASE_1: 'loginPhase1Response',\n      LOGIN_MULTISOCKET: 'multiSocketResponse',\n      LOGOUT: 'logoutResponse',\n      LOG_CONSOLE_RESULTS: 'logConsoleResultsResponse',\n      LOG_RESULTS: 'logResultsResponse',\n      NEW_CALL: 'newCallNotification',\n      OFFHOOK_INIT: 'offhookInitResponse',\n      OFFHOOK_TERM: 'offhookTermNotification',\n      OPEN_SOCKET: 'openResponse',\n      PAUSE_RECORD: 'pauseRecordResponse',\n      PENDING_CHAT_DISP: 'pendingChatDispNotification',\n      PENDING_DISP: 'pendingDispNotification',\n      PREVIEW_FETCH: 'previewFetchResponse',\n      PREVIEW_LEAD_STATE: 'previewLeadStateNotification',\n      RECORD: 'recordResponse',\n      REQUEUE: 'requeueResponse',\n      REVERSE_MATCH: 'reverseMatchNotification',\n      SAFE_MODE_FETCH: 'safeModeFetchResponse',\n      SAFE_MODE_SEARCH: 'safeModeSearchResponse',\n      SCRIPT_CONFIG: 'scriptConfigResponse',\n      SILENT_MONITOR: 'monitorResponse',\n      STATS_AGENT: 'agentStats',\n      STATS_AGENT_DAILY: 'agentDailyStats',\n      STATS_CAMPAIGN: 'campaignStats',\n      STATS_CHAT_QUEUE: 'chatQueueStats',\n      STATS_QUEUE: 'queueStats',\n      SUPERVISOR_LIST: 'supervisorListResponse',\n      TCPA_SAFE_LEAD_STATE: 'tcpaSafeLeadStateNotification',\n      WEBRTC_INFO: 'webRtcInfoResponse',\n      XFER_COLD: 'coldXferResponse',\n      XFER_WARM: 'warmXferResponse',\n      SEARCH_DIR: 'searchDirectoryResponse',\n      EXTENSION_PRESENCE: 'extensionPresenceInfo',\n\n      // SOFTPHONE Callbacks\n      SIP_CONNECTED: 'sipConnectedNotification',\n      SIP_DIAL_DEST_CHANGED: 'sipDialDestChangedNotification',\n      SIP_ENDED: 'sipEndedNotification',\n      SIP_MUTE: 'sipMuteResponse',\n      SIP_REGISTERED: 'sipRegisteredNotification',\n      SIP_REGISTRATION_FAILED: 'sipRegistrationFailedNotification',\n      SIP_RINGING: 'sipRingingNotification',\n      SIP_SWITCH_REGISTRAR: 'sipSwitchRegistrarNotification',\n      SIP_UNMUTE: 'sipUnmuteResponse',\n      SIP_UNREGISTERED: 'sipUnregisteredNotification',\n    };\n\n    const MESSAGE_TYPES = {\n      ACK: 'ACK',\n      ADD_SESSION: 'ADD-SESSION',\n      AGENT_DEBUG_EMAIL: 'AGENT-DEBUG-EMAIL',\n      AGENT_STATE: 'AGENT-STATE',\n      BARGE_IN: 'BARGE-IN',\n      CALLBACK_CANCEL: 'CANCEL-CALLBACK',\n      CALLBACK_PENDING: 'PENDING-CALLBACKS',\n      CALL_NOTES: 'CALL-NOTES',\n      CAMPAIGN_DISPOSITIONS: 'CAMPAIGN-DISPOSITIONS',\n      CHAT_ACTIVE: 'CHAT-ACTIVE', // external chat\n      CHAT_ADD_SESSION: 'ADD-CHAT-SESSION', // external chat\n      CHAT_AGENT_END: 'CHAT-END', // external chat\n      CHAT_ALIAS: 'CHAT-ALIAS', // internal chat\n      CHAT_CANCELLED: 'CHAT-CANCELLED', // external chat\n      CHAT_CLIENT_RECONNECT: 'CHAT-CLIENT-RECONNECT', // external chat\n      CHAT_DISPOSITION: 'CHAT-DISPOSITION', // external chat\n      CHAT_INACTIVE: 'CHAT-INACTIVE', // external chat\n      CHAT_LIST: 'CHAT-LIST', // external chat\n      CHAT_MANUAL_SMS: 'MANUAL-SMS', // external chat\n      CHAT_MESSAGE: 'CHAT-MESSAGE', // external chat\n      CHAT_NEW: 'NEW-CHAT', // external chat\n      CHAT_PRESENTED: 'CHAT-PRESENTED', // external chat\n      CHAT_PRESENTED_RESPONSE: 'CHAT-PRESENTED-RESPONSE', // external chat\n      CHAT_REQUEUE: 'CHAT-REQUEUE', // external chat\n      CHAT_ROOM: 'CHAT-ROOM', // internal chat\n      CHAT_ROOM_STATE: 'CHAT-ROOM-STATE', // internal chat\n      CHAT_SEND: 'CHAT', // internal chat\n      CHAT_STATE: 'CHAT-STATE', // external chat\n      CHAT_TYPING: 'CHAT-TYPING', // external chat\n      DIAL_GROUP_CHANGE: 'DIAL_GROUP_CHANGE',\n      DIAL_GROUP_CHANGE_PENDING: 'DIAL_GROUP_CHANGE_PENDING',\n      DIRECT_AGENT_ROUTE: 'DIRECT-AGENT-ROUTE',\n      DIRECT_AGENT_TRANSFER: 'DIRECT-AGENT-TRANSFER',\n      DIRECT_AGENT_TRANSFER_LIST: 'DIRECT-AGENT-TRANSFER-LIST',\n      DROP_SESSION: 'DROP-SESSION',\n      EARLY_UII: 'EARLY_UII',\n      END_CALL: 'END-CALL',\n      GATES_CHANGE: 'GATES_CHANGE',\n      GENERIC: 'GENERIC',\n      HANGUP: 'HANGUP',\n      HOLD: 'HOLD',\n      INBOUND_DISPOSITION: 'INBOUND-DISPOSITION',\n      LEAD_HISTORY: 'LEAD-HISTORY',\n      LEAD_INSERT: 'LEAD-INSERT',\n      LEAD_UPDATE: 'LEAD-UPDATE',\n      LEAVE_CHAT: 'CHAT-DROP-SESSION', // external chat\n      LOGIN: 'LOGIN',\n      LOGIN_PHASE_1: 'LOGIN-PHASE-1',\n      LOGIN_MULTISOCKET: 'MULTISOCKET',\n      LOGOUT: 'LOGOUT',\n      MONITOR_CHAT: 'CHAT-MONITOR', // external chat\n      NEW_CALL: 'NEW-CALL',\n      OFFHOOK_INIT: 'OFF-HOOK-INIT',\n      OFFHOOK_TERM: 'OFF-HOOK-TERM',\n      ONE_TO_ONE_OUTDIAL: 'ONE-TO-ONE-OUTDIAL',\n      ONE_TO_ONE_OUTDIAL_CANCEL: 'ONE-TO-ONE-OUTDIAL-CANCEL',\n      ON_MESSAGE: 'ON-MESSAGE',\n      OUTDIAL_DISPOSITION: 'OUTDIAL-DISPOSITION',\n      PAUSE_RECORD: 'PAUSE-RECORD',\n      PENDING_CHAT_DISP: 'PENDING-CHAT-DISP', // external chat\n      PENDING_DISP: 'PENDING_DISP',\n      PING_CALL: 'PING-CALL',\n      PREVIEW_DIAL: 'PREVIEW-DIAL',\n      PREVIEW_DIAL_ID: 'PREVIEW_DIAL',\n      PREVIEW_LEAD_STATE: 'PREVIEW-LEAD-STATE',\n      RECORD: 'RECORD',\n      REQUEUE: 'RE-QUEUE',\n      REVERSE_MATCH: 'REVERSE_MATCH',\n      SCRIPT_CONFIG: 'SCRIPT-CONFIG',\n      SCRIPT_RESULT: 'SCRIPT-RESULT',\n      STATS: 'STATS',\n      STATS_AGENT: 'AGENT',\n      STATS_AGENT_DAILY: 'AGENTDAILY',\n      STATS_CAMPAIGN: 'CAMPAIGN',\n      STATS_CHAT: 'CHAT',\n      STATS_QUEUE: 'GATE',\n      STOP_MONITOR_CHAT: 'CHAT-DROP-MONITORING-SESSION', // external chat\n      SUPERVISOR_LIST: 'SUPERVISOR-LIST', // internal chat\n      TCPA_SAFE: 'TCPA-SAFE',\n      TCPA_SAFE_ID: 'TCPA_SAFE',\n      TCPA_SAFE_LEAD_STATE: 'TCPA-SAFE-LEAD-STATE',\n      UPDATE_DIAL_DESTINATION: 'UPDATE_DIAL_DESTINATION',\n      XFER_COLD: 'COLD-XFER',\n      XFER_WARM: 'WARM-XFER',\n      XFER_WARM_CANCEL: 'WARM-XFER-CANCEL',\n      // SOFTPHONE message types\n      SETUP_WEB_RTC_SERVER: 'SETUP_WEB_RTC_SERVER',\n      SIP_INIT: 'SIP_INIT',\n      SIP_ANSWER: 'SIP_ANSWER',\n      SIP_REJECT: 'SIP_REJECT',\n      SIP_REGISTER: 'SIP_REGISTER',\n      SIP_HANGUP: 'SIP_HANGUP',\n      SIP_SEND_DTMF: 'SIP_SEND_DTMF',\n      SIP_TOGGLE_MUTE: 'SIP_TOGGLE_MUTE',\n      SOFTPHONE_RESET_SESSION: 'SOFTPHONE_RESET_SESSION',\n      SWITCH_SOFTPHONE_REGISTRAR: 'SWITCH_SOFTPHONE_REGISTRAR',\n    };\n\n    /*\n     * Init wrapper for the core module.\n     * @param {Object} The Object that the library gets attached to in\n     * library.init.js.  If the library was not loaded with an AMD loader such as\n     * require.js, this is the global Object.\n     */\n    function initAgentLibraryCore(context) {\n      /**\n         * This is the constructor for the Library Object. Note that the constructor is also being\n         * attached to the context that the library was loaded in.\n         * @param {Object} [config={}] Set authHost, if the WebSocket should be secure or not with the testingLocal boolean, and callback functions.\n         * @constructor\n         * @namespace Core\n         * @memberof AgentLibrary\n         * @property {object} callbacks Internal map of registered callback functions\n         * @property {array} _requests Internal map of requests by message id, private property.\n         * @property {array} _queuedMsgs Array of pending messages to be sent when socket reconnected\n         * @property {boolean} _isReconnect Whether or not we are doing a reconnect for the socket\n         * @example\n          var Lib = new AgentLibrary({\n               authHost:'d01-test.cf.dev:8080', // window.location.origin\n               testingLocal: true,\n               allowMultiSocket: true,\n               callbacks: {\n                   closeResponse: onCloseFunction,\n                   openResponse: onOpenFunction\n               }\n          });\n         */\n      const AgentLibrary = (context.AgentLibrary = function(config) {\n        config = config || {};\n\n        // define properties\n        this.callbacks = {};\n        this._requests = [];\n        this._queuedMsgs = [];\n        this._isReconnect = false;\n\n        // start with new model instance\n        UIModel.resetInstance();\n\n        // set instance on model object\n        UIModel.getInstance().libraryInstance = this;\n\n        // initialize indexedDB for logging\n        this.openLogger();\n        this.openConsoleLogger();\n\n        // set default values\n        if (typeof config.callbacks !== 'undefined') {\n          this.callbacks = config.callbacks;\n        }\n\n        if (typeof config.authHost !== 'undefined') {\n          UIModel.getInstance().authHost = config.authHost;\n        }\n\n        if (config.isSecureSocket !== 'undefined') {\n          if (typeof config.isSecureSocket === 'string') {\n            config.isSecureSocket =\n              config.isSecureSocket.toLowerCase() === 'true';\n          }\n          UIModel.getInstance().socketProtocol = config.isSecureSocket\n            ? 'wss://'\n            : 'ws://';\n        }\n\n        UIModel.getInstance().applicationSettings.allowMultiSocket =\n          config.allowMultiSocket === true;\n\n        return this;\n      });\n\n      /**\n       * Set multiple callback functions based on type\n       * @memberof AgentLibrary.Core\n       * @param {Object} callbackMap Contains map of callback types to their respective functions:<br />\n       * <tt>callbackMap = {<br />\n       *      closeResponse: onCloseFunction,<br />\n       *      openResponse: onOpenFunction<br />\n       * }\n       * </tt>\n       *<br />\n       * Possible callback types:\n       * <li>\"addSessionNotification\"</li>\n       * <li>\"agentStateResponse\"</li>\n       * <li>\"acknowledgeResponse\"</li>\n       * <li>\"bargeInResponse\"</li>\n       * <li>\"closeResponse\"</li>\n       * <li>\"coachResponse\"</li>\n       * <li>\"configureResponse\"</li>\n       * <li>\"callNotesResponse\"</li>\n       * <li>\"callbacksPendingResponse\"</li>\n       * <li>\"callbackCancelResponse\"</li>\n       * <li>\"campaignDispositionsResponse\"</li>\n       * <li>\"chatResponse\"</li>\n       * <li>\"dialGroupChangeNotification\"</li>\n       * <li>\"dialGroupChangePendingNotification\"</li>\n       * <li>\"dropSessionNotification\"</li>\n       * <li>\"earlyUiiNotification\"</li>\n       * <li>\"endCallNotification\"</li>\n       * <li>\"gatesChangeNotification\"</li>\n       * <li>\"genericNotification\"</li>\n       * <li>\"genericResponse\"</li>\n       * <li>\"holdResponse\"</li>\n       * <li>\"leadSearchResponse\"</li>\n       * <li>\"loginResponse\"</li>\n       * <li>\"logoutResponse\"</li>\n       * <li>\"monitorResponse\"</li>\n       * <li>\"newCallNotification\"</li>\n       * <li>\"offhookInitResponse\"</li>\n       * <li>\"offhookTermNotification\"</li>\n       * <li>\"openResponse\"</li>\n       * <li>\"pauseRecordResponse\"</li>\n       * <li>\"pendingDispNotification\"</li>\n       * <li>\"previewFetchResponse\"</li>\n       * <li>\"previewLeadStateNotification\"</li>\n       * <li>\"recordResponse\"</li>\n       * <li>\"requeueResponse\"</li>\n       * <li>\"reverseMatchNotification\"</li>\n       * <li>\"safeModeFetchResponse\"</li>\n       * <li>\"safeModeSearchResponse\"</li>\n       * <li>\"scriptConfigResponse\"</li>\n       * <li>\"supervisorListResponse\"</li>\n       * <li>\"coldXferResponse\"</li>\n       * <li>\"warmXferResponse\"</li>\n       * <li>\"agentStats\"</li>\n       * <li>\"agentDailyStats\"</li>\n       * <li>\"campaignStats\"</li>\n       * <li>\"queueStats\"</li>\n       * <li>\"chatQueueStats\"</li>\n       * @type {object}\n       */\n      AgentLibrary.prototype.setCallbacks = function(callbackMap) {\n        for (const property in callbackMap) {\n          this.callbacks[property] = callbackMap[property];\n        }\n      };\n\n      /**\n       * Set an individual callback function for the given type\n       * @memberof AgentLibrary.Core\n       * @param {string} type The name of the event that fires the callback function\n       * @param {function} callback The function to call for the given type\n       */\n      AgentLibrary.prototype.setCallback = function(type, callback) {\n        this.callbacks[type] = callback;\n      };\n\n      /**\n       * Get the map of all registered callbacks\n       * @memberof AgentLibrary.Core\n       * @returns {array}\n       */\n      AgentLibrary.prototype.getCallbacks = function() {\n        return this.callbacks;\n      };\n\n      /**\n       * Get a given registered callback by type\n       * @memberof AgentLibrary.Core\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallback = function(type) {\n        return this.callbacks[type];\n      };\n\n      /**\n       * Get the socket connection to IntelliSocket\n       * @memberof AgentLibrary.Core\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getSocket = function(type) {\n        return this.socket;\n      };\n\n      /**\n       * @namespace Requests\n       * @memberof AgentLibrary.Core\n       */\n\n      // //////////////////////////\n      // requests and responses //\n      // //////////////////////////\n      /**\n       * Get outgoing Authenticate Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAuthenticateRequest = function() {\n        return UIModel.getInstance().authenticateRequest;\n      };\n      /**\n       * Get outgoing Login Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoginRequest = function() {\n        return UIModel.getInstance().loginRequest;\n      };\n      /**\n       * Get the MultiSocket Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getMultiSocketRequest = function() {\n        return UIModel.getInstance().multiSocketRequest;\n      };\n      /**\n       * Get outgoing Login Phase 1 Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentConfigRequest = function() {\n        return UIModel.getInstance().loginPhase1Request;\n      };\n      /**\n       * Get outgoing Logout Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLogoutRequest = function() {\n        return UIModel.getInstance().logoutRequest;\n      };\n      /**\n       * Get latest Agent Daily Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStats = function() {\n        return UIModel.getInstance().agentDailyStats;\n      };\n      /**\n       * Get latest Call Tokens object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallTokens = function() {\n        return UIModel.getInstance().callTokens;\n      };\n      /**\n       * Get latest outgoing Agent State Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStateRequest = function() {\n        return UIModel.getInstance().agentStateRequest;\n      };\n      /**\n       * Get latest outgoing offhook init Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookInitRequest = function() {\n        return UIModel.getInstance().offhookInitRequest;\n      };\n      /**\n       * Get latest outgoing offhook termination Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookTermRequest = function() {\n        return UIModel.getInstance().offhookTermRequest;\n      };\n      /**\n       * Get latest outgoing Hangup Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getHangupRequest = function() {\n        return UIModel.getInstance().hangupRequest;\n      };\n      /**\n       * Get latest outgoing Preview Dial Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getPreviewDialRequest = function() {\n        return UIModel.getInstance().previewDialRequest;\n      };\n      /**\n       * Get latest TCPA Safe Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getTcpaSafeRequest = function() {\n        return UIModel.getInstance().tcpaSafeRequest;\n      };\n      /**\n       * Get latest Manual Outdial Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getManualOutdialRequest = function() {\n        return UIModel.getInstance().oneToOneOutdialRequest;\n      };\n      /**\n       * Get latest Manual Outdial Cancel Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getManualOutdialCancelRequest = function() {\n        return UIModel.getInstance().oneToOneOutdialCancelRequest;\n      };\n      /**\n       * Get latest Call Notes Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallNotesRequest = function() {\n        return UIModel.getInstance().callNotesRequest;\n      };\n      /**\n       * Get latest Campaign Dispositions Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignDispositionsRequest = function() {\n        return UIModel.getInstance().campaignDispositionsRequest;\n      };\n      /**\n       * Get latest Disposition Call Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDispositionRequest = function() {\n        return UIModel.getInstance().dispositionRequest;\n      };\n      /**\n       * Get latest Disposition Manual Pass Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDispositionManualPassRequest = function() {\n        return UIModel.getInstance().dispositionManualPassRequest;\n      };\n      /**\n       * Get latest Warm Transfer Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getWarmTransferRequest = function() {\n        return UIModel.getInstance().warmXferRequest;\n      };\n      /**\n       * Get latest Cold Transfer Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getColdTransferRequest = function() {\n        return UIModel.getInstance().coldXferRequest;\n      };\n      /**\n       * Get latest Warm Transfer Cancel Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getWarmTransferCancelRequest = function() {\n        return UIModel.getInstance().warmXferCancelRequest;\n      };\n      /**\n       * Get latest Requeue Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getRequeueRequest = function() {\n        return UIModel.getInstance().requeueRequest;\n      };\n      /**\n       * Get latest Barge-In Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getBargeInRequest = function() {\n        return UIModel.getInstance().bargeInRequest;\n      };\n      /**\n       * Get latest Hold Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getHoldRequest = function() {\n        return UIModel.getInstance().holdRequest;\n      };\n      /**\n       * Get latest Pause Record Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getPauseRecordRequest = function() {\n        return UIModel.getInstance().pauseRecordRequest;\n      };\n      /**\n       * Get latest Record Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getRecordRequest = function() {\n        return UIModel.getInstance().recordRequest;\n      };\n      /**\n       * Get latest Chat Presented Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatPresentedRequest = function() {\n        return UIModel.getInstance().chatPresentedRequest;\n      };\n      /**\n       * Get latest Chat Disposition Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatDispositionRequest = function() {\n        return UIModel.getInstance().chatDispositionRequest;\n      };\n      /**\n       * Get latest Chat Message Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatMessageRequest = function() {\n        return UIModel.getInstance().chatMessageRequest;\n      };\n      /**\n       * Get latest Chat Requeue Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatRequeueRequest = function() {\n        return UIModel.getInstance().chatRequeueRequest;\n      };\n      /**\n       * Get latest Chat Typing Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatTypingRequest = function() {\n        return UIModel.getInstance().chatTypingRequest;\n      };\n      /**\n       * Get latest Agent Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStatsPacket = function() {\n        return UIModel.getInstance().agentStatsPacket;\n      };\n      /**\n       * Get latest Agent Daily Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStatsPacket = function() {\n        return UIModel.getInstance().agentDailyStatsPacket;\n      };\n      /**\n       * Get latest Queue Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getQueueStatsPacket = function() {\n        return UIModel.getInstance().queueStatsPacket;\n      };\n      /**\n       * Get latest Chat Queue Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatQueueStatsPacket = function() {\n        return UIModel.getInstance().chatQueueStatsPacket;\n      };\n      /**\n       * Get latest Campaign Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignStatsPacket = function() {\n        return UIModel.getInstance().campaignStatsPacket;\n      };\n      /**\n       * Get packet received on successful Phase 1 login\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentConfigPacket = function() {\n        return UIModel.getInstance().loginPhase1Packet;\n      };\n      /**\n       * Get packet received on successful Login (2nd layer login)\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoginPacket = function() {\n        return UIModel.getInstance().loginPacket;\n      };\n      /**\n       * Get latest received packet for Agent State\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStatePacket = function() {\n        return UIModel.getInstance().agentStatePacket;\n      };\n      /**\n       * Get latest received packet for the Current Call\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCurrentCallPacket = function() {\n        return UIModel.getInstance().currentCallPacket;\n      };\n      /**\n       * Get latest received packet for initiating an offhook session\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookInitPacket = function() {\n        return UIModel.getInstance().offhookInitPacket;\n      };\n      /**\n       * Get latest received packet for terminating an offhook session\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookTermPacket = function() {\n        return UIModel.getInstance().offhookTermPacket;\n      };\n\n      /**\n       * Get chat agent end request class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getChatAgentEnd = function() {\n        return UIModel.getInstance().chatAgentEnd;\n      };\n\n      /**\n       * Get WebRTC request class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getWebRTCRequest = function() {\n        return UIModel.getInstance().webRTCRequest;\n      };\n\n      AgentLibrary.prototype.getChatListRequest = function() {\n        return UIModel.getInstance().chatListRequest;\n      };\n\n      /**\n       * Get SearchDirectoryRequest class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getSearchDirectoryRequest = function() {\n        return UIModel.getInstance().searchDirectoryRequest;\n      };\n\n      /**\n       * @namespace Notifications\n       * @memberof AgentLibrary.Core\n       */\n      // /////////////////\n      // notifications //\n      // /////////////////\n      /**\n       * Get Dial Group Change notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDialGroupChangeNotification = function() {\n        return UIModel.getInstance().dialGroupChangeNotification;\n      };\n      /**\n       * Get Dial Group Change Pending notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDialGroupChangePendingNotification = function() {\n        return UIModel.getInstance().dialGroupChangePendingNotification;\n      };\n      /**\n       * Get End Call notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getEndCallNotification = function() {\n        return UIModel.getInstance().endCallNotification;\n      };\n      /**\n       * Get Gates Change notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getGatesChangeNotification = function() {\n        return UIModel.getInstance().gatesChangeNotification;\n      };\n      /**\n       * Get Generic notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getGenericNotification = function() {\n        return UIModel.getInstance().genericNotification;\n      };\n      /**\n       * Get New Call notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getNewCallNotification = function() {\n        return UIModel.getInstance().newCallNotification;\n      };\n      /**\n       * Get current call object\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCurrentCall = function() {\n        return UIModel.getInstance().currentCall;\n      };\n      /**\n       * Get Add Session notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAddSessionNotification = function() {\n        return UIModel.getInstance().addSessionNotification;\n      };\n      /**\n       * Get Drop Session notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDropSessionNotification = function() {\n        return UIModel.getInstance().dropSessionNotification;\n      };\n      /**\n       * Get Early UII notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getEarlyUiiNotification = function() {\n        return UIModel.getInstance().earlyUiiNotification;\n      };\n      /**\n       * Get Chat Active notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatActiveNotification = function() {\n        return UIModel.getInstance().chatActiveNotification;\n      };\n      /**\n       * Get Chat Inactive notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatInactiveNotification = function() {\n        return UIModel.getInstance().chatInactiveNotification;\n      };\n      /**\n       * Get Chat Inactive notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatClientReconnectNotification = function() {\n        return UIModel.getInstance().chatClientReconnectNotification;\n      };\n      /**\n       * Get Chat Presented notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatPresentedNotification = function() {\n        return UIModel.getInstance().chatPresentedNotification;\n      };\n      /**\n       * Get Chat Typing notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatTypingNotification = function() {\n        return UIModel.getInstance().chatTypingNotification;\n      };\n      /**\n       * Get New Chat notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getNewChatNotification = function() {\n        return UIModel.getInstance().newChatNotification;\n      };\n\n      /**\n       * @namespace Settings\n       * @memberof AgentLibrary.Core\n       */\n      // ////////////////////\n      // settings objects //\n      // ////////////////////\n      /**\n       * Get Application Settings object containing the current state of application related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getApplicationSettings = function() {\n        return UIModel.getInstance().applicationSettings;\n      };\n      /**\n       * Get Softphone Settings object containing the current state of SIP related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getSoftphoneSettings = function() {\n        return UIModel.getInstance().softphoneSettings;\n      };\n      /**\n       * Get Chat Settings object containing the current state of chat related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatSettings = function() {\n        return UIModel.getInstance().chatSettings;\n      };\n      /**\n       * Get Connection Settings object containing the current state of connection related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getConnectionSettings = function() {\n        return UIModel.getInstance().connectionSettings;\n      };\n      /**\n       * Get Inbound Settings object containing the current state of inbound related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getInboundSettings = function() {\n        return UIModel.getInstance().inboundSettings;\n      };\n      /**\n       * Get Outbound Settings object containing the current state of outbound related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOutboundSettings = function() {\n        return UIModel.getInstance().outboundSettings;\n      };\n      /**\n       * Get Agent Settings object containing the current state of agent related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentSettings = function() {\n        return UIModel.getInstance().agentSettings;\n      };\n      /**\n       * Get Transfer Sessions\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getTransferSessions = function() {\n        return UIModel.getInstance().transferSessions;\n      };\n\n      AgentLibrary.prototype.getPendingSessions = function() {\n        return UIModel.getInstance().pendingNewCallSessions;\n      };\n      /**\n       * Get the Agent Permissions object containing the current state of agent permissions\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentPermissions = function() {\n        return UIModel.getInstance().agentPermissions;\n      };\n\n      /**\n       * @namespace Stats\n       * @memberof AgentLibrary.Core\n       */\n      // /////////////////\n      // stats objects //\n      // /////////////////\n\n      /**\n       * Get the Agent stats object containing the current state of agent stats\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStats = function() {\n        return UIModel.getInstance().agentStats;\n      };\n      /**\n       * Get the Agent Daily stats object containing the current state of agent daily stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStats = function() {\n        return UIModel.getInstance().agentDailyStats;\n      };\n      /**\n       * Get the Queue stats object containing the current state of queue stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getQueueStats = function() {\n        return UIModel.getInstance().queueStats;\n      };\n      /**\n       * Get the Chat Queue stats object containing the current state of chat queue stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatQueueStats = function() {\n        return UIModel.getInstance().chatQueueStats;\n      };\n      /**\n       * Get the Campaign stats object containing the current state of campaign stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignStats = function() {\n        return UIModel.getInstance().campaignStats;\n      };\n\n      /**\n       * Get filteredDirectory object containing the filtered directory data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getFilteredDirectory = function() {\n        return UIModel.getInstance().filteredDirectory;\n      };\n\n      /**\n       * Get extensionPresenceResponse object containing the presenceInfo of extensionIds\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getExtensionPresenceResponse = function() {\n        return UIModel.getInstance().extensionPresenceResponse;\n      };\n\n      /**\n       * Get ExtensionPresenceRequest class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getExtensionPresenceRequest = function() {\n        return UIModel.getInstance().extensionPresenceRequest;\n      };\n\n      /** ********************\n       *  PRIVATE FUNCTIONS *\n       ********************* */\n\n      AgentLibrary.prototype._utils = utils;\n\n      AgentLibrary.prototype._NewCallUtils = NewCallUtils;\n\n      AgentLibrary.prototype._HttpService = HttpService;\n\n      AgentLibrary.prototype._getUIModel = function() {\n        return UIModel;\n      };\n    }\n\n    function initAgentLibrarySocket(context) {\n      const AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openSocket = function(agentId, callback) {\n        const instance = this;\n        utils.setCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, callback);\n        if ('WebSocket' in context) {\n          if (!instance.socket) {\n            const model = UIModel.getInstance();\n\n            model.agentSettings.agentId = agentId; // set agentId here since id is in scope\n\n            if (instance._isReconnect) {\n              // update access_token on reconnect\n              _getNewAccessToken(instance);\n            } else {\n              _buildSocketDest();\n              _initSocket(instance);\n            }\n          }\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.WARN,\n            'WebSocket NOT supported by your Browser',\n            '',\n          );\n        }\n      };\n\n      AgentLibrary.prototype.closeSocket = function() {\n        this.socket.close();\n      };\n\n      // when socket is successfully opened, check to see if there are any queued messaged\n      // and if so, send them.\n      AgentLibrary.prototype.socketOpened = function() {\n        const instance = this;\n        const currDts = new Date();\n        const threeMins = 3 * 60 * 1000; // milliseconds\n        let queuedMsg;\n\n        // get agent configuration information - \"phase 1 login\"\n        UIModel.getInstance().loginPhase1Request = new LoginPhase1Request();\n        const msg = UIModel.getInstance().loginPhase1Request.formatJSON();\n        utils.sendMessage(this, msg);\n\n        // if this is a reconnect, we need to re-authenticate with IntelliServices & IntelliQueue\n        if (instance._isReconnect) {\n          instance._isReconnect = false;\n          // Add IntelliQueue reconnect\n          const loginRequest = JSON.parse(\n            UIModel.getInstance().loginRequest.formatJSON(),\n          );\n          const hashCode = UIModel.getInstance().connectionSettings.hashCode;\n          loginRequest.ui_request.hash_code = {\n            '#text': hashCode,\n          };\n          loginRequest.ui_request.update_login = {\n            '#text': 'FALSE',\n          };\n          loginRequest.ui_request.reconnect = {\n            '#text': 'TRUE',\n          };\n          instance._queuedMsgs.unshift({\n            dts: new Date(),\n            msg: JSON.stringify(loginRequest),\n          });\n        }\n        for (let idx = 0; idx < instance._queuedMsgs.length; idx++) {\n          queuedMsg = instance._queuedMsgs[idx];\n          if (currDts.getTime() - queuedMsg.dts.getTime() < threeMins) {\n            // message queued less than 3 mins ago, send\n            utils.logMessage(\n              LOG_LEVELS.DEBUG,\n              'Sending queued message to IntelliSocket.',\n              queuedMsg.msg,\n            );\n            utils.sendMessage(instance, queuedMsg.msg);\n          } else {\n            // message expired, don't send\n            utils.logMessage(\n              LOG_LEVELS.DEBUG,\n              'Queued message expired, discarding.',\n              queuedMsg.msg,\n            );\n          }\n        }\n        // reset queued messages\n        instance._queuedMsgs = [];\n      };\n\n      // build WebSocket destination based on current agentId and access token\n      function _buildSocketDest() {\n        const model = UIModel.getInstance();\n        let socketDest = model.applicationSettings.socketDest;\n        socketDest = model.socketProtocol + model.authenticateRequest.socketUrl;\n        socketDest += `:${model.authenticateRequest.socketPort}`;\n        socketDest += `?access_token=${model.authenticateRequest.accessToken}`;\n        socketDest += `&agent_id=${model.agentSettings.agentId}`;\n\n        model.applicationSettings.socketDest = socketDest; // seems redundant, but needed to update value on model\n        return socketDest;\n      }\n\n      // connect socket, setup socket event listeners\n      function _initSocket(instance) {\n        const socketDest = UIModel.getInstance().applicationSettings.socketDest;\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          `Attempting to open socket connection to ${socketDest}`,\n          '',\n        );\n\n        instance.socket = new WebSocket(socketDest);\n\n        instance.socket.onopen = function() {\n          // stop reconnect timer\n          clearInterval(UIModel.getInstance().reconnectIntervalId);\n          UIModel.getInstance().reconnectIntervalId = null;\n\n          UIModel.getInstance().applicationSettings.socketConnected = true;\n          utils.fireCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, {\n            reconnect: instance._isReconnect,\n          });\n          instance.socketOpened();\n        };\n\n        instance.socket.onerror = function(err) {\n          utils.fireCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, {\n            error: err,\n          });\n        };\n\n        instance.socket.onmessage = function(evt) {\n          if (evt.data !== 'BOP') {\n            const data = JSON.parse(evt.data);\n            if (data.ui_response) {\n              utils.processResponse(instance, data);\n            } else if (data.ui_notification) {\n              utils.processNotification(instance, data);\n            } else if (data.dialer_request) {\n              utils.processDialerResponse(instance, data);\n            } else if (data.ui_stats) {\n              utils.processStats(instance, data);\n            } else if (data.ui_request) {\n              utils.processRequest(instance, data);\n            }\n          }\n        };\n\n        instance.socket.onclose = function() {\n          utils.fireCallback(instance, CALLBACK_TYPES.CLOSE_SOCKET, '');\n          UIModel.getInstance().applicationSettings.socketConnected = false;\n          instance.socket = null;\n\n          // cancel daily stats timer\n          clearInterval(UIModel.getInstance().agentDailyIntervalId);\n          UIModel.getInstance().agentDailyIntervalId = null;\n\n          // cancel stats timer\n          clearInterval(UIModel.getInstance().statsIntervalId);\n          UIModel.getInstance().statsIntervalId = null;\n\n          // cancel BEAT timer\n          clearInterval(UIModel.getInstance().pingStatIntervalId);\n          UIModel.getInstance().pingStatIntervalId = null;\n\n          // if we are still logged in, set reconnect flag and try to reconnect\n          if (UIModel.getInstance().agentSettings.isLoggedIn) {\n            instance._isReconnect = true;\n            console.warn(\n              'AgentLibrary: WebSocket is not connected, attempting to reconnect.',\n            );\n\n            // try reconnect every 5 seconds\n            UIModel.getInstance().reconnectIntervalId = setInterval(function() {\n              instance.openSocket(UIModel.getInstance().agentSettings.agentId);\n            }, 5000);\n          }\n        };\n      }\n\n      // get valid access token based on agentId and login hash code\n      function _getNewAccessToken(instance) {\n        const model = UIModel.getInstance();\n        const baseUrl = model.authHost + model.baseAuthUri;\n        const errorMsg =\n          'Error in opening WebSocket on retrieving access token';\n        const params = {\n          queryParams: {\n            loginHashcode: model.connectionSettings.hashCode,\n            agentId: model.agentSettings.agentId,\n            platformId: model.authenticateRequest.platformId,\n          },\n        };\n\n        new HttpService(baseUrl).httpPost('login/agent/hashcode', params).then(\n          function(response) {\n            try {\n              response = JSON.parse(response.response);\n              UIModel.getInstance().authenticateRequest.accessToken =\n                response.accessToken;\n              _buildSocketDest();\n              _initSocket(instance);\n            } catch (err) {\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n            }\n          },\n          function(err) {\n            const errResponse = {\n              type: 'WebSocket Error',\n              message: errorMsg,\n            };\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          },\n        );\n      }\n    }\n\n    function initAgentLibraryAgent(context) {\n      /**\n       * @namespace Agent\n       * @memberof AgentLibrary\n       */\n\n      const AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Sends authenticate request to Engage Auth. Can either pass in 3 params of username, password, and platformId or\n       * two params of jwt and tokenType. In each case a callback function may optionally be specified.\n       * @memberof AgentLibrary.Agent\n       * @param {string} username Agent's username\n       * @param {string} password Agent's password\n       * @param {string} platformId Designate the platform where the agent is set up\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithUsernamePassword = function(\n        username,\n        password,\n        platformId,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          username,\n          password,\n          platformId,\n          authType: AUTHENTICATE_TYPES.USERNAME_PASSWORD,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends authenticate request to Engage Auth. Returns an array of agents to continue login process.\n       * @memberof AgentLibrary.Agent\n       * @param {string} rcAccessToken JSON Web Token received from RingCentral Single Sign-on API\n       * @param {string} tokenType string type received from RingCentral Single Sign-on API\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithRcAccessToken = function(\n        rcAccessToken,\n        tokenType,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          rcAccessToken,\n          tokenType,\n          authType: AUTHENTICATE_TYPES.RC_TOKEN,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends authenticate request to Engage Auth. Returns an array of agents to continue login process.\n       * @memberof AgentLibrary.Agent\n       * @param {string} engageAccessToken JSON Web Token received from RingCentral Single Sign-on API\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithEngageAccessToken = function(\n        engageAccessToken,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          engageAccessToken,\n          authType: AUTHENTICATE_TYPES.ENGAGE_TOKEN,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends request to IntelliQueue to get the agent's available products for login\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when loginPhase1 response received\n       */\n      AgentLibrary.prototype.getAgentConfig = function(callback) {\n        UIModel.getInstance().loginPhase1Request = new LoginPhase1Request();\n        const msg = UIModel.getInstance().loginPhase1Request.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LOGIN_PHASE_1, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends request to the WebRTC Endpoint URL and process the response.\n       * @memberof AgentLibrary.Agent\n       *\n       * @param {function} [callback=null] Callback function when web rtc info response received\n       */\n      AgentLibrary.prototype.getWebRtcInfo = function(callback) {\n        const model = UIModel.getInstance();\n        model.webRTCRequest = new WebRTCRequest();\n        model.webRTCRequest.getSipRegistrationInfo();\n\n        utils.setCallback(this, CALLBACK_TYPES.WEBRTC_INFO, callback);\n      };\n\n      /**\n       * Sends agent configure message (2nd layer login) to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} dialDest The agent's number, sip | DID.\n       * @param {string[]} [queueIds=null] The queue ids the agent will be logged into.\n       * @param {string[]} [chatIds=null] The chat ids the agent will be logged into.\n       * @param {string} [skillProfileId=null] The skill profile the agent will be logged into.\n       * @param {string} [dialGroupId=null] The outbound dial group id the agent will be logged into.\n       * @param {string} [updateFromAdminUI=false] Whether the request is generated from the AdminUI or not.\n       * @param {boolean} isForce Whether the agent login is forcing an existing agentlogin out.\n       * @param {function} [callback=null] Callback function when configureAgent response received.\n       */\n      AgentLibrary.prototype.loginAgent = function(\n        dialDest,\n        queueIds,\n        chatIds,\n        skillProfileId,\n        dialGroupId,\n        updateFromAdminUI,\n        isForce,\n        callback,\n      ) {\n        const model = UIModel.getInstance();\n        const config = {\n          dialDest,\n          queueIds,\n          chatIds,\n          skillProfileId,\n          dialGroupId,\n          updateFromAdminUI,\n          isForce,\n        };\n        const instance = this;\n\n        // if dialDest is set to `integrated`, we are doing an integrated softphone\n        // and need to get SIP credentials\n        if (config.dialDest === 'integrated') {\n          // set up some global variables to track dial dest type for later offhook init\n          if (model.applicationSettings.isSso) {\n            model.applicationSettings.dialDestType = 'RC_SOFTPHONE';\n          } else {\n            model.applicationSettings.dialDestType = 'LEGACY_SOFTPHONE';\n          }\n\n          if (model.softphoneSettings.sipInfo.length === 0) {\n            // call engage-auth api to get webRtc info\n            model.libraryInstance.getWebRtcInfo(function() {\n              config.dialDest = utils.getDialDestination();\n              _setUpAndSendLogin(config, callback, instance);\n            });\n          } else {\n            // set webRtc info from model, could be an update login\n            config.dialDest = utils.getDialDestination();\n            _setUpAndSendLogin(config, callback, instance);\n          }\n        } else {\n          // set up some global variables to track dial dest type for later offhook init\n          if (config.dialDest === 'RC_PHONE') {\n            model.applicationSettings.dialDestType = 'RC_PHONE';\n          }\n\n          _setUpAndSendLogin(config, callback, instance);\n        }\n      };\n\n      function _setUpAndSendLogin(config, callback, instance) {\n        UIModel.getInstance().loginRequest = new LoginRequest(\n          config.dialDest,\n          config.queueIds,\n          config.chatIds,\n          config.skillProfileId,\n          config.dialGroupId,\n          config.updateFromAdminUI,\n          config.isForce,\n        );\n        const msg = UIModel.getInstance().loginRequest.formatJSON();\n\n        utils.setCallback(instance, CALLBACK_TYPES.LOGIN, callback);\n        utils.sendMessage(instance, msg);\n      }\n      /**\n       * Sends multisocket message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when multisocket response received.\n       */\n      AgentLibrary.prototype.multiLoginRequest = function(callback) {\n        const model = UIModel.getInstance();\n        model.multiSocketRequest = new MultiSocketRequest();\n        const msg = model.multiSocketRequest.formatJSON();\n        if (\n          model.dataStore.get('agent_id') &&\n          model.dataStore.get('hash_code')\n        ) {\n          utils.setCallback(this, CALLBACK_TYPES.LOGIN_MULTISOCKET, callback);\n          utils.sendMessage(this, msg);\n        } else {\n          this.getAgentConfig(callback);\n        }\n      };\n\n      /**\n       * Sends agent logout message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {number} agentId Id of the agent that will be logged out.\n       * @param {function} [callback=null] Callback function when logoutAgent response received.\n       */\n      AgentLibrary.prototype.logoutAgent = function(agentId, callback) {\n        const model = UIModel.getInstance();\n        if (model.agentSettings.isLoggedIn) {\n          model.agentSettings.isLoggedIn = false;\n          model.logoutRequest = new LogoutRequest(agentId);\n          const msg = model.logoutRequest.formatJSON();\n\n          // socket closed in callback function\n          utils.setCallback(this, CALLBACK_TYPES.LOGOUT, callback);\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Sends agent logout for the given agent to logout message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {number} agentToLogout Id of the agent that will be logged out.\n       * @param {number} [requestMessage=\"\"] Message to send for the logout request.\n       * @param {function} [callback=null] Callback function when logoutAgent response received.\n       */\n      AgentLibrary.prototype.requestLogoutAgent = function(\n        agentToLogout,\n        requestMessage,\n        callback,\n      ) {\n        const isSupervisor =\n          UIModel.getInstance().agentSettings.agentType === 'SUPERVISOR';\n        if (isSupervisor) {\n          // This is a supervisor request to log an agent out. Create the\n          // logout packet and then send the packet to IntelliQueue.\n          UIModel.getInstance().logoutRequest = new LogoutRequest(\n            agentToLogout,\n            requestMessage,\n          );\n          utils.setCallback(this, CALLBACK_TYPES.LOGOUT, callback);\n          const msg = UIModel.getInstance().logoutRequest.formatJSON();\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Sends agent state change message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} agentState The system/base state to transition to <br />\n       * AVAILABLE | TRANSITION | ENGAGED | ON-BREAK | WORKING | AWAY | LUNCH | AUX-UNAVAIL-NO-OFFHOOK | AUX-UNAVAIL-OFFHOOK\n       * @param {string} [agentAuxState=\"\"] The aux state display label\n       * @param {function} [callback=null] Callback function when agentState response received\n       */\n      AgentLibrary.prototype.setAgentState = function(\n        agentState,\n        agentAuxState,\n        callback,\n      ) {\n        UIModel.getInstance().agentStateRequest = new AgentStateRequest(\n          agentState,\n          agentAuxState,\n        );\n        const msg = UIModel.getInstance().agentStateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.AGENT_STATE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Initiates an agent offhook session\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when offhookInit response received\n       */\n      AgentLibrary.prototype.offhookInit = function(callback) {\n        UIModel.getInstance().offhookInitRequest = new OffhookInitRequest();\n        const msg = UIModel.getInstance().offhookInitRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.OFFHOOK_INIT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Terminates agent's offhook session\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when pending callbacks response received\n       */\n      AgentLibrary.prototype.offhookTerm = function(callback) {\n        UIModel.getInstance().offhookTermRequest = new OffhookTermRequest();\n        const msg = UIModel.getInstance().offhookTermRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.OFFHOOK_TERM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Returns scheduled callbacks for the given agent\n       * @memberof AgentLibrary.Agent\n       * @param {number} [agentId=logged in agent id] Id of agent to get callbacks for\n       * @param {function} [callback=null] Callback function when pending callbacks response received\n       */\n      AgentLibrary.prototype.getPendingCallbacks = function(agentId, callback) {\n        UIModel.getInstance().callbacksPendingRequest = new CallbacksPendingRequest(\n          agentId,\n        );\n        const msg = UIModel.getInstance().callbacksPendingRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALLBACK_PENDING, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel a scheduled callback for the given agent based on lead id\n       * @memberof AgentLibrary.Agent\n       * @param {number} leadId Id of lead callback to cancel\n       * @param {number} [agentId=logged in agent id] Id of agent to cancel specified lead callback for\n       * @param {function} [callback=null] Callback function when callback is canceled\n       */\n      AgentLibrary.prototype.cancelCallback = function(\n        leadId,\n        agentId,\n        callback,\n      ) {\n        UIModel.getInstance().callbackCancelRequest = new CallbackCancelRequest(\n          leadId,\n          agentId,\n        );\n        const msg = UIModel.getInstance().callbackCancelRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALLBACK_CANCEL, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request stats messages to be sent every 5 seconds. The stats responses will be sent as\n       * four possible callback types: agentStats, agentDailyStats, campaignStats, or queueStats\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.requestStats = function() {\n        // start stats interval timer, request stats every 5 seconds\n        if (UIModel.getInstance().statsIntervalId === null) {\n          UIModel.getInstance().statsIntervalId = setInterval(\n            utils.sendStatsRequestMessage,\n            5000,\n          );\n          _terminatePing();\n        }\n      };\n\n      /**\n       * Terminate stats messages sent to the agent every 5 seconds.\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.terminateStats = function() {\n        clearInterval(UIModel.getInstance().statsIntervalId);\n        UIModel.getInstance().statsIntervalId = null;\n        _requestPing();\n      };\n\n      function _requestPing() {\n        // start ping interval timer, request BEAT every 20 seconds\n        if (UIModel.getInstance().pingStatIntervalId === null) {\n          UIModel.getInstance().pingStatIntervalId = setInterval(\n            utils.sendPingRequestMessage,\n            20000,\n          );\n        }\n      }\n\n      function _terminatePing() {\n        clearInterval(UIModel.getInstance().pingStatIntervalId);\n        UIModel.getInstance().pingStatIntervalId = null;\n      }\n\n      /**\n       * Set the agent dial destination\n       * @memberof AgentLibrary.Agent\n       * @param {string} dialDest The dial destination used for softphone registration\n       * @param {boolean} isSoftphoneError True - if we want to log this dial destination update as a softphone error\n       */\n      AgentLibrary.prototype.updateDialDestination = function(\n        dialDest,\n        isSoftphoneError,\n      ) {\n        UIModel.getInstance().updateDialDestinationRequest = new UpdateDialDestinationRequest(\n          dialDest,\n          isSoftphoneError,\n        );\n        const msg = UIModel.getInstance().updateDialDestinationRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Search Directory for the searchString passed to function.\n       * @memberof AgentLibrary.Agent\n       * @param {string} searchString The search filter for PBX directory\n       */\n      AgentLibrary.prototype.searchDirectory = function(\n        searchString,\n        callback,\n      ) {\n        const model = UIModel.getInstance();\n\n        model.searchDirectoryRequest = new SearchDirectoryRequest(searchString);\n        model.searchDirectoryRequest.searchDirectory(searchString);\n        utils.setCallback(this, CALLBACK_TYPES.SEARCH_DIR, callback);\n      };\n\n      /**\n       * Refresh Token method\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.getRefreshedToken = function() {\n        utils.refreshAccessToken();\n      };\n\n      /**\n       * get Extension Presence  Info for the extension Ids passed to function.\n       * @memberof AgentLibrary.Agent\n       * @param {string} extensionIds The extension Ids of RC\n       */\n      AgentLibrary.prototype.getExtensionPresenceInfo = function(\n        extensionIds,\n        callback,\n      ) {\n        const model = UIModel.getInstance();\n        model.extensionPresenceRequest = new ExtensionPresenceRequest(\n          extensionIds,\n        );\n        model.extensionPresenceRequest.getExtensionPresenceInfo(extensionIds);\n        utils.setCallback(this, CALLBACK_TYPES.EXTENSION_PRESENCE, callback);\n      };\n    }\n\n    function initAgentLibraryCall(context) {\n      /**\n       * @namespace Call\n       * @memberof AgentLibrary\n       */\n\n      const AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Barge in on a call, can hear all parties and be heard by all\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when barge in response received\n       */\n      AgentLibrary.prototype.bargeIn = function(\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'FULL',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        const msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.BARGE_IN, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Add a coaching session to the call, can hear all parties but only able to speak on agent channel\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when coaching session response received\n       */\n      AgentLibrary.prototype.coach = function(\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'COACHING',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        const msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.COACH_CALL, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {function} [callback=null] Callback function when cold transfer response received\n       */\n      AgentLibrary.prototype.coldXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n        );\n        const msg = UIModel.getInstance().coldXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.internationalColdXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        const msg = UIModel.getInstance().coldXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a disposition for an inbound or outbound call\n       * @memberof AgentLibrary.Call\n       * @param {string} uii UII (unique id) for call\n       * @param {string} dispId The disposition id\n       * @param {string} notes Agent notes for call\n       * @param {boolean} callback Boolean for whether or not this call is a callback\n       * @param {string} [callbackDTS=\"\"] date time stamp if callback\n       * @param {string} [contactForwardNumber=null] Number for contact forwarding\n       * @param {string} [survey=null] The survey response values for the call.\n       * Format: survey = [ { label: \"\", externId: \"\", leadUpdateColumn: \"\"} ]\n       * @param {string} [externId=null] The external id associated with the lead for this call (only for Outbound Dispositions).\n       * @param {string} [leadId=null] The lead id associated with this call (only for Outbound Dispositions).\n       * @param {string} [requestId=null] The request id associated with a preview fetched lead (only for Outbound Dispositions).\n       */\n      AgentLibrary.prototype.dispositionCall = function(\n        uii,\n        dispId,\n        notes,\n        callback,\n        callbackDTS,\n        contactForwardNumber,\n        survey,\n        externId,\n        leadId,\n        requestId,\n      ) {\n        const model = UIModel.getInstance();\n        model.dispositionRequest = new DispositionRequest(\n          uii,\n          dispId,\n          notes,\n          callback,\n          callbackDTS,\n          contactForwardNumber,\n          survey,\n          externId,\n          leadId,\n          requestId,\n        );\n        const msg = model.dispositionRequest.formatJSON();\n        utils.sendMessage(this, msg);\n\n        // cancel ping call timer\n        if (model.pingIntervalId) {\n          clearInterval(model.pingIntervalId);\n          model.pingIntervalId = null;\n        }\n      };\n\n      /**\n       * Send a disposition for a manual pass on a lead\n       * @memberof AgentLibrary.Call\n       * @param {string} dispId The disposition id\n       * @param {string} notes Agent notes for call\n       * @param {boolean} callback Boolean for whether or not this call is a callback\n       * @param {string} [callbackDTS=\"\"] date time stamp if callback\n       * @param {string} [leadId=null] The lead id\n       * @param {string} [requestId=null] The request key for the lead\n       * @param {string} [externId=null] The external id of the lead\n       */\n      AgentLibrary.prototype.dispositionManualPass = function(\n        dispId,\n        notes,\n        callback,\n        callbackDTS,\n        leadId,\n        requestId,\n        externId,\n      ) {\n        UIModel.getInstance().dispositionManualPassRequest = new DispositionManualPassRequest(\n          dispId,\n          notes,\n          callback,\n          callbackDTS,\n          leadId,\n          requestId,\n          externId,\n        );\n        const msg = UIModel.getInstance().dispositionManualPassRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get a list of all campaign dispositions for given campaign id\n       * @memberof AgentLibrary.Call\n       * @param {string} campaignId Id for campaign to get dispositions for\n       * @param {function} [callback=null] Callback function when campaign dispositions response received\n       */\n      AgentLibrary.prototype.getCampaignDispositions = function(\n        campaignId,\n        callback,\n      ) {\n        UIModel.getInstance().campaignDispositionsRequest = new CampaignDispositionsRequest(\n          campaignId,\n        );\n        const msg = UIModel.getInstance().campaignDispositionsRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CAMPAIGN_DISPOSITIONS, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a hangup request message\n       * @memberof AgentLibrary.Call\n       * @param {string} [sessionId=\"\"] Session to hangup, defaults to current call session id\n       * @param {boolean} resetPendingDisp, reset pendingDisp to false, in case of bad reconnect\n       */\n      AgentLibrary.prototype.hangup = function(sessionId, resetPendingDisp) {\n        UIModel.getInstance().hangupRequest = new HangupRequest(\n          sessionId,\n          resetPendingDisp,\n        );\n        const msg = UIModel.getInstance().hangupRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Place a call on hold\n       * @memberof AgentLibrary.Call\n       * @param {boolean} holdState Whether we are putting call on hold or taking off hold - values true | false\n       * @param {function} [callback=null] Callback function when hold response received\n       */\n      AgentLibrary.prototype.hold = function(holdState, callback) {\n        UIModel.getInstance().holdRequest = new HoldRequest(holdState);\n        const msg = UIModel.getInstance().holdRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.HOLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Place a specified session of a call on hold\n       * @memberof AgentLibrary.Call\n       * @param {boolean} holdState Whether we are putting call on hold or taking off hold - values true | false\n       * @param {integer|string} sessionId session id of the call to place on hold\n       * @param {function} [callback=null] Callback function when hold response received\n       */\n      AgentLibrary.prototype.holdSession = function(\n        holdState,\n        sessionId,\n        callback,\n      ) {\n        UIModel.getInstance().holdRequest = new HoldRequest(\n          holdState,\n          sessionId,\n        );\n        const msg = UIModel.getInstance().holdRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.HOLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a manual outdial request message\n       * @memberof AgentLibrary.Call\n       * @param {string} destination Number to call - ANI\n       * @param {number} callerId Number displayed to callee, DNIS\n       * @param {number} [ringTime=60] Time in seconds to ring call\n       * @param {string} [countryId='USA'] Country for the destination number\n       * @param {number} [queueId=''] Queue id to tie manual call to\n       */\n      AgentLibrary.prototype.manualOutdial = function(\n        destination,\n        callerId,\n        ringTime,\n        countryId,\n        queueId,\n      ) {\n        UIModel.getInstance().oneToOneOutdialRequest = new OneToOneOutdialRequest(\n          destination,\n          callerId,\n          ringTime,\n          countryId,\n          queueId,\n        );\n        const msg = UIModel.getInstance().oneToOneOutdialRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancels a manual outdial request by UII.\n       * @memberof AgentLibrary.Call\n       * @param {string} uii UII of manual call request, the UII is returned in the EARLY_UII notification.\n       */\n      AgentLibrary.prototype.manualOutdialCancel = function(uii) {\n        UIModel.getInstance().oneToOneOutdialCancelRequest = new OneToOneOutdialCancelRequest(\n          uii,\n        );\n        const msg = UIModel.getInstance().oneToOneOutdialCancelRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pause call recording\n       * @memberof AgentLibrary.Call\n       * @param {boolean} record Whether we are recording or not\n       * @param {function} [callback=null] Callback function when pause record response received\n       */\n      AgentLibrary.prototype.pauseRecord = function(record, callback) {\n        UIModel.getInstance().pauseRecordRequest = new PauseRecordRequest(\n          record,\n        );\n        const msg = UIModel.getInstance().pauseRecordRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.PAUSE_RECORD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a preview dial request to call lead based on request id and (optional) lead phone.\n       * Call previewFetch method first to get request id.\n       * @memberof AgentLibrary.Call\n       * @param {number} requestId Pending request id sent back with lead, required to dial lead.\n       * @param {number} [leadPhone=\"\"] Lead phone number. Only needed if there are multiple numbers loaded for given lead.\n       */\n      AgentLibrary.prototype.previewDial = function(requestId, leadPhone) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          '',\n          [],\n          requestId,\n          leadPhone,\n        );\n        const msg = UIModel.getInstance().previewDialRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a message to fetch preview dialable leads\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when preview fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.previewFetch = function(searchFields, callback) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          '',\n          searchFields,\n          '',\n        );\n        const msg = UIModel.getInstance().previewDialRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.PREVIEW_FETCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pull back leads that match search criteria\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when lead search completed, returns matched leads\n       */\n      AgentLibrary.prototype.searchLeads = function(searchFields, callback) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          'search',\n          searchFields,\n          '',\n        );\n        const msg = UIModel.getInstance().previewDialRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_SEARCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Set agent notes for a call\n       * @memberof AgentLibrary.Call\n       * @param {string} notes Agent notes to add to call\n       * @param {function} [callback=null] Callback function when call notes response received\n       */\n      AgentLibrary.prototype.setCallNotes = function(notes, callback) {\n        UIModel.getInstance().callNotesRequest = new CallNotesRequest(notes);\n        const msg = UIModel.getInstance().callNotesRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALL_NOTES, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Add a silent monitor session to a call, can hear all channels but can't be heard by any party\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when silent monitor response received\n       */\n      AgentLibrary.prototype.monitor = function(\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'MUTE',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        const msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SILENT_MONITOR, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Toggle call recording based on passed in boolean true | false\n       * @memberof AgentLibrary.Call\n       * @param {boolean} record Whether we are recording or not\n       * @param {function} [callback=null] Callback function when record response received\n       */\n      AgentLibrary.prototype.record = function(record, callback) {\n        UIModel.getInstance().recordRequest = new RecordRequest(record);\n        const msg = UIModel.getInstance().recordRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.RECORD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Requeue a call\n       * @memberof AgentLibrary.Call\n       * @param {number} queueId Queue Id to send the call to\n       * @param {number} skillId Skill Id for the requeued call\n       * @param {boolean} maintain Whether or not to maintain the current agent\n       * @param {function} [callback=null] Callback function when requeue response received\n       */\n      AgentLibrary.prototype.requeueCall = function(\n        queueId,\n        skillId,\n        maintain,\n        callback,\n      ) {\n        UIModel.getInstance().requeueRequest = new RequeueRequest(\n          queueId,\n          skillId,\n          maintain,\n        );\n        const msg = UIModel.getInstance().requeueRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.REQUEUE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a TCPA Safe call request to call lead based on request id and (optional) lead phone.\n       * Call safeModeFetch method first to get request id.\n       * @memberof AgentLibrary.Call\n       * @param {number} requestId Pending request id sent back with lead, required to dial lead.\n       * @param {number} [leadPhone=\"\"] Lead phone number. Only needed if there are multiple numbers loaded for given lead.\n       */\n      AgentLibrary.prototype.safeModeCall = function(requestId, leadPhone) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          '',\n          [],\n          requestId,\n          leadPhone,\n        );\n        const msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a message to fetch safe mode dialable leads\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when safe mode fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.safeModeFetch = function(searchFields, callback) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          '',\n          searchFields,\n          '',\n        );\n        const msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SAFE_MODE_FETCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pull back Safe Mode leads that match search criteria\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when safe mode fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.safeSearchLeads = function(\n        searchFields,\n        callback,\n      ) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          'search',\n          searchFields,\n          '',\n        );\n        const msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SAFE_MODE_SEARCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.internationalWarmXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        const msg = UIModel.getInstance().warmXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.warmXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n        );\n        const msg = UIModel.getInstance().warmXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel a warm transfer\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number that was transfered to\n       */\n      AgentLibrary.prototype.warmXferCancel = function(dialDest) {\n        UIModel.getInstance().warmXferCancelRequest = new XferWarmCancelRequest(\n          dialDest,\n        );\n        const msg = UIModel.getInstance().warmXferCancelRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.corporateDirWarmXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        const msg = UIModel.getInstance().warmXferRequest.formatJSON();\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when cold transfer response received\n       */\n      AgentLibrary.prototype.corporateDirColdXfer = function(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        const msg = UIModel.getInstance().coldXferRequest.formatJSON();\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Requests a script object based on given id\n       * @memberof AgentLibrary.Call\n       * @param {number} scriptId Id of script\n       * @param {number} version The version number of the script, if the current loaded script version matches,\n       *                 just return current script. Otherwise, fetch new version of script.\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.getScript = function(scriptId, version, callback) {\n        const model = UIModel.getInstance();\n        const script = model.scriptSettings.loadedScripts[scriptId];\n        utils.setCallback(this, CALLBACK_TYPES.SCRIPT_CONFIG, callback);\n\n        if (script && script.version === version) {\n          // return from memory\n          const savedScript = UIModel.getInstance().scriptSettings\n            .loadedScripts[scriptId];\n          callback(savedScript);\n        } else {\n          // load script\n          model.scriptConfigRequest = new ScriptConfigRequest(scriptId);\n          const msg = UIModel.getInstance().scriptConfigRequest.formatJSON();\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Saves the results from a script\n       * @memberof AgentLibrary.Call\n       * @param {string} uii The UII of the call the script results belong to\n       * @param {number} scriptId Id of script\n       * @param {object} jsonResult JSON object of script results, name/value pairs\n       */\n      AgentLibrary.prototype.saveScriptResult = function(\n        uii,\n        scriptId,\n        jsonResult,\n      ) {\n        UIModel.getInstance().scriptResultRequest = new ScriptResultRequest(\n          uii,\n          scriptId,\n          jsonResult,\n        );\n        const msg = UIModel.getInstance().scriptResultRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get available list of agents available for Direct Transfer\n       * @memberof AgentLibrary.Call\n       */\n      AgentLibrary.prototype.directAgentXferList = function(callback) {\n        UIModel.getInstance().directAgentTransferListRequest = new DirectAgentTransferList();\n        const msg = UIModel.getInstance().directAgentTransferListRequest.formatJSON();\n\n        utils.setCallback(\n          this,\n          CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n          callback,\n        );\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer directly to an available agent from the directAgentXferList result and stay on the call\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.warmDirectAgentXfer = function(targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'WARM',\n        );\n        const msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer directly to an available agent from the directAgentXferList result\n       * and terminate the current agents call session\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.coldDirectAgentXfer = function(targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'COLD',\n        );\n        const msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel the request to transfer directly to an agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.cancelDirectAgentXfer = function(targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'CANCEL',\n        );\n        const msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send the direct agent transfer straight to voicemail, avoid any attempts to connect to the target agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to receive the voicemail\n       */\n      AgentLibrary.prototype.voicemailDirectAgentXfer = function(\n        targetAgentId,\n      ) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'VOICEMAIL',\n        );\n        const msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Reject a presented direct agent transfer, if WARM requesting agent will be notified to try again,\n       * if COLD a voicemail will be left for the target agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to receive the voicemail\n       */\n      AgentLibrary.prototype.rejectDirectAgentXfer = function(uii) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          '0',\n          'REJECT',\n          uii,\n        );\n        const msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryLead(context) {\n      /**\n       * @namespace Lead\n       * @memberof AgentLibrary\n       */\n\n      const AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Get the history for a given lead\n       * @memberof AgentLibrary.Lead\n       * @param {number} leadId The lead id to retrieve history for\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadHistory = function(leadId, callback) {\n        UIModel.getInstance().leadHistoryRequest = new LeadHistoryRequest(\n          leadId,\n        );\n        const msg = UIModel.getInstance().leadHistoryRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_HISTORY, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Insert a lead to the given campaign\n       * @memberof AgentLibrary.Lead\n       * @param {object} dataObj agentId, campaignId, and lead info\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadInsert = function(dataObj, callback) {\n        UIModel.getInstance().leadInsertRequest = new LeadInsertRequest(\n          dataObj,\n        );\n        const msg = UIModel.getInstance().leadInsertRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_INSERT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Update lead information\n       * @memberof AgentLibrary.Lead\n       * @param {string} leadId Id for lead to update\n       * @param {string} leadPhone Lead phone number\n       * @param {object} baggage Object containing lead information\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadUpdate = function(\n        leadId,\n        leadPhone,\n        baggage,\n        callback,\n      ) {\n        UIModel.getInstance().leadUpdateRequest = new LeadUpdateRequest(\n          leadId,\n          leadPhone,\n          baggage,\n        );\n        const msg = UIModel.getInstance().leadUpdateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_UPDATE, callback);\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryChat(context) {\n      /**\n       * @namespace Chat\n       * @memberof AgentLibrary\n       */\n\n      const AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Set the agent chat alias\n       * @memberof AgentLibrary.Chat\n       * @param {string} alias The alias string to be used for agent chat messages\n       */\n      AgentLibrary.prototype.setChatAlias = function(alias) {\n        UIModel.getInstance().chatAliasRequest = new ChatAliasRequest(alias);\n        const msg = UIModel.getInstance().chatAliasRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to enter/exit a public chat room\n       * @memberof AgentLibrary.Chat\n       * @param {string} action \"ENTER\" | \"EXIT\"\n       * @param {integer} roomId Chat room id\n       */\n      AgentLibrary.prototype.publicChatRoom = function(action, roomId) {\n        UIModel.getInstance().chatRoomRequest = new ChatRoomRequest(\n          action,\n          'PUBLIC',\n          roomId,\n        );\n        const msg = UIModel.getInstance().chatRoomRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to enter/exit a private chat room\n       * @memberof AgentLibrary.Chat\n       * @param {string} action \"ENTER\" | \"EXIT\"\n       * @param {integer} roomId Chat room id\n       * @param {integer} agentOne Id for the logged in agent\n       * @param {integer} agentTwo Id for the agent or supervisor the logged in agent is chatting with\n       */\n      AgentLibrary.prototype.privateChatRoom = function(\n        action,\n        roomId,\n        agentOne,\n        agentTwo,\n      ) {\n        UIModel.getInstance().chatRoomRequest = new ChatRoomRequest(\n          action,\n          'PRIVATE',\n          roomId,\n          agentOne,\n          agentTwo,\n        );\n        const msg = UIModel.getInstance().chatRoomRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a chat message to the given room\n       * @memberof AgentLibrary.Chat\n       * @param {integer} roomId Id for chat room\n       * @param {string} message The message to be sent\n       * @param {function} [callback=null] Callback function when chat message received\n       */\n      AgentLibrary.prototype.sendChat = function(roomId, message, callback) {\n        UIModel.getInstance().chatSendRequest = new ChatSendRequest(\n          roomId,\n          message,\n        );\n        const msg = UIModel.getInstance().chatSendRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get list of supervisors for logged in agent\n       * @memberof AgentLibrary.Chat\n       * @param {function} [callback=null] Callback function when chat message received\n       */\n      AgentLibrary.prototype.getSupervisors = function(callback) {\n        UIModel.getInstance().supervisorListRequest = new SupervisorListRequest();\n        const msg = UIModel.getInstance().supervisorListRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SUPERVISOR_LIST, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send accept/decline response when a chat is presented to an agent\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} response ACCEPT|REJECT response\n       * @param {string} responseReason Agent reason for Reject\n       */\n      AgentLibrary.prototype.chatPresentedResponse = function(\n        uii,\n        messageId,\n        response,\n        responseReason,\n      ) {\n        UIModel.getInstance().chatPresentedRequest = new ChatPresentedResponseRequest(\n          uii,\n          messageId,\n          response,\n          responseReason,\n        );\n        const msg = UIModel.getInstance().chatPresentedRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send an external chat message\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId The agent associated with the chat\n       * @param {string} message The message sent by the agent\n       */\n      AgentLibrary.prototype.chatMessage = function(uii, agentId, message) {\n        UIModel.getInstance().chatMessageRequest = new ChatMessageRequest(\n          uii,\n          agentId,\n          message,\n          false,\n        );\n        const msg = UIModel.getInstance().chatMessageRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send an whisper type chat message\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId The agent associated with the chat\n       * @param {string} message The message sent by the agent\n       */\n      AgentLibrary.prototype.chatWhisper = function(uii, agentId, message) {\n        UIModel.getInstance().chatMessageRequest = new ChatMessageRequest(\n          uii,\n          agentId,\n          message,\n          true,\n        );\n        const msg = UIModel.getInstance().chatMessageRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a disposition to end a chat session\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {number} agentId The agent's id\n       * @param {number} dispositionId Id of the selected disposition\n       * @param {string} [notes=\"\"] Agent notes\n       * @param {boolean} sendAcknowlegement Whether or not to fire callback\n       * @param {object} [script=null] Script data associated with the chat session\n       */\n      AgentLibrary.prototype.chatDisposition = function(\n        uii,\n        agentId,\n        dispositionId,\n        notes,\n        sendAcknowlegement,\n        script,\n        sessionId,\n      ) {\n        UIModel.getInstance().chatDispositionRequest = new ChatDispositionRequest(\n          uii,\n          agentId,\n          dispositionId,\n          notes,\n          sendAcknowlegement,\n          script,\n          sessionId,\n        );\n        const msg = UIModel.getInstance().chatDispositionRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send the chat to a different Chat Queue\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {number} agentId The agent's id\n       * @param {number} chatQueueId Id of the Chat Queue to requeue to\n       * @param {number} skillId Skill id associated with the Chat Queue\n       * @param {boolean} [maintainAgent=fakse] Whether or not to keep the current agent connected to the chat on requeue\n       */\n      AgentLibrary.prototype.chatRequeue = function(\n        uii,\n        agentId,\n        chatQueueId,\n        skillId,\n        maintainAgent,\n      ) {\n        UIModel.getInstance().chatRequeueRequest = new ChatRequeueRequest(\n          uii,\n          agentId,\n          chatQueueId,\n          skillId,\n          maintainAgent,\n        );\n        const msg = UIModel.getInstance().chatRequeueRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sent when agent starts/stops typing\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} message Pending Agent message - sent to any monitoring Supervisors\n       */\n      AgentLibrary.prototype.chatTyping = function(uii, message) {\n        UIModel.getInstance().chatTypingRequest = new ChatTypingRequest(\n          uii,\n          message,\n        );\n        const msg = UIModel.getInstance().chatTypingRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to add a session on an existing chat\n       * @memberof AgentLibrary.Chat\n       * @param {string} monitorAgentId Agent id handling this chat, the agent being monitored\n       */\n      AgentLibrary.prototype.monitorAgentChats = function(monitorAgentId) {\n        UIModel.getInstance().monitorChatRequest = new MonitorChatRequest(\n          monitorAgentId,\n        );\n        const msg = UIModel.getInstance().monitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to stop a chat monitoring session for a specific agent\n       * @memberof AgentLibrary.Chat\n       * @param {string} monitorAgentId Agent id of agent being monitored\n       */\n      AgentLibrary.prototype.stopMonitoringChatsByAgent = function(\n        monitorAgentId,\n      ) {\n        UIModel.getInstance().stopMonitorChatRequest = new StopMonitorChatRequest(\n          monitorAgentId,\n        );\n        const msg = UIModel.getInstance().stopMonitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to drop all chat monitoring sessions for the logged in agent\n       * @memberof AgentLibrary.Chat\n       */\n      AgentLibrary.prototype.stopMonitoringAllAgentChats = function() {\n        UIModel.getInstance().stopMonitorChatRequest = new StopMonitorChatRequest();\n        const msg = UIModel.getInstance().stopMonitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to terminate an active chat session\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId Current logged in agent id\n       * @param {string} sessionId Chat session id\n       */\n      AgentLibrary.prototype.leaveChat = function(uii, agentId, sessionId) {\n        UIModel.getInstance().leaveChatRequest = new LeaveChatRequest(\n          uii,\n          agentId,\n          sessionId,\n        );\n        const msg = UIModel.getInstance().leaveChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request a list of active chats by agent id\n       * @memberof AgentLibrary.Chat\n       * @param {string} agentId Current logged in agent id\n       * @param {string} monitorAgentId Agent id handling chats\n       * @param {function} [callback=null] Callback function when chat-list request received\n       */\n      AgentLibrary.prototype.chatList = function(\n        agentId,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().chatListRequest = new ChatListRequest(\n          agentId,\n          monitorAgentId,\n        );\n        const msg = UIModel.getInstance().chatListRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT_LIST, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * set chat in state of agent-chat-end\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId Current logged in agent id\n       */\n\n      AgentLibrary.prototype.chatAgentEnd = function(agentId, uii) {\n        UIModel.getInstance().chatAgentEnd = new ChatAgentEndRequest(\n          agentId,\n          uii,\n        );\n        const msg = UIModel.getInstance().chatAgentEnd.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends chat state change message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} chatState The base chat state <br />\n       * CHAT-AVAILABLE | CHAT-PRESENTED | CHAT-ENGAGED | CHAT-RNA\n       * @param {function} [callback=null] Callback function when chatState response received\n       */\n      AgentLibrary.prototype.setChatState = function(chatState, callback) {\n        UIModel.getInstance().chatStateRequest = new ChatStateRequest(\n          chatState,\n        );\n        const msg = UIModel.getInstance().chatStateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT_STATE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * initialize a chat session by sending a manual outbound sms\n       * @memberof AgentLibrary.Chat\n       * @param {string} agentId Current logged in agent id\n       * @param {number} chatQueueId Id of the Chat Queue to send this sms through\n       * @param {number} ani to receive the sms\n       * @param {number} dnis to be used for the sms\n       * @param {string} message content\n       */\n\n      AgentLibrary.prototype.sendManualOutboundSms = function(\n        agentId,\n        chatQueueId,\n        ani,\n        dnis,\n        message,\n      ) {\n        UIModel.getInstance().chatManualSms = new ChatManualSmsRequest(\n          agentId,\n          chatQueueId,\n          ani,\n          dnis,\n          message,\n        );\n        const msg = UIModel.getInstance().chatManualSms.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryLogger(context) {\n      const AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openLogger = function() {\n        const instance = this;\n\n        if ('indexedDB' in context) {\n          // Open database\n          const dbRequest = indexedDB.open('AgentLibraryLogging', 6); // version number\n\n          dbRequest.onerror = function(event) {\n            console.error('Error requesting DB access');\n          };\n\n          dbRequest.onsuccess = function(event) {\n            instance._db = event.target.result;\n\n            // prune items older than 2 days\n            instance.purgeLog(instance._db, 'logger');\n\n            instance._db.onerror = function(event) {\n              // Generic error handler for all errors targeted at this database requests\n              console.error(\n                `AgentLibrary: Database error - ${event.target.errorCode}`,\n              );\n            };\n\n            instance._db.onsuccess = function(event) {\n              console.log('AgentLibrary: Successful logging of record');\n            };\n          };\n\n          // This event is only implemented in recent browsers\n          dbRequest.onupgradeneeded = function(event) {\n            instance._db = event.target.result;\n\n            // Create an objectStore to hold log information. Key path should be unique\n            if (!instance._db.objectStoreNames.contains('logger')) {\n              const objectStore = instance._db.createObjectStore('logger', {\n                autoIncrement: true,\n              });\n\n              // simple indicies: index name, index column path\n              objectStore.createIndex('logLevel', 'logLevel', {\n                unique: false,\n              });\n              objectStore.createIndex('dts', 'dts', { unique: false });\n\n              // index for logLevel and date range\n              const name = 'levelAndDate';\n              const keyPath = ['logLevel', 'dts'];\n              objectStore.createIndex(name, keyPath, { unique: false });\n            }\n          };\n        } else {\n          console.warn(\n            'AgentLibrary: indexedDB NOT supported by your Browser.',\n          );\n        }\n      };\n\n      /**\n       * Purge records older than 2 days from the AgentLibrary log\n       * @memberof AgentLibrary\n       */\n      AgentLibrary.prototype.purgeLog = function(db, store) {\n        const instance = this;\n\n        if (db) {\n          try {\n            const transaction = db.transaction([store], 'readwrite');\n            const objectStore = transaction.objectStore(store);\n            const dateIndex = objectStore.index('dts');\n            const endDate = new Date();\n            endDate.setDate(endDate.getDate() - 2); // two days ago\n\n            const range = IDBKeyRange.upperBound(endDate);\n            dateIndex.openCursor(range).onsuccess = function(event) {\n              const cursor = event.target.result;\n              if (cursor) {\n                objectStore.delete(cursor.primaryKey);\n                cursor.continue();\n              }\n            };\n          } catch (err) {\n            // no op\n          }\n        }\n      };\n\n      /**\n       * Clear the AgentLibrary log by emptying the IndexedDB object store\n       * @memberof AgentLibrary\n       */\n      AgentLibrary.prototype.clearLog = function(db) {\n        const transaction = db.transaction(['logger'], 'readwrite');\n        const objectStore = transaction.objectStore('logger');\n\n        const objectStoreRequest = objectStore.clear();\n\n        objectStoreRequest.onsuccess = function(event) {\n          console.log('AgentLibrary: logger database cleared');\n        };\n      };\n\n      AgentLibrary.prototype.deleteDB = function(dbName) {\n        dbName = dbName || 'AgentLibraryLogging';\n        const DBDeleteRequest = indexedDB.deleteDatabase(dbName);\n\n        DBDeleteRequest.onerror = function(event) {\n          console.log('Error deleting database.', dbName);\n        };\n\n        DBDeleteRequest.onsuccess = function(event) {\n          console.log('Database', dbName, 'deleted successfully');\n        };\n      };\n\n      AgentLibrary.prototype.getLogRecords = function(\n        logLevel,\n        startDate,\n        endDate,\n        maxRows,\n        callback,\n      ) {\n        logLevel = logLevel || '';\n        const instance = this;\n        const transaction = instance._db.transaction(['logger'], 'readonly');\n        const objStore = transaction.objectStore('logger');\n        let index = null;\n        let cursor = null;\n        let range = null;\n        const limit = maxRows || 100;\n        utils.setCallback(instance, CALLBACK_TYPES.LOG_RESULTS, callback);\n\n        if (\n          logLevel !== '' &&\n          logLevel.toUpperCase() !== 'ALL' &&\n          logLevel.toUpperCase() !== 'NO-STATS'\n        ) {\n          // looking for specific log level type\n          if (startDate && endDate) {\n            const lowerBound = [logLevel.toLowerCase(), startDate];\n            const upperBound = [logLevel.toLowerCase(), endDate];\n            range = IDBKeyRange.bound(lowerBound, upperBound);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound([logLevel.toLowerCase(), startDate]);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound([logLevel.toLowerCase(), endDate]);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            const levelAndDateReturn = [];\n            let idxLevelAndDate = 0;\n            index = objStore.index('levelAndDate');\n            index.openCursor(range, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxLevelAndDate < limit) {\n                levelAndDateReturn.push(cursor.value);\n                idxLevelAndDate += 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  levelAndDateReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all within log level\n            const logLevelReturn = [];\n            let idxLogLevel = 0;\n            index = objStore.index('logLevel');\n            index.openCursor(logLevel, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxLogLevel < limit) {\n                logLevelReturn.push(cursor.value);\n                idxLogLevel += 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  logLevelReturn,\n                );\n              }\n            };\n          }\n        } else if (logLevel.toUpperCase() === 'NO-STATS') {\n          // give us all types except stats\n          if (startDate && endDate) {\n            range = IDBKeyRange.bound(startDate, endDate);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound(startDate);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound(endDate);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            const dtsNoStatsReturn = [];\n            let idxDTSNoStats = 0;\n            index = objStore.index('dts');\n\n            index.openCursor(range, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxDTSNoStats < limit) {\n                if (cursor.value.logLevel !== 'stats') {\n                  dtsNoStatsReturn.push(cursor.value);\n                  idxDTSNoStats += 1;\n                }\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  dtsNoStatsReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all records\n            const noStatsReturn = [];\n            let idxNoStats = 0;\n            objStore.openCursor().onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxNoStats < limit) {\n                if (cursor.value.logLevel !== 'stats') {\n                  noStatsReturn.push(cursor.value);\n                  idxNoStats += 1;\n                }\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  noStatsReturn,\n                );\n              }\n            };\n          }\n        } else {\n          // give us all log level types\n          if (startDate && endDate) {\n            range = IDBKeyRange.bound(startDate, endDate);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound(startDate);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound(endDate);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            const dtsReturn = [];\n            let idxDTS = 0;\n            index = objStore.index('dts');\n\n            index.openCursor(range, 'prev').onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxDTS < limit) {\n                dtsReturn.push(cursor.value);\n                idxDTS += 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  dtsReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all records\n            const allValsReturn = [];\n            let idxAll = 0;\n            objStore.openCursor().onsuccess = function(event) {\n              cursor = event.target.result;\n              if (cursor && idxAll < limit) {\n                allValsReturn.push(cursor.value);\n                idxAll += 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  allValsReturn,\n                );\n              }\n            };\n          }\n        }\n\n        return null;\n      };\n    }\n\n    function initAgentLibraryMultisocket(context) {\n      /**\n       * @namespace Multisocket\n       * @memberof AgentLibrary\n       */\n\n      const AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Method to request call details from other tabs using the broadcast channel, for multisocket\n       */\n      AgentLibrary.prototype.loadCurrentCall = function(callback) {\n        broadcastChannelHelper.requestCurrentCall(callback);\n      };\n    }\n    function initAgentLibraryConsoleLogger(context) {\n      const AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openConsoleLogger = function() {\n        const instance = this;\n\n        if ('indexedDB' in context) {\n          const dbRequest = indexedDB.open('AgentLibraryConsoleLogging', 1);\n\n          dbRequest.onerror = function(event) {\n            console.error('Error requesting DB access');\n          };\n\n          dbRequest.onsuccess = function(event) {\n            instance._consoleDb = event.target.result;\n\n            // prune items older than 2 days\n            instance.purgeLog(instance._consoleDb, 'consoleLogger');\n\n            instance._consoleDb.onerror = function(event) {\n              // Generic error handler for all errors targeted at this database requests\n              console.error(\n                `AgentLibrary: Database error - ${event.target.errorCode}`,\n              );\n            };\n\n            instance._consoleDb.onsuccess = function(event) {\n              console.log('AgentLibrary: Successful logging of record');\n            };\n\n            _overrideConsole();\n          };\n\n          // This event is only implemented in recent browsers\n          dbRequest.onupgradeneeded = function(event) {\n            instance._consoleDb = event.target.result;\n\n            // Create an objectStore to hold log information. Key path should be unique\n            if (\n              !instance._consoleDb.objectStoreNames.contains('consoleLogger')\n            ) {\n              const objectStore = instance._consoleDb.createObjectStore(\n                'consoleLogger',\n                { autoIncrement: true },\n              );\n\n              // simple indicies: index name, index column path\n              objectStore.createIndex('type', 'type', { unique: false });\n              objectStore.createIndex('dts', 'dts', { unique: false });\n              objectStore.createIndex('agentId', 'agentId', { unique: false });\n\n              // index for type and agent id\n              const name = 'typeAndAgent';\n              const keyPath = ['type', 'agentId'];\n              objectStore.createIndex(name, keyPath, { unique: false });\n            }\n\n            _overrideConsole();\n          };\n        } else {\n          console.warn(\n            'AgentLibrary: indexedDB NOT supported by your Browser.',\n          );\n        }\n      };\n\n      AgentLibrary.prototype.getConsoleLogRecords = function(type, callback) {\n        const agentId = UIModel.getInstance().agentSettings.agentId; // only return records for this agent id\n        const instance = this;\n        const transaction = instance._consoleDb.transaction(\n          ['consoleLogger'],\n          'readonly',\n        );\n        const objStore = transaction.objectStore('consoleLogger');\n        let index = null;\n        let cursor = null;\n        let range = null;\n        const limit = 5000;\n\n        utils.setCallback(\n          instance,\n          CALLBACK_TYPES.LOG_CONSOLE_RESULTS,\n          callback,\n        );\n\n        const result = [];\n        if (type) {\n          // everything with this type\n          index = objStore.index('typeAndAgent');\n          range = IDBKeyRange.only([type.toUpperCase(), agentId]);\n        } else {\n          index = objStore.index('agentId');\n          range = IDBKeyRange.only(agentId);\n        }\n\n        let count = 0;\n        index.openCursor(range, 'prev').onsuccess = function(event) {\n          cursor = event.target.result;\n          if (cursor && count < limit) {\n            result.push(cursor.value);\n            count++;\n            cursor.continue();\n          } else {\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOG_CONSOLE_RESULTS,\n              result,\n            );\n          }\n        };\n      };\n\n      function _overrideConsole() {\n        // override the window.console functions, process as normal then save to the local db\n        const browserConsole = { ...window.console };\n        (function(defaultConsole) {\n          let instance;\n          if (\n            UIModel &&\n            UIModel.getInstance() &&\n            UIModel.getInstance().libraryInstance\n          ) {\n            instance = UIModel.getInstance().libraryInstance;\n          } else {\n            // fallback\n            instance = new AgentLibrary();\n          }\n\n          const agentSettings = UIModel.getInstance().agentSettings;\n\n          function _getRecord(type, text) {\n            if (typeof text === 'function') {\n              text = text.toString();\n            } else if (typeof text === 'object') {\n              try {\n                text = JSON.stringify(text);\n              } catch (e) {}\n            }\n\n            return {\n              type,\n              message: text,\n              dts: new Date(),\n              agentId: agentSettings.agentId,\n              agentName: `${agentSettings.firstName} ${agentSettings.lastName}`,\n            };\n          }\n\n          function _saveRecord(type, text) {\n            if (instance._consoleDb) {\n              const transaction = instance._consoleDb.transaction(\n                ['consoleLogger'],\n                'readwrite',\n              );\n              const store = transaction.objectStore('consoleLogger');\n\n              store.add(_getRecord(type, text));\n            }\n          }\n\n          window.console.log = function(text) {\n            defaultConsole.log(text);\n            _saveRecord('LOG', text);\n          };\n          window.console.info = function(text) {\n            defaultConsole.info(text);\n            _saveRecord('INFO', text);\n          };\n          window.console.warn = function(text) {\n            defaultConsole.warn(text);\n            _saveRecord('WARN', text);\n          };\n          window.console.error = function(text) {\n            defaultConsole.error(text);\n            _saveRecord('ERROR', text);\n          };\n        })(browserConsole);\n      }\n    }\n\n    function initAgentLibrarySoftphoneService(context) {\n      /**\n       * @namespace Softphone\n       * @memberof AgentLibrary\n       */\n\n      const AgentLibrary = context.AgentLibrary;\n\n      // ////////////////////\n      // PUBLIC FUNCTIONS //\n      // ////////////////////\n      /* These functions are available externally to agent-js or other parent apps */\n\n      /**\n       * Initializes the SIP library, sets up callback functions\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipInit = function() {\n        const model = UIModel.getInstance();\n        const softphoneSettings = model.softphoneSettings;\n\n        // if webRtc settings not yet set, do so now\n        if (\n          softphoneSettings.uri === '' ||\n          softphoneSettings.wsServers.length === 0 ||\n          softphoneSettings.displayName === '' ||\n          softphoneSettings.authorizationUser === ''\n        ) {\n          SoftphoneService.setupWebRtcServer();\n        }\n\n        if (softphoneSettings.wsServers.length > 0) {\n          const webRtc = new CFSimpleSip(_getSipConfig());\n\n          // callbacks\n          webRtc.on('connected', _connected);\n          webRtc.on('ended', _ended);\n          webRtc.on('registered', _registered);\n          webRtc.on('unregistered', _unregistered);\n          webRtc.on('registrationFailed', _registrationFailed);\n          webRtc.on('ringing', _ringing);\n          webRtc.on('mute', _mute);\n          webRtc.on('unmute', _unmute);\n\n          // after 15 sec of no registration response, rotate the registrar\n          softphoneSettings.registerPending = setTimeout(\n            _handleNoRegisterResponse,\n            15 * 1000,\n          );\n          softphoneSettings.webRtc = webRtc; // set back on the UIModel instance\n        } else {\n          console.error('Unable to setup WebRtc server');\n        }\n      };\n\n      /**\n       * Sends a session.accept response to a SIP invite event.\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipAnswer = function() {\n        const webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc) {\n          webRtc.answer();\n        }\n      };\n\n      /**\n       * Sends a session.reject response to a SIP invite event.\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipReject = function() {\n        const webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc && webRtc.reject) {\n          webRtc.reject();\n        }\n      };\n\n      /**\n       * Request microphone access, if already registered, call hangup\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipRegister = function() {\n        const model = UIModel.getInstance();\n        const webRtc = model.softphoneSettings.webRtc;\n\n        try {\n          // enable microphone access notification if not already done\n          if (\n            window.webkitNotifications &&\n            window.webkitNotifications.checkPermission() !== 0\n          ) {\n            window.webkitNotifications.requestPermission();\n          }\n\n          if (!webRtc) {\n            return;\n          }\n\n          // if already registered, hangup\n          if (model.softphoneSettings.isRegistered) {\n            model.libraryInstance.sipHangUp();\n          }\n        } catch (e) {\n          console.error(`sip reg error:${e}`);\n        }\n      };\n\n      /**\n       * Sends session.cancel if connected, or session.bye if not connected to a call\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipHangUp = function() {\n        const webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc && webRtc.hangup) {\n          webRtc.hangup();\n        }\n      };\n\n      /**\n       * Sends session.dtmf for the tone specified\n       * @memberof AgentLibrary.Softphone\n       * @param {string} dtmf The dtmf tone to send\n       */\n      AgentLibrary.prototype.sipSendDTMF = function(dtmf) {\n        const webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc) {\n          webRtc.sendDTMF(dtmf);\n        }\n      };\n\n      /**\n       * Toggles call audio on/off\n       * @memberof AgentLibrary.Softphone\n       * @param {boolean} state The dtmf tone to send\n       */\n      AgentLibrary.prototype.sipToggleMute = function(state) {\n        const softphoneSettings = UIModel.getInstance().softphoneSettings;\n        const webRtc = softphoneSettings.webRtc;\n        const muteActive = softphoneSettings.muteActive;\n\n        if (webRtc) {\n          if (muteActive || state === false) {\n            webRtc.unmute();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SIP_UNMUTE,\n              { message: 'Call unmuted' },\n            );\n          } else {\n            webRtc.mute();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SIP_MUTE,\n              { message: 'Call muted' },\n            );\n          }\n        }\n      };\n\n      AgentLibrary.prototype.switchSoftphoneRegistrar = function(\n        maintainOffhook,\n        autoStartOffhook,\n      ) {\n        const model = UIModel.getInstance();\n\n        if (typeof autoStartOffhook === 'undefined') {\n          autoStartOffhook = true;\n        }\n        if (\n          model.softphoneSettings.attemptingSoftphoneReconnect &&\n          autoStartOffhook\n        ) {\n          _updateOHFlags(maintainOffhook, autoStartOffhook);\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_SWITCH_REGISTRAR,\n            {\n              message: 'Updating offhook flags, set status message',\n              status: 'UPDATE',\n            },\n          );\n        } else {\n          model.libraryInstance.resetSoftphoneSession({\n            maintainOH: maintainOffhook,\n            autoStartOH: autoStartOffhook,\n          });\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_SWITCH_REGISTRAR,\n            { message: 'Triggering softphone registrar swap', status: 'RESET' },\n          );\n        }\n      };\n\n      AgentLibrary.prototype.resetSoftphoneSession = function(offhookParams) {\n        const model = UIModel.getInstance();\n        const softphoneSettings = model.softphoneSettings;\n        if (\n          softphoneSettings.isRegistered &&\n          !softphoneSettings.attemptingSoftphoneReconnect\n        ) {\n          _reset(); // clear current SIP.js object\n          _rotateWebRtcServer();\n          SoftphoneService.setupWebRtcServer();\n\n          if (offhookParams) {\n            if (offhookParams.maintainOH === 'null') {\n              offhookParams.maintainOH = softphoneSettings.maintainOH; // default to model setting\n            }\n            _updateOHFlags(offhookParams.maintainOH, offhookParams.autoStartOH);\n          }\n\n          model.libraryInstance.sipInit();\n          model.libraryInstance.sipRegister();\n        }\n      };\n\n      // //////////////////////\n      // INTERNAL FUNCTIONS //\n      // //////////////////////\n      /* These functions are globally available to the AgentSDK app */\n\n      var SoftphoneService = {\n        setupWebRtcServer() {\n          const model = UIModel.getInstance();\n          const softphoneSettings = model.softphoneSettings;\n\n          // webRtcServerInfo format for Legacy\n          // [\n          //     {\n          //        \"transport\": \"wss\",\n          //        \"username\": \"yadvendra_agent\",\n          //        \"password\": \"oct@2018\",\n          //        \"domain\": \"d03-reg1.vacd.biz\",\n          //        \"outboundProxy\": \"d03-reg1.vacd.biz:8089/freeswitch\"\n          //    }\n          // ]\n          //\n          // webRtcServerInfo format for RC Int API\n          // [\n          //     {\n          //        \"transport\": \"WSS\",\n          //        \"username\": \"18662032059*101\",\n          //        \"password\": \"B77O85vO\",\n          //        \"authorizationId\": \"400017513008\",\n          //        \"domain\": \"sip-cfintams.lab.nordigy.ru\",\n          //        \"outboundProxy\": \"webphone-sip-cfintams.lab.nordigy.ru:8083\"\n          //    }\n          // ]\n          const sipInfo = _getCurrentWebRtcServerInfo();\n          if (sipInfo !== null) {\n            const username = sipInfo.username.toLowerCase();\n            const webRtcServer = `${sipInfo.transport.toLowerCase()}://${\n              sipInfo.outboundProxy\n            }`; // e.g. \"wss://aws87-f06-ccw01.vacd.biz:8089/freeswitch\";\n\n            softphoneSettings.uri = `${utils.escapeSoftphoneUsername(\n              username,\n            )}@${sipInfo.domain}`;\n            softphoneSettings.wsServers = [webRtcServer];\n            softphoneSettings.displayName = username;\n            softphoneSettings.authorizationUser = sipInfo.authorizationId;\n\n            softphoneSettings.sipPassword = sipInfo.password;\n            softphoneSettings.sipDialDest = `sip:${softphoneSettings.uri}`;\n\n            return {\n              webRtcServer,\n              username,\n              password: softphoneSettings.sipPassword,\n              domain: sipInfo.domain || null,\n              dialDest: softphoneSettings.sipDialDest || null,\n              uri: softphoneSettings.uri || null,\n              wsServers: softphoneSettings.wsServers || [],\n            };\n          }\n\n          return null;\n        },\n      };\n\n      // /////////////////////\n      // PRIVATE FUNCTIONS //\n      // /////////////////////\n      /* These functions are just used within this softphoneService.js file */\n\n      function _getSipConfig() {\n        const remoteAudioElement = document.getElementById('remoteAudio'); // audio node on index.html\n        const model = UIModel.getInstance();\n        const softphoneSettings = model.softphoneSettings;\n        const config = {\n          media: {\n            remote: {\n              audio: remoteAudioElement,\n            },\n          },\n          ua: {\n            displayName: utils.escapeSoftphoneUsername(\n              softphoneSettings.displayName,\n            ),\n            authorizationUser: utils.escapeSoftphoneUsername(\n              softphoneSettings.authorizationUser,\n            ),\n            password: softphoneSettings.sipPassword,\n            uri: softphoneSettings.uri,\n            wsServers: softphoneSettings.wsServers,\n            traceSip: true,\n            registerExpires: 60,\n            userAgentString: navigator.userAgent,\n          },\n        };\n        return config;\n      }\n\n      function _handleNoRegisterResponse() {\n        // registration timeout reached, rotate registrar\n        const model = UIModel.getInstance();\n        const softphoneSettings = model.softphoneSettings;\n\n        // we want to force a registrar refresh\n        softphoneSettings.isRegistered = true;\n\n        model.libraryInstance.switchSoftphoneRegistrar(\n          softphoneSettings.maintainOH,\n          softphoneSettings.autoStartOH,\n        );\n      }\n\n      // clear registration timeout\n      function _registerHasResponse() {\n        clearTimeout(UIModel.getInstance().softphoneSettings.registerPending);\n      }\n\n      function _rotateWebRtcServer() {\n        const softphoneSettings = UIModel.getInstance().softphoneSettings;\n        const sipInfo = softphoneSettings.sipInfo;\n        if (sipInfo.length > 1) {\n          sipInfo.push(sipInfo.shift());\n          softphoneSettings.attemptingSoftphoneReconnect = true;\n        }\n      }\n\n      function _updateOHFlags(maintainOffhook, autoStartOffhook) {\n        const softphoneSettings = UIModel.getInstance().softphoneSettings;\n        softphoneSettings.maintainOH = maintainOffhook;\n        softphoneSettings.autoStartOH = autoStartOffhook;\n      }\n\n      function _getCurrentWebRtcServerInfo() {\n        const softphoneSettings = UIModel.getInstance().softphoneSettings;\n        return softphoneSettings.sipInfo != null &&\n          softphoneSettings.sipInfo.length > 0\n          ? softphoneSettings.sipInfo[0]\n          : null;\n      }\n\n      // clear webRtc settings, hangup, unregister\n      function _reset() {\n        const model = UIModel.getInstance();\n        let webRtc = model.softphoneSettings.webRtc;\n        if (webRtc && webRtc.ua) {\n          const opts = {\n            all: true,\n          };\n          model.libraryInstance.offhookTerm(); // TODO - dlb - set up callback with agent-js??\n          webRtc.hangup();\n          webRtc.ua.unregister(opts);\n\n          webRtc.removeAllListeners('connected');\n          webRtc.removeAllListeners('ended');\n          webRtc.removeAllListeners('registered');\n          webRtc.removeAllListeners('unregistered');\n          webRtc.removeAllListeners('registrationFailed');\n          webRtc.removeAllListeners('ringing');\n          webRtc.removeAllListeners('mute');\n          webRtc.removeAllListeners('unmute');\n\n          webRtc.ua.stop();\n          webRtc = null;\n          model.softphoneSettings.webRtc = webRtc; // set back on model\n          model.softphoneSettings.isRegistered = false;\n          model.softphoneSettings.muteActive = false;\n          model.softphoneSettings.registerPending = null;\n          model.softphoneSettings.uri = '';\n        }\n      }\n\n      // /////////////////////////////\n      // SIP JS CALLBACK FUNCTIONS //\n      // /////////////////////////////\n      /* These functions bubble up SIP callbacks to the UI */\n\n      function _connected() {\n        // send response to agent-js\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_CONNECTED,\n          { message: 'SIP connected' },\n        );\n      }\n\n      function _ended() {\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_ENDED,\n          { message: 'SIP ended' },\n        );\n      }\n\n      function _registered() {\n        const model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = true;\n\n        // check if dial destination has changed to a new registrar,\n        // but not just with the IQ replacement of @RC_SOFTPHONE\n        if (\n          model.agentSettings.dialDest !==\n            model.softphoneSettings.sipDialDest &&\n          model.agentSettings.dialDest.indexOf('@RC_SOFTPHONE') === -1\n        ) {\n          // update agent dial dest on instance\n          model.agentSettings.dialDest = JSON.parse(\n            JSON.stringify(model.softphoneSettings.sipDialDest),\n          );\n\n          // notify agent of change\n          const responseObj = {\n            message: 'SIP dial destination changed',\n            dialDest: model.agentSettings.dialDest,\n            maintainOH: model.softphoneSettings.maintainOH,\n            autoStartOH: model.softphoneSettings.autoStartOH,\n          };\n\n          if (!model.softphoneSettings.autoStartOH) {\n            model.softphoneSettings.attemptingSoftphoneReconnect = false; // done with reconnect steps for now\n          }\n\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_DIAL_DEST_CHANGED,\n            responseObj,\n          );\n\n          // update dial destination on agent login record, send request to IQ\n          model.libraryInstance.updateDialDestination(\n            model.agentSettings.dialDest,\n            true,\n          );\n        }\n\n        utils.fireCallback(\n          model.libraryInstance,\n          CALLBACK_TYPES.SIP_REGISTERED,\n          { message: 'SIP registered' },\n        );\n      }\n\n      function _unregistered() {\n        const model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = false;\n        _reset();\n        model.libraryInstance.sipInit();\n      }\n\n      function _registrationFailed() {\n        _registerHasResponse();\n        UIModel.getInstance().softphoneSettings.isRegistered = false;\n        _reset();\n      }\n\n      function _ringing(notif) {\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_RINGING,\n          { message: 'SIP ringing', data: notif },\n        );\n      }\n\n      function _mute() {\n        UIModel.getInstance().softphoneSettings.muteActive = true;\n      }\n\n      function _unmute() {\n        UIModel.getInstance().softphoneSettings.muteActive = false;\n      }\n    }\n    const initAgentLibrary = function(context) {\n      initAgentLibraryCore(context);\n      initAgentLibrarySocket(context);\n      initAgentLibraryAgent(context);\n      initAgentLibraryCall(context);\n      initAgentLibraryLead(context);\n      initAgentLibraryChat(context);\n      initAgentLibraryLogger(context);\n      initAgentLibraryConsoleLogger(context);\n      initAgentLibrarySoftphoneService(context);\n      initAgentLibraryMultisocket(context);\n\n      return context.AgentLibrary;\n    };\n\n    return initAgentLibrary(this);\n  }.call(this, this);\n}.call(window));\n"],"file":"agentLibrary.js"}