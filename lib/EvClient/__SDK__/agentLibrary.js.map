{"version":3,"sources":["lib/EvClient/__SDK__/agentLibrary.js"],"names":["C","STATUS_NULL","STATUS_NEW","STATUS_CONNECTING","STATUS_CONNECTED","STATUS_COMPLETED","CFSimpleSip","options","media","remote","video","audio","Error","browserUa","window","navigator","userAgent","toLowerCase","isSafari","isFirefox","indexOf","sessionDescriptionHandlerFactoryOptions","peerConnectionOptions","iceCheckingTimeout","rtcConfiguration","iceServers","urls","modifiers","SIP","Web","Modifiers","stripG722","alwaysAcquireMediaFirst","addMidLines","ua","uri","anonymous","UA","authorizationUser","password","displayName","userAgentString","USER_AGENT","register","registerExpires","transportOptions","traceSip","wsServers","maxReconnectionAttempts","dtmfType","RTP","state","logger","getLogger","on","emit","bind","session","warn","reject","setupSession","message","prototype","Object","create","EventEmitter","call","destination","checkRegistration","autoplay","local","volume","invite","sessionDescriptionHandlerOptions","constraints","answer","accept","hangup","cancel","bye","hold","local_hold","mute","log","unhold","unmute","toggleMute","sendDTMF","tone","dtmf","isRegistered","setupRemoteMedia","pc","sessionDescriptionHandler","peerConnection","remoteStream","getReceivers","MediaStream","forEach","receiver","track","addTrack","getRemoteStreams","srcObject","play","setupLocalMedia","localStream","getSenders","sender","kind","getLocalStreams","cleanupMedia","pause","onProgress","onAccepted","onEnded","onFailed","destroyMedia","close","enabled","stream","getAudioTracks","getVideoTracks","global","AddSessionNotification","processResponse","notification","model","UIModel","getInstance","notif","ui_notification","sessionAgentId","utils","getText","incrementTotalCalls","agentSettings","agentId","currentCall","sessionId","monitorAgentId","sessionType","allowControl","uii","isMonitoring","monitoringType","isBargeInMonitor","notCurrentAgent","notSessionOne","shouldTrackSession","transferSessions","session_id","onCall","formattedResponse","buildDefaultResponse","status","phone","sessionLabel","monitoring","recordingUrl","AdminDebugEmailNotification","emailTo","requestedBy","DialGroupChangeNotification","origLoginType","loginRequest","loginType","newDgId","dialGroupChangeNotification","dialGroupId","detail","dialGroupName","dialGroupDesc","DialGroupChangePendingNotification","pendingDialGroupChange","parseInt","update_from_adminui","updateDGFromAdminUI","updateFromAdminUI","DirectAgentTransferNotification","ani","dnis","sourceType","sourceId","sourceName","voicemailUrl","DropSessionNotification","sessionUII","transfer","console","logMessage","LOG_LEVELS","DEBUG","transferEnd","EarlyUiiNotification","EndCallNotification","libInstance","endCallNotification","duration","termParty","termReason","callState","onManualOutdial","loginAgent","queueIds","configRequest","chatIds","skillProfileId","dialDest","outdialDispositions","dispositions","length","surveyPopType","pingIntervalId","setInterval","sendPingCallMessage","callDts","dispositionTimeout","GatesChangeNotification","newAssignedGates","availableQueues","inboundSettings","assignedGateIds","split","a","id","foundGate","findObjById","push","gate","gateId","gateName","gateDesc","defaultDestOverride","isAgentSelectable","queues","JSON","parse","stringify","GenericNotification","messageCode","NewCallNotification","newCall","queueDts","queueTime","callType","appUrl","allowHold","allowTransfer","allowManualInternationalTransfer","allowDirectAgentTransfer","allowHangup","allowRequeue","allowEndCallForEveryone","scriptId","scriptVersion","surveyId","requeueType","hangupOnDisposition","queue","processResponseCollection","agentRecording","requeueShortcuts","baggage","surveyResponse","scriptResponse","transferPhoneBook","lead","extra_data","extraDatas","extraData","key","e","customLabels","notifLabels","result","savedModel","script_result","results","keys","idx","value","err","entrys","disposition","isCampaign","d","disp","isComplete","requireNote","saveSurvey","xfer","isDefault","callTokens","buildCallTokenMap","auxPhone","transferNumber","agentDailyStats","currCallTime","tokens","generic_key_value_pairs","keyValuePairs","keyValuePairsStr","parseKeyValuePairsFromString","keyValue","number","name","description","any","error","firstName","lastName","externalAgentId","agentType","email","username","PendingChatDispNotification","PendingDispNotification","PreviewLeadStateNotification","messageId","requestId","leadState","callback","ReverseMatchNotification","TcpaSafeLeadStateNotification","AckRequest","audioType","response","resp","ui_response","type","WARN","AgentStateRequest","agentState","agentAuxState","toUpperCase","formatJSON","msg","ui_request","MESSAGE_TYPES","AGENT_STATE","getMessageId","response_to","agent_id","agent_aux_state","prevState","currState","prevAuxState","currAuxState","previousState","currentState","previousAuxState","currentAuxState","prevStateStr","currStateStr","currentStateLabel","agentStatePacket","AuthenticateRequest","config","platformId","rcAccessToken","tokenType","engageAccessToken","authType","sendHttpRequest","authenticateRequest","AUTHENTICATE_TYPES","USERNAME_PASSWORD","_buildHttpRequest","RC_TOKEN","rcTokenType","ENGAGE_TOKEN","authenticatePacket","accessToken","refreshToken","socketUrl","iqUrl","socketPort","port","agents","agentDetails","mainAccountId","path","queryParams","baseUrl","authHost","baseAuthUri","params","headers","errorMsg","HttpService","httpPost","then","authenticateResponse","fireCallback","libraryInstance","CALLBACK_TYPES","AUTHENTICATE","errResponse","errMsg","toString","httpGet","BargeInRequest","BARGE_IN","audio_state","monitor_agent_id","CallNotesRequest","notes","CALL_NOTES","CallbackCancelRequest","leadId","CALLBACK_CANCEL","lead_id","CallbacksPendingRequest","CALLBACK_PENDING","leadsRaw","leads","Array","isArray","l","leadRaw","parseLead","pendingCallbacks","auxData1","auxData2","auxData3","auxData4","auxData5","dialTime","externId","midName","sufix","title","address1","address2","city","zip","gateKeeper","CampaignDispositionsRequest","campaignId","CAMPAIGN_DISPOSITIONS","campaign_id","outboundSettings","campaignDispositions","ChatStateRequest","chatState","CHAT_STATE","currentChatState","chatStatePacket","XferColdRequest","callerId","sipHeaders","countryId","fields","i","fieldObj","XFER_COLD","dial_dest","caller_id","country_id","xfer_header","DirectAgentTransfer","targetAgentId","transferType","DIRECT_AGENT_TRANSFER","target_agent_id","transfer_type","DirectAgentTransferList","DIRECT_AGENT_TRANSFER_LIST","DispositionRequest","dispId","callbackDTS","contactForwardNumber","survey","OUTDIAL_DISPOSITION","disposition_id","call_back","call_back_DTS","contact_forwarding","outbound_externid","pending_request_id","INBOUND_DISPOSITION","obj","leadField","DispositionManualPassRequest","manual_disp","request_key","extern_id","ExtensionPresenceRequest","getExtensionPresenceInfo","extensionIds","_getExtensionPresenceInfo","extensionPresenceResponse","baseApiUri","extensionPresenceRequest","EXTENSION_PRESENCE","HangupRequest","resetPendingDisp","HANGUP","cancel_pending_disp","HoldRequest","holdState","HOLD","hold_state","currUII","onHold","LeadHistoryRequest","LEAD_HISTORY","histResponse","history","leadHistory","LeadInsertRequest","dataObj","agent_reserved","dialable","LEAD_INSERT","lead_phone","call_back_dts","callback_dts","first_name","mid_name","last_name","suffix","gate_keeper","aux_data1","aux_data2","aux_data3","aux_data4","aux_data5","LeadUpdateRequest","leadPhone","_formatBaggage","LEAD_UPDATE","bag","LoginRequest","isForce","updateLogin","checkExistingIds","chatSettings","availableChatQueues","availableSkillProfiles","availableOutdialGroups","isLoggedIn","validateDest","LOGIN","access_token","hash_code","connectionSettings","hashCode","allow_multisocket","applicationSettings","allowMultiSocket","login_type","update_login","outdial_group_id","skill_profile_id","agent_platform_id","is_force","gates","gate_id","chat_queues","chat_queue_id","Lib","updateLoginMode","INFO","loginPacket","loginDTS","Date","reconnect","agentPermissions","allowLeadSearch","accountId","corporateDirectory","consultCall","isMultiSocket","broadcastChannelHelper","init","setDialGroupSettings","setGateSettings","setChatQueueSettings","setSkillProfileSettings","requireFetchedLeadsCalled","allowPreviewLeadFilters","isOnCall","activeCallUii","isPendingDisp","mockEndCallPacket","term_reason","processNotification","isOffhook","offHookTermPacket","agentProcessOffhookCallback","offhookTerm","waitingForAddSession","pendingDisp","activeAgentUiSessions","getTransferSessions","activeAgentSessions","active_call_sessions","call_session_id","map","sessionObj","transferSession","guid","dataStore","save","scriptSettings","outdialGroups","outdialGroup","g","group","progressiveEnabled","skillProfile","skillProfiles","s","profile","responseId","profileId","selectedGateIds","selectedGates","gateIds","gIdx","chatQueues","selectedChatQueueIds","selectedChatQueues","cQueues","chatQueueIds","c","cIdx","chatQueue","chatQueueId","LoginPhase1Request","LOGIN_PHASE_1","isLoggedInIS","loginPhase1Packet","isSso","isTcpaSafeMode","pciEnabled","alias","maxBreakTime","maxLunchTime","realAgentType","defaultLoginDest","altDefaultLoginDest","initLoginState","initLoginStateLabel","outboundManualDefaultRingtime","isOutboundPrepay","phoneLoginPin","agentPassword","allowCallControl","allowChat","enableChat","showLeadHistory","allowManualOutboundGates","allowOffHook","allowManualCalls","allowManualPass","allowManualIntlCalls","allowLoginUpdates","allowInbound","allowOutbound","allowBlended","allowLoginControl","allowCrossQueueRequeue","disableSupervisorMonitoring","allowAutoAnswer","defaultAutoAnswerOn","allowHistoricalDialing","allowAgentStats","allowCampaignStats","allowGateStats","allowChatStats","enableFolderMode","enableTaskMode","defaultDialGroup","allow_lead_inserts","insert_campaigns","campaign","allowLeadInserts","availableCampaigns","_processCampaigns","_processChatQueueDnis","availableChatRequeueQueues","availableRequeueQueues","availableChatRooms","availableScripts","callerIds","availableAgentStates","availableCountries","insertCampaigns","dialGroups","dg","hciType","hciEnabled","hciClicker","campaigns","campaignsRaw","_processCampaign","campaignRaw","allowLeadUpdates","allowLeadUpdatesByCampaign","labelArray","p","label","replace","campaignName","surveyName","rawQueues","login_chat_queues","chat_queue","rawQueue","j","rq","LogoutRequest","LOGOUT","MultiSocketRequest","LOGIN_MULTISOCKET","get","OffhookInitRequest","OFFHOOK_INIT","offhookInitPacket","softphoneSettings","attemptingSoftphoneReconnect","OffhookTermRequest","OFFHOOK_TERM","data","wasMonitoring","offhookTermPacket","startDts","endDts","OneToOneOutdialRequest","ringTime","ONE_TO_ONE_OUTDIAL","ring_time","OneToOneOutdialCancelRequest","ONE_TO_ONE_OUTDIAL_CANCEL","PauseRecordRequest","record","pauseTime","PAUSE_RECORD","PingCallRequest","PING_CALL","PreviewDialRequest","action","searchFields","PREVIEW_DIAL","search_fields","dialer_request","requestKey","destinations","notifLead","filter","destLead","callbacks","isInsert","previewDialLeads","RecordRequest","RECORD","RequeueRequest","queueId","skillId","maintain","REQUEUE","gate_number","skill_id","maintain_agent","ScriptConfigRequest","version","SCRIPT_CONFIG","script_id","json","loadedScripts","ScriptResultRequest","jsonResult","SCRIPT_RESULT","json_result","SearchDirectoryRequest","searchDirectory","searchString","searchDirectoryRequest","_searchDirectory","filteredDirectory","searchDirResponse","SEARCH_DIR","StatsRequest","STATS","TcpaSafeRequest","TCPA_SAFE","callbackLead","tcpaSafeLeads","UpdateDialDestinationRequest","isSoftphoneError","UPDATE_DIAL_DESTINATION","log_softphone_error","XferWarmRequest","XFER_WARM","XferWarmCancelRequest","XFER_WARM_CANCEL","WebRTCRequest","getSipRegistrationInfo","_getSipRegistrationInfo","sipInfo","webRTCResponse","lastSipFetchTime","now","WEBRTC_INFO","ChatAgentEndRequest","CHAT_AGENT_END","operation_id","generateOpId","ChatAliasRequest","CHAT_ALIAS","ChatDispositionRequest","dispositionId","sendAcknowlegement","CHAT_DISPOSITION","do_ack","ChatListRequest","CHAT_LIST","chatListResponse","chatList","ChatMessageRequest","whisper","CHAT_MESSAGE","dts","trim","dtsDate","from","dequeueAgentId","mediaLinks","ChatPresentedResponseRequest","responseReason","CHAT_PRESENTED_RESPONSE","response_reason","ChatRequeueRequest","maintainAgent","CHAT_REQUEUE","ChatRoomRequest","roomType","roomId","agentOne","agentTwo","CHAT_ROOM","agent_one","agent_two","room_id","ChatRoomStateRequest","chatAlias","ChatSendRequest","CHAT_SEND","senderId","roomName","dynamicCreate","ChatTypingRequest","CHAT_TYPING","LeaveChatRequest","LEAVE_CHAT","ChatManualSmsRequest","CHAT_MANUAL_SMS","MonitorChatRequest","MONITOR_CHAT","StopMonitorChatRequest","STOP_MONITOR_CHAT","monitoredAgentId","SupervisorListRequest","SUPERVISOR_LIST","tempList","supervisors","sup","fname","lname","uname","ChatClientReconnectNotification","AddChatSessionNotification","transcript","ChatActiveNotification","ChatAgentAssignFailureNotification","agentAssignFailure","taskId","ChatCancelledNotification","ChatInactiveNotification","ChatPresentedNotification","edSourceId","edLanguageId","edCategoryIds","edSourceName","edLanguage","edCategories","processedResponse","instance","cachedSourceList","edSources","cachedLanguageList","edLanguages","cachedCategoryList","sourceCache","_getEdValue","languageCache","categoryCache","_getMultiEdValues","edProxyPath","isCached","refreshAccessToken","authToken","sourceErrorMsg","languageErrorMsg","categoriesErrorMsg","sourcePromise","languagePromise","categoriesPromise","_buildEtrHttpRequest","names","sourceResponse","sourceList","languageResponse","languageList","categoryResponse","categoryList","Promise","all","_buildPresentedResponse","CHAT_PRESENTED","authorizationToken","baseEtrUri","Authorization","list","searchList","ids","idIndex","edValue","channelType","chatQueueName","allowAccept","edAuthorScreenName","edCreatedAt","ChatTypingNotification","pendingMessage","LoadMediaNotification","newTask","chatRequeueType","idleTimeout","chatDispositions","isSuccess","buildTaskTokenMap","NewChatNotification","newChat","preChatData","messages","ERROR","t","buildChatTokenMap","prop","hasOwnProperty","AgentStats","stats","ui_stats","agent","agentStats","agentLoginType","avgTalkTime","calls","isDequeueAgent","defaultRoute","queueDesc","queueName","loginDuration","offHook","pendingDispTime","presented","rna","stateDuration","skillProfileName","totalTalkTime","utilization","callDuration","AgentDailyStats","totalLoginSessions","totalChatsHandled","totalCallsHandled","totalPreviewDials","totalManualDials","totalRna","totalSuccessDispositions","totalLoginTime","totalOffhookTime","CampaignStats","totals","campRaw","active","abandon","available","busy","complete","fax","intercept","machine","noanswer","pending","ready","staffed","totalConnects","campaignStats","ChatQueueStats","chatQueueStats","QueueStats","gateRaw","asa","avgAbandon","avgQueue","avgTalk","deflected","inQueue","longCall","longestInQueue","routing","shortAbandon","shortCall","sla","slaPass","slaFail","tAbandonTime","tQueueTime","tSpeedOfAnswer","queueStats","pendingNewCallSessions","statsIntervalId","pingStatIntervalId","agentDailyIntervalId","reconnectIntervalId","location","origin","socketProtocol","chatAliasRequest","chatRoomRequest","chatSendRequest","supervisorListRequest","chatRoomStateRequest","multiSocketRequest","LocalStorageService","chatCancelledNotification","chatActiveNotification","chatInactiveNotification","chatDispositionRequest","chatMessageRequest","chatPresentedNotification","chatPresentedRequest","chatRequeueRequest","chatTypingNotification","chatTypingRequest","newChatNotification","loadMediaNotification","chatAgentAssignFailureNotification","chatClientReconnectNotification","agentStateRequest","chatStateRequest","ackRequest","bargeInRequest","callNotesRequest","callbacksPendingRequest","campaignDispositionsRequest","coldXferRequest","dispositionRequest","dispositionManualPassRequest","hangupRequest","holdRequest","leadHistoryRequest","leadInsertRequest","leadUpdateRequest","logoutRequest","loginPhase1Request","offhookInitRequest","offhookTermRequest","oneToOneOutdialRequest","oneToOneOutdialCancelRequest","pauseRecordRequest","pingCallRequest","previewDialRequest","reconnectRequest","recordRequest","requeueRequest","statsRequest","tcpaSafeRequest","warmXferRequest","warmXferCancelRequest","chatListRequest","directAgentTransferListRequest","directAgentTransferRequest","webRTCRequest","currentCallPacket","addSessionNotification","dialGroupChangePendingNotification","dropSessionNotification","earlyUiiNotification","gatesChangeNotification","genericNotification","newCallNotification","agentStatsPacket","agentDailyStatsPacket","queueStatsPacket","campaignStatsPacket","chatQueueStatsPacket","socketConnected","socketDest","dialDestType","totalCalls","webRtc","muteActive","registerPending","maintainOH","autoStartOH","sipPassword","sipDialDest","rcAccountId","records","resetInstance","localStorage","prefix","setItem","getItem","remove","removeItem","requestChannel","responseChannel","currentCallMessageId","currentCallRequestCallback","self","BroadcastChannel","onmessage","_sendCurrentCall","_processCurrentCallResponse","destroy","requestCurrentCall","fn","Math","random","postMessage","apiBase","XMLHttpRequest","encodeURIComponent","that","resolve","req","_getUriEncodedParams","open","_addHeaders","_addCompletionListeners","send","_getUriEncodedBody","_isObj","setRequestHeader","addEventListener","responseText","contentType","body","join","NewCallUtils","setupAddSessionCallback","sessionUii","_delayedAddSessionCallback","processSessionsForCall","delayedSessions","addSessionNotif","addResponse","ADD_SESSION","logLevel","_db","transaction","store","objectStore","request","add","sendMessage","msgObj","socket","readyState","_requests","shift","_queuedMsgs","dest","slice","ON_MESSAGE","current_state","stateChangeResponse","responseTo","findRequestById","audioState","SILENT_MONITOR","COACH_CALL","campaignDispsResposne","callNotes","insert","update","loginPhase1Response","loginResponse","offhook","initResponse","pauseRequest","pauseRec","requeue","supervisorList","script","scriptConfigRequest","coldXfer","warmXfer","warmXferCancel","ACK","ack","chatStateResponse","agentList","agentListResponse","agentXfer","agentXferResponse","DIAL_GROUP_CHANGE","dgChangeNotif","changeResponse","DIAL_GROUP_CHANGE_PENDING","dgChangePendNotif","pendResponse","DROP_SESSION","dropSesNotif","dropSesResponse","EARLY_UII","earlyUiiNotif","earlyUiiResponse","END_CALL","endCallNotif","endCallResponse","GATES_CHANGE","gateChangeNotif","gateChangeResponse","GENERIC","genericNotif","generic","callbackFnName","findCallbackBasedOnMessageType","GENERIC_NOTIFICATION","clearInterval","NEW_CALL","newCallNotif","newCallResponse","termResponse","PREVIEW_LEAD_STATE","leadStateNotif","leadStateResponse","PENDING_DISP","pendingDispNotif","pendingDispResponse","PENDING_CHAT_DISP","pendingChatDispNotif","pendingChatDispResponse","REVERSE_MATCH","reverseMatchNotif","reverseMatchResponse","TCPA_SAFE_LEAD_STATE","leadStateTcpaNotif","leadStateTcpaResponse","CHAT_ACTIVE","activeNotif","activeResponse","CHAT_INACTIVE","inactiveNotif","inactiveResponse","CHAT_CLIENT_RECONNECT","reconnectNotif","reconnectResponse","presentedNotif","typingNotif","typingResponse","CHAT_NEW","newChatNotif","newChatResponse","chatMessage","chatMessageResponse","CHAT_CANCELLED","chatCancelled","chatCancelledResponse","CHAT_ADD_SESSION","addChatSession","addChatSessionResponse","stopChatMonitor","stopChatMonitorResponse","CHAT_STOP_MONITOR","DIRECT_AGENT_ROUTE","directAgentTransfer","directAgentTransferResponse","DIRECT_AGENT_TRANSFER_NOTIF","AGENT_DEBUG_EMAIL","emailNotif","emailNotifResp","AGENT_DEBUG_EMAIL_NOTIF","CHAT_LOAD_MEDIA","loadMediaNotif","loadMediaResp","CHAT_AGENT_ASSIGN_FAILURE","chatAgentAssignFailureNotif","chatAgentAssignFailureResp","logoutNotification","logoutNotifResponse","closeSocket","processDialerResponse","PREVIEW_DIAL_ID","pdRequest","dialResponse","LEAD_SEARCH","PREVIEW_FETCH","TCPA_SAFE_ID","tcpaRequest","tcpaResponse","SAFE_MODE_SEARCH","SAFE_MODE_FETCH","processRequest","chatSendResponse","CHAT","CHAT_ROOM_STATE","chatRoomStateResponse","processStats","STATS_AGENT","STATS_AGENT_DAILY","onAgentDailyStats","STATS_CAMPAIGN","STATS_QUEUE","STATS_CHAT","chatStats","STATS_CHAT_QUEUE","groupProp","itemProp","textName","itemsRaw","_processItems","escapeSoftphoneUsername","str","_processItem","itemRaw","_tryConvertValueToBoolean","item","formattedKey","_convertToFormattedKey","_convertKeyForCollection","match","substr","setCallback","s4","floor","substring","objArray","idArray","idProperty","availIds","removeIds","o","r","splice","propName","isValid","isNum","test","messageType","includeOpId","operationId","det","stat","opId","returnMsg","val","getAttribute","outerDelimiter","innerDelimiter","arr","reduce","dict","pair","sendStatsRequestMessage","sendPingRequestMessage","curLoginTime","Number","curOffhookTime","curTalkTime","curCallTime","getDialDestination","currentServer","domain","loginHashcode","CHARACTERS","round","CLOSE_SOCKET","CONFIG","GENERIC_RESPONSE","LOG_CONSOLE_RESULTS","LOG_RESULTS","OPEN_SOCKET","SIP_CONNECTED","SIP_DIAL_DEST_CHANGED","SIP_ENDED","SIP_MUTE","SIP_REGISTERED","SIP_REGISTRATION_FAILED","SIP_RINGING","SIP_SWITCH_REGISTRAR","SIP_UNMUTE","SIP_UNREGISTERED","ROTATE_WEBRTC_SERVER","SETUP_WEB_RTC_SERVER","SIP_INIT","SIP_ANSWER","SIP_REJECT","SIP_REGISTER","SIP_HANGUP","SIP_SEND_DTMF","SIP_TOGGLE_MUTE","SOFTPHONE_RESET_SESSION","SWITCH_SOFTPHONE_REGISTRAR","initAgentLibraryCore","context","AgentLibrary","_isReconnect","openLogger","openConsoleLogger","isSecureSocket","setCallbacks","callbackMap","property","getCallbacks","getCallback","getSocket","getAuthenticateRequest","getLoginRequest","getMultiSocketRequest","getAgentConfigRequest","getLogoutRequest","getAgentDailyStats","getCallTokens","getAgentStateRequest","getOffhookInitRequest","getOffhookTermRequest","getHangupRequest","getPreviewDialRequest","getTcpaSafeRequest","getManualOutdialRequest","getManualOutdialCancelRequest","getCallNotesRequest","getCampaignDispositionsRequest","getDispositionRequest","getDispositionManualPassRequest","getWarmTransferRequest","getColdTransferRequest","getWarmTransferCancelRequest","getRequeueRequest","getBargeInRequest","getHoldRequest","getPauseRecordRequest","getRecordRequest","getChatPresentedRequest","getChatDispositionRequest","getChatMessageRequest","getChatRequeueRequest","getChatTypingRequest","getAgentStatsPacket","getAgentDailyStatsPacket","getQueueStatsPacket","getChatQueueStatsPacket","getCampaignStatsPacket","getAgentConfigPacket","getLoginPacket","getAgentStatePacket","getCurrentCallPacket","getOffhookInitPacket","getOffhookTermPacket","getChatAgentEnd","chatAgentEnd","getWebRTCRequest","getChatListRequest","getSearchDirectoryRequest","getDialGroupChangeNotification","getDialGroupChangePendingNotification","getEndCallNotification","getGatesChangeNotification","getGenericNotification","getNewCallNotification","getCurrentCall","getAddSessionNotification","getDropSessionNotification","getEarlyUiiNotification","getChatActiveNotification","getChatInactiveNotification","getChatClientReconnectNotification","getChatPresentedNotification","getChatTypingNotification","getNewChatNotification","getLoadMediaNotification","getChatAgentAssignFailureNotification","getChatCancelledNotification","getApplicationSettings","getSoftphoneSettings","getChatSettings","getConnectionSettings","getInboundSettings","getOutboundSettings","getAgentSettings","getPendingSessions","getAgentPermissions","getAgentStats","getQueueStats","getChatQueueStats","getCampaignStats","getFilteredDirectory","getExtensionPresenceResponse","getExtensionPresenceRequest","_utils","_NewCallUtils","_HttpService","_getUIModel","initAgentLibrarySocket","openSocket","_getNewAccessToken","_buildSocketDest","_initSocket","socketOpened","currDts","threeMins","queuedMsg","unshift","getTime","WebSocket","onopen","onerror","evt","onclose","initAgentLibraryAgent","authenticateAgentWithUsernamePassword","authenticateAgentWithRcAccessToken","authenticateAgentWithEngageAccessToken","getAgentConfig","getWebRtcInfo","_setUpAndSendLogin","multiLoginRequest","logoutAgent","requestLogoutAgent","agentToLogout","requestMessage","isSupervisor","setAgentState","offhookInit","getPendingCallbacks","cancelCallback","callbackCancelRequest","requestStats","_terminatePing","terminateStats","_requestPing","updateDialDestination","updateDialDestinationRequest","getRefreshedToken","initAgentLibraryCall","bargeIn","coach","internationalColdXfer","dispositionCall","dispositionManualPass","getCampaignDispositions","holdSession","manualOutdial","manualOutdialCancel","pauseRecord","previewDial","previewFetch","searchLeads","setCallNotes","monitor","requeueCall","safeModeCall","safeModeFetch","safeSearchLeads","internationalWarmXfer","corporateDirWarmXfer","corporateDirColdXfer","getScript","savedScript","saveScriptResult","scriptResultRequest","directAgentXferList","warmDirectAgentXfer","coldDirectAgentXfer","cancelDirectAgentXfer","voicemailDirectAgentXfer","rejectDirectAgentXfer","initAgentLibraryLead","leadInsert","leadUpdate","initAgentLibraryChat","setChatAlias","publicChatRoom","privateChatRoom","sendChat","getSupervisors","chatPresentedResponse","chatWhisper","chatDisposition","chatRequeue","chatTyping","monitorAgentChats","monitorChatRequest","stopMonitoringChatsByAgent","stopMonitorChatRequest","stopMonitoringAllAgentChats","leaveChat","leaveChatRequest","setChatState","sendManualOutboundSms","chatManualSms","initAgentLibraryLogger","dbRequest","indexedDB","event","onsuccess","target","purgeLog","errorCode","onupgradeneeded","objectStoreNames","contains","createObjectStore","autoIncrement","createIndex","unique","keyPath","db","dateIndex","index","endDate","setDate","getDate","range","IDBKeyRange","upperBound","openCursor","cursor","primaryKey","clearLog","objectStoreRequest","clear","deleteDB","dbName","DBDeleteRequest","deleteDatabase","getLogRecords","startDate","maxRows","objStore","limit","lowerBound","bound","levelAndDateReturn","idxLevelAndDate","logLevelReturn","idxLogLevel","dtsNoStatsReturn","idxDTSNoStats","noStatsReturn","idxNoStats","dtsReturn","idxDTS","allValsReturn","idxAll","initAgentLibraryMultisocket","loadCurrentCall","initAgentLibraryConsoleLogger","_consoleDb","_overrideConsole","getConsoleLogRecords","only","count","browserConsole","assign","defaultConsole","_getRecord","args","arg","agentName","_saveRecord","apply","arguments","info","initAgentLibrarySoftphoneService","sipInit","SoftphoneService","setupWebRtcServer","_getSipConfig","_connected","_ended","_registered","_unregistered","_registrationFailed","_ringing","_mute","_unmute","setTimeout","_handleNoRegisterResponse","sipTerminate","opts","unregister","removeAllListeners","stop","sipAnswer","sipReject","sipRegister","webkitNotifications","checkPermission","requestPermission","sipHangUp","sipSendDTMF","sipToggleMute","switchSoftphoneRegistrar","maintainOffhook","autoStartOffhook","_updateOHFlags","resetSoftphoneSession","offhookParams","_rotateWebRtcServer","_getCurrentWebRtcServerInfo","webRtcServer","transport","outboundProxy","authorizationId","remoteAudioElement","document","getElementById","_registerHasResponse","clearTimeout","timeSinceLastFetch","responseObj","usingRcPhone","rcHeader","rcHeaderValue","raw","initAgentLibrary"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEA,CAAC,YAAY;AACX;AACA;AACF;AACA;;AAEE;AACF;AACA;;AAEE,MAAIA,CAAC,GAAG;AACNC,IAAAA,WAAW,EAAE,CADP;AAENC,IAAAA,UAAU,EAAE,CAFN;AAGNC,IAAAA,iBAAiB,EAAE,CAHb;AAINC,IAAAA,gBAAgB,EAAE,CAJZ;AAKNC,IAAAA,gBAAgB,EAAE;AALZ,GAAR;AAQA;AACF;AACA;;AACE,MAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,OAAV,EAAmB;AACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,QAAIA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBC,KAAzB,EAAgC;AAC9B,WAAKA,KAAL,GAAa,IAAb;AACD,KAFD,MAEO;AACL,WAAKA,KAAL,GAAa,KAAb;AACD;;AAED,QAAIH,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqBE,KAAzB,EAAgC;AAC9B,WAAKA,KAAL,GAAa,IAAb;AACD,KAFD,MAEO;AACL,WAAKA,KAAL,GAAa,KAAb;AACD;;AAED,QAAI,CAAC,KAAKA,KAAN,IAAe,CAAC,KAAKD,KAAzB,EAAgC;AAC9B;AACA;AACA,YAAM,IAAIE,KAAJ,CACJ,yEADI,CAAN;AAGD;;AAED,SAAKL,OAAL,GAAeA,OAAf,CAtCmC,CAwCnC;;AACA,QAAIM,SAAS,GAAGC,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2BC,WAA3B,EAAhB;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,SAAS,GAAG,KAAhB;;AACA,QAAIN,SAAS,CAACO,OAAV,CAAkB,QAAlB,IAA8B,CAAC,CAA/B,IAAoCP,SAAS,CAACO,OAAV,CAAkB,QAAlB,IAA8B,CAAtE,EAAyE;AACvEF,MAAAA,QAAQ,GAAG,IAAX;AACD,KAFD,MAEO,IACLL,SAAS,CAACO,OAAV,CAAkB,SAAlB,IAA+B,CAAC,CAAhC,IACAP,SAAS,CAACO,OAAV,CAAkB,QAAlB,IAA8B,CAFzB,EAGL;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,QAAIE,uCAAuC,GAAG;AAC5CC,MAAAA,qBAAqB,EAAE;AACrBC,QAAAA,kBAAkB,EAAE,GADC;AAErBC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,UAAU,EAAE,CACV;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADU,EAEV;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAFU,EAGV;AAAEA,YAAAA,IAAI,EAAE;AAAR,WAHU;AADI;AAFG;AADqB,KAA9C;;AAYA,QAAIR,QAAJ,EAAc;AACZG,MAAAA,uCAAuC,CAACM,SAAxC,GAAoD,CAClDC,gBAAIC,GAAJ,CAAQC,SAAR,CAAkBC,SADgC,CAApD;AAGD;;AAED,QAAIZ,SAAJ,EAAe;AACbE,MAAAA,uCAAuC,CAACW,uBAAxC,GAAkE,IAAlE;AACAX,MAAAA,uCAAuC,CAACM,SAAxC,GAAoD,CAClDC,gBAAIC,GAAJ,CAAQC,SAAR,CAAkBG,WADgC,CAApD;AAGD;;AAED,QAAI,CAAC,KAAK1B,OAAL,CAAa2B,EAAb,CAAgBC,GAArB,EAA0B;AACxB,WAAKC,SAAL,GAAiB,IAAjB;AACD;;AAED,SAAKF,EAAL,GAAU,IAAIN,gBAAIS,EAAR,CAAW;AACnB;AACAF,MAAAA,GAAG,EAAE,KAAK5B,OAAL,CAAa2B,EAAb,CAAgBC,GAFF;AAGnBG,MAAAA,iBAAiB,EAAE,KAAK/B,OAAL,CAAa2B,EAAb,CAAgBI,iBAHhB;AAInBC,MAAAA,QAAQ,EAAE,KAAKhC,OAAL,CAAa2B,EAAb,CAAgBK,QAJP;AAKnBC,MAAAA,WAAW,EAAE,KAAKjC,OAAL,CAAa2B,EAAb,CAAgBM,WALV;AAMnB;AACAC,MAAAA,eAAe,EAAEb,gBAAI5B,CAAJ,CAAM0C,UAAN,GAAmB,GAAnB,GAAyB7B,SAPvB;AAQnB;AACA8B,MAAAA,QAAQ,EAAE,IATS;AAUnBC,MAAAA,eAAe,EAAE,KAAKrC,OAAL,CAAa2B,EAAb,CAAgBU,eAAhB,IAAmC,GAVjC;AAWnBvB,MAAAA,uCAAuC,EAAEA,uCAXtB;AAYnBwB,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,QAAQ,EAAE,KAAKvC,OAAL,CAAa2B,EAAb,CAAgBY,QADV;AAEhBC,QAAAA,SAAS,EAAE,KAAKxC,OAAL,CAAa2B,EAAb,CAAgBa,SAFX;AAGhBC,QAAAA,uBAAuB,EAAE;AAHT,OAZC;AAiBnBC,MAAAA,QAAQ,EAAErB,gBAAI5B,CAAJ,CAAMiD,QAAN,CAAeC;AAjBN,KAAX,CAAV;AAoBA,SAAKC,KAAL,GAAanD,CAAC,CAACC,WAAf;AAEA,SAAKmD,MAAL,GAAc,KAAKlB,EAAL,CAAQmB,SAAR,CAAkB,YAAlB,CAAd;AAEA,SAAKnB,EAAL,CAAQoB,EAAR,CACE,YADF,EAEE,YAAY;AACV,WAAKC,IAAL,CAAU,YAAV,EAAwB,KAAKrB,EAA7B;AACD,KAFD,CAEEsB,IAFF,CAEO,IAFP,CAFF;AAOA,SAAKtB,EAAL,CAAQoB,EAAR,CACE,cADF,EAEE,YAAY;AACV,WAAKC,IAAL,CAAU,cAAV,EAA0B,KAAKrB,EAA/B;AACD,KAFD,CAEEsB,IAFF,CAEO,IAFP,CAFF;AAOA,SAAKtB,EAAL,CAAQoB,EAAR,CACE,QADF,EAEE,YAAY;AACV,WAAKC,IAAL,CAAU,cAAV,EAA0B,KAAKrB,EAA/B;AACD,KAFD,CAEEsB,IAFF,CAEO,IAFP,CAFF;AAOA,SAAKtB,EAAL,CAAQoB,EAAR,CACE,QADF,EAEE,UAAUG,OAAV,EAAmB;AACjB;AACA,UAAI,KAAKN,KAAL,KAAenD,CAAC,CAACC,WAAjB,IAAgC,KAAKkD,KAAL,KAAenD,CAAC,CAACK,gBAArD,EAAuE;AACrE,aAAK+C,MAAL,CAAYM,IAAZ,CACE,qEADF;AAGAD,QAAAA,OAAO,CAACE,MAAR;AACA;AACD;;AACD,WAAKF,OAAL,GAAeA,OAAf;AACA,WAAKG,YAAL;AACA,WAAKL,IAAL,CAAU,SAAV,EAAqB,KAAKE,OAA1B;AACD,KAZD,CAYED,IAZF,CAYO,IAZP,CAFF;AAiBA,SAAKtB,EAAL,CAAQoB,EAAR,CACE,SADF,EAEE,UAAUO,OAAV,EAAmB;AACjB,WAAKN,IAAL,CAAU,SAAV,EAAqBM,OAArB;AACD,KAFD,CAEEL,IAFF,CAEO,IAFP,CAFF;AAOA,WAAO,IAAP;AACD,GAvJD;;AAyJAlD,EAAAA,WAAW,CAACwD,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcpC,gBAAIqC,YAAJ,CAAiBH,SAA/B,CAAxB;AACAxD,EAAAA,WAAW,CAACN,CAAZ,GAAgBA,CAAhB,CA/KW,CAiLX;;AAEAM,EAAAA,WAAW,CAACwD,SAAZ,CAAsBI,IAAtB,GAA6B,UAAUC,WAAV,EAAuB;AAClD,QAAI,CAAC,KAAKjC,EAAN,IAAY,CAAC,KAAKkC,iBAAL,EAAjB,EAA2C;AACzC,WAAKhB,MAAL,CAAYM,IAAZ,CAAiB,yCAAjB;AACA;AACD;;AACD,QAAI,KAAKP,KAAL,KAAenD,CAAC,CAACC,WAAjB,IAAgC,KAAKkD,KAAL,KAAenD,CAAC,CAACK,gBAArD,EAAuE;AACrE,WAAK+C,MAAL,CAAYM,IAAZ,CAAiB,sDAAjB;AACA;AACD,KARiD,CASlD;;;AACA,QAAI,KAAKnD,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA9B,EAAqC;AACnC,WAAKJ,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA1B,CAAgC0D,QAAhC,GAA2C,IAA3C;AACD;;AACD,QAAI,KAAK9D,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA9B,EAAqC;AACnC,WAAKH,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA1B,CAAgC2D,QAAhC,GAA2C,IAA3C;AACD;;AACD,QAAI,KAAK9D,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,IAA4B,KAAK/D,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzD,EAAgE;AAC9D,WAAKH,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+B2D,QAA/B,GAA0C,IAA1C;AACA,WAAK9D,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+B6D,MAA/B,GAAwC,CAAxC;AACD;;AACD,SAAKd,OAAL,GAAe,KAAKvB,EAAL,CAAQsC,MAAR,CAAeL,WAAf,EAA4B;AACzCM,MAAAA,gCAAgC,EAAE;AAChCC,QAAAA,WAAW,EAAE;AACX/D,UAAAA,KAAK,EAAE,KAAKA,KADD;AAEXD,UAAAA,KAAK,EAAE,KAAKA;AAFD;AADmB;AADO,KAA5B,CAAf;AAQA,SAAKkD,YAAL;AAEA,WAAO,KAAKH,OAAZ;AACD,GA/BD;;AAiCAnD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBa,MAAtB,GAA+B,YAAY;AACzC,QAAI,KAAKxB,KAAL,KAAenD,CAAC,CAACE,UAAjB,IAA+B,KAAKiD,KAAL,KAAenD,CAAC,CAACG,iBAApD,EAAuE;AACrE,WAAKiD,MAAL,CAAYM,IAAZ,CAAiB,mBAAjB;AACA;AACD,KAJwC,CAKzC;;;AACA,QAAI,KAAKnD,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA9B,EAAqC;AACnC,WAAKJ,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA1B,CAAgC0D,QAAhC,GAA2C,IAA3C;AACD;;AACD,QAAI,KAAK9D,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA9B,EAAqC;AACnC,WAAKH,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA1B,CAAgC2D,QAAhC,GAA2C,IAA3C;AACD;;AACD,WAAO,KAAKZ,OAAL,CAAamB,MAAb,CAAoB;AACzBH,MAAAA,gCAAgC,EAAE;AAChCC,QAAAA,WAAW,EAAE;AACX/D,UAAAA,KAAK,EAAE,KAAKA,KADD;AAEXD,UAAAA,KAAK,EAAE,KAAKA;AAFD;AADmB;AADT,KAApB,CAAP,CAZyC,CAoBzC;AACD,GArBD;;AAuBAJ,EAAAA,WAAW,CAACwD,SAAZ,CAAsBH,MAAtB,GAA+B,YAAY;AACzC,QAAI,KAAKR,KAAL,KAAenD,CAAC,CAACE,UAAjB,IAA+B,KAAKiD,KAAL,KAAenD,CAAC,CAACG,iBAApD,EAAuE;AACrE,WAAKiD,MAAL,CAAYM,IAAZ,CAAiB,0BAAjB;AACA;AACD;;AACD,WAAO,KAAKD,OAAL,CAAaE,MAAb,EAAP;AACD,GAND;;AAQArD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBe,MAAtB,GAA+B,YAAY;AACzC,QACE,KAAK1B,KAAL,KAAenD,CAAC,CAACI,gBAAjB,IACA,KAAK+C,KAAL,KAAenD,CAAC,CAACG,iBADjB,IAEA,KAAKgD,KAAL,KAAenD,CAAC,CAACE,UAHnB,EAIE;AACA,WAAKkD,MAAL,CAAYM,IAAZ,CAAiB,8BAAjB;AACA;AACD;;AACD,QAAI,KAAKP,KAAL,KAAenD,CAAC,CAACI,gBAArB,EAAuC;AACrC,aAAO,KAAKqD,OAAL,CAAaqB,MAAb,EAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKrB,OAAL,CAAasB,GAAb,EAAP;AACD;AACF,GAdD;;AAgBAzE,EAAAA,WAAW,CAACwD,SAAZ,CAAsBkB,IAAtB,GAA6B,YAAY;AACvC,QAAI,KAAK7B,KAAL,KAAenD,CAAC,CAACI,gBAAjB,IAAqC,KAAKqD,OAAL,CAAawB,UAAtD,EAAkE;AAChE,WAAK7B,MAAL,CAAYM,IAAZ,CAAiB,yBAAjB;AACA;AACD;;AACD,SAAKwB,IAAL;AACA,SAAK9B,MAAL,CAAY+B,GAAZ,CAAgB,yBAAhB;AACA,WAAO,KAAK1B,OAAL,CAAauB,IAAb,EAAP;AACD,GARD;;AAUA1E,EAAAA,WAAW,CAACwD,SAAZ,CAAsBsB,MAAtB,GAA+B,YAAY;AACzC,QAAI,KAAKjC,KAAL,KAAenD,CAAC,CAACI,gBAAjB,IAAqC,CAAC,KAAKqD,OAAL,CAAawB,UAAvD,EAAmE;AACjE,WAAK7B,MAAL,CAAYM,IAAZ,CAAiB,0CAAjB;AACA;AACD;;AACD,SAAK2B,MAAL;AACA,SAAKjC,MAAL,CAAY+B,GAAZ,CAAgB,uBAAhB;AACA,WAAO,KAAK1B,OAAL,CAAa2B,MAAb,EAAP;AACD,GARD;;AAUA9E,EAAAA,WAAW,CAACwD,SAAZ,CAAsBoB,IAAtB,GAA6B,YAAY;AACvC,QAAI,KAAK/B,KAAL,KAAenD,CAAC,CAACI,gBAArB,EAAuC;AACrC,WAAKgD,MAAL,CAAYM,IAAZ,CAAiB,0CAAjB;AACA;AACD;;AACD,SAAKN,MAAL,CAAY+B,GAAZ,CAAgB,cAAhB;AACA,SAAKG,UAAL,CAAgB,IAAhB;AACA,SAAK/B,IAAL,CAAU,MAAV,EAAkB,IAAlB;AACD,GARD;;AAUAjD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBuB,MAAtB,GAA+B,YAAY;AACzC,QAAI,KAAKlC,KAAL,KAAenD,CAAC,CAACI,gBAArB,EAAuC;AACrC,WAAKgD,MAAL,CAAYM,IAAZ,CAAiB,4CAAjB;AACA;AACD;;AACD,SAAKN,MAAL,CAAY+B,GAAZ,CAAgB,gBAAhB;AACA,SAAKG,UAAL,CAAgB,KAAhB;AACA,SAAK/B,IAAL,CAAU,QAAV,EAAoB,IAApB;AACD,GARD;;AAUAjD,EAAAA,WAAW,CAACwD,SAAZ,CAAsByB,QAAtB,GAAiC,UAAUC,IAAV,EAAgB;AAC/C,QAAI,KAAKrC,KAAL,KAAenD,CAAC,CAACI,gBAArB,EAAuC;AACrC,WAAKgD,MAAL,CAAYM,IAAZ,CAAiB,gDAAjB;AACA;AACD;;AACD,SAAKN,MAAL,CAAY+B,GAAZ,CAAgB,wBAAwBK,IAAxC;AACA,SAAK/B,OAAL,CAAagC,IAAb,CAAkBD,IAAlB;AACD,GAPD;;AASAlF,EAAAA,WAAW,CAACwD,SAAZ,CAAsBD,OAAtB,GAAgC,UAAUM,WAAV,EAAuBN,OAAvB,EAAgC;AAC9D,QAAI,CAAC,KAAK3B,EAAN,IAAY,CAAC,KAAKkC,iBAAL,EAAjB,EAA2C;AACzC,WAAKhB,MAAL,CAAYM,IAAZ,CAAiB,+CAAjB;AACA;AACD;;AACD,QAAI,CAACS,WAAD,IAAgB,CAACN,OAArB,EAA8B;AAC5B,WAAKT,MAAL,CAAYM,IAAZ,CACE,0DADF;AAGA;AACD;;AACD,SAAKxB,EAAL,CAAQ2B,OAAR,CAAgBM,WAAhB,EAA6BN,OAA7B;AACD,GAZD,CApTW,CAkUX;;;AAEAvD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBM,iBAAtB,GAA0C,YAAY;AACpD,WAAO,KAAKhC,SAAL,IAAmB,KAAKF,EAAL,IAAW,KAAKA,EAAL,CAAQwD,YAAR,EAArC;AACD,GAFD;;AAIApF,EAAAA,WAAW,CAACwD,SAAZ,CAAsB6B,gBAAtB,GAAyC,YAAY;AACnD;AACA,QAAIC,EAAE,GAAG,KAAKnC,OAAL,CAAaoC,yBAAb,CAAuCC,cAAhD;AACA,QAAIC,YAAJ;;AAEA,QAAIH,EAAE,CAACI,YAAP,EAAqB;AACnBD,MAAAA,YAAY,GAAG,IAAIjF,MAAM,CAACA,MAAP,CAAcmF,WAAlB,EAAf;AACAL,MAAAA,EAAE,CAACI,YAAH,GAAkBE,OAAlB,CAA0B,UAAUC,QAAV,EAAoB;AAC5C,YAAIC,KAAK,GAAGD,QAAQ,CAACC,KAArB;;AACA,YAAIA,KAAJ,EAAW;AACTL,UAAAA,YAAY,CAACM,QAAb,CAAsBD,KAAtB;AACD;AACF,OALD;AAMD,KARD,MAQO;AACLL,MAAAA,YAAY,GAAGH,EAAE,CAACU,gBAAH,GAAsB,CAAtB,CAAf;AACD;;AACD,QAAI,KAAK5F,KAAT,EAAgB;AACd,WAAKH,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA1B,CAAgC6F,SAAhC,GAA4CR,YAA5C;AACA,WAAKxF,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA1B,CAAgC8F,IAAhC,YACE,YAAY;AACV,aAAKpD,MAAL,CAAY+B,GAAZ,CAAgB,mBAAhB;AACD,OAFD,CAEE3B,IAFF,CAEO,IAFP,CADF;AAKD,KAPD,MAOO,IAAI,KAAK7C,KAAT,EAAgB;AACrB,WAAKJ,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA1B,CAAgC4F,SAAhC,GAA4CR,YAA5C;AACA,WAAKxF,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA1B,CAAgC6F,IAAhC,YACE,YAAY;AACV,aAAKpD,MAAL,CAAY+B,GAAZ,CAAgB,mBAAhB;AACD,OAFD,CAEE3B,IAFF,CAEO,IAFP,CADF;AAKD;AACF,GA/BD;;AAiCAlD,EAAAA,WAAW,CAACwD,SAAZ,CAAsB2C,eAAtB,GAAwC,YAAY;AAClD,QACE,KAAK/F,KAAL,IACA,KAAKH,OAAL,CAAaC,KAAb,CAAmB8D,KADnB,IAEA,KAAK/D,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAH3B,EAIE;AACA,UAAIkF,EAAE,GAAG,KAAKnC,OAAL,CAAaoC,yBAAb,CAAuCC,cAAhD;AACA,UAAIY,WAAJ;;AACA,UAAId,EAAE,CAACe,UAAP,EAAmB;AACjBD,QAAAA,WAAW,GAAG,IAAI5F,MAAM,CAACA,MAAP,CAAcmF,WAAlB,EAAd;AACAL,QAAAA,EAAE,CAACe,UAAH,GAAgBT,OAAhB,CAAwB,UAAUU,MAAV,EAAkB;AACxC,cAAIR,KAAK,GAAGQ,MAAM,CAACR,KAAnB;;AACA,cAAIA,KAAK,IAAIA,KAAK,CAACS,IAAN,KAAe,OAA5B,EAAqC;AACnCH,YAAAA,WAAW,CAACL,QAAZ,CAAqBD,KAArB;AACD;AACF,SALD;AAMD,OARD,MAQO;AACLM,QAAAA,WAAW,GAAGd,EAAE,CAACkB,eAAH,GAAqB,CAArB,CAAd;AACD;;AACD,WAAKvG,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+B6F,SAA/B,GAA2CG,WAA3C;AACA,WAAKnG,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+B6D,MAA/B,GAAwC,CAAxC;AACA,WAAKhE,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+B8F,IAA/B;AACD;AACF,GAvBD;;AAyBAlG,EAAAA,WAAW,CAACwD,SAAZ,CAAsBiD,YAAtB,GAAqC,YAAY;AAC/C,QAAI,KAAKrG,KAAT,EAAgB;AACd,WAAKH,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA1B,CAAgC6F,SAAhC,GAA4C,IAA5C;AACA,WAAKhG,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,KAA1B,CAAgCsG,KAAhC;;AACA,UAAI,KAAKzG,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,IAA4B,KAAK/D,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzD,EAAgE;AAC9D,aAAKH,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+B6F,SAA/B,GAA2C,IAA3C;AACA,aAAKhG,OAAL,CAAaC,KAAb,CAAmB8D,KAAnB,CAAyB5D,KAAzB,CAA+BsG,KAA/B;AACD;AACF;;AACD,QAAI,KAAKrG,KAAT,EAAgB;AACd,WAAKJ,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA1B,CAAgC4F,SAAhC,GAA4C,IAA5C;AACA,WAAKhG,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BE,KAA1B,CAAgCqG,KAAhC;AACD;AACF,GAbD;;AAeA1G,EAAAA,WAAW,CAACwD,SAAZ,CAAsBF,YAAtB,GAAqC,YAAY;AAC/C,SAAKT,KAAL,GAAanD,CAAC,CAACE,UAAf;AACA,SAAKqD,IAAL,CAAU,KAAV,EAAiB,KAAKE,OAAtB;AAEA,SAAKA,OAAL,CAAaH,EAAb,CAAgB,UAAhB,EAA4B,KAAK2D,UAAL,CAAgBzD,IAAhB,CAAqB,IAArB,CAA5B;AACA,SAAKC,OAAL,CAAaH,EAAb,CAAgB,UAAhB,EAA4B,KAAK4D,UAAL,CAAgB1D,IAAhB,CAAqB,IAArB,CAA5B;AACA,SAAKC,OAAL,CAAaH,EAAb,CAAgB,UAAhB,EAA4B,KAAK6D,OAAL,CAAa3D,IAAb,CAAkB,IAAlB,CAA5B;AACA,SAAKC,OAAL,CAAaH,EAAb,CAAgB,QAAhB,EAA0B,KAAK8D,QAAL,CAAc5D,IAAd,CAAmB,IAAnB,CAA1B;AACA,SAAKC,OAAL,CAAaH,EAAb,CAAgB,YAAhB,EAA8B,KAAK6D,OAAL,CAAa3D,IAAb,CAAkB,IAAlB,CAA9B;AACD,GATD;;AAWAlD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBuD,YAAtB,GAAqC,YAAY;AAC/C,SAAK5D,OAAL,CAAaoC,yBAAb,CAAuCyB,KAAvC;AACD,GAFD;;AAIAhH,EAAAA,WAAW,CAACwD,SAAZ,CAAsBwB,UAAtB,GAAmC,UAAUJ,IAAV,EAAgB;AACjD,QAAIU,EAAE,GAAG,KAAKnC,OAAL,CAAaoC,yBAAb,CAAuCC,cAAhD;;AACA,QAAIF,EAAE,CAACe,UAAP,EAAmB;AACjBf,MAAAA,EAAE,CAACe,UAAH,GAAgBT,OAAhB,CAAwB,UAAUU,MAAV,EAAkB;AACxC,YAAIA,MAAM,CAACR,KAAX,EAAkB;AAChBQ,UAAAA,MAAM,CAACR,KAAP,CAAamB,OAAb,GAAuB,CAACrC,IAAxB;AACD;AACF,OAJD;AAKD,KAND,MAMO;AACLU,MAAAA,EAAE,CAACkB,eAAH,GAAqBZ,OAArB,CAA6B,UAAUsB,MAAV,EAAkB;AAC7CA,QAAAA,MAAM,CAACC,cAAP,GAAwBvB,OAAxB,CAAgC,UAAUE,KAAV,EAAiB;AAC/CA,UAAAA,KAAK,CAACmB,OAAN,GAAgB,CAACrC,IAAjB;AACD,SAFD;AAGAsC,QAAAA,MAAM,CAACE,cAAP,GAAwBxB,OAAxB,CAAgC,UAAUE,KAAV,EAAiB;AAC/CA,UAAAA,KAAK,CAACmB,OAAN,GAAgB,CAACrC,IAAjB;AACD,SAFD;AAGD,OAPD;AAQD;AACF,GAlBD;;AAoBA5E,EAAAA,WAAW,CAACwD,SAAZ,CAAsBoD,UAAtB,GAAmC,YAAY;AAC7C,SAAK/D,KAAL,GAAanD,CAAC,CAACI,gBAAf;AACA,SAAKmD,IAAL,CAAU,WAAV,EAAuB,KAAKE,OAA5B;AAEA,SAAKgD,eAAL;AACA,SAAKd,gBAAL;AACA,SAAKlC,OAAL,CAAaoC,yBAAb,CAAuCvC,EAAvC,CACE,UADF,EAEE,YAAY;AACV,WAAKF,MAAL,CAAY+B,GAAZ,CACE,0DADF;AAGA,WAAKQ,gBAAL;AACD,KALD,CAKEnC,IALF,CAKO,IALP,CAFF;AAUA,SAAKC,OAAL,CAAaoC,yBAAb,CAAuCvC,EAAvC,CACE,WADF,EAEE,YAAY;AACV,WAAKF,MAAL,CAAY+B,GAAZ,CACE,wDADF;AAGA,WAAKQ,gBAAL;AACD,KALD,CAKEnC,IALF,CAKO,IALP,CAFF;AAUA,SAAKC,OAAL,CAAaH,EAAb,CACE,MADF,EAEE,YAAY;AACV,WAAKC,IAAL,CAAU,MAAV,EAAkB,KAAKE,OAAvB;AACD,KAFD,CAEED,IAFF,CAEO,IAFP,CAFF;AAMA,SAAKC,OAAL,CAAaH,EAAb,CACE,QADF,EAEE,YAAY;AACV,WAAKC,IAAL,CAAU,QAAV,EAAoB,KAAKE,OAAzB;AACD,KAFD,CAEED,IAFF,CAEO,IAFP,CAFF;AAMA,SAAKC,OAAL,CAAaH,EAAb,CACE,MADF,EAEE,UAAUkC,IAAV,EAAgB;AACd,WAAKjC,IAAL,CAAU,MAAV,EAAkBiC,IAAlB;AACD,KAFD,CAEEhC,IAFF,CAEO,IAFP,CAFF;AAMA,SAAKC,OAAL,CAAaH,EAAb,CAAgB,KAAhB,EAAuB,KAAK6D,OAAL,CAAa3D,IAAb,CAAkB,IAAlB,CAAvB;AACD,GA7CD;;AA+CAlD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBmD,UAAtB,GAAmC,YAAY;AAC7C,SAAK9D,KAAL,GAAanD,CAAC,CAACG,iBAAf;AACA,SAAKoD,IAAL,CAAU,YAAV,EAAwB,KAAKE,OAA7B;AACD,GAHD;;AAKAnD,EAAAA,WAAW,CAACwD,SAAZ,CAAsBsD,QAAtB,GAAiC,YAAY;AAC3C,SAAKD,OAAL;AACD,GAFD;;AAIA7G,EAAAA,WAAW,CAACwD,SAAZ,CAAsBqD,OAAtB,GAAgC,YAAY;AAC1C,SAAKhE,KAAL,GAAanD,CAAC,CAACK,gBAAf;AACA,SAAKkD,IAAL,CAAU,OAAV,EAAmB,KAAKE,OAAxB;AACA,SAAKsD,YAAL;AACD,GAJD;;AAMAjG,EAAAA,MAAM,CAACR,WAAP,GAAqBA,WAArB;AACA,SAAOA,WAAP;AACD,CApfD;;eAsfgB,YAAY;AAC1B;AACF;AACA;AACA;AACA;AAEE,SAAO,UAAUqH,MAAV,EAAkB;AACvB,QAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAY,CAAE,CAA3C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,sBAAsB,CAAC9D,SAAvB,CAAiC+D,eAAjC,GAAmD,UAAUC,YAAV,EAAwB;AACzE,UAAIC,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACA,UAAIC,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAArB;;AAEA,UAAIG,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,cAArB,MAAyC,OAA7C,EAAsD;AACpDH,QAAAA,KAAK,CAACQ,mBAAN;AACD;;AAED,UAAIH,cAAc,KAAKL,KAAK,CAACS,aAAN,CAAoBC,OAA3C,EAAoD;AAClD;AACA;AACAV,QAAAA,KAAK,CAACW,WAAN,CAAkBC,SAAlB,GAA8BN,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACD,OAJD,MAIO,IAAIE,cAAc,IAAI,EAAtB,EAA0B;AAC/B;AACAL,QAAAA,KAAK,CAACW,WAAN,CAAkBE,cAAlB,GAAmCR,cAAnC;AACD,OAhBwE,CAkBzE;;;AACA,UAAIS,WAAW,GAAGR,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,cAArB,CAAlB;AAAA,UACEY,YAAY,GAAGT,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CADjB;AAAA,UAEES,SAAS,GAAGN,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAFd;AAAA,UAGEa,GAAG,GAAGV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAHR;AAAA,UAIEc,YAAY,GAAGjB,KAAK,CAACW,WAAN,CAAkBM,YAJnC;AAAA,UAKEC,cAAc,GAAGlB,KAAK,CAACW,WAAN,CAAkBO,cALrC;AAOA,UAAIC,gBAAgB,GAAGF,YAAY,IAAIC,cAAc,KAAK,MAA1D;AAAA,UACEE,eAAe,GAAGf,cAAc,KAAKL,KAAK,CAACS,aAAN,CAAoBC,OAD3D;AAAA,UAEEW,aAAa,GAAGT,SAAS,KAAK,GAFhC;AAAA,UAGEU,kBAAkB,GAAG,KAHvB;;AAKA,UAAID,aAAa,IAAID,eAArB,EAAsC;AACpC,YAAID,gBAAJ,EAAsB;AACpBG,UAAAA,kBAAkB,GAAG,IAArB;AACD,SAFD,MAEO,IAAIP,YAAJ,EAAkB;AACvB,cAAID,WAAW,KAAK,UAAhB,IAA8BA,WAAW,KAAK,OAAlD,EAA2D;AACzDQ,YAAAA,kBAAkB,GAAG,IAArB;AACD;AACF;AACF;;AAED,UAAIA,kBAAJ,EAAwB;AACtB,YAAIlF,WAAW,GAAGkE,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,OAArB,CAAlB;;AAEA,YAAIW,WAAW,KAAK,OAAhB,IAA2BT,cAAc,KAAK,EAAlD,EAAsD;AACpDjE,UAAAA,WAAW,GAAGkE,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAAd;AACD;;AAEDH,QAAAA,KAAK,CAACuB,gBAAN,CAAuBX,SAAvB,IAAoC;AAClCA,UAAAA,SAAS,EAAEA,SADuB;AAElCxE,UAAAA,WAAW,EAAEA,WAFqB;AAGlC4E,UAAAA,GAAG,EAAEA;AAH6B,SAApC;AAKD,OArDwE,CAuDzE;;;AACA,UAAIb,KAAK,CAACqB,UAAN,KAAqB,GAAzB,EAA8B;AAC5BxB,QAAAA,KAAK,CAACS,aAAN,CAAoBgB,MAApB,GAA6B,IAA7B;AACD;;AAED,UAAIC,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAACE,MAAlB,GAA2B,IAA3B;AACAF,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,mCAA5B;AACA4F,MAAAA,iBAAiB,CAACd,SAAlB,GAA8BN,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAxB;AACAuB,MAAAA,iBAAiB,CAACG,KAAlB,GAA0BvB,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,OAArB,CAA1B;AACAuB,MAAAA,iBAAiB,CAACZ,WAAlB,GAAgCR,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,cAArB,CAAhC;AACAuB,MAAAA,iBAAiB,CAACI,YAAlB,GAAiCxB,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAjC;AACAuB,MAAAA,iBAAiB,CAACX,YAAlB,GAAiCT,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAjC;AACAuB,MAAAA,iBAAiB,CAACK,UAAlB,GAA+BzB,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA/B;AACAuB,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAACM,YAAlB,GAAiC1B,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAjC;AACAuB,MAAAA,iBAAiB,CAACH,gBAAlB,GAAqCvB,KAAK,CAACuB,gBAA3C;AAEA,aAAOG,iBAAP;AACD,KA3ED;;AA6EA,QAAIO,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAY,CAAE,CAAhD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,2BAA2B,CAAClG,SAA5B,CAAsC+D,eAAtC,GAAwD,UACtDC,YADsD,EAEtD;AACA,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AAEAsB,MAAAA,iBAAiB,CAACE,MAAlB,GAA2B,IAA3B;AACAF,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,yCAA5B;AACA4F,MAAAA,iBAAiB,CAACQ,OAAlB,GAA4B5B,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAACS,WAAlB,GAAgC7B,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,cAArB,CAAhC;AAEA,aAAOuB,iBAAP;AACD,KAZD;;AAcA,QAAIU,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAY,CAAE,CAAhD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,2BAA2B,CAACrG,SAA5B,CAAsC+D,eAAtC,GAAwD,UACtDC,YADsD,EAEtD;AACA;AACA,UAAIC,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACA,UAAIiC,aAAa,GAAGrC,KAAK,CAACsC,YAAN,CAAmBC,SAAvC;AACA,UAAIC,OAAO,GAAGlC,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAd;AAEAH,MAAAA,KAAK,CAACyC,2BAAN,GAAoC1C,YAApC,CAPA,CASA;AACA;;AACA,UACEyC,OAAO,IACPA,OAAO,KAAK,EADZ,KAECH,aAAa,KAAK,SAAlB,IAA+BA,aAAa,KAAK,SAFlD,CADF,EAIE;AACArC,QAAAA,KAAK,CAACsC,YAAN,CAAmBC,SAAnB,GAA+B,SAA/B;AACD,OAND,MAMO,IAAIC,OAAO,IAAIA,OAAO,KAAK,EAA3B,EAA+B;AACpCxC,QAAAA,KAAK,CAACsC,YAAN,CAAmBC,SAAnB,GAA+B,UAA/B;AACD,OAFM,MAEA,IAAIF,aAAa,KAAK,SAAtB,EAAiC;AACtCrC,QAAAA,KAAK,CAACsC,YAAN,CAAmBC,SAAnB,GAA+B,SAA/B;AACD,OAFM,MAEA;AACLvC,QAAAA,KAAK,CAACsC,YAAN,CAAmBC,SAAnB,GAA+B,cAA/B;AACD;;AAEDtC,MAAAA,OAAO,CAACC,WAAR,GAAsBoC,YAAtB,CAAmCI,WAAnC,GAAiDF,OAAjD;AAEA,UAAId,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,kCAA5B;AACA4F,MAAAA,iBAAiB,CAACiB,MAAlB,GAA2B,4BAA4BH,OAA5B,GAAsC,IAAjE;AACAd,MAAAA,iBAAiB,CAACgB,WAAlB,GAAgCpC,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAhC;AACAuB,MAAAA,iBAAiB,CAACkB,aAAlB,GAAkCtC,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAlC,CA/BA,CA+ByE;;AACzEuB,MAAAA,iBAAiB,CAACmB,aAAlB,GAAkCvC,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,iBAArB,CAAlC;AACAuB,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AAEA,aAAOuB,iBAAP;AACD,KAtCD;;AAwCA,QAAIoB,kCAAkC,GAAG,SAArCA,kCAAqC,GAAY,CAAE,CAAvD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,kCAAkC,CAAC/G,SAAnC,CAA6C+D,eAA7C,GAA+D,UAC7DC,YAD6D,EAE7D;AACA,UAAIC,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACAJ,MAAAA,KAAK,CAACS,aAAN,CAAoBsC,sBAApB,GAA6CC,QAAQ,CACnD1C,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CADmD,EAEnD,EAFmD,CAArD,CAHA,CAQA;;AACA,UAAIA,KAAK,CAAC8C,mBAAV,EAA+B;AAC7BjD,QAAAA,KAAK,CAACS,aAAN,CAAoByC,mBAApB,GACE5C,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,qBAArB,MAAgD,IADlD;AAED,OAHD,MAGO;AACLH,QAAAA,KAAK,CAACS,aAAN,CAAoByC,mBAApB,GAA0C,KAA1C;AACD;;AAED,UAAIxB,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC5F,OAAlB,GACE,kDADF;AAEA4F,MAAAA,iBAAiB,CAACiB,MAAlB,GACE,uEADF;AAEAjB,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAACgB,WAAlB,GAAgCpC,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAhC;AACAuB,MAAAA,iBAAiB,CAACyB,iBAAlB,GAAsC7C,KAAK,CAACC,OAAN,CACpCJ,KADoC,EAEpC,qBAFoC,CAAtC;AAKA,aAAOuB,iBAAP;AACD,KA/BD;;AAiCA,QAAI0B,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAY,CAAE,CAApD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,+BAA+B,CAACrH,SAAhC,CAA0C+D,eAA1C,GAA4D,UAC1DC,YAD0D,EAE1D;AACA,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AAEAsB,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,0CAA5B;AACA4F,MAAAA,iBAAiB,CAACE,MAAlB,GAA2BtB,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,QAArB,CAA3B;AACAuB,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAxB;AACAuB,MAAAA,iBAAiB,CAAC2B,GAAlB,GAAwB/C,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAxB;AACAuB,MAAAA,iBAAiB,CAAC4B,IAAlB,GAAyBhD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,MAArB,CAAzB;AACAuB,MAAAA,iBAAiB,CAAC6B,UAAlB,GAA+BjD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,aAArB,CAA/B;AACAuB,MAAAA,iBAAiB,CAAC8B,QAAlB,GAA6BlD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAA7B;AACAuB,MAAAA,iBAAiB,CAAC+B,UAAlB,GAA+BnD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,aAArB,CAA/B;AACAuB,MAAAA,iBAAiB,CAACgC,YAAlB,GAAiCpD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAjC;AAEA,aAAOuB,iBAAP;AACD,KAlBD;;AAoBA,QAAIiC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAY,CAAE,CAA5C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,uBAAuB,CAAC5H,SAAxB,CAAkC+D,eAAlC,GAAoD,UAClDC,YADkD,EAElD;AACA,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AAEA,UAAIQ,SAAS,GAAGN,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAAhB;AACA,UAAIyD,UAAU,GAAGtD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAjB;AACA,UAAI0D,QAAQ,GAAG5D,OAAO,CAACC,WAAR,GAAsBqB,gBAAtB,CAAuCX,SAAvC,CAAf,CANA,CAQA;AACA;;AACA,UAAIiD,QAAJ,EAAc;AACZC,QAAAA,OAAO,CAAC1G,GAAR,CACEwG,UAAU,GAAG,eAAb,GAA+BC,QAAQ,CAACzH,WAAxC,GAAsD,aADxD;AAGAkE,QAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAACC,KADb,EAEE,iBAAiBJ,QAAQ,CAACzH,WAA1B,GAAwC,iBAF1C,EAGE,EAHF;AAKA,eAAO6D,OAAO,CAACC,WAAR,GAAsBqB,gBAAtB,CAAuCX,SAAvC,CAAP;AACAc,QAAAA,iBAAiB,CAACwC,WAAlB,GAAgCL,QAAhC;AACD;;AAEDC,MAAAA,OAAO,CAAC1G,GAAR,CAAYwG,UAAU,GAAG,eAAb,GAA+BhD,SAA3C;AACAc,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,oCAA5B;AACA4F,MAAAA,iBAAiB,CAACE,MAAlB,GAA2B,IAA3B;AACAF,MAAAA,iBAAiB,CAACd,SAAlB,GAA8BN,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAxB;AAEA,aAAOuB,iBAAP;AACD,KAhCD;;AAkCA,QAAIyC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAY,CAAE,CAAzC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,oBAAoB,CAACpI,SAArB,CAA+B+D,eAA/B,GAAiD,UAAUC,YAAV,EAAwB;AACvE,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AAEAsB,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,iCAA5B;AACA4F,MAAAA,iBAAiB,CAACE,MAAlB,GAA2B,IAA3B;AACAF,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAxB;AAEA,aAAOuB,iBAAP;AACD,KAVD;;AAYA,QAAI0C,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,WAAV,EAAuB;AAC/C,WAAKA,WAAL,GAAmBA,WAAnB;AACD,KAFD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACID,IAAAA,mBAAmB,CAACrI,SAApB,CAA8B+D,eAA9B,GAAgD,UAAUC,YAAV,EAAwB;AACtE,UAAIC,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACAJ,MAAAA,KAAK,CAACsE,mBAAN,GAA4BvE,YAA5B,CAHsE,CAKtE;;AACAC,MAAAA,KAAK,CAACW,WAAN,CAAkB4D,QAAlB,GAA6BjE,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAA7B;AACAH,MAAAA,KAAK,CAACW,WAAN,CAAkB6D,SAAlB,GAA8BlE,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAH,MAAAA,KAAK,CAACW,WAAN,CAAkB8D,UAAlB,GAA+BnE,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,aAArB,CAA/B,CARsE,CAUtE;;AACAH,MAAAA,KAAK,CAACS,aAAN,CAAoBiE,SAApB,GAAgC,YAAhC;AACA1E,MAAAA,KAAK,CAACS,aAAN,CAAoBgB,MAApB,GAA6B,KAA7B;AACAzB,MAAAA,KAAK,CAACS,aAAN,CAAoBkE,eAApB,GAAsC,KAAtC,CAbsE,CAetE;;AACA3E,MAAAA,KAAK,CAACuB,gBAAN,GAAyB,EAAzB,CAhBsE,CAkBtE;;AACA,UACEvB,KAAK,CAACS,aAAN,CAAoBsC,sBAApB,GAA6C,CAA7C,IACA/C,KAAK,CAACS,aAAN,CAAoBsC,sBAApB,IAA8C,CAAC,CAFjD,EAGE;AACA;AACA/C,QAAAA,KAAK,CAACsC,YAAN,CAAmBI,WAAnB,GACE1C,KAAK,CAACS,aAAN,CAAoBsC,sBADtB,CAFA,CAKA;;AACA,aAAKsB,WAAL,CAAiBO,UAAjB,CACE5E,KAAK,CAACsC,YAAN,CAAmBuC,QADrB,EAEE7E,KAAK,CAAC8E,aAAN,CAAoBC,OAFtB,EAGE/E,KAAK,CAAC8E,aAAN,CAAoBE,cAHtB,EAIEhF,KAAK,CAAC8E,aAAN,CAAoBpC,WAJtB,EAKE1C,KAAK,CAAC8E,aAAN,CAAoBG,QALtB,EAMEjF,KAAK,CAACS,aAAN,CAAoByC,mBANtB,EANA,CAeA;;AACAlD,QAAAA,KAAK,CAACS,aAAN,CAAoBsC,sBAApB,GAA6C,CAA7C;AACA/C,QAAAA,KAAK,CAACS,aAAN,CAAoByC,mBAApB,GAA0C,KAA1C;AACD,OAxCqE,CA0CtE;AACA;;;AACA,UACElD,KAAK,CAACW,WAAN,CAAkBuE,mBAAlB,IACAlF,KAAK,CAACW,WAAN,CAAkBuE,mBAAlB,CAAsCC,YADtC,IAEAnF,KAAK,CAACW,WAAN,CAAkBuE,mBAAlB,CAAsCC,YAAtC,CAAmDC,MAAnD,GAA4D,CAF5D,IAGApF,KAAK,CAACW,WAAN,CAAkB0E,aAAlB,KAAoC,UAJtC,EAKE;AACArF,QAAAA,KAAK,CAACsF,cAAN,GAAuBC,WAAW,CAACjF,KAAK,CAACkF,mBAAP,EAA4B,KAA5B,CAAlC;AACD;;AAED,UAAI9D,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,iCAA5B;AACA4F,MAAAA,iBAAiB,CAACiB,MAAlB,GAA2B,EAA3B;AACAjB,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAxB;AACAuB,MAAAA,iBAAiB,CAACd,SAAlB,GAA8BN,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAAC+D,OAAlB,GAA4BnF,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAAC6C,QAAlB,GAA6BvE,KAAK,CAACW,WAAN,CAAkB4D,QAA/C;AACA7C,MAAAA,iBAAiB,CAAC8C,SAAlB,GAA8BxE,KAAK,CAACW,WAAN,CAAkB6D,SAAhD;AACA9C,MAAAA,iBAAiB,CAAC+C,UAAlB,GAA+BzE,KAAK,CAACW,WAAN,CAAkB8D,UAAjD;AACA/C,MAAAA,iBAAiB,CAACM,YAAlB,GAAiC1B,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAjC;AACAuB,MAAAA,iBAAiB,CAACgE,kBAAlB,GAAuCpF,KAAK,CAACC,OAAN,CACrCJ,KADqC,EAErC,qBAFqC,CAAvC;AAKA,aAAOuB,iBAAP;AACD,KAtED;;AAwEA,QAAIiE,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAY,CAAE,CAA5C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,uBAAuB,CAAC5J,SAAxB,CAAkC+D,eAAlC,GAAoD,UAClDC,YADkD,EAElD;AACA,UAAIC,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACA,UAAIwF,gBAAgB,GAAG,EAAvB;AACA,UAAIC,eAAe,GAAG7F,KAAK,CAAC8F,eAAN,CAAsBD,eAA5C;AACA,UAAIE,eAAe,GAAGzF,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAAtB;;AACA,UAAI4F,eAAe,KAAK,EAAxB,EAA4B;AAC1BA,QAAAA,eAAe,GAAGA,eAAe,CAACC,KAAhB,CAAsB,GAAtB,CAAlB;AACD;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACX,MAApC,EAA4Ca,CAAC,EAA7C,EAAiD;AAC/C;AACA,YAAIC,EAAE,GAAGH,eAAe,CAACE,CAAD,CAAxB;AACA,YAAIE,SAAS,GAAG7F,KAAK,CAAC8F,WAAN,CAAkBP,eAAlB,EAAmCK,EAAnC,EAAuC,QAAvC,CAAhB;;AACA,YAAIC,SAAJ,EAAe;AACbP,UAAAA,gBAAgB,CAACS,IAAjB,CAAsBF,SAAtB;AACD,SAFD,MAEO;AACL;AACA,cAAIG,IAAI,GAAG;AACTC,YAAAA,MAAM,EAAEL,EADC;AAETM,YAAAA,QAAQ,EAAE,EAFD;AAGTC,YAAAA,QAAQ,EAAE,EAHD;AAITC,YAAAA,mBAAmB,EAAE,EAJZ;AAKTC,YAAAA,iBAAiB,EAAE;AALV,WAAX;AAOAf,UAAAA,gBAAgB,CAACS,IAAjB,CAAsBC,IAAtB;AACD;AACF;;AAEDtG,MAAAA,KAAK,CAAC8F,eAAN,CAAsBc,MAAtB,GAA+BC,IAAI,CAACC,KAAL,CAC7BD,IAAI,CAACE,SAAL,CAAenB,gBAAf,CAD6B,CAA/B;AAIA,UAAIlE,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA5B;AACAuB,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,qCAA5B;AACA4F,MAAAA,iBAAiB,CAACkF,MAAlB,GAA2BhB,gBAA3B;AAEA,aAAOlE,iBAAP;AACD,KAzCD;;AA2CA,QAAIsF,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAY,CAAE,CAAxC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,mBAAmB,CAACjL,SAApB,CAA8B+D,eAA9B,GAAgD,UAAUC,YAAV,EAAwB;AACtE,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB,CADsE,CAGtE;;AACA2B,MAAAA,iBAAiB,CAACuF,WAAlB,GAAgC3G,KAAK,CAACC,OAAN,CAC9BR,YAAY,CAACK,eADiB,EAE9B,cAF8B,CAAhC;AAKA,aAAOsB,iBAAP;AACD,KAVD;;AAYA,QAAIwF,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAY,CAAE,CAAxmBAAmB,CAACnL,SAApB,CAA8B+D,eAA9B,GAAgD,UAAUC,YAAV,EAAwB;AACtE,UAAIC,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIC,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AAEA,UAAI+G,OAAO,GAAG7G,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAd;AACAoH,MAAAA,OAAO,CAACrL,OAAR,GAAkB,gCAAlB;AACAqL,MAAAA,OAAO,CAACvF,MAAR,GAAiB,IAAjB;AACAuF,MAAAA,OAAO,CAACnG,GAAR,GAAcV,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAd;AACAgH,MAAAA,OAAO,CAACzG,OAAR,GAAkBJ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAAlB;AACAgH,MAAAA,OAAO,CAAClC,QAAR,GAAmB3E,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAAnB;AACAgH,MAAAA,OAAO,CAACC,QAAR,GAAmB9G,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAAnB;AACAgH,MAAAA,OAAO,CAACE,SAAR,GAAoB/G,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAApB;AACAgH,MAAAA,OAAO,CAAC9D,GAAR,GAAc/C,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAd;AACAgH,MAAAA,OAAO,CAAC7D,IAAR,GAAehD,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,MAArB,CAAf;AACAgH,MAAAA,OAAO,CAACG,QAAR,GAAmBhH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAAnB;AACAgH,MAAAA,OAAO,CAACI,MAAR,GAAiBjH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,SAArB,CAAjB;AACAgH,MAAAA,OAAO,CAAClG,YAAR,GAAuBX,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAvB;AACAgH,MAAAA,OAAO,CAACK,SAAR,GAAoBlH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAApB;AACAgH,MAAAA,OAAO,CAACM,aAAR,GAAwBnH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,gBAArB,CAAxB;AACAgH,MAAAA,OAAO,CAACO,gCAAR,GAA2CpH,KAAK,CAACC,OAAN,CACzCJ,KADyC,EAEzC,qCAFyC,CAA3C;AAIAgH,MAAAA,OAAO,CAACQ,wBAAR,GAAmCrH,KAAK,CAACC,OAAN,CACjCJ,KADiC,EAEjC,6BAFiC,CAAnC;AAIAgH,MAAAA,OAAO,CAACS,WAAR,GAAsBtH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,cAArB,CAAtB;AACAgH,MAAAA,OAAO,CAACU,YAAR,GAAuBvH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAvB;AACAgH,MAAAA,OAAO,CAACW,uBAAR,GAAkCxH,KAAK,CAACC,OAAN,CAChCJ,KADgC,EAEhC,0BAFgC,CAAlC;AAIAgH,MAAAA,OAAO,CAACY,QAAR,GAAmBzH,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAAnB;AACAgH,MAAAA,OAAO,CAACa,aAAR,GAAwB1H,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,gBAArB,CAAxB;AACAgH,MAAAA,OAAO,CAACc,QAAR,GAAmB3H,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAAnB;AACAgH,MAAAA,OAAO,CAAC9B,aAAR,GAAwB/E,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,iBAArB,CAAxB;AACAgH,MAAAA,OAAO,CAACe,WAAR,GAAsB5H,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,cAArB,CAAtB;AACAgH,MAAAA,OAAO,CAACgB,mBAAR,GAA8B7H,KAAK,CAACC,OAAN,CAC5BJ,KAD4B,EAE5B,uBAF4B,CAA9B;;AAKA,UAAIgH,OAAO,CAAClG,YAAZ,EAA0B;AACxBkG,QAAAA,OAAO,CAACjG,cAAR,GAAyBZ,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,iBAArB,CAAzB,CADwB,CAC0C;AACnE,OA7CqE,CA+CtE;;;AACAgH,MAAAA,OAAO,CAACiB,KAAR,GAAgB9H,KAAK,CAAC+H,yBAAN,CACdtI,YADc,EAEd,iBAFc,EAGd,MAHc,EAId,CAJc,CAAhB;AAKAoH,MAAAA,OAAO,CAACmB,cAAR,GAAyBhI,KAAK,CAAC+H,yBAAN,CACvBtI,YADuB,EAEvB,iBAFuB,EAGvB,iBAHuB,EAIvB,gBAJuB,EAKvB,CALuB,CAAzB;AAMAoH,MAAAA,OAAO,CAACjC,mBAAR,GAA8B5E,KAAK,CAAC+H,yBAAN,CAC5BtI,YAD4B,EAE5B,iBAF4B,EAG5B,sBAH4B,EAI5B,aAJ4B,EAK5B,CAL4B,CAA9B;AAMAoH,MAAAA,OAAO,CAACoB,gBAAR,GACEjI,KAAK,CAAC+H,yBAAN,CACEtI,YADF,EAEE,iBAFF,EAGE,mBAHF,EAIE,iBAJF,EAKE,CALF,KAKQ,EANV;AAOAoH,MAAAA,OAAO,CAACqB,OAAR,GAAkBlI,KAAK,CAAC+H,yBAAN,CAChBtI,YADgB,EAEhB,iBAFgB,EAGhB,SAHgB,EAIhB,CAJgB,CAAlB;AAKAoH,MAAAA,OAAO,CAACsB,cAAR,GAAyBnI,KAAK,CAAC+H,yBAAN,CACvBtI,YADuB,EAEvB,iBAFuB,EAGvB,iBAHuB,EAIvB,QAJuB,EAKvB,CALuB,CAAzB;AAMAoH,MAAAA,OAAO,CAACuB,cAAR,GAAyB,EAAzB;AACAvB,MAAAA,OAAO,CAACwB,iBAAR,GAA4BrI,KAAK,CAAC+H,yBAAN,CAC1BtI,YAD0B,EAE1B,iBAF0B,EAG1B,qBAH0B,EAI1B,CAJ0B,CAA5B;AAKAoH,MAAAA,OAAO,CAACyB,IAAR,GAAetI,KAAK,CAAC+H,yBAAN,CACbtI,YADa,EAEb,iBAFa,EAGb,MAHa,EAIb,CAJa,CAAf,CAzFsE,CA+FtE;;AACA,UAAI;AACF,YAAII,KAAK,CAACyI,IAAN,IAAczI,KAAK,CAACyI,IAAN,CAAWC,UAA7B,EAAyC;AACvC,iBAAO1B,OAAO,CAACyB,IAAR,CAAaE,UAApB;AACA3B,UAAAA,OAAO,CAACyB,IAAR,CAAaG,SAAb,GAAyB,EAAzB;;AACA,eAAK,IAAIC,GAAT,IAAgB7I,KAAK,CAACyI,IAAN,CAAWC,UAA3B,EAAuC;AACrC1B,YAAAA,OAAO,CAACyB,IAAR,CAAaG,SAAb,CAAuBC,GAAvB,IAA8B7I,KAAK,CAACyI,IAAN,CAAWC,UAAX,CAAsBG,GAAtB,EAA2B,OAA3B,CAA9B;AACD;AACF;AACF,OARD,CAQE,OAAOC,CAAP,EAAU;AACVnF,QAAAA,OAAO,CAACnI,IAAR,CAAa,6CAA6CsN,CAA1D;AACD;;AAED,UAAI9B,OAAO,CAACqB,OAAZ,EAAqB;AACnB;AACArB,QAAAA,OAAO,CAACqB,OAAR,CAAgBU,YAAhB,GAA+B,EAA/B;AACA,YAAIC,WAAW,GAAGhJ,KAAK,CAACqI,OAAN,CAAc,eAAd,CAAlB;;AACA,aAAK,IAAIQ,GAAT,IAAgBG,WAAhB,EAA6B;AAC3B,cAAIC,MAAM,GAAG,EAAb;;AACA,cAAID,WAAW,IAAIA,WAAW,CAACH,GAAD,CAA1B,IAAmCG,WAAW,CAACH,GAAD,CAAX,CAAiB,OAAjB,CAAvC,EAAkE;AAChEI,YAAAA,MAAM,GAAGD,WAAW,CAACH,GAAD,CAAX,CAAiB,OAAjB,CAAT;AACD;;AAED7B,UAAAA,OAAO,CAACqB,OAAR,CAAgBU,YAAhB,CAA6BF,GAA7B,IAAoCI,MAApC;AACD;AACF,OAxHqE,CA0HtE;;;AACA,UAAI;AACF,YAAIC,UAAU,GAAGxC,IAAI,CAACC,KAAL,CAAW3G,KAAK,CAACmJ,aAAN,CAAoB,OAApB,CAAX,EAAyCtJ,KAA1D;AACA,YAAIuJ,OAAO,GAAG,EAAd;AACA,YAAIC,IAAI,GAAGxN,MAAM,CAACwN,IAAP,CAAYH,UAAZ,CAAX;;AACA,aAAK,IAAII,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGD,IAAI,CAACpE,MAA7B,EAAqCqE,GAAG,EAAxC,EAA4C;AAC1C,cAAIT,GAAG,GAAGQ,IAAI,CAACC,GAAD,CAAd;AACA,cAAIC,KAAK,GAAGL,UAAU,CAACL,GAAD,CAAV,CAAgBU,KAA5B;AACAH,UAAAA,OAAO,CAACP,GAAD,CAAP,GAAeU,KAAf;AACD;;AACDvC,QAAAA,OAAO,CAACuB,cAAR,GAAyBa,OAAzB;AACD,OAVD,CAUE,OAAOI,GAAP,EAAY,CAAE,CArIsD,CAuItE;;;AACA,UAAIxC,OAAO,CAACwB,iBAAR,IAA6BxB,OAAO,CAACwB,iBAAR,CAA0BiB,MAA3D,EAAmE;AACjEzC,QAAAA,OAAO,CAACwB,iBAAR,GAA4BxB,OAAO,CAACwB,iBAAR,CAA0BiB,MAAtD;AACD,OA1IqE,CA4ItE;;;AACA,UACEzC,OAAO,CAACoB,gBAAR,IACApB,OAAO,CAACoB,gBAAR,CAAyBA,gBAF3B,EAGE;AACApB,QAAAA,OAAO,CAACoB,gBAAR,GAA2BpB,OAAO,CAACoB,gBAAR,CAAyBA,gBAApD;AACD,OAlJqE,CAoJtE;;;AACA,UACEpB,OAAO,CAACjC,mBAAR,IACAiC,OAAO,CAACjC,mBAAR,CAA4B2E,WAF9B,EAGE;AACA1C,QAAAA,OAAO,CAACjC,mBAAR,CAA4BC,YAA5B,GAA2C,CACzCgC,OAAO,CAACjC,mBADiC,CAA3C;AAGD,OA5JqE,CA8JtE;;;AACAiC,MAAAA,OAAO,CAACiB,KAAR,CAAc0B,UAAd,GAA2B3C,OAAO,CAACiB,KAAR,CAAc0B,UAAd,KAA6B,GAAxD;;AACA,UACE3C,OAAO,CAACjC,mBAAR,IACAiC,OAAO,CAACjC,mBAAR,CAA4BC,YAF9B,EAGE;AACA,aACE,IAAI4E,CAAC,GAAG,CADV,EAEEA,CAAC,GAAG5C,OAAO,CAACjC,mBAAR,CAA4BC,YAA5B,CAAyCC,MAF/C,EAGE2E,CAAC,EAHH,EAIE;AACA,cAAIC,IAAI,GAAG7C,OAAO,CAACjC,mBAAR,CAA4BC,YAA5B,CAAyC4E,CAAzC,CAAX;AACAC,UAAAA,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACC,UAAL,KAAoB,GAAtC;AACAD,UAAAA,IAAI,CAACE,WAAL,GAAmBF,IAAI,CAACE,WAAL,KAAqB,GAAxC;AACAF,UAAAA,IAAI,CAACG,UAAL,GAAkBH,IAAI,CAACG,UAAL,KAAoB,GAAtC;AACAH,UAAAA,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACI,IAAL,KAAc,GAA1B;AACAJ,UAAAA,IAAI,CAACK,SAAL,GAAiBL,IAAI,CAACK,SAAL,KAAmB,GAApC;AACD;AACF,OAhLqE,CAkLtE;;;AACArK,MAAAA,KAAK,CAACsK,UAAN,GAAmBC,iBAAiB,CAACpK,KAAD,EAAQgH,OAAR,CAApC;AACAA,MAAAA,OAAO,CAACqB,OAAR,GAAkBxI,KAAK,CAACsK,UAAxB,CApLsE,CAoLlC;AAEpC;;AACA,UAAInD,OAAO,CAAClG,YAAZ,EAA0B;AACxBjB,QAAAA,KAAK,CAACS,aAAN,CAAoBiE,SAApB,GAAgC,mBAAhC;AACD,OAFD,MAEO;AACL1E,QAAAA,KAAK,CAACS,aAAN,CAAoBiE,SAApB,GAAgC,QAAhC,CADK,CAGL;;AACA,YAAIyC,OAAO,CAACqB,OAAR,IAAmBrB,OAAO,CAACqB,OAAR,CAAgBgC,QAAhB,IAA4B,EAAnD,EAAuD;AACrDxK,UAAAA,KAAK,CAACyK,cAAN,GAAuBtD,OAAO,CAACqB,OAAR,CAAgBgC,QAAvC;AACD;AACF,OAhMqE,CAkMtE;;;AACAxK,MAAAA,KAAK,CAAC0K,eAAN,CAAsBC,YAAtB,GAAqC,CAArC,CAnMsE,CAqMtE;;AAEA3K,MAAAA,KAAK,CAACW,WAAN,GAAoBwG,OAApB;AAEA,aAAOA,OAAP;AACD,KA1MD;;AA4MA,aAASoD,iBAAT,CAA2BpK,KAA3B,EAAkCgH,OAAlC,EAA2C;AACzC,UAAInH,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAI0K,MAAM,GAAGzD,OAAO,CAACqB,OAAR,IAAmB,EAAhC,CAFyC,CAEL;;AACpC,UAAIrI,KAAK,CAACqI,OAAN,IAAiBrI,KAAK,CAACqI,OAAN,CAAcqC,uBAAnC,EAA4D;AAC1D,YAAIC,aAAa,GAAG,EAApB;AACA,YAAIC,gBAAgB,GAAGzK,KAAK,CAACC,OAAN,CACrBJ,KAAK,CAACqI,OADe,EAErB,yBAFqB,CAAvB;;AAIA,YAAIuC,gBAAgB,CAAC3F,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B0F,UAAAA,aAAa,GAAGxK,KAAK,CAAC0K,4BAAN,CACdD,gBADc,EAEd,GAFc,EAGd,IAHc,CAAhB;AAKD;;AAED,aAAK,IAAIE,QAAT,IAAqBH,aAArB,EAAoC;AAClCF,UAAAA,MAAM,CAACK,QAAD,CAAN,GAAmBH,aAAa,CAACG,QAAD,CAAhC;AACD;AACF;;AAEDL,MAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBzD,OAAO,CAAC9D,GAAxB;AACAuH,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBzD,OAAO,CAAC7D,IAAzB;AACAsH,MAAAA,MAAM,CAAC,KAAD,CAAN,GAAgBzD,OAAO,CAACnG,GAAxB;;AAEA,UAAI;AACF,YAAImG,OAAO,CAACiB,KAAR,CAAc8C,MAAlB,EAA0B;AACxBN,UAAAA,MAAM,CAAC,UAAD,CAAN,GAAqBzD,OAAO,CAACiB,KAAR,CAAc8C,MAAd,IAAwB,EAA7C;AACAN,UAAAA,MAAM,CAAC,YAAD,CAAN,GAAuBzD,OAAO,CAACiB,KAAR,CAAc+C,IAAd,IAAsB,EAA7C;AACAP,UAAAA,MAAM,CAAC,YAAD,CAAN,GAAuBzD,OAAO,CAACiB,KAAR,CAAcgD,WAAd,IAA6B,EAApD;;AAEA,cACEjE,OAAO,CAACiB,KAAR,CAAc0B,UAAd,KAA6B,GAA7B,IACA3C,OAAO,CAACiB,KAAR,CAAc0B,UAAd,KAA6B,IAF/B,EAGE;AACAc,YAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,UAAvB;AACD,WALD,MAKO;AACLA,YAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,SAAvB;AACD;AACF,SAbD,MAaO;AACLA,UAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,GAArB;AACAA,UAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,QAAvB;AACAA,UAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,EAAvB;AACAA,UAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,EAAvB;AACD;AACF,OApBD,CAoBE,OAAOS,GAAP,EAAY;AACZvH,QAAAA,OAAO,CAACwH,KAAR,CACE,mDADF,EAEE,CAACD,GAFH;AAID;;AAED,UAAI;AACFT,QAAAA,MAAM,CAAC,gBAAD,CAAN,GAA2B5K,KAAK,CAACS,aAAN,CAAoB8K,SAA/C;AACAX,QAAAA,MAAM,CAAC,eAAD,CAAN,GAA0B5K,KAAK,CAACS,aAAN,CAAoB+K,QAA9C;AACAZ,QAAAA,MAAM,CAAC,iBAAD,CAAN,GAA4B5K,KAAK,CAACS,aAAN,CAAoBgL,eAAhD;AACAb,QAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB5K,KAAK,CAACS,aAAN,CAAoBiL,SAA1C;AACAd,QAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB5K,KAAK,CAACS,aAAN,CAAoBkL,KAA3C;AACAf,QAAAA,MAAM,CAAC,eAAD,CAAN,GAA0B5K,KAAK,CAACS,aAAN,CAAoBmL,QAA9C;AACD,OAPD,CAOE,OAAOP,GAAP,EAAY;AACZvH,QAAAA,OAAO,CAACwH,KAAR,CACE,oDADF,EAEED,GAFF;AAID;;AAED,aAAOT,MAAP;AACD;;AAED,aAASd,UAAT,CAAoBxD,IAApB,EAA0B;AACxB,UAAIA,IAAI,IAAIA,IAAI,CAACwD,UAAjB,EAA6B;AAC3B,eAAOxD,IAAI,CAACwD,UAAL,KAAoB,GAApB,IAA2BxD,IAAI,CAACwD,UAAL,KAAoB,IAAtD;AACD;;AACD,aAAO,KAAP;AACD;;AAED,QAAI+B,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAY,CAAE,CAAhD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,2BAA2B,CAAC9P,SAA5B,CAAsC+D,eAAtC,GAAwD,UACtDC,YADsD,EAEtD;AACA,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,yCAA5B;AACA4F,MAAAA,iBAAiB,CAACE,MAAlB,GAA2B,IAA3B;AACAF,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAC1BR,YAAY,CAACK,eADa,EAE1B,UAF0B,CAA5B;AAIAsB,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CACtBR,YAAY,CAACK,eADS,EAEtB,KAFsB,CAAxB;AAIAsB,MAAAA,iBAAiB,CAACE,MAAlB,GACEtB,KAAK,CAACC,OAAN,CAAcR,YAAY,CAACK,eAA3B,EAA4C,QAA5C,MAA0D,MAD5D;AAGA,aAAOsB,iBAAP;AACD,KAlBD;;AAoBA,QAAIoK,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAY,CAAE,CAA5C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,uBAAuB,CAAC/P,SAAxB,CAAkC+D,eAAlC,GAAoD,UAClDC,YADkD,EAElD;AACA,UAAI2B,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,oCAA5B;AACA4F,MAAAA,iBAAiB,CAACE,MAAlB,GAA2B,IAA3B;AACAF,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAC1BR,YAAY,CAACK,eADa,EAE1B,UAF0B,CAA5B;AAIAsB,MAAAA,iBAAiB,CAACE,MAAlB,GAA2BtB,KAAK,CAACC,OAAN,CACzBR,YAAY,CAACK,eADY,EAEzB,QAFyB,CAA3B;AAKA,aAAOsB,iBAAP;AACD,KAhBD;;AAkBA,QAAIqK,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAY,CAAE,CAAjD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,4BAA4B,CAAChQ,SAA7B,CAAuC+D,eAAvC,GAAyD,UACvDC,YADuD,EAEvD;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AAEAH,MAAAA,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCkE,eAApC,GAAsD,IAAtD;AAEA,UAAIjD,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC4F,QAAlB,GAA6BnH,KAAK,CAAC,YAAD,CAAlC;AACAuB,MAAAA,iBAAiB,CAACsK,SAAlB,GAA8B7L,KAAK,CAAC,aAAD,CAAnC;AACAuB,MAAAA,iBAAiB,CAACuK,SAAlB,GAA8B3L,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAACwK,SAAlB,GAA8B5L,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAACyK,QAAlB,GAA6B7L,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA7B;AAEA,aAAOuB,iBAAP;AACD,KAfD;;AAiBA,QAAI0K,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAY,CAAE,CAA7C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,wBAAwB,CAACrQ,SAAzB,CAAmC+D,eAAnC,GAAqD,UACnDC,YADmD,EAEnD;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACA,UAAIJ,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AAEAF,MAAAA,KAAK,CAAC4K,MAAN,CAAa,YAAb,IAA6BtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA7B;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,UAAb,IAA2BtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA3B;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,WAAb,IAA4BtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,WAArB,CAA5B;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,UAAb,IAA2BtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA3B;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,UAAb,IAA2BtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA3B;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,QAAb,IAAyBtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,QAArB,CAAzB;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,OAAb,IAAwBtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,OAArB,CAAxB;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,MAAb,IAAuBtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,MAArB,CAAvB;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,OAAb,IAAwBtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,OAArB,CAAxB;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,KAAb,IAAsBtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,KAArB,CAAtB;AACAH,MAAAA,KAAK,CAAC4K,MAAN,CAAa,eAAb,IAAgCtK,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,eAArB,CAAhC;AAEA,aAAOH,KAAK,CAAC4K,MAAb;AACD,KAnBD;;AAqBA,QAAIyB,6BAA6B,GAAG,SAAhCA,6BAAgC,GAAY,CAAE,CAAlD;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIA,IAAAA,6BAA6B,CAACtQ,SAA9B,CAAwC+D,eAAxC,GAA0D,UACxDC,YADwD,EAExD;AACA,UAAII,KAAK,GAAGJ,YAAY,CAACK,eAAzB;AACA,UAAIsB,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B5B,YAA3B,CAAxB;AACA2B,MAAAA,iBAAiB,CAAC4F,QAAlB,GAA6BnH,KAAK,CAAC,YAAD,CAAlC;AACAuB,MAAAA,iBAAiB,CAACsK,SAAlB,GAA8B7L,KAAK,CAAC,aAAD,CAAnC;AACAuB,MAAAA,iBAAiB,CAACuK,SAAlB,GAA8B3L,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAACwK,SAAlB,GAA8B5L,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,YAArB,CAA9B;AACAuB,MAAAA,iBAAiB,CAACyK,QAAlB,GAA6B7L,KAAK,CAACC,OAAN,CAAcJ,KAAd,EAAqB,UAArB,CAA7B;AAEA,aAAOuB,iBAAP;AACD,KAZD;;AAcA,QAAI4K,UAAU,GAAG,SAAbA,UAAa,CAAUC,SAAV,EAAqB7L,OAArB,EAA8BM,GAA9B,EAAmCH,cAAnC,EAAmD;AAClE,WAAK0L,SAAL,GAAiBA,SAAS,IAAI,MAA9B;AACA,WAAK7L,OAAL,GAAeA,OAAf;AACA,WAAKM,GAAL,GAAWA,GAAX;AACA,WAAKH,cAAL,GAAsBA,cAAtB;AACD,KALD;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIyL,IAAAA,UAAU,CAACvQ,SAAX,CAAqB+D,eAArB,GAAuC,UAAU0M,QAAV,EAAoB;AACzD,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAACiL,IAAlB,GAAyBrM,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,MAApB,CAAzB;;AAEA,UAAI/K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC;AACrCtB,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAACC,KAA5B,EAAmCvC,iBAAiB,CAAC5F,OAArD,EAA8D0Q,QAA9D;AACD,OAFD,MAEO;AACLlM,QAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAAC4I,IADb,EAEElL,iBAAiB,CAAC5F,OAAlB,GAA4B,IAA5B,GAAmC4F,iBAAiB,CAACiB,MAFvD,EAGE6J,QAHF;AAKD;;AAED,aAAO9K,iBAAP;AACD,KAjBD;;AAmBA,QAAImL,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,UAAV,EAAsBC,aAAtB,EAAqC;AAC3D,UACED,UAAU,CAACE,WAAX,MAA4B,UAA5B,IACA/M,OAAO,CAACC,WAAR,GAAsBuB,MAAtB,IAAgC,IAFlC,EAGE;AACA,aAAKqL,UAAL,GAAkB,kBAAlB;AACA,aAAKC,aAAL,GAAqB,EAArB;AACD,OAND,MAMO;AACL,aAAKD,UAAL,GAAkBA,UAAU,CAACE,WAAX,MAA4B,EAA9C;AACA,aAAKD,aAAL,GAAqBA,aAAa,IAAI,EAAtC;AACD;AACF,KAXD;;AAaAF,IAAAA,iBAAiB,CAAC9Q,SAAlB,CAA4BkR,UAA5B,GAAyC,YAAY;AACnD,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACC,WAFb;AAGV,yBAAe/M,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAASvN,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC;AADrC,WALA;AAQVtF,UAAAA,KAAK,EAAE;AACL,qBAAS,KAAK0R;AADT,WARG;AAWVW,UAAAA,eAAe,EAAE;AACf,qBAAS,KAAKV;AADC;AAXP;AADJ,OAAV;AAkBA,aAAOlG,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KApBD;AAsBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIL,IAAAA,iBAAiB,CAAC9Q,SAAlB,CAA4B+D,eAA5B,GAA8C,UAAU0M,QAAV,EAAoB;AAChE,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAI9K,MAAM,GAAGtB,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,QAApB,CAAb;AACA,UAAIiB,SAAS,GAAGpN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAAhB;AACA,UAAIkB,SAAS,GAAGrN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,eAApB,CAAhB;AACA,UAAImB,YAAY,GAAGtN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,gBAApB,CAAnB;AACA,UAAIoB,YAAY,GAAGvN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,iBAApB,CAAnB;AACA,UAAIzM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ,CAPgE,CAShE;;AACA,UAAIwB,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4B8L,QAAQ,CAACE,WAAT,CAAqBc,QAArB,CAA8B,OAA9B,KAA0C,EAAtE;AACA9L,MAAAA,iBAAiB,CAACoM,aAAlB,GAAkCJ,SAAlC;AACAhM,MAAAA,iBAAiB,CAACqM,YAAlB,GAAiCJ,SAAjC;AACAjM,MAAAA,iBAAiB,CAACsM,gBAAlB,GAAqCJ,YAArC;AACAlM,MAAAA,iBAAiB,CAACuM,eAAlB,GAAoCJ,YAApC;;AAEA,UAAIjM,MAAM,IAAI,IAAd,EAAoB;AAClB,YAAIsM,YAAY,GAAGR,SAAnB;AACA,YAAIS,YAAY,GAAGR,SAAnB;;AAEA,YAAIC,YAAY,CAACxI,MAAb,GAAsB,CAA1B,EAA6B;AAC3B8I,UAAAA,YAAY,GAAGN,YAAf;AACD;;AAED,YAAIC,YAAY,CAACzI,MAAb,GAAsB,CAA1B,EAA6B;AAC3B+I,UAAAA,YAAY,GAAGN,YAAf;AACD,SAViB,CAYlB;;;AACA7N,QAAAA,KAAK,CAACS,aAAN,CAAoBsN,YAApB,GAAmCJ,SAAnC;AACA3N,QAAAA,KAAK,CAACS,aAAN,CAAoB2N,iBAApB,GAAwCP,YAAxC;AACA7N,QAAAA,KAAK,CAACqO,gBAAN,GAAyB7B,QAAzB;AACD,OAhBD,MAgBO;AACL,YAAI9K,iBAAiB,CAAC5F,OAAlB,KAA8B,EAAlC,EAAsC;AACpC4F,UAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,8BAA5B;AACD,SAHI,CAKL;;;AACA,YAAIA,OAAO,GACT,mCAAmC4F,iBAAiB,CAACiB,MADvD;AAEArC,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC9Q,OAAlC,EAA2C0Q,QAA3C;AACD;;AAED,aAAO9K,iBAAP;AACD,KA9CD;;AAgDA,QAAI4M,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,MAAV,EAAkB;AAC1C,WAAK3C,QAAL,GAAgB2C,MAAM,CAAC3C,QAAvB;AACA,WAAKpR,QAAL,GAAgB+T,MAAM,CAAC/T,QAAvB;AACA,WAAKgU,UAAL,GAAkBD,MAAM,CAACC,UAAzB;AACA,WAAKC,aAAL,GAAqBF,MAAM,CAACE,aAA5B;AACA,WAAKC,SAAL,GAAiBH,MAAM,CAACG,SAAxB;AACA,WAAKC,iBAAL,GAAyBJ,MAAM,CAACI,iBAAhC;AACA,WAAKC,QAAL,GAAgBL,MAAM,CAACK,QAAvB;AACD,KARD;;AAUAN,IAAAA,mBAAmB,CAACvS,SAApB,CAA8B8S,eAA9B,GAAgD,YAAY;AAC1D5O,MAAAA,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,GAA4C,IAA5C;;AACA,cAAQ,KAAKF,QAAb;AACE,aAAKG,kBAAkB,CAACC,iBAAxB;AACEC,UAAAA,iBAAiB,CAAC,KAAKL,QAAN,EAAgB,aAAhB,EAA+B;AAC9ChD,YAAAA,QAAQ,EAAE,KAAKA,QAD+B;AAE9CpR,YAAAA,QAAQ,EAAE,KAAKA,QAF+B;AAG9CgU,YAAAA,UAAU,EAAE,KAAKA;AAH6B,WAA/B,CAAjB;;AAKA;;AACF,aAAKO,kBAAkB,CAACG,QAAxB;AACED,UAAAA,iBAAiB,CAAC,KAAKL,QAAN,EAAgB,sBAAhB,EAAwC;AACvDH,YAAAA,aAAa,EAAE,KAAKA,aADmC;AAEvDU,YAAAA,WAAW,EAAE,KAAKT;AAFqC,WAAxC,CAAjB;;AAIA;;AACF,aAAKK,kBAAkB,CAACK,YAAxB;AACEH,UAAAA,iBAAiB,CAAC,KAAKL,QAAN,EAAgB,OAAhB,EAAyB,EAAzB,CAAjB;;AACA;AAhBJ;AAkBD,KApBD;AAsBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIN,IAAAA,mBAAmB,CAACvS,SAApB,CAA8B+D,eAA9B,GAAgD,UAAU0M,QAAV,EAAoB;AAClE,UAAIxM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACAF,MAAAA,KAAK,CAACqP,kBAAN,GAA2B7C,QAA3B,CAFkE,CAE7B;;AACrCxM,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BQ,WAA1B,GAAwC9C,QAAQ,CAAC8C,WAAjD,CAHkE,CAGJ;;AAC9DtP,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BS,YAA1B,GAAyC/C,QAAQ,CAAC+C,YAAlD;AACAvP,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BJ,SAA1B,GAAsClC,QAAQ,CAACkC,SAA/C;AACA1O,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BU,SAA1B,GAAsChD,QAAQ,CAACiD,KAA/C;AACAzP,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BY,UAA1B,GAAuClD,QAAQ,CAACmD,IAAhD;AACA3P,MAAAA,KAAK,CAAC8O,mBAAN,CAA0Bc,MAA1B,GAAmCpD,QAAQ,CAACqD,YAA5C;AACA7P,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BN,UAA1B,GAAuChC,QAAQ,CAACgC,UAAhD;AACAxO,MAAAA,KAAK,CAAC8O,mBAAN,CAA0BgB,aAA1B,GAA0CtD,QAAQ,CAACsD,aAAnD;AAEA,aAAO9P,KAAK,CAAC8O,mBAAb;AACD,KAbD;;AAeA,aAASG,iBAAT,CAA2BL,QAA3B,EAAqCmB,IAArC,EAA2CC,WAA3C,EAAwD;AACtD,UAAIhQ,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAI+P,OAAO,GAAGjQ,KAAK,CAACkQ,QAAN,GAAiBlQ,KAAK,CAACmQ,WAArC;AACA,UAAIC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADE,OAAb;;AAMA,cAAQzB,QAAR;AACE,aAAKG,kBAAkB,CAACC,iBAAxB;AACA,aAAKD,kBAAkB,CAACG,QAAxB;AACEkB,UAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBJ,WAAxB;AACA,cAAIM,QAAQ,GACV,2DACAL,OADA,GAEAF,IAHF;AAIA,cAAIQ,WAAJ,CAAgBN,OAAhB,EAAyBO,QAAzB,CAAkCT,IAAlC,EAAwCK,MAAxC,EAAgDK,IAAhD,CACE,UAAUjE,QAAV,EAAoB;AAClB,gBAAI;AACFA,cAAAA,QAAQ,GAAG3F,IAAI,CAACC,KAAL,CAAW0F,QAAQ,CAACA,QAApB,CAAX;AAEA,kBAAIkE,oBAAoB,GAAGzQ,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,CAA0ChP,eAA1C,CACzB0M,QADyB,CAA3B;AAGAlM,cAAAA,KAAK,CAACqQ,YAAN,CACE1Q,OAAO,CAACC,WAAR,GAAsB0Q,eADxB,EAEEC,cAAc,CAACC,YAFjB,EAGEJ,oBAHF;AAKD,aAXD,CAWE,OAAO/G,GAAP,EAAY;AACZrJ,cAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC0D,QAAlC,EAA4C3G,GAA5C;AACD;AACF,WAhBH,EAiBE,UAAUA,GAAV,EAAe;AACb,gBAAIoH,WAAW,GAAG;AAChBpE,cAAAA,IAAI,EAAE,oBADU;AAEhB7Q,cAAAA,OAAO,EAAEwU,QAFO;AAGhB3G,cAAAA,GAAG,EAAEA;AAHW,aAAlB;AAKArJ,YAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC0D,QAAlC,EAA4C3G,GAA5C;AACArJ,YAAAA,KAAK,CAACqQ,YAAN,CACE1Q,OAAO,CAACC,WAAR,GAAsB0Q,eADxB,EAEEC,cAAc,CAACC,YAFjB,EAGEC,WAHF;AAKD,WA7BH;AA+BA;;AACF,aAAKhC,kBAAkB,CAACK,YAAxB;AACE,cAAI4B,MAAM,GACR,0DACAf,OADA,GAEAF,IAHF;AAIAK,UAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IACE,YACA/P,KAAK,CAAC2Q,QAAN,CACEhR,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,CAA0CH,iBAD5C,CAFF;AAKA,cAAI4B,WAAJ,CAAgBN,OAAhB,EAAyBiB,OAAzB,CAAiCnB,IAAjC,EAAuCK,MAAvC,EAA+CK,IAA/C,CACE,UAAUjE,QAAV,EAAoB;AAClB,gBAAI;AACFA,cAAAA,QAAQ,GAAG3F,IAAI,CAACC,KAAL,CAAW0F,QAAQ,CAACA,QAApB,CAAX;AAEA,kBAAIkE,oBAAoB,GAAGzQ,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,CAA0ChP,eAA1C,CACzB0M,QADyB,CAA3B;AAGAlM,cAAAA,KAAK,CAACqQ,YAAN,CACE1Q,OAAO,CAACC,WAAR,GAAsB0Q,eADxB,EAEEC,cAAc,CAACC,YAFjB,EAGEJ,oBAHF;AAKD,aAXD,CAWE,OAAO/G,GAAP,EAAY;AACZrJ,cAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkCoE,MAAlC,EAA0CrH,GAA1C;AACD;AACF,WAhBH,EAiBE,UAAUA,GAAV,EAAe;AACbrJ,YAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkCoE,MAAlC,EAA0CrH,GAA1C;AACArJ,YAAAA,KAAK,CAACqQ,YAAN,CACE1Q,OAAO,CAACC,WAAR,GAAsB0Q,eADxB,EAEEC,cAAc,CAACC,YAFjB,EAGEnH,GAHF;AAKD,WAxBH;AA0BA;AA5EJ;AA8ED;;AAED,QAAIwH,cAAc,GAAG,SAAjBA,cAAiB,CAAU5E,SAAV,EAAqB7L,OAArB,EAA8BM,GAA9B,EAAmCH,cAAnC,EAAmD;AACtE,WAAK0L,SAAL,GAAiBA,SAAS,IAAI,MAA9B;AACA,WAAK7L,OAAL,GAAeA,OAAf;AACA,WAAKM,GAAL,GAAWA,GAAX;AACA,WAAKH,cAAL,GAAsBA,cAAtB;AACD,KALD;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIsQ,IAAAA,cAAc,CAACpV,SAAf,CAAyBkR,UAAzB,GAAsC,YAAY;AAChD,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACgE,QAFb;AAGV,yBAAe9Q,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAe,KAAKvQ,OAApB;AADD,WALA;AAQVM,UAAAA,GAAG,EAAE;AACH,qBAASV,KAAK,CAAC2Q,QAAN,CAAe,KAAKjQ,GAApB;AADN,WARK;AAWVqQ,UAAAA,WAAW,EAAE;AACX,qBAAS/Q,KAAK,CAAC2Q,QAAN,CAAe,KAAK1E,SAApB;AADE,WAXH;AAcV+E,UAAAA,gBAAgB,EAAE;AAChB,qBAAShR,KAAK,CAAC2Q,QAAN,CAAe,KAAKpQ,cAApB;AADO;AAdR;AADJ,OAAV;AAqBA,aAAOgG,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAxBD;AA0BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIiE,IAAAA,cAAc,CAACpV,SAAf,CAAyB+D,eAAzB,GAA2C,UAAU0M,QAAV,EAAoB;AAC7D,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,UAApB,CAA5B;AACA/K,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,KAApB,CAAxB;;AAEA,UAAI/K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC;AACrCtB,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAACC,KAA5B,EAAmCvC,iBAAiB,CAAC5F,OAArD,EAA8D0Q,QAA9D;AACD,OAFD,MAEO;AACLlM,QAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAAC4I,IADb,EAEE,yDACElL,iBAAiB,CAACiB,MAHtB,EAIE6J,QAJF;AAMD;;AAED,aAAO9K,iBAAP;AACD,KAnBD;;AAqBA,QAAI6P,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,KAAV,EAAiB;AACtC,WAAKA,KAAL,GAAaA,KAAb;AACD,KAFD;AAIA;AACJ;AACA;;;AACID,IAAAA,gBAAgB,CAACxV,SAAjB,CAA2BkR,UAA3B,GAAwC,YAAY;AAClD,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,yBAAe7M,KAAK,CAACgN,YAAN,EAFL;AAGVC,UAAAA,WAAW,EAAE,EAHH;AAIV,mBAASH,aAAa,CAACqE,UAJb;AAKVjE,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACS,aAAN,CAAoBC,OAAnC;AADD,WALA;AAQVM,UAAAA,GAAG,EAAE;AACH,qBAASV,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACW,WAAN,CAAkBK,GAAjC;AADN,WARK;AAWVwQ,UAAAA,KAAK,EAAE;AACL,qBAASlR,KAAK,CAAC2Q,QAAN,CAAe,KAAKO,KAApB;AADJ;AAXG;AADJ,OAAV;AAkBA,aAAO3K,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KArBD;AAuBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIqE,IAAAA,gBAAgB,CAACxV,SAAjB,CAA2B+D,eAA3B,GAA6C,UAAU0M,QAAV,EAAoB;AAC/D,UAAI9K,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;;AAEA,UAAI9K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC;AACrCF,QAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,+BAA5B;AACA4F,QAAAA,iBAAiB,CAACiL,IAAlB,GAAyB,YAAzB;AACD,OAHD,MAGO;AACLjL,QAAAA,iBAAiB,CAACiL,IAAlB,GAAyB,aAAzB;AACAjL,QAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,yBAA5B;AACD;;AAED,aAAO4F,iBAAP;AACD,KAZD;;AAcA,QAAIgQ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAUC,MAAV,EAAkBjR,OAAlB,EAA2B;AACrD,WAAKA,OAAL,GAAeA,OAAO,IAAIT,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OAA9D;AACA,WAAKiR,MAAL,GAAcA,MAAd;AACD,KAHD;;AAKAD,IAAAA,qBAAqB,CAAC3V,SAAtB,CAAgCkR,UAAhC,GAA6C,YAAY;AACvD,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACwE,eAFb;AAGV,yBAAetR,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAAS,KAAK9M;AADN,WALA;AAQVmR,UAAAA,OAAO,EAAE;AACP,qBAAS,KAAKF;AADP;AARC;AADJ,OAAV;AAeA,aAAO9K,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAjBD,CAlhDuB,CAqiDvB;;;AAEA,QAAI4E,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAUpR,OAAV,EAAmB;AAC/C,WAAKA,OAAL,GAAeA,OAAO,IAAIT,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OAA9D;AACD,KAFD;;AAIAoR,IAAAA,uBAAuB,CAAC/V,SAAxB,CAAkCkR,UAAlC,GAA+C,YAAY;AACzD,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAAC2E,gBAFb;AAGV,yBAAezR,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAAS,KAAK9M;AADN;AALA;AADJ,OAAV;AAYA,aAAOmG,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAdD;AAgBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI4E,IAAAA,uBAAuB,CAAC/V,SAAxB,CAAkC+D,eAAlC,GAAoD,UAAU0M,QAAV,EAAoB;AACtE,UAAIwF,QAAQ,GAAGxF,QAAQ,CAACE,WAAT,CAAqB9D,IAApC;AACA,UAAIqJ,KAAK,GAAG,EAAZ;;AACA,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,QAAd,CAAL,EAA8B;AAC5BA,QAAAA,QAAQ,GAAG,CAACA,QAAD,CAAX;AACD;;AAED,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAAC5M,MAA7B,EAAqCgN,CAAC,EAAtC,EAA0C;AACxC,YAAIC,OAAO,GAAGL,QAAQ,CAACI,CAAD,CAAtB;;AACA,YAAIC,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AAEDJ,QAAAA,KAAK,CAAC5L,IAAN,CAAWiM,SAAS,CAACD,OAAD,CAApB;AACD;;AAEDpS,MAAAA,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoC8R,gBAApC,GAAuD1L,IAAI,CAACC,KAAL,CACrDD,IAAI,CAACE,SAAL,CAAekL,KAAf,CADqD,CAAvD;AAIA,aAAOhS,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoC8R,gBAA3C;AACD,KArBD;;AAuBA,aAASD,SAAT,CAAmBD,OAAnB,EAA4B;AAC1B,UAAIzJ,IAAI,GAAG;AACT4J,QAAAA,QAAQ,EAAEH,OAAO,CAAC,YAAD,CADR;AAETI,QAAAA,QAAQ,EAAEJ,OAAO,CAAC,YAAD,CAFR;AAGTK,QAAAA,QAAQ,EAAEL,OAAO,CAAC,YAAD,CAHR;AAITM,QAAAA,QAAQ,EAAEN,OAAO,CAAC,YAAD,CAJR;AAKTO,QAAAA,QAAQ,EAAEP,OAAO,CAAC,YAAD,CALR;AAMTjW,QAAAA,WAAW,EAAEiW,OAAO,CAAC,cAAD,CANX;AAOT3P,QAAAA,WAAW,EAAE2P,OAAO,CAAC,gBAAD,CAPX;AAQTzP,QAAAA,aAAa,EAAEyP,OAAO,CAAC,kBAAD,CARb;AASTQ,QAAAA,QAAQ,EAAER,OAAO,CAAC,YAAD,CATR;AAUTS,QAAAA,QAAQ,EAAET,OAAO,CAAC,YAAD,CAVR;AAWTV,QAAAA,MAAM,EAAEU,OAAO,CAAC,UAAD,CAXN;AAYT9G,QAAAA,SAAS,EAAEjL,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,YAAvB,CAZF;AAaTU,QAAAA,OAAO,EAAEzS,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,UAAvB,CAbA;AAcT7G,QAAAA,QAAQ,EAAElL,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,WAAvB,CAdD;AAeTW,QAAAA,KAAK,EAAE1S,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,QAAvB,CAfE;AAgBTY,QAAAA,KAAK,EAAE3S,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,OAAvB,CAhBE;AAiBTa,QAAAA,QAAQ,EAAE5S,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,UAAvB,CAjBD;AAkBTc,QAAAA,QAAQ,EAAE7S,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,UAAvB,CAlBD;AAmBTe,QAAAA,IAAI,EAAE9S,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,MAAvB,CAnBG;AAoBTjX,QAAAA,KAAK,EAAEkF,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,OAAvB,CApBE;AAqBTgB,QAAAA,GAAG,EAAE/S,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,KAAvB,CArBI;AAsBTiB,QAAAA,UAAU,EAAEhT,KAAK,CAACC,OAAN,CAAc8R,OAAd,EAAuB,aAAvB;AAtBH,OAAX;AAyBA,aAAOzJ,IAAP;AACD;AAED;AACJ;AACA;AACA;AACA;;;AACI,QAAI2K,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUC,UAAV,EAAsB;AACtD,WAAK9S,OAAL,GAAeT,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OAAnD;AACA,WAAK8S,UAAL,GAAkBA,UAAlB;AACD,KAHD;;AAKAD,IAAAA,2BAA2B,CAACxX,SAA5B,CAAsCkR,UAAtC,GAAmD,YAAY;AAC7D,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACqG,qBAFb;AAGV,yBAAenT,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAe,KAAKvQ,OAApB;AADD,WALA;AAQVgT,UAAAA,WAAW,EAAE;AACX,qBAASpT,KAAK,CAAC2Q,QAAN,CAAe,KAAKuC,UAApB;AADE;AARH;AADJ,OAAV;AAeA,aAAO3M,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAjBD;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIqG,IAAAA,2BAA2B,CAACxX,SAA5B,CAAsC+D,eAAtC,GAAwD,UACtD0M,QADsD,EAEtD;AACA,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAI1M,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIiF,YAAY,GAAG7E,KAAK,CAAC+H,yBAAN,CACjBoE,IADiB,EAEjB,sBAFiB,EAGjB,aAHiB,EAIjB,aAJiB,CAAnB;AAOAzM,MAAAA,KAAK,CAAC2T,gBAAN,CAAuBC,oBAAvB,GAA8CzO,YAA9C;AACA,aAAOA,YAAP;AACD,KAdD;;AAgBA,QAAI0O,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,SAAV,EAAqB;AAC1C,WAAKA,SAAL,GAAkBA,SAAS,IAAIA,SAAS,CAAC9G,WAAV,EAAd,IAA0C,EAA3D;AACD,KAFD;;AAIA6G,IAAAA,gBAAgB,CAAC9X,SAAjB,CAA2BkR,UAA3B,GAAwC,YAAY;AAClD,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAAC2G,UAFb;AAGV,yBAAezT,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAASvN,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC;AADrC,WALA;AAQVtF,UAAAA,KAAK,EAAE;AACL,qBAAS,KAAK0Y;AADT;AARG;AADJ,OAAV;AAeA,aAAOjN,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAjBD;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI2G,IAAAA,gBAAgB,CAAC9X,SAAjB,CAA2B+D,eAA3B,GAA6C,UAAU0M,QAAV,EAAoB;AAC/D,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAI9K,MAAM,GAAGtB,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,QAApB,CAAb;AACA,UAAIiB,SAAS,GAAGpN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAAhB;AACA,UAAIkB,SAAS,GAAGrN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,eAApB,CAAhB;AACA,UAAIzM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ,CAL+D,CAO/D;;AACA,UAAIwB,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4B8L,QAAQ,CAACE,WAAT,CAAqBc,QAArB,CAA8B,OAA9B,KAA0C,EAAtE;AACA9L,MAAAA,iBAAiB,CAACoM,aAAlB,GAAkCJ,SAAlC;AACAhM,MAAAA,iBAAiB,CAACqM,YAAlB,GAAiCJ,SAAjC;;AAEA,UAAI/L,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA5B,QAAAA,KAAK,CAACS,aAAN,CAAoBuT,gBAApB,GAAuCrG,SAAvC;AACA3N,QAAAA,KAAK,CAACiU,eAAN,GAAwBzH,QAAxB;AACD,OAJD,MAIO;AACL,YAAI9K,iBAAiB,CAAC5F,OAAlB,KAA8B,EAAlC,EAAsC;AACpC4F,UAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B,6BAA5B;AACD,SAHI,CAKL;;;AACA,YAAIA,OAAO,GACT,kCAAkC4F,iBAAiB,CAACiB,MADtD;AAEArC,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC9Q,OAAlC,EAA2C0Q,QAA3C;AACD;;AAED,aAAO9K,iBAAP;AACD,KA9BD;;AAgCA,QAAIwS,eAAe,GAAG,SAAlBA,eAAkB,CAAUjP,QAAV,EAAoBkP,QAApB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqD;AACzE,WAAKpP,QAAL,GAAgBA,QAAhB;AACA,WAAKkP,QAAL,GAAgBA,QAAQ,IAAI,EAA5B;AACA,WAAKC,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACA,WAAKC,SAAL,GAAiBA,SAAS,IAAI,EAA9B;AACD,KALD;;AAOAH,IAAAA,eAAe,CAACnY,SAAhB,CAA0BkR,UAA1B,GAAuC,YAAY;AACjD,UAAIqH,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,UAAL,CAAgBhP,MAApC,EAA4CmP,CAAC,EAA7C,EAAiD;AAC/C,YAAIC,QAAQ,GAAG,KAAKJ,UAAL,CAAgBG,CAAhB,CAAf;AACAD,QAAAA,MAAM,CAACjO,IAAP,CAAY;AACV,mBAAS/F,KAAK,CAAC2Q,QAAN,CAAeuD,QAAQ,CAACrJ,IAAxB,CADC;AAEV,oBAAU7K,KAAK,CAAC2Q,QAAN,CAAeuD,QAAQ,CAAC9K,KAAxB;AAFA,SAAZ;AAID;;AAED,UAAIwD,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACqH,SAFb;AAGV,yBAAenU,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASvN,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC;AADrC,WALA;AAQVM,UAAAA,GAAG,EAAE;AACH,qBAASf,OAAO,CAACC,WAAR,GAAsBS,WAAtB,CAAkCK;AADxC,WARK;AAWV0T,UAAAA,SAAS,EAAE;AACT,qBAASpU,KAAK,CAAC2Q,QAAN,CAAe,KAAKhM,QAApB;AADA,WAXD;AAcV0P,UAAAA,SAAS,EAAE;AACT,qBAASrU,KAAK,CAAC2Q,QAAN,CAAe,KAAKkD,QAApB;AADA,WAdD;AAiBVS,UAAAA,UAAU,EAAE;AACV,qBAAStU,KAAK,CAAC2Q,QAAN,CAAe,KAAKoD,SAApB;AADC,WAjBF;AAoBVQ,UAAAA,WAAW,EAAEP;AApBH;AADJ,OAAV;AAyBA,aAAOzN,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KApCD;AAsCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIgH,IAAAA,eAAe,CAACnY,SAAhB,CAA0B+D,eAA1B,GAA4C,UAAU0M,QAAV,EAAoB;AAC9D,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAAChB,OAAlB,GAA4BJ,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,UAApB,CAA5B;AACA/K,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,KAApB,CAAxB;AACA/K,MAAAA,iBAAiB,CAACd,SAAlB,GAA8BN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAA9B;AACA/K,MAAAA,iBAAiB,CAACuD,QAAlB,GAA6B3E,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,WAApB,CAA7B;;AAEA,UAAI/K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC,CACtC,CADD,MACO;AACL;AACA,YAAI9F,OAAO,GACT,0DACA4F,iBAAiB,CAAC5F,OADlB,GAEA,KAFA,GAGA4F,iBAAiB,CAACiB,MAJpB;AAKArC,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC9Q,OAAlC,EAA2C0Q,QAA3C;AACD;;AAED,aAAO9K,iBAAP;AACD,KArBD;;AAuBA,QAAIoT,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,aAAV,EAAyBC,YAAzB,EAAuChU,GAAvC,EAA4C;AACpE,WAAK+T,aAAL,GAAqBA,aAArB;AACA,WAAKC,YAAL,GAAoBA,YAApB;AACA,WAAKhU,GAAL,GAAWA,GAAG,IAAIf,OAAO,CAACC,WAAR,GAAsBS,WAAtB,CAAkCK,GAApD;AACD,KAJD;;AAMA8T,IAAAA,mBAAmB,CAAC/Y,SAApB,CAA8BkR,UAA9B,GAA2C,YAAY;AACrD,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAAC6H,qBAFb;AAGV,yBAAe3U,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACS,aAAN,CAAoBC,OAAnC;AADD,WALA;AAQVM,UAAAA,GAAG,EAAE;AACH,qBAASV,KAAK,CAAC2Q,QAAN,CAAe,KAAKjQ,GAApB;AADN,WARK;AAWVkU,UAAAA,eAAe,EAAE;AACf,qBAAS5U,KAAK,CAAC2Q,QAAN,CAAe,KAAK8D,aAApB;AADM,WAXP;AAcVI,UAAAA,aAAa,EAAE;AACb,qBAAS7U,KAAK,CAAC2Q,QAAN,CAAe,KAAK+D,YAApB;AADI;AAdL;AADJ,OAAV;AAqBA,aAAOnO,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAxBD;AA0BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI4H,IAAAA,mBAAmB,CAAC/Y,SAApB,CAA8B+D,eAA9B,GAAgD,UAAU0M,QAAV,EAAoB;AAClE,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AACA9K,MAAAA,iBAAiB,CAACiL,IAAlB,GAAyBrM,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,MAApB,CAAzB;;AAEA,UAAI/K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC;AACrC;AACA,YAAI9F,OAAO,GACT,sEACA4F,iBAAiB,CAAC5F,OADlB,GAEA,KAFA,GAGA4F,iBAAiB,CAACiB,MAJpB;AAKArC,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC9Q,OAAlC,EAA2C0Q,QAA3C;AACD;;AAED,aAAO9K,iBAAP;AACD,KAhBD;;AAkBA,QAAI0T,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAY,CAAE,CAA5C;;AAEAA,IAAAA,uBAAuB,CAACrZ,SAAxB,CAAkCkR,UAAlC,GAA+C,YAAY;AACzD,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACiI,0BAFb;AAGV,yBAAe/U,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASvN,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC;AADrC;AALA;AADJ,OAAV;AAYA,aAAOmG,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAdD;AAgBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIkI,IAAAA,uBAAuB,CAACrZ,SAAxB,CAAkC+D,eAAlC,GAAoD,UAAU0M,QAAV,EAAoB;AACtE,UAAI9K,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AACA9K,MAAAA,iBAAiB,CAACkO,MAAlB,GAA2BtP,KAAK,CAAC+H,yBAAN,CACzBmE,QADyB,EAEzB,aAFyB,EAGzB,QAHyB,CAA3B;;AAMA,UAAI9K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC;AACrC;AACA,YAAI9F,OAAO,GACT,2EACA4F,iBAAiB,CAAC5F,OADlB,GAEA,KAFA,GAGA4F,iBAAiB,CAACiB,MAJpB;AAKArC,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC9Q,OAAlC,EAA2C0Q,QAA3C;AACD;;AAED,aAAO9K,iBAAP;AACD,KAnBD;;AAqBA,QAAI4T,kBAAkB,GAAG,SAArBA,kBAAqB,CACvBtU,GADuB,EAEvBuU,MAFuB,EAGvB/D,KAHuB,EAIvBrF,QAJuB,EAKvBqJ,WALuB,EAMvBC,oBANuB,EAOvBC,MAPuB,EAQvB5C,QARuB,EASvBnB,MATuB,EAUvB1F,SAVuB,EAWvB;AACA,WAAKjL,GAAL,GAAWA,GAAX;AACA,WAAKuU,MAAL,GAAcA,MAAd;AACA,WAAK/D,KAAL,GAAaA,KAAb;AACA,WAAKrF,QAAL,GAAgBA,QAAhB;AACA,WAAKqJ,WAAL,GAAmBA,WAAW,IAAI,EAAlC;AACA,WAAKC,oBAAL,GAA4BA,oBAAoB,IAAI,IAApD;AACA,WAAK3C,QAAL,GAAgBA,QAAQ,IAAI,IAA5B,CAPA,CAOkC;;AAClC,WAAKnB,MAAL,GAAcA,MAAM,IAAI,IAAxB,CARA,CAQ8B;;AAC9B,WAAK1F,SAAL,GAAiBA,SAAS,IAAI,IAA9B,CATA,CASoC;;AAEpC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,WAAKyJ,MAAL,GAAcA,MAAM,IAAI,IAAxB;AACD,KApCD;AAsCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIJ,IAAAA,kBAAkB,CAACvZ,SAAnB,CAA6BkR,UAA7B,GAA0C,YAAY;AACpD,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,yBAAe7M,KAAK,CAACgN,YAAN,EAFL;AAGV,0BAAgB,EAHN;AAIV,mBAASF,aAAa,CAACuI,mBAJb;AAKVnI,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACS,aAAN,CAAoBC,OAAnC;AADD,WALA;AAQVc,UAAAA,UAAU,EAAE;AACV,qBAAS;AADC,WARF;AAWVR,UAAAA,GAAG,EAAE;AACH,qBAASV,KAAK,CAAC2Q,QAAN,CAAe,KAAKjQ,GAApB;AADN,WAXK;AAcV4U,UAAAA,cAAc,EAAE;AACd,qBAAStV,KAAK,CAAC2Q,QAAN,CAAe,KAAKsE,MAApB;AADK,WAdN;AAiBV/D,UAAAA,KAAK,EAAE;AACL,qBAASlR,KAAK,CAAC2Q,QAAN,CAAe,KAAKO,KAApB;AADJ,WAjBG;AAoBVqE,UAAAA,SAAS,EAAE;AACT,qBAAS,KAAK1J,QAAL,KAAkB,IAAlB,GAAyB,MAAzB,GAAkC;AADlC,WApBD;AAuBV2J,UAAAA,aAAa,EAAE;AACb,qBAASxV,KAAK,CAAC2Q,QAAN,CAAe,KAAKuE,WAApB;AADI,WAvBL;AA0BVO,UAAAA,kBAAkB,EAAE;AAClB,qBAASzV,KAAK,CAAC2Q,QAAN,CAAe,KAAKwE,oBAApB;AADS,WA1BV;AA6BVO,UAAAA,iBAAiB,EAAE;AACjB,qBAAS1V,KAAK,CAAC2Q,QAAN,CAAe,KAAK6B,QAApB;AADQ,WA7BT;AAgCVjB,UAAAA,OAAO,EAAE;AACP,qBAASvR,KAAK,CAAC2Q,QAAN,CAAe,KAAKU,MAApB;AADF,WAhCC;AAmCVsE,UAAAA,kBAAkB,EAAE;AAClB,qBAAS3V,KAAK,CAAC2Q,QAAN,CAAe,KAAKhF,SAApB;AADS;AAnCV;AADJ,OAAV;;AA0CA,UACEjM,KAAK,CAACW,WAAN,CAAkBuE,mBAAlB,IACAlF,KAAK,CAACW,WAAN,CAAkBuE,mBAAlB,CAAsCyH,IAAtC,KAA+C,MAFjD,EAGE;AACAO,QAAAA,GAAG,CAACC,UAAJ,CAAe,OAAf,IAA0BC,aAAa,CAAC8I,mBAAxC;AACD;;AAED,UAAIlW,KAAK,CAACW,WAAN,CAAkBC,SAAtB,EAAiC;AAC/BsM,QAAAA,GAAG,CAACC,UAAJ,CAAe3L,UAAf,GAA4B;AAAE,mBAASxB,KAAK,CAACW,WAAN,CAAkBC;AAA7B,SAA5B;AACD;AAED;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;AACM,UAAI,KAAK8U,MAAL,KAAgB,IAApB,EAA0B;AACxB,YAAIlJ,QAAQ,GAAG,EAAf;AACA,YAAIhD,IAAI,GAAGxN,MAAM,CAACwN,IAAP,CAAY,KAAKkM,MAAjB,CAAX;;AACA,aAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/K,IAAI,CAACpE,MAAzB,EAAiCmP,CAAC,EAAlC,EAAsC;AACpC,cAAIvL,GAAG,GAAGQ,IAAI,CAAC+K,CAAD,CAAd;AACA,cAAI4B,GAAG,GAAG;AACR,0BAAcnN,GADN;AAER,mCAAuB1I,KAAK,CAAC2Q,QAAN,CAAe,KAAKyE,MAAL,CAAY1M,GAAZ,EAAiBoN,SAAhC,CAFf;AAGR,qBAAS9V,KAAK,CAAC2Q,QAAN,CAAe,KAAKyE,MAAL,CAAY1M,GAAZ,EAAiBU,KAAhC;AAHD,WAAV;AAKA8C,UAAAA,QAAQ,CAACnG,IAAT,CAAc8P,GAAd;AACD;;AACDjJ,QAAAA,GAAG,CAACC,UAAJ,CAAeuI,MAAf,GAAwB;AAAElJ,UAAAA,QAAQ,EAAEA;AAAZ,SAAxB;AACD;;AAED,aAAO3F,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KA/ED;;AAiFA,QAAImJ,4BAA4B,GAAG,SAA/BA,4BAA+B,CACjCd,MADiC,EAEjC/D,KAFiC,EAGjCrF,QAHiC,EAIjCqJ,WAJiC,EAKjC7D,MALiC,EAMjC1F,SANiC,EAOjC6G,QAPiC,EAQjC;AACA,WAAKyC,MAAL,GAAcA,MAAd;AACA,WAAK/D,KAAL,GAAaA,KAAb;AACA,WAAKrF,QAAL,GAAgBA,QAAhB;AACA,WAAKqJ,WAAL,GAAmBA,WAAW,IAAI,EAAlC;AACA,WAAK7D,MAAL,GAAcA,MAAM,IAAI,IAAxB;AACA,WAAK1F,SAAL,GAAiBA,SAAS,IAAI,IAA9B;AACA,WAAK6G,QAAL,GAAgBA,QAAQ,IAAI,IAA5B;AACD,KAhBD;AAkBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIuD,IAAAA,4BAA4B,CAACta,SAA7B,CAAuCkR,UAAvC,GAAoD,YAAY;AAC9D,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,yBAAe7M,KAAK,CAACgN,YAAN,EAFL;AAGV,0BAAgB,EAHN;AAIV,mBAASF,aAAa,CAACuI,mBAJb;AAKVW,UAAAA,WAAW,EAAE;AACX,qBAAS;AADE,WALH;AAQV9I,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACS,aAAN,CAAoBC,OAAnC;AADD,WARA;AAWV6V,UAAAA,WAAW,EAAE;AACX,qBAASjW,KAAK,CAAC2Q,QAAN,CAAe,KAAKhF,SAApB;AADE,WAXH;AAcV2J,UAAAA,cAAc,EAAE;AACd,qBAAStV,KAAK,CAAC2Q,QAAN,CAAe,KAAKsE,MAApB;AADK,WAdN;AAiBV/D,UAAAA,KAAK,EAAE;AACL,qBAASlR,KAAK,CAAC2Q,QAAN,CAAe,KAAKO,KAApB;AADJ,WAjBG;AAoBVqE,UAAAA,SAAS,EAAE;AACT,qBAAS,KAAK1J,QAAL,KAAkB,IAAlB,GAAyB,MAAzB,GAAkC;AADlC,WApBD;AAuBV2J,UAAAA,aAAa,EAAE;AACb,qBAASxV,KAAK,CAAC2Q,QAAN,CAAe,KAAKuE,WAApB;AADI,WAvBL;AA0BV3D,UAAAA,OAAO,EAAE;AACP,qBAASvR,KAAK,CAAC2Q,QAAN,CAAe,KAAKU,MAApB;AADF,WA1BC;AA6BV6E,UAAAA,SAAS,EAAE;AACT,qBAASlW,KAAK,CAAC2Q,QAAN,CAAe,KAAK6B,QAApB;AADA,WA7BD;AAgCViD,UAAAA,kBAAkB,EAAE;AAClB,qBAAS;AADS,WAhCV;AAmCVvU,UAAAA,UAAU,EAAE,EAnCF;AAoCVR,UAAAA,GAAG,EAAE;AApCK;AADJ,OAAV;AAyCA,aAAO6F,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KA5CD;;AA8CA,QAAIuJ,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAY,CAAE,CAA7C;;AAEAA,IAAAA,wBAAwB,CAAC1a,SAAzB,CAAmC2a,wBAAnC,GAA8D,UAC5DC,YAD4D,EAE5D;AACA1W,MAAAA,OAAO,CAACC,WAAR,GAAsBuW,wBAAtB,GAAiD,IAAjD;;AACAG,MAAAA,yBAAyB,CAAC,wCAAD,EAA2C;AAClED,QAAAA,YAAY,EAAEA;AADoD,OAA3C,CAAzB;AAGD,KAPD;;AASAF,IAAAA,wBAAwB,CAAC1a,SAAzB,CAAmC+D,eAAnC,GAAqD,UAAU0M,QAAV,EAAoB;AACvEvM,MAAAA,OAAO,CAACC,WAAR,GAAsB2W,yBAAtB,GAAkDrK,QAAlD;AACA,aAAOvM,OAAO,CAACC,WAAR,GAAsB2W,yBAA7B;AACD,KAHD;;AAKA,aAASD,yBAAT,CAAmC7G,IAAnC,EAAyCC,WAAzC,EAAsD;AACpD,UAAIhQ,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAI+P,OAAO,GAAGjQ,KAAK,CAACkQ,QAAN,GAAiBlQ,KAAK,CAAC8W,UAArC;AACA,UAAInI,iBAAiB,GACnB,YACArO,KAAK,CAAC2Q,QAAN,CACEhR,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,CAA0CH,iBAD5C,CAFF;AAKA,UAAIyB,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADE,OAAb;AAMAD,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC1B,iBAAlC;AACAyB,MAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBJ,WAAxB;AACA,UAAIM,QAAQ,GACV,4DACAL,OADA,GAEAF,IAHF;AAKA,UAAIQ,WAAJ,CAAgBN,OAAhB,EAAyBiB,OAAzB,CAAiCnB,IAAjC,EAAuCK,MAAvC,EAA+CK,IAA/C,CACE,UAAUjE,QAAV,EAAoB;AAClB,YAAI;AACFA,UAAAA,QAAQ,GAAG3F,IAAI,CAACC,KAAL,CAAW0F,QAAQ,CAACA,QAApB,CAAX;AACA,cAAIqK,yBAAyB,GAAG5W,OAAO,CAACC,WAAR,GAAsB6W,wBAAtB,CAA+CjX,eAA/C,CAC9B0M,QAD8B,CAAhC;AAGAlM,UAAAA,KAAK,CAACqQ,YAAN,CACE1Q,OAAO,CAACC,WAAR,GAAsB0Q,eADxB,EAEEC,cAAc,CAACmG,kBAFjB,EAGEH,yBAHF;AAKD,SAVD,CAUE,OAAOlN,GAAP,EAAY;AACZrJ,UAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC0D,QAAlC,EAA4C3G,GAA5C;AACD;AACF,OAfH,EAgBE,UAAUA,GAAV,EAAe;AACb,YAAIoH,WAAW,GAAG;AAChBpE,UAAAA,IAAI,EAAE,mDADU;AAEhB7Q,UAAAA,OAAO,EAAEwU;AAFO,SAAlB;AAIAhQ,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkC0D,QAAlC,EAA4C3G,GAA5C,EALa,CAOb;;AACArJ,QAAAA,KAAK,CAACqQ,YAAN,CACE1Q,OAAO,CAACC,WAAR,GAAsB0Q,eADxB,EAEEC,cAAc,CAACmG,kBAFjB,EAGEjG,WAHF;AAKD,OA7BH;AA+BD;;AAED,QAAIkG,aAAa,GAAG,SAAhBA,aAAgB,CAAUrW,SAAV,EAAqBsW,gBAArB,EAAuC;AACzD,WAAKtW,SAAL,GAAiBA,SAAS,IAAI,IAA9B;AACA,WAAKsW,gBAAL,GAAwBA,gBAAgB,IAAI,KAA5C;AACD,KAHD;;AAKAD,IAAAA,aAAa,CAAClb,SAAd,CAAwBkR,UAAxB,GAAqC,YAAY;AAC/C,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAAC+J,MAFb;AAGV,yBAAe7W,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CACPhR,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OAD7B;AADD,WALA;AAUVM,UAAAA,GAAG,EAAE;AACH,qBAASV,KAAK,CAAC2Q,QAAN,CAAehR,OAAO,CAACC,WAAR,GAAsBS,WAAtB,CAAkCK,GAAjD;AADN,WAVK;AAaVQ,UAAAA,UAAU,EAAE;AACV,qBAASlB,KAAK,CAAC2Q,QAAN,CACP,KAAKrQ,SAAL,KAAmB,IAAnB,GACIX,OAAO,CAACC,WAAR,GAAsBS,WAAtB,CAAkCC,SADtC,GAEI,KAAKA,SAHF;AADC,WAbF;AAoBVwW,UAAAA,mBAAmB,EAAE;AACnB,qBAAS,KAAKF,gBAAL,KAA0B,IAA1B,GAAiC,MAAjC,GAA0C;AADhC;AApBX;AADJ,OAAV;AA2BA,aAAOrQ,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KA7BD;;AA+BA,QAAImK,WAAW,GAAG,SAAdA,WAAc,CAAUC,SAAV,EAAqB1W,SAArB,EAAgC;AAChD,WAAK0W,SAAL,GAAiBA,SAAjB;AACA,WAAK1W,SAAL,GAAiBA,SAAS,IAAI,GAA9B;AACD,KAHD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIyW,IAAAA,WAAW,CAACtb,SAAZ,CAAsBkR,UAAtB,GAAmC,YAAY;AAC7C,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACmK,IAFb;AAGV,yBAAejX,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACW,WAAN,CAAkBD,OAAjC;AADD,WALA;AAQVM,UAAAA,GAAG,EAAE;AACH,qBAASV,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACW,WAAN,CAAkBK,GAAjC;AADN,WARK;AAWVQ,UAAAA,UAAU,EAAE;AACV,qBAASlB,KAAK,CAAC2Q,QAAN,CAAe,KAAKrQ,SAApB;AADC,WAXF;AAcV4W,UAAAA,UAAU,EAAE;AACV,qBACE,KAAKF,SAAL,KAAmB,IAAnB,IAA2B,KAAKA,SAAL,KAAmB,MAA9C,GACI,IADJ,GAEI;AAJI;AAdF;AADJ,OAAV;AAwBA,aAAOzQ,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KA3BD;AA6BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACImK,IAAAA,WAAW,CAACtb,SAAZ,CAAsB+D,eAAtB,GAAwC,UAAU0M,QAAV,EAAoB;AAC1D,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AACA,UAAIiL,OAAO,GAAG,EAAd;;AACA,UAAIxX,OAAO,CAACC,WAAR,GAAsBS,WAAtB,CAAkCK,GAAtC,EAA2C;AACzCyW,QAAAA,OAAO,GAAGxX,OAAO,CAACC,WAAR,GAAsBS,WAAtB,CAAkCK,GAA5C;AACD;;AAEDU,MAAAA,iBAAiB,CAAC4V,SAAlB,GAA8BhX,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,MAAsC,IAApE;AACA/K,MAAAA,iBAAiB,CAACd,SAAlB,GAA8BN,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAA9B;AACA/K,MAAAA,iBAAiB,CAACV,GAAlB,GAAwBV,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,KAApB,CAAxB;;AAEA,UAAI/K,iBAAiB,CAACE,MAAlB,KAA6B,IAAjC,EAAuC;AACrC;AACA,YAAIF,iBAAiB,CAACV,GAAlB,KAA0ByW,OAA9B,EAAuC;AACrC,cAAI/V,iBAAiB,CAAC5F,OAAlB,KAA8B,EAAlC,EAAsC;AACpC4F,YAAAA,iBAAiB,CAAC5F,OAAlB,GACE,oCAAoC4F,iBAAiB,CAAC4V,SADxD;AAED;;AACDhX,UAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAACC,KADb,EAEE,oCAAoCvC,iBAAiB,CAAC4V,SAFxD,EAGE9K,QAHF;AAKD,SAVD,MAUO;AACLlM,UAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAACC,KADb,EAEE,oDAFF,EAGEuI,QAHF;AAKD;AACF,OAnBD,MAmBO;AACL,YAAI9K,iBAAiB,CAAC5F,OAAlB,KAA8B,EAAlC,EAAsC;AACpC4F,UAAAA,iBAAiB,CAAC5F,OAAlB,GACE,oCACA,CAAC4F,iBAAiB,CAAC5F,OADnB,GAEA,IAFA,GAGA4F,iBAAiB,CAACiB,MAJpB;AAKD;;AACDrC,QAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAAC4I,IADb,EAEE,oCAAoClL,iBAAiB,CAACiB,MAFxD,EAGE6J,QAHF;AAKD;;AAED,UAAIxM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;;AACA,UACEwB,iBAAiB,CAACd,SAAlB,KAAgC,GAAhC,IACAZ,KAAK,CAACuB,gBAAN,CAAuBG,iBAAiB,CAACd,SAAzC,CAFF,EAGE;AACA;AACAZ,QAAAA,KAAK,CAACuB,gBAAN,CAAuBG,iBAAiB,CAACd,SAAzC,EAAoD8W,MAApD,GACEhW,iBAAiB,CAAC4V,SADpB;AAED;;AAED,aAAO5V,iBAAP;AACD,KAzDD;;AA2DA,QAAIiW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUhG,MAAV,EAAkB;AACzC,WAAKA,MAAL,GAAcA,MAAd;AACD,KAFD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIgG,IAAAA,kBAAkB,CAAC5b,SAAnB,CAA6BkR,UAA7B,GAA0C,YAAY;AACpD,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACwK,YAFb;AAGV,yBAAetX,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAejR,KAAK,CAACS,aAAN,CAAoBC,OAAnC;AADD,WALA;AAQVmR,UAAAA,OAAO,EAAE;AACP,qBAASvR,KAAK,CAAC2Q,QAAN,CAAe,KAAKU,MAApB;AADF;AARC;AADJ,OAAV;AAeA,aAAO9K,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAlBD;AAoBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIyK,IAAAA,kBAAkB,CAAC5b,SAAnB,CAA6B+D,eAA7B,GAA+C,UAAU0M,QAAV,EAAoB;AACjE,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAImL,YAAY,GAAG;AACjBlG,QAAAA,MAAM,EAAElF,IAAI,CAAC,UAAD;AADK,OAAnB;AAIA,UAAIqL,OAAO,GAAGxX,KAAK,CAAC+H,yBAAN,CACZmE,QADY,EAEZ,aAFY,EAGZ,eAHY,CAAd,CANiE,CAYjE;;AACA,UAAI,CAAC0F,KAAK,CAACC,OAAN,CAAc2F,OAAd,CAAL,EAA6B;AAC3BA,QAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AACDD,MAAAA,YAAY,CAACE,WAAb,GAA2BD,OAA3B;AAEA,aAAOD,YAAP;AACD,KAnBD;;AAqBA,QAAIG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,OAAV,EAAmB;AACzC;AACA,UAAIA,OAAO,CAACC,cAAR,IAA0BD,OAAO,CAACC,cAAR,KAA2B,IAAzD,EAA+D;AAC7DD,QAAAA,OAAO,CAACC,cAAR,GAAyB,GAAzB;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,cAAR,GAAyB,GAAzB;AACD;;AAED,UAAID,OAAO,CAACE,QAAR,IAAoBF,OAAO,CAACE,QAAR,KAAqB,IAA7C,EAAmD;AACjDF,QAAAA,OAAO,CAACE,QAAR,GAAmB,GAAnB;AACD,OAFD,MAEO;AACLF,QAAAA,OAAO,CAACE,QAAR,GAAmB,GAAnB;AACD;;AAED,WAAKF,OAAL,GAAeA,OAAf;AACD,KAfD;AAiBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACID,IAAAA,iBAAiB,CAACjc,SAAlB,CAA4BkR,UAA5B,GAAyC,YAAY;AACnD,UAAIjN,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIgN,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACgL,WAFb;AAGV,yBAAe9X,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAazK,QAA5B;AADD,WALA;AAQVkG,UAAAA,WAAW,EAAE;AACX,qBAASpT,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAavE,WAA5B;AADE,WARH;AAWV2E,UAAAA,UAAU,EAAE;AACV,qBAAS/X,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaI,UAA5B;AADC,WAXF;AAcVF,UAAAA,QAAQ,EAAE;AACR,qBAAS7X,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaE,QAA5B;AADD,WAdA;AAiBVD,UAAAA,cAAc,EAAE;AACd,qBAAS5X,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaC,cAA5B;AADK,WAjBN;AAoBVI,UAAAA,aAAa,EAAE;AACb,qBAAShY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaM,YAA5B;AADI,WApBL;AAuBVC,UAAAA,UAAU,EAAE;AACV,qBAASlY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaO,UAA5B;AADC,WAvBF;AA0BVC,UAAAA,QAAQ,EAAE;AACR,qBAASnY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaQ,QAA5B;AADD,WA1BA;AA6BVC,UAAAA,SAAS,EAAE;AACT,qBAASpY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaS,SAA5B;AADA,WA7BD;AAgCVC,UAAAA,MAAM,EAAE;AACN,qBAASrY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaU,MAA5B;AADH,WAhCE;AAmCV1F,UAAAA,KAAK,EAAE;AACL,qBAAS3S,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAahF,KAA5B;AADJ,WAnCG;AAsCVC,UAAAA,QAAQ,EAAE;AACR,qBAAS5S,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAa/E,QAA5B;AADD,WAtCA;AAyCVC,UAAAA,QAAQ,EAAE;AACR,qBAAS7S,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAa9E,QAA5B;AADD,WAzCA;AA4CVC,UAAAA,IAAI,EAAE;AACJ,qBAAS9S,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAa7E,IAA5B;AADL,WA5CI;AA+CVhY,UAAAA,KAAK,EAAE;AACL,qBAASkF,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAa7c,KAA5B;AADJ,WA/CG;AAkDViY,UAAAA,GAAG,EAAE;AACH,qBAAS/S,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAa5E,GAA5B;AADN,WAlDK;AAqDV1H,UAAAA,KAAK,EAAE;AACL,qBAASrL,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAatM,KAA5B;AADJ,WArDG;AAwDViN,UAAAA,WAAW,EAAE;AACX,qBAAStY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaW,WAA5B;AADE,WAxDH;AA2DVC,UAAAA,SAAS,EAAE;AACT,qBAASvY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaY,SAA5B;AADA,WA3DD;AA8DVC,UAAAA,SAAS,EAAE;AACT,qBAASxY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAaa,SAA5B;AADA,WA9DD;AAiEVC,UAAAA,SAAS,EAAE;AACT,qBAASzY,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAac,SAA5B;AADA,WAjED;AAoEVC,UAAAA,SAAS,EAAE;AACT,qBAAS1Y,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAae,SAA5B;AADA,WApED;AAuEVC,UAAAA,SAAS,EAAE;AACT,qBAAS3Y,KAAK,CAAC2Q,QAAN,CAAe,KAAKgH,OAAL,CAAagB,SAA5B;AADA;AAvED;AADJ,OAAV;AA8EA,aAAOpS,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAjFD;AAmFA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI8K,IAAAA,iBAAiB,CAACjc,SAAlB,CAA4B+D,eAA5B,GAA8C,UAAU0M,QAAV,EAAoB;AAChE,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B2Q,IAAI,CAACS,GAAL,CAAS,OAAT,CAA5B;AAEA,aAAOxL,iBAAP;AACD,KAPD;;AASA,QAAIwX,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUvH,MAAV,EAAkBwH,SAAlB,EAA6B3Q,OAA7B,EAAsC;AAC5D,WAAKmJ,MAAL,GAAcA,MAAd;AACA,WAAKwH,SAAL,GAAiBA,SAAjB;AACA,WAAK3Q,OAAL,GAAeA,OAAf;AACA,WAAK9H,OAAL,GAAeJ,KAAK,CAAC2Q,QAAN,CACbhR,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OADvB,CAAf;AAGD,KAPD;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIwY,IAAAA,iBAAiB,CAACnd,SAAlB,CAA4BkR,UAA5B,GAAyC,YAAY;AACnD;AACA,WAAKzE,OAAL,GAAe4Q,cAAc,CAAC,KAAK5Q,OAAN,CAA7B;AACA,UAAI0E,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACiM,WAFb;AAGV,yBAAe/Y,KAAK,CAACgN,YAAN,EAHL;AAIV,0BAAgB,EAJN;AAKVE,UAAAA,QAAQ,EAAE;AACR,qBAAS,KAAK9M;AADN,WALA;AAQVmR,UAAAA,OAAO,EAAE;AACP,qBAASvR,KAAK,CAAC2Q,QAAN,CAAe,KAAKU,MAApB;AADF,WARC;AAWV0G,UAAAA,UAAU,EAAE;AACV,qBAAS/X,KAAK,CAAC2Q,QAAN,CAAe,KAAKkI,SAApB;AADC,WAXF;AAcV3Q,UAAAA,OAAO,EAAE,KAAKA;AAdJ;AADJ,OAAV;AAmBA,aAAO3B,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KAvBD;AAyBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIgM,IAAAA,iBAAiB,CAACnd,SAAlB,CAA4B+D,eAA5B,GAA8C,UAAU0M,QAAV,EAAoB;AAChE,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAIhL,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AAEA9K,MAAAA,iBAAiB,CAAC5F,OAAlB,GAA4B2Q,IAAI,CAACS,GAAL,CAAS,OAAT,CAA5B;AAEA,aAAOxL,iBAAP;AACD,KAPD;;AASA,QAAI0X,cAAc,GAAG,SAAjBA,cAAiB,CAAU5Q,OAAV,EAAmB;AACtC,UAAI8Q,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACd,UAAJ,GAAiB;AAAE,iBAAShQ,OAAO,CAACgQ,UAAR,IAAsB;AAAjC,OAAjB;AACAc,MAAAA,GAAG,CAACb,QAAJ,GAAe;AAAE,iBAASjQ,OAAO,CAACiQ,QAAR,IAAoB;AAA/B,OAAf;AACAa,MAAAA,GAAG,CAACZ,SAAJ,GAAgB;AAAE,iBAASlQ,OAAO,CAACkQ,SAAR,IAAqB;AAAhC,OAAhB;AACAY,MAAAA,GAAG,CAACX,MAAJ,GAAa;AAAE,iBAASnQ,OAAO,CAACmQ,MAAR,IAAkB;AAA7B,OAAb;AACAW,MAAAA,GAAG,CAACrG,KAAJ,GAAY;AAAE,iBAASzK,OAAO,CAACyK,KAAR,IAAiB;AAA5B,OAAZ;AACAqG,MAAAA,GAAG,CAACpG,QAAJ,GAAe;AAAE,iBAAS1K,OAAO,CAAC0K,QAAR,IAAoB;AAA/B,OAAf;AACAoG,MAAAA,GAAG,CAACnG,QAAJ,GAAe;AAAE,iBAAS3K,OAAO,CAAC2K,QAAR,IAAoB;AAA/B,OAAf;AACAmG,MAAAA,GAAG,CAAClG,IAAJ,GAAW;AAAE,iBAAS5K,OAAO,CAAC4K,IAAR,IAAgB;AAA3B,OAAX;AACAkG,MAAAA,GAAG,CAACle,KAAJ,GAAY;AAAE,iBAASoN,OAAO,CAACpN,KAAR,IAAiB;AAA5B,OAAZ;AACAke,MAAAA,GAAG,CAACjG,GAAJ,GAAU;AAAE,iBAAS7K,OAAO,CAAC6K,GAAR,IAAe;AAA1B,OAAV;AACAiG,MAAAA,GAAG,CAAC3N,KAAJ,GAAY;AAAE,iBAASnD,OAAO,CAACmD,KAAR,IAAiB;AAA5B,OAAZ;AACA2N,MAAAA,GAAG,CAACV,WAAJ,GAAkB;AAAE,iBAASpQ,OAAO,CAACoQ,WAAR,IAAuB;AAAlC,OAAlB;AACAU,MAAAA,GAAG,CAAC9C,SAAJ,GAAgB;AAAE,iBAAShO,OAAO,CAACgO,SAAR,IAAqB;AAAhC,OAAhB;AACA8C,MAAAA,GAAG,CAACT,SAAJ,GAAgB;AAAE,iBAASrQ,OAAO,CAACqQ,SAAR,IAAqB;AAAhC,OAAhB;AACAS,MAAAA,GAAG,CAACR,SAAJ,GAAgB;AAAE,iBAAStQ,OAAO,CAACsQ,SAAR,IAAqB;AAAhC,OAAhB;AACAQ,MAAAA,GAAG,CAACP,SAAJ,GAAgB;AAAE,iBAASvQ,OAAO,CAACuQ,SAAR,IAAqB;AAAhC,OAAhB;AACAO,MAAAA,GAAG,CAACN,SAAJ,GAAgB;AAAE,iBAASxQ,OAAO,CAACwQ,SAAR,IAAqB;AAAhC,OAAhB;AACAM,MAAAA,GAAG,CAACL,SAAJ,GAAgB;AAAE,iBAASzQ,OAAO,CAACyQ,SAAR,IAAqB;AAAhC,OAAhB;AAEA,aAAOK,GAAP;AACD,KAtBD;;AAwBA,QAAIC,YAAY,GAAG,SAAfA,YAAe,CACjBtU,QADiB,EAEjBJ,QAFiB,EAGjBE,OAHiB,EAIjBC,cAJiB,EAKjBtC,WALiB,EAMjBS,iBANiB,EAOjBqW,OAPiB,EAQjB;AACA,WAAK3U,QAAL,GAAgBA,QAAQ,IAAI,EAA5B;AACA,WAAKE,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA,WAAKC,cAAL,GAAsBA,cAAc,IAAI,EAAxC;AACA,WAAKtC,WAAL,GAAmBA,WAAW,IAAI,EAAlC;AACA,WAAKuC,QAAL,GAAgBA,QAAQ,IAAI,EAA5B;AACA,WAAK9B,iBAAL,GAAyBA,iBAAiB,IAAI,KAA9C;AACA,WAAKZ,SAAL,GAAiB,cAAjB;AACA,WAAKkX,WAAL,GAAmB,KAAnB;AACA,WAAKD,OAAL,GAAeA,OAAf,CATA,CAWA;;AACA,UAAIxZ,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,WAAK2E,QAAL,GAAgBvE,KAAK,CAACoZ,gBAAN,CACd1Z,KAAK,CAAC8F,eAAN,CAAsBD,eADR,EAEd,KAAKhB,QAFS,EAGd,QAHc,CAAhB;AAKA,WAAKE,OAAL,GAAezE,KAAK,CAACoZ,gBAAN,CACb1Z,KAAK,CAAC2Z,YAAN,CAAmBC,mBADN,EAEb,KAAK7U,OAFQ,EAGb,aAHa,CAAf;AAKA,WAAKC,cAAL,GACE1E,KAAK,CAACoZ,gBAAN,CACE1Z,KAAK,CAAC8F,eAAN,CAAsB+T,sBADxB,EAEE,CAAC,KAAK7U,cAAN,CAFF,EAGE,WAHF,EAIE,CAJF,KAIQ,EALV;AAMA,WAAKtC,WAAL,GACEpC,KAAK,CAACoZ,gBAAN,CACE1Z,KAAK,CAAC2T,gBAAN,CAAuBmG,sBADzB,EAEE,CAAC,KAAKpX,WAAN,CAFF,EAGE,aAHF,EAIE,CAJF,KAIQ,EALV,CA7BA,CAoCA;;AACA,UAAI,KAAKmC,QAAL,CAAcO,MAAd,GAAuB,CAAvB,IAA4B,KAAK1C,WAAL,KAAqB,EAArD,EAAyD;AACvD,aAAKH,SAAL,GAAiB,SAAjB;AACD,OAFD,MAEO,IAAI,KAAKsC,QAAL,CAAcO,MAAd,GAAuB,CAA3B,EAA8B;AACnC,aAAK7C,SAAL,GAAiB,SAAjB;AACD,OAFM,MAEA,IAAI,KAAKG,WAAL,KAAqB,EAAzB,EAA6B;AAClC,aAAKH,SAAL,GAAiB,UAAjB;AACD,OAFM,MAEA,IAAI,KAAKwC,OAAL,CAAaK,MAAb,GAAsB,CAA1B,EAA6B;AAClC,aAAK7C,SAAL,GAAiB,MAAjB;AACD,OAFM,MAEA;AACL,aAAKA,SAAL,GAAiB,cAAjB;AACD,OA/CD,CAiDA;;;AACA,UAAIvC,KAAK,CAACS,aAAN,CAAoBsZ,UAAxB,EAAoC;AAClC,aAAKN,WAAL,GAAmB,IAAnB;AACA,aAAKxU,QAAL,GAAgBhF,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCwE,QAApD;AACD,OArDD,CAuDA;;;AACA,UAAI,CAAC3E,KAAK,CAAC0Z,YAAN,CAAmB,KAAK/U,QAAxB,CAAL,EAAwC;AACtC3E,QAAAA,KAAK,CAACyD,UAAN,CACEC,UAAU,CAAC4I,IADb,EAEE,eACE,KAAK3H,QADP,GAEE,uCAJJ,EAKE,EALF;AAOD;AACF,KAzED;;AA2EAsU,IAAAA,YAAY,CAACxd,SAAb,CAAuBkR,UAAvB,GAAoC,YAAY;AAC9C,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAAC6M,KAFb;AAGV,yBAAe3Z,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVC,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CACPhR,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OAD7B;AADD,WALA;AAUVwZ,UAAAA,YAAY,EAAE;AACZ,qBAASja,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,CAA0CQ;AADvC,WAVJ;AAaV6K,UAAAA,SAAS,EAAE;AACT,qBAASla,OAAO,CAACC,WAAR,GAAsBka,kBAAtB,CAAyCC;AADzC,WAbD;AAgBVC,UAAAA,iBAAiB,EAAE;AACjB,qBAASha,KAAK,CAAC2Q,QAAN,CACPhR,OAAO,CAACC,WAAR,GAAsBqa,mBAAtB,CAA0CC,gBADnC;AADQ,WAhBT;AAqBV9F,UAAAA,SAAS,EAAE;AACT,qBAASpU,KAAK,CAAC2Q,QAAN,CAAe,KAAKhM,QAApB;AADA,WArBD;AAwBVwV,UAAAA,UAAU,EAAE;AACV,qBAAS,KAAKlY;AADJ,WAxBF;AA2BVmY,UAAAA,YAAY,EAAE;AACZ,qBAASpa,KAAK,CAAC2Q,QAAN,CAAe,KAAKwI,WAApB;AADG,WA3BJ;AA8BVkB,UAAAA,gBAAgB,EAAE;AAChB,qBAASra,KAAK,CAAC2Q,QAAN,CAAe,KAAKvO,WAApB;AADO,WA9BR;AAiCVkY,UAAAA,gBAAgB,EAAE;AAChB,qBAASta,KAAK,CAAC2Q,QAAN,CAAe,KAAKjM,cAApB;AADO,WAjCR;AAoCV/B,UAAAA,mBAAmB,EAAE;AACnB,qBAAS3C,KAAK,CAAC2Q,QAAN,CAAe,KAAK9N,iBAApB;AADU,WApCX;AAuCV0X,UAAAA,iBAAiB,EAAE;AACjB,qBAASva,KAAK,CAAC2Q,QAAN,CAAe,CAAf,CADQ,CACW;;AADX,WAvCT;AA0CV6J,UAAAA,QAAQ,EAAE;AACR,qBAASxa,KAAK,CAAC2Q,QAAN,CAAe,KAAKuI,OAApB;AADD;AA1CA;AADJ,OAAV,CAD8C,CAkD9C;;AACA,UAAI3U,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAI0P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1P,QAAL,CAAcO,MAAlC,EAA0CmP,CAAC,EAA3C,EAA+C;AAC7C,YAAI,KAAK1P,QAAL,CAAc0P,CAAd,MAAqB,EAAzB,EAA6B;AAC3B1P,UAAAA,QAAQ,CAACwB,IAAT,CAAc;AAAE,qBAAS/F,KAAK,CAAC2Q,QAAN,CAAe,KAAKpM,QAAL,CAAc0P,CAAd,CAAf;AAAX,WAAd;AACD;AACF;;AACD,UAAI1P,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;AACvB8H,QAAAA,GAAG,CAACC,UAAJ,CAAe4N,KAAf,GAAuB;AAAEC,UAAAA,OAAO,EAAEnW;AAAX,SAAvB;AACD,OAFD,MAEO;AACLqI,QAAAA,GAAG,CAACC,UAAJ,CAAe4N,KAAf,GAAuB,EAAvB;AACD;;AAED,UAAIhW,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIwP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKxP,OAAL,CAAaK,MAAjC,EAAyCmP,CAAC,EAA1C,EAA8C;AAC5C,YAAI,KAAKxP,OAAL,CAAawP,CAAb,MAAoB,EAAxB,EAA4B;AAC1BxP,UAAAA,OAAO,CAACsB,IAAR,CAAa;AAAE,qBAAS/F,KAAK,CAAC2Q,QAAN,CAAe,KAAKlM,OAAL,CAAawP,CAAb,CAAf;AAAX,WAAb;AACD;AACF;;AACD,UAAIxP,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACtB8H,QAAAA,GAAG,CAACC,UAAJ,CAAe8N,WAAf,GAA6B;AAAEC,UAAAA,aAAa,EAAEnW;AAAjB,SAA7B;AACD,OAFD,MAEO;AACLmI,QAAAA,GAAG,CAACC,UAAJ,CAAe8N,WAAf,GAA6B,EAA7B;AACD;;AAED,aAAOpU,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KA5ED;AA8EA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIqM,IAAAA,YAAY,CAACxd,SAAb,CAAuB+D,eAAvB,GAAyC,UAAU0M,QAAV,EAAoB;AAC3D,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,UAAI9K,MAAM,GAAGtB,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,QAApB,CAAb;AACA,UAAI9J,MAAM,GAAGrC,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,QAApB,CAAb;AACA,UAAIzM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAIpE,OAAO,GAAG,EAAd;AACA,UAAI4F,iBAAiB,GAAGpB,KAAK,CAACqB,oBAAN,CAA2B6K,QAA3B,CAAxB;AACA,UAAI2O,GAAG,GAAGlb,OAAO,CAACC,WAAR,GAAsB0Q,eAAhC;;AAEA,UAAIjO,MAAM,KAAK,sCAAf,EAAuD;AACrD;AACA3C,QAAAA,KAAK,CAACS,aAAN,CAAoB2a,eAApB,GAAsC,IAAtC;AAEAtf,QAAAA,OAAO,GAAG,sCAAV;AACAwE,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAACqX,IAA5B,EAAkCvf,OAAlC,EAA2C0Q,QAA3C;AACD;;AAED,UAAI5K,MAAM,KAAK,SAAf,EAA0B;AACxB,YAAI,CAAC5B,KAAK,CAACS,aAAN,CAAoBsZ,UAAzB,EAAqC;AACnC;AACA/Z,UAAAA,KAAK,CAACsb,WAAN,GAAoB9O,QAApB;AACAxM,UAAAA,KAAK,CAACS,aAAN,CAAoBsZ,UAApB,GAAiC,IAAjC;AACA/Z,UAAAA,KAAK,CAACS,aAAN,CAAoB8a,QAApB,GAA+B,IAAIC,IAAJ,EAA/B;AACAxb,UAAAA,KAAK,CAACoa,kBAAN,CAAyBqB,SAAzB,GAAqC,IAArC;AACAzb,UAAAA,KAAK,CAAC0b,gBAAN,CAAuBC,eAAvB,GAAyC,KAAzC;AACA3b,UAAAA,KAAK,CAACS,aAAN,CAAoBwE,QAApB,GAA+B3E,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,WAApB,CAA/B;AACAzM,UAAAA,KAAK,CAACS,aAAN,CAAoB8B,SAApB,GAAgCjC,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAAhC;AACAzM,UAAAA,KAAK,CAACS,aAAN,CAAoBmb,SAApB,GAAgCtb,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAAhC;AACAzM,UAAAA,KAAK,CAACS,aAAN,CAAoBob,kBAApB,GAAyCvb,KAAK,CAACC,OAAN,CACvCkM,IADuC,EAEvC,eAFuC,CAAzC;AAIAzM,UAAAA,KAAK,CAACS,aAAN,CAAoBqb,WAApB,GAAkCxb,KAAK,CAACC,OAAN,CAChCkM,IADgC,EAEhC,gBAFgC,CAAlC;AAKAzM,UAAAA,KAAK,CAACoa,kBAAN,CAAyB2B,aAAzB,GACEzb,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,gBAApB,MAA0C,MAD5C,CAnBmC,CAsBnC;;AACA,cACEzM,KAAK,CAACua,mBAAN,CAA0BC,gBAA1B,KAA+C,IAA/C,IACAxa,KAAK,CAACoa,kBAAN,CAAyB2B,aAAzB,KAA2C,IAF7C,EAGE;AACAC,YAAAA,sBAAsB,CAACC,IAAvB;AACD,WA5BkC,CA8BnC;;;AACAC,UAAAA,oBAAoB,CAAC1P,QAAD,CAApB;AACA2P,UAAAA,eAAe,CAAC3P,QAAD,CAAf;AACA4P,UAAAA,oBAAoB,CAAC5P,QAAD,CAApB;AACA6P,UAAAA,uBAAuB,CAAC7P,QAAD,CAAvB;AACD,SAnCD,MAmCO;AACL,cAAIxM,KAAK,CAACS,aAAN,CAAoB2a,eAAxB,EAAyC;AACvCpb,YAAAA,KAAK,CAACS,aAAN,CAAoBwE,QAApB,GAA+B3E,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,WAApB,CAA/B;AACAzM,YAAAA,KAAK,CAACS,aAAN,CAAoB8B,SAApB,GAAgCjC,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAAhC;AACAzM,YAAAA,KAAK,CAACS,aAAN,CAAoBmb,SAApB,GAAgCtb,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,YAApB,CAAhC,CAHuC,CAKvC;;AACAzM,YAAAA,KAAK,CAACS,aAAN,CAAoB2a,eAApB,GAAsC,KAAtC,CANuC,CAQvC;;AACApb,YAAAA,KAAK,CAAC0b,gBAAN,CAAuBC,eAAvB,GAAyC,KAAzC;AACA3b,YAAAA,KAAK,CAAC0b,gBAAN,CAAuBY,yBAAvB,GAAmD,KAAnD;AACAtc,YAAAA,KAAK,CAAC0b,gBAAN,CAAuBa,uBAAvB,GAAiD,KAAjD,CAXuC,CAavC;;AACAL,YAAAA,oBAAoB,CAAC1P,QAAD,CAApB;AACA2P,YAAAA,eAAe,CAAC3P,QAAD,CAAf;AACA4P,YAAAA,oBAAoB,CAAC5P,QAAD,CAApB;AACA6P,YAAAA,uBAAuB,CAAC7P,QAAD,CAAvB;AACD,WAlBD,MAkBO;AACL;AACA1Q,YAAAA,OAAO,GAAG,4CAAV;AAEAkE,YAAAA,KAAK,CAACoa,kBAAN,CAAyBoC,QAAzB,GAAoClc,KAAK,CAACC,OAAN,CAClCkM,IADkC,EAElC,YAFkC,CAApC;AAIAzM,YAAAA,KAAK,CAACoa,kBAAN,CAAyBqC,aAAzB,GAAyCnc,KAAK,CAACC,OAAN,CACvCkM,IADuC,EAEvC,iBAFuC,CAAzC;AAIAzM,YAAAA,KAAK,CAACoa,kBAAN,CAAyBsC,aAAzB,GAAyCpc,KAAK,CAACC,OAAN,CACvCkM,IADuC,EAEvC,iBAFuC,CAAzC;;AAKA,gBAAIzM,KAAK,CAACoa,kBAAN,CAAyBoC,QAAzB,KAAsC,KAA1C,EAAiD;AAC/C,kBAAIxc,KAAK,CAACW,WAAN,CAAkBK,GAAtB,EAA2B;AACzB,oBAAI2b,iBAAiB,GAAG;AACtBvc,kBAAAA,eAAe,EAAE;AACf,mCAAe,EADA;AAEf,6BAAS,UAFM;AAGfY,oBAAAA,GAAG,EAAE;AAAE,+BAAShB,KAAK,CAACW,WAAN,CAAkBK;AAA7B,qBAHU;AAIf4b,oBAAAA,WAAW,EAAE;AAAE,+BAAS;AAAX;AAJE;AADK,iBAAxB;AASAtc,gBAAAA,KAAK,CAACuc,mBAAN,CAA0B1B,GAA1B,EAA+BwB,iBAA/B;AACD;;AAED,kBAAI3c,KAAK,CAACS,aAAN,CAAoBqc,SAAxB,EAAmC;AACjC,oBAAIC,iBAAiB,GAAG;AACtB3c,kBAAAA,eAAe,EAAE;AACfoN,oBAAAA,QAAQ,EAAE;AACR,+BAASvN,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC;AADrC,qBADK;AAIf,6BAAS,eAJM;AAKf,mCAAe;AALA;AADK,iBAAxB;AAUA,oBAAIsc,2BAA2B,GAAG1c,KAAK,CAACuc,mBAAN,CAChC1B,GADgC,EAEhC4B,iBAFgC,CAAlC;AAIA5B,gBAAAA,GAAG,CAAC8B,WAAJ,CAAgBD,2BAAhB;AACD;AACF,aA/BD,MA+BO,IACLhd,KAAK,CAACoa,kBAAN,CAAyBoC,QAAzB,KACCxc,KAAK,CAACW,WAAN,CAAkBK,GAAlB,KACChB,KAAK,CAACoa,kBAAN,CAAyBqC,aAD1B,IAECtB,GAAG,CAAC+B,oBAAJ,KAA6B,IAH/B,CADK,EAKL;AACA;AACA;AAEAld,cAAAA,KAAK,CAACW,WAAN,CAAkBK,GAAlB,GAAwBhB,KAAK,CAACoa,kBAAN,CAAyBqC,aAAjD;AACAzc,cAAAA,KAAK,CAACW,WAAN,CAAkBwc,WAAlB,GAAgC,KAAhC;AACAhC,cAAAA,GAAG,CAACre,MAAJ,CAAW,CAAX,EAAc,IAAd;AACD,aAZM,MAYA;AACL;AACA,kBAAIsgB,qBAAqB,GAAGjC,GAAG,CAACkC,mBAAJ,EAA5B;AACA,kBAAIC,mBAAmB,GAAG9Q,QAAQ,CAACE,WAAT,CAAqB6Q,oBAArB,CAA0CC,eAA1C,CAA0DC,GAA1D,CACxB,UAAUC,UAAV,EAAsB;AACpB,uBAAOA,UAAU,CAAC,OAAD,CAAjB;AACD,eAHuB,CAA1B;;AAMA,mBAAK,IAAIC,eAAT,IAA4BP,qBAA5B,EAAmD;AACjD,oBAAIE,mBAAmB,CAACjkB,OAApB,CAA4BskB,eAA5B,MAAiD,CAAC,CAAtD,EAAyD;AACvD;AACA,yBAAO1d,OAAO,CAACC,WAAR,GAAsBqB,gBAAtB,CACLoc,eADK,CAAP;AAGD;AACF;AACF;;AAEDrd,YAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAACqX,IAA5B,EAAkCvf,OAAlC,EAA2C0Q,QAA3C;AACD;AACF,SAxIuB,CA0IxB;;;AACAxM,QAAAA,KAAK,CAACoa,kBAAN,CAAyBC,QAAzB,GACE/Z,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,WAApB,KAAoCzM,KAAK,CAACoa,kBAAN,CAAyBC,QAD/D;AAEAra,QAAAA,KAAK,CAACS,aAAN,CAAoBmd,IAApB,GACEtd,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,MAApB,KAA+BzM,KAAK,CAACS,aAAN,CAAoBmd,IADrD;AAEA5d,QAAAA,KAAK,CAAC6d,SAAN,CAAgBC,IAAhB,CAAqB,UAArB,EAAiCxd,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,UAApB,CAAjC;AACAzM,QAAAA,KAAK,CAAC6d,SAAN,CAAgBC,IAAhB,CAAqB,WAArB,EAAkCxd,KAAK,CAACC,OAAN,CAAckM,IAAd,EAAoB,WAApB,CAAlC;AACA/K,QAAAA,iBAAiB,CAACjB,aAAlB,GAAkCT,KAAK,CAACS,aAAxC;AACAiB,QAAAA,iBAAiB,CAACga,gBAAlB,GAAqC1b,KAAK,CAAC0b,gBAA3C;AACAha,QAAAA,iBAAiB,CAAC6Y,mBAAlB,GAAwCva,KAAK,CAACua,mBAA9C;AACA7Y,QAAAA,iBAAiB,CAACiY,YAAlB,GAAiC3Z,KAAK,CAAC2Z,YAAvC;AACAjY,QAAAA,iBAAiB,CAAC0Y,kBAAlB,GAAuCpa,KAAK,CAACoa,kBAA7C;AACA1Y,QAAAA,iBAAiB,CAACoE,eAAlB,GAAoC9F,KAAK,CAAC8F,eAA1C;AACApE,QAAAA,iBAAiB,CAACiS,gBAAlB,GAAqC3T,KAAK,CAAC2T,gBAA3C;AACAjS,QAAAA,iBAAiB,CAACqc,cAAlB,GAAmC/d,KAAK,CAAC+d,cAAzC;AACD,OAzJD,MAyJO;AACL;AACA,YAAIrc,iBAAiB,CAAC5F,OAAlB,KAA8B,EAAlC,EAAsC;AACpC4F,UAAAA,iBAAiB,CAAC5F,OAAlB,GACE,sDADF;AAED;;AACDwE,QAAAA,KAAK,CAACyD,UAAN,CAAiBC,UAAU,CAAC4I,IAA5B,EAAkClL,iBAAiB,CAAC5F,OAApD,EAA6D0Q,QAA7D;AACD;;AAED,aAAO9K,iBAAP;AACD,KApLD;;AAsLA,aAASwa,oBAAT,CAA8B1P,QAA9B,EAAwC;AACtC,UAAIxM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAI8d,aAAa,GAAGhe,KAAK,CAAC2T,gBAAN,CAAuBmG,sBAA3C;AACA9Z,MAAAA,KAAK,CAAC2T,gBAAN,CAAuBsK,YAAvB,GAAsC,EAAtC,CAHsC,CAGI;;AAC1C,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAAC5Y,MAAlC,EAA0C8Y,CAAC,EAA3C,EAA+C;AAC7C,YAAIC,KAAK,GAAGH,aAAa,CAACE,CAAD,CAAzB;;AACA,YACEC,KAAK,CAACzb,WAAN,KAAsB8J,QAAQ,CAACE,WAAT,CAAqBiO,gBAArB,CAAsC,OAAtC,CADxB,EAEE;AACA3a,UAAAA,KAAK,CAAC0b,gBAAN,CAAuBC,eAAvB,GAAyCwC,KAAK,CAACxC,eAA/C;AACA3b,UAAAA,KAAK,CAAC0b,gBAAN,CAAuBa,uBAAvB,GACE4B,KAAK,CAAC5B,uBADR;AAEAvc,UAAAA,KAAK,CAAC0b,gBAAN,CAAuB0C,kBAAvB,GAA4CD,KAAK,CAACC,kBAAlD;AACApe,UAAAA,KAAK,CAAC2T,gBAAN,CAAuBsK,YAAvB,GAAsCpX,IAAI,CAACC,KAAL,CACpCD,IAAI,CAACE,SAAL,CAAeoX,KAAf,CADoC,CAAtC,CALA,CAOG;AAEH;AACA;;AACAne,UAAAA,KAAK,CAAC0b,gBAAN,CAAuBY,yBAAvB,GACE6B,KAAK,CAAC7B,yBADR;AAED;AACF;AACF;;AAED,aAASD,uBAAT,CAAiC7P,QAAjC,EAA2C;AACzC,UAAIxM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACAF,MAAAA,KAAK,CAAC8F,eAAN,CAAsBuY,YAAtB,GAAqC,EAArC;AACA,UAAIC,aAAa,GAAGte,KAAK,CAAC8F,eAAN,CAAsB+T,sBAA1C;;AACA,WAAK,IAAI0E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAAClZ,MAAlC,EAA0CmZ,CAAC,EAA3C,EAA+C;AAC7C,YAAIC,OAAO,GAAGF,aAAa,CAACC,CAAD,CAA3B;AACA,YAAIE,UAAU,GAAGne,KAAK,CAACC,OAAN,CACfiM,QAAQ,CAACE,WADM,EAEf,kBAFe,CAAjB;;AAIA,YAAI8R,OAAO,CAACE,SAAR,KAAsBD,UAA1B,EAAsC;AACpCze,UAAAA,KAAK,CAAC8F,eAAN,CAAsBuY,YAAtB,GAAqCxX,IAAI,CAACC,KAAL,CACnCD,IAAI,CAACE,SAAL,CAAeyX,OAAf,CADmC,CAArC,CADoC,CAGjC;AACJ;AACF;AACF;;AAED,aAASrC,eAAT,CAAyB3P,QAAzB,EAAmC;AACjC,UAAIxM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAI6a,KAAK,GAAG/a,KAAK,CAAC8F,eAAN,CAAsBD,eAAlC;AACA,UAAI8Y,eAAe,GAAG,EAAtB;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,OAAO,GAAGrS,QAAQ,CAACE,WAAT,CAAqBqO,KAArB,CAA2BC,OAA3B,IAAsC,EAApD;;AAEA,UAAI,CAAC9I,KAAK,CAACC,OAAN,CAAc0M,OAAd,CAAL,EAA6B;AAC3BA,QAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AAED,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,OAAO,CAACzZ,MAA5B,EAAoCmZ,CAAC,EAArC,EAAyC;AACvC,YAAIpI,GAAG,GAAG0I,OAAO,CAACN,CAAD,CAAjB;AACAI,QAAAA,eAAe,CAACtY,IAAhB,CAAqB8P,GAAG,CAAC,OAAD,CAAxB;AACD;;AAED,WAAK,IAAI2I,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG/D,KAAK,CAAC3V,MAAhC,EAAwC0Z,IAAI,EAA5C,EAAgD;AAC9C,YAAIxY,IAAI,GAAGyU,KAAK,CAAC+D,IAAD,CAAhB;;AACA,YAAIH,eAAe,CAACtlB,OAAhB,CAAwBiN,IAAI,CAACC,MAA7B,IAAuC,CAAC,CAA5C,EAA+C;AAC7CqY,UAAAA,aAAa,CAACvY,IAAd,CAAmBC,IAAnB;AACD;AACF;;AAEDtG,MAAAA,KAAK,CAAC8F,eAAN,CAAsBc,MAAtB,GAA+BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe6X,aAAf,CAAX,CAA/B,CAvBiC,CAuByC;AAC3E;;AAED,aAASxC,oBAAT,CAA8B5P,QAA9B,EAAwC;AACtC,UAAIxM,KAAK,GAAGC,OAAO,CAACC,WAAR,EAAZ;AACA,UAAI6e,UAAU,GAAG/e,KAAK,CAAC2Z,YAAN,CAAmBC,mBAApC;AACA,UAAIoF,oBAAoB,GAAG,EAA3B;AACA,UAAIC,kBAAkB,GAAG,EAAzB;AACA,UAAIC,OAAO,GAAG1S,QAAQ,CAACE,WAAT,CAAqBuO,WAArB,IAAoC,EAAlD;AACA,UAAIkE,YAAY,GAAGD,OAAO,CAAChE,aAAR,IAAyB,EAA5C;;AAEA,UAAI,CAAChJ,KAAK,CAACC,OAAN,CAAcgN,YAAd,CAAL,EAAkC;AAChCA,QAAAA,YAAY,GAAG,CAACA,YAAD,CAAf;AACD;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,YAAY,CAAC/Z,MAAjC,EAAyCga,CAAC,EAA1C,EAA8C;AAC5C,YAAIjJ,GAAG,GAAGgJ,YAAY,CAACC,CAAD,CAAtB;AACAJ,QAAAA,oBAAoB,CAAC3Y,IAArB,CAA0B8P,GAAG,CAAC,OAAD,CAA7B;AACD;;AAED,WAAK,IAAIkJ,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGN,UAAU,CAAC3Z,MAArC,EAA6Cia,IAAI,EAAjD,EAAqD;AACnD,YAAIC,SAAS,GAAGP,UAAU,CAACM,IAAD,CAA1B;;AACA,YAAIL,oBAAoB,CAAC3lB,OAArB,CAA6BimB,SAAS,CAACC,WAAvC,IAAsD,CAAC,CAA3D,EAA8D;AAC5DN,UAAAA,kBAAkB,CAAC5Y,IAAnB,CAAwBiZ,SAAxB;AACD;AACF;;AAEDtf,MAAAA,KAAK,CAAC2Z,YAAN,CAAmBoF,UAAnB,GAAgClY,IAAI,CAACC,KAAL,CAC9BD,IAAI,CAACE,SAAL,CAAekY,kBAAf,CAD8B,CAAhC,CAxBsC,CA0BnC;AACJ;;AAED,QAAIO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAY,CAAE,CAAvC;;AAEAA,IAAAA,kBAAkB,CAACzjB,SAAnB,CAA6BkR,UAA7B,GAA0C,YAAY;AACpD,UAAIC,GAAG,GAAG;AACRC,QAAAA,UAAU,EAAE;AACV,0BAAgB,IADN;AAEV,mBAASC,aAAa,CAACqS,aAFb;AAGV,yBAAenf,KAAK,CAACgN,YAAN,EAHL;AAIVC,UAAAA,WAAW,EAAE,EAJH;AAKVkO,UAAAA,SAAS,EAAE;AACT,qBAASnb,KAAK,CAAC2Q,QAAN,CACPhR,OAAO,CAACC,WAAR,GAAsBka,kBAAtB,CAAyCqB,SADlC;AADA,WALD;AAUVjO,UAAAA,QAAQ,EAAE;AACR,qBAASlN,KAAK,CAAC2Q,QAAN,CACPhR,OAAO,CAACC,WAAR,GAAsBO,aAAtB,CAAoCC,OAD7B;AADD,WAVA;AAeVwZ,UAAAA,YAAY,EAAE;AACZ,qBAAS5Z,KAAK,CAAC2Q,QAAN,CACPhR,OAAO,CAACC,WAAR,GAAsB4O,mBAAtB,CAA0CQ,WADnC;AADG;AAfJ;AADJ,OAAV;AAwBA,aAAOzI,IAAI,CAACE,SAAL,CAAemG,GAAf,CAAP;AACD,KA1BD;AA4BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIsS,IAAAA,kBAAkB,CAACzjB,SAAnB,CAA6B+D,eAA7B,GAA+C,UAAU0M,QAAV,EAAoB;AACjE,UAAIC,IAAI,GAAGD,QAAQ,CAACE,WAApB;AACA,U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","sourcesContent":["/* eslint-disable */\nimport SIP from 'sip.js';\n\n(function () {\n  'use strict';\n  /**\n   * @fileoverview CFSimpleSip\n   */\n\n  /* CFSimpleSip\n   * @class CFSimpleSip\n   */\n\n  var C = {\n    STATUS_NULL: 0,\n    STATUS_NEW: 1,\n    STATUS_CONNECTING: 2,\n    STATUS_CONNECTED: 3,\n    STATUS_COMPLETED: 4,\n  };\n\n  /*\n   * @param {Object} options\n   */\n  var CFSimpleSip = function (options) {\n    /*\n     *  {\n     *    media: {\n     *      remote: {\n     *        audio: <DOM element>,\n     *        video: <DOM element>\n     *      },\n     *      local: {\n     *        video: <DOM element>\n     *      }\n     *    },\n     *    ua: {\n     *       <UA Configuration Options>\n     *    }\n     *  }\n     */\n\n    if (options.media.remote.video) {\n      this.video = true;\n    } else {\n      this.video = false;\n    }\n\n    if (options.media.remote.audio) {\n      this.audio = true;\n    } else {\n      this.audio = false;\n    }\n\n    if (!this.audio && !this.video) {\n      // Need to do at least audio or video\n      // Error\n      throw new Error(\n        'At least one remote audio or video element is required for CFSimpleSip.',\n      );\n    }\n\n    this.options = options;\n\n    // https://stackoverflow.com/questions/7944460/detect-safari-browser\n    var browserUa = window.navigator.userAgent.toLowerCase();\n    var isSafari = false;\n    var isFirefox = false;\n    if (browserUa.indexOf('safari') > -1 && browserUa.indexOf('chrome') < 0) {\n      isSafari = true;\n    } else if (\n      browserUa.indexOf('firefox') > -1 &&\n      browserUa.indexOf('chrome') < 0\n    ) {\n      isFirefox = true;\n    }\n    var sessionDescriptionHandlerFactoryOptions = {\n      peerConnectionOptions: {\n        iceCheckingTimeout: 500,\n        rtcConfiguration: {\n          iceServers: [\n            { urls: 'stun:stun.l.google.com:19302' },\n            { urls: 'stun:stun.vacd.biz:19302' },\n            { urls: 'stun:stun.virtualacd.biz:3478' },\n          ],\n        },\n      },\n    };\n    if (isSafari) {\n      sessionDescriptionHandlerFactoryOptions.modifiers = [\n        SIP.Web.Modifiers.stripG722,\n      ];\n    }\n\n    if (isFirefox) {\n      sessionDescriptionHandlerFactoryOptions.alwaysAcquireMediaFirst = true;\n      sessionDescriptionHandlerFactoryOptions.modifiers = [\n        SIP.Web.Modifiers.addMidLines,\n      ];\n    }\n\n    if (!this.options.ua.uri) {\n      this.anonymous = true;\n    }\n\n    this.ua = new SIP.UA({\n      // User Configurable Options\n      uri: this.options.ua.uri,\n      authorizationUser: this.options.ua.authorizationUser,\n      password: this.options.ua.password,\n      displayName: this.options.ua.displayName,\n      // Undocumented \"Advanced\" Options\n      userAgentString: SIP.C.USER_AGENT + ';' + browserUa,\n      // Fixed Options\n      register: true,\n      registerExpires: this.options.ua.registerExpires || 600,\n      sessionDescriptionHandlerFactoryOptions: sessionDescriptionHandlerFactoryOptions,\n      transportOptions: {\n        traceSip: this.options.ua.traceSip,\n        wsServers: this.options.ua.wsServers,\n        maxReconnectionAttempts: 2,\n      },\n      dtmfType: SIP.C.dtmfType.RTP,\n    });\n\n    this.state = C.STATUS_NULL;\n\n    this.logger = this.ua.getLogger('sip.simple');\n\n    this.ua.on(\n      'registered',\n      function () {\n        this.emit('registered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'unregistered',\n      function () {\n        this.emit('unregistered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'failed',\n      function () {\n        this.emit('unregistered', this.ua);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'invite',\n      function (session) {\n        // If there is already an active session reject the incoming session\n        if (this.state !== C.STATUS_NULL && this.state !== C.STATUS_COMPLETED) {\n          this.logger.warn(\n            'Rejecting incoming call. CFSimpleSip only supports 1 call at a time',\n          );\n          session.reject();\n          return;\n        }\n        this.session = session;\n        this.setupSession();\n        this.emit('ringing', this.session);\n      }.bind(this),\n    );\n\n    this.ua.on(\n      'message',\n      function (message) {\n        this.emit('message', message);\n      }.bind(this),\n    );\n\n    return this;\n  };\n\n  CFSimpleSip.prototype = Object.create(SIP.EventEmitter.prototype);\n  CFSimpleSip.C = C;\n\n  // Public\n\n  CFSimpleSip.prototype.call = function (destination) {\n    if (!this.ua || !this.checkRegistration()) {\n      this.logger.warn('A registered UA is required for calling');\n      return;\n    }\n    if (this.state !== C.STATUS_NULL && this.state !== C.STATUS_COMPLETED) {\n      this.logger.warn('Cannot make more than a single call with CFSimpleSip');\n      return;\n    }\n    // Safari hack, because you cannot call .play() from a non user action\n    if (this.options.media.remote.audio) {\n      this.options.media.remote.audio.autoplay = true;\n    }\n    if (this.options.media.remote.video) {\n      this.options.media.remote.video.autoplay = true;\n    }\n    if (this.options.media.local && this.options.media.local.video) {\n      this.options.media.local.video.autoplay = true;\n      this.options.media.local.video.volume = 0;\n    }\n    this.session = this.ua.invite(destination, {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: this.audio,\n          video: this.video,\n        },\n      },\n    });\n    this.setupSession();\n\n    return this.session;\n  };\n\n  CFSimpleSip.prototype.answer = function () {\n    if (this.state !== C.STATUS_NEW && this.state !== C.STATUS_CONNECTING) {\n      this.logger.warn('No call to answer');\n      return;\n    }\n    // Safari hack, because you cannot call .play() from a non user action\n    if (this.options.media.remote.audio) {\n      this.options.media.remote.audio.autoplay = true;\n    }\n    if (this.options.media.remote.video) {\n      this.options.media.remote.video.autoplay = true;\n    }\n    return this.session.accept({\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: this.audio,\n          video: this.video,\n        },\n      },\n    });\n    // emit call is active\n  };\n\n  CFSimpleSip.prototype.reject = function () {\n    if (this.state !== C.STATUS_NEW && this.state !== C.STATUS_CONNECTING) {\n      this.logger.warn('Call is already answered');\n      return;\n    }\n    return this.session.reject();\n  };\n\n  CFSimpleSip.prototype.hangup = function () {\n    if (\n      this.state !== C.STATUS_CONNECTED &&\n      this.state !== C.STATUS_CONNECTING &&\n      this.state !== C.STATUS_NEW\n    ) {\n      this.logger.warn('No active call to hang up on');\n      return;\n    }\n    if (this.state !== C.STATUS_CONNECTED) {\n      return this.session.cancel();\n    } else {\n      return this.session.bye();\n    }\n  };\n\n  CFSimpleSip.prototype.hold = function () {\n    if (this.state !== C.STATUS_CONNECTED || this.session.local_hold) {\n      this.logger.warn('Cannot put call on hold');\n      return;\n    }\n    this.mute();\n    this.logger.log('Placing session on hold');\n    return this.session.hold();\n  };\n\n  CFSimpleSip.prototype.unhold = function () {\n    if (this.state !== C.STATUS_CONNECTED || !this.session.local_hold) {\n      this.logger.warn('Cannot unhold a call that is not on hold');\n      return;\n    }\n    this.unmute();\n    this.logger.log('Placing call off hold');\n    return this.session.unhold();\n  };\n\n  CFSimpleSip.prototype.mute = function () {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An acitve call is required to mute audio');\n      return;\n    }\n    this.logger.log('Muting Audio');\n    this.toggleMute(true);\n    this.emit('mute', this);\n  };\n\n  CFSimpleSip.prototype.unmute = function () {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An active call is required to unmute audio');\n      return;\n    }\n    this.logger.log('Unmuting Audio');\n    this.toggleMute(false);\n    this.emit('unmute', this);\n  };\n\n  CFSimpleSip.prototype.sendDTMF = function (tone) {\n    if (this.state !== C.STATUS_CONNECTED) {\n      this.logger.warn('An active call is required to send a DTMF tone');\n      return;\n    }\n    this.logger.log('Sending DTMF tone: ' + tone);\n    this.session.dtmf(tone);\n  };\n\n  CFSimpleSip.prototype.message = function (destination, message) {\n    if (!this.ua || !this.checkRegistration()) {\n      this.logger.warn('A registered UA is required to send a message');\n      return;\n    }\n    if (!destination || !message) {\n      this.logger.warn(\n        'A destination and message are required to send a message',\n      );\n      return;\n    }\n    this.ua.message(destination, message);\n  };\n\n  // Private Helpers\n\n  CFSimpleSip.prototype.checkRegistration = function () {\n    return this.anonymous || (this.ua && this.ua.isRegistered());\n  };\n\n  CFSimpleSip.prototype.setupRemoteMedia = function () {\n    // If there is a video track, it will attach the video and audio to the same element\n    var pc = this.session.sessionDescriptionHandler.peerConnection;\n    var remoteStream;\n\n    if (pc.getReceivers) {\n      remoteStream = new window.window.MediaStream();\n      pc.getReceivers().forEach(function (receiver) {\n        var track = receiver.track;\n        if (track) {\n          remoteStream.addTrack(track);\n        }\n      });\n    } else {\n      remoteStream = pc.getRemoteStreams()[0];\n    }\n    if (this.video) {\n      this.options.media.remote.video.srcObject = remoteStream;\n      this.options.media.remote.video.play().catch(\n        function () {\n          this.logger.log('play was rejected');\n        }.bind(this),\n      );\n    } else if (this.audio) {\n      this.options.media.remote.audio.srcObject = remoteStream;\n      this.options.media.remote.audio.play().catch(\n        function () {\n          this.logger.log('play was rejected');\n        }.bind(this),\n      );\n    }\n  };\n\n  CFSimpleSip.prototype.setupLocalMedia = function () {\n    if (\n      this.video &&\n      this.options.media.local &&\n      this.options.media.local.video\n    ) {\n      var pc = this.session.sessionDescriptionHandler.peerConnection;\n      var localStream;\n      if (pc.getSenders) {\n        localStream = new window.window.MediaStream();\n        pc.getSenders().forEach(function (sender) {\n          var track = sender.track;\n          if (track && track.kind === 'video') {\n            localStream.addTrack(track);\n          }\n        });\n      } else {\n        localStream = pc.getLocalStreams()[0];\n      }\n      this.options.media.local.video.srcObject = localStream;\n      this.options.media.local.video.volume = 0;\n      this.options.media.local.video.play();\n    }\n  };\n\n  CFSimpleSip.prototype.cleanupMedia = function () {\n    if (this.video) {\n      this.options.media.remote.video.srcObject = null;\n      this.options.media.remote.video.pause();\n      if (this.options.media.local && this.options.media.local.video) {\n        this.options.media.local.video.srcObject = null;\n        this.options.media.local.video.pause();\n      }\n    }\n    if (this.audio) {\n      this.options.media.remote.audio.srcObject = null;\n      this.options.media.remote.audio.pause();\n    }\n  };\n\n  CFSimpleSip.prototype.setupSession = function () {\n    this.state = C.STATUS_NEW;\n    this.emit('new', this.session);\n\n    this.session.on('progress', this.onProgress.bind(this));\n    this.session.on('accepted', this.onAccepted.bind(this));\n    this.session.on('rejected', this.onEnded.bind(this));\n    this.session.on('failed', this.onFailed.bind(this));\n    this.session.on('terminated', this.onEnded.bind(this));\n  };\n\n  CFSimpleSip.prototype.destroyMedia = function () {\n    this.session.sessionDescriptionHandler.close();\n  };\n\n  CFSimpleSip.prototype.toggleMute = function (mute) {\n    var pc = this.session.sessionDescriptionHandler.peerConnection;\n    if (pc.getSenders) {\n      pc.getSenders().forEach(function (sender) {\n        if (sender.track) {\n          sender.track.enabled = !mute;\n        }\n      });\n    } else {\n      pc.getLocalStreams().forEach(function (stream) {\n        stream.getAudioTracks().forEach(function (track) {\n          track.enabled = !mute;\n        });\n        stream.getVideoTracks().forEach(function (track) {\n          track.enabled = !mute;\n        });\n      });\n    }\n  };\n\n  CFSimpleSip.prototype.onAccepted = function () {\n    this.state = C.STATUS_CONNECTED;\n    this.emit('connected', this.session);\n\n    this.setupLocalMedia();\n    this.setupRemoteMedia();\n    this.session.sessionDescriptionHandler.on(\n      'addTrack',\n      function () {\n        this.logger.log(\n          'A track has been added, triggering new remoteMedia setup',\n        );\n        this.setupRemoteMedia();\n      }.bind(this),\n    );\n\n    this.session.sessionDescriptionHandler.on(\n      'addStream',\n      function () {\n        this.logger.log(\n          'A stream has been added, trigger new remoteMedia setup',\n        );\n        this.setupRemoteMedia();\n      }.bind(this),\n    );\n\n    this.session.on(\n      'hold',\n      function () {\n        this.emit('hold', this.session);\n      }.bind(this),\n    );\n    this.session.on(\n      'unhold',\n      function () {\n        this.emit('unhold', this.session);\n      }.bind(this),\n    );\n    this.session.on(\n      'dtmf',\n      function (tone) {\n        this.emit('dtmf', tone);\n      }.bind(this),\n    );\n    this.session.on('bye', this.onEnded.bind(this));\n  };\n\n  CFSimpleSip.prototype.onProgress = function () {\n    this.state = C.STATUS_CONNECTING;\n    this.emit('connecting', this.session);\n  };\n\n  CFSimpleSip.prototype.onFailed = function () {\n    this.onEnded();\n  };\n\n  CFSimpleSip.prototype.onEnded = function () {\n    this.state = C.STATUS_COMPLETED;\n    this.emit('ended', this.session);\n    this.cleanupMedia();\n  };\n\n  window.CFSimpleSip = CFSimpleSip;\n  return CFSimpleSip;\n})();\n\nexport default (function () {\n  /**\n   * @fileOverview Exposed functionality for Contact Center AgentUI.\n   * @version 3.0.14\n   * @namespace AgentLibrary\n   */\n\n  return function (global) {\n    var AddSessionNotification = function () {};\n\n    /*\n     * This class is responsible for handling \"ADD-SESSION\" packets from IntelliQueue.  This is used by\n     * the CallControlForm. Then it will increment the total_calls count.\n     *\n     * {\n     *   \"ui_notification\": {\n     *       \"@message_id\": \"IQ982008082918151403727\",\n     *       \"@response_to\": \"\",\n     *       \"@type\": \"ADD-SESSION\",\n     *       \"session_id\": { \"#text\": \"2\" },\n     *       \"uii\": { \"#text\": \"200808291814560000000900016558\" },\n     *       \"phone\": { \"#text\": \"200808291814370000000900016555\" },\n     *       \"session_type\": { \"#text\": \"AGENT\" },\n     *       \"session_label\": { \"#text\": \"Primary Agents Call Session\" },\n     *       \"allow_control\": { \"#text\": \"TRUE\" },\n     *       \"monitoring\": { \"#text\": \"FALSE\" },\n     *       \"agent_id\": { \"#text\": \"1856\" }\n     *   }\n     *  }\n     */\n    AddSessionNotification.prototype.processResponse = function (notification) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      var sessionAgentId = utils.getText(notif, 'agent_id');\n\n      if (utils.getText(notif, 'session_type') === 'AGENT') {\n        model.incrementTotalCalls();\n      }\n\n      if (sessionAgentId === model.agentSettings.agentId) {\n        // add the session_id of this leg to the current call packet -\n        // this way we can use it for hangups later.\n        model.currentCall.sessionId = utils.getText(notif, 'session_id');\n      } else if (sessionAgentId != '') {\n        // this is a monitoring session, lets save the monitored agent id for barge-ins\n        model.currentCall.monitorAgentId = sessionAgentId;\n      }\n\n      // Check to see if we have a transfer leg here, if so, register it\n      var sessionType = utils.getText(notif, 'session_type'),\n        allowControl = utils.getText(notif, 'allow_control'),\n        sessionId = utils.getText(notif, 'session_id'),\n        uii = utils.getText(notif, 'uii'),\n        isMonitoring = model.currentCall.isMonitoring,\n        monitoringType = model.currentCall.monitoringType;\n\n      var isBargeInMonitor = isMonitoring && monitoringType === 'FULL',\n        notCurrentAgent = sessionAgentId !== model.agentSettings.agentId,\n        notSessionOne = sessionId !== '1',\n        shouldTrackSession = false;\n\n      if (notSessionOne && notCurrentAgent) {\n        if (isBargeInMonitor) {\n          shouldTrackSession = true;\n        } else if (allowControl) {\n          if (sessionType === 'OUTBOUND' || sessionType === 'AGENT') {\n            shouldTrackSession = true;\n          }\n        }\n      }\n\n      if (shouldTrackSession) {\n        var destination = utils.getText(notif, 'phone');\n\n        if (sessionType === 'AGENT' || sessionAgentId !== '') {\n          destination = utils.getText(notif, 'agent_name');\n        }\n\n        model.transferSessions[sessionId] = {\n          sessionId: sessionId,\n          destination: destination,\n          uii: uii,\n        };\n      }\n\n      // if agent session, set on call status\n      if (notif.session_id === '2') {\n        model.agentSettings.onCall = true;\n      }\n\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received ADD-SESSION notification';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.phone = utils.getText(notif, 'phone');\n      formattedResponse.sessionType = utils.getText(notif, 'session_type');\n      formattedResponse.sessionLabel = utils.getText(notif, 'session_label');\n      formattedResponse.allowControl = utils.getText(notif, 'allow_control');\n      formattedResponse.monitoring = utils.getText(notif, 'monitoring');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.recordingUrl = utils.getText(notif, 'recording_url');\n      formattedResponse.transferSessions = model.transferSessions;\n\n      return formattedResponse;\n    };\n\n    var AdminDebugEmailNotification = function () {};\n\n    /*\n     * This class is responsible for handling \"AGENT-DEBUG-EMAIL\" packets from IntelliQueue\n     *\n     * {\n     *   \"ui_notification\":{\n     *      \"@message_id\":\"IQD01DEV2018071616521500004\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"AGENT-DEBUG-EMAIL\",\n     *      \"email_to\": {\n     *          \"#text\":\"rmyers@connectfirst.com\"\n     *      }\n     *      \"requested_by\": {\n     *          \"#text\":\"Ross Myers\"\n     *      }\n     *   }\n     * }\n     */\n    AdminDebugEmailNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received AGENT-DEBUG-EMAIL notification';\n      formattedResponse.emailTo = utils.getText(notif, 'email_to');\n      formattedResponse.requestedBy = utils.getText(notif, 'requested_by');\n\n      return formattedResponse;\n    };\n\n    var DialGroupChangeNotification = function () {};\n\n    /*\n     * This class is responsible for handling a DIAL_GROUP_CHANGE notification.\n     * This event is sent from IQ when an agent's dial group is changed in through the AdminUI.\n     *\n     *   {\n     *       \"ui_notification\": {\n     *           \"@message_id\": \"IQ10012016080413085500263\",\n     *           \"@type\": \"DIAL_GROUP_CHANGE\",\n     *           \"agent_id\": { \"#text\": \"1180958\" },\n     *           \"dial_group_id\": { \"#text\": \"50354\" },\n     *           \"dialGroupName\": { \"#text\": \"Preview Dial Mode\" },\n     *           \"dial_group_desc\": {}\n     *       }\n     *   }\n     */\n    DialGroupChangeNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      //Modify loginRequest with new DialGroupId\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      var origLoginType = model.loginRequest.loginType;\n      var newDgId = utils.getText(notif, 'dial_group_id');\n\n      model.dialGroupChangeNotification = notification;\n\n      // Calculate type of login - called from AdminUI when assigning agent to new dial group.\n      // Only options should be BLENDED or OUTBOUND here.\n      if (\n        newDgId &&\n        newDgId !== '' &&\n        (origLoginType === 'INBOUND' || origLoginType === 'BLENDED')\n      ) {\n        model.loginRequest.loginType = 'BLENDED';\n      } else if (newDgId && newDgId !== '') {\n        model.loginRequest.loginType = 'OUTBOUND';\n      } else if (origLoginType === 'INBOUND') {\n        model.loginRequest.loginType = 'INBOUND';\n      } else {\n        model.loginRequest.loginType = 'NO-SELECTION';\n      }\n\n      UIModel.getInstance().loginRequest.dialGroupId = newDgId;\n\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.message = 'Dial Group Updated Successfully.';\n      formattedResponse.detail = 'Dial Group changed to [' + newDgId + '].';\n      formattedResponse.dialGroupId = utils.getText(notif, 'dial_group_id');\n      formattedResponse.dialGroupName = utils.getText(notif, 'dialGroupName'); // camel case from server for some reason :/\n      formattedResponse.dialGroupDesc = utils.getText(notif, 'dial_group_desc');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n\n      return formattedResponse;\n    };\n\n    var DialGroupChangePendingNotification = function () {};\n\n    /*\n     * This class is responsible for handling a DIAL_GROUP_CHANGE_PENDING notification.\n     * This event is sent from IQ when an agent's dial group is changed and the agent is on a call.\n     *\n     * {\n     *     \"ui_notification\": {\n     *         \"@message_id\": \"IQ10012016080515294800318\",\n     *         \"@type\": \"DIAL_GROUP_CHANGE_PENDING\",\n     *         \"agent_id\": { \"#text\": \"1180958\" },\n     *         \"dial_group_id\": { \"#text\": \"50354\" },\n     *         \"update_from_adminui\": { \"#text\": \"TRUE\" }\n     *     }\n     * }\n     */\n    DialGroupChangePendingNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      model.agentSettings.pendingDialGroupChange = parseInt(\n        utils.getText(notif, 'dial_group_id'),\n        10,\n      );\n\n      // check if request originated with AdminUI\n      if (notif.update_from_adminui) {\n        model.agentSettings.updateDGFromAdminUI =\n          utils.getText(notif, 'update_from_adminui') === true;\n      } else {\n        model.agentSettings.updateDGFromAdminUI = false;\n      }\n\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.message =\n        'Dial Group Change Pending notification received.';\n      formattedResponse.detail =\n        'DialGroup switch for existing session pending until active call ends.';\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.dialGroupId = utils.getText(notif, 'dial_group_id');\n      formattedResponse.updateFromAdminUI = utils.getText(\n        notif,\n        'update_from_adminui',\n      );\n\n      return formattedResponse;\n    };\n\n    var DirectAgentTransferNotification = function () {};\n\n    /*\n     * This class is responsible for handling a DIRECT-AGENT-ROUTE notification.\n     * This event is sent from IQ when an agent is presented a direct transfer, in the case they are not in an\n     * available state to automatically be presented the call.\n     *\n     * {\n     *     \"ui_notification\": {\n     *         \"@message_id\": \"IQ10012016080515294800318\",\n     *         \"@type\": \"DIRECT-AGENT-ROUTE\",\n     *         \"response_to\": { \"#text\": \"\" },\n     *         \"agent_id\": { \"#text\": \"\" },\n     *         \"uii\": { \"#text\": \"\" },\n     *         \"status\": { \"#text\": \"\" },\n     *         \"ani\": { \"#text\": \"\" },\n     *         \"dnis\": { \"#text\": \"\" }\n     *         \"source_type\": { \"#text\": \"\" },\n     *         \"source_id\": { \"#text\": \"\" },\n     *         \"source_name\": { \"#text\": \"\" }\n     *         \"voicemail_url\": { \"#text\": \"\" }\n     *     }\n     * }\n     */\n    DirectAgentTransferNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      formattedResponse.message = 'Received DIRECT-AGENT-ROUTE notification';\n      formattedResponse.status = utils.getText(notif, 'status');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.ani = utils.getText(notif, 'ani');\n      formattedResponse.dnis = utils.getText(notif, 'dnis');\n      formattedResponse.sourceType = utils.getText(notif, 'source_type');\n      formattedResponse.sourceId = utils.getText(notif, 'source_id');\n      formattedResponse.sourceName = utils.getText(notif, 'source_name');\n      formattedResponse.voicemailUrl = utils.getText(notif, 'voicemail_url');\n\n      return formattedResponse;\n    };\n\n    var DropSessionNotification = function () {};\n\n    /*\n     * This class handles the DROP-SESSION packet from IQ. It doesn't really do anything\n     * besides format a response for the callback notification since there isn't any action needed.\n     *\n     *  {\n     *      \"ui_notification\": {\n     *          \"@message_id\":\"IQ10012016081613222800341\",\n     *          \"@response_to\":\"\",\n     *          \"@type\":\"DROP-SESSION\",\n     *          \"session_id\":{\"#text\":\"3\"},\n     *          \"uii\":{\"#text\":\"201608161322180139000000000124\"}\n     *      }\n     *  }\n     */\n    DropSessionNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      var sessionId = utils.getText(notif, 'session_id');\n      var sessionUII = utils.getText(notif, 'uii');\n      var transfer = UIModel.getInstance().transferSessions[sessionId];\n\n      // Check to see if we just disconnected a transfer session\n      // If so, we need to remove the session from our map\n      if (transfer) {\n        console.log(\n          sessionUII + ' TRANSFER TO ' + transfer.destination + ' TERMINATED',\n        );\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          'Transfer to ' + transfer.destination + ' has terminated',\n          '',\n        );\n        delete UIModel.getInstance().transferSessions[sessionId];\n        formattedResponse.transferEnd = transfer;\n      }\n\n      console.log(sessionUII + ' END SESSION ' + sessionId);\n      formattedResponse.message = 'Received DROP-SESSION Notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    var EarlyUiiNotification = function () {};\n\n    /*\n     * This class is responsible for handling \"EARLY_UII\" packets from IntelliQueue.\n     * For manual outdials, this gives the uii to cancel a ringing line.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"EARLY_UII\",\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *      }\n     *  }\n     */\n    EarlyUiiNotification.prototype.processResponse = function (notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      var notif = notification.ui_notification;\n\n      formattedResponse.message = 'Received EARLY_UII notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    var EndCallNotification = function (libInstance) {\n      this.libInstance = libInstance;\n    };\n\n    /*\n     * This class is responsible for handling an END-CALL notification.\n     * Save the packet in the UIModel by appending it to the currentCall packet.\n     * Update the CallState field in the UIModel to \"CALL-ENDED\"\n     *\n     * {\n     *  \"ui_notification\":{\n     *      \"@message_id\":\"IQ982008082910362203349\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"END-CALL\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"2\"},\n     *      \"call_dts\":{\"#text\":\"2008-08-29 10:36:04\"},\n     *      \"call_duration\":{\"#text\":\"16\"},\n     *      \"term_party\":{\"#text\":\"CALLER\"},\n     *      \"term_reason\":{},\n     *      \"recording_url\":{},\n     *      \"disposition_timeout:{\"#text\":\"60\"}\n     *  }\n     * }\n     */\n    EndCallNotification.prototype.processResponse = function (notification) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      model.endCallNotification = notification;\n\n      // add callDuration, termParty, and termReason to the current call packet\n      model.currentCall.duration = utils.getText(notif, 'call_duration');\n      model.currentCall.termParty = utils.getText(notif, 'term_party');\n      model.currentCall.termReason = utils.getText(notif, 'term_reason');\n\n      // set call state to \"CALL-ENDED\"\n      model.agentSettings.callState = 'CALL-ENDED';\n      model.agentSettings.onCall = false;\n      model.agentSettings.onManualOutdial = false;\n\n      // Clear out any transfer sessions from the previous call\n      model.transferSessions = {};\n\n      // Check if there is a pending dial group change\n      if (\n        model.agentSettings.pendingDialGroupChange > 0 ||\n        model.agentSettings.pendingDialGroupChange == -1\n      ) {\n        // update dial group id\n        model.loginRequest.dialGroupId =\n          model.agentSettings.pendingDialGroupChange;\n\n        // send login update request\n        this.libInstance.loginAgent(\n          model.loginRequest.queueIds,\n          model.configRequest.chatIds,\n          model.configRequest.skillProfileId,\n          model.configRequest.dialGroupId,\n          model.configRequest.dialDest,\n          model.agentSettings.updateDGFromAdminUI,\n        );\n\n        // reset pending dial group variables\n        model.agentSettings.pendingDialGroupChange = 0;\n        model.agentSettings.updateDGFromAdminUI = false;\n      }\n\n      // start ping call interval timer, sends message every 30 seconds\n      // if this is not a manual outdial and we are not suppressing disposition pop\n      if (\n        model.currentCall.outdialDispositions &&\n        model.currentCall.outdialDispositions.dispositions &&\n        model.currentCall.outdialDispositions.dispositions.length > 0 &&\n        model.currentCall.surveyPopType !== 'SUPPRESS'\n      ) {\n        model.pingIntervalId = setInterval(utils.sendPingCallMessage, 30000);\n      }\n\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.message = 'End Call Notification Received.';\n      formattedResponse.detail = '';\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.callDts = utils.getText(notif, 'call_dts');\n      formattedResponse.duration = model.currentCall.duration;\n      formattedResponse.termParty = model.currentCall.termParty;\n      formattedResponse.termReason = model.currentCall.termReason;\n      formattedResponse.recordingUrl = utils.getText(notif, 'recording_url');\n      formattedResponse.dispositionTimeout = utils.getText(\n        notif,\n        'disposition_timeout',\n      );\n\n      return formattedResponse;\n    };\n\n    var GatesChangeNotification = function () {};\n\n    /*\n     * This class is responsible for handling a gates change notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080817344100936\",\n     *          \"@type\":\"GATES_CHANGE\",\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"gate_ids\":{\"#text\":\"11117,3\"}\n     *      }\n     * }\n     */\n    GatesChangeNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n      var newAssignedGates = [];\n      var availableQueues = model.inboundSettings.availableQueues;\n      var assignedGateIds = utils.getText(notif, 'gate_ids');\n      if (assignedGateIds !== '') {\n        assignedGateIds = assignedGateIds.split(',');\n      }\n\n      for (var a = 0; a < assignedGateIds.length; a++) {\n        // find gate in avail list\n        var id = assignedGateIds[a];\n        var foundGate = utils.findObjById(availableQueues, id, 'gateId');\n        if (foundGate) {\n          newAssignedGates.push(foundGate);\n        } else {\n          // gate not in assigned list, add stub\n          var gate = {\n            gateId: id,\n            gateName: '',\n            gateDesc: '',\n            defaultDestOverride: '',\n            isAgentSelectable: false,\n          };\n          newAssignedGates.push(gate);\n        }\n      }\n\n      model.inboundSettings.queues = JSON.parse(\n        JSON.stringify(newAssignedGates),\n      );\n\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.message = 'Gates Change notification received.';\n      formattedResponse.queues = newAssignedGates;\n\n      return formattedResponse;\n    };\n\n    var GenericNotification = function () {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@response_to\":\"1c2fe39f-a31e-aff8-8d23-92a61c88270f\",\n     *          \"@type\":\"GENERIC\",\n     *          \"message_code\":{\"#text\":\"0\"},\n     *          \"message\":{\"#text\":\"OK\"},\n     *          \"detail\":{\"#text\":\"Pending Callback Successfully Cancelled.\"}\n     *      }\n     * }\n     */\n    GenericNotification.prototype.processResponse = function (notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      // add message and detail if present\n      formattedResponse.messageCode = utils.getText(\n        notification.ui_notification,\n        'message_code',\n      );\n\n      return formattedResponse;\n    };\n\n    var NewCallNotification = function () {};\n\n    /*\n     * This class processes a \"NEW-CALL\" packet received from Intelliqueue. It will determine\n     * if the call is a regular or monitoring call:\n     * \t\t@Monitoring==true:  set state to ACTIVE-MONITORING, send NewMonitoringCall event\n     * \t\t@Monitoring==false: set state to ACTIVE, send newcall packet and increment total calls\n     *\n     *  {\"ui_notification\":{\n     *      \"@message_id\":\"IQ982010020911335300027\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"NEW-CALL\",\n     *      \"uii\":{\"#text\":\"201002091133350139990000000010\"},\n     *      \"ani\":{\"#text\":\"9548298548\"},\n     *      \"dnis\":{},\n     *      \"dial_dest\":{\"#text\":\"sip:+16789050673@sip.connectfirst.com\"},\n     *      \"call_type\":{\"#text\":\"OUTBOUND\"},\n     *      \"queue_dts\":{\"#text\":\"2010-02-09 11:33:53\"},\n     *      \"queue_time\":{\"#text\":\"-1\"},\n     *      \"agent_id\":{\"#text\":\"657\"},\n     *      \"app_url\":{},\n     *      \"is_monitoring\":{\"#text\":\"FALSE\"},\n     *      \"script_id\":{},\n     *      \"script_version\":{},\n     *      \"survey_id\":{},\n     *      \"survey_pop_type\":{\"#text\":\"SUPPRESS\"},\n     *      \"message\":{},\n     *      \"agent_recording\":{\"@default\":\"ON\",\"@pause\":\"10\",\"#text\":\"TRUE\"},\n     *      \"hangup_on_disposition\":{\"#text\":\"FALSE\"},\n     *      \"gate\":{\n     *          \"@number\":\"17038\",\n     *          \"name\":{\"#text\":\"AM Campaign\"},\n     *          \"description\":{}\n     *      },\n     *      \"outdial_dispositions\":{\n     *          \"@type\":\"CAMPAIGN|GATE\",\n     *          \"disposition\":[\n     *              { \"@contact_forwarding\":\"FALSE\", \"@disposition_id\":\"20556\", \"@is_complete\":\"1\", \"@is_default\"=\"0\", \"@require_note\"=\"0\", \"@save_survey\"=\"1\", \"@xfer\"=\"0\", \"#text\":\"Not Available\"},\n     *              { \"@contact_forwarding\":\"FALSE\", \"@disposition_id\":\"20559\", \"@is_complete\":\"1\", \"@is_default\"=\"1\", \"@require_note\"=\"1\", \"@save_survey\"=\"1\", \"@xfer\"=\"0\", #text\":\"Transfer Not Available\"}\n     *          ]\n     *      },\n     *      \"requeue_shortcuts\":{\n     *          \"requeue_shortcut\":[\n     *              { \"@gate_id\":\"2\", \"@name\":\"test queue\" \"@skill_id\":\"\"}\n     *          ]\n     *      },\n     *      \"baggage\":{\n     *          \"@allow_updates\":\"TRUE\",\n     *          \"@show_lead_passes\":\"TRUE\",\n     *          \"@show_list_name\":\"TRUE\",\n     *          \"aux_phone\":{},\n     *          \"aux_greeting\":{},\n     *          \"aux_external_url\":{},\n     *          \"aux_data1\":{\"#text\":\"BMAK\"},\n     *          \"aux_data2\":{\"#text\":\"BMAK-041653-934\"},\n     *          \"aux_data3\":{\"#text\":\"Call Ctr 1\"},\n     *          \"aux_data4\":{},\n     *          \"aux_data5\":{},\n     *          \"extern_id\":{\"#text\":\"9548298548\"},\n     *          \"lead_id\":{\"#text\":\"64306\"},\n     *          \"lead_passes\":{\"#text\":\"1\"},\n     *          \"first_name\":{\"#text\":\"Ryant\"},\n     *          \"last_name\":{\"#text\":\"Taylor\"},\n     *          \"mid_name\":{},\n     *          \"address1\":{\"#text\":\"8010 Maryland Ave\"},\n     *          \"address2\":{},\n     *          \"city\":{\"#text\":\"Cleveland\"},\n     *          \"state\":{\"#text\":\"OH\"},\n     *          \"zip\":{\"#text\":\"44105\"},\n     *          \"custom_labels\":{\n     *              \"aux_1_label\":{},\n     *              \"aux_2_label\":{},\n     *              \"aux_3_label\":{},\n     *              \"aux_4_label\":{},\n     *              \"aux_5_label\":{}\n     *          }\n     *      },\n     *      \"survey_response\":{\n     *          \"@response_id\":\"24\",\n     *          \"@survey_id\":\"1775\",\n     *          \"details\":{\n     *              \"detail\":[\n     *                  {\"@element_id\":\"9001\",\"@option_id\":\"0\",\"#text\":\"Box 1\"},\n     *                  {\"@element_id\":\"9002\",\"@option_id\":\"0\",\"#text\":\"Area 1\"},\n     *                  {\"@element_id\":\"9003\",\"@option_id\":\"6439\"},\n     *                  {\"@element_id\":\"9004\",\"@option_id\":\"6443\"},\n     *                  {\"@element_id\":\"9004\",\"@option_id\":\"6444\"},\n     *                  {\"@element_id\":\"9005\",\"@option_id\":\"6447\"},\n     *                  {\"@element_id\":\"9006\",\"@option_id\":\"0\",\"#text\":\"11/20/2013\"},\n     *                  {\"@element_id\":\"9015\",\"@option_id\":\"0\",\"#text\":\"Box 2\"},\n     *                  {\"@element_id\":\"9016\",\"@option_id\":\"0\",\"#text\":\"Area 2\"},\n     *                  {\"@element_id\":\"9017\",\"@option_id\":\"6466\"},\n     *                  {\"@element_id\":\"9018\",\"@option_id\":\"6471\"},\n     *                  {\"@element_id\":\"9018\",\"@option_id\":\"6472\"},\n     *                  {\"@element_id\":\"9019\",\"@option_id\":\"6477\"},\n     *                  {\"@element_id\":\"9020\",\"@option_id\":\"0\",\"#text\":\"11/21/2013\"}\n     *             ]\n     *          }\n     *      }\n     *    }\n     *  }\n     */\n    NewCallNotification.prototype.processResponse = function (notification) {\n      var model = UIModel.getInstance();\n      var notif = notification.ui_notification;\n\n      var newCall = utils.buildDefaultResponse(notification);\n      newCall.message = 'Received NEW-CALL notification';\n      newCall.status = 'OK';\n      newCall.uii = utils.getText(notif, 'uii');\n      newCall.agentId = utils.getText(notif, 'agent_id');\n      newCall.dialDest = utils.getText(notif, 'dial_dest');\n      newCall.queueDts = utils.getText(notif, 'queue_dts');\n      newCall.queueTime = utils.getText(notif, 'queue_time');\n      newCall.ani = utils.getText(notif, 'ani');\n      newCall.dnis = utils.getText(notif, 'dnis');\n      newCall.callType = utils.getText(notif, 'call_type');\n      newCall.appUrl = utils.getText(notif, 'app_url');\n      newCall.isMonitoring = utils.getText(notif, 'is_monitoring');\n      newCall.allowHold = utils.getText(notif, 'allow_hold');\n      newCall.allowTransfer = utils.getText(notif, 'allow_transfer');\n      newCall.allowManualInternationalTransfer = utils.getText(\n        notif,\n        'allow_manual_international_transfer',\n      );\n      newCall.allowDirectAgentTransfer = utils.getText(\n        notif,\n        'allow_direct_agent_transfer',\n      );\n      newCall.allowHangup = utils.getText(notif, 'allow_hangup');\n      newCall.allowRequeue = utils.getText(notif, 'allow_requeue');\n      newCall.allowEndCallForEveryone = utils.getText(\n        notif,\n        'allow_endcallforeveryone',\n      );\n      newCall.scriptId = utils.getText(notif, 'script_id');\n      newCall.scriptVersion = utils.getText(notif, 'script_version');\n      newCall.surveyId = utils.getText(notif, 'survey_id');\n      newCall.surveyPopType = utils.getText(notif, 'survey_pop_type');\n      newCall.requeueType = utils.getText(notif, 'requeue_type');\n      newCall.hangupOnDisposition = utils.getText(\n        notif,\n        'hangup_on_disposition',\n      );\n\n      if (newCall.isMonitoring) {\n        newCall.monitoringType = utils.getText(notif, 'monitoring_type'); // FULL, COACHING, MONITOR\n      }\n\n      // set collection values\n      newCall.queue = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'gate',\n      )[0];\n      newCall.agentRecording = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'agent_recording',\n        'agentRecording',\n      )[0];\n      newCall.outdialDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'outdial_dispositions',\n        'disposition',\n      )[0];\n      newCall.requeueShortcuts =\n        utils.processResponseCollection(\n          notification,\n          'ui_notification',\n          'requeue_shortcuts',\n          'requeueShortcut',\n        )[0] || [];\n      newCall.baggage = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'baggage',\n      )[0];\n      newCall.surveyResponse = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'survey_response',\n        'detail',\n      )[0];\n      newCall.scriptResponse = {};\n      newCall.transferPhoneBook = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transfer_phone_book',\n      )[0];\n      newCall.lead = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'lead',\n      )[0];\n\n      // parse extra data correctly\n      try {\n        if (notif.lead && notif.lead.extra_data) {\n          delete newCall.lead.extraDatas;\n          newCall.lead.extraData = {};\n          for (var key in notif.lead.extra_data) {\n            newCall.lead.extraData[key] = notif.lead.extra_data[key]['#text'];\n          }\n        }\n      } catch (e) {\n        console.warn('error parsing new call lead extra data: ' + e);\n      }\n\n      if (newCall.baggage) {\n        // process custom labels correctly\n        newCall.baggage.customLabels = {};\n        var notifLabels = notif.baggage['custom_labels'];\n        for (var key in notifLabels) {\n          var result = '';\n          if (notifLabels && notifLabels[key] && notifLabels[key]['#text']) {\n            result = notifLabels[key]['#text'];\n          }\n\n          newCall.baggage.customLabels[key] = result;\n        }\n      }\n\n      // set saved script response if present\n      try {\n        var savedModel = JSON.parse(notif.script_result['#text']).model;\n        var results = {};\n        var keys = Object.keys(savedModel);\n        for (var idx = 0; idx < keys.length; idx++) {\n          var key = keys[idx];\n          var value = savedModel[key].value;\n          results[key] = value;\n        }\n        newCall.scriptResponse = results;\n      } catch (err) {}\n\n      // fix phonebook format\n      if (newCall.transferPhoneBook && newCall.transferPhoneBook.entrys) {\n        newCall.transferPhoneBook = newCall.transferPhoneBook.entrys;\n      }\n\n      // fix requeue shortcuts\n      if (\n        newCall.requeueShortcuts &&\n        newCall.requeueShortcuts.requeueShortcuts\n      ) {\n        newCall.requeueShortcuts = newCall.requeueShortcuts.requeueShortcuts;\n      }\n\n      // if only one disposition, convert to array\n      if (\n        newCall.outdialDispositions &&\n        newCall.outdialDispositions.disposition\n      ) {\n        newCall.outdialDispositions.dispositions = [\n          newCall.outdialDispositions,\n        ];\n      }\n\n      // convert numbers to boolean where applicable\n      newCall.queue.isCampaign = newCall.queue.isCampaign === '1';\n      if (\n        newCall.outdialDispositions &&\n        newCall.outdialDispositions.dispositions\n      ) {\n        for (\n          var d = 0;\n          d < newCall.outdialDispositions.dispositions.length;\n          d++\n        ) {\n          var disp = newCall.outdialDispositions.dispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.requireNote = disp.requireNote === '1';\n          disp.saveSurvey = disp.saveSurvey === '1';\n          disp.xfer = disp.xfer === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // Build token map\n      model.callTokens = buildCallTokenMap(notif, newCall);\n      newCall.baggage = model.callTokens; // add all tokens to baggage\n\n      // Is Monitoring Call?\n      if (newCall.isMonitoring) {\n        model.agentSettings.callState = 'ACTIVE-MONITORING';\n      } else {\n        model.agentSettings.callState = 'ACTIVE';\n\n        // check for preloaded transfer number\n        if (newCall.baggage && newCall.baggage.auxPhone != '') {\n          model.transferNumber = newCall.baggage.auxPhone;\n        }\n      }\n\n      // Reset the current call counter for Agent Daily Stats\n      model.agentDailyStats.currCallTime = 0;\n\n      // todo handle scripting??\n\n      model.currentCall = newCall;\n\n      return newCall;\n    };\n\n    function buildCallTokenMap(notif, newCall) {\n      var model = UIModel.getInstance();\n      var tokens = newCall.baggage || {}; // seed with baggage values\n      if (notif.baggage && notif.baggage.generic_key_value_pairs) {\n        var keyValuePairs = [];\n        var keyValuePairsStr = utils.getText(\n          notif.baggage,\n          'generic_key_value_pairs',\n        );\n        if (keyValuePairsStr.length > 0) {\n          keyValuePairs = utils.parseKeyValuePairsFromString(\n            keyValuePairsStr,\n            '|',\n            '::',\n          );\n        }\n\n        for (var keyValue in keyValuePairs) {\n          tokens[keyValue] = keyValuePairs[keyValue];\n        }\n      }\n\n      tokens['ani'] = newCall.ani;\n      tokens['dnis'] = newCall.dnis;\n      tokens['uii'] = newCall.uii;\n\n      try {\n        if (newCall.queue.number) {\n          tokens['sourceId'] = newCall.queue.number || '';\n          tokens['sourceName'] = newCall.queue.name || '';\n          tokens['sourceDesc'] = newCall.queue.description || '';\n\n          if (\n            newCall.queue.isCampaign === '1' ||\n            newCall.queue.isCampaign === true\n          ) {\n            tokens['sourceType'] = 'OUTBOUND';\n          } else {\n            tokens['sourceType'] = 'INBOUND';\n          }\n        } else {\n          tokens['sourceId'] = '0';\n          tokens['sourceType'] = 'MANUAL';\n          tokens['sourceName'] = '';\n          tokens['sourceDesc'] = '';\n        }\n      } catch (any) {\n        console.error(\n          'There was an error processing source tokenization',\n          +any,\n        );\n      }\n\n      try {\n        tokens['agentFirstName'] = model.agentSettings.firstName;\n        tokens['agentLastName'] = model.agentSettings.lastName;\n        tokens['agentExternalId'] = model.agentSettings.externalAgentId;\n        tokens['agentType'] = model.agentSettings.agentType;\n        tokens['agentEmail'] = model.agentSettings.email;\n        tokens['agentUserName'] = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    function isCampaign(gate) {\n      if (gate && gate.isCampaign) {\n        return gate.isCampaign === '1' || gate.isCampaign === true;\n      }\n      return false;\n    }\n\n    var PendingChatDispNotification = function () {};\n\n    /*\n     * This class is responsible for handling a pending chat disposition notification\n     *\n     *  {\n     *       \"ui_notification\":{\n     *           \"@message_id\":\"IQD01DEV2018062912352800014\",\n     *           \"@type\":\"PENDING_CHAT_DISP\",\n     *           \"agent_id\":{ \"#text\":\"1182160\" },\n     *           \"uii\":{ \"#text\":\"201806291234550147950000000000\" },\n     *           \"status\":{ \"#text\":\"false\" }\n     *       }\n     *   }\n     */\n    PendingChatDispNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.message = 'Received PENDING-CHAT-DISP notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.agentId = utils.getText(\n        notification.ui_notification,\n        'agent_id',\n      );\n      formattedResponse.uii = utils.getText(\n        notification.ui_notification,\n        'uii',\n      );\n      formattedResponse.status =\n        utils.getText(notification.ui_notification, 'status') === 'true';\n\n      return formattedResponse;\n    };\n\n    var PendingDispNotification = function () {};\n\n    /*\n     * This class is responsible for handling a generic notification\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@type\":\"PENDING_DISP\",\n     *          \"agent_id\":{\"#text\":\"3\"},\n     *          \"status\":{\"#text\":\"false\"}\n     *      }\n     * }\n     */\n    PendingDispNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.message = 'Received PENDING-DISP notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.agentId = utils.getText(\n        notification.ui_notification,\n        'agent_id',\n      );\n      formattedResponse.status = utils.getText(\n        notification.ui_notification,\n        'status',\n      );\n\n      return formattedResponse;\n    };\n\n    var PreviewLeadStateNotification = function () {};\n\n    /*\n     * This class is responsible for processing the lead state packet\n     * received from intelliqueue. It will decide what type of leads are\n     * being processed, and depending on if the callback is true or false, it will\n     * call the appropriate form to update the lead state.\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@type\":\"PREVIEW-LEAD-STATE\",\n     *          \"@call_type\":\"MANUAL|PREVIEW\",\n     *          \"@message_id\":\"IQ10012016092715393600184\",\n     *          \"request_id\":{\"#text\":\"IQ10012016092715390900179\"},\n     *          \"lead_state\":{\"#text\":\"ANSWER\"},\n     *          \"callback\":{\"#text\":\"FALSE\"}\n     *      }\n     *   }\n     * }\n     */\n    PreviewLeadStateNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      UIModel.getInstance().agentSettings.onManualOutdial = true;\n\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.callType = notif['@call_type'];\n      formattedResponse.messageId = notif['@message_id'];\n      formattedResponse.requestId = utils.getText(notif, 'request_id');\n      formattedResponse.leadState = utils.getText(notif, 'lead_state');\n      formattedResponse.callback = utils.getText(notif, 'callback');\n\n      return formattedResponse;\n    };\n\n    var ReverseMatchNotification = function () {};\n\n    /*\n     * This class is responsible for processing a REVERSE_MATCH packet from IQ. It\n     * will log the packet was rec'd, save the packet to the UIModel for use by\n     * components like the WhosCallingForm\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@response_to\":\"1c2fe39f-a31e-aff8-8d23-92a61c88270f\",\n     *          \"@type\":\"REVERSE_MATCH\",\n     *          \"first_name\":{\"#text\":\"\"},\n     *          \"mid_name\":{\"#text\":\"\"},\n     *          \"last_name\":{\"#text\":\"\"},\n     *          \"address1\":{\"#text\":\"\"},\n     *          \"address2\":{\"#text\":\"\"},\n     *          \"city\":{\"#text\":\"\"},\n     *          \"state\":{\"#text\":\"\"},\n     *          \"zip\":{\"#text\":\"\"},\n     *          \"business_name\":{\"#text\":\"\"}\n     *      }\n     * }\n     */\n    ReverseMatchNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var model = UIModel.getInstance();\n\n      model.tokens['first_name'] = utils.getText(notif, 'first_name');\n      model.tokens['mid_name'] = utils.getText(notif, 'mid_name');\n      model.tokens['last_name'] = utils.getText(notif, 'last_name');\n      model.tokens['address1'] = utils.getText(notif, 'address1');\n      model.tokens['address2'] = utils.getText(notif, 'address2');\n      model.tokens['suffix'] = utils.getText(notif, 'suffix');\n      model.tokens['title'] = utils.getText(notif, 'title');\n      model.tokens['city'] = utils.getText(notif, 'city');\n      model.tokens['state'] = utils.getText(notif, 'state');\n      model.tokens['zip'] = utils.getText(notif, 'zip');\n      model.tokens['business_name'] = utils.getText(notif, 'business_name');\n\n      return model.tokens;\n    };\n\n    var TcpaSafeLeadStateNotification = function () {};\n\n    /*\n     * This class is responsible for processing the lead state packet\n     * received from intelliqueue. It will decide what type of leads are\n     * being processed, and depending on if the callback is true or false, it will\n     * call the appropriate form to update the lead state.\n     *\n     * {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016080317400400011\",\n     *          \"@type\":\"TCPA-SAFE-LEAD-STATE\",\n     *          \"@call_type\":\"MANUAL|TCPA-SAFE\",\n     *          \"request_id\":{\"#text\":\"\"},\n     *          \"lead_state\":{\"#text\":\"CALLING\"},\n     *          \"callback\":{\"#text\":\"false\"}\n     *      }\n     * }\n     */\n    TcpaSafeLeadStateNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification);\n      formattedResponse.callType = notif['@call_type'];\n      formattedResponse.messageId = notif['@message_id'];\n      formattedResponse.requestId = utils.getText(notif, 'request_id');\n      formattedResponse.leadState = utils.getText(notif, 'lead_state');\n      formattedResponse.callback = utils.getText(notif, 'callback');\n\n      return formattedResponse;\n    };\n\n    var AckRequest = function (audioType, agentId, uii, monitorAgentId) {\n      this.audioType = audioType || 'FULL';\n      this.agentId = agentId;\n      this.uii = uii;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * This class processes ACK packets rec'd from IQ.\n     * This is a callback triggered by certain actions like\n     * sending dispositions or script results.\n     * NOTE: uii is added in utils message processing.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008090317393001252\",\n     *      \"@response_to\":\"1112222\",\n     *      \"@type\":\"ACK\",\n     *      \"type\":{\"#text\":\"CHAT-DISPOSITION|INBOUND-DISPOSITION|OUTDIAL-DISPOSITION|SCRIPT-RESULT\"},\n     *      \"status\":{\"#text\":\"OK|FAILURE\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    AckRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.type = utils.getText(resp, 'type');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(LOG_LEVELS.DEBUG, formattedResponse.message, response);\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          formattedResponse.message + ': ' + formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var AgentStateRequest = function (agentState, agentAuxState) {\n      if (\n        agentState.toUpperCase() == 'ON-BREAK' &&\n        UIModel.getInstance().onCall == true\n      ) {\n        this.agentState = 'BREAK-AFTER-CALL';\n        this.agentAuxState = '';\n      } else {\n        this.agentState = agentState.toUpperCase() || '';\n        this.agentAuxState = agentAuxState || '';\n      }\n    };\n\n    AgentStateRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.AGENT_STATE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          state: {\n            '#text': this.agentState,\n          },\n          agent_aux_state: {\n            '#text': this.agentAuxState,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes AGENT-STATE packets rec'd from IQ. It will check the state of the\n     * packet and then set the state on the model. It will also check for deferred surveys,\n     * if one is found it will load it at this point.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"AGENT-STATE\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"prev_state\":{\"#text\":\"ENGAGED\"},\n     *      \"current_state\":{\"#text\":\"WORKING\"},\n     *      \"agent_aux_state\":{\"#text\":\"Offhook Work\"},\n     *      \"prev_aux_state\":{}\n     *   }\n     * }\n     */\n    AgentStateRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var prevState = utils.getText(resp, 'prev_state');\n      var currState = utils.getText(resp, 'current_state');\n      var prevAuxState = utils.getText(resp, 'prev_aux_state');\n      var currAuxState = utils.getText(resp, 'agent_aux_state');\n      var model = UIModel.getInstance();\n\n      // add message and detail if present\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = response.ui_response.agent_id['#text'] || '';\n      formattedResponse.previousState = prevState;\n      formattedResponse.currentState = currState;\n      formattedResponse.previousAuxState = prevAuxState;\n      formattedResponse.currentAuxState = currAuxState;\n\n      if (status == 'OK') {\n        var prevStateStr = prevState;\n        var currStateStr = currState;\n\n        if (prevAuxState.length > 0) {\n          prevStateStr = prevAuxState;\n        }\n\n        if (currAuxState.length > 0) {\n          currStateStr = currAuxState;\n        }\n\n        // Update the state in the UIModel\n        model.agentSettings.currentState = currState;\n        model.agentSettings.currentStateLabel = currAuxState;\n        model.agentStatePacket = response;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to change agent state';\n        }\n\n        // log message response\n        var message =\n          'Unable to change agent state. ' + formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var AuthenticateRequest = function (config) {\n      this.username = config.username;\n      this.password = config.password;\n      this.platformId = config.platformId;\n      this.rcAccessToken = config.rcAccessToken;\n      this.tokenType = config.tokenType;\n      this.engageAccessToken = config.engageAccessToken;\n      this.authType = config.authType;\n    };\n\n    AuthenticateRequest.prototype.sendHttpRequest = function () {\n      UIModel.getInstance().authenticateRequest = this;\n      switch (this.authType) {\n        case AUTHENTICATE_TYPES.USERNAME_PASSWORD:\n          _buildHttpRequest(this.authType, 'login/agent', {\n            username: this.username,\n            password: this.password,\n            platformId: this.platformId,\n          });\n          break;\n        case AUTHENTICATE_TYPES.RC_TOKEN:\n          _buildHttpRequest(this.authType, 'login/rc/accesstoken', {\n            rcAccessToken: this.rcAccessToken,\n            rcTokenType: this.tokenType,\n          });\n          break;\n        case AUTHENTICATE_TYPES.ENGAGE_TOKEN:\n          _buildHttpRequest(this.authType, 'login', {});\n          break;\n      }\n    };\n\n    /*\n     * response:\n     * {\n     *   \"refreshToken\": \"223867e6-ad0f-4af1-bbe7-5090d8259065\",\n     *   \"accessToken\": \"\",\n     *   \"tokenType\": \"Bearer\",\n     *   \"platformId\": \"local\",\n     *   \"iqUrl\": \"d01-dev.vacd.biz\",\n     *   \"port\": 8080,\n     *   \"agentDetails\": [\n     *       {\n     *           \"agentId\": 1,\n     *           \"firstName\": \"D\",\n     *           \"lastName\": \"LB\",\n     *           \"email\": \"dlb@somewhere.com\",\n     *           \"username\": \"dlbooks\"\n     *       }\n     *   ],\n     *   \"adminId\": null,\n     *   \"mainAccountId\": \"99990000\"\n     * }\n     */\n    AuthenticateRequest.prototype.processResponse = function (response) {\n      var model = UIModel.getInstance();\n      model.authenticatePacket = response; // raw response packet\n      model.authenticateRequest.accessToken = response.accessToken; // TODO - dlb - store in local storage\n      model.authenticateRequest.refreshToken = response.refreshToken;\n      model.authenticateRequest.tokenType = response.tokenType;\n      model.authenticateRequest.socketUrl = response.iqUrl;\n      model.authenticateRequest.socketPort = response.port;\n      model.authenticateRequest.agents = response.agentDetails;\n      model.authenticateRequest.platformId = response.platformId;\n      model.authenticateRequest.mainAccountId = response.mainAccountId;\n\n      return model.authenticateRequest;\n    };\n\n    function _buildHttpRequest(authType, path, queryParams) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseAuthUri;\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      switch (authType) {\n        case AUTHENTICATE_TYPES.USERNAME_PASSWORD:\n        case AUTHENTICATE_TYPES.RC_TOKEN:\n          params['queryParams'] = queryParams;\n          var errorMsg =\n            'Error on agent authenticate POST to engage-auth. URL: ' +\n            baseUrl +\n            path;\n          new HttpService(baseUrl).httpPost(path, params).then(\n            function (response) {\n              try {\n                response = JSON.parse(response.response);\n\n                var authenticateResponse = UIModel.getInstance().authenticateRequest.processResponse(\n                  response,\n                );\n                utils.fireCallback(\n                  UIModel.getInstance().libraryInstance,\n                  CALLBACK_TYPES.AUTHENTICATE,\n                  authenticateResponse,\n                );\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              }\n            },\n            function (err) {\n              var errResponse = {\n                type: 'Authenticate Error',\n                message: errorMsg,\n                err: err,\n              };\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              utils.fireCallback(\n                UIModel.getInstance().libraryInstance,\n                CALLBACK_TYPES.AUTHENTICATE,\n                errResponse,\n              );\n            },\n          );\n          break;\n        case AUTHENTICATE_TYPES.ENGAGE_TOKEN:\n          var errMsg =\n            'Error on agent authenticate GET to engage-auth. URL: ' +\n            baseUrl +\n            path;\n          params.headers['Authorization'] =\n            'Bearer ' +\n            utils.toString(\n              UIModel.getInstance().authenticateRequest.engageAccessToken,\n            );\n          new HttpService(baseUrl).httpGet(path, params).then(\n            function (response) {\n              try {\n                response = JSON.parse(response.response);\n\n                var authenticateResponse = UIModel.getInstance().authenticateRequest.processResponse(\n                  response,\n                );\n                utils.fireCallback(\n                  UIModel.getInstance().libraryInstance,\n                  CALLBACK_TYPES.AUTHENTICATE,\n                  authenticateResponse,\n                );\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errMsg, err);\n              }\n            },\n            function (err) {\n              utils.logMessage(LOG_LEVELS.WARN, errMsg, err);\n              utils.fireCallback(\n                UIModel.getInstance().libraryInstance,\n                CALLBACK_TYPES.AUTHENTICATE,\n                err,\n              );\n            },\n          );\n          break;\n      }\n    }\n\n    var BargeInRequest = function (audioType, agentId, uii, monitorAgentId) {\n      this.audioType = audioType || 'FULL';\n      this.agentId = agentId;\n      this.uii = uii;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UIV22008931055822\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"BARGE-IN\",\n     *      \"agent_id\":{\"#text\":\"94\"},\n     *      \"uii\":{\"#text\":\"200809031054510000000900020961\"},\n     *      \"audio_state\":{\"#text\":\"FULL\"},\n     *      \"monitor_agent_id\":{\"#text\":\"1856\"}\n     *    }\n     * }\n     */\n    BargeInRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.BARGE_IN,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          audio_state: {\n            '#text': utils.toString(this.audioType),\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes BARGE-IN packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008090317393001252\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"BARGE-IN\",\n     *      \"agent_id\":{\"#text\":\"94\"},\n     *      \"uii\":{},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{\"#text\":\"Barge-In processed successfully!\"},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    BargeInRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(LOG_LEVELS.DEBUG, formattedResponse.message, response);\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'There was an error processing the Barge-In request. ' +\n            formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var CallNotesRequest = function (notes) {\n      this.notes = notes;\n    };\n\n    /*\n     * This event is responsible for allowing an agent to tag a call with notes\n     */\n    CallNotesRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.CALL_NOTES,\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class process CALL-NOTES packets rec'd from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"CALL-NOTES\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{}\n     *   }\n     * }\n     */\n    CallNotesRequest.prototype.processResponse = function (response) {\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (formattedResponse.status === 'OK') {\n        formattedResponse.message = 'Call notes have been updated.';\n        formattedResponse.type = 'INFO_EVENT';\n      } else {\n        formattedResponse.type = 'ERROR_EVENT';\n        formattedResponse.message = 'Unable to update notes.';\n      }\n\n      return formattedResponse;\n    };\n\n    var CallbackCancelRequest = function (leadId, agentId) {\n      this.agentId = agentId || UIModel.getInstance().agentSettings.agentId;\n      this.leadId = leadId;\n    };\n\n    CallbackCancelRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CALLBACK_CANCEL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          lead_id: {\n            '#text': this.leadId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    // NOTE: cancel callback response sent as a generic notification message\n\n    var CallbacksPendingRequest = function (agentId) {\n      this.agentId = agentId || UIModel.getInstance().agentSettings.agentId;\n    };\n\n    CallbacksPendingRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CALLBACK_PENDING,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling an PENDING-CALLBACKS response packet from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"PENDING-CALLBACKS\",\n     *      \"lead\":{\n     *          \"@aux_data1\":\"\",\n     *          \"@aux_data2\":\"\",\n     *          \"@aux_data3\":\"\",\n     *          \"@aux_data4\":\"\",\n     *          \"@aux_data5\":\"\",\n     *          \"@destination\":\"5555555555\",\n     *          \"@dial_group_id\":\"\",\n     *          \"@dial_group_name\":\"\",\n     *          \"@dial_time\":\"2016-08-03 10:00\",\n     *          \"@extern_id\":\"\",\n     *          \"@lead_id\":\"\",\n     *          \"lead_id\":{},\n     *          \"extern_id\":{},\n     *          \"extern_id\":{},\n     *          \"first_name\":{},\n     *          \"mid_name\":{},\n     *          \"last_name\":{},\n     *          \"suffix\":{},\n     *          \"title\":{},\n     *          \"address1\":{},\n     *          \"address2\":{},\n     *          \"city\":{},\n     *          \"state\":{},\n     *          \"zip\":{},\n     *          \"gate_keeper\":{}\n     *      }\n     *   }\n     * }\n     */\n    CallbacksPendingRequest.prototype.processResponse = function (response) {\n      var leadsRaw = response.ui_response.lead;\n      var leads = [];\n      if (!Array.isArray(leadsRaw)) {\n        leadsRaw = [leadsRaw];\n      }\n\n      for (var l = 0; l < leadsRaw.length; l++) {\n        var leadRaw = leadsRaw[l];\n        if (leadRaw == null) {\n          continue;\n        }\n\n        leads.push(parseLead(leadRaw));\n      }\n\n      UIModel.getInstance().agentSettings.pendingCallbacks = JSON.parse(\n        JSON.stringify(leads),\n      );\n\n      return UIModel.getInstance().agentSettings.pendingCallbacks;\n    };\n\n    function parseLead(leadRaw) {\n      var lead = {\n        auxData1: leadRaw['@aux_data1'],\n        auxData2: leadRaw['@aux_data2'],\n        auxData3: leadRaw['@aux_data3'],\n        auxData4: leadRaw['@aux_data4'],\n        auxData5: leadRaw['@aux_data5'],\n        destination: leadRaw['@destination'],\n        dialGroupId: leadRaw['@dial_group_id'],\n        dialGroupName: leadRaw['@dial_group_name'],\n        dialTime: leadRaw['@dial_time'],\n        externId: leadRaw['@extern_id'],\n        leadId: leadRaw['@lead_id'],\n        firstName: utils.getText(leadRaw, 'first_name'),\n        midName: utils.getText(leadRaw, 'mid_name'),\n        lastName: utils.getText(leadRaw, 'last_name'),\n        sufix: utils.getText(leadRaw, 'suffix'),\n        title: utils.getText(leadRaw, 'title'),\n        address1: utils.getText(leadRaw, 'address1'),\n        address2: utils.getText(leadRaw, 'address2'),\n        city: utils.getText(leadRaw, 'city'),\n        state: utils.getText(leadRaw, 'state'),\n        zip: utils.getText(leadRaw, 'zip'),\n        gateKeeper: utils.getText(leadRaw, 'gate_keeper'),\n      };\n\n      return lead;\n    }\n\n    /*\n     * This request is used to get the list of dispositions for a given campaign\n     * E.g. in the lead search form for manual passes\n     *\n     */\n    var CampaignDispositionsRequest = function (campaignId) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.campaignId = campaignId;\n    };\n\n    CampaignDispositionsRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CAMPAIGN_DISPOSITIONS,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          campaign_id: {\n            '#text': utils.toString(this.campaignId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling CAMPAIGN-DISPOSITIONS packets received\n     * from IntelliQueue. It will save a copy of it in the UIModel.\n     *\n     * {\"ui_response\":{\n     *      \"@campaign_id\":\"60403\",\n     *      \"@message_id\":\"IQ10012016081813480400006\",\n     *      \"@response_to\":\"0b61c3ca-c4fc-9942-c139-da4978053c9d\",\n     *      \"@type\":\"CAMPAIGN-DISPOSITIONS\",\n     *      \"outdial_dispositions\":{\n     *          \"disposition\":[\n     *              {\"@disposition_id\":\"1\",\"#text\":\"requeue\"},\n     *              {\"@disposition_id\":\"2\",\"#text\":\"complete\"}\n     *          ]\n     *       }\n     *    }\n     * }\n     */\n    CampaignDispositionsRequest.prototype.processResponse = function (\n      response,\n    ) {\n      var resp = response.ui_response;\n      var model = UIModel.getInstance();\n      var dispositions = utils.processResponseCollection(\n        resp,\n        'outdial_dispositions',\n        'disposition',\n        'disposition',\n      );\n\n      model.outboundSettings.campaignDispositions = dispositions;\n      return dispositions;\n    };\n\n    var ChatStateRequest = function (chatState) {\n      this.chatState = (chatState && chatState.toUpperCase()) || '';\n    };\n\n    ChatStateRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_STATE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          state: {\n            '#text': this.chatState,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes CHAT-STATE packets rec'd from IQ. It will check the state of the\n     * packet and then set the state on the model.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@type\":\"AGENT-STATE\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"prev_state\":{\"#text\":\"CHAT-PRESENTED\"},\n     *      \"current_state\":{\"#text\":\"CHAT-ENGAGED\"}\n     *   }\n     * }\n     */\n    ChatStateRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var prevState = utils.getText(resp, 'prev_state');\n      var currState = utils.getText(resp, 'current_state');\n      var model = UIModel.getInstance();\n\n      // add message and detail if present\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = response.ui_response.agent_id['#text'] || '';\n      formattedResponse.previousState = prevState;\n      formattedResponse.currentState = currState;\n\n      if (status == 'OK') {\n        // Update the state in the UIModel\n        model.agentSettings.currentChatState = currState;\n        model.chatStatePacket = response;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to change chat state';\n        }\n\n        // log message response\n        var message =\n          'Unable to change chat state. ' + formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var XferColdRequest = function (dialDest, callerId, sipHeaders, countryId) {\n      this.dialDest = dialDest;\n      this.callerId = callerId || '';\n      this.sipHeaders = sipHeaders || [];\n      this.countryId = countryId || '';\n    };\n\n    XferColdRequest.prototype.formatJSON = function () {\n      var fields = [];\n      for (var i = 0; i < this.sipHeaders.length; i++) {\n        var fieldObj = this.sipHeaders[i];\n        fields.push({\n          '@name': utils.toString(fieldObj.name),\n          '@value': utils.toString(fieldObj.value),\n        });\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_COLD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          xfer_header: fields,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes COLD-XFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"COLD-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231447590139000000000200\"},\n     *      \"session_id\":{\"#text\":\"3\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"OK\"},\n     *      \"detail\":{}\n     *   }\n     * }\n     */\n    XferColdRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.dialDest = utils.getText(resp, 'dial_dest');\n\n      if (formattedResponse.status === 'OK') {\n      } else {\n        // log message response\n        var message =\n          'There was an error processing the Cold Xfer request. ' +\n          formattedResponse.message +\n          ' : ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var DirectAgentTransfer = function (targetAgentId, transferType, uii) {\n      this.targetAgentId = targetAgentId;\n      this.transferType = transferType;\n      this.uii = uii || UIModel.getInstance().currentCall.uii;\n    };\n\n    DirectAgentTransfer.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.DIRECT_AGENT_TRANSFER,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          target_agent_id: {\n            '#text': utils.toString(this.targetAgentId),\n          },\n          transfer_type: {\n            '#text': utils.toString(this.transferType),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes DIRECT-AGENT-TRANSFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"DIRECT-AGENT-TRANSFER\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{\"#text\":\"OK\"},\n     *      \"type\":{\"#text\":\"WARM|COLD|CANCEL\"}\n     *   }\n     * }\n     */\n    DirectAgentTransfer.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.type = utils.getText(resp, 'type');\n\n      if (formattedResponse.status !== 'OK') {\n        // log message response\n        var message =\n          'There was an error processing the Direct Agent Transfer request. ' +\n          formattedResponse.message +\n          ' : ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var DirectAgentTransferList = function () {};\n\n    DirectAgentTransferList.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes DIRECT-AGENT-TRANSFER-LIST packets rec'd from IQ.\n     *\n     *  {\n     *      \"ui_response\":{\n     *          \"@message_id\":\"IQD01DEV2018052917202600038\",\n     *          \"@response_to\":\"f0b2e8a3-87fe-13ee-4d00-9d145bfe2be8\",\n     *          \"@type\":\"DIRECT-AGENT-TRANSFER-LIST\",\n     *          \"status\":{\n     *              \"#text\":\"true\"\n     *          },\n     *          \"message\":{\n     *              \"#text\":\"OK\"\n     *          },\n     *          \"agents\": [\n     *             {\n     *                 \"@agent_aux_state\":\"AVAILABLE\",\n     *                 \"@agent_id\":\"1184160\",\n     *                 \"@agent_state\":\"AVAILABLE\",\n     *                 \"@available\":\"true\",\n     *                 \"@first_name\":\"ross\",\n     *                 \"@last_name\":\"m\",\n     *                 \"@pending_disp\":\"false\",\n     *                 \"@state_duration\":\"379\",\n     *                 \"@username\":\"rm1\"\n     *             },\n     *             {\n     *                 \"@agent_aux_state\":\"AVAILABLE\",\n     *                 \"@agent_id\":\"1184161\",\n     *                 \"@agent_state\":\"AVAILABLE\",\n     *                 \"@available\":\"true\",\n     *                 \"@first_name\":\"ross\",\n     *                 \"@last_name\":\"m\",\n     *                 \"@pending_disp\":\"false\",\n     *                 \"@state_duration\":\"84\",\n     *                 \"@username\":\"rm2\"\n     *             }\n     *         ]\n     *      }\n     *  }\n     */\n    DirectAgentTransferList.prototype.processResponse = function (response) {\n      var formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.agents = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'agents',\n      );\n\n      if (formattedResponse.status !== 'OK') {\n        // log message response\n        var message =\n          'There was an error processing the Direct Agent Transfer List request. ' +\n          formattedResponse.message +\n          ' : ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var DispositionRequest = function (\n      uii,\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      contactForwardNumber,\n      survey,\n      externId,\n      leadId,\n      requestId,\n    ) {\n      this.uii = uii;\n      this.dispId = dispId;\n      this.notes = notes;\n      this.callback = callback;\n      this.callbackDTS = callbackDTS || '';\n      this.contactForwardNumber = contactForwardNumber || null;\n      this.externId = externId || null; // outbound-disposition only\n      this.leadId = leadId || null; // outbound-disposition only\n      this.requestId = requestId || null; // outbound-disposition only (pipe leads)\n\n      /*\n       * survey = {\n       *      first_name: {\n       *          leadField: \"first_name\"\n       *          value: \"Geoff\"\n       *      },\n       *      last_name: {\n       *          leadField: \"last_name\"\n       *          value: \"Mina\"\n       *      }\n       *      ...\n       * }\n       */\n      this.survey = survey || null;\n    };\n\n    /*\n     * This class is responsible for creating an inbound or outbound disposition packet to\n     * send to intelliqueue. It will grab uii and agent_id directly from packets saved\n     * in the UIModel. Then, using the information passed in, it will\n     * create the remainder of the packet. This class is called from the ExtendedCallForm\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"IQ20160817145840132\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OUTDIAL-DISPOSITION|INBOUND-DISPOSITION\",\n     *      \"session_id\":{\"#text\":\"2\"},  <-- ONLY WHEN AVAILABLE otherwise the node is left blank. this is the AGENT session_id\n     *      \"uii\":{\"#text\":\"201608171658440139000000000165\"},\n     *      \"agent_id\":{\"#text\":\"1180958\"},\n     *      \"lead_id\":{\"#text\":\"1800\"},                 <-- OUTDIAL-DISPOSITION ONLY\n     *      \"outbound_externid\":{\"#text\":\"3038593775\"}, <-- OUTDIAL-DISPOSITION ONLY\n     *      \"pending_request_id\":{\"#text\":\"\"},          <-- OUTDIAL-DISPOSITION ONLY\n     *      \"disposition_id\":{\"#text\":\"5950\"},\n     *      \"notes\":{\"#text\":\"note here\"},\n     *      \"call_back\":{\"#text\":\"FALSE\"},\n     *      \"call_back_DTS\":{},\n     *      \"contact_forwarding\":{},\n     *      \"survey\":{\n     *          \"response\":[\n     *              {\"@extern_id\":\"text_box\",\"@lead_update_column\":\"\",\"#text\":\"hello\"},\n     *              {\"@extern_id\":\"check_box\",\"@lead_update_column\":\"\",\"#text\":\"20\"},\n     *              {\"@extern_id\":\"radio_save\",\"@lead_update_column\":\"\",\"#text\":\"23\"}\n     *          ]\n     *      }\n     *   }\n     * }\n     */\n    DispositionRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          '@type': MESSAGE_TYPES.OUTDIAL_DISPOSITION,\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          session_id: {\n            '#text': '',\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          call_back: {\n            '#text': this.callback === true ? 'TRUE' : 'FALSE',\n          },\n          call_back_DTS: {\n            '#text': utils.toString(this.callbackDTS),\n          },\n          contact_forwarding: {\n            '#text': utils.toString(this.contactForwardNumber),\n          },\n          outbound_externid: {\n            '#text': utils.toString(this.externId),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n        },\n      };\n\n      if (\n        model.currentCall.outdialDispositions &&\n        model.currentCall.outdialDispositions.type === 'GATE'\n      ) {\n        msg.ui_request['@type'] = MESSAGE_TYPES.INBOUND_DISPOSITION;\n      }\n\n      if (model.currentCall.sessionId) {\n        msg.ui_request.session_id = { '#text': model.currentCall.sessionId };\n      }\n\n      /*\n       * converts survey to this response\n       * survey : {\n       *      response: [\n       *          { \"@extern_id\":\"\", \"@lead_update_column\":\"\", \"#text\":\"\" }\n       *      ]\n       * }\n       */\n      if (this.survey !== null) {\n        var response = [];\n        var keys = Object.keys(this.survey);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var obj = {\n            '@extern_id': key,\n            '@lead_update_column': utils.toString(this.survey[key].leadField),\n            '#text': utils.toString(this.survey[key].value),\n          };\n          response.push(obj);\n        }\n        msg.ui_request.survey = { response: response };\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    var DispositionManualPassRequest = function (\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      leadId,\n      requestId,\n      externId,\n    ) {\n      this.dispId = dispId;\n      this.notes = notes;\n      this.callback = callback;\n      this.callbackDTS = callbackDTS || '';\n      this.leadId = leadId || null;\n      this.requestId = requestId || null;\n      this.externId = externId || null;\n    };\n\n    /*\n     * Sends an OUTDIAL-DISPOSITION request, just a separate class\n     * specifically for dispositions on manual pass.\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"UIV220089241119416\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OUTDIAL-DISPOSITION\",\n     *      \"manual_disp\":{\"#text\":\"TRUE\"},\n     *      \"request_key\":{\"#text\":\"IQ10012016081719070100875\"},\n     *      \"session_id\":{},\n     *      \"uii\":{},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"lead_id\":{\"#text\":\"213215\"},\n     *      \"outbound_externid\":{\"#text\":\"909809\"},\n     *      \"disposition_id\":{\"#text\":\"126\"},\n     *      \"notes\":{\"#text\":\"here are my notes :)\"},\n     *      \"call_back\":{\"#text\":\"TRUE | FALSE\"},\n     *      \"call_back_DTS\":{\"#text\":\"2008-09-30 22:30:00 | null\"},\n     *      \"contact_forwarding\":{\"#text\":\"null\"}\n     *    }\n     * }\n     */\n    DispositionManualPassRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          '@type': MESSAGE_TYPES.OUTDIAL_DISPOSITION,\n          manual_disp: {\n            '#text': 'TRUE',\n          },\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          request_key: {\n            '#text': utils.toString(this.requestId),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          call_back: {\n            '#text': this.callback === true ? 'TRUE' : 'FALSE',\n          },\n          call_back_DTS: {\n            '#text': utils.toString(this.callbackDTS),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          extern_id: {\n            '#text': utils.toString(this.externId),\n          },\n          contact_forwarding: {\n            '#text': 'null',\n          },\n          session_id: {},\n          uii: {},\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ExtensionPresenceRequest = function () {};\n\n    ExtensionPresenceRequest.prototype.getExtensionPresenceInfo = function (\n      extensionIds,\n    ) {\n      UIModel.getInstance().ExtensionPresenceRequest = this;\n      _getExtensionPresenceInfo('rcdirectory/getExtensionPresenceStatus', {\n        extensionIds: extensionIds,\n      });\n    };\n\n    ExtensionPresenceRequest.prototype.processResponse = function (response) {\n      UIModel.getInstance().extensionPresenceResponse = response;\n      return UIModel.getInstance().extensionPresenceResponse;\n    };\n\n    function _getExtensionPresenceInfo(path, queryParams) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseApiUri;\n      var engageAccessToken =\n        'Bearer ' +\n        utils.toString(\n          UIModel.getInstance().authenticateRequest.engageAccessToken,\n        );\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      params.headers['Authorization'] = engageAccessToken;\n      params['queryParams'] = queryParams;\n      var errorMsg =\n        'Error while fetching extension presence response. URL: ' +\n        baseUrl +\n        path;\n\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function (response) {\n          try {\n            response = JSON.parse(response.response);\n            var extensionPresenceResponse = UIModel.getInstance().extensionPresenceRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.EXTENSION_PRESENCE,\n              extensionPresenceResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function (err) {\n          var errResponse = {\n            type: 'Error while fetching extension presence response.',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.EXTENSION_PRESENCE,\n            errResponse,\n          );\n        },\n      );\n    }\n\n    var HangupRequest = function (sessionId, resetPendingDisp) {\n      this.sessionId = sessionId || null;\n      this.resetPendingDisp = resetPendingDisp || false;\n    };\n\n    HangupRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.HANGUP,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(UIModel.getInstance().currentCall.uii),\n          },\n          session_id: {\n            '#text': utils.toString(\n              this.sessionId === null\n                ? UIModel.getInstance().currentCall.sessionId\n                : this.sessionId,\n            ),\n          },\n          cancel_pending_disp: {\n            '#text': this.resetPendingDisp === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var HoldRequest = function (holdState, sessionId) {\n      this.holdState = holdState;\n      this.sessionId = sessionId || '1';\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"HOLD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"1\"},\n     *      \"hold_state\":{\"#text\":\"ON\"}\n     *    }\n     * }\n     */\n    HoldRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.HOLD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n          hold_state: {\n            '#text':\n              this.holdState === true || this.holdState === 'true'\n                ? 'ON'\n                : 'OFF',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes HOLD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"HOLD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"session_id\":{\"#text\":\"1\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"hold_state\":{\"#text\":\"ON\"}\n     *    }\n     * }\n     */\n    HoldRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.holdState = utils.getText(resp, 'hold_state') === 'ON';\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message =\n              'Broadcasting new hold state of ' + formattedResponse.holdState;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Broadcasting new hold state of ' + formattedResponse.holdState,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Hold Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Error processing HOLD request. ' +\n            +formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail;\n        }\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'Error processing HOLD request. ' + formattedResponse.detail,\n          response,\n        );\n      }\n\n      var model = UIModel.getInstance();\n      if (\n        formattedResponse.sessionId !== '1' &&\n        model.transferSessions[formattedResponse.sessionId]\n      ) {\n        // we have a hold for a transfer session\n        model.transferSessions[formattedResponse.sessionId].onHold =\n          formattedResponse.holdState;\n      }\n\n      return formattedResponse;\n    };\n\n    var LeadHistoryRequest = function (leadId) {\n      this.leadId = leadId;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"lead_id\":{\"#text\":\"12\"},\n     *    }\n     * }\n     */\n    LeadHistoryRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_HISTORY,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.agentSettings.agentId),\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-HISTORY packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@lead_id\":\"2653\",\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"previous_dial\":{\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *      }\n     *   }\n     * }\n     *\n     * OR\n     *\n     * {\"ui_response\":{\n     *      \"@lead_id\":\"2653\",\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-HISTORY\",\n     *      \"previous_dial\":[\n     *        {\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *        },\n     *        {\n     *          \"@agent_name\":\"mandy pants (mandy)\",\n     *          \"@duration\":\"\",\n     *          \"@pass_disposition\":\"\",\n     *          \"@pass_dts\":\"2008-09-15 12:35:27\",\n     *          \"@pass_number\":\"\",\n     *          \"@pass_uii\":\"200809151234140000000900021288\",\n     *          \"agent_notes\":{\"#text\":\"This person was incredibly nice and agreed to buy donuts. \"},\n     *          \"agent_disposition\":{\"#text\":\"Incomplete\"}\n     *        }\n     *      ]\n     *   }\n     * }\n     */\n    LeadHistoryRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var histResponse = {\n        leadId: resp['@lead_id'],\n      };\n\n      var history = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'previous_dial',\n      );\n\n      // always return array, even if only one item\n      if (!Array.isArray(history)) {\n        history = [history];\n      }\n      histResponse.leadHistory = history;\n\n      return histResponse;\n    };\n\n    var LeadInsertRequest = function (dataObj) {\n      // handle boolean value conversion\n      if (dataObj.agent_reserved && dataObj.agent_reserved === true) {\n        dataObj.agent_reserved = '1';\n      } else {\n        dataObj.agent_reserved = '0';\n      }\n\n      if (dataObj.dialable && dataObj.dialable === true) {\n        dataObj.dialable = '1';\n      } else {\n        dataObj.dialable = '0';\n      }\n\n      this.dataObj = dataObj;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-INSERT\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"campaign_id\":{\"#text\":\"\"},\n     *      \"lead_phone\":{\"#text\":\"\"},\n     *      \"dialable\":{\"#text\":\"\"},\n     *      \"agent_reserved\":{\"#text\":\"\"},\n     *      \"callback_dts\":{\"#text\":\"\"},\n     *      \"first_name\":{\"#text\":\"\"},\n     *      \"mid_name\":{\"#text\":\"\"},\n     *      \"last_name\":{\"#text\":\"\"},\n     *      \"suffix\":{\"#text\":\"\"},\n     *      \"title\":{\"#text\":\"\"},\n     *      \"address1\":{\"#text\":\"\"},\n     *      \"address2\":{\"#text\":\"\"},\n     *      \"city\":{\"#text\":\"\"},\n     *      \"state\":{\"#text\":\"\"},\n     *      \"zip\":{\"#text\":\"\"},\n     *      \"email\":{\"#text\":\"\"},\n     *      \"gateKeeper\":{\"#text\":\"\"},\n     *      \"aux_data1\":{\"#text\":\"\"},\n     *      \"aux_data2\":{\"#text\":\"\"},\n     *      \"aux_data3\":{\"#text\":\"\"},\n     *      \"aux_data4\":{\"#text\":\"\"},\n     *      \"aux_data5\":{\"#text\":\"\"},\n     *    }\n     * }\n     */\n    LeadInsertRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_INSERT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.dataObj.agent_id),\n          },\n          campaign_id: {\n            '#text': utils.toString(this.dataObj.campaign_id),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.dataObj.lead_phone),\n          },\n          dialable: {\n            '#text': utils.toString(this.dataObj.dialable),\n          },\n          agent_reserved: {\n            '#text': utils.toString(this.dataObj.agent_reserved),\n          },\n          call_back_dts: {\n            '#text': utils.toString(this.dataObj.callback_dts),\n          },\n          first_name: {\n            '#text': utils.toString(this.dataObj.first_name),\n          },\n          mid_name: {\n            '#text': utils.toString(this.dataObj.mid_name),\n          },\n          last_name: {\n            '#text': utils.toString(this.dataObj.last_name),\n          },\n          suffix: {\n            '#text': utils.toString(this.dataObj.suffix),\n          },\n          title: {\n            '#text': utils.toString(this.dataObj.title),\n          },\n          address1: {\n            '#text': utils.toString(this.dataObj.address1),\n          },\n          address2: {\n            '#text': utils.toString(this.dataObj.address2),\n          },\n          city: {\n            '#text': utils.toString(this.dataObj.city),\n          },\n          state: {\n            '#text': utils.toString(this.dataObj.state),\n          },\n          zip: {\n            '#text': utils.toString(this.dataObj.zip),\n          },\n          email: {\n            '#text': utils.toString(this.dataObj.email),\n          },\n          gate_keeper: {\n            '#text': utils.toString(this.dataObj.gate_keeper),\n          },\n          aux_data1: {\n            '#text': utils.toString(this.dataObj.aux_data1),\n          },\n          aux_data2: {\n            '#text': utils.toString(this.dataObj.aux_data2),\n          },\n          aux_data3: {\n            '#text': utils.toString(this.dataObj.aux_data3),\n          },\n          aux_data4: {\n            '#text': utils.toString(this.dataObj.aux_data4),\n          },\n          aux_data5: {\n            '#text': utils.toString(this.dataObj.aux_data5),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-INSERT packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-INSERT\",\n     *      \"status\":{\"#text\":\"TRUE|FALSE\"},\n     *      \"msg\":{\"#text\":\"\"},\n     *      \"detail\":{\"#text\":\"\"},\n     *   }\n     * }\n     */\n    LeadInsertRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = resp.msg['#text'];\n\n      return formattedResponse;\n    };\n\n    var LeadUpdateRequest = function (leadId, leadPhone, baggage) {\n      this.leadId = leadId;\n      this.leadPhone = leadPhone;\n      this.baggage = baggage;\n      this.agentId = utils.toString(\n        UIModel.getInstance().agentSettings.agentId,\n      );\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"LEAD-UPDATE\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"lead_id\":{\"#text\":\"12\"},\n     *      \"lead_phone\":{\"#text\":\"12\"},\n     *       \"baggage\":{\n     *          \"lead_id\":{\"#text\":\"64306\"},\n     *          \"extern_id\":{\"#text\":\"9548298548\"},\n     *          \"first_name\":{\"#text\":\"Ryant\"},\n     *          \"mid_name\":{},\n     *          \"last_name\":{\"#text\":\"Taylor\"},\n     *          \"state\":{\"#text\":\"OH\"},\n     *          \"aux_data1\":{\"#text\":\"BMAK\"},\n     *          \"aux_data2\":{\"#text\":\"BMAK-041653-934\"},\n     *          \"aux_data3\":{\"#text\":\"Call Ctr 1\"},\n     *          \"aux_data4\":{},\n     *          \"aux_data5\":{},\n     *          \"address1\":{\"#text\":\"8010 Maryland Ave\"},\n     *          \"address2\":{},\n     *          \"city\":{\"#text\":\"Cleveland\"},\n     *          \"zip\":{\"#text\":\"44105\"},\n     *          \"aux_external_url\":{},\n     *          \"aux_greeting\":{},\n     *          \"aux_phone\":{}\n     *      },\n     *    }\n     * }\n     */\n    LeadUpdateRequest.prototype.formatJSON = function () {\n      // make sure required baggage fields are present\n      this.baggage = _formatBaggage(this.baggage);\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAD_UPDATE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          lead_id: {\n            '#text': utils.toString(this.leadId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          baggage: this.baggage,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes LEAD-UPDATE packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008091512353000875\",\n     *      \"@response_to\":\"UIV220089151235539\",\n     *      \"@type\":\"LEAD-UPDATE\",\n     *      \"status\":{\"#text\":\"TRUE|FALSE\"},\n     *      \"msg\":{\"#text\":\"64306\"},\n     *      \"detail\":{\"#text\":\"64306\"},\n     *   }\n     * }\n     */\n    LeadUpdateRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = resp.msg['#text'];\n\n      return formattedResponse;\n    };\n\n    var _formatBaggage = function (baggage) {\n      var bag = {};\n      bag.first_name = { '#text': baggage.first_name || '' };\n      bag.mid_name = { '#text': baggage.mid_name || '' };\n      bag.last_name = { '#text': baggage.last_name || '' };\n      bag.suffix = { '#text': baggage.suffix || '' };\n      bag.title = { '#text': baggage.title || '' };\n      bag.address1 = { '#text': baggage.address1 || '' };\n      bag.address2 = { '#text': baggage.address2 || '' };\n      bag.city = { '#text': baggage.city || '' };\n      bag.state = { '#text': baggage.state || '' };\n      bag.zip = { '#text': baggage.zip || '' };\n      bag.email = { '#text': baggage.email || '' };\n      bag.gate_keeper = { '#text': baggage.gate_keeper || '' };\n      bag.extern_id = { '#text': baggage.extern_id || '' };\n      bag.aux_data1 = { '#text': baggage.aux_data1 || '' };\n      bag.aux_data2 = { '#text': baggage.aux_data2 || '' };\n      bag.aux_data3 = { '#text': baggage.aux_data3 || '' };\n      bag.aux_data4 = { '#text': baggage.aux_data4 || '' };\n      bag.aux_data5 = { '#text': baggage.aux_data5 || '' };\n\n      return bag;\n    };\n\n    var LoginRequest = function (\n      dialDest,\n      queueIds,\n      chatIds,\n      skillProfileId,\n      dialGroupId,\n      updateFromAdminUI,\n      isForce,\n    ) {\n      this.queueIds = queueIds || [];\n      this.chatIds = chatIds || [];\n      this.skillProfileId = skillProfileId || '';\n      this.dialGroupId = dialGroupId || '';\n      this.dialDest = dialDest || '';\n      this.updateFromAdminUI = updateFromAdminUI || false;\n      this.loginType = 'NO-SELECTION';\n      this.updateLogin = false;\n      this.isForce = isForce;\n\n      // Remove any ids agent doesn't have access to\n      var model = UIModel.getInstance();\n      this.queueIds = utils.checkExistingIds(\n        model.inboundSettings.availableQueues,\n        this.queueIds,\n        'gateId',\n      );\n      this.chatIds = utils.checkExistingIds(\n        model.chatSettings.availableChatQueues,\n        this.chatIds,\n        'chatQueueId',\n      );\n      this.skillProfileId =\n        utils.checkExistingIds(\n          model.inboundSettings.availableSkillProfiles,\n          [this.skillProfileId],\n          'profileId',\n        )[0] || '';\n      this.dialGroupId =\n        utils.checkExistingIds(\n          model.outboundSettings.availableOutdialGroups,\n          [this.dialGroupId],\n          'dialGroupId',\n        )[0] || '';\n\n      // Set loginType value\n      if (this.queueIds.length > 0 && this.dialGroupId !== '') {\n        this.loginType = 'BLENDED';\n      } else if (this.queueIds.length > 0) {\n        this.loginType = 'INBOUND';\n      } else if (this.dialGroupId !== '') {\n        this.loginType = 'OUTBOUND';\n      } else if (this.chatIds.length > 0) {\n        this.loginType = 'CHAT';\n      } else {\n        this.loginType = 'NO-SELECTION';\n      }\n\n      // set updateLogin value\n      if (model.agentSettings.isLoggedIn) {\n        this.updateLogin = true;\n        this.dialDest = UIModel.getInstance().agentSettings.dialDest;\n      }\n\n      // validate dialDest is sip or 10-digit num\n      if (!utils.validateDest(this.dialDest)) {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'dialDest [' +\n            this.dialDest +\n            '] must be a valid sip or 10-digit DID',\n          '',\n        );\n      }\n    };\n\n    LoginRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          access_token: {\n            '#text': UIModel.getInstance().authenticateRequest.accessToken,\n          },\n          hash_code: {\n            '#text': UIModel.getInstance().connectionSettings.hashCode,\n          },\n          allow_multisocket: {\n            '#text': utils.toString(\n              UIModel.getInstance().applicationSettings.allowMultiSocket,\n            ),\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          login_type: {\n            '#text': this.loginType,\n          },\n          update_login: {\n            '#text': utils.toString(this.updateLogin),\n          },\n          outdial_group_id: {\n            '#text': utils.toString(this.dialGroupId),\n          },\n          skill_profile_id: {\n            '#text': utils.toString(this.skillProfileId),\n          },\n          update_from_adminui: {\n            '#text': utils.toString(this.updateFromAdminUI),\n          },\n          agent_platform_id: {\n            '#text': utils.toString(2), // Hard-coded platformId for agent-js repo\n          },\n          is_force: {\n            '#text': utils.toString(this.isForce),\n          },\n        },\n      };\n\n      // add arrays\n      var queueIds = [];\n      for (var i = 0; i < this.queueIds.length; i++) {\n        if (this.queueIds[i] !== '') {\n          queueIds.push({ '#text': utils.toString(this.queueIds[i]) });\n        }\n      }\n      if (queueIds.length > 0) {\n        msg.ui_request.gates = { gate_id: queueIds };\n      } else {\n        msg.ui_request.gates = {};\n      }\n\n      var chatIds = [];\n      for (var i = 0; i < this.chatIds.length; i++) {\n        if (this.chatIds[i] !== '') {\n          chatIds.push({ '#text': utils.toString(this.chatIds[i]) });\n        }\n      }\n      if (chatIds.length > 0) {\n        msg.ui_request.chat_queues = { chat_queue_id: chatIds };\n      } else {\n        msg.ui_request.chat_queues = {};\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This function is responsible for handling the response to Login from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082513212000447\",\n     *      \"@response_to\":\"IQ201608251121200\",\n     *      \"@type\":\"LOGIN\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"status\":{\"#text\":\"SUCCESS\"},\n     *      \"message\":{\"#text\":\"Hello Geoffrey Mina!\"},\n     *      \"detail\":{\"#text\":\"Logon request processed successfully!\"},\n     *      \"hash_code\":{\"#text\":\"404946966\"},\n     *      \"login_type\":{\"#text\":\"BLENDED\"},\n     *      \"outdial_group_id\":{\"#text\":\"50692\"},\n     *      \"skill_profile_id\":{\"#text\":\"1513\"},\n     *      \"gates\":{\n     *          \"gate_id\":[\n     *              {\"#text\":\"11116\"},\n     *              {\"#text\":\"11117\"}\n     *          ]\n     *      },\n     *      \"chat_queues\":{\n     *          \"chat_queue_id\":{\"#text\":\"30\"}\n     *      }\n     *    }\n     * }\n     */\n    LoginRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var detail = utils.getText(resp, 'detail');\n      var model = UIModel.getInstance();\n      var message = '';\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var Lib = UIModel.getInstance().libraryInstance;\n\n      if (detail === 'Logon Session Configuration Updated!') {\n        // this is an update login packet\n        model.agentSettings.updateLoginMode = true;\n\n        message = 'Logon Session Configuration Updated!';\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n      }\n\n      if (status === 'SUCCESS') {\n        if (!model.agentSettings.isLoggedIn) {\n          // fresh login, set UI Model properties\n          model.loginPacket = response;\n          model.agentSettings.isLoggedIn = true;\n          model.agentSettings.loginDTS = new Date();\n          model.connectionSettings.reconnect = true;\n          model.agentPermissions.allowLeadSearch = false;\n          model.agentSettings.dialDest = utils.getText(resp, 'dial_dest');\n          model.agentSettings.loginType = utils.getText(resp, 'login_type');\n          model.agentSettings.accountId = utils.getText(resp, 'account_id');\n          model.agentSettings.corporateDirectory = utils.getText(\n            resp,\n            'corporate_dir',\n          );\n          model.agentSettings.consultCall = utils.getText(\n            resp,\n            'is_consultcall',\n          );\n\n          model.connectionSettings.isMultiSocket =\n            utils.getText(resp, 'is_multisocket') === 'true';\n\n          // If we allow multisocket, lets setup a listener for other tabs to request data\n          if (\n            model.applicationSettings.allowMultiSocket === true ||\n            model.connectionSettings.isMultiSocket === true\n          ) {\n            broadcastChannelHelper.init();\n          }\n\n          // Set collection values\n          setDialGroupSettings(response);\n          setGateSettings(response);\n          setChatQueueSettings(response);\n          setSkillProfileSettings(response);\n        } else {\n          if (model.agentSettings.updateLoginMode) {\n            model.agentSettings.dialDest = utils.getText(resp, 'dial_dest');\n            model.agentSettings.loginType = utils.getText(resp, 'login_type');\n            model.agentSettings.accountId = utils.getText(resp, 'account_id');\n\n            // This was an update login request\n            model.agentSettings.updateLoginMode = false;\n\n            // reset to false before updating dial group settings\n            model.agentPermissions.allowLeadSearch = false;\n            model.agentPermissions.requireFetchedLeadsCalled = false;\n            model.agentPermissions.allowPreviewLeadFilters = false;\n\n            // Set collection values\n            setDialGroupSettings(response);\n            setGateSettings(response);\n            setChatQueueSettings(response);\n            setSkillProfileSettings(response);\n          } else {\n            // this was a reconnect\n            message = 'Processed a Layer 2 Reconnect Successfully';\n\n            model.connectionSettings.isOnCall = utils.getText(\n              resp,\n              'is_on_call',\n            );\n            model.connectionSettings.activeCallUii = utils.getText(\n              resp,\n              'active_call_uii',\n            );\n            model.connectionSettings.isPendingDisp = utils.getText(\n              resp,\n              'is_pending_disp',\n            );\n\n            if (model.connectionSettings.isOnCall === false) {\n              if (model.currentCall.uii) {\n                var mockEndCallPacket = {\n                  ui_notification: {\n                    '@message_id': '',\n                    '@type': 'END-CALL',\n                    uii: { '#text': model.currentCall.uii },\n                    term_reason: { '#text': 'SOCKET-DISCONNECT' },\n                  },\n                };\n\n                utils.processNotification(Lib, mockEndCallPacket);\n              }\n\n              if (model.agentSettings.isOffhook) {\n                var offHookTermPacket = {\n                  ui_notification: {\n                    agent_id: {\n                      '#text': UIModel.getInstance().agentSettings.agentId,\n                    },\n                    '@type': 'OFF-HOOK-TERM',\n                    '@message_id': '',\n                  },\n                };\n\n                var agentProcessOffhookCallback = utils.processNotification(\n                  Lib,\n                  offHookTermPacket,\n                );\n                Lib.offhookTerm(agentProcessOffhookCallback);\n              }\n            } else if (\n              model.connectionSettings.isOnCall &&\n              (model.currentCall.uii !==\n                model.connectionSettings.activeCallUii ||\n                Lib.waitingForAddSession === true)\n            ) {\n              //if the agent does not know it is on a call, but IQ thinks it is on a call\n              //normally in the case of disconnect during transition\n\n              model.currentCall.uii = model.connectionSettings.activeCallUii;\n              model.currentCall.pendingDisp = false;\n              Lib.hangup(1, true);\n            } else {\n              //agent still is on call and there are transferSessions, verify no transferSession were drop\n              var activeAgentUiSessions = Lib.getTransferSessions();\n              var activeAgentSessions = response.ui_response.active_call_sessions.call_session_id.map(\n                function (sessionObj) {\n                  return sessionObj['#text'];\n                },\n              );\n\n              for (var transferSession in activeAgentUiSessions) {\n                if (activeAgentSessions.indexOf(transferSession) === -1) {\n                  //if the active ui session is no longer active, we need to tell the ui\n                  delete UIModel.getInstance().transferSessions[\n                    transferSession\n                  ];\n                }\n              }\n            }\n\n            utils.logMessage(LOG_LEVELS.INFO, message, response);\n          }\n        }\n\n        // always update guid and agent login hashcode if found\n        model.connectionSettings.hashCode =\n          utils.getText(resp, 'hash_code') || model.connectionSettings.hashCode;\n        model.agentSettings.guid =\n          utils.getText(resp, 'guid') || model.agentSettings.guid;\n        model.dataStore.save('agent_id', utils.getText(resp, 'agent_id'));\n        model.dataStore.save('hash_code', utils.getText(resp, 'hash_code'));\n        formattedResponse.agentSettings = model.agentSettings;\n        formattedResponse.agentPermissions = model.agentPermissions;\n        formattedResponse.applicationSettings = model.applicationSettings;\n        formattedResponse.chatSettings = model.chatSettings;\n        formattedResponse.connectionSettings = model.connectionSettings;\n        formattedResponse.inboundSettings = model.inboundSettings;\n        formattedResponse.outboundSettings = model.outboundSettings;\n        formattedResponse.scriptSettings = model.scriptSettings;\n      } else {\n        // Login failed\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Agent configuration attempt failed (2nd layer login)';\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    function setDialGroupSettings(response) {\n      var model = UIModel.getInstance();\n      var outdialGroups = model.outboundSettings.availableOutdialGroups;\n      model.outboundSettings.outdialGroup = {}; // reset\n      for (var g = 0; g < outdialGroups.length; g++) {\n        var group = outdialGroups[g];\n        if (\n          group.dialGroupId === response.ui_response.outdial_group_id['#text']\n        ) {\n          model.agentPermissions.allowLeadSearch = group.allowLeadSearch;\n          model.agentPermissions.allowPreviewLeadFilters =\n            group.allowPreviewLeadFilters;\n          model.agentPermissions.progressiveEnabled = group.progressiveEnabled;\n          model.outboundSettings.outdialGroup = JSON.parse(\n            JSON.stringify(group),\n          ); // copy object\n\n          // Only used for Preview or TCPA Safe accounts.\n          // If set to true, only allow fetching new leads when current leads are called or expired\n          model.agentPermissions.requireFetchedLeadsCalled =\n            group.requireFetchedLeadsCalled;\n        }\n      }\n    }\n\n    function setSkillProfileSettings(response) {\n      var model = UIModel.getInstance();\n      model.inboundSettings.skillProfile = {};\n      var skillProfiles = model.inboundSettings.availableSkillProfiles;\n      for (var s = 0; s < skillProfiles.length; s++) {\n        var profile = skillProfiles[s];\n        var responseId = utils.getText(\n          response.ui_response,\n          'skill_profile_id',\n        );\n        if (profile.profileId === responseId) {\n          model.inboundSettings.skillProfile = JSON.parse(\n            JSON.stringify(profile),\n          ); // copy object\n        }\n      }\n    }\n\n    function setGateSettings(response) {\n      var model = UIModel.getInstance();\n      var gates = model.inboundSettings.availableQueues;\n      var selectedGateIds = [];\n      var selectedGates = [];\n      var gateIds = response.ui_response.gates.gate_id || [];\n\n      if (!Array.isArray(gateIds)) {\n        gateIds = [gateIds];\n      }\n\n      for (var s = 0; s < gateIds.length; s++) {\n        var obj = gateIds[s];\n        selectedGateIds.push(obj['#text']);\n      }\n\n      for (var gIdx = 0; gIdx < gates.length; gIdx++) {\n        var gate = gates[gIdx];\n        if (selectedGateIds.indexOf(gate.gateId) > -1) {\n          selectedGates.push(gate);\n        }\n      }\n\n      model.inboundSettings.queues = JSON.parse(JSON.stringify(selectedGates)); // copy array\n    }\n\n    function setChatQueueSettings(response) {\n      var model = UIModel.getInstance();\n      var chatQueues = model.chatSettings.availableChatQueues;\n      var selectedChatQueueIds = [];\n      var selectedChatQueues = [];\n      var cQueues = response.ui_response.chat_queues || {};\n      var chatQueueIds = cQueues.chat_queue_id || [];\n\n      if (!Array.isArray(chatQueueIds)) {\n        chatQueueIds = [chatQueueIds];\n      }\n\n      for (var c = 0; c < chatQueueIds.length; c++) {\n        var obj = chatQueueIds[c];\n        selectedChatQueueIds.push(obj['#text']);\n      }\n\n      for (var cIdx = 0; cIdx < chatQueues.length; cIdx++) {\n        var chatQueue = chatQueues[cIdx];\n        if (selectedChatQueueIds.indexOf(chatQueue.chatQueueId) > -1) {\n          selectedChatQueues.push(chatQueue);\n        }\n      }\n\n      model.chatSettings.chatQueues = JSON.parse(\n        JSON.stringify(selectedChatQueues),\n      ); // copy array\n    }\n\n    var LoginPhase1Request = function () {};\n\n    LoginPhase1Request.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN_PHASE_1,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          reconnect: {\n            '#text': utils.toString(\n              UIModel.getInstance().connectionSettings.reconnect,\n            ),\n          },\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          access_token: {\n            '#text': utils.toString(\n              UIModel.getInstance().authenticateRequest.accessToken,\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This function is responsible for handling the login packet received from IntelliServices. It will save\n     * a copy of it in the UIModel as loginPacket, as well as set the isLoggedInIS variable to\n     * true (for reconnect purposes) and the loginDTS with the current date/time.\n     *\n     * {\"ui_response\":{\n     *      \"@type\":\"login\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"is_sso:{\"#text\":\"TRUE\"|\"FALSE\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"agent_pwd\":{\"#text\":\"bound25\"},\n     *      \"first_name\":{\"#text\":\"mandy\"},\n     *      \"last_name\":{\"#text\":\"pants\"},\n     *      \"email\":{\"#text\":\"mandypants@aol.coim\"},\n     *      \"agent_type\":{\"#text\":\"AGENT\"},\n     *      \"external_agent_id\":{\"#text\":\"blahblah\"},\n     *      \"default_login_dest\":{\"#text\":\"9548298548|123\"},\n     *      \"alt_default_login_dest\":{\"#text\":\"9548298548|123\"},\n     *      \"iq_url\":{\"#text\":\"dev.connectfirst.com\"},\n     *      \"iq_port\":{\"#text\":\"1313\"},\n     *      \"iq_ssl_port\":{\"#text\":\"1213\"},\n     *      \"iq_secret_key\":{\"#text\":\"F-OFF\"},\n     *      \"allow_inbound\":{\"#text\":\"1\"},\n     *      \"allow_outbound\":{\"#text\":\"1\"},\n     *      \"allow_chat\":{\"#text\":\"1\"},\n     *      \"allow_blended\":{\"#text\":\"0\"},\n     *      \"allow_off_hook\":{\"#text\":\"1\"},\n     *      \"allow_call_control\":{\"#text\":\"1\"},\n     *      \"allow_login_control\":{\"#text\":\"1\"},\n     *      \"allow_login_updates\":{\"#text\":\"1\"},\n     *      \"allow_lead_inserts\":{\"#text\":\"1\"},\n     *      \"show_lead_history\":{\"#text\":\"1\"},\n     *      \"allow_cross_gate_requeue\":{\"#text\":\"1\"},\n     *      \"phone_login_dial_group\":{\"#text\":\"44\"},\n     *      \"phone_login_pin\":{\"#text\":\"1234\"},\n     *      \"allow_manual_calls\":{\"#text\":\"1\"},\n     *      \"allow_manual_intl_calls\":{\"#text\":\"0\"},\n     *      \"init_login_state\":{\"#text\":\"ON-BREAK\"},\n     *      \"init_login_state_label\":{\"#text\":\"Morning Break\"},\n     *      \"outbound_prepay\":{\"#text\":\"0\"},\n     *      \"max_break_time\":{\"#text\":\"-1\"},\n     *      \"max_lunch_time\":{\"#text\":\"-1\"},\n     *      \"allow_lead_search\":{\"#text\":\"YES_ALL\"},\n     *      \"tcpa_safe_mode\":{\"#text\":\"1|0\"},\n     *      \"pci_enabled\":{\"#text\":\"1|0\"},\n     *      \"login_gates\":{\n     *          \"gate\":[\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"37\",\"@gate_name\":\"test\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"42\",\"@gate_name\":\"test gate two\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"\",\"@gate_id\":\"43\",\"@gate_name\":\"test gate three\"},\n     *              {\"@default_dest_override\":\"\",\"@gate_desc\":\"Amandas Other Gate\",\"@gate_id\":\"46\",\"@gate_name\":\"You know it!\"}\n     *          ]\n     *      },\n     *      \"login_chat_queues\":{\n     *          \"chat_queue\":[\n     *              {\"@chat_queue_description\":\"\",\"@chat_queue_id\":\"\",\"@chat_queue_name\":\"\"},\n     *              {\"@chat_queue_description\":\"\",\"@chat_queue_id\":\"\",\"@chat_queue_name\":\"\"}\n     *          ]\n     *      },\n     *      \"outdial_groups\":{\n     *          \"group\":[\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"\",\"@dial_group_id\":\"44\",\"@dial_group_name\":\"Geoff Dial Test\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"2\",\"@dial_group_desc\":\"AutoDial Configured Dial Group\",\"@dial_group_id\":\"46\",\"@dial_group_name\":\"Phone Only test5\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"Test\",\"@dial_group_id\":\"200000\",\"@dial_group_name\":\"Test\",\"@dial_mode\":\"PREDICTIVE\"},\n     *              {\"@billing_key\":\"\",\"@dial_group_desc\":\"Test\",\"@dial_group_id\":\"200010\",\"@dial_group_name\":\"Carissa's Test Group\",\"@dial_mode\":\"PREDICTIVE\"}\n     *          ]\n     *      },\"skill_profiles\":{\n     *          \"profile\":[\n     *              {\"@profile_desc\":\"\",\"@profile_id\":\"571\",\"@profile_name\":\"skill1\"},\n     *              {\"@profile_desc\":\"\",\"@profile_id\":\"572\",\"@profile_name\":\"skill2\"}\n     *          ]\n     *      },\n     *      \"requeue_gates\":{\n     *          \"gate_group\":[\n     *              {\n     *                  \"@gate_group_id\":\"18\",\n     *                  \"@group_name\":\"new gate group\",\n     *                  \"gates\":{\n     *                      \"gate\":[\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"37\",\"@gate_name\":\"test\"},\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"43\",\"@gate_name\":\"test gate three\"},\n     *                          {\"@gate_desc\":\"\",\"@gate_id\":\"42\",\"@gate_name\":\"test gate two\"}\n     *                      ]\n     *                  },\n     *                  \"skills\":{\n     *                      \"skill\":[\n     *                          {\"@skill_desc\":\"\",\"@skill_id\":\"58\",\"@skill_name\":\"one\"},\n     *                          {\"@skill_desc\":\"\",\"@skill_id\":\"59\",\"@skill_name\":\"two\"},\n     *                      ]\n     *                  }\n     *              }\n     *          ]\n     *      },\n     *      \"chat_rooms\":{},\n     *      \"scripts\": {\n     *           \"script\": {\n     *               \"@script_id\": \"15\",\n     *               \"@script_name\": \"Don't Read This Script\"\n     *           }\n     *      },\n     *      \"campaigns\": {\n     *          \"campaign\": {\n     *              \"@allow_lead_updates\": \"\",\n     *              \"@campaign_id\": \"\",\n     *              \"@campaign_name\": \"\",\n     *              \"@survey_id\": \"\",\n     *              \"@survey_name\": \"\",\n     *              \"custom_labels\": {\n     *                  \"@aux_1_label\": \"\",\n     *                  \"@aux_2_label\": \"\",\n     *                  \"@aux_3_label\": \"\",\n     *                  \"@aux_4_label\": \"\",\n     *                  \"@aux_5_label\": \"\"\n     *              },\n     *              \"generic_key_value_pairs\": {}\n     *          }\n     *      },\n     *      \"account_countries\":{\n     *          \"country\":[\n     *              {\"@country_id\":\"BRA\"},{\"@country_id\":\"FRA\"},{\"@country_id\":\"GER\"}\n     *          ]\n     *      }\n     *   }\n     * }\n     */\n    LoginPhase1Request.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var status = utils.getText(resp, 'status');\n      var model = UIModel.getInstance();\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (status === 'OK') {\n        if (!model.applicationSettings.isLoggedInIS) {\n          // save login packet properties to UIModel\n          model.loginPhase1Packet = response;\n          model.applicationSettings.isLoggedInIS = true;\n          model.applicationSettings.isSso = utils.getText(resp, 'is_sso');\n          model.applicationSettings.isTcpaSafeMode =\n            utils.getText(resp, 'tcpa_safe_mode') === '1';\n          model.applicationSettings.pciEnabled =\n            utils.getText(resp, 'pci_enabled') === '1';\n          model.chatSettings.alias =\n            utils.getText(resp, 'first_name') +\n            ' ' +\n            utils.getText(resp, 'last_name');\n\n          model.agentSettings.loginDTS = new Date();\n          model.agentSettings.maxBreakTime = utils.getText(\n            resp,\n            'max_break_time',\n          );\n          model.agentSettings.maxLunchTime = utils.getText(\n            resp,\n            'max_lunch_time',\n          );\n          model.agentSettings.firstName = utils.getText(resp, 'first_name');\n          model.agentSettings.lastName = utils.getText(resp, 'last_name');\n          model.agentSettings.email = utils.getText(resp, 'email');\n          model.agentSettings.agentId = utils.getText(resp, 'agent_id');\n          model.agentSettings.externalAgentId = utils.getText(\n            resp,\n            'external_agent_id',\n          );\n          model.agentSettings.agentType = utils.getText(resp, 'agent_type');\n          model.agentSettings.realAgentType = utils.getText(\n            resp,\n            'real_agent_type',\n          );\n          model.agentSettings.defaultLoginDest = utils.getText(\n            resp,\n            'default_login_dest',\n          );\n          model.agentSettings.altDefaultLoginDest = utils.getText(\n            resp,\n            'alt_default_login_dest',\n          );\n          model.agentSettings.initLoginState = utils.getText(\n            resp,\n            'init_login_state',\n          );\n          model.agentSettings.initLoginStateLabel = utils.getText(\n            resp,\n            'init_login_state_label',\n          );\n          model.agentSettings.outboundManualDefaultRingtime = utils.getText(\n            resp,\n            'outbound_manual_default_ringtime',\n          );\n          model.agentSettings.isOutboundPrepay =\n            utils.getText(resp, 'outbound_prepay') === '1';\n          model.agentSettings.phoneLoginPin = utils.getText(\n            resp,\n            'phone_login_pin',\n          );\n          model.agentSettings.username = utils.getText(resp, 'username');\n          model.agentSettings.agentPassword = utils.getText(resp, 'agent_pwd');\n\n          model.agentPermissions.allowCallControl =\n            utils.getText(resp, 'allow_call_control') === '1';\n          model.agentPermissions.allowChat =\n            utils.getText(resp, 'allow_chat') === '1'; //Agent permission\n          model.agentPermissions.enableChat =\n            utils.getText(resp, 'enable_chat') === '1'; //Account permission\n          model.agentPermissions.showLeadHistory =\n            utils.getText(resp, 'show_lead_history') === '1';\n          model.agentPermissions.allowManualOutboundGates =\n            utils.getText(resp, 'allow_manual_outbound_gates') === '1';\n          model.agentPermissions.allowOffHook =\n            utils.getText(resp, 'allow_off_hook') === '1';\n          model.agentPermissions.allowManualCalls =\n            utils.getText(resp, 'allow_manual_calls') === '1';\n          model.agentPermissions.allowManualPass =\n            utils.getText(resp, 'allow_manual_pass') === '1';\n          model.agentPermissions.allowManualIntlCalls =\n            utils.getText(resp, 'allow_manual_intl_calls') === '1';\n          model.agentPermissions.allowLoginUpdates =\n            utils.getText(resp, 'allow_login_updates') === '1';\n          model.agentPermissions.allowInbound =\n            utils.getText(resp, 'allow_inbound') === '1';\n          model.agentPermissions.allowOutbound =\n            utils.getText(resp, 'allow_outbound') === '1';\n          model.agentPermissions.allowBlended =\n            utils.getText(resp, 'allow_blended') === '1';\n          model.agentPermissions.allowLoginControl =\n            utils.getText(resp, 'allow_login_control') === '1';\n          model.agentPermissions.allowCrossQueueRequeue =\n            utils.getText(resp, 'allow_cross_gate_requeue') === '1';\n          model.agentPermissions.disableSupervisorMonitoring =\n            utils.getText(resp, 'disable_supervisor_monitoring') === '1';\n          model.agentPermissions.allowAutoAnswer =\n            utils.getText(resp, 'allow_auto_answer') === '1';\n          model.agentPermissions.defaultAutoAnswerOn =\n            utils.getText(resp, 'default_auto_answer_on') === '1';\n          model.agentPermissions.allowHistoricalDialing =\n            utils.getText(resp, 'allow_historical_dialing') === '1';\n          model.agentPermissions.allowAgentStats =\n            utils.getText(resp, 'allow_agent_stats') === '1';\n          model.agentPermissions.allowCampaignStats =\n            utils.getText(resp, 'allow_camp_stats') === '1';\n          model.agentPermissions.allowGateStats =\n            utils.getText(resp, 'allow_gate_stats') === '1';\n          model.agentPermissions.allowChatStats =\n            utils.getText(resp, 'allow_chat_stats') === '1';\n          model.agentPermissions.enableFolderMode =\n            utils.getText(resp, 'enable_folder_mode') === '1';\n          model.agentPermissions.enableTaskMode =\n            utils.getText(resp, 'enable_task_mode') === '1';\n\n          model.outboundSettings.defaultDialGroup = utils.getText(\n            resp,\n            'phone_login_dial_group',\n          );\n\n          if (\n            response.ui_response.allow_lead_inserts &&\n            typeof resp.insert_campaigns !== 'undefined' &&\n            response.ui_response.insert_campaigns.campaign\n          ) {\n            model.agentPermissions.allowLeadInserts =\n              utils.getText(resp, 'allow_lead_inserts') === '1';\n          }\n\n          // Set collection values\n          model.outboundSettings.availableCampaigns = _processCampaigns(\n            response,\n          );\n          model.chatSettings.availableChatQueues = utils.processResponseCollection(\n            response.ui_response,\n            'login_chat_queues',\n            'chat_queue',\n          );\n          _processChatQueueDnis(model.chatSettings, response);\n          model.chatSettings.availableChatRequeueQueues = utils.processResponseCollection(\n            response.ui_response,\n            'chat_requeue_queues',\n            'chat_group',\n          );\n          model.inboundSettings.availableQueues = utils.processResponseCollection(\n            response.ui_response,\n            'login_gates',\n            'gate',\n          );\n          model.inboundSettings.availableSkillProfiles = utils.processResponseCollection(\n            response.ui_response,\n            'skill_profiles',\n            'profile',\n          );\n          model.inboundSettings.availableRequeueQueues = utils.processResponseCollection(\n            response.ui_response,\n            'requeue_gates',\n            'gate_group',\n          );\n          model.chatSettings.availableChatRooms = utils.processResponseCollection(\n            response.ui_response,\n            'chat_rooms',\n            'room',\n          );\n          model.scriptSettings.availableScripts = utils.processResponseCollection(\n            response.ui_response,\n            'scripts',\n            'script',\n          );\n          model.agentSettings.callerIds = utils.processResponseCollection(\n            response.ui_response,\n            'caller_ids',\n            'caller_id',\n          );\n          model.agentSettings.availableAgentStates = utils.processResponseCollection(\n            response.ui_response,\n            'agent_states',\n            'agent_state',\n          );\n          model.applicationSettings.availableCountries = utils.processResponseCollection(\n            response.ui_response,\n            'account_countries',\n            'country',\n          );\n          model.outboundSettings.insertCampaigns = utils.processResponseCollection(\n            response.ui_response,\n            'insert_campaigns',\n            'campaign',\n          );\n\n          var dialGroups = utils.processResponseCollection(\n            response.ui_response,\n            'outdial_groups',\n            'group',\n          );\n          // set boolean values\n          for (var dg = 0; dg < dialGroups.length; dg++) {\n            var group = dialGroups[dg];\n            group.allowLeadSearch = group.allowLeadSearch === 'YES';\n            group.allowPreviewLeadFilters =\n              group.allowPreviewLeadFilters === '1';\n            group.progressiveEnabled = group.progressiveEnabled === '1';\n            group.requireFetchedLeadsCalled =\n              group.requireFetchedLeadsCalled === '1';\n            group.hciType = parseInt(group.hciEnabled) || 0;\n            group.hciEnabled =\n              group.hciEnabled === '1' || group.hciEnabled === '2';\n            group.hciClicker = group.hciClicker === '1';\n          }\n          model.outboundSettings.availableOutdialGroups = dialGroups;\n        }\n      }\n\n      formattedResponse.agentSettings = model.agentSettings;\n      formattedResponse.agentPermissions = model.agentPermissions;\n      formattedResponse.applicationSettings = model.applicationSettings;\n      formattedResponse.chatSettings = model.chatSettings;\n      formattedResponse.connectionSettings = model.connectionSettings;\n      formattedResponse.inboundSettings = model.inboundSettings;\n      formattedResponse.outboundSettings = model.outboundSettings;\n      formattedResponse.scriptSettings = model.scriptSettings;\n\n      return formattedResponse;\n    };\n\n    function _processCampaigns(response) {\n      var campaigns = [];\n      var campaignsRaw = null;\n\n      if (typeof response.ui_response.campaigns.campaign !== 'undefined') {\n        campaignsRaw = response.ui_response.campaigns.campaign;\n      }\n\n      if (campaignsRaw) {\n        if (!Array.isArray(campaignsRaw)) {\n          campaignsRaw = [campaignsRaw];\n        }\n\n        for (var c = 0; c < campaignsRaw.length; c++) {\n          campaigns.push(_processCampaign(campaignsRaw[c]));\n        }\n      }\n\n      return campaigns;\n    }\n\n    function _processCampaign(campaignRaw) {\n      // single campaign object\n      var campaignId = campaignRaw['@campaign_id'];\n      var allowLeadUpdates = campaignRaw['@allow_lead_updates']; // 0 = no update, 1 = allow phone update, 2 = don't allow phone update\n      UIModel.getInstance().agentPermissions.allowLeadUpdatesByCampaign[\n        campaignId\n      ] = allowLeadUpdates;\n\n      var customLabels = campaignRaw['custom_labels'];\n      var labelArray = [];\n\n      for (var p in customLabels) {\n        var label = p.replace(/@/, ''); // remove leading '@'\n        var obj = {};\n        obj[label] = customLabels[p];\n\n        labelArray.push(obj);\n      }\n\n      return {\n        campaignId: campaignId,\n        campaignName: campaignRaw['@campaign_name'],\n        surveyId: campaignRaw['@survey_id'],\n        surveyName: campaignRaw['@survey_name'],\n        customLabels: labelArray,\n        allowLeadUpdates: allowLeadUpdates,\n      };\n    }\n\n    /**\n     * example packet\n     *  {\n     *      \"chat_queue\":[\n     *          {\n     *              \"@chat_queue_desc\":\"\",\n     *              \"@chat_queue_id\":\"74\",\n     *              \"@chat_queue_name\":\"Please don't delete\"\n     *          },\n     *          {\n     *              \"@chat_queue_desc\":\"blah\",\n     *              \"@chat_queue_id\":\"131\",\n     *              \"@chat_queue_name\":\"cris chat queue\",\n     *              \"dnis\":[\n     *                  {\"#text\":\"5555551215\"},\n     *                  {\"#text\":\"5555554444\"},\n     *                  {\"#text\":\"8885551212\"},\n     *                  {\"#text\":\"97687\"}\n     *              ]\n     *          }\n     *      ]\n     *   }\n     *\n     *\n     *      This function will format the dnis list and put them back on chatSettings.availableChatQueues\n     **/\n    function _processChatQueueDnis(chatSettings, response) {\n      var queues = chatSettings.availableChatQueues;\n      var rawQueues = response.ui_response.login_chat_queues.chat_queue;\n\n      if (!Array.isArray(rawQueues)) {\n        rawQueues = [rawQueues];\n      }\n\n      for (var i = 0; i < queues.length; i++) {\n        var queue = queues[i];\n\n        var rawQueue = {};\n        for (var j = 0; j < rawQueues.length; j++) {\n          var rq = rawQueues[j];\n          if (rq['@chat_queue_id'] === queue.chatQueueId) {\n            rawQueue = rq;\n            break;\n          }\n        }\n\n        if (rawQueue.dnis) {\n          if (!Array.isArray(rawQueue.dnis)) {\n            rawQueue.dnis = [rawQueue.dnis];\n          }\n\n          // update the dnis array to just be a list\n          queue.dnis = rawQueue.dnis.map(function (d) {\n            return d['#text'];\n          });\n        }\n      }\n    }\n\n    var LogoutRequest = function (agentId, message) {\n      this.agentId = agentId;\n      this.message = message || '';\n    };\n\n    LogoutRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGOUT,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': this.agentId,\n          },\n          message: {\n            '#text': this.message,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    LogoutRequest.prototype.processResponse = function (notification) {\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      return formattedResponse;\n    };\n    var MultiSocketRequest = function () {};\n\n    MultiSocketRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LOGIN_MULTISOCKET,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': JSON.parse(model.dataStore.get('agent_id')), //fetch agent_id and hash_code from browser's local storage\n          },\n          hash_code: {\n            '#text': JSON.parse(model.dataStore.get('hash_code')),\n          },\n        },\n      };\n      UIModel.getInstance().loginRequest = new LoginRequest(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n      );\n      return JSON.stringify(msg);\n    };\n\n    var OffhookInitRequest = function () {};\n\n    OffhookInitRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.OFFHOOK_INIT,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          dial_dest: {\n            '#text': UIModel.getInstance().agentSettings.dialDest,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling an off-hook-init response packet from IntelliQueue.\n     * If the offhookinit is successful, it will go into the UIModel and set the isOffhook variable\n     * to true.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"UI2005\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OFF-HOOK-INIT\",\n     *      \"status\":{\"#text\":\"OK|FAILURE\"},\n     *      \"monitoring\":{\"#text:\"TRUE|FALSE\"},\n     *      \"message\":{},\n     *      \"detail\":{}\n     *    }\n     * }\n     */\n    OffhookInitRequest.prototype.processResponse = function (response) {\n      var status = response.ui_response.status['#text'];\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (status === 'OK') {\n        var isMonitoring = utils.getText(response.ui_response, 'monitoring');\n        UIModel.getInstance().offhookInitPacket = response;\n        UIModel.getInstance().agentSettings.isOffhook = true;\n        UIModel.getInstance().agentSettings.isMonitoring = isMonitoring;\n        formattedResponse.monitoring = isMonitoring;\n\n        // make sure to reset softphone reconnect bool\n        UIModel.getInstance().softphoneSettings.attemptingSoftphoneReconnect = false;\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message = 'Unable to process offhook request';\n        }\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          formattedResponse.message + ' ' + formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var OffhookTermRequest = function () {};\n\n    OffhookTermRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.OFFHOOK_TERM,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * Process an OFF-HOOK-TERM packet and update various variables in the UI\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"IQ10012016080217135001344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"OFF-HOOK-TERM\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"start_dts\":{\"#text\":\"2016-08-02 17:11:38\"},\n     *      \"end_dts\":{\"#text\":\"2016-08-02 17:14:07\"},\n     *      \"monitoring\":{\"#text\":\"0\"}\n     *    }\n     * }\n     */\n    OffhookTermRequest.prototype.processResponse = function (data) {\n      var notif = data.ui_notification;\n      var monitoring = utils.getText(notif, 'monitoring') === '1';\n      var model = UIModel.getInstance();\n\n      model.agentSettings.wasMonitoring = monitoring;\n      model.offhookTermPacket = data;\n      model.agentSettings.isOffhook = false;\n      model.agentSettings.isMonitoring = false;\n\n      var formattedResponse = {\n        status: 'OK',\n        agentId: utils.getText(notif, 'agent_id'),\n        startDts: utils.getText(notif, 'start_dts'),\n        endDts: utils.getText(notif, 'end_dts'),\n        monitoring: monitoring,\n      };\n\n      return formattedResponse;\n    };\n\n    var OneToOneOutdialRequest = function (\n      destination,\n      callerId,\n      ringTime,\n      countryId,\n      gateId,\n    ) {\n      this.destination = destination;\n      this.callerId = callerId;\n      this.ringTime = ringTime || '60';\n      this.countryId = countryId || 'USA';\n      this.gateId = gateId || '';\n    };\n\n    OneToOneOutdialRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.ONE_TO_ONE_OUTDIAL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          destination: {\n            '#text': utils.toString(this.destination),\n          },\n          ring_time: {\n            '#text': utils.toString(this.ringTime),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          gate_id: {\n            '#text': utils.toString(this.gateId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var OneToOneOutdialCancelRequest = function (uii) {\n      this.uii = uii;\n    };\n\n    /*\n     * This class is responsible for creating a new packet to cancel\n     * an in-progress outbound call.\n     */\n    OneToOneOutdialCancelRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.ONE_TO_ONE_OUTDIAL_CANCEL,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var PauseRecordRequest = function (record) {\n      this.record = record;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PAUSE-RECORD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"record\":{\"#text\":\"TRUE | FALSE\"},\n     *      \"pause\":{\"#text\":\"10\"}\n     *    }\n     * }\n     */\n    PauseRecordRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var pauseTime = '10';\n      if (\n        model.currentCall.agentRecording &&\n        model.currentCall.agentRecording.pause\n      ) {\n        pauseTime = model.currentCall.agentRecording.pause;\n      }\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PAUSE_RECORD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          record: {\n            '#text': utils.toString(this.record === true ? 'TRUE' : 'FALSE'),\n          },\n          pause: {\n            '#text': utils.toString(pauseTime),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes PAUSE-RECORD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PAUSE-RECORD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"status\":{\"#text\":\"OK | FAILURE\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"state\":{\"#text\":\"RECORDING | PAUSED\"},\n     *      \"pause\":{\"#text\":\"10\"}\n     *    }\n     * }\n     */\n    PauseRecordRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.state = utils.getText(resp, 'state');\n      formattedResponse.pause = utils.getText(resp, 'pause');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message =\n              'Broadcasting new record state of ' + formattedResponse.state;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Broadcasting new record state of ' + formattedResponse.state,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Pause Record Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Error processing PAUSE-RECORD request.' +\n            formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail;\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var PingCallRequest = function () {};\n\n    PingCallRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PING_CALL,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().currentCall.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var PreviewDialRequest = function (\n      action,\n      searchFields,\n      requestId,\n      leadPhone,\n    ) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.searchFields = searchFields || [];\n      this.requestId = requestId || '';\n      this.action = action || '';\n      this.leadPhone = leadPhone || ''; // pipe leads only\n    };\n\n    /*\n     * searchFields = [\n     *  {key: \"name\", value: \"Danielle\"},\n     *  {key: \"number\", value: \"5555555555\"\n     * ];\n     */\n    PreviewDialRequest.prototype.formatJSON = function () {\n      var fields = {};\n      for (var i = 0; i < this.searchFields.length; i++) {\n        var fieldObj = this.searchFields[i];\n        fields[fieldObj.key] = { '#text': utils.toString(fieldObj.value) };\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.PREVIEW_DIAL,\n          '@message_id': utils.getMessageId(),\n          '@action': this.action,\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          search_fields: fields,\n          // { \"name\": {\"#text\": \"Danielle\" } }\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling PREVIEW-DIAL packets received\n     * from the dialer. It will save a copy of it in the UIModel.\n     *\n     * {\"dialer_request\":{\n     *      \"@action\":\"\", // <-- empty for Preview fetch, otherwise \"SEARCH\"\n     *      \"@callbacks\":\"TRUE|FALSE\"\n     *      ,\"@message_id\":\"ID2008091513163400220\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"PREVIEW_DIAL\",\n     *      \"dial_group_id\":{\"#text\":\"200018\"},\n     *      \"account_id\":{\"#text\":\"99999999\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"is_insert\":{\"#text\":\"TRUE|FALSE\"}, <--- TRUE if search triggered by insert\n     *      \"destinations\":{\n     *          \"lead\":[\n     *              {\n     *                  \"@aux_data1\":\"\",\"@aux_data2\":\"\",\"@aux_data3\":\"\",\"@aux_data4\":\"\",\"@aux_data5\":\"\",\n     *                  \"@aux_phone\":\"\",\"@campaign_id\":\"51\",\"@destination\":\"9548298548\",\"@dnis\":\"1112223333\",\n     *                  \"@extern_id\":\"amanda\",\"@lead_id\":\"2646\",\"@lead_state\":\"PENDING\",\"@live_answer_msg\":\"\",\n     *                  \"@mach_answer_msg\":\"\",\"@machine_detect\":\"FALSE\",\"@request_key\":\"IQ982008091516241101125\",\n     *                  \"@valid_until\":\"2008-09-15 17:24:11\",\"extern_id\":{\"#text\":\"9548298548\"},\n     *                  \"first_name\":{\"#text\":\"Amanda\"},\"mid_name\":{\"#text\":\"Amanda\"},\"last_name\":{\"#text\":\"Machutta2\"},\n     *                  \"address1\":{},\"address2\":{},\"city\":{},\"state\":{},\"zip\":{},\"aux_greeting\":{},\n     *                  \"aux_external_url\":{}, \"app_url\":{}\n     *              },\n     *          ]\n     *      }\n     *    }\n     * }\n     */\n    PreviewDialRequest.prototype.processResponse = function (notification) {\n      var notif = notification.dialer_request;\n      var model = UIModel.getInstance();\n      var leads = utils.processResponseCollection(\n        notif,\n        'destinations',\n        'lead',\n      );\n\n      // send over requestId (as well as requestKey for backwards compatibility)\n      // to match previewLeadState.notification property\n      for (var l = 0; l < leads.length; l++) {\n        var lead = leads[l];\n        lead.requestId = lead.requestKey;\n        lead.ani = lead.destination; // add ani prop since used in new call packet & update lead\n\n        // In case of a single lead returned, the XML converter to JSON will add lead as an object and not an array\n        //\n        if (!Array.isArray(notif.destinations.lead)) {\n          notif.destinations.lead = [notif.destinations.lead];\n        }\n\n        // parse extra data correctly\n        try {\n          var notifLead = notif.destinations.lead[l];\n\n          if (notifLead.extra_data) {\n            // if this lead doesn't match the current lead, find it from the notification\n            if (notifLead['@lead_id'] !== lead.leadId) {\n              notifLead = notif.destinations.lead.filter(function (destLead) {\n                return destLead['@lead_id'] === lead.leadId;\n              });\n            }\n\n            delete lead.extraDatas;\n            lead.extraData = {};\n            for (var key in notifLead.extra_data) {\n              lead.extraData[key] = notifLead.extra_data[key]['#text'];\n            }\n          }\n        } catch (e) {\n          console.warn('error parsing lead extra data: ' + e);\n        }\n      }\n\n      var formattedResponse = {\n        action: notif['@action'],\n        callbacks: notif['@callbacks'] === 'TRUE',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        isInsert: utils.getText(notif, 'is_insert'),\n        leads: leads,\n      };\n\n      if (notif['@callbacks'] === 'TRUE') {\n        utils.logMessage(\n          LOG_LEVELS.INFO,\n          \"New CALLBACK packet request rec'd from dialer\",\n          notification,\n        );\n        // clear callbacks??\n        //model.callbacks = [];\n        for (var l = 0; l < leads.length; l++) {\n          var lead = leads[l];\n          model.callbacks.push(lead);\n        }\n      } else {\n        model.outboundSettings.previewDialLeads = leads;\n      }\n\n      return formattedResponse;\n    };\n\n    var RecordRequest = function (record) {\n      this.record = record;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"RECORD\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"record\":{\"#text\":\"TRUE | FALSE\"}\n     *    }\n     * }\n     */\n    RecordRequest.prototype.formatJSON = function () {\n      var model = UIModel.getInstance();\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.RECORD,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(model.currentCall.agentId),\n          },\n          uii: {\n            '#text': utils.toString(model.currentCall.uii),\n          },\n          record: {\n            '#text': this.record === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes RECORD packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"RECORD\",\n     *      \"uii\":{\"#text\":\"200808291035510000000900029412\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"detail\":{},\n     *      \"state\":{\"#text\":\"RECORDING | STOPPED\"}\n     *    }\n     * }\n     */\n    RecordRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n      var currUII = '';\n      if (UIModel.getInstance().currentCall.uii) {\n        currUII = UIModel.getInstance().currentCall.uii;\n      }\n\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.state = utils.getText(resp, 'state');\n\n      if (formattedResponse.status === 'OK') {\n        // make sure we are talking about the same call\n        if (formattedResponse.uii === currUII) {\n          if (formattedResponse.message === '') {\n            formattedResponse.message =\n              'Broadcasting new record state of ' + formattedResponse.state;\n          }\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            formattedResponse.message,\n            response,\n          );\n        } else {\n          utils.logMessage(\n            LOG_LEVELS.DEBUG,\n            'Record Response is for a different call...discarding',\n            response,\n          );\n        }\n      } else {\n        if (formattedResponse.message === '') {\n          formattedResponse.message =\n            'Error processing RECORD request.' +\n            formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail;\n        }\n        utils.logMessage(LOG_LEVELS.WARN, formattedResponse.message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var RequeueRequest = function (queueId, skillId, maintain) {\n      this.queueId = queueId;\n      this.skillId = skillId;\n      this.maintain = maintain;\n    };\n\n    RequeueRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.REQUEUE,\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          gate_number: {\n            '#text': utils.toString(this.queueId),\n          },\n          skill_id: {\n            '#text': utils.toString(this.skillId),\n          },\n          maintain_agent: {\n            '#text': this.maintain === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes RE-QUEUE packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103291\",\n     *      \"@response_to\":\"UIV220088281716486\",\n     *      \"@type\":\"RE-QUEUE\",\n     *      \"status\":\"OK\",\n     *      \"message\":\"Success.\",\n     *      \"detail\":\"The re-queue request was successfully processed.\",\n     *      \"agent_id\":{\"#text\":\"1856\"},\n     *      \"uii\":{\"#text\":\"200808281716090000000900028070\"},\n     *      \"gate_number\":{\"#text\":\"19\"},\n     *      \"maintain_agent\":{\"#text\":\"FALSE\"}\n     *    }\n     * }\n     */\n    RequeueRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.queueId = utils.getText(resp, 'gate_number');\n\n      if (formattedResponse.status === 'OK') {\n      } else {\n        var message =\n          'There was an error processing the requeue request. ' +\n          formattedResponse.detail;\n        utils.logMessage(LOG_LEVELS.WARN, message, response);\n      }\n\n      return formattedResponse;\n    };\n\n    var ScriptConfigRequest = function (scriptId, version) {\n      this.scriptId = scriptId;\n      this.version = version || null;\n    };\n\n    /*\n     * This event is responsible for requesting a script object\n     */\n    ScriptConfigRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.SCRIPT_CONFIG,\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          script_id: {\n            '#text': utils.toString(this.scriptId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class process SCRIPT-CONFIG packets received from IntelliQueue.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082817165103294\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"SCRIPT-CONFIG\",\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"message\":{},\n     *      \"script_id\":{\"#text\":\"123\"},\n     *      \"version\":{\"#text\":\"1\"},\n     *      \"json\":{},\n     *   }\n     * }\n     */\n    ScriptConfigRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      if (formattedResponse.status === 'true') {\n        formattedResponse.status = true;\n        formattedResponse.scriptId = utils.getText(resp, 'script_id');\n        formattedResponse.version = utils.getText(resp, 'version');\n        formattedResponse.json = utils.getText(resp, 'json');\n\n        // store script on model\n        UIModel.getInstance().scriptSettings.loadedScripts[\n          formattedResponse.scriptId\n        ] = formattedResponse;\n      } else {\n        formattedResponse.status = false;\n      }\n\n      return formattedResponse;\n    };\n\n    var ScriptResultRequest = function (uii, scriptId, jsonResult) {\n      this.uii = uii;\n      this.scriptId = scriptId;\n      this.jsonResult = jsonResult;\n    };\n\n    /*\n     * This event is responsible for sending the script result object\n     */\n    ScriptResultRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@message_id': utils.getMessageId(),\n          response_to: '',\n          '@type': MESSAGE_TYPES.SCRIPT_RESULT,\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          script_id: {\n            '#text': utils.toString(this.scriptId),\n          },\n          json_result: {\n            '#text': JSON.stringify(this.jsonResult),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var SearchDirectoryRequest = function () {};\n\n    SearchDirectoryRequest.prototype.searchDirectory = function (searchString) {\n      UIModel.getInstance().searchDirectoryRequest = this;\n      _searchDirectory('rcdirectory/getRcCorporateDirectory', searchString);\n    };\n\n    SearchDirectoryRequest.prototype.processResponse = function (response) {\n      UIModel.getInstance().filteredDirectory = response;\n      return UIModel.getInstance().filteredDirectory;\n    };\n\n    function _searchDirectory(path, searchString) {\n      var model = UIModel.getInstance();\n      var accountId = model.agentSettings.accountId; //subAccountId\n      var baseUrl = model.authHost + model.baseApiUri;\n      var engageAccessToken =\n        'Bearer ' +\n        utils.toString(\n          UIModel.getInstance().authenticateRequest.engageAccessToken,\n        );\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        queryParams: {},\n      };\n      params.headers['Authorization'] = engageAccessToken;\n      params.queryParams['searchString'] = searchString;\n      params.queryParams['accountId'] = accountId;\n      var errorMsg = 'Error on request to search Directory: ' + baseUrl + path;\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function (response) {\n          try {\n            response = JSON.parse(response.response);\n            var searchDirResponse = UIModel.getInstance().searchDirectoryRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SEARCH_DIR,\n              searchDirResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function (err) {\n          var errResponse = {\n            type: 'Error retrieving directory list',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SEARCH_DIR,\n            errResponse,\n          );\n        },\n      );\n    }\n\n    var StatsRequest = function () {};\n\n    /*\n     * { \"ui_request\": {\n     *      \"@response_to\":\"\",\n     *      \"@message_id\":\"IS20160901142437535\",\n     *      \"@type\":\"STATS\"\n     *    }\n     * }\n     */\n    StatsRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.STATS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var TcpaSafeRequest = function (\n      action,\n      searchFields,\n      requestId,\n      leadPhone,\n    ) {\n      this.agentId = UIModel.getInstance().agentSettings.agentId;\n      this.searchFields = searchFields || [];\n      this.requestId = requestId || '';\n      this.action = action || '';\n      this.leadPhone = leadPhone || ''; // pipe leads only\n    };\n\n    /*\n     * searchFields = [\n     *  {key: \"name\", value: \"Danielle\"},\n     *  {key: \"number\", value: \"5555555555\"\n     * ];\n     */\n    TcpaSafeRequest.prototype.formatJSON = function () {\n      var fields = {};\n      for (var i = 0; i < this.searchFields.length; i++) {\n        var fieldObj = this.searchFields[i];\n        fields[fieldObj.key] = { '#text': utils.toString(fieldObj.value) };\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.TCPA_SAFE,\n          '@message_id': utils.getMessageId(),\n          '@action': this.action,\n          response_to: '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          pending_request_id: {\n            '#text': utils.toString(this.requestId),\n          },\n          lead_phone: {\n            '#text': utils.toString(this.leadPhone),\n          },\n          search_fields: fields,\n          // { \"name\": {\"#text\": \"Danielle\"} }\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling TCPA-SAFE packets received\n     * from the dialer. It will save a copy of it in the UIModel.\n     *\n     * {\"dialer_request\":{\n     *      \"@action\":\"\",\n     *      \"@callbacks\":\"TRUE|FALSE\"\n     *      ,\"@message_id\":\"ID2008091513163400220\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"TCPA_SAFE\",\n     *      \"dial_group_id\":{\"#text\":\"200018\"},\n     *      \"account_id\":{\"#text\":\"99999999\"},\n     *      \"agent_id\":{\"#text\":\"1810\"},\n     *      \"is_insert\":{\"#text\":\"TRUE|FALSE\"}, <--- TRUE if search triggered by insert\n     *      \"destinations\":{\n     *          \"lead\":[\n     *              {\n     *                  \"@aux_data1\":\"\",\"@aux_data2\":\"\",\"@aux_data3\":\"\",\"@aux_data4\":\"\",\"@aux_data5\":\"\",\n     *                  \"@aux_phone\":\"\",\"@campaign_id\":\"51\",\"@destination\":\"9548298548\",\"@dnis\":\"1112223333\",\n     *                  \"@extern_id\":\"amanda\",\"@lead_id\":\"2646\",\"@lead_state\":\"PENDING\",\"@live_answer_msg\":\"\",\n     *                  \"@mach_answer_msg\":\"\",\"@machine_detect\":\"FALSE\",\"@request_key\":\"IQ982008091516241101125\",\n     *                  \"@valid_until\":\"2008-09-15 17:24:11\",\"extern_id\":{\"#text\":\"9548298548\"},\n     *                  \"first_name\":{\"#text\":\"Amanda\"},\"mid_name\":{\"#text\":\"Amanda\"},\"last_name\":{\"#text\":\"Machutta2\"},\n     *                  \"address1\":{},\"address2\":{},\"city\":{},\"state\":{},\"zip\":{},\"aux_greeting\":{},\n     *                  \"aux_external_url\":{}, \"app_url\":{}\n     *              },\n     *          ]\n     *      }\n     *    }\n     * }\n     *\n     */\n    TcpaSafeRequest.prototype.processResponse = function (notification) {\n      var notif = notification.dialer_request;\n      var model = UIModel.getInstance();\n      var leads = utils.processResponseCollection(\n        notif,\n        'destinations',\n        'lead',\n      );\n\n      // send over requestId (as well as requestKey for backwards compatibility)\n      // to match tcpaSafeLeadState.notification property\n      for (var l = 0; l < leads.length; l++) {\n        var lead = leads[l];\n        lead.requestId = lead.requestKey;\n        lead.ani = lead.destination; // add ani prop since used in new call packet & update lead\n\n        // In case of a single lead returned, the XML converter to JSON will add lead as an object and not an array\n        //\n        if (!Array.isArray(notif.destinations.lead)) {\n          notif.destinations.lead = [notif.destinations.lead];\n        }\n\n        // parse extra data correctly\n        try {\n          var notifLead = notif.destinations.lead[l];\n\n          if (notifLead.extra_data) {\n            // if this lead doesn't match the current lead, find it from the notification\n            if (notifLead['@lead_id'] !== lead.leadId) {\n              notifLead = notif.destinations.lead.filter(function (destLead) {\n                return destLead['@lead_id'] === lead.leadId;\n              });\n            }\n\n            delete lead.extraDatas;\n            lead.extraData = {};\n            for (var key in notifLead.extra_data) {\n              lead.extraData[key] = notifLead.extra_data[key]['#text'];\n            }\n          }\n        } catch (e) {\n          console.warn('error parsing lead extra data: ' + e);\n        }\n      }\n\n      var formattedResponse = {\n        action: notif['@action'],\n        callbacks: notif['@callbacks'] === 'TRUE',\n        dialGroupId: utils.getText(notif, 'dial_group_id'),\n        accountId: utils.getText(notif, 'account_id'),\n        agentId: utils.getText(notif, 'agent_id'),\n        isInsert: utils.getText(notif, 'is_insert'),\n        leads: leads,\n      };\n\n      if (notif['@callbacks'] === 'TRUE') {\n        var message = \"New CALLBACK packet request rec'd from dialer\";\n        utils.logMessage(LOG_LEVELS.INFO, message, notification);\n        // clear callbacks??\n        //model.callbacks = [];\n        for (var l = 0; l < leads.length; l++) {\n          var callbackLead = leads[l];\n          model.callbacks.push(callbackLead);\n        }\n      } else {\n        model.outboundSettings.tcpaSafeLeads = leads;\n      }\n\n      return formattedResponse;\n    };\n\n    var UpdateDialDestinationRequest = function (dialDest, isSoftphoneError) {\n      this.dialDest = dialDest;\n      this.isSoftphoneError = isSoftphoneError || false;\n    };\n\n    /*\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":MESSAGE_TYPES.UPDATE_DIAL_DESTINATION,\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":\"1\",\n     *      \"dial_dest\":{\"#text\":\"blah@something.com\"},\n     *      \"log_softphone_error\": {\"#text\":\"TRUE|FALSE\"},\n     *    }\n     * }\n     */\n    UpdateDialDestinationRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.UPDATE_DIAL_DESTINATION,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          log_softphone_error: {\n            '#text': utils.toString(\n              this.isSoftphoneError === true ? 'TRUE' : 'FALSE',\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var XferWarmRequest = function (dialDest, callerId, sipHeaders, countryId) {\n      this.dialDest = dialDest;\n      this.callerId = callerId || '';\n      this.sipHeaders = sipHeaders || [];\n      this.countryId = countryId;\n    };\n\n    XferWarmRequest.prototype.formatJSON = function () {\n      var fields = [];\n      for (var i = 0; i < this.sipHeaders.length; i++) {\n        var fieldObj = this.sipHeaders[i];\n        fields.push({\n          '@name': utils.toString(fieldObj.name),\n          '@value': utils.toString(fieldObj.value),\n        });\n      }\n\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_WARM,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n          caller_id: {\n            '#text': utils.toString(this.callerId),\n          },\n          country_id: {\n            '#text': utils.toString(this.countryId),\n          },\n          xfer_header: fields,\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class processes WARM-XFER packets rec'd from IQ.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082314475000219\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"WARM-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231447590139000000000200\"},\n     *      \"session_id\":{\"#text\":\"3\"},\n     *      \"status\":{\"#text\":\"OK\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"OK\"},\"detail\":{}\n     *    }\n     * }\n     *  Response on CANCEL:\n     *  {\"ui_response\":{\n     *      \"@message_id\":\"IQ10012016082315005000264\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"WARM-XFER\",\n     *      \"agent_id\":{\"#text\":\"1\"},\n     *      \"uii\":{\"#text\":\"201608231501090139000000000204\"},\n     *      \"session_id\":{},\n     *      \"status\":{\"#text\":\"FAILURE\"},\n     *      \"dial_dest\":{\"#text\":\"3038593775\"},\n     *      \"message\":{\"#text\":\"Transfer CANCELED\"},\n     *      \"detail\":{\"#text\":\"NOANSWER after 3 seconds.\"}\n     *    }\n     * }\n     */\n    XferWarmRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.agentId = utils.getText(resp, 'agent_id');\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.sessionId = utils.getText(resp, 'session_id');\n      formattedResponse.dialDest = utils.getText(resp, 'dial_dest');\n\n      if (formattedResponse.status === 'OK') {\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          'Warm Xfer to ' +\n            formattedResponse.dialDest +\n            ' processed successfully.',\n          response,\n        );\n      } else {\n        utils.logMessage(\n          LOG_LEVELS.WARN,\n          'There was an error processing the Warm Xfer request. ' +\n            formattedResponse.message +\n            '\\n' +\n            formattedResponse.detail,\n          response,\n        );\n      }\n\n      return formattedResponse;\n    };\n\n    var XferWarmCancelRequest = function (dialDest) {\n      this.dialDest = dialDest;\n    };\n\n    XferWarmCancelRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.XFER_WARM_CANCEL,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          uii: {\n            '#text': UIModel.getInstance().currentCall.uii,\n          },\n          dial_dest: {\n            '#text': utils.toString(this.dialDest),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var WebRTCRequest = function () {};\n\n    WebRTCRequest.prototype.getSipRegistrationInfo = function () {\n      UIModel.getInstance().WebRTCRequest = this;\n      _getSipRegistrationInfo('sip/sipRegistrationInfo', {\n        agentId: UIModel.getInstance().agentSettings.agentId,\n      });\n    };\n\n    /*\n     * legacy response\n     * {\n     *   \"sipInfo\": [\n     *       {\n     *           \"transport\": \"wss\",\n     *           \"username\": \"yadvendra_agent\",\n     *           \"password\": \"oct@2018\",\n     *           \"domain\": \"d03-reg1.vacd.biz\",\n     *           \"outboundProxy\": \"d03-reg1.vacd.biz:8089/freeswitch\"\n     *       }\n     *   ]\n     * }\n     *\n     * RC SSO response\n     * {\n     *   \"sipInfo\": [\n     *       {\n     *           \"transport\": \"WSS\",\n     *           \"username\": \"18662032059*101\",\n     *           \"password\": \"B77O85vO\",\n     *           \"authorizationId\": \"400017513008\",\n     *           \"domain\": \"sip-cfintams.lab.nordigy.ru\",\n     *           \"outboundProxy\": \"webphone-sip-cfintams.lab.nordigy.ru:8083\"\n     *       }\n     *   ]\n     * }\n     * */\n    WebRTCRequest.prototype.processResponse = function (response) {\n      var softphoneSettings = UIModel.getInstance().softphoneSettings;\n      softphoneSettings.sipInfo = response.sipInfo;\n\n      return softphoneSettings.sipInfo;\n    };\n\n    function _getSipRegistrationInfo(path, queryParams) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseApiUri;\n      var engageAccessToken =\n        'Bearer ' +\n        utils.toString(\n          UIModel.getInstance().authenticateRequest.engageAccessToken,\n        );\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      params.headers['Authorization'] = engageAccessToken;\n      params['queryParams'] = queryParams;\n      var errorMsg =\n        'Error on request get to sip registration info. URL: ' + baseUrl + path;\n\n      new HttpService(baseUrl).httpGet(path, params).then(\n        function (response) {\n          try {\n            response = JSON.parse(response.response);\n            var webRTCResponse = UIModel.getInstance().WebRTCRequest.processResponse(\n              response,\n            );\n            model.softphoneSettings.lastSipFetchTime = Date.now();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.WEBRTC_INFO,\n              webRTCResponse,\n            );\n          } catch (err) {\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          }\n        },\n        function (err) {\n          var errResponse = {\n            type: 'Error retrieving sip registration information',\n            message: errorMsg,\n          };\n          utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n\n          // still fire callback on error response\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.WEBRTC_INFO,\n            errResponse,\n          );\n        },\n      );\n    }\n    var ChatAgentEndRequest = function (agentId, uii) {\n      this.uii = uii;\n      this.agentId = agentId;\n    };\n\n    /*\n\nExternal Chat :\nwhen agent submits a chat end request, send \"CHAT-AGENT-END\" request to IntelliQueue\n\n{\n    \"ui_request\" : {\n        \"@destination\" : \"IQ\",\n        \"@type\" : MESSAGE_TYPES.CHAT_AGENT_END,\n        \"uii\":{\n            \"#text\":utils.toString(this.uii)\n        },\n        \"agent_id\":{\n            \"#text\":utils.toString(this.agentId)\n        }\n    }\n}\n\n*/\n\n    ChatAgentEndRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_AGENT_END,\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          operation_id: {\n            '#text': utils.generateOpId(),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n    /** Deprecated */\n    var ChatAliasRequest = function (alias) {\n      this.alias = alias;\n    };\n\n    /*\n     * This class is responsible for creating the request to change chat alias\n     * packet and sending it to intelliservices.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ALIAS\",\n     *      \"alias\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatAliasRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_ALIAS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          alias: {\n            '#text': utils.toString(this.alias),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatDispositionRequest = function (\n      uii,\n      agentId,\n      dispositionId,\n      notes,\n      sendAcknowlegement,\n      survey,\n      sessionId,\n    ) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.dispositionId = dispositionId;\n      this.notes = notes || '';\n      this.sendAcknowlegement = sendAcknowlegement || false;\n      this.sessionId = sessionId;\n\n      /*\n       * survey = {\n       *      first_name: {\n       *          leadField: \"first_name\"\n       *          value: \"Geoff\"\n       *      },\n       *      last_name: {\n       *          leadField: \"last_name\"\n       *          value: \"Mina\"\n       *      }\n       *      ...\n       * }\n       */\n      this.survey = survey || null;\n    };\n\n    /*\n     * External Chat:\n     * When agent dispositions a chat, send \"CHAT-DISPOSITION\" request to IntelliQueue\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DISPOSITION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"session_id\" : {\"#text\" : \"\"},\n     *      \"disposition_id\":{\"#text\":\"\"},\n     *      \"notes\":{\"#text\":\"hello\"},\n     *      \"do_ack\":{\"#text\":\"true\"},\n     *      \"survey\":{\n     *          \"response\":[\n     *              {\"@extern_id\":\"text_box\",\"#text\":\"hello\"},\n     *              {\"@extern_id\":\"check_box\",\"#text\":\"20\"},\n     *              {\"@extern_id\":\"radio_save\",\"#text\":\"23\"}\n     *          ]\n     *      }\n     *    }\n     * }\n     */\n    ChatDispositionRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_DISPOSITION,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n          disposition_id: {\n            '#text': utils.toString(this.dispositionId),\n          },\n          notes: {\n            '#text': utils.toString(this.notes),\n          },\n          do_ack: {\n            '#text': this.sendAcknowlegement === true ? 'TRUE' : 'FALSE',\n          },\n        },\n      };\n\n      /*\n       * converts survey to this response\n       * survey : {\n       *      response: [\n       *          { \"@extern_id\":\"\", \"@lead_update_column\":\"\", \"#text\":\"\" }\n       *      ]\n       * }\n       */\n      if (this.survey !== null) {\n        var response = [];\n        var keys = Object.keys(this.survey);\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n          var obj = {\n            '@extern_id': key,\n            '#text': utils.toString(this.survey[key].value),\n          };\n          response.push(obj);\n        }\n        msg.ui_request.survey = { response: response };\n      }\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatListRequest = function (agentId, monitorAgentId) {\n      this.agentId = agentId;\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * External Chat:\n     * Requests a list of all chats by monitor agent id\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-LIST\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n\n    ChatListRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-LIST\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_response\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-LIST\",\n     *          \"@response_to\":\"\",\n     *          \"agent_id\":{\"#text\":\"17\"},\n     *          \"monitor_agent_id\":{\"#text\":\"18\"},\n     *          \"chat_list\": {}\n     *      }\n     *  }\n     */\n\n    ChatListRequest.prototype.processResponse = function (response) {\n      var notif = response.ui_response;\n      var model = UIModel.getInstance();\n      model.chatListResponse = response;\n      var formattedResponse = utils.buildDefaultResponse(response);\n\n      formattedResponse.message = 'Received CHAT-LIST response';\n      formattedResponse.status = 'OK';\n      formattedResponse.messageId = notif['@message_id'];\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.monitorAgentId = utils.getText(\n        notif,\n        'monitor_agent_id',\n      );\n      formattedResponse.chatList = utils.processResponseCollection(\n        notif,\n        'chat_list',\n        'active_chat',\n      );\n\n      return formattedResponse;\n    };\n\n    var ChatMessageRequest = function (uii, agentId, message, whisper) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.message = message;\n      this.whisper = whisper;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a chat message, send \"CHAT-MESSAGE\" request to IntelliQueue\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-MESSAGE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"hello\"},\n     *      \"whisper\":{\"#text\":\"true|false\"}\n     *    }\n     * }\n     */\n    ChatMessageRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_MESSAGE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n          whisper: {\n            '#text': utils.toString(this.whisper),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling external CHAT-MESSAGE packets received from\n     * IntelliQueue.\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-MESSAGE\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"account_id\":{\"#text\":\"\"},\n     *      \"from\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"hello\"},\n     *      \"dts\":{\"#text\":\"2017-05-10 12:40:28\"},\n     *      \"dequeue_agent_id\":{\"#text\":\"123\"},\n     *      \"whisper\":{\"#text\":'TRUE'|'FALSE'\"}\n     *    }\n     * }\n     */\n\n    ChatMessageRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_notification;\n      var dts = utils.getText(resp, 'dts').trim();\n      var dtsDate = new Date(dts.replace(' ', 'T'));\n\n      var formattedResponse = utils.buildDefaultResponse(response);\n      formattedResponse.status = 'OK';\n      formattedResponse.uii = utils.getText(resp, 'uii');\n      formattedResponse.accountId = utils.getText(resp, 'account_id');\n      formattedResponse.from = utils.getText(resp, 'from');\n      formattedResponse.type = utils.getText(resp, 'type');\n      formattedResponse.message = utils.getText(resp, 'message');\n      formattedResponse.whisper = utils.getText(resp, 'whisper');\n      formattedResponse.dequeueAgentId = utils.getText(\n        resp,\n        'dequeue_agent_id',\n      );\n      formattedResponse.dts = dtsDate;\n      formattedResponse.mediaLinks = utils.processResponseCollection(\n        resp,\n        'media_links',\n        'link',\n      );\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New CHAT-MESSAGE packet received from IntelliQueue',\n        response,\n      );\n\n      return formattedResponse;\n    };\n\n    var ChatPresentedResponseRequest = function (\n      uii,\n      messageId,\n      response,\n      responseReason,\n    ) {\n      this.uii = uii;\n      this.messageId = messageId;\n      this.response = response;\n      this.responseReason = responseReason || '';\n    };\n\n    /*\n     * External Chat:\n     * When Agent receives a CHAT-PRESENTED notification, respond with\n     * either ACCEPT or REJECT for presented chat.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-PRESENTED-RESPONSE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"response\":{\"#text\":\"ACCEPT|REJECT\"},\n     *      \"response_reason\":{\"#text\":\"\"}\n     *      \"operation_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatPresentedResponseRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_PRESENTED_RESPONSE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': this.messageId,\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          response: {\n            '#text': utils.toString(this.response),\n          },\n          response_reason: {\n            '#text': utils.toString(this.responseReason),\n          },\n          operation_id: {\n            '#text': utils.generateOpId(),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatRequeueRequest = function (\n      uii,\n      agentId,\n      chatQueueId,\n      skillId,\n      maintainAgent,\n    ) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.chatQueueId = chatQueueId;\n      this.skillId = skillId || '';\n      this.maintainAgent = maintainAgent || false;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a chat message, send \"CHAT-REQUEUE\" request to IntelliQueue\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-REQUEUE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"operation_id\":{\"#text\":\"1234567890asdfghjklzxcvb\"}, // 24 character hex string, only set for Engage Digital Tasks\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"chat_queue_id\":{\"#text\":\"\"},\n     *      \"skill_id\":{\"#text\":\"\"},\n     *      \"maintain_agent\":{\"#text\":\"true|false\"}\n     *    }\n     * }\n     */\n    ChatRequeueRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_REQUEUE,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          operation_id: {\n            '#text': utils.generateOpId(),\n          },\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          chat_queue_id: {\n            '#text': utils.toString(this.chatQueueId),\n          },\n          skill_id: {\n            '#text': utils.toString(this.skillId),\n          },\n          maintain_agent: {\n            '#text': utils.toString(this.maintainAgent),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /** Deprecated */\n    var ChatRoomRequest = function (\n      action,\n      roomType,\n      roomId,\n      agentOne,\n      agentTwo,\n    ) {\n      this.action = action;\n      this.roomType = roomType;\n      this.roomId = roomId;\n      this.agentOne = agentOne || '';\n      this.agentTwo = agentTwo || '';\n    };\n\n    /*\n     * This class is responsible for sending the packet requesting to either enter\n     * a chatroom, or to exit a chatroom to IS. It also handles private chats. There are\n     * two possible ways these packets could look:\n     *\n     * //PUBLIC\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM\",\n     *      \"@room_type\":\"PUBLIC\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"action\":{\"#text\":\"EXIT|ENTER\"}\n     *    }\n     * }\n     * -OR-\n     * // PRIVATE\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM\",\n     *      \"@room_type\":\"PRIVATE\",\n     *      \"agent_one\":{\"#text\":\"\"},\n     *      \"agent_two\":{\"#text\":\"\"},\n     *      \"action\":{\"#text\":\"ENTER|EXIT\"}\n     *    }\n     * }\n     *\n     */\n    ChatRoomRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_ROOM,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          action: {\n            '#text': utils.toString(this.action),\n          },\n        },\n      };\n\n      if (this.action !== 'EXIT') {\n        msg.ui_request['@room_type'] = this.roomType;\n      }\n\n      if (this.roomType === 'PRIVATE' && this.action === 'ENTER') {\n        msg.ui_request.agent_one = { '#text': utils.toString(this.agentOne) };\n        msg.ui_request.agent_two = { '#text': utils.toString(this.agentTwo) };\n      } else {\n        msg.ui_request.room_id = { '#text': utils.toString(this.roomId) };\n      }\n      return JSON.stringify(msg);\n    };\n\n    /** Deprecated */\n    var ChatRoomStateRequest = function () {};\n\n    /*\n     * This class is responsible for processing CHAT-ROOM-STATE packets received\n     * from IntelliServices.\n     *\n     * {\"ui_request\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-ROOM-STATE\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"chat_alias\":{\"#text\":\"\"},\n     *      \"state\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatRoomStateRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_request;\n      var formattedResponse = {\n        roomId: utils.getText(resp, 'room_id'),\n        agentId: utils.getText(resp, 'agent_id'),\n        chatAlias: utils.getText(resp, 'chat_alias'),\n        state: utils.getText(resp, 'state'),\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'Chat-Room-State update packet received for room #' +\n          formattedResponse.roomId,\n        response,\n      );\n      return formattedResponse;\n    };\n    /** Deprecated */\n    var ChatSendRequest = function (roomId, message) {\n      this.roomId = roomId;\n      this.message = message;\n    };\n\n    /*\n     * This class is responsible for creating the CHAT message packet and sending\n     * it to IntelliServices.\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_id\":{\"#text\":\"\"}\n     *      \"message\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatSendRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.CHAT_SEND,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          room_id: {\n            '#text': utils.toString(this.roomId),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling CHAT packets received from\n     * IntelliServices.\n     *\n     * //PUBLIC\n     * {\"ui_request\":{\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_type\":\"GROUP\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"sender\":{\"#text\":\"\"},\n     *      \"sender_id\":{\"#text\":\"\"},\n     *      \"room_name\":{\"#text\":\"\"}\n     *    }\n     * }\n     * -OR-\n     * // PRIVATE\n     * {\"ui_request\":{\n     *      \"@dynamic_create\":\"TRUE\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT\",\n     *      \"room_type\":\"PRIVATE\",\n     *      \"room_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"},\n     *      \"sender\":{\"#text\":\"\"},\n     *      \"room_name\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n\n    ChatSendRequest.prototype.processResponse = function (response) {\n      var resp = response.ui_request;\n      var formattedResponse = {\n        roomType: utils.getText(resp, 'room_type'),\n        roomId: utils.getText(resp, 'room_id'),\n        message: utils.getText(resp, 'message'),\n        sender: utils.getText(resp, 'sender'),\n        senderId: utils.getText(resp, 'sender_id'),\n        roomName: utils.getText(resp, 'room_name'),\n        dynamicCreate: utils.getText(resp, 'dynamic_create') === 'TRUE',\n      };\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New CHAT packet received from IntelliServices',\n        response,\n      );\n\n      return formattedResponse;\n    };\n\n    var ChatTypingRequest = function (uii, message) {\n      this.uii = uii;\n      this.message = message;\n    };\n\n    /*\n     * External Chat:\n     * Agent sends typing message to notify client widgets,\n     * but the agent's pending message is not sent going this direction.\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-TYPING\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"message\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    ChatTypingRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_TYPING,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var LeaveChatRequest = function (uii, agentId, sessionId) {\n      this.uii = uii;\n      this.agentId = agentId;\n      this.sessionId = sessionId;\n    };\n\n    /*\n     * External Chat:\n     * Requests to terminate a chat session on an existing chat uii\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DROP-SESSION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"uii\":{\"#text\":\"\"},\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"session_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    LeaveChatRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.LEAVE_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          uii: {\n            '#text': utils.toString(this.uii),\n          },\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          session_id: {\n            '#text': utils.toString(this.sessionId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var ChatManualSmsRequest = function (\n      agentId,\n      chatQueueId,\n      ani,\n      dnis,\n      message,\n    ) {\n      this.agentId = agentId;\n      this.chatQueueId = chatQueueId;\n      this.ani = ani;\n      this.dnis = dnis;\n      this.message = message;\n    };\n\n    /*\n     * External Chat:\n     * When agent submits a manual sms message, send \"MANUAL-SMS\" request to IntelliQueue\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"MANUAL-SMS\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"1995\"},\n     *      \"chatQueueId\":{\"#text\":\"44\"},\n     *      \"ani\":{\"#text\":\"1231231234\"},\n     *      \"dnis\":{\"#text\":\"5435435432\"},\n     *      \"message\":{\"#text\":\"hello\"}\n     *    }\n     * }\n     */\n    ChatManualSmsRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.CHAT_MANUAL_SMS,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(this.agentId),\n          },\n          chat_queue_id: {\n            '#text': utils.toString(this.chatQueueId),\n          },\n          ani: {\n            '#text': utils.toString(this.ani),\n          },\n          dnis: {\n            '#text': utils.toString(this.dnis),\n          },\n          message: {\n            '#text': utils.toString(this.message),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var MonitorChatRequest = function (monitorAgentId) {\n      this.monitorAgentId = monitorAgentId;\n    };\n\n    /*\n     * External Chat:\n     * Requests a new session on an existing chat uii\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-MONITOR\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    MonitorChatRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.MONITOR_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    var StopMonitorChatRequest = function (monitorAgentId) {\n      this.monitorAgentId = monitorAgentId || '';\n    };\n\n    /*\n     * External Chat:\n     * Requests a termination of a chat monitor session for an agent\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IQ\",\n     *      \"@type\":\"CHAT-DROP-MONITORING-SESSION\",\n     *      \"@message_id\":\"\",\n     *      \"@response_to\":\"\",\n     *      \"agent_id\":{\"#text\":\"\"},\n     *      \"monitor_agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    StopMonitorChatRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IQ',\n          '@type': MESSAGE_TYPES.STOP_MONITOR_CHAT,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': UIModel.getInstance().agentSettings.agentId,\n          },\n          monitor_agent_id: {\n            '#text': utils.toString(this.monitorAgentId),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * Process a CHAT-DROP-MONITORING-SESSION notification. Used to notify supervisor monitors that agent has logged out.\n     *\n     * {\"ui_notification\":{\n     *      \"@message_id\":\"IQ10012016080217135001344\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"CHAT-DROP-MONITORING-SESSION\",\n     *      \"monitored_agent_id\":{\"#text\":\"1\"}\n     *    }\n     * }\n     */\n    StopMonitorChatRequest.prototype.processResponse = function (data) {\n      var notif = data.ui_notification;\n\n      return { monitoredAgentId: utils.getText(notif, 'monitored_agent_id') };\n    };\n\n    /** Deprecated */\n    var SupervisorListRequest = function () {};\n\n    /*\n     * This class is responsible for creating a packet to request a list of\n     * supervisors from IntelliServices. This is used by the chat function so an\n     * agent can grab a list of supervisors and then select one for a private chat.\n     *\n     * {\"ui_request\":{\n     *      \"@destination\":\"IS\",\n     *      \"@message_id\":\"UI200809291036128\",\n     *      \"@response_to\":\"\",\n     *      \"@type\":\"SUPERVISOR-LIST\",\n     *      \"agent_id\":{\"#text\":\"\"}\n     *    }\n     * }\n     */\n    SupervisorListRequest.prototype.formatJSON = function () {\n      var msg = {\n        ui_request: {\n          '@destination': 'IS',\n          '@type': MESSAGE_TYPES.SUPERVISOR_LIST,\n          '@message_id': utils.getMessageId(),\n          '@response_to': '',\n          agent_id: {\n            '#text': utils.toString(\n              UIModel.getInstance().agentSettings.agentId,\n            ),\n          },\n        },\n      };\n\n      return JSON.stringify(msg);\n    };\n\n    /*\n     * This class is responsible for handling the SUPERVISOR-LIST packet\n     * rec'd from intelliservices. It will save a copy of this list in the\n     * UIModel under a variable called \"supervisors\". Whenever a new list\n     * is rec'd it is overwritten.\n     *\n     * {\"ui_response\":{\n     *      \"@message_id\":\"IQ982008082910361503344\",\n     *      \"@response_to\":\"\",\n     *      \"supervisor\":[\n     *          {\"id\":{\"#text\":\"\"}, \"fname\":{\"#text\":\"\"}, \"lname\":{\"#text\":\"\"}, \"uname\":{\"#text\":\"\"} }\n     *          {\"id\":{\"#text\":\"\"}, \"fname\":{\"#text\":\"\"}, \"lname\":{\"#text\":\"\"}, \"uname\":{\"#text\":\"\"} }\n     *      ]\n     *    }\n     * }\n     */\n\n    SupervisorListRequest.prototype.processResponse = function (response) {\n      var model = UIModel.getInstance();\n      var tempList = utils.processResponseCollection(\n        response,\n        'ui_response',\n        'supervisor',\n      );\n      var supervisors = [];\n\n      for (var i = 0; i < tempList.length; i++) {\n        var sup = tempList[i];\n        supervisors.push({\n          agentId: sup.id,\n          firstName: sup.fname,\n          lastName: sup.lname,\n          username: sup.uname,\n        });\n      }\n\n      utils.logMessage(\n        LOG_LEVELS.DEBUG,\n        'New supervisor list received ',\n        supervisors,\n      );\n      model.supervisors = supervisors;\n\n      return model.supervisors;\n    };\n\n    var ChatClientReconnectNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-CLIENT-RECONNECT\" packets from IntelliQueue.\n     * This is sent when a chat connect message is sent to a non-archieved chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-CLIENT-RECONNECT\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *          \"agent_id\":{\"#text\":\"1\"}\n     *      }\n     *  }\n     */\n\n    ChatClientReconnectNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      formattedResponse.message = 'Received CHAT-CLIENT-RECONNECT notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.accountId = utils.getText(notif, 'account_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n\n      return formattedResponse;\n    };\n\n    var AddChatSessionNotification = function () {};\n\n    /*\n     * This class is responsible for handling \"ADD-CHAT-SESSION\" packets from IntelliQueue.\n     *\n     * {\n     *   \"ui_notification\": {\n     *       \"@message_id\": \"IQ982008082918151403727\",\n     *       \"@response_to\": \"\",\n     *       \"@type\": \"ADD-CHAT-SESSION\",\n     *       \"session_id\": { \"#text\": \"2\" },\n     *       \"uii\": { \"#text\": \"200808291814560000000900016558\" },\n     *       \"session_type\": { \"#text\": \"AGENT|MONITORING\" },\n     *       \"agent_id\": { \"#text\": \"1856\" } // null unless monitor type,\n     *       \"transcript\": { }\n     *   }\n     *  }\n     */\n    AddChatSessionNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      formattedResponse.status = 'OK';\n      formattedResponse.message = 'Received ADD-CHAT-SESSION notification';\n      formattedResponse.sessionId = utils.getText(notif, 'session_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.sessionType = utils.getText(notif, 'session_type');\n      formattedResponse.agentId = utils.getText(notif, 'agent_id');\n      formattedResponse.transcript = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transcript',\n      )[0];\n\n      return formattedResponse;\n    };\n\n    var ChatActiveNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-ACTIVE\" packets from IntelliQueue.\n     * This is sent in response to an agent's CHAT-PRESENTED-RESPONSE accept request.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-ACTIVE\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"is_monitoring\":{\"#text\":\"TRUE\"|\"FALSE\"}\n     *      }\n     *  }\n     */\n    ChatActiveNotification.prototype.processResponse = function (notification) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification, true);\n\n      formattedResponse.message = 'Received CHAT-ACTIVE notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.accountId = utils.getText(notif, 'account_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.isMonitoring = utils.getText(notif, 'is_monitoring');\n\n      return formattedResponse;\n    };\n\n    var ChatAgentAssignFailureNotification = function () {};\n\n    /*\n     * This class is responsible for handling \"CHAT-AGENT-ASSIGN-FAILURE\" packets from IntelliQueue.\n     * This is sent to the agent when the last session is disconnected from a chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-AGENT-ASSIGN-FAILURE\",\n     *          \"@destination\":\"IQ\",\n     *          \"operation_id\":{\"#text\":\"1234567890asdfghjklzxcvb\"}, // 24 character hex string, only set for Engage Digital Tasks\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"task_id\": {\"#text\":\"\"}\n     *      }\n     *  }\n     */\n\n    ChatAgentAssignFailureNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n\n      var agentAssignFailure = utils.buildDefaultResponse(notification, true);\n      agentAssignFailure.message =\n        'Received CHAT-AGENT-ASSIGN-FAILURE notification';\n      agentAssignFailure.status = 'OK';\n      agentAssignFailure.uii = utils.getText(notif, 'uii');\n      agentAssignFailure.taskId = utils.getText(notif, 'task_id');\n      agentAssignFailure.accountId = utils.getText(notif, 'account_id');\n\n      return agentAssignFailure;\n    };\n\n    var ChatCancelledNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for processing \"CHAT-CANCELLED\" packets from IntelliQueue.\n     * If an agent is presented a chat and doesn't respond before the timeout, the CHAT-CANCELLED\n     * message is sent from IQ.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-CANCELLED\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"operation_id\":{\"#text\":\"1234567890asdfghjklzxcvb\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"}\n     *      }\n     *  }\n     */\n    ChatCancelledNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification, true);\n\n      formattedResponse.message = 'Received CHAT-CANCELLED notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.messageId = notif['@message_id'];\n      formattedResponse.accountId = utils.getText(notif, 'account_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n\n      return formattedResponse;\n    };\n\n    var ChatInactiveNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-INACTIVE\" packets from IntelliQueue.\n     * This is sent to the agent when the last session is disconnected from a chat.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-INACTIVE\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"operation_id\":{\"#text\":\"1234567890asdfghjklzxcvb\"}, // 24 character hex string, only set for Engage Digital Tasks\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"disposition_timeout\":{\"#text\":\"30\"},\n     *          \"dequeue_agent_id\":{\"#text\":\"123\"}\n     *      }\n     *  }\n     */\n    ChatInactiveNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification, true);\n\n      formattedResponse.message = 'Received CHAT-INACTIVE notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.accountId = utils.getText(notif, 'account_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.dispositionTimeout = utils.getText(\n        notif,\n        'disposition_timeout',\n      );\n      formattedResponse.dequeueAgentId = utils.getText(\n        notif,\n        'dequeue_agent_id',\n      );\n\n      return formattedResponse;\n    };\n\n    var ChatPresentedNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-PRESENTED\" packets from IntelliQueue.\n     * When this notification is received, the Agent can either Accept or Decline which will\n     * be sent back to IntelliQueue as a CHAT-PRESENTED-RESPONSE.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-PRESENTED\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"task_id\":{\"#text\":\"123\"}, // only applicable for Engage Digital tasks\n     *          \"operation_id:{\"#text\":\"1234567890asdfghjklzxcvb\"} // 24 character hex string, only set for Engage Digital Tasks\n     *          \"chat_queue_id\":{\"#text\":\"3\"},\n     *          \"chat_queue_name\":{\"#text\":\"Support Chat\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"channel_type\":{\"#text\":\"email\"},\n     *          \"allow_accept\":{\"#text\":\"TRUE|FALSE\"},\n     *          \"ed_source_id\":{\"#text\":\"5ec6d788f3b1490008773a10\"},\n     *          \"ed_category_ids\":{\"#text\": \"5ec6b48ff3b14900087739eb,5ec6b4c2f3b14900087739f1,5f11dff7fcd72e0007c53b3e\"},\n     *          \"ed_language_id\":{\"#text\":\"en\"},\n     *          \"ed_author_screen_name\":{\"#text\":\"Joe Smith\"},\n     *          \"ed_created_at\":{\"#text\":\"Thu Aug 20 08:21:00 UTC 2020\"},\n     *      }\n     *  }\n     */\n    ChatPresentedNotification.prototype.processResponse = function (\n      notification,\n    ) {\n      var notif = notification.ui_notification;\n      var edSourceId = utils.getText(notif, 'ed_source_id');\n      var edLanguageId = utils.getText(notif, 'ed_language_id');\n      var edCategoryIds = utils.getText(notif, 'ed_category_ids').split(',');\n      var taskId = utils.getText(notif, 'task_id');\n      var model = UIModel.getInstance();\n      var edSourceName = '';\n      var edLanguage = '';\n      var edCategories = [];\n      var processedResponse;\n      var instance = model.libraryInstance;\n\n      if (taskId) {\n        // look in cached values to see if we have ED info already loaded\n        var mainAccountId = model.authenticateRequest.mainAccountId;\n        var cachedSourceList =\n          model.applicationSettings.edSources[mainAccountId];\n        var cachedLanguageList =\n          model.applicationSettings.edLanguages[mainAccountId];\n        var cachedCategoryList =\n          model.applicationSettings.edCategories[mainAccountId];\n\n        var sourceCache = _getEdValue(cachedSourceList, edSourceId);\n        var languageCache = _getEdValue(cachedLanguageList, edLanguageId);\n        var categoryCache = _getMultiEdValues(\n          cachedCategoryList,\n          edCategoryIds,\n        );\n\n        var edProxyPath = 'digital-api-proxy/evMainAccount/' + mainAccountId;\n\n        if (\n          !sourceCache.isCached ||\n          !languageCache.isCached ||\n          !categoryCache.isCached\n        ) {\n          // make sure access token is valid by just getting fresh token\n          utils.refreshAccessToken().then(function () {\n            var authToken = model.authenticateRequest.engageAccessToken;\n            var sourceErrorMsg = 'Error retrieving ED source name from ETR.';\n            var languageErrorMsg =\n              'Error retrieving ED language name from ETR.';\n            var categoriesErrorMsg = 'Error retrieving ED categories from ETR.';\n            var sourcePromise, languagePromise, categoriesPromise;\n\n            if (sourceCache.isCached) {\n              edSourceName = sourceCache.name;\n            } else {\n              sourcePromise = _buildEtrHttpRequest(\n                edProxyPath + '/sources',\n                authToken,\n              );\n            }\n\n            if (languageCache.isCached) {\n              edLanguage = languageCache.name;\n            } else {\n              languagePromise = _buildEtrHttpRequest(\n                edProxyPath + '/languages',\n                authToken,\n              );\n            }\n\n            if (categoryCache.isCached) {\n              edCategories = categoryCache.names;\n            } else {\n              categoriesPromise = _buildEtrHttpRequest(\n                edProxyPath + '/categories',\n                authToken,\n              );\n            }\n\n            if (sourcePromise) {\n              sourcePromise.then(\n                function (sourceResponse) {\n                  try {\n                    var sourceList = JSON.parse(sourceResponse.response);\n                    model.applicationSettings.edSources[\n                      mainAccountId\n                    ] = sourceList; // store returned sources in memory for later use\n                    edSourceName = _getEdValue(sourceList, edSourceId).name;\n                  } catch (err) {\n                    utils.logMessage(LOG_LEVELS.WARN, sourceErrorMsg, err);\n                  }\n                },\n                function (err) {\n                  utils.logMessage(LOG_LEVELS.WARN, sourceErrorMsg, err);\n                },\n              );\n            }\n\n            if (languagePromise) {\n              languagePromise.then(\n                function (languageResponse) {\n                  try {\n                    var languageList = JSON.parse(languageResponse.response);\n                    model.applicationSettings.edLanguages[\n                      mainAccountId\n                    ] = languageList; // store returned languages in memory for later use\n                    edLanguage = _getEdValue(languageList, edLanguageId).name;\n                  } catch (err) {\n                    utils.logMessage(LOG_LEVELS.WARN, languageErrorMsg, err);\n                  }\n                },\n                function (err) {\n                  utils.logMessage(LOG_LEVELS.WARN, languageErrorMsg, err);\n                },\n              );\n            }\n\n            if (categoriesPromise) {\n              categoriesPromise.then(\n                function (categoryResponse) {\n                  try {\n                    var categoryList = JSON.parse(categoryResponse.response);\n                    model.applicationSettings.edCategories[\n                      mainAccountId\n                    ] = categoryList; // store returned categories in memory for later use\n                    edCategories = _getMultiEdValues(\n                      categoryList,\n                      edCategoryIds,\n                    ).names;\n                  } catch (err) {\n                    utils.logMessage(LOG_LEVELS.WARN, categoriesErrorMsg, err);\n                  }\n                },\n                function (err) {\n                  utils.logMessage(LOG_LEVELS.WARN, categoriesErrorMsg, err);\n                },\n              );\n            }\n\n            Promise.all([\n              sourcePromise,\n              languagePromise,\n              categoriesPromise,\n            ]).then(\n              function () {\n                processedResponse = _buildPresentedResponse(\n                  notification,\n                  edSourceName,\n                  edLanguage,\n                  edCategories,\n                );\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.CHAT_PRESENTED,\n                  processedResponse,\n                );\n                return processedResponse;\n              },\n              function (err) {\n                utils.logMessage(\n                  LOG_LEVELS.WARN,\n                  'Error resolving ETR API promises',\n                  err,\n                );\n                processedResponse = _buildPresentedResponse(\n                  notification,\n                  edSourceName,\n                  edLanguage,\n                  edCategories,\n                );\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.CHAT_PRESENTED,\n                  processedResponse,\n                );\n                return processedResponse;\n              },\n            );\n          });\n        } else {\n          // all values cached\n          edSourceName = sourceCache.name;\n          edLanguage = languageCache.name;\n          edCategories = categoryCache.names;\n          processedResponse = _buildPresentedResponse(\n            notification,\n            edSourceName,\n            edLanguage,\n            edCategories,\n          );\n          utils.fireCallback(\n            instance,\n            CALLBACK_TYPES.CHAT_PRESENTED,\n            processedResponse,\n          );\n          return processedResponse; // for testing\n        }\n      } else {\n        // not task\n        processedResponse = _buildPresentedResponse(\n          notification,\n          edSourceName,\n          edLanguage,\n          edCategories,\n        );\n        utils.fireCallback(\n          instance,\n          CALLBACK_TYPES.CHAT_PRESENTED,\n          processedResponse,\n        );\n        return processedResponse; // for testing\n      }\n    };\n\n    function _buildEtrHttpRequest(path, authorizationToken) {\n      var model = UIModel.getInstance();\n      var baseUrl = model.authHost + model.baseEtrUri;\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + authorizationToken,\n        },\n      };\n\n      return new HttpService(baseUrl).httpGet(path, params);\n    }\n\n    function _getEdValue(list, id) {\n      var idx;\n      var isCached = false;\n      var name = '';\n\n      if (list) {\n        for (idx = 0; idx < list.length; idx++) {\n          if (list[idx].id === id) {\n            name = list[idx].name;\n            isCached = true;\n          }\n        }\n      }\n\n      return { isCached: isCached, name: name };\n    }\n\n    function _getMultiEdValues(searchList, ids) {\n      var idIndex;\n      var edValue;\n      var isCached = false;\n      var names = [];\n\n      if (searchList) {\n        for (idIndex = 0; idIndex < ids.length; idIndex++) {\n          edValue = _getEdValue(searchList, ids[idIndex]);\n          names.push(edValue.name);\n          if (edValue.isCached) {\n            isCached = true;\n          }\n        }\n      }\n      return { isCached: isCached, names: names };\n    }\n\n    function _buildPresentedResponse(\n      notification,\n      edSourceName,\n      edLanguage,\n      edCategories,\n    ) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification, true);\n\n      formattedResponse.message = 'Received CHAT-PRESENTED notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.messageId = notif['@message_id'];\n      formattedResponse.accountId = utils.getText(notif, 'account_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.channelType = utils.getText(notif, 'channel_type');\n      formattedResponse.taskId = utils.getText(notif, 'task_id');\n      formattedResponse.chatQueueId = utils.getText(notif, 'chat_queue_id');\n      formattedResponse.chatQueueName = utils.getText(notif, 'chat_queue_name');\n      formattedResponse.allowAccept = utils.getText(notif, 'allow_accept');\n      formattedResponse.edAuthorScreenName = utils.getText(\n        notif,\n        'ed_author_screen_name',\n      );\n      formattedResponse.edCreatedAt = utils.getText(notif, 'ed_created_at');\n      formattedResponse.edSourceName = edSourceName;\n      formattedResponse.edLanguage = edLanguage;\n      formattedResponse.edCategories = edCategories;\n\n      return formattedResponse;\n    }\n\n    var ChatTypingNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"CHAT-TYPING\" packets from IntelliQueue.\n     * When this notification is received, the AgentUI will show the pending message\n     * so far from the client chat widget and typing notification.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"CHAT-TYPING\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"from\":{\"#text\":\"\"},\n     *          \"message\":{\"#text\":\"this is the message before actual send\"}\n     *          \"dequeue_agent_id\":{\"#text\":\"123\"}\n     *      }\n     *  }\n     */\n    ChatTypingNotification.prototype.processResponse = function (notification) {\n      var notif = notification.ui_notification;\n      var formattedResponse = utils.buildDefaultResponse(notification);\n\n      formattedResponse.message = 'Received CHAT-TYPING notification';\n      formattedResponse.status = 'OK';\n      formattedResponse.accountId = utils.getText(notif, 'account_id');\n      formattedResponse.uii = utils.getText(notif, 'uii');\n      formattedResponse.from = utils.getText(notif, 'from');\n      formattedResponse.type = utils.getText(notif, 'type');\n      formattedResponse.pendingMessage = utils.getText(notif, 'message');\n      formattedResponse.dequeueAgentId = utils.getText(\n        notif,\n        'dequeue_agent_id',\n      );\n\n      return formattedResponse;\n    };\n\n    var LoadMediaNotification = function () {};\n\n    /*\n     * Engage Digital Chat:\n     * This class is responsible for handling \"LOAD-MEDIA\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"LOAD-MEDIA\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"task_id\":{\"#text\":\"\"}\n     *          \"operation_id\":{\"#text\":\"\"}\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"session_id\":{\"#text\":\"2\"},\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"queue_dts\":{\"#text\":\"\"},\n     *          \"queue_time\":{\"#text\":\"\"},\n     *          \"chat_queue_id\":{\"#text\":\"\"},\n     *          \"chat_queue_name\":{\"#text\":\"\"},\n     *          \"chat_requeue_type\" : {\"#text\":\"\"}\n     *          \"channel_type\":{\"#text\":\"ENGAGE-DIGITAL\"},\n     *          \"idle_timeout\":{\"#text\":\"\"},\n     *          \"chat_dispositions\":{\n     *              \"disposition\":[\n     *                  { \"@disposition_id\":\"2\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"@email_template_id\":\"1\", \"#text\":\"Complete\"},\n     *                  { \"@disposition_id\":\"3\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"#text\":\"Requeue\"}\n     *              ]\n     *          },\n     *          \"chat_requeue_shortcuts\" :{\n     *              shortcut : [\n     *                {@chat_requeue_shortcut_id:\"3\", @name:\"test\", @rank:\"1\",@requeue_chat_queue_id:\"74\",@skill_id:\"\"}\n     *              ]\n     *          }\n     *      }\n     *  }\n     */\n    LoadMediaNotification.prototype.processResponse = function (notification) {\n      var notif = notification.ui_notification;\n\n      var dts = utils.getText(notif, 'queue_dts');\n      dts = new Date(dts.replace(' ', 'T'));\n\n      var newTask = utils.buildDefaultResponse(notification, true);\n\n      newTask.message = 'Received LOAD-MEDIA notification';\n      newTask.status = 'OK';\n      newTask.uii = utils.getText(notif, 'uii');\n      newTask.taskId = utils.getText(notif, 'task_id');\n      newTask.accountId = utils.getText(notif, 'account_id');\n      newTask.sessionId = utils.getText(notif, 'session_id');\n      newTask.agentId = utils.getText(notif, 'agent_id');\n      newTask.queueDts = dts;\n      newTask.queueTime = utils.getText(notif, 'queue_time');\n      newTask.chatQueueId = utils.getText(notif, 'chat_queue_id');\n      newTask.chatQueueName = utils.getText(notif, 'chat_queue_name');\n      newTask.chatRequeueType = utils.getText(notif, 'chat_requeue_type');\n      newTask.channelType = utils.getText(notif, 'channel_type');\n      newTask.idleTimeout = utils.getText(notif, 'idle_timeout');\n\n      newTask.requeueShortcuts = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_requeue_shortcuts',\n        'shortcut',\n      )[0];\n      newTask.chatDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_dispositions',\n        'disposition',\n      )[0];\n\n      if (newTask.chatDispositions && newTask.chatDispositions.disposition) {\n        newTask.chatDispositions.dispositions = [newTask.chatDispositions];\n      } else {\n        newTask.chatDispositions = newTask.chatDispositions.dispositions;\n      }\n\n      // convert numbers to boolean\n      if (newTask.chatDispositions) {\n        for (var d = 0; d < newTask.chatDispositions.length; d++) {\n          var disp = newTask.chatDispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.isSuccess = disp.isSuccess === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // Build token map\n      newTask.baggage = buildTaskTokenMap(newTask);\n\n      return newTask;\n    };\n\n    function buildTaskTokenMap(newTask) {\n      var tokens = {};\n      var model = UIModel.getInstance();\n\n      try {\n        tokens['chatQueueId'] = newTask.chatQueueId;\n        tokens['chatQueueName'] = newTask.chatQueueName;\n        tokens['uii'] = newTask.uii;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for basic chat info. ',\n          any,\n        );\n      }\n\n      try {\n        tokens['agentFirstName'] = model.agentSettings.firstName;\n        tokens['agentLastName'] = model.agentSettings.lastName;\n        tokens['agentExternalId'] = model.agentSettings.externalAgentId;\n        tokens['agentType'] = model.agentSettings.agentType;\n        tokens['agentEmail'] = model.agentSettings.email;\n        tokens['agentUserName'] = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    var NewChatNotification = function () {};\n\n    /*\n     * External Chat:\n     * This class is responsible for handling \"NEW-CHAT\" packets from IntelliQueue.\n     *\n     *  {\n     *      \"ui_notification\":{\n     *          \"@message_id\":\"IQ10012016081611595000289\",\n     *          \"@type\":\"NEW-CHAT\",\n     *          \"@destination\":\"IQ\",\n     *          \"@response_to\":\"\",\n     *          \"uii\":{\"#text\":\"201608161200240139000000000120\"},\n     *          \"account_id\":{\"#text\":\"99999999\"},\n     *          \"session_id\":{\"#text\":\"2\"},\n     *          \"agent_id\":{\"#text\":\"1180958\"},\n     *          \"queue_dts\":{\"#text\":\"\"},\n     *          \"queue_time\":{\"#text\":\"\"},\n     *          \"chat_queue_id\":{\"#text\":\"\"},\n     *          \"chat_queue_name\":{\"#text\":\"\"},\n     *          \"chat_requeue_type\" : {\"#text\":\"\"}\n     *          \"app_url\":{\"#text\":\"\"},\n     *          \"channel_type\":{\"#text\":\"\"},\n     *          \"ani\":{\"#text\":\"\"},\n     *          \"dnis\":{\"#text\":\"\"},\n     *          \"survey_pop_type\":{\"#text\":\"\"},\n     *          \"script_id\":{\"#text\":\"\"},\n     *          \"script_version\":{\"#text\":\"\"},\n     *          \"idle_timeout\":{\"#text\":\"\"},\n     *          \"is_monitoring\":{#text\":\"TRUE\"|\"FALSE\"},\n     *          \"monitored_agent_id\":{\"#text\":\"123\"| \"\"} <-- only populated if is_monitoring == TRUE\n     *          \"chat_dispositions\":{\n     *              \"disposition\":[\n     *                  { \"@disposition_id\":\"2\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"@email_template_id\":\"1\", \"#text\":\"Complete\"},\n     *                  { \"@disposition_id\":\"3\", \"@is_success\":\"true\", \"@is_complete\":\"false\", \"@is_default\"=\"0\", \"#text\":\"Requeue\"}\n     *              ]\n     *          },\n     *          \"chat_requeue_shortcuts\" :{\n     *              shortcut : [\n     *                {@chat_requeue_shortcut_id:\"3\", @name:\"test\", @rank:\"1\",@requeue_chat_queue_id:\"74\",@skill_id:\"\"}\n     *              ]\n     *          }\n     *          \"transcript\":{\n     *              \"message\":[\n     *                  { \"@from\":\"system\", \"@type\":\"SYSTEM\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"User1 connected\"},\n     *                  { \"@from\":\"dlbooks\", \"@type\":\"AGENT\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"Hello\"},\n     *                  { \"@from\":\"user1\", \"@type\":\"CLIENT\", \"@whisper\":\"FALSE\", \"@dts\":\"yyyy-MM-dd HH:mm:ss\", \"#text\":\"Hi\"}\n     *              ]\n     *          },\n     *          \"json_baggage\":{\"#text\":\"json_string_form_data\"}, <--- pre-form chat data\n     *      }\n     *  }\n     */\n    NewChatNotification.prototype.processResponse = function (notification) {\n      var notif = notification.ui_notification;\n\n      var dts = utils.getText(notif, 'queue_dts');\n      dts = new Date(dts.replace(' ', 'T'));\n\n      var newChat = utils.buildDefaultResponse(notification);\n      newChat.message = 'Received NEW-CHAT notification';\n      newChat.status = 'OK';\n      newChat.uii = utils.getText(notif, 'uii');\n      newChat.accountId = utils.getText(notif, 'account_id');\n      newChat.sessionId = utils.getText(notif, 'session_id');\n      newChat.agentId = utils.getText(notif, 'agent_id');\n      newChat.queueDts = dts;\n      newChat.queueTime = utils.getText(notif, 'queue_time');\n      newChat.chatQueueId = utils.getText(notif, 'chat_queue_id');\n      newChat.chatQueueName = utils.getText(notif, 'chat_queue_name');\n      newChat.chatRequeueType = utils.getText(notif, 'chat_requeue_type');\n      newChat.appUrl = utils.getText(notif, 'app_url');\n      newChat.channelType = utils.getText(notif, 'channel_type');\n      newChat.ani = utils.getText(notif, 'ani');\n      newChat.dnis = utils.getText(notif, 'dnis');\n      newChat.surveyPopType = utils.getText(notif, 'survey_pop_type');\n      newChat.scriptId = utils.getText(notif, 'script_id');\n      newChat.scriptVersion = utils.getText(notif, 'script_version');\n      newChat.idleTimeout = utils.getText(notif, 'idle_timeout');\n      newChat.isMonitoring = utils.getText(notif, 'is_monitoring');\n      newChat.monitoredAgentId = utils.getText(notif, 'monitored_agent_id');\n      newChat.preChatData = utils.getText(notif, 'json_baggage');\n\n      newChat.requeueShortcuts = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_requeue_shortcuts',\n        'shortcut',\n      )[0];\n      newChat.chatDispositions = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'chat_dispositions',\n        'disposition',\n      )[0];\n      newChat.transcript = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'transcript',\n        'message',\n      )[0];\n      newChat.baggage = utils.processResponseCollection(\n        notification,\n        'ui_notification',\n        'json_baggage',\n      )[0];\n\n      if (newChat.chatDispositions && newChat.chatDispositions.disposition) {\n        newChat.chatDispositions.dispositions = [newChat.chatDispositions];\n      } else {\n        newChat.chatDispositions = newChat.chatDispositions.dispositions;\n      }\n\n      if (newChat.transcript && newChat.transcript.message) {\n        newChat.transcript = [newChat.transcript];\n      } else {\n        newChat.transcript = newChat.transcript.messages;\n      }\n\n      if (newChat.preChatData) {\n        try {\n          newChat.preChatData = JSON.parse(newChat.preChatData);\n        } catch (err) {\n          utils.logMessage(\n            LOG_LEVELS.ERROR,\n            'Error parsing the pre-form chat data.',\n            notif,\n          );\n        }\n      }\n\n      // convert numbers to boolean\n      if (newChat.chatDispositions) {\n        for (var d = 0; d < newChat.chatDispositions.length; d++) {\n          var disp = newChat.chatDispositions[d];\n          disp.isComplete = disp.isComplete === '1';\n          disp.isSuccess = disp.isSuccess === '1';\n          disp.isDefault = disp.isDefault === '1';\n        }\n      }\n\n      // convert dates\n      if (newChat.transcript) {\n        for (var t = 0; t < newChat.transcript.length; t++) {\n          var msg = newChat.transcript[t];\n          if (msg.dts) {\n            msg.dts = new Date(msg.dts.replace(' ', 'T'));\n          }\n        }\n      }\n\n      // Build token map\n      newChat.baggage = buildChatTokenMap(notif, newChat);\n\n      return newChat;\n    };\n\n    function buildChatTokenMap(notif, newChat) {\n      var tokens = {};\n      var model = UIModel.getInstance();\n\n      if (newChat.preChatData) {\n        for (var prop in newChat.preChatData) {\n          if (newChat.preChatData.hasOwnProperty(prop)) {\n            tokens[prop] = newChat.preChatData[prop];\n          }\n        }\n      }\n\n      try {\n        tokens['chatQueueId'] = newChat.chatQueueId;\n        tokens['chatQueueName'] = newChat.chatQueueName;\n        tokens['ani'] = newChat.ani;\n        tokens['dnis'] = newChat.dnis;\n        tokens['uii'] = newChat.uii;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for basic chat info. ',\n          any,\n        );\n      }\n\n      try {\n        tokens['agentFirstName'] = model.agentSettings.firstName;\n        tokens['agentLastName'] = model.agentSettings.lastName;\n        tokens['agentExternalId'] = model.agentSettings.externalAgentId;\n        tokens['agentType'] = model.agentSettings.agentType;\n        tokens['agentEmail'] = model.agentSettings.email;\n        tokens['agentUserName'] = model.agentSettings.username;\n      } catch (any) {\n        console.error(\n          'There was an error parsing chat tokens for agent info. ',\n          any,\n        );\n      }\n\n      return tokens;\n    }\n\n    var AgentStats = function () {};\n\n    /*\n * This class is responsible for handling an Agent Stats packet rec'd from IntelliServices.\n * It will save a copy of it in the UIModel. Could be a single agent or array of agents.\n *\n  {\"ui_stats\":{\n       \"@type\":\"AGENT\",\n       \"agent\":{\n           \"@alt\":\"INBOUND\",\n           \"@atype\":\"AGENT\",\n           \"@avgtt\":\"00.0\",\n           \"@calls\":\"0\",\n           \"@da\":\"0\",\n           \"@droute\":\"6789050673\",\n           \"@f\":\"John\",\n           \"@gdesc\":\"\",\n           \"@gname\":\"\",\n           \"@id\":\"1856\",\n           \"@l\":\"Doe\",\n           \"@ldur\":\"6\",\n           \"@ltype\":\"INBOUND\",\n           \"@oh\":\"0\",\n           \"@pd\":\"0\",\n           \"@pdt\":\"0\",\n           \"@pres\":\"0\",\n           \"@rna\":\"0\",\n           \"@sdur\":\"6\",\n           \"@sp\":\"\",\n           \"@state\":\"AVAILABLE\",\n           \"@ttt\":\"0\",\n           \"@u\":\"jdoe\",\n           \"@uii\":\"\",\n           \"@util\":\"0.00\",\n           \"@call_duration:0\"\n       }\n     }\n  }\n */\n    AgentStats.prototype.processResponse = function (stats) {\n      var resp = stats.ui_stats.agent;\n      var agentStats = [];\n\n      if (!Array.isArray(resp)) {\n        resp = [resp];\n      }\n\n      try {\n        for (var i = 0; i < resp.length; i++) {\n          agentStats.push({\n            agentLoginType: resp[i]['@alt'],\n            agentType: resp[i]['@atype'],\n            avgTalkTime: resp[i]['@avgtt'],\n            calls: resp[i]['@calls'],\n            isDequeueAgent: resp[i]['@da'],\n            defaultRoute: resp[i]['@droute'],\n            firstName: resp[i]['@f'],\n            queueDesc: resp[i]['@gdesc'],\n            queueName: resp[i]['@gname'],\n            agentId: resp[i]['@id'],\n            lastName: resp[i]['@l'],\n            loginDuration: resp[i]['@ldur'],\n            loginType: resp[i]['@ltype'],\n            offHook: resp[i]['@oh'],\n            pendingDisp: resp[i]['@pd'],\n            pendingDispTime: resp[i]['@pdt'],\n            presented: resp[i]['@pres'],\n            rna: resp[i]['@rna'],\n            stateDuration: resp[i]['@sdur'],\n            skillProfileName: resp[i]['@sp'],\n            agentState: resp[i]['@state'],\n            totalTalkTime: resp[i]['@ttt'],\n            username: resp[i]['@u'],\n            uii: resp[i]['@uii'],\n            utilization: resp[i]['@util'],\n            callDuration: resp[i]['@call_duration'],\n          });\n        }\n      } catch (e) {}\n\n      UIModel.getInstance().agentStats = agentStats;\n      return agentStats;\n    };\n\n    var AgentDailyStats = function () {};\n\n    /*\n     * This class is responsible for handling an Agent Daily Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\"ui_stats\":{\n     *      \"@type\":\"AGENTDAILY\",\n     *      \"agent_id\":{\"#text\":\"1180723\"},\n     *      \"total_login_sessions\":{\"#text\":\"1\"},\n     *      \"total_calls_handled\":{\"#text\":\"0\"},\n     *      \"total_preview_dials\":{\"#text\":\"0\"},\n     *      \"total_manual_dials\":{\"#text\":\"0\"},\n     *      \"total_rna\":{\"#text\":\"0\"},\n     *      \"total_talk_time\":{\"#text\":\"0\"},\n     *      \"total_offhook_time\":{\"#text\":\"0\"},\n     *      \"total_login_time\":{\"#text\":\"7808\"},\n     *      \"total_success_dispositions\":{\"#text\":\"0\"}\n     *    }\n     * }\n     */\n    AgentDailyStats.prototype.processResponse = function (stats) {\n      var model = UIModel.getInstance().agentDailyStats;\n      var resp = stats.ui_stats;\n\n      model.agentId = utils.getText(resp, 'agent_id');\n      model.totalLoginSessions = utils.getText(resp, 'total_login_sessions');\n      model.totalChatsHandled = utils.getText(resp, 'total_chats_handled');\n      model.totalCallsHandled = utils.getText(resp, 'total_calls_handled');\n      model.totalPreviewDials = utils.getText(resp, 'total_preview_dials');\n      model.totalManualDials = utils.getText(resp, 'total_manual_dials');\n      model.totalRna = utils.getText(resp, 'total_rna');\n      model.totalSuccessDispositions = utils.getText(\n        resp,\n        'total_success_dispositions',\n      );\n\n      if (!model.totalTalkTime) {\n        // init daily stats to first stats packet if they don't exist\n        model.totalLoginTime = utils.getText(resp, 'total_login_time');\n        model.totalOffhookTime = utils.getText(resp, 'total_offhook_time');\n        model.totalTalkTime = utils.getText(resp, 'total_talk_time');\n        model.currCallTime = '0';\n      }\n\n      return model;\n    };\n\n    var CampaignStats = function () {};\n\n    /*\n     * This class is responsible for handling a Campaign Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\"ui_stats\":{\n     *      \"@type\":\"CAMPAIGN\",\n     *      \"campaign\":[\n     *          {\n     *              \"@a\":\"0\",\"@aba\":\"0\",\"@an\":\"0\",\"@av\":\"0\",\"@b\":\"0\",\"@c\":\"1\",\"@e\":\"0\",\"@f\":\"0\",\n     *              \"@id\":\"60275\",\"@int\":\"0\",\"@m\":\"0\",\"@na\":\"0\",\"@name\":\"Test Campaign\",\n     *              \"@p\":\"0\",\"@r\":\"1\",\"@s\":\"0\",\"@tc\":\"0\",\"@ttt\":\"0\"\n     *          },\n     *          {\n     *              \"@a\":\"0\",\"@aba\":\"0\",\"@an\":\"0\",\"@av\":\"0\",\"@b\":\"0\",\"@c\":\"0\",\"@e\":\"0\",\"@f\":\"0\",\n     *              \"@id\":\"60293\",\"@int\":\"0\",\"@m\":\"0\",\"@na\":\"0\",\"@name\":\"Test Campaign w\\\\ Search\",\n     *              \"@p\":\"0\",\"@r\":\"19\",\"@s\":\"0\",\"@tc\":\"0\",\"@ttt\":\"0\"\n     *          }\n     *     ],\n     *     \"totals\":{\n     *          \"noanswer\":{\"#text\":\"0\"},\n     *          \"totalConnects\":{\"#text\":\"0\"},\n     *          \"pending\":{\"#text\":\"0\"},\n     *          \"active\":{\"#text\":\"0\"},\n     *          \"error\":{\"#text\":\"0\"},\n     *          \"totalTalkTime\":{\"#text\":\"0\"},\n     *          \"answer\":{\"#text\":\"0\"},\n     *          \"abandon\":{\"#text\":\"0\"},\n     *          \"ready\":{\"#text\":\"20\"},\n     *          \"machine\":{\"#text\":\"0\"},\n     *          \"intercept\":{\"#text\":\"0\"},\n     *          \"busy\":{\"#text\":\"0\"},\n     *          \"complete\":{\"#text\":\"1\"},\n     *          \"fax\":{\"#text\":\"0\"}\n     *     }\n     *   }\n     * }\n     */\n    CampaignStats.prototype.processResponse = function (stats) {\n      var resp = stats.ui_stats;\n      var totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      var campaigns = [];\n      var campRaw = null;\n\n      if (!Array.isArray(resp.campaign)) {\n        resp.campaign = [resp.campaign];\n      }\n\n      for (var c = 0; c < resp.campaign.length; c++) {\n        campRaw = resp.campaign[c];\n\n        if (campRaw == null) {\n          continue;\n        }\n\n        campaigns.push({\n          active: campRaw['@a'],\n          abandon: campRaw['@aba'],\n          answer: campRaw['@an'],\n          available: campRaw['@av'],\n          busy: campRaw['@b'],\n          complete: campRaw['@c'],\n          error: campRaw['@e'],\n          fax: campRaw['@f'],\n          campaignId: campRaw['@id'],\n          intercept: campRaw['@int'],\n          machine: campRaw['@m'],\n          noanswer: campRaw['@na'],\n          campaignName: campRaw['@name'],\n          pending: campRaw['@p'],\n          ready: campRaw['@r'],\n          staffed: campRaw['@s'],\n          totalConnects: campRaw['@tc'],\n          totalTalkTime: campRaw['@ttt'],\n        });\n      }\n\n      var campaignStats = {\n        type: resp['@type'],\n        campaigns: campaigns,\n        totals: totals,\n      };\n\n      UIModel.getInstance().campaignStats = campaignStats;\n\n      return campaignStats;\n    };\n\n    var ChatQueueStats = function () {};\n\n    /*\n     * This class is responsible for handling an Chat Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     *{\n     *  \"ui_stats\": {\n     *  \"@type\": \"CHAT\",\n     *  \"chatQueue\": [\n     *      {\n     *          \"@active\": \"1\",\n     *          \"@available\": \"0\",\n     *          \"@avgAbandon\": \"00.0\",\n     *          \"@avgChatTime\": \"00.0\",\n     *          \"@avgQueueTime\": \"00.0\",\n     *          \"@chatQueueId\": \"1\",\n     *          \"@chatQueueName\": \"testing chat quuee\",\n     *          \"@deflected\": \"0\",\n     *          \"@inQueue\": \"0\",\n     *          \"@longestInQueue\": \"0\",\n     *          \"@presented\": \"0\",\n     *          \"@routing\": \"0\",\n     *          \"@staffed\": \"0\",\n     *          \"@totalAbandonTime\": \"0\",\n     *          \"@totalAnswerTime\": \"0\",\n     *          \"@totalChatTime\": \"0\",\n     *          \"@totalQueueTime\": \"0\",\n     *          \"@utilization\": \"00.0\"\n     *      },\n     *      {\n     *          \"@active\": \"0\",\n     *          \"@available\": \"0\",\n     *          \"@avgAbandon\": \"00.0\",\n     *          \"@avgChatTime\": \"00.0\",\n     *          \"@avgQueueTime\": \"00.0\",\n     *          \"@chatQueueId\": \"3\",\n     *          \"@chatQueueName\": \"testing test\",\n     *          \"@deflected\": \"0\",\n     *          \"@inQueue\": \"0\",\n     *          \"@longestInQueue\": \"0\",\n     *          \"@presented\": \"0\",\n     *          \"@routing\": \"0\",\n     *          \"@staffed\": \"0\",\n     *          \"@totalAbandonTime\": \"0\",\n     *          \"@totalAnswerTime\": \"0\",\n     *          \"@totalChatTime\": \"0\",\n     *          \"@totalQueueTime\": \"0\",\n     *          \"@utilization\": \"00.0\"\n     *      }\n     *  ],\n     *  \"totals\": {\n     *      \"routing\": {\"#text\": \"0\"},\n     *      \"ttotalAnswerTime\": {\"#text\": \"0\"},\n     *      \"inQueue\": { \"#text\": \"0\"},\n     *      \"ttotalChatTime\": {\"#text\": \"0\"},\n     *      \"ttotalAbandonTime\": {\"#text\": \"0\"},\n     *      \"presented\": {\"#text\": \"0},\n     *      \"accepted\": {\"#text\": \"0\"},\n     *      \"deflected\": {\"#text\": \"0\"},\n     *      \"active\": {\"#text\": \"1\"},\n     *      \"abandoned\": {\"#text\": \"0\"},\n     *      \"ttotalQueueTime\": {\"#text\": \"0\"}\n     *   }\n     *  }\n     *}\n     */\n    ChatQueueStats.prototype.processResponse = function (stats) {\n      var resp = stats.ui_stats;\n      var totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      var chatQueues = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'chatQueue',\n      );\n\n      var chatQueueStats = {\n        type: resp['@type'],\n        chatQueues: chatQueues,\n        totals: totals,\n      };\n\n      UIModel.getInstance().chatQueueStats = chatQueueStats;\n\n      return chatQueueStats;\n    };\n\n    var QueueStats = function () {};\n\n    /*\n     * This class is responsible for handling an Queue Stats packet rec'd from IntelliServices.\n     * It will save a copy of it in the UIModel.\n     *\n     * {\n     *   \"ui_stats\":{\n     *       \"@type\":\"GATE\",\n     *       \"gate\":{\n     *           \"@aba\":\"0\",\"@active\":\"0\",\"@ans\":\"0\",\"@asa\":\"00.0\",\"@avail\":\"2\",\n     *           \"@avga\":\"00.0\",\"@avgq\":\"00.0\",\"@avgt\":\"00.0\",\"@def\":\"0\",\"@id\":\"12126\",\n     *           \"@inq\":\"0\",\"@long_c\":\"0\",\"@longq\":\"0\",\"@name\":\"Cris inbound\",\n     *           \"@pres\":\"0\",\"@route\":\"0\",\"@short_aba\":\"0\",\"@short_c\":\"0\",\"@sla\":\"100.0\",\n     *           \"@sla_f\":\"0\",\"@sla_p\":\"0\",\"@staff\":\"2\",\"@t_aba\":\"0\",\"@t_q\":\"0\",\"@t_soa\":\"0\",\"@util\":\"00.0\"\n     *       },\n     *       \"totals\":{\n     *           \"inQueue\":{\"#text\":\"0\"},\n     *           \"answered\":{\"#text\":\"0\"},\n     *           \"totalABATime\":{\"#text\":\"0\"},\n     *           \"active\":{\"#text\":\"0\"},\n     *           \"longCall\":{\"#text\":\"0\"},\n     *           \"shortCall\":{\"#text\":\"0\"},\n     *           \"slaPass\":{\"#text\":\"0\"},\n     *           \"totalQueueTime\":{\"#text\":\"0\"},\n     *           \"routing\":{\"#text\":\"0\"},\n     *           \"totalTalkTime\":{\"#text\":\"0\"},\n     *           \"shortAbandon\":{\"#text\":\"0\"},\n     *           \"presented\":{\"#text\":\"0\"},\n     *           \"totalSOA\":{\"#text\":\"0\"},\n     *           \"slaFail\":{\"#text\":\"0\"},\n     *           \"deflected\":{\"#text\":\"0\"},\n     *           \"abandoned\":{\"#text\":\"0\"}\n     *      }\n     *   }\n     * }\n     */\n    QueueStats.prototype.processResponse = function (stats) {\n      var resp = stats.ui_stats;\n      var totals = utils.processResponseCollection(\n        stats,\n        'ui_stats',\n        'totals',\n      )[0];\n      var queues = [];\n      var gateRaw = {};\n\n      if (!Array.isArray(resp.gate)) {\n        resp.gate = [resp.gate];\n      }\n\n      for (var c = 0; c < resp.gate.length; c++) {\n        gateRaw = resp.gate[c];\n        if (gateRaw == null) {\n          continue;\n        }\n\n        queues.push({\n          abandon: gateRaw['@aba'],\n          active: gateRaw['@active'],\n          answer: gateRaw['@ans'],\n          asa: gateRaw['@asa'],\n          available: gateRaw['@avail'],\n          avgAbandon: gateRaw['@avga'],\n          avgQueue: gateRaw['@avgq'],\n          avgTalk: gateRaw['@avgt'],\n          deflected: gateRaw['@def'],\n          queueId: gateRaw['@id'],\n          inQueue: gateRaw['@inq'],\n          longCall: gateRaw['@long_c'],\n          longestInQueue: gateRaw['@longq'],\n          queueName: gateRaw['@name'],\n          presented: gateRaw['@pres'],\n          routing: gateRaw['@route'],\n          shortAbandon: gateRaw['@short_aba'],\n          shortCall: gateRaw['@short_c'],\n          sla: gateRaw['@sla'],\n          slaPass: gateRaw['@sla_p'],\n          slaFail: gateRaw['@sla_f'],\n          staffed: gateRaw['@staff'],\n          tAbandonTime: gateRaw['@t_aba'],\n          tQueueTime: gateRaw['@t_q'],\n          tSpeedOfAnswer: gateRaw['@t_soa'],\n          utilization: gateRaw['@util'],\n        });\n      }\n\n      var queueStats = {\n        type: resp['@type'],\n        queues: queues,\n        totals: totals,\n      };\n\n      UIModel.getInstance().queueStats = queueStats;\n\n      return queueStats;\n    };\n\n    var UIModel = (function () {\n      var instance;\n\n      function init() {\n        // Singleton\n\n        // Private methods and variables here //\n        //function privateMethod(){\n        //    console.log( \"I am private\" );\n        //}\n        //\n        //var privateVariable = \"I'm also private\";\n\n        // Public methods and variables\n        return {\n          currentCall: {}, // save the NEW-CALL notification in parsed form\n          pendingNewCallSessions: {}, // save any pending call sessions, in case the new call packet hasn't arrived\n          callTokens: {}, // Stores a map of all tokens for a call\n          callbacks: [],\n          libraryInstance: null, // Initialized to the library instance on startup\n          pingIntervalId: null, // The id of the timer used to send ping-call messages\n          statsIntervalId: null, // The id of the timer used to send stats request messages\n          pingStatIntervalId: null, // The id of the timer used to send ping-call beat messages\n          agentDailyIntervalId: null, // The id of the timer used to update some agent daily stats values\n          reconnectIntervalId: null, // The id of the timer used to try reconnecting the socket\n          waitingForAddSession: null,\n          authHost: window.location.origin, // default to protocol + hostname + port\n          socketProtocol: 'wss://', // default to secure socket unless local test flag passed in on initialization\n          baseAuthUri: '/api/auth/', // the path to engage-auth e.g.: http://localhost:81/api/auth/ or window.location.origin + \"/api/auth/\",\n          baseApiUri: '/api/v1/', // the path to engage-api\n          baseEtrUri: '/platform/api/ed-task-routing/v1/', // the path to ETR task routing endpoints\n\n          // internal chat requests\n          chatAliasRequest: null,\n          chatRoomRequest: null,\n          chatSendRequest: null,\n          supervisorListRequest: null,\n          chatRoomStateRequest: new ChatRoomStateRequest(),\n\n          //multi-socket\n          multiSocketRequest: new MultiSocketRequest(),\n          dataStore: new LocalStorageService('agentSDK'),\n\n          // external chat requests/notifications\n          chatCancelledNotification: new ChatCancelledNotification(),\n          chatActiveNotification: new ChatActiveNotification(),\n          chatInactiveNotification: new ChatInactiveNotification(),\n          chatDispositionRequest: null,\n          chatMessageRequest: new ChatMessageRequest(),\n          chatPresentedNotification: new ChatPresentedNotification(),\n          chatPresentedRequest: null,\n          chatRequeueRequest: null,\n          chatTypingNotification: new ChatTypingNotification(),\n          chatTypingRequest: null,\n          newChatNotification: new NewChatNotification(),\n          loadMediaNotification: new LoadMediaNotification(),\n          chatAgentAssignFailureNotification: new ChatAgentAssignFailureNotification(),\n          chatClientReconnectNotification: new ChatClientReconnectNotification(),\n\n          // request instances\n          agentStateRequest: null,\n          chatStateRequest: null,\n          ackRequest: new AckRequest(),\n          bargeInRequest: null,\n          callNotesRequest: null,\n          callbacksPendingRequest: null,\n          campaignDispositionsRequest: null,\n          loginRequest: null,\n          coldXferRequest: null,\n          dispositionRequest: null,\n          dispositionManualPassRequest: null,\n          hangupRequest: null,\n          holdRequest: null,\n          leadHistoryRequest: null,\n          leadInsertRequest: null,\n          leadUpdateRequest: null,\n          logoutRequest: null,\n          authenticateRequest: null, // get RC access token\n          loginPhase1Request: null,\n          offhookInitRequest: null,\n          offhookTermRequest: null,\n          oneToOneOutdialRequest: null,\n          oneToOneOutdialCancelRequest: null,\n          pauseRecordRequest: null,\n          pingCallRequest: null,\n          previewDialRequest: null,\n          reconnectRequest: null,\n          recordRequest: null,\n          requeueRequest: null,\n          statsRequest: null,\n          tcpaSafeRequest: null,\n          warmXferRequest: null,\n          warmXferCancelRequest: null,\n          chatListRequest: null,\n          directAgentTransferListRequest: null,\n          directAgentTransferRequest: null,\n          webRTCRequest: null,\n          searchDirectoryRequest: null,\n          extensionPresenceRequest: null,\n\n          // response packets\n          agentStatePacket: null,\n          chatStatePacket: null,\n          loginPacket: null,\n          currentCallPacket: null,\n          authenticatePacket: null,\n          loginPhase1Packet: null,\n          offhookInitPacket: null,\n          offhookTermPacket: null,\n          transferSessions: {},\n          chatListResponse: null,\n\n          // notification packets\n          addSessionNotification: new AddSessionNotification(),\n          dialGroupChangeNotification: new DialGroupChangeNotification(),\n          dialGroupChangePendingNotification: new DialGroupChangePendingNotification(),\n          dropSessionNotification: new DropSessionNotification(),\n          earlyUiiNotification: new EarlyUiiNotification(),\n          endCallNotification: new EndCallNotification(),\n          gatesChangeNotification: new GatesChangeNotification(),\n          genericNotification: new GenericNotification(),\n          newCallNotification: new NewCallNotification(),\n\n          // stats packets\n          agentStatsPacket: new AgentStats(),\n          agentDailyStatsPacket: new AgentDailyStats(),\n          queueStatsPacket: new QueueStats(),\n          campaignStatsPacket: new CampaignStats(),\n          chatQueueStatsPacket: new ChatQueueStats(),\n\n          // application state\n          applicationSettings: {\n            availableCountries: [],\n            isLoggedInIS: false, // a check for whether or not user is logged in with IntelliServices\n            socketConnected: false,\n            socketDest: '',\n            isTcpaSafeMode: false, // Comes in at the account-level - will get set to true if this interface should be in tcpa-safe-mode only.\n            isSso: false, // Passed in on phase 1 login response, if agent signed in through RC single sign-on path set to true\n            dialDestType: '', // What type of phone are we setting up: e.g. \"RC_SOFTPHONE\", \"LEGACY_SOFTPHONE\", \"RC_PHONE\" (for RC office ext)// Comes in at the account-level - will get set to true if this interface should be in tcpa-safe-mode only.\n            allowMultiSocket: false, // Determines whether agent can open a new socket under the same login\n            edSources: {}, // Cache for ED sources, loaded when first task received. Object indexed by mainAccountId, then array of all sources\n            edLanguages: {}, // Cache for ED language, loaded when first task received. Object indexed by mainAccountId, then array of all languages\n            edCategories: {}, // Cache for ED categories, loaded when first task received. Object indexed by mainAccountId, then array of all categories\n          },\n\n          // stat objects\n          agentStats: [],\n          agentDailyStats: {},\n          campaignStats: {},\n          queueStats: {},\n          chatQueueStats: {},\n\n          // current agent settings\n          agentSettings: {\n            accountId: null, // account agent belongs to\n            agentId: 0,\n            agentPassword: '', //agent Password\n            agentType: 'AGENT', // AGENT | SUPERVISOR\n            altDefaultLoginDest: '',\n            availableAgentStates: [],\n            callerIds: [],\n            callState: null, // display the current state of the call\n            corporateDirectory: false,\n            consultCall: false, //consult call allow\n            currentState: 'OFFLINE', // Agent system/base state\n            currentStateLabel: '', // Agent aux state label\n            defaultLoginDest: '',\n            dialDest: '', // Destination agent is logged in with for offhook session, set on configure response, if multi values in format \"xxxx|,,xxxx\"\n            email: '',\n            externalAgentId: '',\n            firstName: '',\n            guid: '', // unique key generated on login, used for accessing spring endpoints\n            isLoggedIn: false, // agent is logged in to the platform\n            isOffhook: false, // track whether or not the agent has an active offhook session\n            isMonitoring: false, // track whether or not the offhook session is for monitoring\n            initLoginState: 'AVAILABLE', // state agent is placed in on successful login\n            initLoginStateLabel: 'Available', // state label for agent on successful login\n            isOutboundPrepay: false, // determines if agent is a prepay agent\n            lastName: '',\n            loginDTS: null, // date and time of the final login phase (IQ)\n            loginType: 'NO-SELECTION', // Could be INBOUND | OUTBOUND | BLENDED | NO-SELECTION, set on login response\n            maxBreakTime: -1,\n            maxLunchTime: -1,\n            onCall: false, // true if agent is on an active call\n            onManualOutdial: false, // true if agent is on a manual outdial call\n            outboundManualDefaultRingtime: '30',\n            pendingCallbacks: [],\n            pendingDialGroupChange: 0, // Set to Dial Group Id if we are waiting to change dial groups until agent ends call\n            phoneLoginPin: '',\n            realAgentType: 'AGENT',\n            supervisors: [], // Used for agent chat\n            totalCalls: 0, // Call counter that is incremented every time a new session is received\n            transferNumber: '', // May be pre-populated by an external interface, if so, the transfer functionality uses it\n            updateDGFromAdminUI: false, // if pending Dial Group change came from AdminUI, set to true (only used if request is pending)\n            updateLoginMode: false, // gets set to true when doing an update login (for events control)\n            username: '', // Agent's username\n            wasMonitoring: false, // used to track if the last call was a monitoring call\n          },\n\n          // current agent permissions\n          agentPermissions: {\n            allowBlended: true, // Controls whether or not the agent can log into both inbound queues and an outbound dialgroup\n            allowCallControl: true, // Set from the the login response packet\n            allowChat: false, // Controls whether or not the agent has the option to open the Chat Queue Manager\n            enableChat: false, // Controls whether or not the agent has legacy chat and SMS access on the account level\n            allowCrossQueueRequeue: false, // Controls whether or not the agent can requeue to a different queue group\n            allowInbound: true, // Controls whether or not the agent can log into an inbound queue\n            allowLeadInserts: false, // Controls whether or not the agents can insert leads\n            allowLeadSearch: false, // Controlled by the dial-group allow_lead_search setting. Enables or disables the lead search\n            allowLoginControl: true, // Controls whether or not the agent can log in\n            allowLoginUpdates: true, // Controls whether or not the agent can update their login\n            allowManualCalls: true, // Controls whether or not the agents have the option to make a manual outbound call\n            allowManualPass: true, // Controls whether or not the agent has the option to make a manual pass on a lead\n            allowManualIntlCalls: false, // Controls whether or not the agent has the option to make international manual outbound calls\n            allowManualOutboundGates: false, // Controls whether or not the agent has the option to select queues to convert manual outbound calls to\n            allowOffHook: true, // Controls whether or not the agents can go offhook\n            allowOutbound: true, // Controls whether or not the agent can log into an outdial group\n            allowPreviewLeadFilters: false, // Controlled by the dial-group allow_preview_lead_filters setting. Enables or disables the filters on the preview style forms\n            allowLeadUpdatesByCampaign: {}, // For each campaign ID, store whether leads can be updated\n            disableSupervisorMonitoring: true, // Controls whether or not a supervisor can view agent stats\n            progressiveEnabled: false, // Preview dial feature that enables auto-calls from the preview window.\n            requireFetchedLeadsCalled: false, // Controlled by the dial-group require_fetched_leads_called setting. Enables or disables the requirement to only fetch new leads when current leads are called or expired. ONly for Preview or TCPA-SAFE.\n            showLeadHistory: true, // Controls whether or not the agents can view lead history\n            enableTaskMode: false, // Controls whether or not the agent has access to Digital task mode\n            enableFolderMode: false, // Controls whether or not the agent has access to Digital folder mode\n          },\n\n          // chat\n          chatSettings: {\n            availableChatQueues: [], // List of all chat queues agent has access to, set on login\n            availableChatRooms: [], // List of all chat rooms agent has access to, set on login\n            chatQueues: [], // Array of chat queues agent is signed into\n            alias: '', // Chat alias, on-login this is the UID, but is changed if the user changes it\n          },\n\n          // connection objects\n          connectionSettings: {\n            hashCode: '', // used specifically for reconnects\n            reconnect: false, // variable tracks the type of login, on init it's false...once connected it's set to true\n            isMultiSocket: false,\n          },\n\n          // inbound settings\n          inboundSettings: {\n            availableQueues: [], // array of queues agent has access to, set on login\n            availableSkillProfiles: [], // array of skill profiles agent has access to, set on login\n            queues: [], // array of queues agent is signed into, set on config response\n            skillProfile: {}, // The skill profile the agent is signed into, set on config response\n          },\n\n          // outbound settings\n          outboundSettings: {\n            availableCampaigns: [], // array of campaigns agent has access to, set on login\n            availableOutdialGroups: [], // array of dial groups agent has access to, set on login\n            insertCampaigns: [],\n            defaultDialGroup: 0,\n            outdialGroup: {}, // dial group agent is signed into\n            previewDialLeads: [], // list of leads returned from preview dial request\n            tcpaSafeLeads: [], // list of leads returned from tcpa safe request\n            campaignDispositions: [], // list of campaign dispositions for specific campaign\n          },\n\n          scriptSettings: {\n            availableScripts: [], // array of all scripts associated with any campaigns or queues agent is logged into\n            loadedScripts: {}, // stores script data by script id e.g. {1:{}, 32:{}}\n          },\n\n          softphoneSettings: {\n            webRtc: null, // stores the CFSimpleSip object\n            isRegistered: false, // whether or not the softphone is currently registered\n            muteActive: false, // whether or not the softphone is muted\n            registerPending: null, // timeout to trigger no register response\n            maintainOH: false, // based on the configurable agent setting to keep offhook session after ending call\n            autoStartOH: false, // determines whether or not to start an offhook session automatically after softphone registrar reconnect\n            wsServers: [], // current sip server domain + user credentials, set as array for SIP.js ua object\n            sipInfo: [], // array of sip server domains + user credentials for softphone registration, retrieved from engage-auth\n            uri: '', // username + @ + domain\n            displayName: '', // username - Used to register softphone with freeswitch (legacy)\n            authorizationUser: '', // username - Used to register softphone with freeswitch (legacy)\n            sipPassword: '', // password for sip softphone registration\n            sipDialDest: '', // dialDest used for softphone connection\n            attemptingSoftphoneReconnect: false, // set to true when attempting to rotate softphone registrar and reconnect\n            //manualSoftphoneReconnect: false,     // set to true when agent triggered registrar rotation\n            lastSipFetchTime: 0, //set current time when sip registration info fetched.\n          },\n\n          // Filtered Directory\n          filteredDirectory: {\n            rcAccountId: '',\n            records: [],\n          },\n\n          extensionPresenceResponse: [],\n\n          // Public methods\n          incrementTotalCalls: function () {\n            this.agentSettings.totalCalls = this.agentSettings.totalCalls + 1;\n          },\n        };\n      }\n\n      return {\n        // Get the Singleton instance if one exists\n        // or create one if it doesn't\n        getInstance: function () {\n          if (!instance) {\n            instance = init();\n          }\n          return instance;\n        },\n\n        resetInstance: function () {\n          instance = null;\n        },\n      };\n    })();\n\n    var LocalStorageService = function (name) {\n      if (!window.localStorage) {\n        console.log('Browser does not support HTML5 Web Storage');\n      }\n      this.prefix = name + ':';\n    };\n    LocalStorageService.prototype.save = function (key, value) {\n      // TODO: that window.localStorage is add by ringcentral-integration\n      if (!window.localStorage || !key || !value) {\n        console.log('Missing parameters key or value on add');\n        return false;\n      }\n      window.localStorage.setItem(this.prefix + key, JSON.stringify(value));\n    };\n    LocalStorageService.prototype.get = function (key) {\n      // TODO: that window.localStorage is add by ringcentral-integration\n      if (\n        !window.localStorage ||\n        !key ||\n        !window.localStorage.getItem(this.prefix + key)\n      ) {\n        console.log('Missing parameter key on retrieve');\n        return false;\n      }\n      return window.localStorage.getItem(this.prefix + key);\n    };\n\n    LocalStorageService.prototype.remove = function (key) {\n      // TODO: that window.localStorage is add by ringcentral-integration\n      if (\n        !window.localStorage ||\n        !key ||\n        !window.localStorage.getItem(this.prefix + key)\n      ) {\n        console.log('Missing parameter key on remove');\n        return false;\n      }\n      window.localStorage.removeItem(this.prefix + key);\n    };\n    // --------------------------\n    // BroadcastChannelHelper.js\n    // --------------------------\n    var broadcastChannelHelper = {\n      // Generate handlers to request / response BroadcastChannels\n      //\n      requestChannel: null,\n      responseChannel: null,\n      currentCallMessageId: null,\n      currentCallRequestCallback: null,\n\n      // Registers the request / response channels\n      //\n      init: function () {\n        if (this.requestChannel != null) {\n          return;\n        }\n\n        var self = this;\n        this.requestChannel = new BroadcastChannel('ev-multisocket-request');\n        this.responseChannel = new BroadcastChannel('ev-multisocket-response');\n\n        // Listen for requests coming from the requestChannel\n        //\n        this.requestChannel.onmessage = function (e) {\n          var type = e.data.type;\n          var messageId = e.data.messageId;\n\n          switch (type) {\n            case 'currentCall':\n              self._sendCurrentCall(messageId);\n              break;\n          }\n        };\n\n        // Listen for requests coming from the responseChannel\n        //\n        this.responseChannel.onmessage = function (e) {\n          var type = e.data.type;\n\n          switch (type) {\n            case 'currentCall':\n              self._processCurrentCallResponse(e.data.data, e.data.messageId);\n          }\n        };\n      },\n\n      destroy: function () {\n        if (this.requestChannel == null) {\n          return;\n        }\n\n        this.requestChannel.onmessage = null;\n        this.responseChannel.onmessage = null;\n\n        this.requestChannel.close();\n        this.responseChannel.close();\n\n        this.requestChannel = null;\n        this.responseChannel = null;\n      },\n\n      // ----------------------------------------------------\n      // Current Call, Request & Response\n      // ----------------------------------------------------\n\n      // When a new tab opens and needs to get the current call, it can do so with this method.  Passing\n      // a callback function to response with (could be a Promise if we are using them in SDK). Once\n      // a response is retrieved, it will be handled in the \"processCurrentCall\" method, and returned\n      // back to the original callback function\n      //\n      requestCurrentCall: function (fn) {\n        this.currentCallMessageId = Math.random();\n        this.currentCallRequestCallback = fn;\n\n        this.requestChannel.postMessage({\n          type: 'currentCall',\n          messageId: this.currentCallMessageId,\n        });\n      },\n\n      // Any instance that has knowledge of the current call can respond to the request\n      //\n      _sendCurrentCall: function (messageId) {\n        if (UIModel.getInstance().currentCall != null) {\n          var obj = {\n            type: 'currentCall',\n            messageId: messageId,\n            data: UIModel.getInstance().currentCall,\n          };\n\n          this.responseChannel.postMessage(obj);\n        }\n      },\n\n      // When a current call response is received, every tab will try to process it.  Only the original\n      // requestor will be able to process it successfully.\n      //\n      _processCurrentCallResponse: function (data, messageId) {\n        if (this.currentCallMessageId === messageId) {\n          // Set the current call model\n          UIModel.getInstance().currentCall = data;\n\n          // Alert the original method that our data is now available.\n          if (this.currentCallRequestCallback != null) {\n            this.currentCallRequestCallback(data);\n          }\n\n          // Null out properties - this ensure subsequent responses from other tabs will be ignored.\n          this.currentCallMessageId = null;\n          this.currentCallRequestCallback = null;\n        }\n      },\n    };\n\n    function HttpService(apiBase) {\n      this.XMLHttpRequest = window.XMLHttpRequest;\n      this.encodeURIComponent = window.encodeURIComponent;\n      this.apiBase = apiBase || 'http://localhost:81';\n\n      var that = this;\n\n      /**\n       * Makes a GET request to Engage Auth.\n       *\n       * @param {string} path - Relative path to append to apiUrl.\n       * @param {Object} config - Object describing different properties of the request.\n       * @returns {Promise} Promise that represents status of the request. Resolves if server responds with 200 status code, and is rejected otherwise.\n       */\n      this.httpGet = function (path, config) {\n        return new Promise(function (resolve, reject) {\n          var req = new that.XMLHttpRequest();\n          var queryParams = '';\n          if (config.queryParams) {\n            queryParams = '?' + _getUriEncodedParams(config.queryParams);\n          }\n          req.open('GET', that.apiBase + path + queryParams);\n          _addHeaders(config, req);\n          _addCompletionListeners(resolve, reject, req);\n          req.send();\n        });\n      };\n\n      /**\n       * Makes a GET request to Engage Auth.\n       *\n       * @param {string} path - Relative path to append to apiUrl.\n       * @param {Object} config - Object describing different properties of the request.\n       * @returns {Promise} Promise that represents status of the request. Resolves if server responds with 200 status code, and is rejected otherwise.\n       */\n      this.httpPost = function (path, config) {\n        return new Promise(function (resolve, reject) {\n          var req = new that.XMLHttpRequest();\n          var queryParams = '';\n          if (config.queryParams) {\n            queryParams = '?' + _getUriEncodedParams(config.queryParams);\n          }\n          req.open('POST', that.apiBase + path + queryParams);\n          _addHeaders(config, req);\n          _addCompletionListeners(resolve, reject, req);\n          req.send(_getUriEncodedBody(config));\n        });\n      };\n\n      /**\n       * Utility method used to check if an argument is actually an object.\n       *\n       * @param {*} obj\n       */\n      function _isObj(obj) {\n        return typeof obj === 'object' && obj !== null;\n      }\n\n      /**\n       * Adds headers to XMLHttpRequest based on configuration object.\n       *\n       * @param {Object} config - Config object passed to HttpService methods.\n       * @param {XMLHttpRequest} req - Instance of XMLHttpRequest that needs to be configured.\n       */\n      function _addHeaders(config, req) {\n        if (!_isObj(config)) {\n          return;\n        }\n\n        var headers = config.headers;\n\n        if (!_isObj(headers)) {\n          return;\n        }\n\n        for (var key in headers) {\n          req.setRequestHeader(key, headers[key]);\n        }\n      }\n\n      /**\n       * Configures an XMLHttpRequest object to properly resolve/reject a promise, depending on the outcome of the request.\n       *\n       * @param {Function} resolve - Resolve callback function from a promise. Invoked if the request completed successfully.\n       * @param {Function} reject - Reject callback function from a promise. Invoked if the request failed.\n       * @param {XMLHttpRequest} req - Instance of XMLHttpRequest that will be configured.\n       */\n      function _addCompletionListeners(resolve, reject, req) {\n        req.addEventListener('error', function (e) {\n          reject(e);\n        });\n        req.addEventListener('timeout', function () {\n          reject(new Error('request timeout'));\n        });\n        req.addEventListener('load', function () {\n          if (this.status !== 200) {\n            reject({\n              status: this.status,\n              response: this.responseText,\n            });\n          } else {\n            resolve({\n              status: this.status,\n              response: this.responseText,\n            });\n          }\n        });\n      }\n\n      /**\n       * Takes a config object and serializes/URI encodes the contents of the body property. If the \"Content-Type\" header is set\n       * to \"application/json\", it encodes the payload as JSON. Otherwise, we assume that the payload should be x-www-form-urlencoded.\n       */\n      function _getUriEncodedBody(config) {\n        var contentType =\n          config && config.headers && config.headers['Content-Type'];\n        var body = (config && config.body) || '';\n\n        if (contentType === 'application/json') {\n          body = JSON.stringify(body);\n        } else {\n          if (_isObj(body)) {\n            body = _getUriEncodedParams(body);\n          }\n        }\n\n        return body;\n      }\n\n      function _getUriEncodedParams(params) {\n        if (!_isObj(params)) {\n          return;\n        }\n\n        return Object.keys(params)\n          .map(function (key) {\n            return (\n              encodeURIComponent(key) + '=' + encodeURIComponent(params[key])\n            );\n          })\n          .join('&');\n      }\n    }\n\n    function NewCallUtils(instance, data) {\n      this.instance = instance;\n      this.data = data;\n\n      var that = this;\n\n      this.setupAddSessionCallback = function () {\n        var sessionUii = utils.getText(data.ui_notification, 'uii'),\n          sessionId = utils.getText(data.ui_notification, 'session_id'),\n          call = UIModel.getInstance().currentCall;\n\n        console.log(sessionUii + ' ADD SESSION ' + sessionId);\n\n        if (call.uii === sessionUii) {\n          // we already have a new call packet for this session\n          _delayedAddSessionCallback(that.instance, that.data);\n        } else {\n          // uii mismatch, but call has been dispositioned\n          UIModel.getInstance().pendingNewCallSessions[sessionUii] =\n            UIModel.getInstance().pendingNewCallSessions[sessionUii] || {};\n          UIModel.getInstance().pendingNewCallSessions[sessionUii][\n            sessionId\n          ] = that;\n        }\n      };\n\n      this.processSessionsForCall = function () {\n        var uii = UIModel.getInstance().currentCall.uii,\n          delayedSessions = UIModel.getInstance().pendingNewCallSessions[uii];\n\n        console.log(uii + ' NEW CALL');\n\n        if (delayedSessions && Object.keys(delayedSessions).length > 0) {\n          // we have delayed sessions to process\n          for (var sessionId in delayedSessions) {\n            if (delayedSessions.hasOwnProperty(sessionId)) {\n              var session = delayedSessions[sessionId];\n              _delayedAddSessionCallback(session.instance, session.data);\n            } else {\n              console.error(\n                'error processing sessions for uii: ' +\n                  uii +\n                  ' session: ' +\n                  sessionId,\n              );\n            }\n          }\n\n          delete UIModel.getInstance().pendingNewCallSessions[uii];\n        }\n      };\n\n      function _delayedAddSessionCallback(instance, data) {\n        var addSessionNotif = new AddSessionNotification();\n        var addResponse = addSessionNotif.processResponse(data);\n        utils.fireCallback(instance, CALLBACK_TYPES.ADD_SESSION, addResponse);\n      }\n    }\n\n    var utils = {\n      logMessage: function (logLevel, message, data) {\n        var instance = UIModel.getInstance().libraryInstance;\n        if (instance._db) {\n          try {\n            var transaction = instance._db.transaction(['logger'], 'readwrite');\n            var store = transaction.objectStore('logger');\n\n            var record = {\n              logLevel: logLevel,\n              message: message,\n              dts: new Date(),\n              data: data,\n            };\n\n            var request = store.add(record);\n          } catch (err) {\n            console.error('Error adding log message: ' + err);\n          }\n        } else {\n          //console.log(\"AgentLibrary: indexedDb not available\");\n        }\n      },\n\n      sendMessage: function (instance, msg) {\n        var msgObj = JSON.parse(msg);\n\n        if (instance.socket && instance.socket.readyState === 1) {\n          // add message id to request map, then send message\n          var type = msgObj.ui_request['@type'];\n          var destination = msgObj.ui_request['@destination'];\n          var message =\n            'Sending ' + type + ' request message to ' + destination;\n          instance._requests.push({\n            id: msgObj.ui_request['@message_id'],\n            type: msgObj.ui_request['@type'],\n            msg: msgObj.ui_request,\n          });\n\n          // keep rolling window of latest 1000 requests\n          if (instance._requests.length > 1000) {\n            instance._requests.shift();\n          }\n\n          instance.socket.send(msg);\n\n          if (type === 'STATS') {\n            utils.logMessage(LOG_LEVELS.STATS, message, msgObj);\n          } else {\n            utils.logMessage(LOG_LEVELS.INFO, message, msgObj);\n          }\n        } else {\n          // add message to queue if socket is not open.\n          instance._queuedMsgs.push({ dts: new Date(), msg: msg });\n        }\n      },\n\n      processResponse: function (instance, response) {\n        var type = response.ui_response['@type'];\n        var messageId = response.ui_response['@message_id'];\n        var dest =\n          messageId === '' || !messageId ? 'IS' : messageId.slice(0, 2);\n        var message =\n          'Received ' + type.toUpperCase() + ' response message from ' + dest;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n\n        // Send generic on message response\n        utils.fireCallback(instance, CALLBACK_TYPES.ON_MESSAGE, response);\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.AGENT_STATE:\n            if (UIModel.getInstance().agentStateRequest === null) {\n              UIModel.getInstance().agentStateRequest = new AgentStateRequest(\n                response.ui_response.current_state['#text'],\n                response.ui_response.agent_aux_state['#text'],\n              );\n            }\n            var stateChangeResponse = UIModel.getInstance().agentStateRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.AGENT_STATE,\n              stateChangeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.BARGE_IN:\n            var resp = UIModel.getInstance().bargeInRequest.processResponse(\n              response,\n            );\n            var responseTo = response.ui_response['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            if (request) {\n              // found corresponding request, fire registered callback for type\n              var audioState = request.msg.audio_state['#text'];\n              if (audioState === 'MUTE') {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.SILENT_MONITOR,\n                  resp,\n                );\n              } else if (audioState === 'COACHING') {\n                utils.fireCallback(instance, CALLBACK_TYPES.COACH_CALL, resp);\n              } else {\n                utils.fireCallback(instance, CALLBACK_TYPES.BARGE_IN, resp);\n              }\n            } else {\n              // no corresponding request, just fire FULL audio type BARGE-IN callback\n              utils.fireCallback(instance, CALLBACK_TYPES.BARGE_IN, resp);\n            }\n            break;\n          case MESSAGE_TYPES.CAMPAIGN_DISPOSITIONS:\n            var campaignDispsResposne = UIModel.getInstance().campaignDispositionsRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CAMPAIGN_DISPOSITIONS,\n              campaignDispsResposne,\n            );\n            break;\n          case MESSAGE_TYPES.CALL_NOTES:\n            var callNotes = UIModel.getInstance().callNotesRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.CALL_NOTES, callNotes);\n            break;\n          case MESSAGE_TYPES.CALLBACK_PENDING:\n            var pendingCallbacks = UIModel.getInstance().callbacksPendingRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CALLBACK_PENDING,\n              pendingCallbacks,\n            );\n            break;\n          case MESSAGE_TYPES.HOLD:\n            var holdRequest;\n            if (UIModel.getInstance().holdRequest === null) {\n              holdRequest = new HoldRequest();\n            } else {\n              holdRequest = UIModel.getInstance().holdRequest;\n            }\n            var hold = holdRequest.processResponse(response);\n            utils.fireCallback(instance, CALLBACK_TYPES.HOLD, hold);\n            break;\n          case MESSAGE_TYPES.LEAD_HISTORY:\n            var history = UIModel.getInstance().leadHistoryRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_HISTORY, history);\n            break;\n          case MESSAGE_TYPES.LEAD_INSERT:\n            var insert = UIModel.getInstance().leadInsertRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_INSERT, insert);\n            break;\n          case MESSAGE_TYPES.LEAD_UPDATE:\n            var update = UIModel.getInstance().leadUpdateRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LEAD_UPDATE, update);\n            break;\n          case MESSAGE_TYPES.LOGIN_PHASE_1:\n            var loginPhase1Response = UIModel.getInstance().loginPhase1Request.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOGIN_PHASE_1,\n              loginPhase1Response,\n            );\n            break;\n          case MESSAGE_TYPES.LOGIN:\n            var loginResponse = UIModel.getInstance().loginRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.LOGIN, loginResponse);\n            break;\n          case MESSAGE_TYPES.OFFHOOK_INIT:\n            var offhook = new OffhookInitRequest();\n            var initResponse = offhook.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.OFFHOOK_INIT,\n              initResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PAUSE_RECORD:\n            var pauseRequest;\n            if (UIModel.getInstance().pauseRecordRequest === null) {\n              pauseRequest = new PauseRecordRequest();\n            } else {\n              pauseRequest = UIModel.getInstance().pauseRecordRequest;\n            }\n            var pauseRec = pauseRequest.processResponse(response);\n            utils.fireCallback(instance, CALLBACK_TYPES.PAUSE_RECORD, pauseRec);\n            break;\n          case MESSAGE_TYPES.RECORD:\n            var record = UIModel.getInstance().recordRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.RECORD, record);\n            break;\n          case MESSAGE_TYPES.REQUEUE:\n            var requeue = UIModel.getInstance().requeueRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.REQUEUE, requeue);\n            break;\n          case MESSAGE_TYPES.SUPERVISOR_LIST:\n            var supervisorList = UIModel.getInstance().supervisorListRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.SUPERVISOR_LIST,\n              supervisorList,\n            );\n            break;\n          case MESSAGE_TYPES.SCRIPT_CONFIG:\n            var script = UIModel.getInstance().scriptConfigRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.SCRIPT_CONFIG, script);\n            break;\n          case MESSAGE_TYPES.XFER_COLD:\n            var coldXfer = UIModel.getInstance().coldXferRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.XFER_COLD, coldXfer);\n            break;\n          case MESSAGE_TYPES.XFER_WARM:\n            var warmXfer = UIModel.getInstance().warmXferRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(instance, CALLBACK_TYPES.XFER_WARM, warmXfer);\n            break;\n          case MESSAGE_TYPES.XFER_WARM_CANCEL:\n            var warmXferCancel = UIModel.getInstance().warmXferCancelRequest.processResponse(\n              response,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.XFER_WARM_CANCEL,\n              warmXferCancel,\n            );\n            break;\n          case MESSAGE_TYPES.ACK:\n            var ack = UIModel.getInstance().ackRequest.processResponse(\n              response,\n            );\n            var responseTo = response.ui_response['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            ack.uii = request.msg.uii && request.msg.uii['#text'];\n            utils.fireCallback(instance, CALLBACK_TYPES.ACK, ack);\n            break;\n          case MESSAGE_TYPES.CHAT_LIST:\n            var chatList = new ChatListRequest();\n            var chatListResponse = chatList.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_LIST,\n              chatListResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_STATE:\n            var chatState = new ChatStateRequest();\n            var chatStateResponse = chatState.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_STATE,\n              chatStateResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_TRANSFER_LIST:\n            var agentList = new DirectAgentTransferList();\n            var agentListResponse = agentList.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n              agentListResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_TRANSFER:\n            var agentXfer = new DirectAgentTransfer();\n            var agentXferResponse = agentXfer.processResponse(response);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER,\n              agentXferResponse,\n            );\n            break;\n        }\n      },\n\n      processNotification: function (instance, data) {\n        var type = data.ui_notification['@type'];\n        var messageId = data.ui_notification['@message_id'];\n        var dest = messageId === '' ? 'IS' : messageId.slice(0, 2);\n        var message =\n          'Received ' +\n          type.toUpperCase() +\n          ' notification message from ' +\n          dest;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, data);\n\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.ADD_SESSION:\n            new NewCallUtils(instance, data).setupAddSessionCallback();\n            break;\n          case MESSAGE_TYPES.DIAL_GROUP_CHANGE:\n            var dgChangeNotif = new DialGroupChangeNotification();\n            var changeResponse = dgChangeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIAL_GROUP_CHANGE,\n              changeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIAL_GROUP_CHANGE_PENDING:\n            var dgChangePendNotif = new DialGroupChangePendingNotification();\n            var pendResponse = dgChangePendNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIAL_GROUP_CHANGE_PENDING,\n              pendResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DROP_SESSION:\n            var dropSesNotif = new DropSessionNotification(instance);\n            var dropSesResponse = dropSesNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DROP_SESSION,\n              dropSesResponse,\n            );\n            break;\n          case MESSAGE_TYPES.EARLY_UII:\n            var earlyUiiNotif = new EarlyUiiNotification(instance);\n            var earlyUiiResponse = earlyUiiNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.EARLY_UII,\n              earlyUiiResponse,\n            );\n            break;\n          case MESSAGE_TYPES.END_CALL:\n            var endCallNotif = new EndCallNotification(instance);\n            var endCallResponse = endCallNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.END_CALL,\n              endCallResponse,\n            );\n            break;\n          case MESSAGE_TYPES.GATES_CHANGE:\n            var gateChangeNotif = new GatesChangeNotification();\n            var gateChangeResponse = gateChangeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.GATES_CHANGE,\n              gateChangeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.GENERIC:\n            var genericNotif = new GenericNotification();\n            var generic = genericNotif.processResponse(data);\n            var responseTo = data.ui_notification['@response_to'];\n            var request = utils.findRequestById(instance, responseTo);\n            if (request) {\n              // found corresponding request, fire registered callback for type\n              var type = request.type;\n              var callbackFnName = utils.findCallbackBasedOnMessageType(type);\n\n              if (callbackFnName) {\n                if (type === MESSAGE_TYPES.CALLBACK_CANCEL) {\n                  generic.leadId = request.msg.lead_id['#text'];\n                }\n                utils.fireCallback(instance, callbackFnName, generic);\n              } else {\n                // no registered callback, fallback to generic notification\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.GENERIC_NOTIFICATION,\n                  generic,\n                );\n              }\n            } else {\n              if (generic.messageCode === '001') {\n                // caller hangup, stop pinging call\n                if (UIModel.getInstance().pingIntervalId) {\n                  clearInterval(UIModel.getInstance().pingIntervalId);\n                }\n              }\n\n              // no corresponding request, just fire generic notification callback\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.GENERIC_NOTIFICATION,\n                generic,\n              );\n            }\n            break;\n          case MESSAGE_TYPES.NEW_CALL:\n            var newCallNotif = new NewCallNotification();\n            var newCallResponse = newCallNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.NEW_CALL,\n              newCallResponse,\n            );\n            new NewCallUtils(instance, data).processSessionsForCall();\n\n            break;\n          case MESSAGE_TYPES.OFFHOOK_TERM:\n            if (UIModel.getInstance().offhookTermRequest === null) {\n              // offhook term initiated by IQ\n              UIModel.getInstance().offhookTermRequest = new OffhookTermRequest();\n            }\n            var termResponse = UIModel.getInstance().offhookTermRequest.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.OFFHOOK_TERM,\n              termResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PREVIEW_LEAD_STATE:\n            var leadStateNotif = new PreviewLeadStateNotification();\n            var leadStateResponse = leadStateNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PREVIEW_LEAD_STATE,\n              leadStateResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PENDING_DISP:\n            var pendingDispNotif = new PendingDispNotification();\n            var pendingDispResponse = pendingDispNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PENDING_DISP,\n              pendingDispResponse,\n            );\n            break;\n          case MESSAGE_TYPES.PENDING_CHAT_DISP:\n            var pendingChatDispNotif = new PendingChatDispNotification();\n            var pendingChatDispResponse = pendingChatDispNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.PENDING_CHAT_DISP,\n              pendingChatDispResponse,\n            );\n            break;\n          case MESSAGE_TYPES.REVERSE_MATCH:\n            var reverseMatchNotif = new ReverseMatchNotification();\n            var reverseMatchResponse = reverseMatchNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.REVERSE_MATCH,\n              reverseMatchResponse,\n            );\n            break;\n          case MESSAGE_TYPES.TCPA_SAFE_LEAD_STATE:\n            var leadStateTcpaNotif = new TcpaSafeLeadStateNotification();\n            var leadStateTcpaResponse = leadStateTcpaNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.TCPA_SAFE_LEAD_STATE,\n              leadStateTcpaResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_ACTIVE:\n            var activeNotif = new ChatActiveNotification();\n            var activeResponse = activeNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ACTIVE,\n              activeResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_INACTIVE:\n            var inactiveNotif = new ChatInactiveNotification();\n            var inactiveResponse = inactiveNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_INACTIVE,\n              inactiveResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_CLIENT_RECONNECT:\n            var reconnectNotif = new ChatClientReconnectNotification();\n            var reconnectResponse = reconnectNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_CLIENT_RECONNECT,\n              reconnectResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_PRESENTED:\n            var presentedNotif = new ChatPresentedNotification();\n            presentedNotif.processResponse(data);\n            break;\n          case MESSAGE_TYPES.CHAT_TYPING:\n            var typingNotif = new ChatTypingNotification();\n            var typingResponse = typingNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_TYPING,\n              typingResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_NEW:\n            var newChatNotif = new NewChatNotification();\n            var newChatResponse = newChatNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_NEW,\n              newChatResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_MESSAGE:\n            var chatMessage = new ChatMessageRequest();\n            var chatMessageResponse = chatMessage.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_MESSAGE,\n              chatMessageResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_CANCELLED:\n            var chatCancelled = new ChatCancelledNotification();\n            var chatCancelledResponse = chatCancelled.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_CANCELLED,\n              chatCancelledResponse,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_ADD_SESSION:\n            var addChatSession = new AddChatSessionNotification();\n            var addChatSessionResponse = addChatSession.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ADD_SESSION,\n              addChatSessionResponse,\n            );\n            break;\n          case MESSAGE_TYPES.STOP_MONITOR_CHAT:\n            var stopChatMonitor = new StopMonitorChatRequest();\n            var stopChatMonitorResponse = stopChatMonitor.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_STOP_MONITOR,\n              stopChatMonitorResponse,\n            );\n            break;\n          case MESSAGE_TYPES.DIRECT_AGENT_ROUTE:\n            var directAgentTransfer = new DirectAgentTransferNotification();\n            var directAgentTransferResponse = directAgentTransfer.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_NOTIF,\n              directAgentTransferResponse,\n            );\n            break;\n          case MESSAGE_TYPES.AGENT_DEBUG_EMAIL:\n            var emailNotif = new AdminDebugEmailNotification();\n            var emailNotifResp = emailNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.AGENT_DEBUG_EMAIL_NOTIF,\n              emailNotifResp,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_LOAD_MEDIA:\n            var loadMediaNotif = new LoadMediaNotification();\n            var loadMediaResp = loadMediaNotif.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_LOAD_MEDIA,\n              loadMediaResp,\n            );\n            break;\n          case MESSAGE_TYPES.CHAT_AGENT_ASSIGN_FAILURE:\n            var chatAgentAssignFailureNotif = new ChatAgentAssignFailureNotification();\n            var chatAgentAssignFailureResp = chatAgentAssignFailureNotif.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_AGENT_ASSIGN_FAILURE,\n              chatAgentAssignFailureResp,\n            );\n            break;\n          case MESSAGE_TYPES.LOGOUT:\n            var logoutNotification = new LogoutRequest();\n            var logoutNotifResponse = logoutNotification.processResponse(data);\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOGOUT,\n              logoutNotifResponse,\n            );\n            var model = UIModel.getInstance();\n\n            //remove agent_id and hash_code from local storage\n            model.dataStore.remove('agent_id');\n            model.dataStore.remove('hash_code');\n\n            // set login flag here in case notification initiated externally\n            // and not in response to agent logout request\n            model.agentSettings.isLoggedIn = false;\n\n            instance.closeSocket();\n            break;\n          case MESSAGE_TYPES.MONITOR_CHAT:\n            //TODO: do this\n\n            break;\n          case MESSAGE_TYPES.LEAVE_CHAT:\n            //TODO: do this\n\n            break;\n        }\n      },\n\n      processDialerResponse: function (instance, response) {\n        var type = response.dialer_request['@type'];\n        var messageId = response.dialer_request['@message_id'];\n        var dest = messageId === '' ? 'IS' : messageId.slice(0, 2);\n        var message =\n          'Received ' +\n          type.toUpperCase() +\n          ' dialer response message from ' +\n          dest;\n\n        // log message response\n        utils.logMessage(LOG_LEVELS.INFO, message, response);\n\n        // Send generic on message response\n        utils.fireCallback(instance, CALLBACK_TYPES.ON_MESSAGE, response);\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.PREVIEW_DIAL_ID:\n            var pdRequest = new PreviewDialRequest();\n            var dialResponse = pdRequest.processResponse(response);\n            if (dialResponse.action.toUpperCase() === 'SEARCH') {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.LEAD_SEARCH,\n                dialResponse,\n              );\n            } else {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.PREVIEW_FETCH,\n                dialResponse,\n              );\n            }\n            break;\n          case MESSAGE_TYPES.TCPA_SAFE_ID:\n            var tcpaRequest = new TcpaSafeRequest();\n            var tcpaResponse = tcpaRequest.processResponse(response);\n            if (tcpaResponse.action.toUpperCase() === 'SEARCH') {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.SAFE_MODE_SEARCH,\n                tcpaResponse,\n              );\n            } else {\n              utils.fireCallback(\n                instance,\n                CALLBACK_TYPES.SAFE_MODE_FETCH,\n                tcpaResponse,\n              );\n            }\n            break;\n        }\n      },\n\n      processRequest: function (instance, message) {\n        var type = message.ui_request['@type'];\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.CHAT_SEND:\n            var chatSendRequest = new ChatSendRequest();\n            var chatSendResponse = chatSendRequest.processResponse(message);\n            utils.fireCallback(instance, CALLBACK_TYPES.CHAT, chatSendResponse);\n            break;\n          case MESSAGE_TYPES.CHAT_ROOM_STATE:\n            var chatRoomStateRequest = new ChatRoomStateRequest();\n            var chatRoomStateResponse = chatRoomStateRequest.processResponse(\n              message,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.CHAT_ROOM_STATE,\n              chatRoomStateResponse,\n            );\n            break;\n        }\n      },\n\n      processStats: function (instance, data) {\n        var type = data.ui_stats['@type'];\n        var message =\n          'Received ' + type.toUpperCase() + ' response message from IS';\n\n        // Fire callback function\n        switch (type.toUpperCase()) {\n          case MESSAGE_TYPES.STATS_AGENT:\n            var agentStats = UIModel.getInstance().agentStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_AGENT,\n              agentStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_AGENT_DAILY:\n            var agentDailyStats = UIModel.getInstance().agentDailyStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_AGENT_DAILY,\n              agentDailyStats,\n            );\n\n            // start daily stats interval timer, request update every second\n            if (UIModel.getInstance().agentDailyIntervalId === null) {\n              UIModel.getInstance().agentDailyIntervalId = setInterval(\n                utils.onAgentDailyStats,\n                1000,\n              );\n            }\n\n            break;\n          case MESSAGE_TYPES.STATS_CAMPAIGN:\n            var campaignStats = UIModel.getInstance().campaignStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_CAMPAIGN,\n              campaignStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_QUEUE:\n            var queueStats = UIModel.getInstance().queueStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_QUEUE,\n              queueStats,\n            );\n            break;\n          case MESSAGE_TYPES.STATS_CHAT:\n            var chatStats = UIModel.getInstance().chatQueueStatsPacket.processResponse(\n              data,\n            );\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.STATS_CHAT_QUEUE,\n              chatStats,\n            );\n            break;\n        }\n      },\n\n      /*\n       * Take the xml marked JSON, group and item property names and reformat to\n       * simple javascript object without the xml markers.\n       * Will work recursively down the tree on nested objects and arrays.\n       *\n       * example of acceptable response tree (groupProp = requeue_gates, itemProp = gate_group):\n       *   \"requeue_gates\": {\n       *       \"gate_group\": [\n       *           {\n       *               \"@gate_group_id\": \"4\",\n       *               \"@group_name\": \"Test Gate Group\",\n       *               \"gates\": {\n       *                   \"gate\": [\n       *                       {\n       *                           \"@gate_desc\": \"\",\n       *                           \"@gate_id\": \"10951\",\n       *                           \"@gate_name\": \"CD ACD Queue\"\n       *                       },\n       *                       {\n       *                           \"@gate_desc\": \"\",\n       *                           \"@gate_id\": \"11036\",\n       *                           \"@gate_name\": \"Xerox Test Gate\"\n       *                       }\n       *                   ]\n       *               },\n       *               \"skills\": {\n       *                   \"skill\": [\n       *                       {\n       *                           \"@skill_desc\": \"\",\n       *                           \"@skill_id\": \"322\",\n       *                           \"@skill_name\": \"English\"\n       *                       },\n       *                       {\n       *                           \"@skill_desc\": \"\",\n       *                           \"@skill_id\": \"323\",\n       *                           \"@skill_name\": \"Spanish\"\n       *                       }\n       *                   ]\n       *               }\n       *           },\n       *           {\n       *               \"@gate_group_id\": \"14292\",\n       *               \"@group_name\": \"New Test Group\",\n       *               \"gates\": {\n       *                   \"gate\": {\n       *                       \"@gate_desc\": \"\",\n       *                       \"@gate_id\": \"15535\",\n       *                       \"@gate_name\": \"New Test Gate\"\n       *                   }\n       *               },\n       *               \"skills\": {\n       *                   \"skill\": {\n       *                       \"@skill_desc\": \"\",\n       *                       \"@skill_id\": \"1658\",\n       *                       \"@skill_name\": \"new skill\"\n       *                   }\n       *               }\n       *           }\n       *       ]\n       *   }\n       *\n       *   OR\n       *\n       *   \"outdial_dispositions\": {\n       *       \"@type\": \"GATE\",\n       *       \"disposition\": [\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          },\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          }\n       *      ]\n       *   }\n       *\n       *   OR\n       *\n       *   \"outdial_dispositions\": {\n       *       \"@type\": \"GATE\",\n       *       \"disposition\": {\n       *          {\n       *           \"@contact_forwarding\": \"false\",\n       *           \"@disposition_id\": \"926\",\n       *           \"@is_complete\": \"1\",\n       *           \"@require_note\": \"0\",\n       *           \"@save_survey\": \"1\",\n       *           \"@xfer\": \"0\",\n       *           \"#text\": \"One B\"\n       *          }\n       *      }\n       *   }\n       */\n\n      processResponseCollection: function (\n        response,\n        groupProp,\n        itemProp,\n        textName,\n      ) {\n        textName = textName || 'text';\n\n        if (\n          response[groupProp] &&\n          typeof response[groupProp][itemProp] !== 'undefined'\n        ) {\n          var itemsRaw = response[groupProp][itemProp];\n          return this._processItems(itemsRaw, textName);\n        } else {\n          return [];\n        }\n      },\n\n      escapeSoftphoneUsername: function (str) {\n        return str && str.replace(/[@]/g, '_at_');\n      },\n\n      _processItems: function (itemsRaw, textName) {\n        var result = [];\n        if (typeof itemsRaw === 'undefined' || itemsRaw === null) {\n          return result;\n        }\n\n        if (!Array.isArray(itemsRaw)) {\n          itemsRaw = [itemsRaw];\n        }\n\n        for (var i = 0; i < itemsRaw.length; i++) {\n          result.push(this._processItem(itemsRaw[i], textName));\n        }\n\n        return result;\n      },\n\n      _processItem: function (itemRaw, textName) {\n        /*\n         * Be sure that the item we are processing is not a #text node only, where the \"texName\" is also \"text\". If this\n         * is the case, it means there's a default value that needs to get converted and isn't going to be mapped to a custom\n         * field.  Therefore, we treat it as just a single value, not an object.\n         */\n        if (\n          textName === 'text' &&\n          Object.keys(itemRaw).length === 1 &&\n          itemRaw['#text'] != null\n        ) {\n          return this._tryConvertValueToBoolean(itemRaw['#text']);\n        }\n\n        // Convert the raw item to a new item, with keys and values processed below\n        //\n        var item = {};\n        for (var key in itemRaw) {\n          var formattedKey = this._convertToFormattedKey(key, textName);\n\n          var value = itemRaw[key];\n\n          // If we aren't an object, set the value and continue to next key\n          if (typeof value !== 'object') {\n            item[formattedKey] = this._tryConvertValueToBoolean(value);\n            continue;\n          }\n\n          if (\n            (Array.isArray(value) && value.length === 0) ||\n            Object.keys(value).length === 0\n          ) {\n            // Empty property\n            item[formattedKey] = '';\n          } else if (Array.isArray(value) || Object.keys(value).length > 1) {\n            // Array or object with more than one key\n            formattedKey = this._convertKeyForCollection(formattedKey);\n            item[formattedKey] = this._processItems(value, textName);\n          } else if (\n            Object.keys(value).length === 1 &&\n            value['#text'] != null\n          ) {\n            // One property of type \"#text\"\n            item[formattedKey] = value['#text'];\n          } else {\n            // One property not with key \"#text\"\n            item[formattedKey] = this._processItems(\n              value[Object.keys(value)[0]],\n              'text',\n            );\n          }\n        }\n\n        return item;\n      },\n\n      _convertToFormattedKey: function (key, textName) {\n        var formattedKey;\n        if (key.match(/^#/)) {\n          // dealing with text property\n          formattedKey = textName;\n        } else {\n          // dealing with attribute\n          formattedKey = key.replace(/@/, ''); // remove leading '@'\n          formattedKey = formattedKey.replace(/_([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n          }); // convert to camelCase\n        }\n\n        return formattedKey;\n      },\n\n      _convertKeyForCollection: function (formattedKey) {\n        if (formattedKey.substr(formattedKey.length - 1) !== 's') {\n          return formattedKey + 's';\n        }\n\n        return formattedKey;\n      },\n\n      _tryConvertValueToBoolean: function (value) {\n        if (value === null) {\n          return null;\n        }\n\n        // can't convert 0 | 1 to boolean since some are counters\n        if (value.toUpperCase() === 'TRUE') {\n          return true;\n        } else if (value.toUpperCase() === 'FALSE') {\n          return false;\n        } else {\n          return value;\n        }\n      },\n\n      fireCallback: function (instance, type, response) {\n        response = response || '';\n        if (\n          typeof type !== 'undefined' &&\n          typeof instance.callbacks[type] === 'function'\n        ) {\n          instance.callbacks[type].call(instance, response);\n        }\n      },\n\n      setCallback: function (instance, type, callback) {\n        if (typeof type !== 'undefined' && typeof callback !== 'undefined') {\n          instance.callbacks[type] = callback;\n        }\n      },\n\n      getMessageId: function () {\n        function s4() {\n          return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n        }\n\n        return (\n          s4() +\n          s4() +\n          '-' +\n          s4() +\n          '-' +\n          s4() +\n          '-' +\n          s4() +\n          '-' +\n          s4() +\n          s4() +\n          s4()\n        );\n      },\n\n      // check whether the given array of ids exist in the given array of objects\n      // if not available, remove the id\n      // returns the clean list of acceptable ids\n      checkExistingIds: function (objArray, idArray, idProperty) {\n        var availIds = [];\n        var removeIds = [];\n\n        // get list of available ids\n        for (var o = 0; o < objArray.length; o++) {\n          availIds.push(parseInt(objArray[o][idProperty], 10));\n        }\n\n        // go through selected ids and mark unfound ones for removal\n        for (var i = 0; i < idArray.length; i++) {\n          if (availIds.indexOf(parseInt(idArray[i], 10)) === -1) {\n            // selected id not found in available list, mark for removal\n            removeIds.push(parseInt(idArray[i], 10));\n          }\n        }\n\n        // remove marked ids\n        for (var r = idArray.length - 1; r >= 0; r--) {\n          if (removeIds.indexOf(parseInt(idArray[r], 10)) > -1) {\n            // remove\n            idArray.splice(r, 1);\n          }\n        }\n\n        return idArray;\n      },\n\n      // find an object by given id in an array of objects\n      findObjById: function (objArray, id, propName) {\n        for (var o = 0; o < objArray.length; o++) {\n          var obj = objArray[o];\n          if (obj[propName] === id) {\n            return obj;\n          }\n        }\n\n        return null;\n      },\n\n      // check whether agent dialDest is either a 10-digit number or valid sip\n      validateDest: function (dialDest) {\n        var isValid = false;\n        var isNum = /^\\d+$/.test(dialDest);\n        if (isNum && dialDest.length === 10) {\n          // is a 10-digit number\n          isValid = true;\n        } else if (\n          dialDest.slice(0, 4).toLowerCase() === 'sip:' &&\n          dialDest.indexOf('@') !== -1\n        ) {\n          // has sip prefix and '@'\n          isValid = true;\n        }\n\n        return isValid;\n      },\n\n      // pass in MESSAGE_TYPE string (e.g. \"CANCEL-CALLBACK\"),\n      // return corresponding CALLBACK_TYPE function name string (e.g. \"callbackCancelResponse\")\n      findCallbackBasedOnMessageType: function (messageType) {\n        var callbackFnName = '';\n        for (var key in MESSAGE_TYPES) {\n          if (MESSAGE_TYPES[key] === messageType) {\n            callbackFnName = CALLBACK_TYPES[key];\n          }\n        }\n        return callbackFnName;\n      },\n\n      // add message, detail, and status values to the formattedResponse\n      // returned from each request processResponse method\n      buildDefaultResponse: function (response, includeOpId) {\n        includeOpId = includeOpId || false; // default to false, the ES5 way\n        var message = '';\n        var detail = '';\n        var status = '';\n        var operationId = '';\n\n        var msg = '';\n        var det = '';\n        var stat = '';\n        var opId = '';\n\n        // add properties if present\n        if (response.ui_response) {\n          msg = response.ui_response.message;\n          det = response.ui_response.detail;\n          stat = response.ui_response.status;\n          opId = response.ui_response.operation_id;\n        } else if (response.ui_notification) {\n          msg = response.ui_notification.message;\n          det = response.ui_notification.detail;\n          stat = response.ui_notification.status;\n          opId = response.ui_notification.operation_id;\n        }\n\n        if (msg) {\n          message = msg['#text'] || '';\n        }\n        if (det) {\n          detail = det['#text'] || '';\n        }\n        if (stat) {\n          status = stat['#text'] || '';\n        }\n        if (opId) {\n          operationId = opId['#text'] || '';\n        }\n\n        var returnMsg = {\n          message: message,\n          detail: detail,\n          status: status,\n        };\n\n        if (includeOpId) {\n          returnMsg.operationId = operationId;\n        }\n\n        return returnMsg;\n      },\n\n      toString: function (val) {\n        if (val) {\n          return val.toString();\n        } else {\n          return '';\n        }\n      },\n\n      // safely check if property exists and return empty string\n      // instead of undefined if it doesn't exist\n      // convert \"TRUE\" | \"FALSE\" to boolean\n      getText: function (obj, prop) {\n        var o = obj[prop];\n        if (o && o['#text']) {\n          if (o['#text'].toUpperCase() === 'TRUE') {\n            return true;\n          } else if (o['#text'].toUpperCase() === 'FALSE') {\n            return false;\n          } else {\n            return o['#text'] || '';\n          }\n        } else {\n          return '';\n        }\n      },\n\n      // safely check if property exists and return empty string\n      // instead of undefined if it doesn't exist\n      // convert \"TRUE\" | \"FALSE\" to boolean\n      getAttribute: function (obj, prop) {\n        var o = obj[prop];\n        if (o && o[prop]) {\n          if (o[prop].toUpperCase() === 'TRUE') {\n            return true;\n          } else if (o[prop].toUpperCase() === 'FALSE') {\n            return false;\n          } else {\n            return o[prop] || '';\n          }\n        } else {\n          return '';\n        }\n      },\n\n      // Parses a string of key value pairs and returns an Array of KeyValue objects.\n      // @param str The string of keyvalue pairs to parse\n      // @param outerDelimiter The delimiter that separates each keyValue pair\n      // @param innerDelimiter The delimiter that separates each key from its value\n      parseKeyValuePairsFromString: function (\n        str,\n        outerDelimiter,\n        innerDelimiter,\n      ) {\n        if (!str) {\n          return [];\n        }\n\n        var arr = str.split(outerDelimiter).reduce(function (dict, pair) {\n          var keyValue = pair.split(innerDelimiter);\n          dict[keyValue[0]] = keyValue[1];\n          return dict;\n        }, {});\n\n        return arr;\n      },\n\n      // Finds a request by responseTo id\n      findRequestById: function (instance, id) {\n        var request = null;\n        for (var i = 0; i < instance._requests.length; i++) {\n          if (instance._requests[i].id === id) {\n            request = instance._requests[i];\n            break;\n          }\n        }\n        return request;\n      },\n\n      // called every 30 seconds letting intelliQueue know\n      // not to archive the call so dispositions and other call\n      // clean up actions can happen\n      sendPingCallMessage: function () {\n        UIModel.getInstance().pingCallRequest = new PingCallRequest();\n        var msg = UIModel.getInstance().pingCallRequest.formatJSON();\n        var msgObj = JSON.parse(msg);\n        var agentId = utils.getText(msgObj.ui_request, 'agent_id');\n        var uii = utils.getText(msgObj.ui_request, 'uii');\n        if (agentId === '' || uii === '') {\n          utils.logMessage(\n            LOG_LEVELS.WARN,\n            'PING-CALL message failed, agentId or UII is empty',\n            msgObj,\n          );\n        } else {\n          utils.sendMessage(UIModel.getInstance().libraryInstance, msg);\n        }\n      },\n\n      // called every 5 seconds to request stats from IntelliServices\n      sendStatsRequestMessage: function () {\n        UIModel.getInstance().statsRequest = new StatsRequest();\n        var msg = UIModel.getInstance().statsRequest.formatJSON();\n        utils.sendMessage(UIModel.getInstance().libraryInstance, msg);\n      },\n\n      // called every 20 seconds to ping IntelliSocket whent stats are disabled\n      sendPingRequestMessage: function () {\n        var msg = 'BEAT';\n        var instance = UIModel.getInstance().libraryInstance;\n        if (instance.socket && instance.socket.readyState === 1) {\n          instance.socket.send('BEAT');\n        }\n      },\n\n      // called every second\n      // if we have received agent daily stats\n      // start incrementing various data points since not all\n      // data is incremented when we want on the IntelliServices side\n      onAgentDailyStats: function () {\n        if (Object.keys(UIModel.getInstance().agentDailyStats).length !== 0) {\n          var agentSettings = UIModel.getInstance().agentSettings,\n            stats = UIModel.getInstance().agentDailyStats;\n\n          var curLoginTime = stats.totalLoginTime;\n          stats.totalLoginTime = Number(curLoginTime) + 1;\n\n          if (agentSettings.isOffhook) {\n            var curOffhookTime = stats.totalOffhookTime;\n            stats.totalOffhookTime = Number(curOffhookTime) + 1;\n          }\n\n          if (agentSettings.currentState === 'ENGAGED') {\n            var curTalkTime = stats.totalTalkTime;\n            stats.totalTalkTime = Number(curTalkTime) + 1;\n\n            var curCallTime = stats.currCallTime;\n            stats.currCallTime = Number(curCallTime) + 1;\n          }\n        }\n      },\n\n      // called in loginAgent if 'integrated' dial destination passed in\n      getDialDestination: function () {\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n        var dialDestType = model.applicationSettings.dialDestType;\n\n        var dialDest = '';\n\n        // default to the first server in the array\n        if (softphoneSettings.sipInfo.length > 0) {\n          var currentServer = softphoneSettings.sipInfo[0];\n          if (dialDestType === 'LEGACY_SOFTPHONE') {\n            dialDest =\n              'sip:' +\n              utils.escapeSoftphoneUsername(currentServer.username) +\n              '@' +\n              currentServer.domain;\n          } else if (dialDestType === 'RC_SOFTPHONE') {\n            dialDest =\n              utils.escapeSoftphoneUsername(currentServer.username) +\n              '@RC_SOFTPHONE';\n          }\n        }\n\n        return dialDest;\n      },\n\n      // get valid access token based on agentId and login hash code\n      refreshAccessToken: function () {\n        var model = UIModel.getInstance();\n        var baseUrl = model.authHost + model.baseAuthUri;\n        var errorMsg = 'Error in refreshing access token';\n        var params = {\n          queryParams: {\n            loginHashcode: model.connectionSettings.hashCode,\n            agentId: model.agentSettings.agentId,\n            platformId: model.authenticateRequest.platformId,\n          },\n        };\n\n        return new HttpService(baseUrl)\n          .httpPost('login/agent/hashcode', params)\n          .then(\n            function (response) {\n              try {\n                response = JSON.parse(response.response);\n                UIModel.getInstance().authenticateRequest.engageAccessToken =\n                  response.accessToken;\n              } catch (err) {\n                utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n              }\n            },\n            function (err) {\n              var errResponse = {\n                type: 'refreshAccessToken Error',\n                message: errorMsg,\n              };\n              utils.logMessage(LOG_LEVELS.WARN, errResponse, err);\n            },\n          );\n      },\n\n      // return random string of length given\n      generateOpId: function (length) {\n        length = length || 24;\n        var CHARACTERS = '0123456789abcdefghijklmnopqrstuvwxyz';\n\n        var result = '';\n        for (var i = length; i > 0; --i) {\n          result +=\n            CHARACTERS[Math.round(Math.random() * (CHARACTERS.length - 1))];\n        }\n        return result;\n      },\n    };\n\n    // CONSTANTS\n\n    /*jshint esnext: true */\n    const LOG_LEVELS = {\n      DEBUG: 'debug',\n      STATS: 'stats',\n      INFO: 'info',\n      WARN: 'warn',\n      ERROR: 'error',\n    };\n\n    const AUTHENTICATE_TYPES = {\n      USERNAME_PASSWORD: 'USERNAME_PASSWORD',\n      RC_TOKEN: 'RC_TOKEN',\n      ENGAGE_TOKEN: 'ENGAGE_TOKEN',\n    };\n\n    // add all callback types to setCallback method description\n    const CALLBACK_TYPES = {\n      ACK: 'acknowledgeResponse',\n      ADD_SESSION: 'addSessionNotification',\n      AGENT_DEBUG_EMAIL_NOTIF: 'agentDebugEmailNotification',\n      AGENT_STATE: 'agentStateResponse',\n      AUTHENTICATE: 'authenticateResponse',\n      BARGE_IN: 'bargeInResponse',\n      CALLBACK_CANCEL: 'callbackCancelResponse',\n      CALLBACK_PENDING: 'callbacksPendingResponse',\n      CALL_NOTES: 'callNotesResponse',\n      CAMPAIGN_DISPOSITIONS: 'campaignDispositionsResponse',\n      CHAT: 'chatResponse', // internal chat\n      CHAT_ACTIVE: 'chatActiveNotification', // external chat\n      CHAT_ADD_SESSION: 'addChatSessionNotification', // external chat\n      CHAT_CANCELLED: 'chatCancelledNotification', // external chat\n      CHAT_CLIENT_RECONNECT: 'chatClientReconnectNotification',\n      CHAT_INACTIVE: 'chatInactiveNotification', // external chat\n      CHAT_LIST: 'chatListResponse', // external chat\n      CHAT_LOAD_MEDIA: 'chatLoadMediaResponse', // engage digital task\n      CHAT_AGENT_ASSIGN_FAILURE: 'chatAgentAssignFailureResponse', // engage digital task\n      CHAT_MESSAGE: 'chatMessageNotification', // external chat\n      CHAT_NEW: 'chatNewNotification', // external chat\n      CHAT_PRESENTED: 'chatPresentedNotification', // external chat\n      CHAT_ROOM_STATE: 'chatRoomStateResponse',\n      CHAT_STATE: 'chatStateResponse', // external chat\n      CHAT_STOP_MONITOR: 'stopAgentChatMonitorNotification', // external chat\n      CHAT_TYPING: 'chatTypingNotification', // external chat\n      CLOSE_SOCKET: 'closeResponse',\n      COACH_CALL: 'coachResponse',\n      CONFIG: 'configureResponse',\n      DIAL_GROUP_CHANGE: 'dialGroupChangeNotification',\n      DIAL_GROUP_CHANGE_PENDING: 'dialGroupChangePendingNotification',\n      DIRECT_AGENT_TRANSFER: 'directAgentTransferResponse',\n      DIRECT_AGENT_TRANSFER_LIST: 'directAgentTransferListResponse',\n      DIRECT_AGENT_TRANSFER_NOTIF: 'directAgentTransferNotification',\n      DROP_SESSION: 'dropSessionNotification',\n      EARLY_UII: 'earlyUiiNotification',\n      END_CALL: 'endCallNotification',\n      GATES_CHANGE: 'gatesChangeNotification',\n      GENERIC_NOTIFICATION: 'genericNotification',\n      GENERIC_RESPONSE: 'genericResponse',\n      HOLD: 'holdResponse',\n      LEAD_HISTORY: 'leadHistoryResponse',\n      LEAD_INSERT: 'leadInsertResponse',\n      LEAD_SEARCH: 'leadSearchResponse',\n      LEAD_UPDATE: 'leadUpdateResponse',\n      LOGIN: 'loginResponse',\n      LOGIN_PHASE_1: 'loginPhase1Response',\n      LOGIN_MULTISOCKET: 'multiSocketResponse',\n      LOGOUT: 'logoutResponse',\n      LOG_CONSOLE_RESULTS: 'logConsoleResultsResponse',\n      LOG_RESULTS: 'logResultsResponse',\n      NEW_CALL: 'newCallNotification',\n      OFFHOOK_INIT: 'offhookInitResponse',\n      OFFHOOK_TERM: 'offhookTermNotification',\n      OPEN_SOCKET: 'openResponse',\n      PAUSE_RECORD: 'pauseRecordResponse',\n      PENDING_CHAT_DISP: 'pendingChatDispNotification',\n      PENDING_DISP: 'pendingDispNotification',\n      PREVIEW_FETCH: 'previewFetchResponse',\n      PREVIEW_LEAD_STATE: 'previewLeadStateNotification',\n      RECORD: 'recordResponse',\n      REQUEUE: 'requeueResponse',\n      REVERSE_MATCH: 'reverseMatchNotification',\n      SAFE_MODE_FETCH: 'safeModeFetchResponse',\n      SAFE_MODE_SEARCH: 'safeModeSearchResponse',\n      SCRIPT_CONFIG: 'scriptConfigResponse',\n      SILENT_MONITOR: 'monitorResponse',\n      STATS_AGENT: 'agentStats',\n      STATS_AGENT_DAILY: 'agentDailyStats',\n      STATS_CAMPAIGN: 'campaignStats',\n      STATS_CHAT_QUEUE: 'chatQueueStats',\n      STATS_QUEUE: 'queueStats',\n      SUPERVISOR_LIST: 'supervisorListResponse',\n      TCPA_SAFE_LEAD_STATE: 'tcpaSafeLeadStateNotification',\n      WEBRTC_INFO: 'webRtcInfoResponse',\n      XFER_COLD: 'coldXferResponse',\n      XFER_WARM: 'warmXferResponse',\n      SEARCH_DIR: 'searchDirectoryResponse',\n      EXTENSION_PRESENCE: 'extensionPresenceInfo',\n\n      // SOFTPHONE Callbacks\n      SIP_CONNECTED: 'sipConnectedNotification',\n      SIP_DIAL_DEST_CHANGED: 'sipDialDestChangedNotification',\n      SIP_ENDED: 'sipEndedNotification',\n      SIP_MUTE: 'sipMuteResponse',\n      SIP_REGISTERED: 'sipRegisteredNotification',\n      SIP_REGISTRATION_FAILED: 'sipRegistrationFailedNotification',\n      SIP_RINGING: 'sipRingingNotification',\n      SIP_SWITCH_REGISTRAR: 'sipSwitchRegistrarNotification',\n      SIP_UNMUTE: 'sipUnmuteResponse',\n      SIP_UNREGISTERED: 'sipUnregisteredNotification',\n      ROTATE_WEBRTC_SERVER: 'rotateWebRtcServer',\n    };\n\n    const MESSAGE_TYPES = {\n      ACK: 'ACK',\n      ADD_SESSION: 'ADD-SESSION',\n      AGENT_DEBUG_EMAIL: 'AGENT-DEBUG-EMAIL',\n      AGENT_STATE: 'AGENT-STATE',\n      BARGE_IN: 'BARGE-IN',\n      CALLBACK_CANCEL: 'CANCEL-CALLBACK',\n      CALLBACK_PENDING: 'PENDING-CALLBACKS',\n      CALL_NOTES: 'CALL-NOTES',\n      CAMPAIGN_DISPOSITIONS: 'CAMPAIGN-DISPOSITIONS',\n      CHAT_ACTIVE: 'CHAT-ACTIVE', // external chat\n      CHAT_ADD_SESSION: 'ADD-CHAT-SESSION', // external chat\n      CHAT_AGENT_END: 'CHAT-END', // external chat\n      CHAT_ALIAS: 'CHAT-ALIAS', // internal chat\n      CHAT_CANCELLED: 'CHAT-CANCELLED', // external chat\n      CHAT_CLIENT_RECONNECT: 'CHAT-CLIENT-RECONNECT', // external chat\n      CHAT_DISPOSITION: 'CHAT-DISPOSITION', // external chat\n      CHAT_INACTIVE: 'CHAT-INACTIVE', // external chat\n      CHAT_LIST: 'CHAT-LIST', // external chat\n      CHAT_MANUAL_SMS: 'MANUAL-SMS', // external chat\n      CHAT_MESSAGE: 'CHAT-MESSAGE', // external chat\n      CHAT_NEW: 'NEW-CHAT', // external chat\n      CHAT_PRESENTED: 'CHAT-PRESENTED', // external chat\n      CHAT_PRESENTED_RESPONSE: 'CHAT-PRESENTED-RESPONSE', // external chat\n      CHAT_REQUEUE: 'CHAT-REQUEUE', // external chat\n      CHAT_ROOM: 'CHAT-ROOM', // internal chat\n      CHAT_ROOM_STATE: 'CHAT-ROOM-STATE', // internal chat\n      CHAT_SEND: 'CHAT', // internal chat\n      CHAT_STATE: 'CHAT-STATE', // external chat\n      CHAT_TYPING: 'CHAT-TYPING', // external chat\n      CHAT_LOAD_MEDIA: 'LOAD-MEDIA', // engage digital task\n      CHAT_AGENT_ASSIGN_FAILURE: 'CHAT-AGENT-ASSIGN-FAILURE', // engage digital task\n      DIAL_GROUP_CHANGE: 'DIAL_GROUP_CHANGE',\n      DIAL_GROUP_CHANGE_PENDING: 'DIAL_GROUP_CHANGE_PENDING',\n      DIRECT_AGENT_ROUTE: 'DIRECT-AGENT-ROUTE',\n      DIRECT_AGENT_TRANSFER: 'DIRECT-AGENT-TRANSFER',\n      DIRECT_AGENT_TRANSFER_LIST: 'DIRECT-AGENT-TRANSFER-LIST',\n      DROP_SESSION: 'DROP-SESSION',\n      EARLY_UII: 'EARLY_UII',\n      END_CALL: 'END-CALL',\n      GATES_CHANGE: 'GATES_CHANGE',\n      GENERIC: 'GENERIC',\n      HANGUP: 'HANGUP',\n      HOLD: 'HOLD',\n      INBOUND_DISPOSITION: 'INBOUND-DISPOSITION',\n      LEAD_HISTORY: 'LEAD-HISTORY',\n      LEAD_INSERT: 'LEAD-INSERT',\n      LEAD_UPDATE: 'LEAD-UPDATE',\n      LEAVE_CHAT: 'CHAT-DROP-SESSION', // external chat\n      LOGIN: 'LOGIN',\n      LOGIN_PHASE_1: 'LOGIN-PHASE-1',\n      LOGIN_MULTISOCKET: 'MULTISOCKET',\n      LOGOUT: 'LOGOUT',\n      MONITOR_CHAT: 'CHAT-MONITOR', // external chat\n      NEW_CALL: 'NEW-CALL',\n      OFFHOOK_INIT: 'OFF-HOOK-INIT',\n      OFFHOOK_TERM: 'OFF-HOOK-TERM',\n      ONE_TO_ONE_OUTDIAL: 'ONE-TO-ONE-OUTDIAL',\n      ONE_TO_ONE_OUTDIAL_CANCEL: 'ONE-TO-ONE-OUTDIAL-CANCEL',\n      ON_MESSAGE: 'ON-MESSAGE',\n      OUTDIAL_DISPOSITION: 'OUTDIAL-DISPOSITION',\n      PAUSE_RECORD: 'PAUSE-RECORD',\n      PENDING_CHAT_DISP: 'PENDING-CHAT-DISP', // external chat\n      PENDING_DISP: 'PENDING_DISP',\n      PING_CALL: 'PING-CALL',\n      PREVIEW_DIAL: 'PREVIEW-DIAL',\n      PREVIEW_DIAL_ID: 'PREVIEW_DIAL',\n      PREVIEW_LEAD_STATE: 'PREVIEW-LEAD-STATE',\n      RECORD: 'RECORD',\n      REQUEUE: 'RE-QUEUE',\n      REVERSE_MATCH: 'REVERSE_MATCH',\n      SCRIPT_CONFIG: 'SCRIPT-CONFIG',\n      SCRIPT_RESULT: 'SCRIPT-RESULT',\n      STATS: 'STATS',\n      STATS_AGENT: 'AGENT',\n      STATS_AGENT_DAILY: 'AGENTDAILY',\n      STATS_CAMPAIGN: 'CAMPAIGN',\n      STATS_CHAT: 'CHAT',\n      STATS_QUEUE: 'GATE',\n      STOP_MONITOR_CHAT: 'CHAT-DROP-MONITORING-SESSION', // external chat\n      SUPERVISOR_LIST: 'SUPERVISOR-LIST', // internal chat\n      TCPA_SAFE: 'TCPA-SAFE',\n      TCPA_SAFE_ID: 'TCPA_SAFE',\n      TCPA_SAFE_LEAD_STATE: 'TCPA-SAFE-LEAD-STATE',\n      UPDATE_DIAL_DESTINATION: 'UPDATE_DIAL_DESTINATION',\n      XFER_COLD: 'COLD-XFER',\n      XFER_WARM: 'WARM-XFER',\n      XFER_WARM_CANCEL: 'WARM-XFER-CANCEL',\n      // SOFTPHONE message types\n      SETUP_WEB_RTC_SERVER: 'SETUP_WEB_RTC_SERVER',\n      SIP_INIT: 'SIP_INIT',\n      SIP_ANSWER: 'SIP_ANSWER',\n      SIP_REJECT: 'SIP_REJECT',\n      SIP_REGISTER: 'SIP_REGISTER',\n      SIP_HANGUP: 'SIP_HANGUP',\n      SIP_SEND_DTMF: 'SIP_SEND_DTMF',\n      SIP_TOGGLE_MUTE: 'SIP_TOGGLE_MUTE',\n      SOFTPHONE_RESET_SESSION: 'SOFTPHONE_RESET_SESSION',\n      SWITCH_SOFTPHONE_REGISTRAR: 'SWITCH_SOFTPHONE_REGISTRAR',\n    };\n\n    /*\n     * Init wrapper for the core module.\n     * @param {Object} The Object that the library gets attached to in\n     * library.init.js.  If the library was not loaded with an AMD loader such as\n     * require.js, this is the global Object.\n     */\n    function initAgentLibraryCore(context) {\n      'use strict';\n\n      /**\n     * This is the constructor for the Library Object. Note that the constructor is also being\n     * attached to the context that the library was loaded in.\n     * @param {Object} [config={}] Set authHost, if the WebSocket should be secure or not with the testingLocal boolean, and callback functions.\n     * @constructor\n     * @namespace Core\n     * @memberof AgentLibrary\n     * @property {object} callbacks Internal map of registered callback functions\n     * @property {array} _requests Internal map of requests by message id, private property.\n     * @property {array} _queuedMsgs Array of pending messages to be sent when socket reconnected\n     * @property {boolean} _isReconnect Whether or not we are doing a reconnect for the socket\n     * @example\n      var Lib = new AgentLibrary({\n           authHost:'d01-test.cf.dev:8080', // window.location.origin\n           testingLocal: true,\n           allowMultiSocket: true,\n           callbacks: {\n               closeResponse: onCloseFunction,\n               openResponse: onOpenFunction\n           }\n      });\n     */\n      var AgentLibrary = (context.AgentLibrary = function (config) {\n        config = config || {};\n\n        // define properties\n        this.callbacks = {};\n        this._requests = [];\n        this._queuedMsgs = [];\n        this._isReconnect = false;\n\n        // start with new model instance\n        UIModel.resetInstance();\n\n        // set instance on model object\n        UIModel.getInstance().libraryInstance = this;\n\n        // initialize indexedDB for logging\n        this.openLogger();\n        this.openConsoleLogger();\n\n        // set default values\n        if (typeof config.callbacks !== 'undefined') {\n          this.callbacks = config.callbacks;\n        }\n\n        if (typeof config.authHost !== 'undefined') {\n          UIModel.getInstance().authHost = config.authHost;\n        }\n\n        if (config.isSecureSocket !== 'undefined') {\n          if (typeof config.isSecureSocket === 'string') {\n            config.isSecureSocket =\n              config.isSecureSocket.toLowerCase() === 'true';\n          }\n          UIModel.getInstance().socketProtocol = config.isSecureSocket\n            ? 'wss://'\n            : 'ws://';\n        }\n\n        UIModel.getInstance().applicationSettings.allowMultiSocket =\n          config.allowMultiSocket === true;\n\n        return this;\n      });\n\n      /**\n       * Set multiple callback functions based on type\n       * @memberof AgentLibrary.Core\n       * @param {Object} callbackMap Contains map of callback types to their respective functions:<br />\n       * <tt>callbackMap = {<br />\n       *      closeResponse: onCloseFunction,<br />\n       *      openResponse: onOpenFunction<br />\n       * }\n       * </tt>\n       *<br />\n       * Possible callback types:\n       * <li>\"addSessionNotification\"</li>\n       * <li>\"agentStateResponse\"</li>\n       * <li>\"acknowledgeResponse\"</li>\n       * <li>\"bargeInResponse\"</li>\n       * <li>\"closeResponse\"</li>\n       * <li>\"coachResponse\"</li>\n       * <li>\"configureResponse\"</li>\n       * <li>\"callNotesResponse\"</li>\n       * <li>\"callbacksPendingResponse\"</li>\n       * <li>\"callbackCancelResponse\"</li>\n       * <li>\"campaignDispositionsResponse\"</li>\n       * <li>\"chatResponse\"</li>\n       * <li>\"dialGroupChangeNotification\"</li>\n       * <li>\"dialGroupChangePendingNotification\"</li>\n       * <li>\"dropSessionNotification\"</li>\n       * <li>\"earlyUiiNotification\"</li>\n       * <li>\"endCallNotification\"</li>\n       * <li>\"gatesChangeNotification\"</li>\n       * <li>\"genericNotification\"</li>\n       * <li>\"genericResponse\"</li>\n       * <li>\"holdResponse\"</li>\n       * <li>\"leadSearchResponse\"</li>\n       * <li>\"loginResponse\"</li>\n       * <li>\"logoutResponse\"</li>\n       * <li>\"monitorResponse\"</li>\n       * <li>\"newCallNotification\"</li>\n       * <li>\"offhookInitResponse\"</li>\n       * <li>\"offhookTermNotification\"</li>\n       * <li>\"openResponse\"</li>\n       * <li>\"pauseRecordResponse\"</li>\n       * <li>\"pendingDispNotification\"</li>\n       * <li>\"previewFetchResponse\"</li>\n       * <li>\"previewLeadStateNotification\"</li>\n       * <li>\"recordResponse\"</li>\n       * <li>\"requeueResponse\"</li>\n       * <li>\"reverseMatchNotification\"</li>\n       * <li>\"safeModeFetchResponse\"</li>\n       * <li>\"safeModeSearchResponse\"</li>\n       * <li>\"scriptConfigResponse\"</li>\n       * <li>\"supervisorListResponse\"</li>\n       * <li>\"coldXferResponse\"</li>\n       * <li>\"warmXferResponse\"</li>\n       * <li>\"agentStats\"</li>\n       * <li>\"agentDailyStats\"</li>\n       * <li>\"campaignStats\"</li>\n       * <li>\"queueStats\"</li>\n       * <li>\"chatQueueStats\"</li>\n       * @type {object}\n       */\n      AgentLibrary.prototype.setCallbacks = function (callbackMap) {\n        for (var property in callbackMap) {\n          this.callbacks[property] = callbackMap[property];\n        }\n      };\n\n      /**\n       * Set an individual callback function for the given type\n       * @memberof AgentLibrary.Core\n       * @param {string} type The name of the event that fires the callback function\n       * @param {function} callback The function to call for the given type\n       */\n      AgentLibrary.prototype.setCallback = function (type, callback) {\n        this.callbacks[type] = callback;\n      };\n\n      /**\n       * Get the map of all registered callbacks\n       * @memberof AgentLibrary.Core\n       * @returns {array}\n       */\n      AgentLibrary.prototype.getCallbacks = function () {\n        return this.callbacks;\n      };\n\n      /**\n       * Get a given registered callback by type\n       * @memberof AgentLibrary.Core\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallback = function (type) {\n        return this.callbacks[type];\n      };\n\n      /**\n       * Get the socket connection to IntelliSocket\n       * @memberof AgentLibrary.Core\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getSocket = function (type) {\n        return this.socket;\n      };\n\n      /**\n       * @namespace Requests\n       * @memberof AgentLibrary.Core\n       */\n\n      ////////////////////////////\n      // requests and responses //\n      ////////////////////////////\n      /**\n       * Get outgoing Authenticate Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAuthenticateRequest = function () {\n        return UIModel.getInstance().authenticateRequest;\n      };\n      /**\n       * Get outgoing Login Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoginRequest = function () {\n        return UIModel.getInstance().loginRequest;\n      };\n      /**\n       * Get the MultiSocket Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getMultiSocketRequest = function () {\n        return UIModel.getInstance().multiSocketRequest;\n      };\n      /**\n       * Get outgoing Login Phase 1 Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentConfigRequest = function () {\n        return UIModel.getInstance().loginPhase1Request;\n      };\n      /**\n       * Get outgoing Logout Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLogoutRequest = function () {\n        return UIModel.getInstance().logoutRequest;\n      };\n      /**\n       * Get latest Agent Daily Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStats = function () {\n        return UIModel.getInstance().agentDailyStats;\n      };\n      /**\n       * Get latest Call Tokens object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallTokens = function () {\n        return UIModel.getInstance().callTokens;\n      };\n      /**\n       * Get latest outgoing Agent State Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStateRequest = function () {\n        return UIModel.getInstance().agentStateRequest;\n      };\n      /**\n       * Get latest outgoing offhook init Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookInitRequest = function () {\n        return UIModel.getInstance().offhookInitRequest;\n      };\n      /**\n       * Get latest outgoing offhook termination Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookTermRequest = function () {\n        return UIModel.getInstance().offhookTermRequest;\n      };\n      /**\n       * Get latest outgoing Hangup Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getHangupRequest = function () {\n        return UIModel.getInstance().hangupRequest;\n      };\n      /**\n       * Get latest outgoing Preview Dial Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getPreviewDialRequest = function () {\n        return UIModel.getInstance().previewDialRequest;\n      };\n      /**\n       * Get latest TCPA Safe Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getTcpaSafeRequest = function () {\n        return UIModel.getInstance().tcpaSafeRequest;\n      };\n      /**\n       * Get latest Manual Outdial Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getManualOutdialRequest = function () {\n        return UIModel.getInstance().oneToOneOutdialRequest;\n      };\n      /**\n       * Get latest Manual Outdial Cancel Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getManualOutdialCancelRequest = function () {\n        return UIModel.getInstance().oneToOneOutdialCancelRequest;\n      };\n      /**\n       * Get latest Call Notes Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCallNotesRequest = function () {\n        return UIModel.getInstance().callNotesRequest;\n      };\n      /**\n       * Get latest Campaign Dispositions Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignDispositionsRequest = function () {\n        return UIModel.getInstance().campaignDispositionsRequest;\n      };\n      /**\n       * Get latest Disposition Call Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDispositionRequest = function () {\n        return UIModel.getInstance().dispositionRequest;\n      };\n      /**\n       * Get latest Disposition Manual Pass Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDispositionManualPassRequest = function () {\n        return UIModel.getInstance().dispositionManualPassRequest;\n      };\n      /**\n       * Get latest Warm Transfer Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getWarmTransferRequest = function () {\n        return UIModel.getInstance().warmXferRequest;\n      };\n      /**\n       * Get latest Cold Transfer Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getColdTransferRequest = function () {\n        return UIModel.getInstance().coldXferRequest;\n      };\n      /**\n       * Get latest Warm Transfer Cancel Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getWarmTransferCancelRequest = function () {\n        return UIModel.getInstance().warmXferCancelRequest;\n      };\n      /**\n       * Get latest Requeue Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getRequeueRequest = function () {\n        return UIModel.getInstance().requeueRequest;\n      };\n      /**\n       * Get latest Barge-In Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getBargeInRequest = function () {\n        return UIModel.getInstance().bargeInRequest;\n      };\n      /**\n       * Get latest Hold Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getHoldRequest = function () {\n        return UIModel.getInstance().holdRequest;\n      };\n      /**\n       * Get latest Pause Record Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getPauseRecordRequest = function () {\n        return UIModel.getInstance().pauseRecordRequest;\n      };\n      /**\n       * Get latest Record Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getRecordRequest = function () {\n        return UIModel.getInstance().recordRequest;\n      };\n      /**\n       * Get latest Chat Presented Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatPresentedRequest = function () {\n        return UIModel.getInstance().chatPresentedRequest;\n      };\n      /**\n       * Get latest Chat Disposition Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatDispositionRequest = function () {\n        return UIModel.getInstance().chatDispositionRequest;\n      };\n      /**\n       * Get latest Chat Message Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatMessageRequest = function () {\n        return UIModel.getInstance().chatMessageRequest;\n      };\n      /**\n       * Get latest Chat Requeue Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatRequeueRequest = function () {\n        return UIModel.getInstance().chatRequeueRequest;\n      };\n      /**\n       * Get latest Chat Typing Request object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatTypingRequest = function () {\n        return UIModel.getInstance().chatTypingRequest;\n      };\n      /**\n       * Get latest Agent Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStatsPacket = function () {\n        return UIModel.getInstance().agentStatsPacket;\n      };\n      /**\n       * Get latest Agent Daily Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStatsPacket = function () {\n        return UIModel.getInstance().agentDailyStatsPacket;\n      };\n      /**\n       * Get latest Queue Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getQueueStatsPacket = function () {\n        return UIModel.getInstance().queueStatsPacket;\n      };\n      /**\n       * Get latest Chat Queue Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatQueueStatsPacket = function () {\n        return UIModel.getInstance().chatQueueStatsPacket;\n      };\n      /**\n       * Get latest Campaign Stats object\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignStatsPacket = function () {\n        return UIModel.getInstance().campaignStatsPacket;\n      };\n      /**\n       * Get packet received on successful Phase 1 login\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentConfigPacket = function () {\n        return UIModel.getInstance().loginPhase1Packet;\n      };\n      /**\n       * Get packet received on successful Login (2nd layer login)\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoginPacket = function () {\n        return UIModel.getInstance().loginPacket;\n      };\n      /**\n       * Get latest received packet for Agent State\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStatePacket = function () {\n        return UIModel.getInstance().agentStatePacket;\n      };\n      /**\n       * Get latest received packet for the Current Call\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCurrentCallPacket = function () {\n        return UIModel.getInstance().currentCallPacket;\n      };\n      /**\n       * Get latest received packet for initiating an offhook session\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookInitPacket = function () {\n        return UIModel.getInstance().offhookInitPacket;\n      };\n      /**\n       * Get latest received packet for terminating an offhook session\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOffhookTermPacket = function () {\n        return UIModel.getInstance().offhookTermPacket;\n      };\n\n      /**\n       * Get chat agent end request class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getChatAgentEnd = function () {\n        return UIModel.getInstance().chatAgentEnd;\n      };\n\n      /**\n       * Get WebRTC request class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getWebRTCRequest = function () {\n        return UIModel.getInstance().webRTCRequest;\n      };\n\n      AgentLibrary.prototype.getChatListRequest = function () {\n        return UIModel.getInstance().chatListRequest;\n      };\n\n      /**\n       * Get SearchDirectoryRequest class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n\n      AgentLibrary.prototype.getSearchDirectoryRequest = function () {\n        return UIModel.getInstance().searchDirectoryRequest;\n      };\n\n      /**\n       * @namespace Notifications\n       * @memberof AgentLibrary.Core\n       */\n      ///////////////////\n      // notifications //\n      ///////////////////\n      /**\n       * Get Dial Group Change notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDialGroupChangeNotification = function () {\n        return UIModel.getInstance().dialGroupChangeNotification;\n      };\n      /**\n       * Get Dial Group Change Pending notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDialGroupChangePendingNotification = function () {\n        return UIModel.getInstance().dialGroupChangePendingNotification;\n      };\n      /**\n       * Get End Call notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getEndCallNotification = function () {\n        return UIModel.getInstance().endCallNotification;\n      };\n      /**\n       * Get Gates Change notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getGatesChangeNotification = function () {\n        return UIModel.getInstance().gatesChangeNotification;\n      };\n      /**\n       * Get Generic notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getGenericNotification = function () {\n        return UIModel.getInstance().genericNotification;\n      };\n      /**\n       * Get New Call notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getNewCallNotification = function () {\n        return UIModel.getInstance().newCallNotification;\n      };\n      /**\n       * Get current call object\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCurrentCall = function () {\n        return UIModel.getInstance().currentCall;\n      };\n      /**\n       * Get Add Session notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAddSessionNotification = function () {\n        return UIModel.getInstance().addSessionNotification;\n      };\n      /**\n       * Get Drop Session notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getDropSessionNotification = function () {\n        return UIModel.getInstance().dropSessionNotification;\n      };\n      /**\n       * Get Early UII notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getEarlyUiiNotification = function () {\n        return UIModel.getInstance().earlyUiiNotification;\n      };\n      /**\n       * Get Chat Active notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatActiveNotification = function () {\n        return UIModel.getInstance().chatActiveNotification;\n      };\n      /**\n       * Get Chat Inactive notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatInactiveNotification = function () {\n        return UIModel.getInstance().chatInactiveNotification;\n      };\n      /**\n       * Get Chat Inactive notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatClientReconnectNotification = function () {\n        return UIModel.getInstance().chatClientReconnectNotification;\n      };\n      /**\n       * Get Chat Presented notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatPresentedNotification = function () {\n        return UIModel.getInstance().chatPresentedNotification;\n      };\n      /**\n       * Get Chat Typing notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatTypingNotification = function () {\n        return UIModel.getInstance().chatTypingNotification;\n      };\n      /**\n       * Get New Chat notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getNewChatNotification = function () {\n        return UIModel.getInstance().newChatNotification;\n      };\n      /**\n       * Get Load Media notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getLoadMediaNotification = function () {\n        return UIModel.getInstance().loadMediaNotification;\n      };\n      /**\n       * Get Load Media notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatAgentAssignFailureNotification = function () {\n        return UIModel.getInstance().chatAgentAssignFailureNotification;\n      };\n      /**\n       * Get Chat Typing notification class\n       * @memberof AgentLibrary.Core.Notifications\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatCancelledNotification = function () {\n        return UIModel.getInstance().chatCancelledNotification;\n      };\n\n      /**\n       * @namespace Settings\n       * @memberof AgentLibrary.Core\n       */\n      //////////////////////\n      // settings objects //\n      //////////////////////\n      /**\n       * Get Application Settings object containing the current state of application related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getApplicationSettings = function () {\n        return UIModel.getInstance().applicationSettings;\n      };\n      /**\n       * Get Softphone Settings object containing the current state of SIP related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getSoftphoneSettings = function () {\n        return UIModel.getInstance().softphoneSettings;\n      };\n      /**\n       * Get Chat Settings object containing the current state of chat related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatSettings = function () {\n        return UIModel.getInstance().chatSettings;\n      };\n      /**\n       * Get Connection Settings object containing the current state of connection related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getConnectionSettings = function () {\n        return UIModel.getInstance().connectionSettings;\n      };\n      /**\n       * Get Inbound Settings object containing the current state of inbound related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getInboundSettings = function () {\n        return UIModel.getInstance().inboundSettings;\n      };\n      /**\n       * Get Outbound Settings object containing the current state of outbound related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getOutboundSettings = function () {\n        return UIModel.getInstance().outboundSettings;\n      };\n      /**\n       * Get Agent Settings object containing the current state of agent related data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentSettings = function () {\n        return UIModel.getInstance().agentSettings;\n      };\n      /**\n       * Get Transfer Sessions\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getTransferSessions = function () {\n        return UIModel.getInstance().transferSessions;\n      };\n\n      AgentLibrary.prototype.getPendingSessions = function () {\n        return UIModel.getInstance().pendingNewCallSessions;\n      };\n      /**\n       * Get the Agent Permissions object containing the current state of agent permissions\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentPermissions = function () {\n        return UIModel.getInstance().agentPermissions;\n      };\n\n      /**\n       * @namespace Stats\n       * @memberof AgentLibrary.Core\n       */\n      ///////////////////\n      // stats objects //\n      ///////////////////\n\n      /**\n       * Get the Agent stats object containing the current state of agent stats\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentStats = function () {\n        return UIModel.getInstance().agentStats;\n      };\n      /**\n       * Get the Agent Daily stats object containing the current state of agent daily stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getAgentDailyStats = function () {\n        return UIModel.getInstance().agentDailyStats;\n      };\n      /**\n       * Get the Queue stats object containing the current state of queue stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getQueueStats = function () {\n        return UIModel.getInstance().queueStats;\n      };\n      /**\n       * Get the Chat Queue stats object containing the current state of chat queue stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getChatQueueStats = function () {\n        return UIModel.getInstance().chatQueueStats;\n      };\n      /**\n       * Get the Campaign stats object containing the current state of campaign stats\n       * @memberof AgentLibrary.Core.Stats\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getCampaignStats = function () {\n        return UIModel.getInstance().campaignStats;\n      };\n\n      /**\n       * Get filteredDirectory object containing the filtered directory data\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getFilteredDirectory = function () {\n        return UIModel.getInstance().filteredDirectory;\n      };\n\n      /**\n       * Get extensionPresenceResponse object containing the presenceInfo of extensionIds\n       * @memberof AgentLibrary.Core.Settings\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getExtensionPresenceResponse = function () {\n        return UIModel.getInstance().extensionPresenceResponse;\n      };\n\n      /**\n       * Get ExtensionPresenceRequest class\n       * @memberof AgentLibrary.Core.Requests\n       * @returns {object}\n       */\n      AgentLibrary.prototype.getExtensionPresenceRequest = function () {\n        return UIModel.getInstance().extensionPresenceRequest;\n      };\n\n      /**********************\n       *  PRIVATE FUNCTIONS *\n       **********************/\n\n      AgentLibrary.prototype._utils = utils;\n\n      AgentLibrary.prototype._NewCallUtils = NewCallUtils;\n\n      AgentLibrary.prototype._HttpService = HttpService;\n\n      AgentLibrary.prototype._getUIModel = function () {\n        return UIModel;\n      };\n    }\n\n    function initAgentLibrarySocket(context) {\n      'use strict';\n      var AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openSocket = function (agentId, callback) {\n        var instance = this;\n        utils.setCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, callback);\n        if ('WebSocket' in context) {\n          if (!instance.socket) {\n            var model = UIModel.getInstance();\n\n            model.agentSettings.agentId = agentId; // set agentId here since id is in scope\n\n            if (instance._isReconnect) {\n              // update access_token on reconnect\n              _getNewAccessToken(instance);\n            } else {\n              _buildSocketDest();\n              _initSocket(instance);\n            }\n          }\n        } else {\n          console.error('WebSocket NOT supported by your Browser');\n          utils.logMessage(\n            LOG_LEVELS.WARN,\n            'WebSocket NOT supported by your Browser',\n            '',\n          );\n        }\n      };\n\n      AgentLibrary.prototype.closeSocket = function () {\n        this.socket.close();\n      };\n\n      // when socket is successfully opened, check to see if there are any queued messaged\n      // and if so, send them.\n      AgentLibrary.prototype.socketOpened = function () {\n        var instance = this;\n        var currDts = new Date();\n        var threeMins = 3 * 60 * 1000; // milliseconds\n        var queuedMsg;\n\n        // get agent configuration information - \"phase 1 login\"\n        UIModel.getInstance().loginPhase1Request = new LoginPhase1Request();\n        var msg = UIModel.getInstance().loginPhase1Request.formatJSON();\n        utils.sendMessage(this, msg);\n\n        // if this is a reconnect, we need to re-authenticate with IntelliServices & IntelliQueue\n        if (instance._isReconnect) {\n          instance._isReconnect = false;\n          // Add IntelliQueue reconnect\n          var loginRequest = JSON.parse(\n            UIModel.getInstance().loginRequest.formatJSON(),\n          );\n          var hashCode = UIModel.getInstance().connectionSettings.hashCode;\n          loginRequest.ui_request.hash_code = {\n            '#text': hashCode,\n          };\n          loginRequest.ui_request.update_login = {\n            '#text': 'FALSE',\n          };\n          loginRequest.ui_request.reconnect = {\n            '#text': 'TRUE',\n          };\n          instance._queuedMsgs.unshift({\n            dts: new Date(),\n            msg: JSON.stringify(loginRequest),\n          });\n        }\n        for (var idx = 0; idx < instance._queuedMsgs.length; idx++) {\n          queuedMsg = instance._queuedMsgs[idx];\n          if (currDts.getTime() - queuedMsg.dts.getTime() < threeMins) {\n            // message queued less than 3 mins ago, send\n            utils.logMessage(\n              LOG_LEVELS.DEBUG,\n              'Sending queued message to IntelliSocket.',\n              queuedMsg.msg,\n            );\n            utils.sendMessage(instance, queuedMsg.msg);\n          } else {\n            // message expired, don't send\n            utils.logMessage(\n              LOG_LEVELS.DEBUG,\n              'Queued message expired, discarding.',\n              queuedMsg.msg,\n            );\n          }\n        }\n        // reset queued messages\n        instance._queuedMsgs = [];\n      };\n\n      // build WebSocket destination based on current agentId and access token\n      function _buildSocketDest() {\n        var model = UIModel.getInstance();\n        var socketDest = model.applicationSettings.socketDest;\n        socketDest = model.socketProtocol + model.authenticateRequest.socketUrl;\n        socketDest += ':' + model.authenticateRequest.socketPort;\n        socketDest += '?access_token=' + model.authenticateRequest.accessToken;\n        socketDest += '&agent_id=' + model.agentSettings.agentId;\n\n        model.applicationSettings.socketDest = socketDest; // seems redundant, but needed to update value on model\n        return socketDest;\n      }\n\n      // connect socket, setup socket event listeners\n      function _initSocket(instance) {\n        var socketDest = UIModel.getInstance().applicationSettings.socketDest;\n        utils.logMessage(\n          LOG_LEVELS.DEBUG,\n          'Attempting to open socket connection to ' + socketDest,\n          '',\n        );\n\n        instance.socket = new WebSocket(socketDest);\n\n        instance.socket.onopen = function () {\n          // stop reconnect timer\n          clearInterval(UIModel.getInstance().reconnectIntervalId);\n          UIModel.getInstance().reconnectIntervalId = null;\n\n          UIModel.getInstance().applicationSettings.socketConnected = true;\n          utils.fireCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, {\n            reconnect: instance._isReconnect,\n          });\n          instance.socketOpened();\n        };\n\n        instance.socket.onerror = function (err) {\n          utils.fireCallback(instance, CALLBACK_TYPES.OPEN_SOCKET, {\n            error: err,\n          });\n        };\n\n        instance.socket.onmessage = function (evt) {\n          if (evt.data !== 'BOP') {\n            var data = JSON.parse(evt.data);\n            if (data.ui_response) {\n              utils.processResponse(instance, data);\n            } else if (data.ui_notification) {\n              utils.processNotification(instance, data);\n            } else if (data.dialer_request) {\n              utils.processDialerResponse(instance, data);\n            } else if (data.ui_stats) {\n              utils.processStats(instance, data);\n            } else if (data.ui_request) {\n              utils.processRequest(instance, data);\n            }\n          }\n        };\n\n        instance.socket.onclose = function () {\n          utils.fireCallback(instance, CALLBACK_TYPES.CLOSE_SOCKET, '');\n          UIModel.getInstance().applicationSettings.socketConnected = false;\n          instance.socket = null;\n\n          // cancel daily stats timer\n          clearInterval(UIModel.getInstance().agentDailyIntervalId);\n          UIModel.getInstance().agentDailyIntervalId = null;\n\n          // cancel stats timer\n          clearInterval(UIModel.getInstance().statsIntervalId);\n          UIModel.getInstance().statsIntervalId = null;\n\n          // cancel BEAT timer\n          clearInterval(UIModel.getInstance().pingStatIntervalId);\n          UIModel.getInstance().pingStatIntervalId = null;\n\n          // if we are still logged in, set reconnect flag and try to reconnect\n          if (UIModel.getInstance().agentSettings.isLoggedIn) {\n            instance._isReconnect = true;\n            console.warn(\n              'AgentLibrary: WebSocket is not connected, attempting to reconnect.',\n            );\n\n            // try reconnect every 5 seconds\n            UIModel.getInstance().reconnectIntervalId = setInterval(\n              function () {\n                instance.openSocket(\n                  UIModel.getInstance().agentSettings.agentId,\n                );\n              },\n              5000,\n            );\n          }\n        };\n      }\n\n      // get valid access token based on agentId and login hash code\n      function _getNewAccessToken(instance) {\n        var model = UIModel.getInstance();\n        var baseUrl = model.authHost + model.baseAuthUri;\n        var errorMsg = 'Error in opening WebSocket on retrieving access token';\n        var params = {\n          queryParams: {\n            loginHashcode: model.connectionSettings.hashCode,\n            agentId: model.agentSettings.agentId,\n            platformId: model.authenticateRequest.platformId,\n          },\n        };\n\n        new HttpService(baseUrl).httpPost('login/agent/hashcode', params).then(\n          function (response) {\n            try {\n              response = JSON.parse(response.response);\n              UIModel.getInstance().authenticateRequest.accessToken =\n                response.accessToken;\n              _buildSocketDest();\n              _initSocket(instance);\n            } catch (err) {\n              utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n            }\n          },\n          function (err) {\n            var errResponse = {\n              type: 'WebSocket Error',\n              message: errorMsg,\n            };\n            utils.logMessage(LOG_LEVELS.WARN, errorMsg, err);\n          },\n        );\n      }\n    }\n\n    function initAgentLibraryAgent(context) {\n      /**\n       * @namespace Agent\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Sends authenticate request to Engage Auth. Can either pass in 3 params of username, password, and platformId or\n       * two params of jwt and tokenType. In each case a callback function may optionally be specified.\n       * @memberof AgentLibrary.Agent\n       * @param {string} username Agent's username\n       * @param {string} password Agent's password\n       * @param {string} platformId Designate the platform where the agent is set up\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithUsernamePassword = function (\n        username,\n        password,\n        platformId,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          username: username,\n          password: password,\n          platformId: platformId,\n          authType: AUTHENTICATE_TYPES.USERNAME_PASSWORD,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends authenticate request to Engage Auth. Returns an array of agents to continue login process.\n       * @memberof AgentLibrary.Agent\n       * @param {string} rcAccessToken JSON Web Token received from RingCentral Single Sign-on API\n       * @param {string} tokenType string type received from RingCentral Single Sign-on API\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithRcAccessToken = function (\n        rcAccessToken,\n        tokenType,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          rcAccessToken: rcAccessToken,\n          tokenType: tokenType,\n          authType: AUTHENTICATE_TYPES.RC_TOKEN,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends authenticate request to Engage Auth. Returns an array of agents to continue login process.\n       * @memberof AgentLibrary.Agent\n       * @param {string} engageAccessToken JSON Web Token received from RingCentral Single Sign-on API\n       * @param {function} [callback=null] Callback function when loginAgent response received\n       */\n      AgentLibrary.prototype.authenticateAgentWithEngageAccessToken = function (\n        engageAccessToken,\n        callback,\n      ) {\n        UIModel.getInstance().authenticateRequest = new AuthenticateRequest({\n          engageAccessToken: engageAccessToken,\n          authType: AUTHENTICATE_TYPES.ENGAGE_TOKEN,\n        });\n        UIModel.getInstance().authenticateRequest.sendHttpRequest();\n\n        utils.setCallback(this, CALLBACK_TYPES.AUTHENTICATE, callback);\n      };\n\n      /**\n       * Sends request to IntelliQueue to get the agent's available products for login\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when loginPhase1 response received\n       */\n      AgentLibrary.prototype.getAgentConfig = function (callback) {\n        UIModel.getInstance().loginPhase1Request = new LoginPhase1Request();\n        var msg = UIModel.getInstance().loginPhase1Request.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LOGIN_PHASE_1, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends request to the WebRTC Endpoint URL and process the response.\n       * @memberof AgentLibrary.Agent\n       *\n       * @param {function} [callback=null] Callback function when web rtc info response received\n       */\n      AgentLibrary.prototype.getWebRtcInfo = function (callback) {\n        var model = UIModel.getInstance();\n        model.webRTCRequest = new WebRTCRequest();\n        model.webRTCRequest.getSipRegistrationInfo();\n\n        utils.setCallback(this, CALLBACK_TYPES.WEBRTC_INFO, callback);\n      };\n\n      /**\n       * Sends agent configure message (2nd layer login) to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} dialDest The agent's number, sip | DID.\n       * @param {string[]} [queueIds=null] The queue ids the agent will be logged into.\n       * @param {string[]} [chatIds=null] The chat ids the agent will be logged into.\n       * @param {string} [skillProfileId=null] The skill profile the agent will be logged into.\n       * @param {string} [dialGroupId=null] The outbound dial group id the agent will be logged into.\n       * @param {string} [updateFromAdminUI=false] Whether the request is generated from the AdminUI or not.\n       * @param {boolean} isForce Whether the agent login is forcing an existing agentlogin out.\n       * @param {function} [callback=null] Callback function when configureAgent response received.\n       */\n      AgentLibrary.prototype.loginAgent = function (\n        dialDest,\n        queueIds,\n        chatIds,\n        skillProfileId,\n        dialGroupId,\n        updateFromAdminUI,\n        isForce,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n        var config = {\n          dialDest: dialDest,\n          queueIds: queueIds,\n          chatIds: chatIds,\n          skillProfileId: skillProfileId,\n          dialGroupId: dialGroupId,\n          updateFromAdminUI: updateFromAdminUI,\n          isForce: isForce,\n        };\n        var instance = this;\n        // if dialDest is set to `integrated`, we are doing an integrated softphone\n        // and need to get SIP credentials\n        if (config.dialDest === 'integrated') {\n          // set up some global variables to track dial dest type for later offhook init\n          if (model.applicationSettings.isSso) {\n            model.applicationSettings.dialDestType = 'RC_SOFTPHONE';\n          } else {\n            model.applicationSettings.dialDestType = 'LEGACY_SOFTPHONE';\n          }\n\n          if (model.softphoneSettings.sipInfo.length === 0) {\n            // call engage-auth api to get webRtc info\n            model.libraryInstance.getWebRtcInfo(function () {\n              config.dialDest = utils.getDialDestination();\n              _setUpAndSendLogin(config, callback, instance);\n            });\n          } else {\n            // set webRtc info from model, could be an update login\n            config.dialDest = utils.getDialDestination();\n            _setUpAndSendLogin(config, callback, instance);\n          }\n        } else {\n          // set up some global variables to track dial dest type for later offhook init\n          if (config.dialDest === 'RC_PHONE') {\n            model.applicationSettings.dialDestType = 'RC_PHONE';\n          }\n\n          _setUpAndSendLogin(config, callback, instance);\n        }\n      };\n\n      function _setUpAndSendLogin(config, callback, instance) {\n        UIModel.getInstance().loginRequest = new LoginRequest(\n          config.dialDest,\n          config.queueIds,\n          config.chatIds,\n          config.skillProfileId,\n          config.dialGroupId,\n          config.updateFromAdminUI,\n          config.isForce,\n        );\n        var msg = UIModel.getInstance().loginRequest.formatJSON();\n\n        utils.setCallback(instance, CALLBACK_TYPES.LOGIN, callback);\n        utils.sendMessage(instance, msg);\n      }\n      /**\n       * Sends multisocket message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when multisocket response received.\n       */\n      AgentLibrary.prototype.multiLoginRequest = function (callback) {\n        var model = UIModel.getInstance();\n        model.multiSocketRequest = new MultiSocketRequest();\n        var msg = model.multiSocketRequest.formatJSON();\n        if (\n          model.dataStore.get('agent_id') &&\n          model.dataStore.get('hash_code')\n        ) {\n          utils.setCallback(this, CALLBACK_TYPES.LOGIN_MULTISOCKET, callback);\n          utils.sendMessage(this, msg);\n        } else {\n          this.getAgentConfig(callback);\n        }\n      };\n\n      /**\n       * Sends agent logout message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {number} agentId Id of the agent that will be logged out.\n       * @param {function} [callback=null] Callback function when logoutAgent response received.\n       */\n      AgentLibrary.prototype.logoutAgent = function (agentId, callback) {\n        var model = UIModel.getInstance();\n        if (model.agentSettings.isLoggedIn) {\n          model.agentSettings.isLoggedIn = false;\n          model.logoutRequest = new LogoutRequest(agentId);\n          var msg = model.logoutRequest.formatJSON();\n\n          // socket closed in callback function\n          utils.setCallback(this, CALLBACK_TYPES.LOGOUT, callback);\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Sends agent logout for the given agent to logout message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {number} agentToLogout Id of the agent that will be logged out.\n       * @param {number} [requestMessage=\"\"] Message to send for the logout request.\n       * @param {function} [callback=null] Callback function when logoutAgent response received.\n       */\n      AgentLibrary.prototype.requestLogoutAgent = function (\n        agentToLogout,\n        requestMessage,\n        callback,\n      ) {\n        var isSupervisor =\n          UIModel.getInstance().agentSettings.agentType === 'SUPERVISOR';\n        if (isSupervisor) {\n          //This is a supervisor request to log an agent out. Create the\n          //logout packet and then send the packet to IntelliQueue.\n          UIModel.getInstance().logoutRequest = new LogoutRequest(\n            agentToLogout,\n            requestMessage,\n          );\n          utils.setCallback(this, CALLBACK_TYPES.LOGOUT, callback);\n          var msg = UIModel.getInstance().logoutRequest.formatJSON();\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Sends agent state change message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} agentState The system/base state to transition to <br />\n       * AVAILABLE | TRANSITION | ENGAGED | ON-BREAK | WORKING | AWAY | LUNCH | AUX-UNAVAIL-NO-OFFHOOK | AUX-UNAVAIL-OFFHOOK\n       * @param {string} [agentAuxState=\"\"] The aux state display label\n       * @param {function} [callback=null] Callback function when agentState response received\n       */\n      AgentLibrary.prototype.setAgentState = function (\n        agentState,\n        agentAuxState,\n        callback,\n      ) {\n        UIModel.getInstance().agentStateRequest = new AgentStateRequest(\n          agentState,\n          agentAuxState,\n        );\n        var msg = UIModel.getInstance().agentStateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.AGENT_STATE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Initiates an agent offhook session\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when offhookInit response received\n       */\n      AgentLibrary.prototype.offhookInit = function (callback) {\n        UIModel.getInstance().offhookInitRequest = new OffhookInitRequest();\n        var msg = UIModel.getInstance().offhookInitRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.OFFHOOK_INIT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Terminates agent's offhook session\n       * @memberof AgentLibrary.Agent\n       * @param {function} [callback=null] Callback function when pending callbacks response received\n       */\n      AgentLibrary.prototype.offhookTerm = function (callback) {\n        UIModel.getInstance().offhookTermRequest = new OffhookTermRequest();\n        var msg = UIModel.getInstance().offhookTermRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.OFFHOOK_TERM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Returns scheduled callbacks for the given agent\n       * @memberof AgentLibrary.Agent\n       * @param {number} [agentId=logged in agent id] Id of agent to get callbacks for\n       * @param {function} [callback=null] Callback function when pending callbacks response received\n       */\n      AgentLibrary.prototype.getPendingCallbacks = function (\n        agentId,\n        callback,\n      ) {\n        UIModel.getInstance().callbacksPendingRequest = new CallbacksPendingRequest(\n          agentId,\n        );\n        var msg = UIModel.getInstance().callbacksPendingRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALLBACK_PENDING, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel a scheduled callback for the given agent based on lead id\n       * @memberof AgentLibrary.Agent\n       * @param {number} leadId Id of lead callback to cancel\n       * @param {number} [agentId=logged in agent id] Id of agent to cancel specified lead callback for\n       * @param {function} [callback=null] Callback function when callback is canceled\n       */\n      AgentLibrary.prototype.cancelCallback = function (\n        leadId,\n        agentId,\n        callback,\n      ) {\n        UIModel.getInstance().callbackCancelRequest = new CallbackCancelRequest(\n          leadId,\n          agentId,\n        );\n        var msg = UIModel.getInstance().callbackCancelRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALLBACK_CANCEL, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request stats messages to be sent every 5 seconds. The stats responses will be sent as\n       * four possible callback types: agentStats, agentDailyStats, campaignStats, or queueStats\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.requestStats = function () {\n        // start stats interval timer, request stats every 5 seconds\n        if (UIModel.getInstance().statsIntervalId === null) {\n          UIModel.getInstance().statsIntervalId = setInterval(\n            utils.sendStatsRequestMessage,\n            5000,\n          );\n          _terminatePing();\n        }\n      };\n\n      /**\n       * Terminate stats messages sent to the agent every 5 seconds.\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.terminateStats = function () {\n        clearInterval(UIModel.getInstance().statsIntervalId);\n        UIModel.getInstance().statsIntervalId = null;\n        _requestPing();\n      };\n\n      function _requestPing() {\n        // start ping interval timer, request BEAT every 20 seconds\n        if (UIModel.getInstance().pingStatIntervalId === null) {\n          UIModel.getInstance().pingStatIntervalId = setInterval(\n            utils.sendPingRequestMessage,\n            20000,\n          );\n        }\n      }\n\n      function _terminatePing() {\n        clearInterval(UIModel.getInstance().pingStatIntervalId);\n        UIModel.getInstance().pingStatIntervalId = null;\n      }\n\n      /**\n       * Set the agent dial destination\n       * @memberof AgentLibrary.Agent\n       * @param {string} dialDest The dial destination used for softphone registration\n       * @param {boolean} isSoftphoneError True - if we want to log this dial destination update as a softphone error\n       */\n      AgentLibrary.prototype.updateDialDestination = function (\n        dialDest,\n        isSoftphoneError,\n      ) {\n        UIModel.getInstance().updateDialDestinationRequest = new UpdateDialDestinationRequest(\n          dialDest,\n          isSoftphoneError,\n        );\n        var msg = UIModel.getInstance().updateDialDestinationRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Search Directory for the searchString passed to function.\n       * @memberof AgentLibrary.Agent\n       * @param {string} searchString The search filter for PBX directory\n       */\n      AgentLibrary.prototype.searchDirectory = function (\n        searchString,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n\n        model.searchDirectoryRequest = new SearchDirectoryRequest(searchString);\n        model.searchDirectoryRequest.searchDirectory(searchString);\n        utils.setCallback(this, CALLBACK_TYPES.SEARCH_DIR, callback);\n      };\n\n      /**\n       * Refresh Token method\n       * @memberof AgentLibrary.Agent\n       */\n      AgentLibrary.prototype.getRefreshedToken = function () {\n        utils.refreshAccessToken();\n      };\n\n      /**\n       * get Extension Presence  Info for the extension Ids passed to function.\n       * @memberof AgentLibrary.Agent\n       * @param {string} extensionIds The extension Ids of RC\n       */\n      AgentLibrary.prototype.getExtensionPresenceInfo = function (\n        extensionIds,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n        model.extensionPresenceRequest = new ExtensionPresenceRequest(\n          extensionIds,\n        );\n        model.extensionPresenceRequest.getExtensionPresenceInfo(extensionIds);\n        utils.setCallback(this, CALLBACK_TYPES.EXTENSION_PRESENCE, callback);\n      };\n    }\n\n    function initAgentLibraryCall(context) {\n      /**\n       * @namespace Call\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Barge in on a call, can hear all parties and be heard by all\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when barge in response received\n       */\n      AgentLibrary.prototype.bargeIn = function (\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'FULL',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.BARGE_IN, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Add a coaching session to the call, can hear all parties but only able to speak on agent channel\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when coaching session response received\n       */\n      AgentLibrary.prototype.coach = function (\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'COACHING',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.COACH_CALL, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {function} [callback=null] Callback function when cold transfer response received\n       */\n      AgentLibrary.prototype.coldXfer = function (\n        dialDest,\n        callerId,\n        sipHeaders,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n        );\n        var msg = UIModel.getInstance().coldXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.internationalColdXfer = function (\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().coldXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a disposition for an inbound or outbound call\n       * @memberof AgentLibrary.Call\n       * @param {string} uii UII (unique id) for call\n       * @param {string} dispId The disposition id\n       * @param {string} notes Agent notes for call\n       * @param {boolean} callback Boolean for whether or not this call is a callback\n       * @param {string} [callbackDTS=\"\"] date time stamp if callback\n       * @param {string} [contactForwardNumber=null] Number for contact forwarding\n       * @param {string} [survey=null] The survey response values for the call.\n       * Format: survey = [ { label: \"\", externId: \"\", leadUpdateColumn: \"\"} ]\n       * @param {string} [externId=null] The external id associated with the lead for this call (only for Outbound Dispositions).\n       * @param {string} [leadId=null] The lead id associated with this call (only for Outbound Dispositions).\n       * @param {string} [requestId=null] The request id associated with a preview fetched lead (only for Outbound Dispositions).\n       */\n      AgentLibrary.prototype.dispositionCall = function (\n        uii,\n        dispId,\n        notes,\n        callback,\n        callbackDTS,\n        contactForwardNumber,\n        survey,\n        externId,\n        leadId,\n        requestId,\n      ) {\n        var model = UIModel.getInstance();\n        model.dispositionRequest = new DispositionRequest(\n          uii,\n          dispId,\n          notes,\n          callback,\n          callbackDTS,\n          contactForwardNumber,\n          survey,\n          externId,\n          leadId,\n          requestId,\n        );\n        var msg = model.dispositionRequest.formatJSON();\n        utils.sendMessage(this, msg);\n\n        // cancel ping call timer\n        if (model.pingIntervalId) {\n          clearInterval(model.pingIntervalId);\n          model.pingIntervalId = null;\n        }\n      };\n\n      /**\n       * Send a disposition for a manual pass on a lead\n       * @memberof AgentLibrary.Call\n       * @param {string} dispId The disposition id\n       * @param {string} notes Agent notes for call\n       * @param {boolean} callback Boolean for whether or not this call is a callback\n       * @param {string} [callbackDTS=\"\"] date time stamp if callback\n       * @param {string} [leadId=null] The lead id\n       * @param {string} [requestId=null] The request key for the lead\n       * @param {string} [externId=null] The external id of the lead\n       */\n      AgentLibrary.prototype.dispositionManualPass = function (\n        dispId,\n        notes,\n        callback,\n        callbackDTS,\n        leadId,\n        requestId,\n        externId,\n      ) {\n        UIModel.getInstance().dispositionManualPassRequest = new DispositionManualPassRequest(\n          dispId,\n          notes,\n          callback,\n          callbackDTS,\n          leadId,\n          requestId,\n          externId,\n        );\n        var msg = UIModel.getInstance().dispositionManualPassRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get a list of all campaign dispositions for given campaign id\n       * @memberof AgentLibrary.Call\n       * @param {string} campaignId Id for campaign to get dispositions for\n       * @param {function} [callback=null] Callback function when campaign dispositions response received\n       */\n      AgentLibrary.prototype.getCampaignDispositions = function (\n        campaignId,\n        callback,\n      ) {\n        UIModel.getInstance().campaignDispositionsRequest = new CampaignDispositionsRequest(\n          campaignId,\n        );\n        var msg = UIModel.getInstance().campaignDispositionsRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CAMPAIGN_DISPOSITIONS, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a hangup request message\n       * @memberof AgentLibrary.Call\n       * @param {string} [sessionId=\"\"] Session to hangup, defaults to current call session id\n       * @param {boolean} resetPendingDisp, reset pendingDisp to false, in case of bad reconnect\n       */\n      AgentLibrary.prototype.hangup = function (sessionId, resetPendingDisp) {\n        UIModel.getInstance().hangupRequest = new HangupRequest(\n          sessionId,\n          resetPendingDisp,\n        );\n        var msg = UIModel.getInstance().hangupRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Place a call on hold\n       * @memberof AgentLibrary.Call\n       * @param {boolean} holdState Whether we are putting call on hold or taking off hold - values true | false\n       * @param {function} [callback=null] Callback function when hold response received\n       */\n      AgentLibrary.prototype.hold = function (holdState, callback) {\n        UIModel.getInstance().holdRequest = new HoldRequest(holdState);\n        var msg = UIModel.getInstance().holdRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.HOLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Place a specified session of a call on hold\n       * @memberof AgentLibrary.Call\n       * @param {boolean} holdState Whether we are putting call on hold or taking off hold - values true | false\n       * @param {integer|string} sessionId session id of the call to place on hold\n       * @param {function} [callback=null] Callback function when hold response received\n       */\n      AgentLibrary.prototype.holdSession = function (\n        holdState,\n        sessionId,\n        callback,\n      ) {\n        UIModel.getInstance().holdRequest = new HoldRequest(\n          holdState,\n          sessionId,\n        );\n        var msg = UIModel.getInstance().holdRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.HOLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a manual outdial request message\n       * @memberof AgentLibrary.Call\n       * @param {string} destination Number to call - ANI\n       * @param {number} callerId Number displayed to callee, DNIS\n       * @param {number} [ringTime=60] Time in seconds to ring call\n       * @param {string} [countryId='USA'] Country for the destination number\n       * @param {number} [queueId=''] Queue id to tie manual call to\n       */\n      AgentLibrary.prototype.manualOutdial = function (\n        destination,\n        callerId,\n        ringTime,\n        countryId,\n        queueId,\n      ) {\n        UIModel.getInstance().oneToOneOutdialRequest = new OneToOneOutdialRequest(\n          destination,\n          callerId,\n          ringTime,\n          countryId,\n          queueId,\n        );\n        var msg = UIModel.getInstance().oneToOneOutdialRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancels a manual outdial request by UII.\n       * @memberof AgentLibrary.Call\n       * @param {string} uii UII of manual call request, the UII is returned in the EARLY_UII notification.\n       */\n      AgentLibrary.prototype.manualOutdialCancel = function (uii) {\n        UIModel.getInstance().oneToOneOutdialCancelRequest = new OneToOneOutdialCancelRequest(\n          uii,\n        );\n        var msg = UIModel.getInstance().oneToOneOutdialCancelRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pause call recording\n       * @memberof AgentLibrary.Call\n       * @param {boolean} record Whether we are recording or not\n       * @param {function} [callback=null] Callback function when pause record response received\n       */\n      AgentLibrary.prototype.pauseRecord = function (record, callback) {\n        UIModel.getInstance().pauseRecordRequest = new PauseRecordRequest(\n          record,\n        );\n        var msg = UIModel.getInstance().pauseRecordRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.PAUSE_RECORD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a preview dial request to call lead based on request id and (optional) lead phone.\n       * Call previewFetch method first to get request id.\n       * @memberof AgentLibrary.Call\n       * @param {number} requestId Pending request id sent back with lead, required to dial lead.\n       * @param {number} [leadPhone=\"\"] Lead phone number. Only needed if there are multiple numbers loaded for given lead.\n       */\n      AgentLibrary.prototype.previewDial = function (requestId, leadPhone) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          '',\n          [],\n          requestId,\n          leadPhone,\n        );\n        var msg = UIModel.getInstance().previewDialRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a message to fetch preview dialable leads\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when preview fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.previewFetch = function (searchFields, callback) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          '',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().previewDialRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.PREVIEW_FETCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pull back leads that match search criteria\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when lead search completed, returns matched leads\n       */\n      AgentLibrary.prototype.searchLeads = function (searchFields, callback) {\n        UIModel.getInstance().previewDialRequest = new PreviewDialRequest(\n          'search',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().previewDialRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_SEARCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Set agent notes for a call\n       * @memberof AgentLibrary.Call\n       * @param {string} notes Agent notes to add to call\n       * @param {function} [callback=null] Callback function when call notes response received\n       */\n      AgentLibrary.prototype.setCallNotes = function (notes, callback) {\n        UIModel.getInstance().callNotesRequest = new CallNotesRequest(notes);\n        var msg = UIModel.getInstance().callNotesRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CALL_NOTES, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Add a silent monitor session to a call, can hear all channels but can't be heard by any party\n       * @memberof AgentLibrary.Call\n       * @param {number} agentId Agent Id of the current logged in agent\n       * @param {string} uii UII of the active call you wish to monitor\n       * @param {number} monitorAgentId UII Agent Id of the agent you wish to monitor\n       * @param {function} [callback=null] Callback function when silent monitor response received\n       */\n      AgentLibrary.prototype.monitor = function (\n        agentId,\n        uii,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().bargeInRequest = new BargeInRequest(\n          'MUTE',\n          agentId,\n          uii,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().bargeInRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SILENT_MONITOR, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Toggle call recording based on passed in boolean true | false\n       * @memberof AgentLibrary.Call\n       * @param {boolean} record Whether we are recording or not\n       * @param {function} [callback=null] Callback function when record response received\n       */\n      AgentLibrary.prototype.record = function (record, callback) {\n        UIModel.getInstance().recordRequest = new RecordRequest(record);\n        var msg = UIModel.getInstance().recordRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.RECORD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Requeue a call\n       * @memberof AgentLibrary.Call\n       * @param {number} queueId Queue Id to send the call to\n       * @param {number} skillId Skill Id for the requeued call\n       * @param {boolean} maintain Whether or not to maintain the current agent\n       * @param {function} [callback=null] Callback function when requeue response received\n       */\n      AgentLibrary.prototype.requeueCall = function (\n        queueId,\n        skillId,\n        maintain,\n        callback,\n      ) {\n        UIModel.getInstance().requeueRequest = new RequeueRequest(\n          queueId,\n          skillId,\n          maintain,\n        );\n        var msg = UIModel.getInstance().requeueRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.REQUEUE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a TCPA Safe call request to call lead based on request id and (optional) lead phone.\n       * Call safeModeFetch method first to get request id.\n       * @memberof AgentLibrary.Call\n       * @param {number} requestId Pending request id sent back with lead, required to dial lead.\n       * @param {number} [leadPhone=\"\"] Lead phone number. Only needed if there are multiple numbers loaded for given lead.\n       */\n      AgentLibrary.prototype.safeModeCall = function (requestId, leadPhone) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          '',\n          [],\n          requestId,\n          leadPhone,\n        );\n        var msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends a message to fetch safe mode dialable leads\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when safe mode fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.safeModeFetch = function (searchFields, callback) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          '',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SAFE_MODE_FETCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Pull back Safe Mode leads that match search criteria\n       * @memberof AgentLibrary.Call\n       * @param {array} [searchFields=[]] Array of objects with key/value pairs for search parameters\n       * e.g. [ {key: \"name\", value: \"Geoff\"} ]\n       * @param {function} [callback=null] Callback function when safe mode fetch completed, returns matched leads\n       */\n      AgentLibrary.prototype.safeSearchLeads = function (\n        searchFields,\n        callback,\n      ) {\n        UIModel.getInstance().tcpaSafeRequest = new TcpaSafeRequest(\n          'search',\n          searchFields,\n          '',\n        );\n        var msg = UIModel.getInstance().tcpaSafeRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SAFE_MODE_SEARCH, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.internationalWarmXfer = function (\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().warmXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.warmXfer = function (\n        dialDest,\n        callerId,\n        sipHeaders,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n        );\n        var msg = UIModel.getInstance().warmXferRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel a warm transfer\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number that was transfered to\n       */\n      AgentLibrary.prototype.warmXferCancel = function (dialDest) {\n        UIModel.getInstance().warmXferCancelRequest = new XferWarmCancelRequest(\n          dialDest,\n        );\n        var msg = UIModel.getInstance().warmXferCancelRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number while keeping the original agent on the line (warm transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.corporateDirWarmXfer = function (\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().warmXferRequest = new XferWarmRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().warmXferRequest.formatJSON();\n        utils.setCallback(this, CALLBACK_TYPES.XFER_WARM, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer to another number and end the call for the original agent (cold transfer).\n       * @memberof AgentLibrary.Call\n       * @param {number} dialDest Number to transfer to\n       * @param {number} [callerId=\"\"] Caller Id for caller (DNIS)\n       * @param {number} [sipHeaders=[]] Name/Value header pairs\n       * @param {number} [countryId=\"\"] Country Id for the dialDest\n       * @param {function} [callback=null] Callback function when cold transfer response received\n       */\n      AgentLibrary.prototype.corporateDirColdXfer = function (\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        callback,\n      ) {\n        UIModel.getInstance().coldXferRequest = new XferColdRequest(\n          dialDest,\n          callerId,\n          sipHeaders,\n          countryId,\n        );\n        var msg = UIModel.getInstance().coldXferRequest.formatJSON();\n        utils.setCallback(this, CALLBACK_TYPES.XFER_COLD, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Requests a script object based on given id\n       * @memberof AgentLibrary.Call\n       * @param {number} scriptId Id of script\n       * @param {number} version The version number of the script, if the current loaded script version matches,\n       *                 just return current script. Otherwise, fetch new version of script.\n       * @param {function} [callback=null] Callback function when warm transfer response received\n       */\n      AgentLibrary.prototype.getScript = function (\n        scriptId,\n        version,\n        callback,\n      ) {\n        var model = UIModel.getInstance();\n        var script = model.scriptSettings.loadedScripts[scriptId];\n        utils.setCallback(this, CALLBACK_TYPES.SCRIPT_CONFIG, callback);\n\n        if (script && script.version === version) {\n          // return from memory\n          var savedScript = UIModel.getInstance().scriptSettings.loadedScripts[\n            scriptId\n          ];\n          callback(savedScript);\n        } else {\n          // load script\n          model.scriptConfigRequest = new ScriptConfigRequest(scriptId);\n          var msg = UIModel.getInstance().scriptConfigRequest.formatJSON();\n          utils.sendMessage(this, msg);\n        }\n      };\n\n      /**\n       * Saves the results from a script\n       * @memberof AgentLibrary.Call\n       * @param {string} uii The UII of the call the script results belong to\n       * @param {number} scriptId Id of script\n       * @param {object} jsonResult JSON object of script results, name/value pairs\n       */\n      AgentLibrary.prototype.saveScriptResult = function (\n        uii,\n        scriptId,\n        jsonResult,\n      ) {\n        UIModel.getInstance().scriptResultRequest = new ScriptResultRequest(\n          uii,\n          scriptId,\n          jsonResult,\n        );\n        var msg = UIModel.getInstance().scriptResultRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get available list of agents available for Direct Transfer\n       * @memberof AgentLibrary.Call\n       */\n      AgentLibrary.prototype.directAgentXferList = function (callback) {\n        UIModel.getInstance().directAgentTransferListRequest = new DirectAgentTransferList();\n        var msg = UIModel.getInstance().directAgentTransferListRequest.formatJSON();\n\n        utils.setCallback(\n          this,\n          CALLBACK_TYPES.DIRECT_AGENT_TRANSFER_LIST,\n          callback,\n        );\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer directly to an available agent from the directAgentXferList result and stay on the call\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.warmDirectAgentXfer = function (targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'WARM',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Transfer directly to an available agent from the directAgentXferList result\n       * and terminate the current agents call session\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.coldDirectAgentXfer = function (targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'COLD',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Cancel the request to transfer directly to an agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to transfer the call to\n       */\n      AgentLibrary.prototype.cancelDirectAgentXfer = function (targetAgentId) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'CANCEL',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send the direct agent transfer straight to voicemail, avoid any attempts to connect to the target agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to receive the voicemail\n       */\n      AgentLibrary.prototype.voicemailDirectAgentXfer = function (\n        targetAgentId,\n      ) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          targetAgentId,\n          'VOICEMAIL',\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Reject a presented direct agent transfer, if WARM requesting agent will be notified to try again,\n       * if COLD a voicemail will be left for the target agent\n       * @memberof AgentLibrary.Call\n       * @param {number} targetAgentId Agent id to receive the voicemail\n       */\n      AgentLibrary.prototype.rejectDirectAgentXfer = function (uii) {\n        UIModel.getInstance().directAgentTransferRequest = new DirectAgentTransfer(\n          '0',\n          'REJECT',\n          uii,\n        );\n        var msg = UIModel.getInstance().directAgentTransferRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryLead(context) {\n      /**\n       * @namespace Lead\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Get the history for a given lead\n       * @memberof AgentLibrary.Lead\n       * @param {number} leadId The lead id to retrieve history for\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadHistory = function (leadId, callback) {\n        UIModel.getInstance().leadHistoryRequest = new LeadHistoryRequest(\n          leadId,\n        );\n        var msg = UIModel.getInstance().leadHistoryRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_HISTORY, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Insert a lead to the given campaign\n       * @memberof AgentLibrary.Lead\n       * @param {object} dataObj agentId, campaignId, and lead info\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadInsert = function (dataObj, callback) {\n        UIModel.getInstance().leadInsertRequest = new LeadInsertRequest(\n          dataObj,\n        );\n        var msg = UIModel.getInstance().leadInsertRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_INSERT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Update lead information\n       * @memberof AgentLibrary.Lead\n       * @param {string} leadId Id for lead to update\n       * @param {string} leadPhone Lead phone number\n       * @param {object} baggage Object containing lead information\n       * @param {function} [callback=null] Callback function when lead history response received\n       */\n      AgentLibrary.prototype.leadUpdate = function (\n        leadId,\n        leadPhone,\n        baggage,\n        callback,\n      ) {\n        UIModel.getInstance().leadUpdateRequest = new LeadUpdateRequest(\n          leadId,\n          leadPhone,\n          baggage,\n        );\n        var msg = UIModel.getInstance().leadUpdateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.LEAD_UPDATE, callback);\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryChat(context) {\n      /**\n       * @namespace Chat\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Set the agent chat alias\n       * @memberof AgentLibrary.Chat\n       * @param {string} alias The alias string to be used for agent chat messages\n       * @deprecated\n       */\n      AgentLibrary.prototype.setChatAlias = function (alias) {\n        UIModel.getInstance().chatAliasRequest = new ChatAliasRequest(alias);\n        var msg = UIModel.getInstance().chatAliasRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to enter/exit a public chat room\n       * @memberof AgentLibrary.Chat\n       * @param {string} action \"ENTER\" | \"EXIT\"\n       * @param {number} roomId Chat room id\n       * @deprecated\n       */\n      AgentLibrary.prototype.publicChatRoom = function (action, roomId) {\n        UIModel.getInstance().chatRoomRequest = new ChatRoomRequest(\n          action,\n          'PUBLIC',\n          roomId,\n        );\n        var msg = UIModel.getInstance().chatRoomRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to enter/exit a private chat room\n       * @memberof AgentLibrary.Chat\n       * @param {string} action \"ENTER\" | \"EXIT\"\n       * @param {number} roomId Chat room id\n       * @param {number} agentOne Id for the logged in agent\n       * @param {number} agentTwo Id for the agent or supervisor the logged in agent is chatting with\n       * @deprecated\n       */\n      AgentLibrary.prototype.privateChatRoom = function (\n        action,\n        roomId,\n        agentOne,\n        agentTwo,\n      ) {\n        UIModel.getInstance().chatRoomRequest = new ChatRoomRequest(\n          action,\n          'PRIVATE',\n          roomId,\n          agentOne,\n          agentTwo,\n        );\n        var msg = UIModel.getInstance().chatRoomRequest.formatJSON();\n\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a chat message to the given room\n       * @memberof AgentLibrary.Chat\n       * @param {number} roomId Id for chat room\n       * @param {string} message The message to be sent\n       * @param {function} [callback=null] Callback function when chat message received\n       * @deprecated\n       */\n      AgentLibrary.prototype.sendChat = function (roomId, message, callback) {\n        UIModel.getInstance().chatSendRequest = new ChatSendRequest(\n          roomId,\n          message,\n        );\n        var msg = UIModel.getInstance().chatSendRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Get list of supervisors for logged in agent\n       * @memberof AgentLibrary.Chat\n       * @param {function} [callback=null] Callback function when chat message received\n       * @deprecated\n       */\n      AgentLibrary.prototype.getSupervisors = function (callback) {\n        UIModel.getInstance().supervisorListRequest = new SupervisorListRequest();\n        var msg = UIModel.getInstance().supervisorListRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.SUPERVISOR_LIST, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send accept/decline response when a chat is presented to an agent\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} messageId Id tied to chat presented notification which this response is connected to.\n       * @param {string} response ACCEPT|REJECT response\n       * @param {string} responseReason Agent reason for Reject\n       */\n      AgentLibrary.prototype.chatPresentedResponse = function (\n        uii,\n        messageId,\n        response,\n        responseReason,\n      ) {\n        UIModel.getInstance().chatPresentedRequest = new ChatPresentedResponseRequest(\n          uii,\n          messageId,\n          response,\n          responseReason,\n        );\n        var msg = UIModel.getInstance().chatPresentedRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send an external chat message\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId The agent associated with the chat\n       * @param {string} message The message sent by the agent\n       */\n      AgentLibrary.prototype.chatMessage = function (uii, agentId, message) {\n        UIModel.getInstance().chatMessageRequest = new ChatMessageRequest(\n          uii,\n          agentId,\n          message,\n          false,\n        );\n        var msg = UIModel.getInstance().chatMessageRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send an whisper type chat message\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId The agent associated with the chat\n       * @param {string} message The message sent by the agent\n       */\n      AgentLibrary.prototype.chatWhisper = function (uii, agentId, message) {\n        UIModel.getInstance().chatMessageRequest = new ChatMessageRequest(\n          uii,\n          agentId,\n          message,\n          true,\n        );\n        var msg = UIModel.getInstance().chatMessageRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send a disposition to end a chat session\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {number} agentId The agent's id\n       * @param {number} dispositionId Id of the selected disposition\n       * @param {string} [notes=\"\"] Agent notes\n       * @param {boolean} sendAcknowlegement Whether or not to fire callback\n       * @param {object} [script=null] Script data associated with the chat session\n       * @param {number} sessionId Id for chat session\n       */\n      AgentLibrary.prototype.chatDisposition = function (\n        uii,\n        agentId,\n        dispositionId,\n        notes,\n        sendAcknowlegement,\n        script,\n        sessionId,\n      ) {\n        UIModel.getInstance().chatDispositionRequest = new ChatDispositionRequest(\n          uii,\n          agentId,\n          dispositionId,\n          notes,\n          sendAcknowlegement,\n          script,\n          sessionId,\n        );\n        var msg = UIModel.getInstance().chatDispositionRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Send the chat to a different Chat Queue\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {number} agentId The agent's id\n       * @param {number} chatQueueId Id of the Chat Queue to requeue to\n       * @param {number} skillId Skill id associated with the Chat Queue\n       * @param {boolean} [maintainAgent=false] Whether or not to keep the current agent connected to the chat on requeue\n       */\n      AgentLibrary.prototype.chatRequeue = function (\n        uii,\n        agentId,\n        chatQueueId,\n        skillId,\n        maintainAgent,\n      ) {\n        UIModel.getInstance().chatRequeueRequest = new ChatRequeueRequest(\n          uii,\n          agentId,\n          chatQueueId,\n          skillId,\n          maintainAgent,\n        );\n        var msg = UIModel.getInstance().chatRequeueRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sent when agent starts/stops typing\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} message Pending Agent message - sent to any monitoring Supervisors\n       */\n      AgentLibrary.prototype.chatTyping = function (uii, message) {\n        UIModel.getInstance().chatTypingRequest = new ChatTypingRequest(\n          uii,\n          message,\n        );\n        var msg = UIModel.getInstance().chatTypingRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to add a session on an existing chat\n       * @memberof AgentLibrary.Chat\n       * @param {string} monitorAgentId Agent id handling this chat, the agent being monitored\n       */\n      AgentLibrary.prototype.monitorAgentChats = function (monitorAgentId) {\n        UIModel.getInstance().monitorChatRequest = new MonitorChatRequest(\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().monitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to stop a chat monitoring session for a specific agent\n       * @memberof AgentLibrary.Chat\n       * @param {string} monitorAgentId Agent id of agent being monitored\n       */\n      AgentLibrary.prototype.stopMonitoringChatsByAgent = function (\n        monitorAgentId,\n      ) {\n        UIModel.getInstance().stopMonitorChatRequest = new StopMonitorChatRequest(\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().stopMonitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to drop all chat monitoring sessions for the logged in agent\n       * @memberof AgentLibrary.Chat\n       */\n      AgentLibrary.prototype.stopMonitoringAllAgentChats = function () {\n        UIModel.getInstance().stopMonitorChatRequest = new StopMonitorChatRequest();\n        var msg = UIModel.getInstance().stopMonitorChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request to terminate an active chat session\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId Current logged in agent id\n       * @param {string} sessionId Chat session id\n       */\n      AgentLibrary.prototype.leaveChat = function (uii, agentId, sessionId) {\n        UIModel.getInstance().leaveChatRequest = new LeaveChatRequest(\n          uii,\n          agentId,\n          sessionId,\n        );\n        var msg = UIModel.getInstance().leaveChatRequest.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Request a list of active chats by agent id\n       * @memberof AgentLibrary.Chat\n       * @param {string} agentId Current logged in agent id\n       * @param {string} monitorAgentId Agent id handling chats\n       * @param {function} [callback=null] Callback function when chat-list request received\n       */\n      AgentLibrary.prototype.chatList = function (\n        agentId,\n        monitorAgentId,\n        callback,\n      ) {\n        UIModel.getInstance().chatListRequest = new ChatListRequest(\n          agentId,\n          monitorAgentId,\n        );\n        var msg = UIModel.getInstance().chatListRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT_LIST, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * set chat in state of agent-chat-end\n       * @memberof AgentLibrary.Chat\n       * @param {string} uii Unique identifier for the chat session\n       * @param {string} agentId Current logged in agent id\n       */\n\n      AgentLibrary.prototype.chatAgentEnd = function (agentId, uii) {\n        UIModel.getInstance().chatAgentEnd = new ChatAgentEndRequest(\n          agentId,\n          uii,\n        );\n        var msg = UIModel.getInstance().chatAgentEnd.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * Sends chat state change message to IntelliQueue\n       * @memberof AgentLibrary.Agent\n       * @param {string} chatState The base chat state <br />\n       * CHAT-AVAILABLE | CHAT-PRESENTED | CHAT-ENGAGED | CHAT-RNA\n       * @param {function} [callback=null] Callback function when chatState response received\n       */\n      AgentLibrary.prototype.setChatState = function (chatState, callback) {\n        UIModel.getInstance().chatStateRequest = new ChatStateRequest(\n          chatState,\n        );\n        var msg = UIModel.getInstance().chatStateRequest.formatJSON();\n\n        utils.setCallback(this, CALLBACK_TYPES.CHAT_STATE, callback);\n        utils.sendMessage(this, msg);\n      };\n\n      /**\n       * initialize a chat session by sending a manual outbound sms\n       * @memberof AgentLibrary.Chat\n       * @param {string} agentId Current logged in agent id\n       * @param {number} chatQueueId Id of the Chat Queue to send this sms through\n       * @param {number} ani to receive the sms\n       * @param {number} dnis to be used for the sms\n       * @param {string} message content\n       */\n\n      AgentLibrary.prototype.sendManualOutboundSms = function (\n        agentId,\n        chatQueueId,\n        ani,\n        dnis,\n        message,\n      ) {\n        UIModel.getInstance().chatManualSms = new ChatManualSmsRequest(\n          agentId,\n          chatQueueId,\n          ani,\n          dnis,\n          message,\n        );\n        var msg = UIModel.getInstance().chatManualSms.formatJSON();\n        utils.sendMessage(this, msg);\n      };\n    }\n\n    function initAgentLibraryLogger(context) {\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openLogger = function () {\n        var instance = this;\n\n        if ('indexedDB' in context) {\n          // Open database\n          var dbRequest = indexedDB.open('AgentLibraryLogging', 6); // version number\n\n          dbRequest.onerror = function (event) {\n            console.error('Error requesting DB access');\n          };\n\n          dbRequest.onsuccess = function (event) {\n            instance._db = event.target.result;\n\n            //prune items older than 2 days\n            instance.purgeLog(instance._db, 'logger');\n\n            instance._db.onerror = function (event) {\n              // Generic error handler for all errors targeted at this database requests\n              console.error(\n                'AgentLibrary: Database error - ' + event.target.errorCode,\n              );\n            };\n\n            instance._db.onsuccess = function (event) {\n              console.log('AgentLibrary: Successful logging of record');\n            };\n          };\n\n          // This event is only implemented in recent browsers\n          dbRequest.onupgradeneeded = function (event) {\n            instance._db = event.target.result;\n\n            // Create an objectStore to hold log information. Key path should be unique\n            if (!instance._db.objectStoreNames.contains('logger')) {\n              var objectStore = instance._db.createObjectStore('logger', {\n                autoIncrement: true,\n              });\n\n              // simple indicies: index name, index column path\n              objectStore.createIndex('logLevel', 'logLevel', {\n                unique: false,\n              });\n              objectStore.createIndex('dts', 'dts', { unique: false });\n\n              // index for logLevel and date range\n              var name = 'levelAndDate';\n              var keyPath = ['logLevel', 'dts'];\n              objectStore.createIndex(name, keyPath, { unique: false });\n            }\n          };\n        } else {\n          console.warn(\n            'AgentLibrary: indexedDB NOT supported by your Browser.',\n          );\n        }\n      };\n\n      /**\n       * Purge records older than 2 days from the AgentLibrary log\n       * @memberof AgentLibrary\n       */\n      AgentLibrary.prototype.purgeLog = function (db, store) {\n        var instance = this;\n\n        if (db) {\n          try {\n            var transaction = db.transaction([store], 'readwrite');\n            var objectStore = transaction.objectStore(store);\n            var dateIndex = objectStore.index('dts');\n            var endDate = new Date();\n            endDate.setDate(endDate.getDate() - 2); // two days ago\n\n            var range = IDBKeyRange.upperBound(endDate);\n            dateIndex.openCursor(range).onsuccess = function (event) {\n              var cursor = event.target.result;\n              if (cursor) {\n                objectStore.delete(cursor.primaryKey);\n                cursor.continue();\n              }\n            };\n          } catch (err) {\n            // no op\n          }\n        }\n      };\n\n      /**\n       * Clear the AgentLibrary log by emptying the IndexedDB object store\n       * @memberof AgentLibrary\n       */\n      AgentLibrary.prototype.clearLog = function (db) {\n        var transaction = db.transaction(['logger'], 'readwrite');\n        var objectStore = transaction.objectStore('logger');\n\n        var objectStoreRequest = objectStore.clear();\n\n        objectStoreRequest.onsuccess = function (event) {\n          console.log('AgentLibrary: logger database cleared');\n        };\n      };\n\n      AgentLibrary.prototype.deleteDB = function (dbName) {\n        dbName = dbName || 'AgentLibraryLogging';\n        var DBDeleteRequest = indexedDB.deleteDatabase(dbName);\n\n        DBDeleteRequest.onerror = function (event) {\n          console.log('Error deleting database.', dbName);\n        };\n\n        DBDeleteRequest.onsuccess = function (event) {\n          console.log('Database', dbName, 'deleted successfully');\n        };\n      };\n\n      AgentLibrary.prototype.getLogRecords = function (\n        logLevel,\n        startDate,\n        endDate,\n        maxRows,\n        callback,\n      ) {\n        logLevel = logLevel || '';\n        var instance = this;\n        var transaction = instance._db.transaction(['logger'], 'readonly');\n        var objStore = transaction.objectStore('logger');\n        var index = null,\n          cursor = null,\n          range = null,\n          limit = maxRows || 100;\n        utils.setCallback(instance, CALLBACK_TYPES.LOG_RESULTS, callback);\n\n        if (\n          logLevel !== '' &&\n          logLevel.toUpperCase() !== 'ALL' &&\n          logLevel.toUpperCase() !== 'NO-STATS'\n        ) {\n          // looking for specific log level type\n          if (startDate && endDate) {\n            var lowerBound = [logLevel.toLowerCase(), startDate];\n            var upperBound = [logLevel.toLowerCase(), endDate];\n            range = IDBKeyRange.bound(lowerBound, upperBound);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound([logLevel.toLowerCase(), startDate]);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound([logLevel.toLowerCase(), endDate]);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            var levelAndDateReturn = [];\n            var idxLevelAndDate = 0;\n            index = objStore.index('levelAndDate');\n            index.openCursor(range, 'prev').onsuccess = function (event) {\n              cursor = event.target.result;\n              if (cursor && idxLevelAndDate < limit) {\n                levelAndDateReturn.push(cursor.value);\n                idxLevelAndDate = idxLevelAndDate + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  levelAndDateReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all within log level\n            var logLevelReturn = [];\n            var idxLogLevel = 0;\n            index = objStore.index('logLevel');\n            index.openCursor(logLevel, 'prev').onsuccess = function (event) {\n              cursor = event.target.result;\n              if (cursor && idxLogLevel < limit) {\n                logLevelReturn.push(cursor.value);\n                idxLogLevel = idxLogLevel + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  logLevelReturn,\n                );\n              }\n            };\n          }\n        } else if (logLevel.toUpperCase() === 'NO-STATS') {\n          // give us all types except stats\n          if (startDate && endDate) {\n            range = IDBKeyRange.bound(startDate, endDate);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound(startDate);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound(endDate);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            var dtsNoStatsReturn = [];\n            var idxDTSNoStats = 0;\n            index = objStore.index('dts');\n\n            index.openCursor(range, 'prev').onsuccess = function (event) {\n              cursor = event.target.result;\n              if (cursor && idxDTSNoStats < limit) {\n                if (cursor.value.logLevel !== 'stats') {\n                  dtsNoStatsReturn.push(cursor.value);\n                  idxDTSNoStats = idxDTSNoStats + 1;\n                }\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  dtsNoStatsReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all records\n            var noStatsReturn = [];\n            var idxNoStats = 0;\n            objStore.openCursor().onsuccess = function (event) {\n              cursor = event.target.result;\n              if (cursor && idxNoStats < limit) {\n                if (cursor.value.logLevel !== 'stats') {\n                  noStatsReturn.push(cursor.value);\n                  idxNoStats = idxNoStats + 1;\n                }\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  noStatsReturn,\n                );\n              }\n            };\n          }\n        } else {\n          // give us all log level types\n          if (startDate && endDate) {\n            range = IDBKeyRange.bound(startDate, endDate);\n          } else if (startDate) {\n            range = IDBKeyRange.lowerBound(startDate);\n          } else if (endDate) {\n            range = IDBKeyRange.upperBound(endDate);\n          }\n\n          if (range !== null) {\n            // with the provided date range\n            var dtsReturn = [];\n            var idxDTS = 0;\n            index = objStore.index('dts');\n\n            index.openCursor(range, 'prev').onsuccess = function (event) {\n              cursor = event.target.result;\n              if (cursor && idxDTS < limit) {\n                dtsReturn.push(cursor.value);\n                idxDTS = idxDTS + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  dtsReturn,\n                );\n              }\n            };\n          } else {\n            // no date range specified, return all records\n            var allValsReturn = [];\n            var idxAll = 0;\n            objStore.openCursor().onsuccess = function (event) {\n              cursor = event.target.result;\n              if (cursor && idxAll < limit) {\n                allValsReturn.push(cursor.value);\n                idxAll = idxAll + 1;\n                cursor.continue();\n              } else {\n                utils.fireCallback(\n                  instance,\n                  CALLBACK_TYPES.LOG_RESULTS,\n                  allValsReturn,\n                );\n              }\n            };\n          }\n        }\n\n        return null;\n      };\n    }\n\n    function initAgentLibraryMultisocket(context) {\n      /**\n       * @namespace Multisocket\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      /**\n       * Method to request call details from other tabs using the broadcast channel, for multisocket\n       */\n      AgentLibrary.prototype.loadCurrentCall = function (callback) {\n        broadcastChannelHelper.requestCurrentCall(callback);\n      };\n    }\n    function initAgentLibraryConsoleLogger(context) {\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      AgentLibrary.prototype.openConsoleLogger = function () {\n        var instance = this;\n\n        if ('indexedDB' in context) {\n          var dbRequest = indexedDB.open('AgentLibraryConsoleLogging', 1);\n\n          dbRequest.onerror = function (event) {\n            console.error('Error requesting DB access');\n          };\n\n          dbRequest.onsuccess = function (event) {\n            instance._consoleDb = event.target.result;\n\n            //prune items older than 2 days\n            instance.purgeLog(instance._consoleDb, 'consoleLogger');\n\n            instance._consoleDb.onerror = function (event) {\n              // Generic error handler for all errors targeted at this database requests\n              console.error(\n                'AgentLibrary: Database error - ' + event.target.errorCode,\n              );\n            };\n\n            instance._consoleDb.onsuccess = function (event) {\n              console.log('AgentLibrary: Successful logging of record');\n            };\n\n            _overrideConsole();\n          };\n\n          // This event is only implemented in recent browsers\n          dbRequest.onupgradeneeded = function (event) {\n            instance._consoleDb = event.target.result;\n\n            // Create an objectStore to hold log information. Key path should be unique\n            if (\n              !instance._consoleDb.objectStoreNames.contains('consoleLogger')\n            ) {\n              var objectStore = instance._consoleDb.createObjectStore(\n                'consoleLogger',\n                { autoIncrement: true },\n              );\n\n              // simple indicies: index name, index column path\n              objectStore.createIndex('type', 'type', { unique: false });\n              objectStore.createIndex('dts', 'dts', { unique: false });\n              objectStore.createIndex('agentId', 'agentId', { unique: false });\n\n              // index for type and agent id\n              var name = 'typeAndAgent';\n              var keyPath = ['type', 'agentId'];\n              objectStore.createIndex(name, keyPath, { unique: false });\n            }\n\n            _overrideConsole();\n          };\n        } else {\n          console.warn(\n            'AgentLibrary: indexedDB NOT supported by your Browser.',\n          );\n        }\n      };\n\n      AgentLibrary.prototype.getConsoleLogRecords = function (type, callback) {\n        var agentId = UIModel.getInstance().agentSettings.agentId; // only return records for this agent id\n        var instance = this;\n        var transaction = instance._consoleDb.transaction(\n          ['consoleLogger'],\n          'readonly',\n        );\n        var objStore = transaction.objectStore('consoleLogger');\n        var index = null,\n          cursor = null,\n          range = null,\n          limit = 5000;\n\n        utils.setCallback(\n          instance,\n          CALLBACK_TYPES.LOG_CONSOLE_RESULTS,\n          callback,\n        );\n\n        var result = [];\n        if (type) {\n          // everything with this type\n          index = objStore.index('typeAndAgent');\n          range = IDBKeyRange.only([type.toUpperCase(), agentId]);\n        } else {\n          index = objStore.index('agentId');\n          range = IDBKeyRange.only(agentId);\n        }\n\n        var count = 0;\n        index.openCursor(range, 'prev').onsuccess = function (event) {\n          cursor = event.target.result;\n          if (cursor && count < limit) {\n            result.push(cursor.value);\n            count++;\n            cursor.continue();\n          } else {\n            utils.fireCallback(\n              instance,\n              CALLBACK_TYPES.LOG_CONSOLE_RESULTS,\n              result,\n            );\n          }\n        };\n      };\n\n      function _overrideConsole() {\n        // override the window.console functions, process as normal then save to the local db\n        var browserConsole = Object.assign({}, window.console);\n        (function (defaultConsole) {\n          var instance;\n          if (\n            UIModel &&\n            UIModel.getInstance() &&\n            UIModel.getInstance().libraryInstance\n          ) {\n            instance = UIModel.getInstance().libraryInstance;\n          } else {\n            // fallback\n            instance = new AgentLibrary();\n          }\n\n          var agentSettings = UIModel.getInstance().agentSettings;\n\n          function _getRecord(type, args) {\n            var result = [];\n            for (var i = 0; i < args.length; i++) {\n              var arg = args[i];\n              if (typeof arg === 'function') {\n                result.push(arg.toString());\n              } else if (typeof arg === 'object') {\n                try {\n                  result.push(JSON.stringify(arg));\n                } catch (e) {}\n              } else {\n                result.push(arg);\n              }\n            }\n\n            return {\n              type: type,\n              message: result.join(' '),\n              dts: new Date(),\n              agentId: agentSettings.agentId,\n              agentName: agentSettings.firstName + ' ' + agentSettings.lastName,\n            };\n          }\n\n          function _saveRecord(type, args) {\n            if (instance._consoleDb) {\n              var transaction = instance._consoleDb.transaction(\n                ['consoleLogger'],\n                'readwrite',\n              );\n              var store = transaction.objectStore('consoleLogger');\n\n              store.add(_getRecord(type, args));\n            }\n          }\n\n          window.console.log = function () {\n            defaultConsole.log.apply(this, arguments);\n            _saveRecord('LOG', arguments);\n          };\n          window.console.info = function () {\n            defaultConsole.info.apply(this, arguments);\n            _saveRecord('INFO', arguments);\n          };\n          window.console.warn = function () {\n            defaultConsole.warn.apply(this, arguments);\n            _saveRecord('WARN', arguments);\n          };\n          window.console.error = function () {\n            defaultConsole.error.apply(this, arguments);\n            _saveRecord('ERROR', arguments);\n          };\n        })(browserConsole);\n      }\n    }\n\n    function initAgentLibrarySoftphoneService(context) {\n      /**\n       * @namespace Softphone\n       * @memberof AgentLibrary\n       */\n\n      'use strict';\n\n      var AgentLibrary = context.AgentLibrary;\n\n      //////////////////////\n      // PUBLIC FUNCTIONS //\n      //////////////////////\n      /* These functions are available externally to agent-js or other parent apps */\n\n      /**\n       * Initializes the SIP library, sets up callback functions\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipInit = function () {\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n\n        // if webRtc settings not yet set, do so now\n        if (\n          softphoneSettings.uri === '' ||\n          softphoneSettings.wsServers.length === 0 ||\n          softphoneSettings.displayName === '' ||\n          softphoneSettings.authorizationUser === ''\n        ) {\n          SoftphoneService.setupWebRtcServer();\n        }\n\n        if (softphoneSettings.wsServers.length > 0) {\n          var webRtc = new CFSimpleSip(_getSipConfig());\n\n          // callbacks\n          webRtc.on('connected', _connected);\n          webRtc.on('ended', _ended);\n          webRtc.on('registered', _registered);\n          webRtc.on('unregistered', _unregistered);\n          webRtc.on('registrationFailed', _registrationFailed);\n          webRtc.on('ringing', _ringing);\n          webRtc.on('mute', _mute);\n          webRtc.on('unmute', _unmute);\n\n          // after 15 sec of no registration response, rotate the registrar\n          softphoneSettings.registerPending = setTimeout(\n            _handleNoRegisterResponse,\n            15 * 1000,\n          );\n          softphoneSettings.webRtc = webRtc; // set back on the UIModel instance\n        } else {\n          console.error('Unable to setup WebRtc server');\n        }\n      };\n\n      /**\n       * clear webRtc settings, hangup, unregister\n       * @memberof AgentLibrary.Softphone\n       * @returns boolean - success state\n       */\n      AgentLibrary.prototype.sipTerminate = function () {\n        var model = UIModel.getInstance();\n        var webRtc = model.softphoneSettings.webRtc;\n        if (webRtc && webRtc.ua) {\n          var opts = {\n            all: true,\n          };\n          model.libraryInstance.offhookTerm(); // TODO - dlb - set up callback with agent-js??\n          webRtc.hangup();\n          webRtc.ua.unregister(opts);\n\n          webRtc.removeAllListeners('connected');\n          webRtc.removeAllListeners('ended');\n          webRtc.removeAllListeners('registered');\n          webRtc.removeAllListeners('unregistered');\n          webRtc.removeAllListeners('registrationFailed');\n          webRtc.removeAllListeners('ringing');\n          webRtc.removeAllListeners('mute');\n          webRtc.removeAllListeners('unmute');\n\n          webRtc.ua.stop();\n          webRtc = null;\n          model.softphoneSettings.webRtc = webRtc; // set back on model\n          model.softphoneSettings.isRegistered = false;\n          model.softphoneSettings.attemptingSoftphoneReconnect = false;\n          model.softphoneSettings.muteActive = false;\n          model.softphoneSettings.registerPending = null;\n          model.softphoneSettings.uri = '';\n\n          return true;\n        }\n\n        console.warn('sipTerminate: sip rtc settings or ua missing', webRtc);\n        return false;\n      };\n\n      /**\n       * Sends a session.accept response to a SIP invite event.\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipAnswer = function () {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc) {\n          webRtc.answer();\n        }\n      };\n\n      /**\n       * Sends a session.reject response to a SIP invite event.\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipReject = function () {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc && webRtc.reject) {\n          webRtc.reject();\n        }\n      };\n\n      /**\n       * Request microphone access, if already registered, call hangup\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipRegister = function () {\n        var model = UIModel.getInstance();\n        var webRtc = model.softphoneSettings.webRtc;\n\n        try {\n          // enable microphone access notification if not already done\n          if (\n            window.webkitNotifications &&\n            window.webkitNotifications.checkPermission() !== 0\n          ) {\n            window.webkitNotifications.requestPermission();\n          }\n\n          if (!webRtc) {\n            return;\n          }\n\n          // if already registered, hangup\n          if (model.softphoneSettings.isRegistered) {\n            model.libraryInstance.sipHangUp();\n          }\n        } catch (e) {\n          console.error('sip reg error:' + e);\n        }\n      };\n\n      /**\n       * Sends session.cancel if connected, or session.bye if not connected to a call\n       * @memberof AgentLibrary.Softphone\n       */\n      AgentLibrary.prototype.sipHangUp = function () {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc && webRtc.hangup) {\n          webRtc.hangup();\n        }\n      };\n\n      /**\n       * Sends session.dtmf for the tone specified\n       * @memberof AgentLibrary.Softphone\n       * @param {string} dtmf The dtmf tone to send\n       */\n      AgentLibrary.prototype.sipSendDTMF = function (dtmf) {\n        var webRtc = UIModel.getInstance().softphoneSettings.webRtc;\n        if (webRtc) {\n          webRtc.sendDTMF(dtmf);\n        }\n      };\n\n      /**\n       * Toggles call audio on/off\n       * @memberof AgentLibrary.Softphone\n       * @param {boolean} state The dtmf tone to send\n       */\n      AgentLibrary.prototype.sipToggleMute = function (state) {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        var webRtc = softphoneSettings.webRtc;\n        var muteActive = softphoneSettings.muteActive;\n\n        if (webRtc) {\n          if (muteActive || state === false) {\n            webRtc.unmute();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SIP_UNMUTE,\n              { message: 'Call unmuted' },\n            );\n          } else {\n            webRtc.mute();\n            utils.fireCallback(\n              UIModel.getInstance().libraryInstance,\n              CALLBACK_TYPES.SIP_MUTE,\n              { message: 'Call muted' },\n            );\n          }\n        }\n      };\n\n      AgentLibrary.prototype.switchSoftphoneRegistrar = function (\n        maintainOffhook,\n        autoStartOffhook,\n      ) {\n        var model = UIModel.getInstance();\n\n        if (typeof autoStartOffhook === 'undefined') {\n          autoStartOffhook = true;\n        }\n        if (\n          model.softphoneSettings.attemptingSoftphoneReconnect &&\n          autoStartOffhook\n        ) {\n          _updateOHFlags(maintainOffhook, autoStartOffhook);\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_SWITCH_REGISTRAR,\n            {\n              message: 'Updating offhook flags, set status message',\n              status: 'UPDATE',\n            },\n          );\n        } else {\n          model.libraryInstance.resetSoftphoneSession({\n            maintainOH: maintainOffhook,\n            autoStartOH: autoStartOffhook,\n          });\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_SWITCH_REGISTRAR,\n            { message: 'Triggering softphone registrar swap', status: 'RESET' },\n          );\n        }\n      };\n\n      AgentLibrary.prototype.resetSoftphoneSession = function (offhookParams) {\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n        if (\n          softphoneSettings.isRegistered &&\n          !softphoneSettings.attemptingSoftphoneReconnect\n        ) {\n          model.libraryInstance.sipTerminate(); // clear current SIP.js object\n          _rotateWebRtcServer(function () {\n            SoftphoneService.setupWebRtcServer();\n            if (offhookParams) {\n              if (offhookParams.maintainOH === 'null') {\n                offhookParams.maintainOH = softphoneSettings.maintainOH; // default to model setting\n              }\n              _updateOHFlags(\n                offhookParams.maintainOH,\n                offhookParams.autoStartOH,\n              );\n            }\n\n            model.libraryInstance.sipInit();\n            model.libraryInstance.sipRegister();\n          });\n        }\n      };\n\n      ////////////////////////\n      // INTERNAL FUNCTIONS //\n      ////////////////////////\n      /* These functions are globally available to the AgentSDK app */\n\n      var SoftphoneService = {\n        setupWebRtcServer: function () {\n          var model = UIModel.getInstance();\n          var softphoneSettings = model.softphoneSettings;\n\n          // webRtcServerInfo format for Legacy\n          // [\n          //     {\n          //        \"transport\": \"wss\",\n          //        \"username\": \"yadvendra_agent\",\n          //        \"password\": \"oct@2018\",\n          //        \"domain\": \"d03-reg1.vacd.biz\",\n          //        \"outboundProxy\": \"d03-reg1.vacd.biz:8089/freeswitch\"\n          //    }\n          // ]\n          //\n          // webRtcServerInfo format for RC Int API\n          // [\n          //     {\n          //        \"transport\": \"WSS\",\n          //        \"username\": \"18662032059*101\",\n          //        \"password\": \"B77O85vO\",\n          //        \"authorizationId\": \"400017513008\",\n          //        \"domain\": \"sip-cfintams.lab.nordigy.ru\",\n          //        \"outboundProxy\": \"webphone-sip-cfintams.lab.nordigy.ru:8083\"\n          //    }\n          // ]\n          var sipInfo = _getCurrentWebRtcServerInfo();\n          if (sipInfo !== null) {\n            var username = sipInfo.username.toLowerCase();\n            var webRtcServer =\n              sipInfo.transport.toLowerCase() + '://' + sipInfo.outboundProxy; // e.g. \"wss://aws87-f06-ccw01.vacd.biz:8089/freeswitch\";\n\n            softphoneSettings.uri =\n              utils.escapeSoftphoneUsername(username) + '@' + sipInfo.domain;\n            softphoneSettings.wsServers = [webRtcServer];\n            softphoneSettings.displayName = username;\n            softphoneSettings.authorizationUser = sipInfo.authorizationId;\n\n            softphoneSettings.sipPassword = sipInfo.password;\n            softphoneSettings.sipDialDest = 'sip:' + softphoneSettings.uri;\n\n            return {\n              webRtcServer: webRtcServer,\n              username: username,\n              password: softphoneSettings.sipPassword,\n              domain: sipInfo.domain || null,\n              dialDest: softphoneSettings.sipDialDest || null,\n              uri: softphoneSettings.uri || null,\n              wsServers: softphoneSettings.wsServers || [],\n            };\n          }\n\n          return null;\n        },\n      };\n\n      ///////////////////////\n      // PRIVATE FUNCTIONS //\n      ///////////////////////\n      /* These functions are just used within this softphoneService.js file */\n\n      function _getSipConfig() {\n        var remoteAudioElement = document.getElementById('remoteAudio'), // audio node on index.html\n          model = UIModel.getInstance(),\n          softphoneSettings = model.softphoneSettings,\n          config = {\n            media: {\n              remote: {\n                audio: remoteAudioElement,\n              },\n            },\n            ua: {\n              displayName: utils.escapeSoftphoneUsername(\n                softphoneSettings.displayName,\n              ),\n              authorizationUser: utils.escapeSoftphoneUsername(\n                softphoneSettings.authorizationUser,\n              ),\n              password: softphoneSettings.sipPassword,\n              uri: softphoneSettings.uri,\n              wsServers: softphoneSettings.wsServers,\n              traceSip: true,\n              registerExpires: 60,\n              userAgentString: navigator.userAgent,\n            },\n          };\n        return config;\n      }\n\n      function _handleNoRegisterResponse() {\n        // registration timeout reached, rotate registrar\n        var model = UIModel.getInstance();\n        var softphoneSettings = model.softphoneSettings;\n\n        // we want to force a registrar refresh\n        softphoneSettings.isRegistered = true;\n        softphoneSettings.attemptingSoftphoneReconnect = false;\n\n        model.libraryInstance.switchSoftphoneRegistrar(\n          softphoneSettings.maintainOH,\n          softphoneSettings.autoStartOH,\n        );\n      }\n\n      // clear registration timeout\n      function _registerHasResponse() {\n        clearTimeout(UIModel.getInstance().softphoneSettings.registerPending);\n      }\n\n      function _rotateWebRtcServer(callback) {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        utils.setCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.ROTATE_WEBRTC_SERVER,\n          callback,\n        );\n        var sipInfo = softphoneSettings.sipInfo;\n        var timeSinceLastFetch =\n          Date.now() - softphoneSettings.lastSipFetchTime;\n        console.log(\n          '## Checking to rotate webRtc Server.SipInfo array length is ' +\n            sipInfo.length +\n            '. Time since last fetch of webRtcInfo is ' +\n            timeSinceLastFetch / 60000 +\n            ' mins.',\n        );\n        if (sipInfo.length > 1 && timeSinceLastFetch < 5 * 60000) {\n          sipInfo.shift();\n          console.log(\n            '## rotated sip server.Will now attempt to new server: ' +\n              sipInfo[0].domain,\n          );\n          softphoneSettings.attemptingSoftphoneReconnect = true;\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.ROTATE_WEBRTC_SERVER,\n            callback,\n          );\n        } else {\n          console.log('## fetching webRtcInfo.');\n          // fetch Sip Registration info again if array is consumed to rotate registrar\n          var model = UIModel.getInstance();\n          model.libraryInstance.getWebRtcInfo(callback);\n        }\n      }\n\n      function _updateOHFlags(maintainOffhook, autoStartOffhook) {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        softphoneSettings.maintainOH = maintainOffhook;\n        softphoneSettings.autoStartOH = autoStartOffhook;\n      }\n\n      function _getCurrentWebRtcServerInfo() {\n        var softphoneSettings = UIModel.getInstance().softphoneSettings;\n        return softphoneSettings.sipInfo != null &&\n          softphoneSettings.sipInfo.length > 0\n          ? softphoneSettings.sipInfo[0]\n          : null;\n      }\n\n      ///////////////////////////////\n      // SIP JS CALLBACK FUNCTIONS //\n      ///////////////////////////////\n      /* These functions bubble up SIP callbacks to the UI */\n\n      function _connected() {\n        // send response to agent-js\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_CONNECTED,\n          { message: 'SIP connected' },\n        );\n      }\n\n      function _ended() {\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_ENDED,\n          { message: 'SIP ended' },\n        );\n      }\n\n      function _registered() {\n        var model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = true;\n\n        // check if dial destination has changed to a new registrar,\n        // but not just with the IQ replacement of @RC_SOFTPHONE\n        if (\n          model.agentSettings.dialDest !==\n            model.softphoneSettings.sipDialDest &&\n          model.agentSettings.dialDest.indexOf('@RC_SOFTPHONE') === -1\n        ) {\n          // update agent dial dest on instance\n          model.agentSettings.dialDest = JSON.parse(\n            JSON.stringify(model.softphoneSettings.sipDialDest),\n          );\n\n          // notify agent of change\n          var responseObj = {\n            message: 'SIP dial destination changed',\n            dialDest: model.agentSettings.dialDest,\n            maintainOH: model.softphoneSettings.maintainOH,\n            autoStartOH: model.softphoneSettings.autoStartOH,\n          };\n\n          if (!model.softphoneSettings.autoStartOH) {\n            model.softphoneSettings.attemptingSoftphoneReconnect = false; // done with reconnect steps for now\n          }\n\n          utils.fireCallback(\n            UIModel.getInstance().libraryInstance,\n            CALLBACK_TYPES.SIP_DIAL_DEST_CHANGED,\n            responseObj,\n          );\n\n          // update dial destination on agent login record, send request to IQ\n          model.libraryInstance.updateDialDestination(\n            model.agentSettings.dialDest,\n            true,\n          );\n        }\n\n        utils.fireCallback(\n          model.libraryInstance,\n          CALLBACK_TYPES.SIP_REGISTERED,\n          { message: 'SIP registered' },\n        );\n      }\n\n      function _unregistered() {\n        var model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = false;\n        model.libraryInstance.sipTerminate();\n        model.libraryInstance.sipInit();\n      }\n\n      function _registrationFailed() {\n        var model = UIModel.getInstance();\n        _registerHasResponse();\n        model.softphoneSettings.isRegistered = false;\n        model.libraryInstance.sipTerminate();\n      }\n\n      function _ringing(notif) {\n        var model = UIModel.getInstance();\n        var usingRcPhone =\n          model.agentSettings.dialDest.indexOf('@RC_SOFTPHONE') > -1;\n\n        var rcHeader =\n          notif.transaction &&\n          notif.transaction.request &&\n          notif.transaction.request.headers['P-Rc-Call-Source'];\n\n        var rcHeaderValue =\n          rcHeader && rcHeader.length === 1 && rcHeader[0].raw;\n\n        // do not notify the app of ringing if Rc Call Source is not 'partner-contact-center'\n        if (usingRcPhone && rcHeaderValue !== 'partner-contact-center') {\n          return;\n        }\n\n        utils.fireCallback(\n          UIModel.getInstance().libraryInstance,\n          CALLBACK_TYPES.SIP_RINGING,\n          { message: 'SIP ringing', data: notif },\n        );\n      }\n\n      function _mute() {\n        UIModel.getInstance().softphoneSettings.muteActive = true;\n      }\n\n      function _unmute() {\n        UIModel.getInstance().softphoneSettings.muteActive = false;\n      }\n    }\n\n    var initAgentLibrary = function (context) {\n      initAgentLibraryCore(context);\n      initAgentLibrarySocket(context);\n      initAgentLibraryAgent(context);\n      initAgentLibraryCall(context);\n      initAgentLibraryLead(context);\n      initAgentLibraryChat(context);\n      initAgentLibraryLogger(context);\n      initAgentLibraryConsoleLogger(context);\n      initAgentLibrarySoftphoneService(context);\n      initAgentLibraryMultisocket(context);\n\n      return context.AgentLibrary;\n    };\n\n    return initAgentLibrary(this);\n  }.call(this, this);\n}.call(window));\n"],"file":"agentLibrary.js"}