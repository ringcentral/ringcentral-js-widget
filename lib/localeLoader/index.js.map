{"version":3,"sources":["lib/localeLoader/index.js"],"names":["module","exports","localeLoader","content","callback","async","options","loaderUtils","getOptions","supportedLocales","fs","readdir","context","files","filter","f","chunk"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAAA;;AAC9C,MAAMC,QAAQ,GAAG,KAAKC,KAAL,EAAjB;AACA,MAAMC,OAAO,GAAGC,wBAAYC,UAAZ,CAAuB,IAAvB,KAAgC,EAAhD;AACA,MAAMC,gBAAgB,GAAGH,OAAO,CAACG,gBAAR,IAA4B,EAArD;;AACA,MAAI,8BAAaN,OAAb,CAAJ,EAA2B;AACzB,4DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsBO,oBAAGC,OAAH,CAAW,KAAI,CAACC,OAAhB,CADtB;;AAAA;AACOC,cAAAA,KADP,iBAEIC,MAFJ,CAEW,UAACC,CAAD;AAAA,uBAAO,8BAAaA,CAAb,CAAP;AAAA,eAFX,EAGID,MAHJ,CAGW,gCAAaL,gBAAb,CAHX;AAICL,cAAAA,QAAQ,CACN,IADM,EAEN,uCAAsB;AACpBS,gBAAAA,KAAK,EAALA,KADoB;AAEpBG,gBAAAA,KAAK,EAAE,CAAC,4BAASb,OAAT,CAFY;AAGpBM,gBAAAA,gBAAgB,EAAhBA;AAHoB,eAAtB,CAFM,CAAR;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAaD,GAdD,MAcO;AACLL,IAAAA,QAAQ,CAAC,IAAD,EAAOD,OAAP,CAAR;AACD;AACF,CArBD","sourcesContent":["import fs from 'fs-extra';\nimport loaderUtils from 'loader-utils';\nimport generateLoaderContent from '../generateLoaderContent';\nimport isLocaleFile, { localeFilter } from '../isLocaleFile';\nimport isLoaderFile, { noChunks } from '../isLoaderFile';\n\nmodule.exports = function localeLoader(content) {\n  const callback = this.async();\n  const options = loaderUtils.getOptions(this) || {};\n  const supportedLocales = options.supportedLocales || [];\n  if (isLoaderFile(content)) {\n    (async () => {\n      const files = (await fs.readdir(this.context))\n        .filter((f) => isLocaleFile(f))\n        .filter(localeFilter(supportedLocales));\n      callback(\n        null,\n        generateLoaderContent({\n          files,\n          chunk: !noChunks(content),\n          supportedLocales,\n        }),\n      );\n    })();\n  } else {\n    callback(null, content);\n  }\n};\n"],"file":"index.js"}