{"version":3,"sources":["lib/callUniqueIdentifies.ts"],"names":["makeCallsUniqueIdentifies","calls","numbers","map","ani","callType","id","phoneNumber","toLowerCase","Array","from","Set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEO,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD,EAAyB;AAChE,MAAMC,OAAO,GAAGD,KAAK,CAACE,GAAN,CAAU,gBAAuB;AAAA,QAApBC,GAAoB,QAApBA,GAAoB;AAAA,QAAfC,QAAe,QAAfA,QAAe;AAC/C,QAAMC,EAAE,GAAG,sDAA2B;AACpCC,MAAAA,WAAW,EAAEH,GADuB;AAEpCC,MAAAA,QAAQ,EAAEA,QAAQ,CAACG,WAAT;AAF0B,KAA3B,CAAX;AAIA,WAAOF,EAAP;AACD,GANe,CAAhB;AAOA,SAAOG,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQT,OAAR,CAAX,CAAP;AACD,CATM","sourcesContent":["import { EvCallData } from '../interfaces/EvData.interface';\nimport { contactMatchIdentifyEncode } from './contactMatchIdentify';\n\nexport const makeCallsUniqueIdentifies = (calls: EvCallData[]) => {\n  const numbers = calls.map(({ ani, callType }) => {\n    const id = contactMatchIdentifyEncode({\n      phoneNumber: ani,\n      callType: callType.toLowerCase(),\n    });\n    return id;\n  });\n  return Array.from(new Set(numbers));\n};\n"],"file":"callUniqueIdentifies.js"}