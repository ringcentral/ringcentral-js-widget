{"version":3,"sources":["lib/utils/isEqual.ts"],"names":["isEqual","x","y","isEqualExceptFunction","areShallowEqualWithObject","objA","objB","keysA","Object","keys","keysB","length","i","prototype","hasOwnProperty","call","areShallowEqualWithArray","prev","next"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAaC,CAAb,EAA4B;AACjD,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAOD,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAAjB,IAAsB,IAAID,CAAJ,KAAU,IAAIC,CAA3C;AACD,GAHgD,CAIjD;;;AACA,SAAOD,CAAC,KAAKA,CAAN,IAAWC,CAAC,KAAKA,CAAxB;AACD,CANM;;;;AAQA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,CAAD,EAAaC,CAAb,EAA4B;AAC/D,MAAI,OAAOD,CAAP,KAAa,UAAb,IAA2B,OAAOC,CAAP,KAAa,UAA5C,EAAwD,OAAO,IAAP;AACxD,SAAOF,OAAO,CAACC,CAAD,EAAIC,CAAJ,CAAd;AACD,CAHM;;;;AAKA,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,IAAD,EAAYC,IAAZ,EAA0B;AACjE,MAAIH,qBAAqB,CAACE,IAAD,EAAOC,IAAP,CAAzB,EAAuC,OAAO,IAAP;;AAEvC,MACE,QAAOD,IAAP,MAAgB,QAAhB,IACAA,IAAI,KAAK,IADT,IAEA,QAAOC,IAAP,MAAgB,QAFhB,IAGAA,IAAI,KAAK,IAJX,EAKE;AACA,WAAO,KAAP;AACD;;AAED,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAd;AACA,MAAMK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAd;AAEA,MAAIC,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC,OAAO,KAAP;;AAEnC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACI,MAA1B,EAAkCC,CAAC,IAAI,CAAvC,EAA0C;AACxC,QACE,CAACJ,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,IAArC,EAA2CC,KAAK,CAACK,CAAD,CAAhD,CAAD,IACA,CAACT,qBAAqB,CAACE,IAAI,CAACE,KAAK,CAACK,CAAD,CAAN,CAAL,EAAiBN,IAAI,CAACC,KAAK,CAACK,CAAD,CAAN,CAArB,CAFxB,EAGE;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CA3BM;;;;AA6BA,SAASI,wBAAT,CACLC,IADK,EAELC,IAFK,EAGL;AACA,MAAID,IAAI,KAAK,IAAT,IAAiBC,IAAI,KAAK,IAA1B,IAAkCD,IAAI,CAACN,MAAL,KAAgBO,IAAI,CAACP,MAA3D,EAAmE;AACjE,WAAO,KAAP;AACD;;AAHD,MAIQA,MAJR,GAImBM,IAJnB,CAIQN,MAJR;;AAKA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAClC,QAAI,CAACZ,OAAO,CAACiB,IAAI,CAACL,CAAD,CAAL,EAAUM,IAAI,CAACN,CAAD,CAAd,CAAZ,EAAgC;AAC9B,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["export const isEqual = (x: unknown, y: unknown) => {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  }\n  // eslint-disable-next-line no-self-compare\n  return x !== x && y !== y;\n};\n\nexport const isEqualExceptFunction = (x: unknown, y: unknown) => {\n  if (typeof x === 'function' && typeof y === 'function') return true;\n  return isEqual(x, y);\n};\n\nexport const areShallowEqualWithObject = (objA: any, objB: any) => {\n  if (isEqualExceptFunction(objA, objB)) return true;\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) return false;\n\n  for (let i = 0; i < keysA.length; i += 1) {\n    if (\n      !Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\n      !isEqualExceptFunction(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport function areShallowEqualWithArray(\n  prev: any[] | null | IArguments,\n  next: any[] | null | IArguments,\n) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n  const { length } = prev;\n  for (let i = 0; i < length; i += 1) {\n    if (!isEqual(prev[i], next[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"file":"isEqual.js"}