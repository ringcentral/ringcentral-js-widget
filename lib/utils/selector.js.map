{"version":3,"sources":["lib/utils/selector.ts"],"names":["defaultMemoize","func","lastArgs","Map","lastResult","get","arguments","set","apply","createSelectorCreatorWithArray","memoize","dependenciesFunc","resultFunc","memoizedResultFunc","createSelectorWithArray"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;;AAFA;;AACA;AAGO,SAASA,cAAT,CAAwBC,IAAxB,EAAwC;AAC7C,MAAMC,QAAqC,GAAG,IAAIC,GAAJ,EAA9C;AACA,MAAMC,UAA6B,GAAG,IAAID,GAAJ,EAAtC;AACA,SAAO,YAAkC;AAAA;;AACvC,QAAI,CAAC,wDAAyBD,QAAQ,CAACG,GAAT,CAAa,IAAb,CAAzB,yDAA+C,EAA/C,EAAmDC,SAAnD,CAAL,EAAoE;AAClEF,MAAAA,UAAU,CAACG,GAAX,CAAe,IAAf,EAAqBN,IAAI,CAACO,KAAL,CAAW,IAAX,EAAiBF,SAAjB,CAArB;AACD;;AACDJ,IAAAA,QAAQ,CAACK,GAAT,CAAa,IAAb,EAAmBD,SAAnB;AACA,WAAOF,UAAU,CAACC,GAAX,CAAe,IAAf,CAAP;AACD,GAND;AAOD;;AAED,IAAMI,8BAA8B,GAAG,SAAjCA,8BAAiC,GAAwC;AAAA,MAAvCC,OAAuC,uEAAnBV,cAAmB;AAC7E,SAAO,UAACW,gBAAD,EAA6BC,UAA7B,EAAsD;AAC3D,QAAMC,kBAAkB,GAAGH,OAAO,CAAC,YAAkC;AACnE,aAAOE,UAAU,CAACJ,KAAX,CAAiB,IAAjB,EAAuBF,SAAvB,CAAP;AACD,KAFiC,CAAlC;AAGA,WAAO,YAAkC;AACvC,aAAOO,kBAAkB,CAACL,KAAnB,CACL,IADK,EAELG,gBAAgB,CAACH,KAAjB,CAAuB,IAAvB,EAA6B,CAAC,IAAD,CAA7B,CAFK,CAAP;AAID,KALD;AAMD,GAVD;AAWD,CAZD;;AAcO,IAAMM,uBAAuB,GAAGL,8BAA8B,EAA9D","sourcesContent":["/* eslint-disable func-names */\n/* eslint-disable prefer-rest-params */\nimport { areShallowEqualWithArray } from './isEqual';\n\nexport function defaultMemoize(func: Function) {\n  const lastArgs: Map<any, IArguments | null> = new Map();\n  const lastResult: Map<any, unknown> = new Map();\n  return function(this: ThisType<unknown>) {\n    if (!areShallowEqualWithArray(lastArgs.get(this) ?? [], arguments)) {\n      lastResult.set(this, func.apply(this, arguments));\n    }\n    lastArgs.set(this, arguments);\n    return lastResult.get(this);\n  };\n}\n\nconst createSelectorCreatorWithArray = (memoize: Function = defaultMemoize) => {\n  return (dependenciesFunc: Function, resultFunc: Function) => {\n    const memoizedResultFunc = memoize(function(this: ThisType<unknown>) {\n      return resultFunc.apply(this, arguments);\n    });\n    return function(this: ThisType<unknown>) {\n      return memoizedResultFunc.apply(\n        this,\n        dependenciesFunc.apply(null, [this]),\n      );\n    };\n  };\n};\n\nexport const createSelectorWithArray = createSelectorCreatorWithArray();\n"],"file":"selector.js"}