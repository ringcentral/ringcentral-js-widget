{"version":3,"sources":["lib/TabFreezePrevention/TabFreezePrevention.ts"],"names":["global","navigator","locks","request","uuid","v4","Promise"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,qBAAAA,MAAM,CAACC,SAAP,iGAAkBC,KAAlB,0GAAyBC,OAAzB,8GAAmCC,IAAI,CAACC,EAAL,EAAnC,EAA8C,YAAM;AAClD,SAAO,IAAIC,OAAJ,CAAY,YAAM,CAAE,CAApB,CAAP;AACD,CAFD","sourcesContent":["import * as uuid from 'uuid';\n\n/**\n * If the browser supports web lock api, obtain a web lock indefinitely.\n * This will prevent chrome's proactive tab freeze feature from freezing\n * our app.\n *\n * https://www.chromestatus.com/feature/5193677469122560\n * https://developer.mozilla.org/en-US/docs/Web/API/Lock\n *\n * Use randomly generated uuid to prevent lock collision. While it should not\n * have any affect if multiple tabs uses the same name for the lock, we want to\n * avoid this since the api is still experimental and might have strange results.\n */\n\nglobal.navigator?.locks?.request?.(uuid.v4(), () => {\n  return new Promise(() => {});\n});\n"],"file":"TabFreezePrevention.js"}