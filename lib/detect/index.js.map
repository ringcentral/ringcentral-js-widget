{"version":3,"sources":["lib/detect/index.js"],"names":["find7DigitNumbers","input","countryCode","output","regex","match","exec","isValid","phoneNumber","hasPlus","length","push","country","startsAt","index","endsAt","byStartsAt","a","b","detect","areaCode","item","number","nationalNumber","ext","v2","sevenDigits","ref","slice","entry","sort"],"mappings":"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","sourcesContent":["import { findNumbers } from 'libphonenumber-js';\nimport { forEach, find, map } from 'ramda';\nimport parse from '../parse';\n\nfunction find7DigitNumbers(input, countryCode) {\n  const output = [];\n  const regex = /(?:^|[^\\d\\w#/])((?:\\d[-\\s]{0,1}){7,12}(?=[^\\d]|$))/g;\n\n  let match;\n  do {\n    match = regex.exec(input);\n    if (match) {\n      const { isValid, phoneNumber, hasPlus } = parse({\n        input: match[0],\n        countryCode,\n      });\n      if (isValid && !hasPlus && phoneNumber.length === 7) {\n        output.push({\n          country: countryCode,\n          phoneNumber,\n          startsAt: match.index,\n          endsAt: match.index + match[0].length,\n        });\n      }\n    }\n  } while (match);\n  return output;\n}\n\nfunction byStartsAt(a, b) {\n  return a.startsAt - b.startsAt;\n}\n\nexport default function detect({ input, countryCode = 'US', areaCode = '' }) {\n  const output = map(\n    (item) => ({\n      phoneNumber: item.number.number,\n      country: item.number.country,\n      nationalNumber: item.number.nationalNumber,\n      ext: item.number.ext,\n      startsAt: item.startsAt,\n      endsAt: item.endsAt,\n    }),\n    findNumbers(input, countryCode, {\n      v2: true,\n    }),\n  );\n  if ((countryCode === 'US' || countryCode === 'CA') && areaCode.length === 3) {\n    const sevenDigits = find7DigitNumbers(input, countryCode);\n    if (sevenDigits.length) {\n      // keep a reference of the original output to search in\n      const ref = output.slice();\n      forEach((item) => {\n        if (\n          !find(\n            (entry) =>\n              entry.startsAt <= item.startsAt && entry.endsAt >= item.startsAt,\n            ref,\n          )\n        ) {\n          output.push(item);\n        }\n      }, sevenDigits);\n    }\n  }\n  return output.sort(byStartsAt);\n}\n"],"file":"index.js"}