{"version":3,"sources":["lib/phoneTypeHelper.ts"],"names":["phoneTypeOrder","Object","freeze","phoneTypes","extension","direct","mobile","business","home","fax","other","phone","unknown","company","phoneTypeOrderMap","reduce","acc","item","idx","filterByPhoneTypes","ObjectMap","hasValue","phoneType","sortByPhoneTypes","a","b"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAGO,IAAMA,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,CAC1CC,uBAAWC,SAD+B,EAE1CD,uBAAWE,MAF+B,EAG1CF,uBAAWG,MAH+B,EAI1CH,uBAAWI,QAJ+B,EAK1CJ,uBAAWK,IAL+B,EAM1CL,uBAAWM,GAN+B,EAO1CN,uBAAWO,KAP+B,EAS1C;AACAP,uBAAWQ,KAV+B,EAW1CR,uBAAWS,OAX+B,EAY1CT,uBAAWU,OAZ+B,CAAd,CAAvB;;AAeA,IAAMC,iBAAiB,GAAGb,MAAM,CAACC,MAAP,CAC/B,qBAAsBa,aAAtB,EACE,UAACC,GAAD,EAAMC,IAAN,EAAYC,GAAZ,EAAoB;AAClBF,EAAAA,GAAG,CAACC,IAAD,CAAH,GAAYC,GAAZ;AACA,SAAOF,GAAP;AACD,CAJH,EAKE,EALF,EAMEhB,cANF,CAD+B,CAA1B;;AAWA,IAAMmB,kBAAkB,GAAG,mBAAyB,UAACF,IAAD;AAAA,SACzDG,qBAAUC,QAAV,CAAmBlB,sBAAnB,EAA+Bc,IAAI,CAACK,SAApC,CADyD;AAAA,CAAzB,CAA3B;;AAIA,IAAMC,gBAAgB,GAAG,iBAC9B,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUX,iBAAiB,CAACU,CAAC,CAACF,SAAH,CAAjB,GAAiCR,iBAAiB,CAACW,CAAC,CAACH,SAAH,CAA5D;AAAA,CAD8B,CAAzB","sourcesContent":["import { sort, reduce, filter, addIndex } from 'ramda';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport phoneTypes from '../enums/phoneTypes';\nimport { PhoneNumberModel } from '../models/PhoneNumber.model';\n\nexport const phoneTypeOrder = Object.freeze([\n  phoneTypes.extension,\n  phoneTypes.direct,\n  phoneTypes.mobile,\n  phoneTypes.business,\n  phoneTypes.home,\n  phoneTypes.fax,\n  phoneTypes.other,\n\n  // not in particular order\n  phoneTypes.phone,\n  phoneTypes.unknown,\n  phoneTypes.company,\n]);\n\nexport const phoneTypeOrderMap = Object.freeze(\n  addIndex<string, any>(reduce)(\n    (acc, item, idx) => {\n      acc[item] = idx;\n      return acc;\n    },\n    {},\n    phoneTypeOrder,\n  ),\n);\n\nexport const filterByPhoneTypes = filter<PhoneNumberModel>((item) =>\n  ObjectMap.hasValue(phoneTypes, item.phoneType),\n);\n\nexport const sortByPhoneTypes = sort<PhoneNumberModel>(\n  (a, b) => phoneTypeOrderMap[a.phoneType] - phoneTypeOrderMap[b.phoneType],\n);\n"],"file":"phoneTypeHelper.js"}