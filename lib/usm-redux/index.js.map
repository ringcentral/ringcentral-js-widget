{"version":3,"sources":["lib/usm-redux/index.ts"],"names":["state","target","name","descriptor","_actionTypes","_reducersMaps","_initialValue","initializer","call","undefined","get","_store","set","value","enumerable","configurable","action","fn","args","originalState","__$$state$$__","states","patches","_dispatch","type","Object","keys","map","key","actionTypes","__name__","reducer","apply","WRAPPER","computed","Error","_selector","selector","slice"],"mappings":"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","sourcesContent":["/* eslint-disable func-names */\nimport { produceWithPatches } from 'immer';\nimport { createSelector } from 'reselect';\nimport { event, Event } from '../usm';\nimport Module from './core/module';\n\ninterface Descriptor<T> extends TypedPropertyDescriptor<T> {\n  initializer(): T;\n}\n\n/**\n * `@state` is used to decorate a module state, which is based on the Redux reducer.\n */\nfunction state(\n  target: Module,\n  name: string,\n  descriptor?: Descriptor<unknown>,\n): any {\n  target._actionTypes = [...(target._actionTypes || []), name];\n  target._reducersMaps = {\n    ...(target._reducersMaps || {}),\n  };\n  target._initialValue = {\n    ...(target._initialValue || {}),\n  };\n  target._initialValue[name] =\n    descriptor && descriptor.initializer\n      ? descriptor.initializer.call(target)\n      : undefined;\n  const get = function (this: Module) {\n    return this._store ? this.state[name] : this._initialValue[name];\n  };\n  const set = function (this: Module, value: unknown) {\n    if (this._store) {\n      this.state[name] = value;\n    } else {\n      // Support for synchronous updating of initialized state values while in the constructor.\n      this._initialValue[name] = value;\n    }\n  };\n  return {\n    enumerable: true,\n    configurable: true,\n    get,\n    set,\n  };\n}\n\n/**\n * `@action` is used to decorate a method that changes the state of the module (Executing it will dispatch a Redux action),\n * and it does **NOT** support asynchronous methods.\n */\nfunction action(\n  target: Module,\n  name: string,\n  descriptor: TypedPropertyDescriptor<(...args: any) => void>,\n) {\n  const fn = descriptor.value;\n  descriptor.value = function (this: Module, ...args: []) {\n    const originalState: Record<string, any> = this.state;\n    const [states, patches] = produceWithPatches(\n      originalState,\n      (state: any) => {\n        this.__$$state$$__ = state;\n        fn.call(this, ...args);\n      },\n    );\n    this.__$$state$$__ = undefined;\n    this._dispatch({\n      type: Object.keys(this.state).map(\n        (key) => (this.actionTypes as Record<string, string>)[key],\n      ),\n      states,\n      patches,\n      __name__: this.__name__,\n    });\n  };\n  return descriptor;\n}\n\nfunction reducer(\n  target: Module,\n  name: string,\n  descriptor: TypedPropertyDescriptor<any>,\n) {\n  const fn = descriptor.value;\n  descriptor.value = function (this: Module, ...args: []) {\n    const states = fn.apply(this, [...args, this.state]);\n    this._dispatch({\n      type: Object.keys(this.state).map(\n        (key) => (this.actionTypes as Record<string, string>)[key],\n      ),\n      states,\n    });\n  };\n  return descriptor;\n}\n\nconst WRAPPER = '__selectors__';\n\n/**\n * Use `@computed(callback)`, you should make sure that the return value of its callback function is an `Array` of dependency collections.\n */\nfunction computed(target: Module, name: string, descriptor?: Descriptor<any>) {\n  if (descriptor && typeof descriptor.initializer !== 'function') {\n    throw new Error(\n      `${name} must be used in properties setter value with Array type`,\n    );\n  }\n  return {\n    configurable: true,\n    enumerable: true,\n    get<T extends Module>(this: T) {\n      if (!this[WRAPPER]) {\n        this[WRAPPER] = {};\n      }\n      if (!this[WRAPPER][name] && descriptor) {\n        const _selector = descriptor.initializer.call(this);\n        const selector = createSelector(\n          _selector.slice(0, -1),\n          _selector.slice(-1)[0],\n        );\n        this[WRAPPER][name] = () => selector(this.state);\n      }\n      return this[WRAPPER][name]();\n    },\n  };\n}\n\nexport { Module as default, state, action, reducer, computed, event, Event };\n"],"file":"index.js"}