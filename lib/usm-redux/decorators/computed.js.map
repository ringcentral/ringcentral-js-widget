{"version":3,"sources":["lib/usm-redux/decorators/computed.ts"],"names":["computed","depsCallback","target","key","descriptor","process","env","NODE_ENV","get","Error","depsCallbackSelector","that","storeKey","getState","selector","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAGO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,YAAD;AAAA,SAA4C,UAClEC,MADkE,EAElEC,GAFkE,EAGlEC,UAHkE,EAI/D;AACH,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,UAAI,OAAOH,UAAU,CAACI,GAAlB,KAA0B,UAA9B,EAA0C;AACxC,cAAM,IAAIC,KAAJ,yCAAN;AACD;;AACD,UAAI,OAAOR,YAAP,KAAwB,UAA5B,EAAwC;AACtC,cAAM,IAAIQ,KAAJ,oFAAN;AAGD;AACF;;AACD,QAAMC,oBAAoB,GAAG,oCAC3B,UAACC,IAAD;AAAA,aAAmB,CAACA,IAAI,CAACC,kBAAD,CAAJ,CAAeC,QAAf,EAAD,CAAnB;AAAA,KAD2B,EAE3B;AACA,gBAAyB;AACvB,aAAOZ,YAAY,CAAC,IAAD,CAAnB;AACD,KAL0B,CAA7B;AAOA,QAAMa,QAAQ,GAAG,oCACf,UAACH,IAAD;AAAA,aAAmBD,oBAAoB,CAACK,IAArB,CAA0BJ,IAA1B,CAAnB;AAAA,KADe,EAEfP,UAAU,CAACI,GAFI,CAAjB;AAIA,2CACKJ,UADL;AAEEI,MAAAA,GAFF,iBAEqB;AACjB,eAAOM,QAAQ,CAACC,IAAT,CAAc,IAAd,CAAP;AACD;AAJH;AAMD,GAhCuB;AAAA,CAAjB","sourcesContent":["import { createSelectorWithArray } from '../utils/index';\nimport { storeKey } from '../constant';\nimport { Service } from '../interface';\n\nexport const computed = (depsCallback: (instance: any) => any[]) => (\n  target: object,\n  key: string,\n  descriptor: TypedPropertyDescriptor<any>,\n) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof descriptor.get !== 'function') {\n      throw new Error(`'@computed' should decorate a getter.`);\n    }\n    if (typeof depsCallback !== 'function') {\n      throw new Error(\n        `@computed() parameter should be a selector function for dependencies collection.`,\n      );\n    }\n  }\n  const depsCallbackSelector = createSelectorWithArray(\n    (that: Service) => [that[storeKey].getState()],\n    // eslint-disable-next-line func-names\n    function (this: Service) {\n      return depsCallback(this);\n    },\n  );\n  const selector = createSelectorWithArray(\n    (that: Service) => depsCallbackSelector.call(that),\n    descriptor.get!,\n  );\n  return {\n    ...descriptor,\n    get(this: Service) {\n      return selector.call(this);\n    },\n  };\n};\n"],"file":"computed.js"}