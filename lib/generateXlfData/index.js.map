{"version":3,"sources":["lib/generateXlfData/index.js"],"names":["generateBaseData","allLocales","data","locale","_declaration","_attributes","version","xliff","xmlns","generateXlfData","localeData","sourceLocale","supportedLocales","sourceFolder","exportType","fillEmptyWithSource","isFull","toLowerCase","onlyTranslated","filter","jsonData","result","folderPath","folderData","sourceFile","files","targetFile","fileName","file","original","path","relative","join","transUnits","key","get","source","value","unit","id","_text","target","push","diff","length","datatype","body","Object","keys","xlfData","xml","json2xml","compact","spaces"],"mappings":"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","sourcesContent":["import path from 'path';\nimport xml from 'xml-js';\nimport { reduce, forEach } from 'ramda';\n\nfunction generateBaseData(allLocales) {\n  return reduce(\n    (data, locale) => {\n      data[locale] = {\n        _declaration: {\n          _attributes: {\n            version: '1.0',\n          },\n        },\n        xliff: {\n          _attributes: {\n            version: '1.2',\n            xmlns: 'urn:oasis:names:tc:xliff:document:1.2',\n          },\n        },\n      };\n      return data;\n    },\n    {},\n    allLocales,\n  );\n}\n\nexport default function generateXlfData({\n  localeData,\n  sourceLocale,\n  supportedLocales,\n  sourceFolder,\n  exportType,\n  fillEmptyWithSource,\n}) {\n  const isFull = exportType.toLowerCase() === 'full';\n  const onlyTranslated = exportType.toLowerCase() === 'translated';\n  const allLocales = supportedLocales.filter(\n    (locale) => locale !== sourceLocale,\n  );\n\n  const jsonData = reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          if (locale !== sourceLocale) {\n            const targetFile = folderData.files[locale];\n            const fileName = (targetFile && targetFile.file) || `${locale}.js`;\n            const original = path.relative(\n              sourceFolder,\n              path.join(folderData.path, fileName),\n            );\n            const transUnits = reduce(\n              (transUnits, [key]) => {\n                if (onlyTranslated) {\n                  if (\n                    targetFile &&\n                    targetFile.data.get(key) &&\n                    (!targetFile.data.get(key).source ||\n                      targetFile.data.get(key).source ===\n                        sourceFile.data.get(key).value)\n                  ) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                      target: {\n                        _text: targetFile.data.get(key).value,\n                      },\n                    };\n                    transUnits.push(unit);\n                  }\n                } else {\n                  const diff =\n                    !targetFile ||\n                    !targetFile.data.get(key) ||\n                    (targetFile.data.get(key).source &&\n                      targetFile.data.get(key).source !==\n                        sourceFile.data.get(key).value);\n                  if ((!onlyTranslated && diff) || isFull) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                    };\n                    if (diff) {\n                      if (fillEmptyWithSource) {\n                        unit.target = {\n                          _text: sourceFile.data.get(key).value,\n                        };\n                      } else {\n                        unit.target = {\n                          _text: '',\n                        };\n                      }\n                    } else {\n                      unit.target = {\n                        _text: targetFile.data.get(key).value,\n                      };\n                    }\n                    transUnits.push(unit);\n                  }\n                }\n                return transUnits;\n              },\n              [],\n              sourceFile.data,\n            );\n            if (transUnits.length) {\n              const unit = {\n                _attributes: {\n                  original,\n                  'source-language': sourceLocale,\n                  'target-language': locale,\n                  datatype: 'plaintext',\n                },\n                body: {\n                  'trans-unit': transUnits,\n                },\n              };\n              if (!result[locale].xliff.file) {\n                result[locale].xliff.file = [];\n              }\n              result[locale].xliff.file.push(unit);\n            }\n          }\n        }, supportedLocales);\n      }\n      return result;\n    },\n    generateBaseData(allLocales),\n    Object.keys(localeData),\n  );\n  return reduce(\n    (xlfData, locale) => {\n      xlfData[locale] = xml.json2xml(jsonData[locale], {\n        compact: true,\n        spaces: 4,\n      });\n      return xlfData;\n    },\n    {},\n    allLocales,\n  );\n}\n"],"file":"index.js"}