{"version":3,"sources":["lib/contactMatchIdentify.ts"],"names":["separator","contactMatchIdentifyEncode","phoneNumber","callType","toLocaleLowerCase","contactMatchIdentifyDecode","identify","split"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,SAAS,GAAG,GAAlB;;AAEO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,MACxCC,WADwC,QACxCA,WADwC;AAAA,MAExCC,QAFwC,QAExCA,QAFwC;AAAA,SAIxC,UAAGD,WAAH,SAAiBF,SAAjB,SAA6BG,QAA7B,EAAwCC,iBAAxC,EAJwC;AAAA,CAAnC;;;;AAMA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CACxCC,QADwC,EAElB;AAAA,wBACUA,QAAQ,CAACC,KAAT,CAAeP,SAAf,CADV;AAAA;AAAA,MACfE,WADe;AAAA,MACFC,QADE;;AAEtB,SAAO;AAAED,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,QAAQ,EAARA;AAAf,GAAP;AACD,CALM","sourcesContent":["interface ContactMatchQuery {\n  phoneNumber: string;\n  callType: string;\n}\n\nconst separator = '_';\n\nexport const contactMatchIdentifyEncode = ({\n  phoneNumber,\n  callType,\n}: ContactMatchQuery) =>\n  `${phoneNumber}${separator}${callType}`.toLocaleLowerCase();\n\nexport const contactMatchIdentifyDecode = (\n  identify: string,\n): ContactMatchQuery => {\n  const [phoneNumber, callType] = identify.split(separator);\n  return { phoneNumber, callType };\n};\n"],"file":"contactMatchIdentify.js"}