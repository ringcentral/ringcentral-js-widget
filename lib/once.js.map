{"version":3,"sources":["lib/once.ts"],"names":["once","prototype","property","value","descriptor","run","wrappedFn","call","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACe,SAASA,IAAT,CACbC,SADa,EAEbC,QAFa,QAIb;AAAA,MADEC,KACF,QADEA,KACF;AAAA,MADYC,UACZ;;AACA,MAAIC,GAAG,GAAG,KAAV;;AACA,WAASC,SAAT,GAA2C;AACzC,QAAI,CAACD,GAAL,EAAU;AACRA,MAAAA,GAAG,GAAG,IAAN;AACA,aAAOF,KAAK,CAACI,IAAN,CAAW,IAAX,CAAP;AACD;;AACD,WAAOC,SAAP;AACD;;AACD,yCACKJ,UADL;AAEED,IAAAA,KAAK,EAAEG;AAFT;AAID","sourcesContent":["/**\n * @function\n * @description Decorator function that make the class method run only once.\n */\nexport default function once(\n  prototype: object,\n  property: string,\n  { value, ...descriptor }: TypedPropertyDescriptor<(...args: any[]) => any>,\n) {\n  let run = false;\n  function wrappedFn(this: ThisType<object>) {\n    if (!run) {\n      run = true;\n      return value.call(this);\n    }\n    return undefined;\n  }\n  return {\n    ...descriptor,\n    value: wrappedFn,\n  };\n}\n"],"file":"once.js"}