{"version":3,"sources":["lib/background/index.ts"],"names":["background","target","name","value","descriptor","wrappedFn","_transport","args","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAMe,SAASA,UAAT,CACbC,MADa,EAEbC,IAFa,QAIb;AAAA,MADEC,KACF,QADEA,KACF;AAAA,MADYC,UACZ;;AACA,WAASC,SAAT,GAAuC;AACrC;AACA,QAAI,CAAC,KAAKC,UAAV,EAAsB;AAAA,wCAFSC,IAET;AAFSA,QAAAA,IAET;AAAA;;AACpB,aAAOJ,KAAK,CAACK,IAAN,OAAAL,KAAK,GAAM,IAAN,SAAeI,IAAf,EAAZ;AACD;;AACD,WAAO,IAAP;AACD;;AACD,yCACKH,UADL;AAEED,IAAAA,KAAK,EAAEE;AAFT;AAID","sourcesContent":["/**\n * @background is a decorator designed for explicitly making the function\n * to be executed in background instead of client.\n * It can be used for decorating UI-driven function calls so that it will\n * only be called in background.\n */\nexport default function background(\n  target: any,\n  name: string,\n  { value, ...descriptor }: TypedPropertyDescriptor<any>,\n) {\n  function wrappedFn(this: any, ...args) {\n    // Only clinet has transport\n    if (!this._transport) {\n      return value.call(this, ...args);\n    }\n    return null;\n  }\n  return {\n    ...descriptor,\n    value: wrappedFn,\n  };\n}\n"],"file":"index.js"}