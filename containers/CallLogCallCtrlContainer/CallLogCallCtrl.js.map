{"version":3,"sources":["containers/CallLogCallCtrlContainer/CallLogCallCtrl.tsx"],"names":["CallLogCallCtrl","props","currentLocale","telephonySessionId","disableLinks","isWide","currentSession","transferRef","isOnTransfer","isCurrentDeviceCall","isWebphone","sendDTMF","mute","unmute","hangUp","reject","onTransfer","onHold","onUnHold","startRecord","stopRecord","isOnMute","isOnHold","callStatus","direction","recordStatus","dtmfValue","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport CallLogCallCtrlComponent from '../../components/CallLogCallCtrlComponent';\n\nexport type CurrentSession = {\n  isOnMute: boolean;\n  isOnHold: boolean;\n  callStatus: string;\n  direction: any;\n  recordStatus: string;\n};\n\nexport interface CallLogCallCtrlProps {\n  isWebphone: boolean;\n  currentLocale?: string;\n  currentSession?: CurrentSession;\n  telephonySessionId?: string;\n  isWide?: boolean;\n  isCurrentDeviceCall?: boolean;\n  disableLinks?: boolean;\n  transferRef?: React.RefObject<HTMLSpanElement>;\n  isOnTransfer?: boolean;\n  mute: (telephonySessionId: string) => any;\n  unmute: (telephonySessionId: string) => any;\n  hangUp: (telephonySessionId: string) => any;\n  reject: (telephonySessionId: string) => any;\n  onHold: (telephonySessionId: string) => any;\n  onUnHold: (telephonySessionId: string) => any;\n  onTransfer: (telephonySessionId: string) => any;\n  startRecord: (telephonySessionId: string) => any;\n  stopRecord: (telephonySessionId: string) => any;\n  sendDTMF: (dtmfValue: string, telephonySessionId: string) => void;\n}\n\nexport const CallLogCallCtrl: FunctionComponent<CallLogCallCtrlProps> = (\n  props,\n) => {\n  const {\n    currentLocale,\n    telephonySessionId,\n    disableLinks,\n    isWide,\n    currentSession,\n    transferRef,\n    isOnTransfer,\n    isCurrentDeviceCall,\n    isWebphone,\n    sendDTMF,\n  } = props;\n  if (!currentSession) {\n    return null;\n  }\n  return (\n    <CallLogCallCtrlComponent\n      onMute={async () => props.mute(telephonySessionId)}\n      onUnmute={async () => props.unmute(telephonySessionId)}\n      onHangup={async () => props.hangUp(telephonySessionId)}\n      onReject={async () => props.reject(telephonySessionId)}\n      onTransfer={() => props.onTransfer(telephonySessionId)}\n      onHold={async () => props.onHold(telephonySessionId)}\n      onUnHold={async () => props.onUnHold(telephonySessionId)}\n      startRecord={async () => props.startRecord(telephonySessionId)}\n      stopRecord={async () => props.stopRecord(telephonySessionId)}\n      isOnMute={currentSession.isOnMute}\n      isOnHold={currentSession.isOnHold}\n      callStatus={currentSession.callStatus}\n      callDirection={currentSession.direction}\n      recordStatus={currentSession.recordStatus}\n      currentLocale={currentLocale}\n      disableLinks={disableLinks}\n      isWide={isWide}\n      transferRef={transferRef}\n      isOnTransfer={isOnTransfer}\n      isWebphone={isWebphone}\n      isCurrentDeviceCall={isCurrentDeviceCall}\n      sendDTMF={async (dtmfValue) => sendDTMF(dtmfValue, telephonySessionId)}\n    />\n  );\n};\n\nCallLogCallCtrl.defaultProps = {\n  currentLocale: 'en-US',\n  currentSession: undefined,\n  telephonySessionId: '',\n  disableLinks: false,\n  isWide: true,\n  transferRef: undefined,\n  isOnTransfer: false,\n};\n"],"file":"CallLogCallCtrl.js"}