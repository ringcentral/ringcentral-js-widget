{"version":3,"sources":["containers/CallLogCallCtrlContainer/CallLogCallCtrl.tsx"],"names":["CallLogCallCtrl","props","currentLocale","telephonySessionId","disableLinks","isWide","currentSession","transferRef","isOnTransfer","isCurrentDeviceCall","isWebphone","sendDTMF","forward","answer","ignore","forwardingNumbers","otherActiveCalls","answerAndHold","answerAndEnd","mute","unmute","hangUp","reject","onTransfer","onHold","onUnHold","startRecord","stopRecord","isOnMute","isOnHold","callStatus","direction","recordStatus","dtmfValue","phoneNumber","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport CallLogCallCtrlComponent from '../../components/CallLogCallCtrlComponent';\n\nexport type CurrentSession = {\n  isOnMute: boolean;\n  isOnHold: boolean;\n  callStatus: string;\n  direction: any;\n  recordStatus: string;\n  sessionId: string;\n};\n\nexport interface CallLogCallCtrlProps {\n  isWebphone: boolean;\n  currentLocale?: string;\n  currentSession?: CurrentSession;\n  telephonySessionId?: string;\n  isWide?: boolean;\n  isCurrentDeviceCall?: boolean;\n  disableLinks?: boolean;\n  transferRef?: React.RefObject<HTMLSpanElement>;\n  isOnTransfer?: boolean;\n  mute: (telephonySessionId: string) => any;\n  unmute: (telephonySessionId: string) => any;\n  hangUp: (telephonySessionId: string) => any;\n  reject: (telephonySessionId: string) => any;\n  onHold: (telephonySessionId: string) => any;\n  onUnHold: (telephonySessionId: string) => any;\n  onTransfer: (telephonySessionId: string) => any;\n  startRecord: (telephonySessionId: string) => any;\n  stopRecord: (telephonySessionId: string) => any;\n  sendDTMF: (dtmfValue: string, telephonySessionId: string) => void;\n  forward: (phoneNumber: string, telephonySessionId: string) => any;\n  answer: (telephonySessionId: string) => any;\n  forwardingNumbers: [];\n  ignore: (telephonySessionId: string) => void;\n  answerAndHold: (telephonySessionId: string) => void;\n  answerAndEnd: (telephonySessionId: string) => void;\n  otherActiveCalls: boolean;\n}\n\nexport const CallLogCallCtrl: FunctionComponent<CallLogCallCtrlProps> = (\n  props,\n) => {\n  const {\n    currentLocale,\n    telephonySessionId,\n    disableLinks,\n    isWide,\n    currentSession,\n    transferRef,\n    isOnTransfer,\n    isCurrentDeviceCall,\n    isWebphone,\n    sendDTMF,\n    forward,\n    answer,\n    ignore,\n    forwardingNumbers,\n    otherActiveCalls,\n    answerAndHold,\n    answerAndEnd,\n  } = props;\n  if (!currentSession) {\n    return null;\n  }\n  return (\n    <CallLogCallCtrlComponent\n      onMute={async () => props.mute(telephonySessionId)}\n      onUnmute={async () => props.unmute(telephonySessionId)}\n      onHangup={async () => props.hangUp(telephonySessionId)}\n      onReject={async () => props.reject(telephonySessionId)}\n      onTransfer={() => props.onTransfer(telephonySessionId)}\n      onHold={async () => props.onHold(telephonySessionId)}\n      onUnHold={async () => props.onUnHold(telephonySessionId)}\n      startRecord={async () => props.startRecord(telephonySessionId)}\n      stopRecord={async () => props.stopRecord(telephonySessionId)}\n      isOnMute={currentSession.isOnMute}\n      isOnHold={currentSession.isOnHold}\n      callStatus={currentSession.callStatus}\n      callDirection={currentSession.direction}\n      recordStatus={currentSession.recordStatus}\n      currentLocale={currentLocale}\n      disableLinks={disableLinks}\n      isWide={isWide}\n      transferRef={transferRef}\n      isOnTransfer={isOnTransfer}\n      //  isWebphone={isWebphone}\n      isCurrentDeviceCall={isCurrentDeviceCall}\n      sendDTMF={async (dtmfValue) => sendDTMF(dtmfValue, telephonySessionId)}\n      forward={async (phoneNumber) => forward(phoneNumber, telephonySessionId)}\n      answer={async () => answer(telephonySessionId)}\n      forwardingNumbers={forwardingNumbers}\n      ignore={async () => ignore(telephonySessionId)}\n      otherActiveCalls={otherActiveCalls}\n      answerAndHold={async () => {\n        await answerAndHold(telephonySessionId);\n      }}\n      answerAndEnd={async () => {\n        await answerAndEnd(telephonySessionId);\n      }}\n    />\n  );\n};\n\nCallLogCallCtrl.defaultProps = {\n  currentLocale: 'en-US',\n  currentSession: undefined,\n  telephonySessionId: '',\n  disableLinks: false,\n  isWide: true,\n  transferRef: undefined,\n  isOnTransfer: false,\n};\n"],"file":"CallLogCallCtrl.js"}