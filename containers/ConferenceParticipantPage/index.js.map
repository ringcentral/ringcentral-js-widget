{"version":3,"sources":["containers/ConferenceParticipantPage/index.js"],"names":["ConferenceParticipantContainer","props","mounted","nextProps","participants","onBackButtonClick","sessionCount","length","then","Component","propTypes","PropTypes","array","isRequired","func","number","mapToProps","_","phone","locale","conferenceCall","webphone","partyProfiles","sessions","currentLocale","mapToFunctions","routerInteraction","regionSettings","goBack","removeFunc","id","confId","conferences","Object","keys","removeFromConference","removeParticipantClickRemoveTrack","formatPhone","phoneNumber","areaCode","countryCode","afterOnRemoveBtnClick","participantListClickHangupTrack","afterOnCancel","removeParticipantClickCancelTrack","ConferenceParticipantPage"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport withPhone from '../../lib/withPhone';\nimport ConferenceParticipantPanel from '../../components/ConferenceParticipantPanel';\n\nclass ConferenceParticipantContainer extends Component {\n  static propTypes = {\n    participants: PropTypes.array.isRequired,\n    onBackButtonClick: PropTypes.func.isRequired,\n    sessionCount: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.mounted = false;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.mounted) {\n      return;\n    }\n\n    const { participants, onBackButtonClick, sessionCount } = this.props;\n\n    if (\n      !nextProps.participants.length &&\n      nextProps.participants.length !== participants.length\n    ) {\n      sleep(750).then(() => {\n        if (this.mounted && sessionCount) {\n          onBackButtonClick();\n        }\n      });\n    }\n  }\n\n  render() {\n    return <ConferenceParticipantPanel {...this.props} />;\n  }\n}\n\nfunction mapToProps(_, { phone: { locale, conferenceCall, webphone } }) {\n  const participants = conferenceCall.partyProfiles;\n  const sessionCount = (webphone.sessions && webphone.sessions.length) || 0;\n\n  return {\n    currentLocale: locale.currentLocale,\n    participants,\n    sessionCount,\n  };\n}\n\nfunction mapToFunctions(\n  _,\n  { phone: { conferenceCall, routerInteraction, regionSettings } },\n) {\n  return {\n    onBackButtonClick() {\n      routerInteraction.goBack();\n    },\n    async removeFunc(id) {\n      const confId =\n        conferenceCall.conferences &&\n        Object.keys(conferenceCall.conferences)[0];\n      try {\n        await conferenceCall.removeFromConference(confId, id);\n        // user action track\n        conferenceCall.removeParticipantClickRemoveTrack();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    formatPhone: (phoneNumber) =>\n      formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n    // user action track functions\n    afterOnRemoveBtnClick: () =>\n      conferenceCall.participantListClickHangupTrack(),\n    afterOnCancel: () => conferenceCall.removeParticipantClickCancelTrack(),\n  };\n}\n\nconst ConferenceParticipantPage = withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(ConferenceParticipantContainer),\n);\n\nexport default ConferenceParticipantPage;\n"],"file":"index.js"}