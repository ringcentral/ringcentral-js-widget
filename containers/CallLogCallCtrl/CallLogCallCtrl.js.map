{"version":3,"sources":["containers/CallLogCallCtrl/CallLogCallCtrl.tsx"],"names":["CallLogCallCtrl","props","currentLocale","telephonySessionId","disableLinks","isWide","currentSession","transferRef","isOnTransfer","mute","unmute","hangUp","reject","onTransfer","onHold","onUnHold","isOnMute","isOnHold","callStatus","direction","defaultProps","undefined","status"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;AA2BA,IAAMA,eAAwD,GAAG,SAA3DA,eAA2D,CAACC,KAAD,EAAW;AAAA,MAExEC,aAFwE,GAStED,KATsE,CAExEC,aAFwE;AAAA,MAGxEC,kBAHwE,GAStEF,KATsE,CAGxEE,kBAHwE;AAAA,MAIxEC,YAJwE,GAStEH,KATsE,CAIxEG,YAJwE;AAAA,MAKxEC,MALwE,GAStEJ,KATsE,CAKxEI,MALwE;AAAA,MAMxEC,cANwE,GAStEL,KATsE,CAMxEK,cANwE;AAAA,MAOxEC,WAPwE,GAStEN,KATsE,CAOxEM,WAPwE;AAAA,MAQxEC,YARwE,GAStEP,KATsE,CAQxEO,YARwE;;AAU1E,MAAI,CAACF,cAAL,EAAqB;AACnB,WAAO,IAAP;AACD;;AACD,SACE,gCAAC,oCAAD;AACE,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAYL,KAAK,CAACQ,IAAN,CAAWN,kBAAX,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADV;AAEE,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYF,KAAK,CAACS,MAAN,CAAaP,kBAAb,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFZ;AAGE,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYF,KAAK,CAACU,MAAN,CAAaR,kBAAb,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHZ;AAIE,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYF,KAAK,CAACW,MAAN,CAAaT,kBAAb,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJZ;AAKE,IAAA,UAAU,EAAE;AAAA,aAAMF,KAAK,CAACY,UAAN,CAAiBV,kBAAjB,CAAN;AAAA,KALd;AAME,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYF,KAAK,CAACa,MAAN,CAAaX,kBAAb,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANV;AAOE,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAYF,KAAK,CAACc,QAAN,CAAeZ,kBAAf,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPZ;AAQE,IAAA,QAAQ,EAAEG,cAAc,CAACU,QAR3B;AASE,IAAA,QAAQ,EAAEV,cAAc,CAACW,QAT3B;AAUE,IAAA,UAAU,EAAEX,cAAc,CAACY,UAV7B;AAWE,IAAA,aAAa,EAAEZ,cAAc,CAACa,SAXhC;AAYE,IAAA,aAAa,EAAEjB,aAZjB;AAaE,IAAA,YAAY,EAAEE,YAbhB;AAcE,IAAA,MAAM,EAAEC,MAdV;AAeE,IAAA,WAAW,EAAEE,WAff;AAgBE,IAAA,YAAY,EAAEC;AAhBhB,IADF;AAoBD,CAjCD;;AAmCAR,eAAe,CAACoB,YAAhB,GAA+B;AAC7BlB,EAAAA,aAAa,EAAE,OADc;AAE7BI,EAAAA,cAAc,EAAEe,SAFa;AAG7BlB,EAAAA,kBAAkB,EAAE,EAHS;AAI7BmB,EAAAA,MAAM,EAAE,EAJqB;AAK7BlB,EAAAA,YAAY,EAAE,KALe;AAM7BC,EAAAA,MAAM,EAAE,IANqB;AAO7BE,EAAAA,WAAW,EAAEc,SAPgB;AAQ7Bb,EAAAA,YAAY,EAAE;AARe,CAA/B;eAWeR,e","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport CallLogCallCtrlComponent from '../../components/CallLogCallCtrlComponent';\n\nexport type CurrentSession = {\n  isOnMute: boolean;\n  isOnHold: boolean;\n  callStatus: string;\n  direction: any;\n};\n\nexport interface CallLogCallCtrlProps {\n  currentLocale?: string;\n  currentSession?: CurrentSession;\n  telephonySessionId?: string;\n  status?: string;\n  mute: (telephonySessionId: string) => any;\n  unmute: (telephonySessionId: string) => any;\n  hangUp: (telephonySessionId: string) => any;\n  reject: (telephonySessionId: string) => any;\n  onHold: (telephonySessionId: string) => any;\n  onUnHold: (telephonySessionId: string) => any;\n  onTransfer: (telephonySessionId: string) => any;\n  isWide?: boolean;\n  disableLinks?: boolean;\n  transferRef?: React.RefObject<HTMLSpanElement>;\n  isOnTransfer?: boolean;\n}\n\nconst CallLogCallCtrl: FunctionComponent<CallLogCallCtrlProps> = (props) => {\n  const {\n    currentLocale,\n    telephonySessionId,\n    disableLinks,\n    isWide,\n    currentSession,\n    transferRef,\n    isOnTransfer,\n  } = props;\n  if (!currentSession) {\n    return null;\n  }\n  return (\n    <CallLogCallCtrlComponent\n      onMute={async () => props.mute(telephonySessionId)}\n      onUnmute={async () => props.unmute(telephonySessionId)}\n      onHangup={async () => props.hangUp(telephonySessionId)}\n      onReject={async () => props.reject(telephonySessionId)}\n      onTransfer={() => props.onTransfer(telephonySessionId)}\n      onHold={async () => props.onHold(telephonySessionId)}\n      onUnHold={async () => props.onUnHold(telephonySessionId)}\n      isOnMute={currentSession.isOnMute}\n      isOnHold={currentSession.isOnHold}\n      callStatus={currentSession.callStatus}\n      callDirection={currentSession.direction}\n      currentLocale={currentLocale}\n      disableLinks={disableLinks}\n      isWide={isWide}\n      transferRef={transferRef}\n      isOnTransfer={isOnTransfer}\n    />\n  );\n};\n\nCallLogCallCtrl.defaultProps = {\n  currentLocale: 'en-US',\n  currentSession: undefined,\n  telephonySessionId: '',\n  status: '',\n  disableLinks: false,\n  isWide: true,\n  transferRef: undefined,\n  isOnTransfer: false,\n};\n\nexport default CallLogCallCtrl;\n"],"file":"CallLogCallCtrl.js"}