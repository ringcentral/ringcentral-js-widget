{"version":3,"sources":["containers/AppView/AppView.tsx"],"names":["AppViewPanel","props","children","server","enabled","onSetData","redirectUri","styles","root","defaultProps","mapToFunctions","_","phone","oAuth","environment","mapToProps","options","setData","AppView"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAWA,IAAMA,YAA6C,GAAG,SAAhDA,YAAgD,CAACC,KAAD,EAAW;AAAA,MACvDC,QADuD,GACDD,KADC,CACvDC,QADuD;AAAA,MAC7CC,MAD6C,GACDF,KADC,CAC7CE,MAD6C;AAAA,MACrCC,OADqC,GACDH,KADC,CACrCG,OADqC;AAAA,MAC5BC,SAD4B,GACDJ,KADC,CAC5BI,SAD4B;AAAA,MACjBC,WADiB,GACDL,KADC,CACjBK,WADiB;AAE/D,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,KACGN,QADH,eAEE,gCAAC,uBAAD;AACE,IAAA,MAAM,EAAEC,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,aAAa,EAAC;AALhB,IAFF,CADF;AAYD,CAdD;;AAgBAN,YAAY,CAACS,YAAb,GAA4B;AAC1BL,EAAAA,OAAO,EAAE;AADiB,CAA5B;;AAIA,SAASM,cAAT,CAAwBC,CAAxB,QAA8D;AAAA,wBAAjCC,KAAiC;AAAA,MAAxBC,KAAwB,cAAxBA,KAAwB;AAAA,MAAjBC,WAAiB,cAAjBA,WAAiB;AAC5D,SAAO;AACLX,IAAAA,MAAM,EAAEW,WAAW,CAACX,MADf;AAELC,IAAAA,OAAO,EAAEU,WAAW,CAACV,OAFhB;AAGLE,IAAAA,WAAW,EAAEO,KAAK,CAACP;AAHd,GAAP;AAKD;;AAED,SAASS,UAAT,CAAoBJ,CAApB,SAAmD;AAAA,MAAjBG,WAAiB,SAA1BF,KAA0B,CAAjBE,WAAiB;AACjD,SAAO;AACLT,IAAAA,SAAS,EAAE,mBAACW,OAAD,EAAkB;AAC3BF,MAAAA,WAAW,CAACG,OAAZ,CAAoBD,OAApB;AACD;AAHI,GAAP;AAKD;;AAEM,IAAME,OAAO,GAAG,2BACrB,yBAAQR,cAAR,EAAwBK,UAAxB,EAAoCf,YAApC,CADqB,CAAhB","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Environment from 'ringcentral-widgets/components/Environment';\nimport withPhone from 'ringcentral-widgets/lib/withPhone';\n\nimport styles from './styles.scss';\n\ninterface AppViewProps {\n  server: string;\n  redirectUri: string;\n  enabled: boolean;\n  appKey?: string;\n  appSecret?: string;\n  onSetData: (options: any) => any;\n}\n\nconst AppViewPanel: FunctionComponent<AppViewProps> = (props) => {\n  const { children, server, enabled, onSetData, redirectUri } = props;\n  return (\n    <div className={styles.root}>\n      {children}\n      <Environment\n        server={server}\n        enabled={enabled}\n        onSetData={onSetData}\n        redirectUri={redirectUri}\n        recordingHost=\"\"\n      />\n    </div>\n  );\n};\n\nAppViewPanel.defaultProps = {\n  enabled: false,\n};\n\nfunction mapToFunctions(_, { phone: { oAuth, environment } }) {\n  return {\n    server: environment.server,\n    enabled: environment.enabled,\n    redirectUri: oAuth.redirectUri,\n  };\n}\n\nfunction mapToProps(_, { phone: { environment } }) {\n  return {\n    onSetData: (options: any) => {\n      environment.setData(options);\n    },\n  };\n}\n\nexport const AppView = withPhone(\n  connect(mapToFunctions, mapToProps)(AppViewPanel),\n);\n"],"file":"AppView.js"}