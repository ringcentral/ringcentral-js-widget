{"version":3,"sources":["containers/CallCtrlPage/CallCtrlContainer.js"],"names":["CallCtrlContainer","props","layout","getInitialLayout","disableMergeAndAdd","mergeDisabled","addDisabled","state","selectedMatcherIndex","avatarUrl","onLastMergingCallEnded","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","value","sendDTMF","onPark","onAdd","onMerge","onBeforeMerge","gotoParticipantsCtrl","_mounted","_updateAvatarAndMatchIndex","_updateCurrentConferenceCall","_updateMergingPairToSessionId","isLastCallEnded","nextProps","lastCallInfo","isWebRTC","disableLinks","isConferenceCallOverload","hasConferenceCall","isMergeAndAddDisabled","partyData","callCtrlLayouts","mergeCtrl","status","sessionStatus","finished","normalCtrl","closeMergingPair","lastProps","showSpinner","conferenceCtrl","nextState","getLayout","conferenceCallParties","_updateMergeAddButtonDisabled","contactMatch","loadConference","conferenceCallId","setMergeParty","toSessionId","phoneNumber","direction","callDirections","outbound","to","from","fallbackUserName","inbound","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","recordStatus","showBackButton","onBackButtonClick","onFlip","onTransfer","disableFlip","areaCode","countryCode","brand","showContactDisplayPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","conferenceCallEquipped","afterHideMergeConfirm","afterConfirmMerge","afterOnMerge","children","Component","propTypes","PropTypes","shape","string","number","bool","isOnFlip","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknown","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlContainer extends Component {\n  constructor(props) {\n    super(props);\n    const layout = props.getInitialLayout(this.props);\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(\n      this.props,\n      layout,\n    );\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      layout,\n      mergeDisabled,\n      addDisabled,\n    };\n\n    this.onLastMergingCallEnded = this::this.onLastMergingCallEnded;\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        (match) => match.id === option.id,\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () => this.props.onMute(this.props.session.id);\n    this.onUnmute = () => this.props.onUnmute(this.props.session.id);\n    this.onHold = () => this.props.onHold(this.props.session.id);\n    this.onUnhold = () => this.props.onUnhold(this.props.session.id);\n    this.onRecord = () => this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () => this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id, this.state.layout);\n    this.onKeyPadChange = (value) =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onPark = () => this.props.onPark(this.props.session.id);\n    this.onAdd = () => this.props.onAdd(this.props.session.id);\n    this.onMerge = () => this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () => this.props.onBeforeMerge(this.props.session.id);\n    this.gotoParticipantsCtrl = () =>\n      this.props.gotoParticipantsCtrl(this.props.session.id);\n  }\n\n  static isLastCallEnded({ lastCallInfo }) {\n    return !!(lastCallInfo && lastCallInfo.status === sessionStatus.finished);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    this._updateCurrentConferenceCall(this.props);\n    this._updateMergingPairToSessionId();\n\n    if (CallCtrlContainer.isLastCallEnded(this.props)) {\n      /**\n       * if the last has already been terminated after rendering, need to trigger the callback at the point\n       */\n      this.onLastMergingCallEnded();\n    }\n  }\n\n  disableMergeAndAdd(nextProps, layout) {\n    const {\n      lastCallInfo,\n      isWebRTC,\n      disableLinks,\n      isConferenceCallOverload,\n      session,\n      hasConferenceCall,\n    } = nextProps;\n\n    // const isInboundCall = session.direction === callDirections.inbound;\n    // const isMergeAndAddDisabled = !isWebRTC || isInboundCall || !session.partyData;\n    const isMergeAndAddDisabled =\n      !isWebRTC || !session.partyData || disableLinks;\n\n    let mergeDisabled = isMergeAndAddDisabled;\n    let addDisabled = isMergeAndAddDisabled;\n    if (\n      layout === callCtrlLayouts.mergeCtrl &&\n      (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n\n    if (hasConferenceCall && isWebRTC && isConferenceCallOverload) {\n      mergeDisabled = true;\n      addDisabled = true;\n    }\n\n    return { mergeDisabled, addDisabled };\n  }\n\n  async onLastMergingCallEnded() {\n    if (this._mounted) {\n      await sleep(2000);\n\n      if (this._mounted) {\n        this.setState({\n          layout: callCtrlLayouts.normalCtrl,\n        });\n      }\n\n      if (this.props.closeMergingPair) {\n        this.props.closeMergingPair();\n      }\n    }\n  }\n\n  getLayout(lastProps, nextProps) {\n    if (nextProps.showSpinner) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    return this.props.getInitialLayout(nextProps);\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    this._updateMergingPairToSessionId(nextProps, nextState);\n\n    let layout = this.state.layout;\n    if (nextProps.session.id !== this.props.session.id) {\n      layout = this.getLayout(this.props, nextProps);\n      this.setState({\n        layout,\n      });\n\n      if (layout === callCtrlLayouts.normalCtrl) {\n        this._updateAvatarAndMatchIndex(nextProps);\n      }\n    } else if (\n      layout === callCtrlLayouts.mergeCtrl &&\n      CallCtrlContainer.isLastCallEnded(this.props) === false &&\n      CallCtrlContainer.isLastCallEnded(nextProps) === true\n    ) {\n      this.onLastMergingCallEnded();\n    } else if (\n      layout === callCtrlLayouts.conferenceCtrl &&\n      this.props.conferenceCallParties !== nextProps.conferenceCallParties\n    ) {\n      this._updateCurrentConferenceCall(nextProps);\n    }\n    this._updateMergeAddButtonDisabled(nextProps, layout);\n  }\n\n  _updateMergeAddButtonDisabled(nextProps, layout) {\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(\n      nextProps,\n      layout,\n    );\n    this.setState({\n      mergeDisabled,\n      addDisabled,\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(\n        (match) => match.id === contact.id,\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  _updateCurrentConferenceCall(props) {\n    if (\n      this.state.layout === callCtrlLayouts.conferenceCtrl &&\n      props.loadConference\n    ) {\n      props.loadConference(props.conferenceCallId);\n    }\n  }\n\n  _updateMergingPairToSessionId(\n    nextProps = this.props,\n    nextState = this.state,\n  ) {\n    if (\n      nextState.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.lastCallInfo\n    ) {\n      nextProps.setMergeParty({ toSessionId: nextProps.session.id });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber =\n      session.direction === callDirections.outbound ? session.to : session.from;\n\n    let fallbackUserName;\n    if (\n      session.direction === callDirections.inbound &&\n      session.from === 'anonymous'\n    ) {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.props.onFlip}\n        onTransfer={this.props.onTransfer}\n        onPark={this.onPark}\n        disableFlip={this.props.disableFlip}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        sourceIcons={this.props.sourceIcons}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n        layout={this.state.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.state.addDisabled}\n        mergeDisabled={this.state.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.gotoParticipantsCtrl}\n        afterHideMergeConfirm={this.props.afterHideMergeConfirm}\n        afterConfirmMerge={this.props.afterConfirmMerge}\n        afterOnMerge={this.props.afterOnMerge}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlContainer.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  layout: PropTypes.string,\n  showSpinner: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallId: PropTypes.string,\n  gotoParticipantsCtrl: PropTypes.func,\n  loadConference: PropTypes.func,\n  getInitialLayout: PropTypes.func,\n  closeMergingPair: PropTypes.func,\n  isWebRTC: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  isConferenceCallOverload: PropTypes.bool,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n  disableFlip: PropTypes.bool,\n};\n\nCallCtrlContainer.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknown },\n  conferenceCallId: null,\n  gotoParticipantsCtrl: (i) => i,\n  loadConference: (i) => i,\n  getInitialLayout: () => callCtrlLayouts.normalCtrl,\n  layout: callCtrlLayouts.normalCtrl,\n  closeMergingPair: null,\n  isWebRTC: false,\n  disableLinks: false,\n  isConferenceCallOverload: false,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  disableFlip: false,\n};\n\nexport default CallCtrlContainer;\n"],"file":"CallCtrlContainer.js"}