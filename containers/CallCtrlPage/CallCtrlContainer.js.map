{"version":3,"sources":["containers/CallCtrlPage/CallCtrlContainer.js"],"names":["CallCtrlContainer","props","layout","getInitialLayout","disableMergeAndAdd","mergeDisabled","addDisabled","state","selectedMatcherIndex","avatarUrl","onLastMergingCallEnded","bind","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","value","sendDTMF","onPark","onAdd","onMerge","onBeforeMerge","gotoParticipantsCtrl","onCompleteTransfer","_mounted","_updateAvatarAndMatchIndex","_updateCurrentConferenceCall","_updateMergingPairToSessionId","isLastCallEnded","nextProps","lastCallInfo","isWebRTC","disableLinks","isConferenceCallOverload","hasConferenceCall","isMergeAndAddDisabled","partyData","callCtrlLayouts","mergeCtrl","status","sessionStatus","finished","normalCtrl","closeMergingPair","lastProps","showSpinner","conferenceCtrl","nextState","getLayout","conferenceCallParties","_updateMergeAddButtonDisabled","contactMatch","loadConference","conferenceCallId","setMergeParty","toSessionId","showCallQueueName","phoneNumber","direction","callDirections","outbound","to","from","fallbackUserName","inbound","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnTransfer","warmTransferSessionId","recordStatus","showBackButton","onBackButtonClick","onFlip","onTransfer","disableFlip","showPark","callQueueName","areaCode","countryCode","brand","showContactDisplayPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","conferenceCallEquipped","afterHideMergeConfirm","afterConfirmMerge","afterOnMerge","children","Component","propTypes","PropTypes","shape","string","number","bool","isOnFlip","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknown","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sleep from '@ringcentral-integration/commons/lib/sleep';\nimport calleeTypes from '@ringcentral-integration/commons/enums/calleeTypes';\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport sessionStatus from '@ringcentral-integration/commons/modules/Webphone/sessionStatus';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlContainer extends Component {\n  constructor(props) {\n    super(props);\n    const layout = props.getInitialLayout(this.props);\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(\n      this.props,\n      layout,\n    );\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      layout,\n      mergeDisabled,\n      addDisabled,\n    };\n\n    this.onLastMergingCallEnded = this.onLastMergingCallEnded.bind(this);\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        (match) => match.id === option.id,\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () => this.props.onMute(this.props.session.id);\n    this.onUnmute = () => this.props.onUnmute(this.props.session.id);\n    this.onHold = () => this.props.onHold(this.props.session.id);\n    this.onUnhold = () => this.props.onUnhold(this.props.session.id);\n    this.onRecord = () => this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () => this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id, this.state.layout);\n    this.onKeyPadChange = (value) =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onPark = () => this.props.onPark(this.props.session.id);\n    this.onAdd = () => this.props.onAdd(this.props.session.id);\n    this.onMerge = () => this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () => this.props.onBeforeMerge(this.props.session.id);\n    this.gotoParticipantsCtrl = () =>\n      this.props.gotoParticipantsCtrl(this.props.session.id);\n    this.onCompleteTransfer = () =>\n      this.props.onCompleteTransfer(this.props.session.id);\n  }\n\n  static isLastCallEnded({ lastCallInfo }) {\n    return !!(lastCallInfo && lastCallInfo.status === sessionStatus.finished);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    this._updateCurrentConferenceCall(this.props);\n    this._updateMergingPairToSessionId();\n\n    if (CallCtrlContainer.isLastCallEnded(this.props)) {\n      /**\n       * if the last has already been terminated after rendering, need to trigger the callback at the point\n       */\n      this.onLastMergingCallEnded();\n    }\n  }\n\n  disableMergeAndAdd(nextProps, layout) {\n    const {\n      lastCallInfo,\n      isWebRTC,\n      disableLinks,\n      isConferenceCallOverload,\n      session,\n      hasConferenceCall,\n    } = nextProps;\n\n    // const isInboundCall = session.direction === callDirections.inbound;\n    // const isMergeAndAddDisabled = !isWebRTC || isInboundCall || !session.partyData;\n    const isMergeAndAddDisabled =\n      !isWebRTC || !session.partyData || disableLinks;\n\n    let mergeDisabled = isMergeAndAddDisabled;\n    let addDisabled = isMergeAndAddDisabled;\n    if (\n      layout === callCtrlLayouts.mergeCtrl &&\n      (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n\n    if (hasConferenceCall && isWebRTC && isConferenceCallOverload) {\n      mergeDisabled = true;\n      addDisabled = true;\n    }\n\n    return { mergeDisabled, addDisabled };\n  }\n\n  async onLastMergingCallEnded() {\n    if (this._mounted) {\n      await sleep(2000);\n\n      if (this._mounted) {\n        this.setState({\n          layout: callCtrlLayouts.normalCtrl,\n        });\n      }\n\n      if (this.props.closeMergingPair) {\n        this.props.closeMergingPair();\n      }\n    }\n  }\n\n  getLayout(lastProps, nextProps) {\n    if (nextProps.showSpinner) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    return this.props.getInitialLayout(nextProps);\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    this._updateMergingPairToSessionId(nextProps, nextState);\n\n    let layout = this.state.layout;\n    if (nextProps.session.id !== this.props.session.id) {\n      layout = this.getLayout(this.props, nextProps);\n      this.setState({\n        layout,\n      });\n\n      if (layout === callCtrlLayouts.normalCtrl) {\n        this._updateAvatarAndMatchIndex(nextProps);\n      }\n    } else if (\n      layout === callCtrlLayouts.mergeCtrl &&\n      CallCtrlContainer.isLastCallEnded(this.props) === false &&\n      CallCtrlContainer.isLastCallEnded(nextProps) === true\n    ) {\n      this.onLastMergingCallEnded();\n    } else if (\n      layout === callCtrlLayouts.conferenceCtrl &&\n      this.props.conferenceCallParties !== nextProps.conferenceCallParties\n    ) {\n      this._updateCurrentConferenceCall(nextProps);\n    }\n    this._updateMergeAddButtonDisabled(nextProps, layout);\n  }\n\n  _updateMergeAddButtonDisabled(nextProps, layout) {\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(\n      nextProps,\n      layout,\n    );\n    this.setState({\n      mergeDisabled,\n      addDisabled,\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(\n        (match) => match.id === contact.id,\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  _updateCurrentConferenceCall(props) {\n    if (\n      this.state.layout === callCtrlLayouts.conferenceCtrl &&\n      props.loadConference\n    ) {\n      props.loadConference(props.conferenceCallId);\n    }\n  }\n\n  _updateMergingPairToSessionId(\n    nextProps = this.props,\n    nextState = this.state,\n  ) {\n    if (\n      nextState.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.lastCallInfo\n    ) {\n      nextProps.setMergeParty({ toSessionId: nextProps.session.id });\n    }\n  }\n\n  render() {\n    const { session, showCallQueueName } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber =\n      session.direction === callDirections.outbound ? session.to : session.from;\n\n    let fallbackUserName;\n    if (\n      session.direction === callDirections.inbound &&\n      session.from === 'anonymous'\n    ) {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnTransfer={session.isOnTransfer}\n        isOnWaitingTransfer={!!session.warmTransferSessionId}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.props.onFlip}\n        onTransfer={this.props.onTransfer}\n        onCompleteTransfer={this.onCompleteTransfer}\n        onPark={this.onPark}\n        disableFlip={this.props.disableFlip}\n        showPark={this.props.showPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        showCallQueueName={showCallQueueName}\n        callQueueName={showCallQueueName ? session.callQueueName : null}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        sourceIcons={this.props.sourceIcons}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n        layout={this.state.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.state.addDisabled}\n        mergeDisabled={this.state.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.gotoParticipantsCtrl}\n        afterHideMergeConfirm={this.props.afterHideMergeConfirm}\n        afterConfirmMerge={this.props.afterConfirmMerge}\n        afterOnMerge={this.props.afterOnMerge}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlContainer.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n    warmTransferSessionId: PropTypes.string,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  layout: PropTypes.string,\n  showSpinner: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallId: PropTypes.string,\n  gotoParticipantsCtrl: PropTypes.func,\n  loadConference: PropTypes.func,\n  getInitialLayout: PropTypes.func,\n  closeMergingPair: PropTypes.func,\n  isWebRTC: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  isConferenceCallOverload: PropTypes.bool,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n  disableFlip: PropTypes.bool,\n  showCallQueueName: PropTypes.bool,\n  onCompleteTransfer: PropTypes.func,\n};\n\nCallCtrlContainer.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknown },\n  conferenceCallId: null,\n  gotoParticipantsCtrl: (i) => i,\n  loadConference: (i) => i,\n  getInitialLayout: () => callCtrlLayouts.normalCtrl,\n  layout: callCtrlLayouts.normalCtrl,\n  closeMergingPair: null,\n  isWebRTC: false,\n  disableLinks: false,\n  isConferenceCallOverload: false,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  disableFlip: false,\n  showCallQueueName: false,\n  onCompleteTransfer: () => null,\n};\n\nexport default CallCtrlContainer;\n"],"file":"CallCtrlContainer.js"}