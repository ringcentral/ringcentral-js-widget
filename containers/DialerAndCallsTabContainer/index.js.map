{"version":3,"sources":["containers/DialerAndCallsTabContainer/index.js"],"names":["TabContentView","props","getTabs","currentLocale","currentPath","path","label","i18n","getString","dataSign","isActive","showSpinner","styles","nav","content","Component","propTypes","showTabs","PropTypes","bool","isRequired","string","goTo","func","mapToProps","_","phone","locale","routerInteraction","hasActiveCalls","ready","mapToFunctions","push","DialerAndCallsTabContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,c;;;;;AASJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,OAAL,GAAe,8BACb;AAAA,aAAM,MAAKD,KAAL,CAAWE,aAAjB;AAAA,KADa,EAEb;AAAA,aAAM,MAAKF,KAAL,CAAWG,WAAjB;AAAA,KAFa,EAGb,UAACD,aAAD,EAAgBC,WAAhB;AAAA,aAAgC,CAC9B;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAe,QAAf,EAAyBL,aAAzB,CAFT;AAGEM,QAAAA,QAAQ,EAAE,QAHZ;AAIEC,QAAAA,QAJF,sBAIa;AACT,iBAAON,WAAW,KAAK,SAAvB;AACD;AANH,OAD8B,EAS9B;AACEC,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAFT;AAGEM,QAAAA,QAAQ,EAAE,UAHZ;AAIEC,QAAAA,QAJF,sBAIa;AACT,iBAAON,WAAW,KAAK,QAAvB;AACD;AANH,OAT8B,CAAhC;AAAA,KAHa,CAAf;AAFiB;AAwBlB;;;;6BAEQ;AACP,UAAI,KAAKH,KAAL,CAAWU,WAAf,EAA4B;AAC1B,4BAAO,gCAAC,8BAAD,OAAP;AACD;;AACD,0BACE,gCAAC,2BAAD,eACM,KAAKV,KADX;AAEE,QAAA,IAAI,EAAE,KAAKC,OAAL,EAFR;AAGE,QAAA,YAAY,EAAEU,mBAAOC,GAHvB;AAIE,QAAA,mBAAmB,EAAED,mBAAOE;AAJ9B,SADF;AAQD;;;;EA/C0BC,gB;;AAAvBf,c,CACGgB,S,GAAY;AACjBC,EAAAA,QAAQ,EAAEC,sBAAUC,IAAV,CAAeC,UADR;AAEjBT,EAAAA,WAAW,EAAEO,sBAAUC,IAAV,CAAeC,UAFX;AAGjBjB,EAAAA,aAAa,EAAEe,sBAAUG,MAAV,CAAiBD,UAHf;AAIjBhB,EAAAA,WAAW,EAAEc,sBAAUG,MAAV,CAAiBD,UAJb;AAKjBE,EAAAA,IAAI,EAAEJ,sBAAUK,IAAV,CAAeH;AALJ,C;;AAiDrB,SAASI,UAAT,CACEC,CADF,QAGE;AAAA,MADEC,KACF,QADEA,KACF;AAAA,wBADSA,KACT;AAAA,MADkBC,MAClB,cADkBA,MAClB;AAAA,MAD0BC,iBAC1B,cAD0BA,iBAC1B;AAAA,MADkD3B,KAClD;;AACA,SAAO;AACLgB,IAAAA,QAAQ,EAAEhB,KAAK,CAAC4B,cAAN,GACN5B,KAAK,CAAC4B,cAAN,CAAqBH,KAArB,CADM,GAEN,gCAAeA,KAAf,CAHC;AAILvB,IAAAA,aAAa,EAAEwB,MAAM,CAACxB,aAJjB;AAKLQ,IAAAA,WAAW,EAAE,CAACgB,MAAM,CAACG,KALhB;AAML1B,IAAAA,WAAW,EAAEwB,iBAAiB,CAACxB;AAN1B,GAAP;AAQD;;AAED,SAAS2B,cAAT,CAAwBN,CAAxB,SAA6D;AAAA,MAAvBG,iBAAuB,SAAhCF,KAAgC,CAAvBE,iBAAuB;AAC3D,SAAO;AACLN,IAAAA,IADK,gBACAjB,IADA,EACM;AACTuB,MAAAA,iBAAiB,CAACI,IAAlB,CAAuB3B,IAAvB;AACD;AAHI,GAAP;AAKD;;AAED,IAAM4B,0BAA0B,GAAG,2BACjC,yBAAQT,UAAR,EAAoBO,cAApB,EAAoC/B,cAApC,CADiC,CAAnC","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport withPhone from '../../lib/withPhone';\nimport hasActiveCalls from '../../lib/hasActiveCalls';\nimport TabContentPanel from '../../components/TabContentPanel';\nimport { SpinnerOverlay } from '../../components/SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nclass TabContentView extends Component {\n  static propTypes = {\n    showTabs: PropTypes.bool.isRequired,\n    showSpinner: PropTypes.bool.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    currentPath: PropTypes.string.isRequired,\n    goTo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.getTabs = createSelector(\n      () => this.props.currentLocale,\n      () => this.props.currentPath,\n      (currentLocale, currentPath) => [\n        {\n          path: '/dialer',\n          label: i18n.getString('dialer', currentLocale),\n          dataSign: 'dialer',\n          isActive() {\n            return currentPath === '/dialer';\n          },\n        },\n        {\n          path: '/calls',\n          label: i18n.getString('allCalls', currentLocale),\n          dataSign: 'allCalls',\n          isActive() {\n            return currentPath === '/calls';\n          },\n        },\n      ],\n    );\n  }\n\n  render() {\n    if (this.props.showSpinner) {\n      return <SpinnerOverlay />;\n    }\n    return (\n      <TabContentPanel\n        {...this.props}\n        tabs={this.getTabs()}\n        navClassName={styles.nav}\n        tabContentClassName={styles.content}\n      />\n    );\n  }\n}\n\nfunction mapToProps(\n  _,\n  { phone, phone: { locale, routerInteraction }, ...props },\n) {\n  return {\n    showTabs: props.hasActiveCalls\n      ? props.hasActiveCalls(phone)\n      : hasActiveCalls(phone),\n    currentLocale: locale.currentLocale,\n    showSpinner: !locale.ready,\n    currentPath: routerInteraction.currentPath,\n  };\n}\n\nfunction mapToFunctions(_, { phone: { routerInteraction } }) {\n  return {\n    goTo(path) {\n      routerInteraction.push(path);\n    },\n  };\n}\n\nconst DialerAndCallsTabContainer = withPhone(\n  connect(mapToProps, mapToFunctions)(TabContentView),\n);\n\nexport { mapToProps, mapToFunctions, DialerAndCallsTabContainer as default };\n"],"file":"index.js"}