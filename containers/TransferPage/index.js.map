{"version":3,"sources":["containers/TransferPage/index.js"],"names":["mapToProps","_","phone","locale","activeCallControl","webphone","contactSearch","params","sessionId","type","session","activeSession","sessions","find","id","currentLocale","searchContactList","sortedResult","controlBusy","busy","mapToFunctions","regionSettings","routerInteraction","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","phoneTypeRenderer","setActiveSessionId","onTransfer","transferNumber","transfer","onBack","goBack","onCallEnd","replace","formatPhone","phoneNumber","areaCode","countryCode","searchContact","searchString","debouncedSearch","TransferPage","TransferPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport TransferPanel from '../../components/TransferPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(\n  _,\n  {\n    phone: { locale, activeCallControl, webphone, contactSearch },\n    params: { sessionId, type = 'active' },\n  },\n) {\n  let session = null;\n  if (type === 'active' && activeCallControl) {\n    session = activeCallControl.activeSession;\n  } else if (type === 'webphone' && webphone) {\n    session = webphone.sessions.find((session) => session.id === sessionId);\n  }\n\n  return {\n    sessionId,\n    currentLocale: locale.currentLocale,\n    searchContactList: contactSearch && contactSearch.sortedResult,\n    session,\n    controlBusy: (activeCallControl && activeCallControl.busy) || false,\n  };\n}\n\nfunction mapToFunctions(\n  _,\n  {\n    phone: {\n      regionSettings,\n      routerInteraction,\n      activeCallControl,\n      webphone,\n      contactSearch,\n    },\n    params: { type = 'active' },\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n    phoneTypeRenderer,\n  },\n) {\n  return {\n    setActiveSessionId(sessionId) {\n      if (type === 'active' && activeCallControl) {\n        activeCallControl.setActiveSessionId(sessionId);\n      }\n    },\n    onTransfer(transferNumber, sessionId) {\n      if (type === 'active' && activeCallControl) {\n        activeCallControl.transfer(transferNumber, sessionId);\n      } else if (type === 'webphone' && webphone) {\n        webphone.transfer(transferNumber, sessionId);\n      }\n    },\n    onBack() {\n      routerInteraction.goBack();\n    },\n    onCallEnd() {\n      if (type === 'active') {\n        routerInteraction.replace('/calls');\n      } else {\n        routerInteraction.replace('/dialer');\n      }\n    },\n    formatPhone: (phoneNumber) =>\n      formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n    searchContact(searchString) {\n      if (contactSearch) {\n        contactSearch.debouncedSearch({ searchString });\n      }\n    },\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nconst TransferPage = withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(TransferPanel),\n);\n\nexport { mapToProps, mapToFunctions, TransferPage as default };\n"],"file":"index.js"}