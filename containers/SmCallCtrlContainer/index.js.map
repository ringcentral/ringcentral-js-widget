{"version":3,"sources":["containers/SmCallCtrlContainer/index.js"],"names":["mapToProps","_","phone","sessionId","activeCallControl","telephonySessionId","sessionIdToTelephonySessionIdMapping","currentSession","getActiveSession","mapToFunctions","mute","bind","unmute","hangUp","reject","SmCallCtrlContainer","props","currentLocale","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","callDirection","direction","Component","propTypes","PropTypes","string","object","activeSessions","status","func","isRequired","any","defaultProps","undefined"],"mappings":"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","sourcesContent":["/**\n * @file small call contrl\n * detail: https://jira.ringcentral.com/browse/RCINT-8248\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport SmCallContrl from '../../components/SmCallControl';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, { phone, sessionId }) {\n  const { activeCallControl } = phone;\n  const telephonySessionId =\n    activeCallControl.sessionIdToTelephonySessionIdMapping[sessionId];\n  const currentSession = activeCallControl.getActiveSession(telephonySessionId);\n  return {\n    activeCallControl,\n    currentSession,\n    telephonySessionId,\n  };\n}\n\nfunction mapToFunctions(_, { phone }) {\n  const { activeCallControl } = phone;\n  return {\n    mute: activeCallControl.mute.bind(activeCallControl),\n    unmute: activeCallControl.unmute.bind(activeCallControl),\n    hangUp: activeCallControl.hangUp.bind(activeCallControl),\n    reject: activeCallControl.reject.bind(activeCallControl),\n  };\n}\n\n/* eslint-disable react/prefer-stateless-function */\nclass SmCallCtrlContainer extends Component {\n  render() {\n    const { currentLocale, telephonySessionId, currentSession } = this.props;\n    if (!currentSession) {\n      return null;\n    }\n    const props = {\n      onMute: async () => this.props.mute(telephonySessionId),\n      onUnmute: async () => this.props.unmute(telephonySessionId),\n      onHangup: async () => this.props.hangUp(telephonySessionId),\n      onReject: async () => this.props.reject(telephonySessionId),\n      isOnMute: currentSession.isOnMute,\n      callStatus: currentSession.callStatus,\n      callDirection: currentSession.direction,\n      currentLocale,\n    };\n    return <SmCallContrl {...props} />;\n  }\n}\nSmCallCtrlContainer.propTypes = {\n  currentLocale: PropTypes.string,\n  activeCallControl: PropTypes.object,\n  activeSessions: PropTypes.object,\n  telephonySessionId: PropTypes.string,\n  status: PropTypes.string,\n  mute: PropTypes.func.isRequired,\n  unmute: PropTypes.func.isRequired,\n  hangUp: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  currentSession: PropTypes.any,\n};\n\nSmCallCtrlContainer.defaultProps = {\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  activeSessions: {},\n  telephonySessionId: '',\n  status: '',\n  currentSession: undefined,\n};\nexport default withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(SmCallCtrlContainer),\n);\n"],"file":"index.js"}