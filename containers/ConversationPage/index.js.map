{"version":3,"sources":["containers/ConversationPage/index.js"],"names":["mapToProps","_","phone","brand","locale","conversationLogger","dateTimeFormat","contactMatcher","regionSettings","conversations","rateLimiter","connectivityMonitor","params","enableContactFallback","showGroupNumberName","perPage","inputExpandable","disableLinks","isThrottling","connectivity","showSpinner","ready","currentConversation","fullName","currentLocale","conversationId","sendButtonDisabled","pushing","messageText","length","areaCode","countryCode","recipients","messages","conversation","autoLog","loadingNextPage","loadingOldMessages","mapToFunctions","routerInteraction","messageStore","dateTimeFormatter","formatDateTime","isLoggedContact","onLogConversation","conversationsPath","renderExtraButton","getMatcherContactName","getMatcherContactList","getMatcherContactNameList","phoneNumber","matcherNames","dataMapping","map","matcher","name","phoneNumbers","phoneType","join","replyToReceivers","unloadConversation","loadConversation","id","updateMessageText","text","formatPhone","redirect","options","logConversation","goBack","push","readMessages","loadPreviousMessages","fetchOldMessages","ConversationPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport ConversationPanel from '../../components/ConversationPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nexport function mapToProps(\n  _,\n  {\n    phone: {\n      brand,\n      locale,\n      conversationLogger,\n      dateTimeFormat,\n      contactMatcher,\n      regionSettings,\n      conversations,\n      rateLimiter,\n      connectivityMonitor,\n    },\n    params,\n    enableContactFallback = false,\n    showGroupNumberName = false,\n    perPage = 20,\n    inputExpandable,\n  },\n) {\n  const disableLinks =\n    rateLimiter.isThrottling || !connectivityMonitor.connectivity;\n  const showSpinner = !(\n    dateTimeFormat.ready &&\n    (!contactMatcher || contactMatcher.ready) &&\n    regionSettings.ready &&\n    conversations.ready &&\n    rateLimiter.ready &&\n    connectivityMonitor.ready &&\n    (!conversationLogger || conversationLogger.ready)\n  );\n  const currentConversation = conversations.currentConversation;\n  return {\n    brand: brand.fullName,\n    enableContactFallback,\n    showGroupNumberName,\n    currentLocale: locale.currentLocale,\n    conversationId: params.conversationId,\n    sendButtonDisabled:\n      conversations.pushing ||\n      disableLinks ||\n      conversations.messageText.length === 0 ||\n      showSpinner,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    showSpinner,\n    recipients: currentConversation.recipients,\n    messages: currentConversation.messages,\n    messageText: conversations.messageText,\n    conversation: currentConversation,\n    disableLinks,\n    autoLog: !!(conversationLogger && conversationLogger.autoLog),\n    perPage,\n    loadingNextPage: conversations.loadingOldMessages,\n    inputExpandable,\n  };\n}\n\nexport function mapToFunctions(\n  _,\n  {\n    phone: {\n      contactMatcher,\n      dateTimeFormat,\n      routerInteraction,\n      conversationLogger,\n      regionSettings,\n      conversations,\n      messageStore,\n    },\n    dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n    isLoggedContact,\n    onLogConversation,\n    conversationsPath = '/messages',\n    renderExtraButton,\n  },\n) {\n  let getMatcherContactName;\n  let getMatcherContactList;\n  let getMatcherContactNameList;\n  if (contactMatcher && contactMatcher.ready) {\n    getMatcherContactList = (phoneNumber) => {\n      const matcherNames = contactMatcher.dataMapping[phoneNumber];\n      if (matcherNames && matcherNames.length > 0) {\n        return matcherNames.map(\n          (matcher) => `${matcher.name} | ${matcher.phoneNumbers[0].phoneType}`,\n        );\n      }\n      return [];\n    };\n    getMatcherContactNameList = (phoneNumber) => {\n      const matcherNames = contactMatcher.dataMapping[phoneNumber];\n      if (matcherNames && matcherNames.length > 0) {\n        return matcherNames.map((matcher) => matcher.name);\n      }\n      return [];\n    };\n    getMatcherContactName = (phoneNumber) => {\n      const matcherNames = getMatcherContactNameList(phoneNumber);\n      if (matcherNames && matcherNames.length > 0) {\n        return matcherNames.join('&');\n      }\n      return null;\n    };\n  }\n\n  return {\n    replyToReceivers: (...args) => conversations.replyToReceivers(...args),\n    unloadConversation: () => conversations.unloadConversation(),\n    loadConversation: (id) => conversations.loadConversation(id),\n    updateMessageText: (text) => conversations.updateMessageText(text),\n    dateTimeFormatter,\n    formatPhone: (phoneNumber) =>\n      formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n    getMatcherContactName,\n    getMatcherContactList,\n    getMatcherContactNameList,\n    isLoggedContact,\n    onLogConversation:\n      onLogConversation ||\n      (conversationLogger &&\n        (async ({ redirect = true, ...options }) => {\n          await conversationLogger.logConversation({\n            ...options,\n            redirect,\n          });\n        })),\n    goBack() {\n      routerInteraction.push(conversationsPath);\n    },\n    readMessages(id) {\n      messageStore.readMessages(id);\n    },\n    loadPreviousMessages() {\n      conversations.fetchOldMessages();\n    },\n    renderExtraButton,\n  };\n}\n\nexport default withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(ConversationPanel),\n);\n"],"file":"index.js"}