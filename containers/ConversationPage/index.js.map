{"version":3,"sources":["containers/ConversationPage/index.js"],"names":["mapToProps","_","phone","brand","locale","conversationLogger","dateTimeFormat","contactMatcher","regionSettings","conversations","rateLimiter","connectivityMonitor","params","enableContactFallback","showGroupNumberName","supportAttachment","perPage","inputExpandable","disableLinks","isThrottling","connectivity","showSpinner","ready","currentConversation","hasInputContent","messageText","length","attachments","fullName","currentLocale","conversationId","sendButtonDisabled","pushing","areaCode","countryCode","recipients","messages","conversation","autoLog","loadingNextPage","loadingOldMessages","mapToFunctions","routerInteraction","messageStore","dateTimeFormatter","formatDateTime","isLoggedContact","onLogConversation","conversationsPath","renderExtraButton","getMatcherContactName","getMatcherContactList","getMatcherContactNameList","phoneNumber","matcherNames","dataMapping","map","matcher","name","phoneNumbers","phoneType","join","replyToReceivers","unloadConversation","loadConversation","id","updateMessageText","text","addAttachment","attachment","removeAttachment","formatPhone","redirect","options","logConversation","goBack","push","readMessages","loadPreviousMessages","fetchOldMessages","ConversationPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport ConversationPanel from '../../components/ConversationPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nexport function mapToProps(\n  _,\n  {\n    phone: {\n      brand,\n      locale,\n      conversationLogger,\n      dateTimeFormat,\n      contactMatcher,\n      regionSettings,\n      conversations,\n      rateLimiter,\n      connectivityMonitor,\n    },\n    params,\n    enableContactFallback = false,\n    showGroupNumberName = false,\n    supportAttachment = false,\n    perPage = 20,\n    inputExpandable,\n  },\n) {\n  const disableLinks =\n    rateLimiter.isThrottling || !connectivityMonitor.connectivity;\n  const showSpinner = !(\n    dateTimeFormat.ready &&\n    (!contactMatcher || contactMatcher.ready) &&\n    regionSettings.ready &&\n    conversations.ready &&\n    rateLimiter.ready &&\n    connectivityMonitor.ready &&\n    (!conversationLogger || conversationLogger.ready)\n  );\n  const currentConversation = conversations.currentConversation;\n  const hasInputContent =\n    conversations.messageText.length > 0 ||\n    (conversations.attachments && conversations.attachments.length > 0);\n  return {\n    brand: brand.fullName,\n    enableContactFallback,\n    showGroupNumberName,\n    supportAttachment,\n    currentLocale: locale.currentLocale,\n    conversationId: params.conversationId,\n    sendButtonDisabled:\n      conversations.pushing || disableLinks || !hasInputContent || showSpinner,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    showSpinner,\n    recipients: currentConversation.recipients,\n    messages: currentConversation.messages,\n    messageText: conversations.messageText,\n    attachments: conversations.attachments,\n    conversation: currentConversation,\n    disableLinks,\n    autoLog: !!(conversationLogger && conversationLogger.autoLog),\n    perPage,\n    loadingNextPage: conversations.loadingOldMessages,\n    inputExpandable,\n  };\n}\n\nexport function mapToFunctions(\n  _,\n  {\n    phone: {\n      contactMatcher,\n      dateTimeFormat,\n      routerInteraction,\n      conversationLogger,\n      regionSettings,\n      conversations,\n      messageStore,\n    },\n    dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n    isLoggedContact,\n    onLogConversation,\n    conversationsPath = '/messages',\n    renderExtraButton,\n  },\n) {\n  let getMatcherContactName;\n  let getMatcherContactList;\n  let getMatcherContactNameList;\n  if (contactMatcher && contactMatcher.ready) {\n    getMatcherContactList = (phoneNumber) => {\n      const matcherNames = contactMatcher.dataMapping[phoneNumber];\n      if (matcherNames && matcherNames.length > 0) {\n        return matcherNames.map(\n          (matcher) => `${matcher.name} | ${matcher.phoneNumbers[0].phoneType}`,\n        );\n      }\n      return [];\n    };\n    getMatcherContactNameList = (phoneNumber) => {\n      const matcherNames = contactMatcher.dataMapping[phoneNumber];\n      if (matcherNames && matcherNames.length > 0) {\n        return matcherNames.map((matcher) => matcher.name);\n      }\n      return [];\n    };\n    getMatcherContactName = (phoneNumber) => {\n      const matcherNames = getMatcherContactNameList(phoneNumber);\n      if (matcherNames && matcherNames.length > 0) {\n        return matcherNames.join('&');\n      }\n      return null;\n    };\n  }\n\n  return {\n    replyToReceivers: (...args) => conversations.replyToReceivers(...args),\n    unloadConversation: () => conversations.unloadConversation(),\n    loadConversation: (id) => conversations.loadConversation(id),\n    updateMessageText: (text) => conversations.updateMessageText(text),\n    addAttachment: (attachment) => conversations.addAttachment(attachment),\n    removeAttachment: (attachment) => conversations.removeAttachment(attachment),\n    dateTimeFormatter,\n    formatPhone: (phoneNumber) =>\n      formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n    getMatcherContactName,\n    getMatcherContactList,\n    getMatcherContactNameList,\n    isLoggedContact,\n    onLogConversation:\n      onLogConversation ||\n      (conversationLogger &&\n        (async ({ redirect = true, ...options }) => {\n          await conversationLogger.logConversation({\n            ...options,\n            redirect,\n          });\n        })),\n    goBack() {\n      routerInteraction.push(conversationsPath);\n    },\n    readMessages(id) {\n      messageStore.readMessages(id);\n    },\n    loadPreviousMessages() {\n      conversations.fetchOldMessages();\n    },\n    renderExtraButton,\n  };\n}\n\nexport default withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(ConversationPanel),\n);\n"],"file":"index.js"}