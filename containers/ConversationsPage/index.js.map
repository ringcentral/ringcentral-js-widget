{"version":3,"sources":["containers/ConversationsPage/index.js"],"names":["mapToProps","_","phone","brand","locale","conversations","contactMatcher","dateTimeFormat","regionSettings","rolesAndPermissions","call","conversationLogger","connectivityMonitor","rateLimiter","messageStore","connectivityManager","showTitle","enableContactFallback","showGroupNumberName","serviceFeatures","permissions","readTextPermissions","voicemailPermissions","readFaxPermissions","fullName","currentLocale","pagingConversations","areaCode","countryCode","disableLinks","isOfflineMode","isVoipOnlyMode","throttling","disableCallButton","isWebphoneUnavailableMode","isWebphoneInitializing","disableClickToDial","isIdle","outboundSmsPermission","OutboundSMS","internalSmsPermission","InternalSMS","composeTextPermission","Pager","enabled","SMS","loggingMap","showSpinner","ready","searchInput","autoLog","typeFilter","textUnreadCounts","voiceUnreadCounts","faxUnreadCounts","readTextPermission","readVoicemailPermission","readFaxPermission","loadingNextPage","loadingOldConversations","mapToFunctions","dialerUI","routerInteraction","composeText","contactSearch","showViewContact","dateTimeFormatter","formatDateTime","dialerRoute","onCreateContact","onLogConversation","isLoggedContact","onViewContact","conversationDetailRoute","composeTextRoute","previewFaxMessages","renderExtraButton","onFaxDownload","contact","id","type","push","phoneNumber","name","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","undefined","onClickToDial","callingEnabled","recipient","onClickToCall","fromType","onClickToSms","hasComposeTextPermission","isDummyContact","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","onClickToSMS","redirect","options","logConversation","onSearchInputChange","e","updateSearchInput","currentTarget","value","showConversationDetail","conversationId","replace","readMessage","readMessages","markMessage","unreadMessage","unmarkMessage","onUnmarkMessages","goToComposeText","updateTypeFilter","deleteMessage","deleteCoversation","uri","window","open","loadNextPage","onUnmount","currentPage","resetCurrentPage","MessagesPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport MessagesPanel from '../../components/ConversationsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nexport function mapToProps(\n  _,\n  {\n    phone: {\n      brand,\n      locale,\n      conversations,\n      contactMatcher,\n      dateTimeFormat,\n      regionSettings,\n      rolesAndPermissions,\n      call,\n      conversationLogger,\n      connectivityMonitor,\n      rateLimiter,\n      messageStore,\n      connectivityManager,\n    },\n    showTitle = false,\n    enableContactFallback = false,\n    showGroupNumberName = false,\n  },\n) {\n  const {\n    serviceFeatures,\n    permissions,\n    readTextPermissions,\n    voicemailPermissions,\n    readFaxPermissions,\n  } = rolesAndPermissions;\n  return {\n    showTitle,\n    enableContactFallback,\n    showGroupNumberName,\n    brand: brand.fullName,\n    currentLocale: locale.currentLocale,\n    conversations: conversations.pagingConversations,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isVoipOnlyMode ||\n      rateLimiter.throttling,\n    disableCallButton:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isWebphoneUnavailableMode ||\n      connectivityManager.isWebphoneInitializing ||\n      rateLimiter.throttling,\n    disableClickToDial: !(call && call.isIdle),\n    outboundSmsPermission: !!(permissions && permissions.OutboundSMS),\n    internalSmsPermission: !!(permissions && permissions.InternalSMS),\n    composeTextPermission: !!(\n      serviceFeatures &&\n      ((serviceFeatures.Pager && serviceFeatures.Pager.enabled) ||\n        (serviceFeatures.SMS && serviceFeatures.SMS.enabled))\n    ),\n    loggingMap: conversationLogger && conversationLogger.loggingMap,\n    showSpinner: !(\n      locale.ready &&\n      conversations.ready &&\n      (!contactMatcher || contactMatcher.ready) &&\n      dateTimeFormat.ready &&\n      regionSettings.ready &&\n      rolesAndPermissions.ready &&\n      connectivityMonitor.ready &&\n      rateLimiter.ready &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!call || call.ready) &&\n      (!conversationLogger || conversationLogger.ready)\n    ),\n    searchInput: conversations.searchInput,\n    autoLog: !!(conversationLogger && conversationLogger.autoLog),\n    typeFilter: conversations.typeFilter,\n    textUnreadCounts: messageStore.textUnreadCounts,\n    voiceUnreadCounts: messageStore.voiceUnreadCounts,\n    faxUnreadCounts: messageStore.faxUnreadCounts,\n    readTextPermission: readTextPermissions,\n    readVoicemailPermission: voicemailPermissions,\n    readFaxPermission: readFaxPermissions,\n    loadingNextPage: conversations.loadingOldConversations,\n  };\n}\n\nexport function mapToFunctions(\n  _,\n  {\n    phone: {\n      dateTimeFormat,\n      conversations,\n      messageStore,\n      conversationLogger,\n      contactMatcher,\n      call,\n      dialerUI,\n      routerInteraction,\n      composeText,\n      contactSearch,\n      rolesAndPermissions,\n    },\n    showViewContact = true,\n    dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n    dialerRoute = '/dialer',\n    onCreateContact,\n    onLogConversation,\n    isLoggedContact,\n    onViewContact,\n    conversationDetailRoute = '/conversations/{conversationId}',\n    composeTextRoute = '/composeText',\n    previewFaxMessages,\n    renderExtraButton,\n    onFaxDownload,\n  },\n) {\n  return {\n    dateTimeFormatter,\n    onViewContact: showViewContact\n      ? onViewContact ||\n        (({ contact: { id, type } }) => {\n          routerInteraction.push(`/contacts/${type}/${id}?direct=true`);\n        })\n      : null,\n    onCreateContact: onCreateContact\n      ? async ({ phoneNumber, name, entityType }) => {\n          const hasMatchNumber = await contactMatcher.hasMatchNumber({\n            phoneNumber,\n            ignoreCache: true,\n          });\n          // console.debug('confirm hasMatchNumber:', hasMatchNumber);\n          if (!hasMatchNumber) {\n            await onCreateContact({ phoneNumber, name, entityType });\n            await contactMatcher.forceMatchNumber({ phoneNumber });\n          }\n        }\n      : undefined,\n    onClickToDial:\n      dialerUI && rolesAndPermissions.callingEnabled\n        ? (recipient) => {\n            if (call.isIdle) {\n              routerInteraction.push(dialerRoute);\n              // for track router\n              messageStore.onClickToCall({ fromType: recipient.fromType });\n              dialerUI.call({ recipient });\n            }\n          }\n        : undefined,\n    onClickToSms: rolesAndPermissions.hasComposeTextPermission\n      ? (contact, isDummyContact = false) => {\n          if (routerInteraction) {\n            routerInteraction.push(composeTextRoute);\n          }\n          // if contact autocomplete, if no match fill the number only\n          if (contact.name && contact.phoneNumber && isDummyContact) {\n            composeText.updateTypingToNumber(contact.name);\n            contactSearch.search({ searchString: contact.name });\n          } else {\n            composeText.addToNumber(contact);\n            if (composeText.typingToNumber === contact.phoneNumber) {\n              composeText.cleanTypingToNumber();\n            }\n          }\n          // for track\n          messageStore.onClickToSMS();\n        }\n      : undefined,\n    isLoggedContact,\n    onLogConversation:\n      onLogConversation ||\n      (conversationLogger &&\n        (async ({ redirect = true, ...options }) => {\n          await conversationLogger.logConversation({\n            ...options,\n            redirect,\n          });\n        })),\n    onSearchInputChange(e) {\n      conversations.updateSearchInput(e.currentTarget.value);\n    },\n    showConversationDetail(conversationId) {\n      routerInteraction.push(\n        conversationDetailRoute.replace('{conversationId}', conversationId),\n      );\n    },\n    readMessage(conversationId) {\n      messageStore.readMessages(conversationId);\n    },\n    markMessage(conversationId) {\n      messageStore.unreadMessage(conversationId);\n    },\n    unmarkMessage(conversationId) {\n      messageStore.readMessages(conversationId);\n      messageStore.onUnmarkMessages();\n    },\n    goToComposeText: () => routerInteraction.push(composeTextRoute),\n    updateTypeFilter: (type) => conversations.updateTypeFilter(type),\n    deleteMessage(conversationId) {\n      conversations.deleteCoversation(conversationId);\n    },\n    previewFaxMessages(uri, conversationId) {\n      if (!previewFaxMessages) {\n        window.open(uri);\n      } else {\n        previewFaxMessages(uri);\n      }\n      messageStore.readMessages(conversationId);\n    },\n    async loadNextPage() {\n      await conversations.loadNextPage();\n    },\n    onUnmount() {\n      if (conversations.currentPage > 2) {\n        conversations.resetCurrentPage();\n      }\n    },\n    renderExtraButton,\n    onFaxDownload,\n  };\n}\nexport default withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(MessagesPanel),\n);\n"],"file":"index.js"}