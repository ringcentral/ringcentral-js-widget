{"version":3,"sources":["containers/ConversationsPage/index.js"],"names":["mapToProps","_","phone","brand","locale","conversations","contactMatcher","dateTimeFormat","regionSettings","rolesAndPermissions","call","conversationLogger","connectivityMonitor","rateLimiter","messageStore","connectivityManager","showTitle","enableContactFallback","showGroupNumberName","serviceFeatures","permissions","readTextPermissions","voicemailPermissions","readFaxPermissions","fullName","currentLocale","pagingConversations","areaCode","countryCode","disableLinks","isOfflineMode","isVoipOnlyMode","throttling","disableCallButton","isWebphoneUnavailableMode","isWebphoneInitializing","disableClickToDial","isIdle","outboundSmsPermission","OutboundSMS","internalSmsPermission","InternalSMS","composeTextPermission","Pager","enabled","SMS","loggingMap","showSpinner","ready","searchInput","autoLog","typeFilter","textUnreadCounts","voiceUnreadCounts","faxUnreadCounts","readTextPermission","readVoicemailPermission","readFaxPermission","loadingNextPage","loadingOldConversations","mapToFunctions","dialerUI","routerInteraction","contactDetailsUI","composeText","contactSearch","showViewContact","dateTimeFormatter","formatDateTime","dialerRoute","onCreateContact","onLogConversation","isLoggedContact","onViewContact","conversationDetailRoute","composeTextRoute","previewFaxMessages","renderExtraButton","onFaxDownload","contact","id","type","showContactDetails","direct","phoneNumber","name","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","undefined","onClickToDial","callingEnabled","recipient","push","onClickToCall","fromType","onClickToSms","hasComposeTextPermission","isDummyContact","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","onClickToSMS","redirect","options","logConversation","onSearchInputChange","e","updateSearchInput","currentTarget","value","showConversationDetail","conversationId","replace","readMessage","readMessages","markMessage","unreadMessage","unmarkMessage","onUnmarkMessages","goToComposeText","updateTypeFilter","deleteMessage","deleteConversation","uri","window","open","loadNextPage","onUnmount","currentPage","resetCurrentPage","MessagesPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport MessagesPanel from '../../components/ConversationsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nexport function mapToProps(\n  _,\n  {\n    phone: {\n      brand,\n      locale,\n      conversations,\n      contactMatcher,\n      dateTimeFormat,\n      regionSettings,\n      rolesAndPermissions,\n      call,\n      conversationLogger,\n      connectivityMonitor,\n      rateLimiter,\n      messageStore,\n      connectivityManager,\n    },\n    showTitle = false,\n    enableContactFallback = false,\n    showGroupNumberName = false,\n  },\n) {\n  const {\n    serviceFeatures,\n    permissions,\n    readTextPermissions,\n    voicemailPermissions,\n    readFaxPermissions,\n  } = rolesAndPermissions;\n  return {\n    showTitle,\n    enableContactFallback,\n    showGroupNumberName,\n    brand: brand.fullName,\n    currentLocale: locale.currentLocale,\n    conversations: conversations.pagingConversations,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isVoipOnlyMode ||\n      rateLimiter.throttling,\n    disableCallButton:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isWebphoneUnavailableMode ||\n      connectivityManager.isWebphoneInitializing ||\n      rateLimiter.throttling,\n    disableClickToDial: !(call && call.isIdle),\n    outboundSmsPermission: !!(permissions && permissions.OutboundSMS),\n    internalSmsPermission: !!(permissions && permissions.InternalSMS),\n    composeTextPermission: !!(\n      serviceFeatures &&\n      ((serviceFeatures.Pager && serviceFeatures.Pager.enabled) ||\n        (serviceFeatures.SMS && serviceFeatures.SMS.enabled))\n    ),\n    loggingMap: conversationLogger && conversationLogger.loggingMap,\n    showSpinner: !(\n      locale.ready &&\n      conversations.ready &&\n      (!contactMatcher || contactMatcher.ready) &&\n      dateTimeFormat.ready &&\n      regionSettings.ready &&\n      rolesAndPermissions.ready &&\n      connectivityMonitor.ready &&\n      rateLimiter.ready &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!call || call.ready) &&\n      (!conversationLogger || conversationLogger.ready)\n    ),\n    searchInput: conversations.searchInput,\n    autoLog: !!(conversationLogger && conversationLogger.autoLog),\n    typeFilter: conversations.typeFilter,\n    textUnreadCounts: messageStore.textUnreadCounts,\n    voiceUnreadCounts: messageStore.voiceUnreadCounts,\n    faxUnreadCounts: messageStore.faxUnreadCounts,\n    readTextPermission: readTextPermissions,\n    readVoicemailPermission: voicemailPermissions,\n    readFaxPermission: readFaxPermissions,\n    loadingNextPage: conversations.loadingOldConversations,\n  };\n}\n\nexport function mapToFunctions(\n  _,\n  {\n    phone: {\n      dateTimeFormat,\n      conversations,\n      messageStore,\n      conversationLogger,\n      contactMatcher,\n      call,\n      dialerUI,\n      routerInteraction,\n      contactDetailsUI,\n      composeText,\n      contactSearch,\n      rolesAndPermissions,\n    },\n    showViewContact = true,\n    dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n    dialerRoute = '/dialer',\n    onCreateContact,\n    onLogConversation,\n    isLoggedContact,\n    onViewContact,\n    conversationDetailRoute = '/conversations/{conversationId}',\n    composeTextRoute = '/composeText',\n    previewFaxMessages,\n    renderExtraButton,\n    onFaxDownload,\n  },\n) {\n  return {\n    dateTimeFormatter,\n    onViewContact: showViewContact\n      ? onViewContact ||\n        (({ contact: { id, type } }) => {\n          if (contactDetailsUI) {\n            contactDetailsUI.showContactDetails({ id, type, direct: true });\n          }\n        })\n      : null,\n    onCreateContact: onCreateContact\n      ? async ({ phoneNumber, name, entityType }) => {\n          const hasMatchNumber = await contactMatcher.hasMatchNumber({\n            phoneNumber,\n            ignoreCache: true,\n          });\n          // console.debug('confirm hasMatchNumber:', hasMatchNumber);\n          if (!hasMatchNumber) {\n            await onCreateContact({ phoneNumber, name, entityType });\n            await contactMatcher.forceMatchNumber({ phoneNumber });\n          }\n        }\n      : undefined,\n    onClickToDial:\n      dialerUI && rolesAndPermissions.callingEnabled\n        ? (recipient) => {\n            if (call.isIdle) {\n              routerInteraction.push(dialerRoute);\n              // for track router\n              messageStore.onClickToCall({ fromType: recipient.fromType });\n              dialerUI.call({ recipient });\n            }\n          }\n        : undefined,\n    onClickToSms: rolesAndPermissions.hasComposeTextPermission\n      ? (contact, isDummyContact = false) => {\n          if (routerInteraction) {\n            routerInteraction.push(composeTextRoute);\n          }\n          // if contact autocomplete, if no match fill the number only\n          if (contact.name && contact.phoneNumber && isDummyContact) {\n            composeText.updateTypingToNumber(contact.name);\n            contactSearch.search({ searchString: contact.name });\n          } else {\n            composeText.addToNumber(contact);\n            if (composeText.typingToNumber === contact.phoneNumber) {\n              composeText.cleanTypingToNumber();\n            }\n          }\n          // for track\n          messageStore.onClickToSMS();\n        }\n      : undefined,\n    isLoggedContact,\n    onLogConversation:\n      onLogConversation ||\n      (conversationLogger &&\n        (async ({ redirect = true, ...options }) => {\n          await conversationLogger.logConversation({\n            ...options,\n            redirect,\n          });\n        })),\n    onSearchInputChange(e) {\n      conversations.updateSearchInput(e.currentTarget.value);\n    },\n    showConversationDetail(conversationId) {\n      routerInteraction.push(\n        conversationDetailRoute.replace('{conversationId}', conversationId),\n      );\n    },\n    readMessage(conversationId) {\n      messageStore.readMessages(conversationId);\n    },\n    markMessage(conversationId) {\n      messageStore.unreadMessage(conversationId);\n    },\n    unmarkMessage(conversationId) {\n      messageStore.readMessages(conversationId);\n      messageStore.onUnmarkMessages();\n    },\n    goToComposeText: () => routerInteraction.push(composeTextRoute),\n    updateTypeFilter: (type) => conversations.updateTypeFilter(type),\n    deleteMessage(conversationId) {\n      conversations.deleteConversation(conversationId);\n    },\n    previewFaxMessages(uri, conversationId) {\n      if (!previewFaxMessages) {\n        window.open(uri);\n      } else {\n        previewFaxMessages(uri);\n      }\n      messageStore.readMessages(conversationId);\n    },\n    async loadNextPage() {\n      await conversations.loadNextPage();\n    },\n    onUnmount() {\n      if (conversations.currentPage > 2) {\n        conversations.resetCurrentPage();\n      }\n    },\n    renderExtraButton,\n    onFaxDownload,\n  };\n}\nexport default withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(MessagesPanel),\n);\n"],"file":"index.js"}