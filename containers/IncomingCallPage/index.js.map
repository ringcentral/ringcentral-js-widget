{"version":3,"sources":["containers/IncomingCallPage/index.js"],"names":["IncomingCallPage","props","answer","session","id","reject","toVoiceMail","replyWithMessage","message","toggleMinimized","answerAndEnd","hangup","activeSessionId","answerAndHold","onHold","onForward","forwardNumber","state","selectedMatcherIndex","avatarUrl","hasOtherActiveCall","onSelectMatcherName","option","nameMatches","findIndex","match","setState","contact","updateSessionMatchedContact","getAvatarUrl","then","_mounted","_updateAvatarAndMatchIndex","nextProps","contactMatch","active","minimized","phoneNumber","direction","callDirections","outbound","to","from","fallbackUserName","inbound","i18n","getString","currentLocale","formatPhone","areaCode","countryCode","forwardingNumbers","brand","showContactDisplayPlaceholder","sourceIcons","searchContact","searchContactList","phoneTypeRenderer","phoneSourceNameRenderer","children","Component","propTypes","PropTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","phone","webphone","locale","contactMatcher","contactSearch","regionSettings","forwardingNumber","currentSession","ringingCallOnView","contactMapping","dataMapping","fromMatches","toMatches","fullName","sortedResult","mapToFunctions","conferenceCall","sessionId","closeMergingPair","forward","hold","pattern","debouncedSearch","searchString","IncomingCallContainer"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport IncomingCallPanel from '../../components/IncomingCallPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nimport i18n from './i18n';\n\nclass IncomingCallPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      hasOtherActiveCall: false,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        (match) => match.id === option.id,\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n  }\n\n  answer = () => this.props.answer(this.props.session.id);\n  reject = () => this.props.reject(this.props.session.id);\n  toVoiceMail = () => this.props.toVoiceMail(this.props.session.id);\n  replyWithMessage = (message) =>\n    this.props.replyWithMessage(this.props.session.id, message);\n  toggleMinimized = () => this.props.toggleMinimized(this.props.session.id);\n  answerAndEnd = async () => {\n    await this.props.hangup(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n  answerAndHold = async () => {\n    await this.props.onHold(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n  onForward = (forwardNumber) =>\n    this.props.onForward(this.props.session.id, forwardNumber);\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n    this.setState({\n      hasOtherActiveCall: !!nextProps.activeSessionId,\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let selectedMatcherIndex = 0;\n    let contact = props.session.contactMatch;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(\n        (match) => match.id === contact.id,\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    if (session.minimized) {\n      return null;\n    }\n    const phoneNumber =\n      session.direction === callDirections.outbound ? session.to : session.from;\n    let fallbackUserName;\n    if (\n      session.direction === callDirections.inbound &&\n      session.from === 'anonymous'\n    ) {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    return (\n      <IncomingCallPanel\n        currentLocale={this.props.currentLocale}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        phoneNumber={phoneNumber}\n        answer={this.answer}\n        reject={this.reject}\n        replyWithMessage={this.replyWithMessage}\n        toVoiceMail={this.toVoiceMail}\n        formatPhone={this.props.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        onBackButtonClick={this.toggleMinimized}\n        forwardingNumbers={this.props.forwardingNumbers}\n        onForward={this.onForward}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        hasOtherActiveCall={this.state.hasOtherActiveCall}\n        answerAndEnd={this.answerAndEnd}\n        answerAndHold={this.answerAndHold}\n        sessionId={this.props.session.id}\n        sourceIcons={this.props.sourceIcons}\n        searchContact={this.props.searchContact}\n        searchContactList={this.props.searchContactList}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n      >\n        {this.props.children}\n      </IncomingCallPanel>\n    );\n  }\n}\n\nIncomingCallPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  onForward: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  brand: PropTypes.string.isRequired,\n  activeSessionId: PropTypes.string,\n  sourceIcons: PropTypes.object,\n  hangup: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nIncomingCallPage.defaultProps = {\n  children: undefined,\n  activeSessionId: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n};\n\nfunction mapToProps(\n  _,\n  {\n    phone: {\n      webphone,\n      locale,\n      contactMatcher,\n      contactSearch,\n      regionSettings,\n      forwardingNumber,\n      brand,\n    },\n    showContactDisplayPlaceholder = false,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n  },\n) {\n  const currentSession = webphone.ringingCallOnView || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches =\n    (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound\n      ? toMatches\n      : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    activeSessionId: webphone.activeSessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    forwardingNumbers: forwardingNumber.forwardingNumbers,\n    showContactDisplayPlaceholder,\n    searchContactList: contactSearch.sortedResult,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n  };\n}\n\nfunction mapToFunctions(\n  _,\n  {\n    phone: { webphone, regionSettings, contactSearch, conferenceCall },\n    getAvatarUrl = () => null,\n  },\n) {\n  return {\n    formatPhone: (phoneNumber) =>\n      formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n    answer(sessionId) {\n      if (conferenceCall) {\n        conferenceCall.closeMergingPair();\n      }\n      webphone.answer(sessionId);\n    },\n    reject: (sessionId) => webphone.reject(sessionId),\n    toVoiceMail: (sessionId) => webphone.toVoiceMail(sessionId),\n    onForward: (sessionId, forwardNumber) =>\n      webphone.forward(sessionId, forwardNumber),\n    replyWithMessage: (sessionId, message) =>\n      webphone.replyWithMessage(sessionId, message),\n    toggleMinimized: (sessionId) => webphone.toggleMinimized(sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n    hangup: (sessionId) => webphone.hangup(sessionId),\n    onHold: (sessionId) => webphone.hold(sessionId),\n    searchContact: (pattern) =>\n      contactSearch.debouncedSearch({ searchString: pattern }),\n  };\n}\n\nconst IncomingCallContainer = withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(IncomingCallPage),\n);\n\nexport default IncomingCallContainer;\n"],"file":"index.js"}