{"version":3,"sources":["containers/GlipGroups/index.js"],"names":["mapToProps","_","phone","glipGroups","contacts","hiddenCurrentGroup","groups","groupsWithUnread","currentGroupId","searchFilter","currentPage","pageNumber","filteredContacts","contactSearchFilter","mapToFunctions","onSelectGroup","updateSearchFilter","updateFilter","onNextPage","updateContactSearchFilter","createTeam","teamName","selectedContacts","map","sc","email","groupId","GlipGroupsPage","GlipGroupsPanel"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;AAEA,SAASA,UAAT,CACEC,CADF,QAGE;AAAA,wBADEC,KACF;AAAA,MADWC,UACX,cADWA,UACX;AAAA,MADuBC,QACvB,cADuBA,QACvB;AAAA,mCADmCC,kBACnC;AAAA,MADmCA,kBACnC,sCADwD,KACxD;AACA,SAAO;AACLC,IAAAA,MAAM,EAAEH,UAAU,CAACI,gBADd;AAELC,IAAAA,cAAc,EAAEH,kBAAkB,GAAG,IAAH,GAAUF,UAAU,CAACK,cAFlD;AAGLC,IAAAA,YAAY,EAAEN,UAAU,CAACM,YAHpB;AAILC,IAAAA,WAAW,EAAEP,UAAU,CAACQ,UAJnB;AAKLC,IAAAA,gBAAgB,EAAER,QAAQ,CAACQ,gBALtB;AAMLC,IAAAA,mBAAmB,EAAET,QAAQ,CAACK;AANzB,GAAP;AAQD;;AAED,SAASK,cAAT,CAAwBb,CAAxB,SAA+E;AAAA,0BAAlDC,KAAkD;AAAA,MAAzCC,UAAyC,eAAzCA,UAAyC;AAAA,MAA7BC,QAA6B,eAA7BA,QAA6B;AAAA,MAAjBW,aAAiB,SAAjBA,aAAiB;AAC7E,SAAO;AACLA,IAAAA,aAAa,EAAbA,aADK;AAELC,IAAAA,kBAFK,8BAEcP,YAFd,EAE4B;AAC/BN,MAAAA,UAAU,CAACc,YAAX,CAAwB;AAAER,QAAAA,YAAY,EAAZA;AAAF,OAAxB;AACD,KAJI;AAKLS,IAAAA,UALK,sBAKMP,UALN,EAKkB;AACrBR,MAAAA,UAAU,CAACc,YAAX,CAAwB;AAAEN,QAAAA,UAAU,EAAVA;AAAF,OAAxB;AACD,KAPI;AAQLQ,IAAAA,yBARK,qCAQqBV,YARrB,EAQmC;AACtCL,MAAAA,QAAQ,CAACa,YAAT,CAAsB;AAAER,QAAAA,YAAY,EAAZA;AAAF,OAAtB;AACD,KAVI;AAWCW,IAAAA,UAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAWcC,cAAAA,QAXd,SAWcA,QAXd,EAWwBC,gBAXxB,SAWwBA,gBAXxB;AAAA;AAAA,8CAYmBnB,UAAU,CAACiB,UAAX,CACpBC,QADoB,EAEpBC,gBAAgB,CAACC,GAAjB,CAAqB,UAACC,EAAD;AAAA,uBAAQA,EAAE,CAACC,KAAX;AAAA,eAArB,CAFoB,CAZnB;;AAAA;AAYGC,cAAAA,OAZH;AAgBHX,cAAAA,aAAa,CAACW,OAAD,CAAb;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAmBD;;AAED,IAAMC,cAAc,GAAG,2BACrB,yBACE3B,UADF,EAEEc,cAFF,EAGEc,2BAHF,CADqB,CAAvB;eAOeD,c","sourcesContent":["import { connect } from 'react-redux';\nimport withPhone from 'ringcentral-widgets/lib/withPhone';\n\nimport GlipGroupsPanel from '../../components/GlipGroupsPanel';\n\nfunction mapToProps(\n  _,\n  { phone: { glipGroups, contacts }, hiddenCurrentGroup = false },\n) {\n  return {\n    groups: glipGroups.groupsWithUnread,\n    currentGroupId: hiddenCurrentGroup ? null : glipGroups.currentGroupId,\n    searchFilter: glipGroups.searchFilter,\n    currentPage: glipGroups.pageNumber,\n    filteredContacts: contacts.filteredContacts,\n    contactSearchFilter: contacts.searchFilter,\n  };\n}\n\nfunction mapToFunctions(_, { phone: { glipGroups, contacts }, onSelectGroup }) {\n  return {\n    onSelectGroup,\n    updateSearchFilter(searchFilter) {\n      glipGroups.updateFilter({ searchFilter });\n    },\n    onNextPage(pageNumber) {\n      glipGroups.updateFilter({ pageNumber });\n    },\n    updateContactSearchFilter(searchFilter) {\n      contacts.updateFilter({ searchFilter });\n    },\n    async createTeam({ teamName, selectedContacts }) {\n      const groupId = await glipGroups.createTeam(\n        teamName,\n        selectedContacts.map((sc) => sc.email),\n      );\n      onSelectGroup(groupId);\n    },\n  };\n}\n\nconst GlipGroupsPage = withPhone(\n  connect(\n    mapToProps,\n    mapToFunctions,\n  )(GlipGroupsPanel),\n);\n\nexport default GlipGroupsPage;\n"],"file":"index.js"}