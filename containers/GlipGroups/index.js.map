{"version":3,"sources":["containers/GlipGroups/index.js"],"names":["mapToProps","_","phone","glipGroups","contactListUI","hiddenCurrentGroup","groups","groupsWithUnread","currentGroupId","searchFilter","currentPage","pageNumber","filteredContacts","contactSearchFilter","mapToFunctions","onSelectGroup","updateSearchFilter","updateFilter","onNextPage","updateContactSearchFilter","applyFilters","createTeam","teamName","selectedContacts","map","sc","email","groupId","GlipGroupsPage","GlipGroupsPanel"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA,SAASA,UAAT,CACEC,CADF,QAGE;AAAA,wBADEC,KACF;AAAA,MADWC,UACX,cADWA,UACX;AAAA,MADuBC,aACvB,cADuBA,aACvB;AAAA,mCADwCC,kBACxC;AAAA,MADwCA,kBACxC,sCAD6D,KAC7D;AACA,SAAO;AACLC,IAAAA,MAAM,EAAEH,UAAU,CAACI,gBADd;AAELC,IAAAA,cAAc,EAAEH,kBAAkB,GAAG,IAAH,GAAUF,UAAU,CAACK,cAFlD;AAGLC,IAAAA,YAAY,EAAEN,UAAU,CAACM,YAHpB;AAILC,IAAAA,WAAW,EAAEP,UAAU,CAACQ,UAJnB;AAKLC,IAAAA,gBAAgB,EAAER,aAAa,CAACQ,gBAL3B;AAMLC,IAAAA,mBAAmB,EAAET,aAAa,CAACK;AAN9B,GAAP;AAQD;;AAED,SAASK,cAAT,CACEb,CADF,SAGE;AAAA,0BADEC,KACF;AAAA,MADWC,UACX,eADWA,UACX;AAAA,MADuBC,aACvB,eADuBA,aACvB;AAAA,MADwCW,aACxC,SADwCA,aACxC;AACA,SAAO;AACLA,IAAAA,aAAa,EAAbA,aADK;AAELC,IAAAA,kBAFK,8BAEcP,YAFd,EAE4B;AAC/BN,MAAAA,UAAU,CAACc,YAAX,CAAwB;AAAER,QAAAA,YAAY,EAAZA;AAAF,OAAxB;AACD,KAJI;AAKLS,IAAAA,UALK,sBAKMP,UALN,EAKkB;AACrBR,MAAAA,UAAU,CAACc,YAAX,CAAwB;AAAEN,QAAAA,UAAU,EAAVA;AAAF,OAAxB;AACD,KAPI;AAQLQ,IAAAA,yBARK,qCAQqBV,YARrB,EAQmC;AACtCL,MAAAA,aAAa,CAACgB,YAAd,CAA2B;AAAEX,QAAAA,YAAY,EAAZA;AAAF,OAA3B;AACD,KAVI;AAWCY,IAAAA,UAXD,6BAW4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA9BC,gBAAAA,QAA8B,SAA9BA,QAA8B,EAApBC,gBAAoB,SAApBA,gBAAoB;AAAA;AAAA,uBACzBpB,UAAU,CAACkB,UAAX,CACpBC,QADoB,EAEpBC,gBAAgB,CAACC,GAAjB,CAAqB,UAACC,EAAD;AAAA,yBAAQA,EAAE,CAACC,KAAX;AAAA,iBAArB,CAFoB,CADyB;;AAAA;AACzCC,gBAAAA,OADyC;AAK/CZ,gBAAAA,aAAa,CAACY,OAAD,CAAb;;AAL+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhD;AAjBI,GAAP;AAmBD;;AAED,IAAMC,cAAc,GAAG,2BACrB,yBAAQ5B,UAAR,EAAoBc,cAApB,EAAoCe,2BAApC,CADqB,CAAvB;eAIeD,c","sourcesContent":["import { connect } from 'react-redux';\nimport withPhone from '@ringcentral-integration/widgets/lib/withPhone';\n\nimport GlipGroupsPanel from '../../components/GlipGroupsPanel';\n\nfunction mapToProps(\n  _,\n  { phone: { glipGroups, contactListUI }, hiddenCurrentGroup = false },\n) {\n  return {\n    groups: glipGroups.groupsWithUnread,\n    currentGroupId: hiddenCurrentGroup ? null : glipGroups.currentGroupId,\n    searchFilter: glipGroups.searchFilter,\n    currentPage: glipGroups.pageNumber,\n    filteredContacts: contactListUI.filteredContacts,\n    contactSearchFilter: contactListUI.searchFilter,\n  };\n}\n\nfunction mapToFunctions(\n  _,\n  { phone: { glipGroups, contactListUI }, onSelectGroup },\n) {\n  return {\n    onSelectGroup,\n    updateSearchFilter(searchFilter) {\n      glipGroups.updateFilter({ searchFilter });\n    },\n    onNextPage(pageNumber) {\n      glipGroups.updateFilter({ pageNumber });\n    },\n    updateContactSearchFilter(searchFilter) {\n      contactListUI.applyFilters({ searchFilter });\n    },\n    async createTeam({ teamName, selectedContacts }) {\n      const groupId = await glipGroups.createTeam(\n        teamName,\n        selectedContacts.map((sc) => sc.email),\n      );\n      onSelectGroup(groupId);\n    },\n  };\n}\n\nconst GlipGroupsPage = withPhone(\n  connect(mapToProps, mapToFunctions)(GlipGroupsPanel),\n);\n\nexport default GlipGroupsPage;\n"],"file":"index.js"}