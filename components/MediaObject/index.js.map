{"version":3,"sources":["components/MediaObject/index.js"],"names":["capitalize","str","toUpperCase","slice","getMeidaCls","styles","MediaObject","containerCls","mediaLeft","mediaBody","mediaRight","leftCls","bodyCls","rightCls","mediaHeading","headingCls","leftAlignment","bodyAlignment","rightAlignment","flexible","leftAlignmentClassName","rightAlignmentClassName","bodyAlignmentClassName","media","flex","mediaObject","propTypes","PropTypes","string","element","oneOfType","oneOf","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nfunction getMeidaCls(str) {\n  return styles[`media${capitalize(str)}`];\n}\n\nfunction MediaObject({\n  containerCls,\n  mediaLeft,\n  mediaBody,\n  mediaRight,\n  leftCls,\n  bodyCls,\n  rightCls,\n  mediaHeading,\n  headingCls,\n  leftAlignment,\n  bodyAlignment,\n  rightAlignment,\n  flexible, // Using flex layout or not\n}) {\n  const leftAlignmentClassName = getMeidaCls(leftAlignment);\n  const rightAlignmentClassName = getMeidaCls(rightAlignment);\n  const bodyAlignmentClassName = getMeidaCls(bodyAlignment);\n\n  return (\n    <div\n      className={classnames({\n        [styles.media]: true,\n        [styles.flex]: !!flexible,\n        [containerCls]: !!containerCls,\n      })}\n    >\n      {mediaLeft ? (\n        <div\n          className={classnames(\n            styles.mediaLeft,\n            leftAlignmentClassName,\n            leftCls,\n          )}\n        >\n          <div className={styles.mediaObject}>{mediaLeft}</div>\n        </div>\n      ) : null}\n      <div\n        className={classnames(\n          styles.mediaBody,\n          bodyAlignmentClassName,\n          bodyCls,\n        )}\n      >\n        {mediaHeading ? (\n          <h4 className={classnames(styles.mediaHeading, headingCls)}>\n            {mediaHeading}\n          </h4>\n        ) : null}\n        {mediaBody}\n      </div>\n      {mediaRight ? (\n        <div\n          className={classnames(\n            styles.mediaRight,\n            rightAlignmentClassName,\n            rightCls,\n          )}\n        >\n          <div className={styles.mediaObject}>{mediaRight}</div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nMediaObject.propTypes = {\n  containerCls: PropTypes.string,\n  mediaLeft: PropTypes.element,\n  mediaBody: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  mediaRight: PropTypes.element,\n  mediaHeading: PropTypes.string,\n  leftCls: PropTypes.string,\n  bodyCls: PropTypes.string,\n  rightCls: PropTypes.string,\n  headingCls: PropTypes.string,\n  leftAlignment: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  bodyAlignment: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  rightAlignment: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  flexible: PropTypes.bool,\n};\n\nMediaObject.defaultProps = {\n  containerCls: null,\n  mediaLeft: null,\n  mediaBody: null,\n  mediaRight: null,\n  mediaHeading: null,\n  leftCls: null,\n  bodyCls: null,\n  rightCls: null,\n  headingCls: null,\n  leftAlignment: 'middle',\n  bodyAlignment: 'middle',\n  rightAlignment: 'middle',\n  flexible: true,\n};\n\nexport default MediaObject;\n"],"file":"index.js"}