{"version":3,"sources":["components/CallLogFields/FieldItem/utils/LogFieldsInput.tsx"],"names":["LogFieldsInput","props","checkPropsUpdate","debounce","value","state","nextProps","onChange","setState","required","error","rest","styleRequired","styles","isRequired","commonStyle","e","updateValue","target","Component","defaultProps","type","placeholder","undefined","multiline"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUMA,c;;;;;AAeJ,0BAAYC,KAAZ,EAAwC;AAAA;;AAAA;;AACtC,wFAAMA,KAAN;AADsC,UAHxCC,gBAGwC,GAHrB,4EAGqB;AAAA,UAFxCC,QAEwC,GAF7B,+DAAmB,GAAnB,CAE6B;AAAA,QAE9BC,KAF8B,GAEpBH,KAFoB,CAE9BG,KAF8B;AAGtC,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAEA,KAAK,IAAI;AADL,KAAb;AAHsC;AAMvC;;;;8CAEyBE,S,EAAW;AACnC,WAAKJ,gBAAL,CAAsBI,SAAtB,EAAiC,OAAjC;AACD;;;gCAEWF,K,EAAeG,Q,EAA2C;AACpE,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAALA;AAAF,OAAd;AACA,WAAKD,QAAL,CAAc;AAAA,eAAMI,QAAQ,CAACH,KAAD,CAAd;AAAA,OAAd;AACD;;;6BAEQ;AAAA;;AAAA,wBACwC,KAAKH,KAD7C;AAAA,UACCM,SADD,eACCA,QADD;AAAA,UACWE,QADX,eACWA,QADX;AAAA,UACqBC,KADrB,eACqBA,KADrB;AAAA,UAC+BC,IAD/B;;AAAA,UAECP,KAFD,GAEW,KAAKC,KAFhB,CAECD,KAFD;AAGP,UAAMQ,aAAa,GAAGH,QAAQ,GAAGI,mBAAOC,UAAV,GAAuB,IAArD;AACA,aACE;AAAK,QAAA,SAAS,EAAE,4BAAWF,aAAX,EAA0BC,mBAAOE,WAAjC;AAAhB,SACE,gCAAC,iBAAD,eACMJ,IADN;AAEE,QAAA,QAAQ,EAAEF,QAFZ;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,KAAK,EAAEN,KAJT;AAKE,QAAA,QAAQ,EAAE,kBAACY,CAAD;AAAA,iBAAO,MAAI,CAACC,WAAL,CAAiBD,CAAC,CAACE,MAAF,CAASd,KAA1B,EAAiCG,SAAjC,CAAP;AAAA,SALZ;AAME,QAAA,SAAS,MANX;AAOE,QAAA,QAAQ,EAAE;AAPZ,SADF,CADF;AAaD;;;;EAjD0BY,gB;;AAAvBnB,c,CAIGoB,Y,GAA6C;AAClDC,EAAAA,IAAI,EAAE,MAD4C;AAElDZ,EAAAA,QAAQ,EAAE,KAFwC;AAGlDa,EAAAA,WAAW,EAAE,UAHqC;AAIlDlB,EAAAA,KAAK,EAAEmB,SAJ2C;AAKlDC,EAAAA,SAAS,EAAE;AALuC,C;eAgDvCxB,c","sourcesContent":["import classnames from 'classnames';\nimport { RcTextField, RcTextFieldProps } from '@ringcentral-integration/rcui';\nimport React, { Component } from 'react';\n\nimport { bindDebounce } from '../../../../lib/bindDebounce';\nimport { bindNextPropsUpdate } from '../../../../lib/bindNextPropsUpdate';\nimport styles from '../styles.scss';\n\ntype LogFieldsInputProps = {\n  onChange: (...args: any[]) => any;\n} & Omit<RcTextFieldProps, 'ref'>;\n\ntype LogFieldsInputState = {\n  value: any;\n};\n\nclass LogFieldsInput extends Component<\n  LogFieldsInputProps,\n  LogFieldsInputState\n> {\n  static defaultProps: Partial<LogFieldsInputProps> = {\n    type: 'text',\n    required: false,\n    placeholder: 'no label',\n    value: undefined,\n    multiline: false,\n  };\n\n  checkPropsUpdate = bindNextPropsUpdate(this);\n  debounce = bindDebounce(this, 500);\n\n  constructor(props: LogFieldsInputProps) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      value: value || '',\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.checkPropsUpdate(nextProps, 'value');\n  }\n\n  updateValue(value: string, onChange: LogFieldsInputProps['onChange']) {\n    this.setState({ value });\n    this.debounce(() => onChange(value));\n  }\n\n  render() {\n    const { onChange, required, error, ...rest } = this.props;\n    const { value } = this.state;\n    const styleRequired = required ? styles.isRequired : null;\n    return (\n      <div className={classnames(styleRequired, styles.commonStyle)}>\n        <RcTextField\n          {...rest}\n          required={required}\n          error={error}\n          value={value}\n          onChange={(e) => this.updateValue(e.target.value, onChange)}\n          fullWidth\n          clearBtn={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LogFieldsInput;\n"],"file":"LogFieldsInput.js"}