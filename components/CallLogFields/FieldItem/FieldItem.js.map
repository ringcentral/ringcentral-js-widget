{"version":3,"sources":["components/CallLogFields/FieldItem/FieldItem.tsx"],"names":["DEFAULT_FINDER","getValue","item","id","searchOption","option","text","name","toLowerCase","includes","appDefaultValue","FieldItem","renderReference","props","fieldOption","label","value","currentDisabled","disabled","fieldOnChange","onChange","onSave","currentLog","startAdornmentRender","referenceFieldOptions","currentLocale","task","phoneNumber","currentLogCall","referenceFieldOption","console","warn","getLabel","_getValue","metadata","rightIconRender","matchedEntitiesGetter","otherEntitiesGetter","shouldDisable","disableReason","currentOptionFinder","_searchOptionFinder","searchOptionFinder","matchedEntities","otherEntities","currentOption","find","title","rightIcon","undefined","placeholder","valueField","args","renderTextField","dataSign","length","renderInput","type","required","currentValue","_updateValue","renderTextArea","error","helperText","renderDatePicker","fieldValue","fieldSize","date","Date","timeStamp","onInputSelectChange","endAdornment","fullWidth","renderSubjectField","subjectPicklist","subjectDropdownsTracker","timeout","subject","renderSelectMenu","picklistOptions","defaultValue","selectList","map","Object","classes","icon","styles","select","target","i","root","currentSessionId","onUpdateCallLog","customInputDataStruct","defaultLogData","isSaved","logData","fieldsRenderMap","reference","picklist","textarea","string","integer","combobox","input","customTextField","getRightButtons","debonce","row","Component"],"mappings":"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","sourcesContent":["import {\n  RcDatePicker,\n  RcIconButton,\n  RcLineSelect,\n  RcMenuItem,\n  RcTextField,\n} from '@ringcentral-integration/rcui';\nimport React, { Component } from 'react';\n\nimport { setUTCTime } from '../../../lib/timeFormatHelper';\nimport InputSelect from '../../InputSelect';\nimport { CustomArrowButton } from '../../Rcui/CustomArrowButton';\nimport { SelectList } from '../../SelectList';\nimport { CallLogFieldsProps, FieldMetadata } from '../CallLogFields.interface';\nimport { FieldItemOption, FieldsMap } from './FieldItem.interface';\nimport styles from './styles.scss';\nimport { LogFieldsInput } from './utils';\n\nconst DEFAULT_FINDER = {\n  getValue: (item) => (typeof item === 'object' ? item.id : item) || null,\n  searchOption: (option, text) =>\n    option.name && option.name.toLowerCase().includes(text.toLowerCase()),\n};\n\nconst appDefaultValue = '[None]';\n\nexport type FieldItemProps = {\n  timeout: number;\n  fieldOption: FieldItemOption;\n  onSave(): any;\n  debonce(cb: any, time2?: any): void;\n} & CallLogFieldsProps;\n\nexport class FieldItem extends Component<FieldItemProps, {}> {\n  get currentValue() {\n    const {\n      fieldOption: { value },\n    } = this.props;\n    const {\n      currentLog: { task },\n    } = this.props;\n    return task[value];\n  }\n\n  // this is click to new popup window page\n  private renderReference = () => {\n    const {\n      fieldOption: {\n        label,\n        value,\n        disabled: currentDisabled,\n        onChange: fieldOnChange,\n      },\n      onSave,\n    } = this.props;\n    const {\n      currentLog,\n      startAdornmentRender,\n      referenceFieldOptions,\n      currentLocale,\n    } = this.props;\n    const {\n      task,\n      currentLogCall: { phoneNumber },\n    } = currentLog;\n    const referenceFieldOption = referenceFieldOptions[value];\n    if (!referenceFieldOption) {\n      console.warn(\n        `Reference field \"${value}\" requires options in renderEditLogSection`,\n      );\n      return;\n    }\n    const {\n      getLabel,\n      getValue: _getValue,\n      onChange,\n      metadata = {} as FieldMetadata,\n      rightIconRender,\n      matchedEntitiesGetter,\n      otherEntitiesGetter,\n      shouldDisable = () => false,\n      disableReason = '',\n      currentOptionFinder,\n      searchOptionFinder: _searchOptionFinder,\n    } = referenceFieldOption;\n    const matchedEntities = matchedEntitiesGetter(currentLog);\n    const otherEntities = otherEntitiesGetter(currentLog);\n    const getValue = _getValue || DEFAULT_FINDER.getValue;\n    const searchOptionFinder =\n      _searchOptionFinder || DEFAULT_FINDER.searchOption;\n    const currentOption = [...matchedEntities, ...otherEntities].find(\n      currentOptionFinder(task),\n    );\n    const disabled = currentDisabled || shouldDisable(task);\n    const title = metadata.title || label;\n    const rightIcon = rightIconRender\n      ? rightIconRender(phoneNumber)\n      : undefined;\n    return (\n      <SelectList\n        title={title}\n        rightIcon={rightIcon}\n        placeholder={metadata.placeholder}\n        options={matchedEntities}\n        otherOptions={otherEntities}\n        startAdornment={startAdornmentRender}\n        value={task[metadata.valueField] || ''}\n        onChange={async (args) => {\n          await onChange(this.props)(args);\n          await onSave();\n          if (fieldOnChange) fieldOnChange(args);\n        }}\n        valueFunction={getValue}\n        renderFunction={getLabel}\n        searchOption={searchOptionFinder}\n        disabled={disabled}\n        currentLocale={currentLocale}\n      >\n        {this.renderTextField({\n          disabled,\n          title,\n          dataSign: value,\n          disableReason,\n          value: getLabel(currentOption, matchedEntities.length),\n        })}\n      </SelectList>\n    );\n  };\n\n  private renderInput = () => {\n    const {\n      fieldOption: { label, value, type, required },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        type={type === 'string' ? 'text' : 'number'}\n        required={required}\n        placeholder={label}\n        value={this.currentValue || ''}\n        data-sign={value}\n        onChange={(args) => this._updateValue(value, args, onSave)}\n      />\n    );\n  };\n\n  private renderTextArea = () => {\n    const {\n      fieldOption: { label, value, error, helperText, required, onChange },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        required={required}\n        error={error}\n        helperText={helperText}\n        placeholder={label}\n        data-sign={value}\n        multiline\n        value={this.currentValue || ''}\n        onChange={(text) => {\n          this._updateValue(value, text, onSave);\n          if (onChange) onChange(text);\n        }}\n      />\n    );\n  };\n\n  private renderDatePicker = () => {\n    const {\n      fieldOption: { label, value: fieldValue, required },\n      onSave,\n    } = this.props;\n    const { fieldSize } = this.props;\n    const date = this.currentValue ? new Date(this.currentValue) : null;\n    return (\n      <RcDatePicker\n        fullWidth\n        size={fieldSize}\n        data-sign={fieldValue}\n        required={required}\n        label={label}\n        value={date}\n        onChange={async (value) => {\n          const timeStamp = setUTCTime(value);\n          await this.onInputSelectChange(fieldValue)(timeStamp);\n          await onSave;\n        }}\n        format=\"MM/DD/YYYY\"\n        autoOk\n        InputProps={{\n          endAdornment: (\n            <RcIconButton variant=\"round\" size=\"small\" icon=\"event-new\" />\n          ),\n          fullWidth: true,\n        }}\n      />\n    );\n  };\n\n  private renderSubjectField = () => {\n    const {\n      currentLog: { task, subjectPicklist },\n      subjectDropdownsTracker,\n      timeout,\n    } = this.props;\n    const {\n      fieldOption: { required },\n      onSave,\n    } = this.props;\n    return (\n      <InputSelect\n        required={required}\n        subjectPicklist={subjectPicklist}\n        subject={task.subject || ''}\n        onChange={this.onInputSelectChange('subject')}\n        onSelectOption={subjectDropdownsTracker}\n        onSave={onSave}\n        timeout={timeout}\n      />\n    );\n  };\n\n  private renderSelectMenu = () => {\n    const {\n      fieldOption: {\n        label,\n        value: fieldValue,\n        picklistOptions,\n        required,\n        defaultValue,\n        helperText,\n        error,\n        onChange,\n      },\n      onSave,\n    } = this.props;\n\n    const selectList = (picklistOptions || []).map((item) => {\n      let value: string = item as any;\n      let label =\n        item !== null ? (item as any) : defaultValue || appDefaultValue;\n      if (item instanceof Object) {\n        value = item.value;\n        label = item.label;\n      }\n      return {\n        label,\n        value,\n      };\n    });\n\n    return (\n      <RcLineSelect\n        data-sign={fieldValue}\n        SelectProps={{\n          classes: {\n            icon: styles.select,\n          },\n        }}\n        fullWidth\n        helperText={helperText}\n        error={error}\n        required={required}\n        label={label}\n        value={this.currentValue || defaultValue || ''}\n        onChange={async ({ target: { value } }) => {\n          if (picklistOptions[value]) {\n            value = picklistOptions[value].value;\n          }\n          await this.onInputSelectChange(fieldValue)(value);\n          await onSave();\n          if (onChange) onChange(value);\n        }}\n      >\n        {selectList.map((item, i) => (\n          <RcMenuItem\n            key={i}\n            value={`${item.value}`}\n            data-sign={`option${i}`}\n            classes={{ root: styles.item }}\n          >\n            {item.label}\n          </RcMenuItem>\n        ))}\n      </RcLineSelect>\n    );\n  };\n\n  private renderTextField({ disabled, title, dataSign, value, disableReason }) {\n    return (\n      <RcTextField\n        disabled={disabled}\n        data-sign={dataSign}\n        InputProps={{\n          classes: {\n            input: styles.customTextField,\n          },\n        }}\n        helperText={disableReason}\n        label={title}\n        value={value || ''}\n        readonly\n        fullWidth\n        endAdornment={(disabled) => this.getRightButtons(disabled)}\n      />\n    );\n  }\n\n  private onInputSelectChange = (value) => async (item) => {\n    const {\n      currentLog: { currentSessionId, task = {} },\n      onUpdateCallLog,\n      customInputDataStruct,\n    } = this.props;\n    const defaultLogData = {\n      isSaved: false,\n      task: {\n        [value]: item || '',\n      },\n    };\n    const logData =\n      (customInputDataStruct &&\n        customInputDataStruct({\n          value,\n          item,\n          task,\n          currentSessionId,\n        })) ||\n      defaultLogData;\n    await onUpdateCallLog(logData, currentSessionId);\n  };\n\n  private _updateValue(value, args, onSave) {\n    const { debonce } = this.props;\n    this.onInputSelectChange(value)(args);\n    debonce(onSave);\n  }\n\n  private getRightButtons(disabled) {\n    return <CustomArrowButton disabled={disabled} />;\n  }\n\n  private fieldsRenderMap: FieldsMap = {\n    reference: this.renderReference,\n    picklist: this.renderSelectMenu,\n    textarea: this.renderTextArea,\n    date: this.renderDatePicker,\n    string: this.renderInput,\n    integer: this.renderInput,\n    double: this.renderInput,\n    combobox: this.renderSubjectField,\n  };\n\n  render() {\n    const {\n      fieldOption: { value, type },\n    } = this.props;\n\n    if (this.fieldsRenderMap[type]) {\n      return (\n        <div data-sign=\"callLogField\" className={styles.row}>\n          {this.fieldsRenderMap[type]()}\n        </div>\n      );\n    }\n    console.warn(`Not support field type '${type}' on ${value}.`);\n    return null;\n  }\n}\n"],"file":"FieldItem.js"}