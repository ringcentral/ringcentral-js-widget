{"version":3,"sources":["components/CallLogFields/FieldItem/FieldItem.tsx"],"names":["DEFAULT_FINDER","getValue","item","id","searchOption","option","text","name","toLowerCase","includes","appDefaultValue","FieldItem","renderReference","props","fieldOption","label","value","currentDisabled","disabled","fieldOnChange","onChange","onSave","onSelectViewVisible","currentLog","startAdornmentRender","referenceFieldOptions","currentLocale","task","phoneNumber","currentLogCall","referenceFieldOption","console","warn","getLabel","_getValue","metadata","rightIconRender","matchedEntitiesGetter","otherEntitiesGetter","associatedEntitiesGetter","shouldShowAssociatedSection","shouldDisable","disableReason","currentOptionFinder","_searchOptionFinder","searchOptionFinder","matchedEntities","otherEntities","showAssociatedSection","associatedEntities","currentOption","find","title","rightIcon","undefined","placeholder","valueField","args","renderTextField","dataSign","length","renderInput","type","required","currentValue","_updateValue","renderTextArea","error","helperText","renderDatePicker","fieldValue","fieldSize","date","Date","timeStamp","onInputSelectChange","endAdornment","fullWidth","renderSubjectField","subjectPicklist","subjectDropdownsTracker","timeout","subject","renderSelectMenu","picklistOptions","defaultValue","selectList","map","Object","classes","icon","styles","select","target","i","root","currentSessionId","onUpdateCallLog","customInputDataStruct","defaultLogData","isSaved","logData","fieldsRenderMap","reference","picklist","textarea","string","integer","combobox","input","customTextField","getRightButtons","debonce","row","Component"],"mappings":"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","sourcesContent":["import {\n  RcDatePicker,\n  RcIconButton,\n  RcLineSelect,\n  RcMenuItem,\n  RcTextField,\n} from '@ringcentral-integration/rcui';\nimport React, { Component } from 'react';\n\nimport { setUTCTime } from '../../../lib/timeFormatHelper';\nimport InputSelect from '../../InputSelect';\nimport { CustomArrowButton } from '../../Rcui/CustomArrowButton';\nimport { SelectList } from '../../SelectList';\nimport { CallLogFieldsProps, FieldMetadata } from '../CallLogFields.interface';\nimport { FieldItemOption, FieldsMap } from './FieldItem.interface';\nimport styles from './styles.scss';\nimport { LogFieldsInput } from './utils';\n\nconst DEFAULT_FINDER = {\n  getValue: (item) => (typeof item === 'object' ? item.id : item) || null,\n  searchOption: (option, text) =>\n    option.name && option.name.toLowerCase().includes(text.toLowerCase()),\n};\n\nconst appDefaultValue = '[None]';\n\nexport type FieldItemProps = {\n  timeout: number;\n  fieldOption: FieldItemOption;\n  onSave(): any;\n  debonce(cb: any, time2?: any): void;\n} & CallLogFieldsProps;\n\nexport class FieldItem extends Component<FieldItemProps, {}> {\n  get currentValue() {\n    const {\n      fieldOption: { value },\n    } = this.props;\n    const {\n      currentLog: { task },\n    } = this.props;\n    return task[value];\n  }\n\n  // this is click to new popup window page\n  private renderReference = () => {\n    const {\n      fieldOption: {\n        label,\n        value,\n        disabled: currentDisabled,\n        onChange: fieldOnChange,\n      },\n      onSave,\n      onSelectViewVisible,\n    } = this.props;\n    const {\n      currentLog,\n      startAdornmentRender,\n      referenceFieldOptions,\n      currentLocale,\n    } = this.props;\n    const {\n      task,\n      currentLogCall: { phoneNumber },\n    } = currentLog;\n    const referenceFieldOption = referenceFieldOptions[value];\n    if (!referenceFieldOption) {\n      console.warn(\n        `Reference field \"${value}\" requires options in renderEditLogSection`,\n      );\n      return;\n    }\n    const {\n      getLabel,\n      getValue: _getValue,\n      onChange,\n      metadata = {} as FieldMetadata,\n      rightIconRender,\n      matchedEntitiesGetter,\n      otherEntitiesGetter,\n      associatedEntitiesGetter,\n      shouldShowAssociatedSection,\n      shouldDisable = () => false,\n      disableReason = '',\n      currentOptionFinder,\n      searchOptionFinder: _searchOptionFinder,\n    } = referenceFieldOption;\n    const matchedEntities = matchedEntitiesGetter(currentLog);\n    const otherEntities = otherEntitiesGetter(currentLog);\n    const showAssociatedSection = shouldShowAssociatedSection\n      ? shouldShowAssociatedSection(currentLog)\n      : false;\n    const associatedEntities =\n      showAssociatedSection && associatedEntitiesGetter\n        ? associatedEntitiesGetter(currentLog)\n        : [];\n    const getValue = _getValue || DEFAULT_FINDER.getValue;\n    const searchOptionFinder =\n      _searchOptionFinder || DEFAULT_FINDER.searchOption;\n    const currentOption = [\n      ...matchedEntities,\n      ...otherEntities,\n      ...associatedEntities,\n    ].find(currentOptionFinder(task));\n    const disabled = currentDisabled || shouldDisable(task);\n    const title = metadata.title || label;\n    const rightIcon = rightIconRender\n      ? rightIconRender(phoneNumber)\n      : undefined;\n    return (\n      <SelectList\n        title={title}\n        rightIcon={rightIcon}\n        placeholder={metadata.placeholder}\n        options={matchedEntities}\n        otherOptions={otherEntities}\n        associatedOptions={associatedEntities}\n        showAssociatedSection={showAssociatedSection}\n        startAdornment={startAdornmentRender}\n        field={value}\n        value={task[metadata.valueField] || ''}\n        onChange={async (args) => {\n          await onChange(this.props)(args);\n          await onSave();\n          if (fieldOnChange) fieldOnChange(args);\n        }}\n        onSelectViewVisible={onSelectViewVisible}\n        valueFunction={getValue}\n        renderFunction={getLabel}\n        searchOption={searchOptionFinder}\n        disabled={disabled}\n        currentLocale={currentLocale}\n      >\n        {this.renderTextField({\n          disabled,\n          title,\n          dataSign: value,\n          disableReason,\n          value: getLabel(currentOption, matchedEntities.length, currentLog),\n        })}\n      </SelectList>\n    );\n  };\n\n  private renderInput = () => {\n    const {\n      fieldOption: { label, value, type, required },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        type={type === 'string' ? 'text' : 'number'}\n        required={required}\n        placeholder={label}\n        value={this.currentValue || ''}\n        data-sign={value}\n        onChange={(args) => this._updateValue(value, args, onSave)}\n      />\n    );\n  };\n\n  private renderTextArea = () => {\n    const {\n      fieldOption: { label, value, error, helperText, required, onChange },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        required={required}\n        error={error}\n        helperText={helperText}\n        placeholder={label}\n        data-sign={value}\n        multiline\n        value={this.currentValue || ''}\n        onChange={(text) => {\n          this._updateValue(value, text, onSave);\n          if (onChange) onChange(text);\n        }}\n      />\n    );\n  };\n\n  private renderDatePicker = () => {\n    const {\n      fieldOption: { label, value: fieldValue, required },\n      onSave,\n    } = this.props;\n    const { fieldSize } = this.props;\n    const date = this.currentValue ? new Date(this.currentValue) : null;\n    return (\n      <RcDatePicker\n        fullWidth\n        size={fieldSize}\n        data-sign={fieldValue}\n        required={required}\n        label={label}\n        value={date}\n        onChange={async (value) => {\n          const timeStamp = setUTCTime(value);\n          await this.onInputSelectChange(fieldValue)(timeStamp);\n          await onSave;\n        }}\n        format=\"MM/DD/YYYY\"\n        autoOk\n        InputProps={{\n          endAdornment: (\n            <RcIconButton variant=\"round\" size=\"small\" icon=\"event-new\" />\n          ),\n          fullWidth: true,\n        }}\n      />\n    );\n  };\n\n  private renderSubjectField = () => {\n    const {\n      currentLog: { task, subjectPicklist },\n      subjectDropdownsTracker,\n      timeout,\n    } = this.props;\n    const {\n      fieldOption: { required },\n      onSave,\n    } = this.props;\n    return (\n      <InputSelect\n        required={required}\n        subjectPicklist={subjectPicklist}\n        subject={task.subject || ''}\n        onChange={this.onInputSelectChange('subject')}\n        onSelectOption={subjectDropdownsTracker}\n        onSave={onSave}\n        timeout={timeout}\n      />\n    );\n  };\n\n  private renderSelectMenu = () => {\n    const {\n      fieldOption: {\n        label,\n        value: fieldValue,\n        picklistOptions,\n        required,\n        defaultValue,\n        helperText,\n        error,\n        onChange,\n      },\n      onSave,\n    } = this.props;\n\n    const selectList = (picklistOptions || []).map((item) => {\n      let value: string = item as any;\n      let label =\n        item !== null ? (item as any) : defaultValue || appDefaultValue;\n      if (item instanceof Object) {\n        value = item.value;\n        label = item.label;\n      }\n      return {\n        label,\n        value,\n      };\n    });\n\n    return (\n      <RcLineSelect\n        data-sign={fieldValue}\n        SelectProps={{\n          classes: {\n            icon: styles.select,\n          },\n        }}\n        fullWidth\n        helperText={helperText}\n        error={error}\n        required={required}\n        label={label}\n        value={this.currentValue || defaultValue || ''}\n        onChange={async ({ target: { value } }) => {\n          if (picklistOptions[value]) {\n            value = picklistOptions[value].value;\n          }\n          await this.onInputSelectChange(fieldValue)(value);\n          await onSave();\n          if (onChange) onChange(value);\n        }}\n      >\n        {selectList.map((item, i) => (\n          <RcMenuItem\n            key={i}\n            value={`${item.value}`}\n            data-sign={`option${i}`}\n            classes={{ root: styles.item }}\n          >\n            {item.label}\n          </RcMenuItem>\n        ))}\n      </RcLineSelect>\n    );\n  };\n\n  private renderTextField({ disabled, title, dataSign, value, disableReason }) {\n    return (\n      <RcTextField\n        title={value}\n        disabled={disabled}\n        data-sign={dataSign}\n        InputProps={{\n          classes: {\n            input: styles.customTextField,\n          },\n        }}\n        helperText={disableReason}\n        label={title}\n        value={value || ''}\n        readonly\n        fullWidth\n        endAdornment={(disabled) => this.getRightButtons(disabled)}\n      />\n    );\n  }\n\n  private onInputSelectChange = (value) => async (item) => {\n    const {\n      currentLog: { currentSessionId, task = {} },\n      onUpdateCallLog,\n      customInputDataStruct,\n    } = this.props;\n    const defaultLogData = {\n      isSaved: false,\n      task: {\n        [value]: item || '',\n      },\n    };\n    const logData =\n      (customInputDataStruct &&\n        customInputDataStruct({\n          value,\n          item,\n          task,\n          currentSessionId,\n        })) ||\n      defaultLogData;\n    await onUpdateCallLog(logData, currentSessionId);\n  };\n\n  private _updateValue(value, args, onSave) {\n    const { debonce } = this.props;\n    this.onInputSelectChange(value)(args);\n    debonce(onSave);\n  }\n\n  private getRightButtons(disabled) {\n    return <CustomArrowButton disabled={disabled} />;\n  }\n\n  private fieldsRenderMap: FieldsMap = {\n    reference: this.renderReference,\n    picklist: this.renderSelectMenu,\n    textarea: this.renderTextArea,\n    date: this.renderDatePicker,\n    string: this.renderInput,\n    integer: this.renderInput,\n    double: this.renderInput,\n    combobox: this.renderSubjectField,\n  };\n\n  render() {\n    const {\n      fieldOption: { value, type },\n    } = this.props;\n\n    if (this.fieldsRenderMap[type]) {\n      return (\n        <div data-sign=\"callLogField\" className={styles.row}>\n          {this.fieldsRenderMap[type]()}\n        </div>\n      );\n    }\n    console.warn(`Not support field type '${type}' on ${value}.`);\n    return null;\n  }\n}\n"],"file":"FieldItem.js"}