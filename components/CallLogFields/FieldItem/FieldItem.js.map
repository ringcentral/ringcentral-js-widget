{"version":3,"sources":["components/CallLogFields/FieldItem/FieldItem.tsx"],"names":["DEFAULT_FINDER","getValue","item","id","searchOption","option","text","name","toLowerCase","includes","appDefaultValue","FieldItem","fieldItemRef","props","fieldRef","React","createRef","renderReference","fieldOption","label","value","currentDisabled","disabled","fieldOnChange","onChange","onlyShowInMultipleMatches","showOtherSection","onSave","onSelectViewVisible","contactSearch","currentLog","startAdornmentRender","referenceFieldOptions","currentLocale","showFoundFromServer","task","phoneNumber","currentLogCall","referenceFieldOption","console","warn","getLabel","getType","_getValue","metadata","rightIconRender","matchedEntitiesGetter","otherEntitiesGetter","associatedEntitiesGetter","shouldShowAssociatedSection","shouldDisable","disableReason","currentOptionFinder","_searchOptionFinder","searchOptionFinder","foundFromServerEntityGetter","onBackClick","backHeaderClassName","matchedEntities","length","otherEntities","foundFromServerEntities","showAssociatedSection","associatedEntities","currentOption","find","disabledReference","title","rightIcon","undefined","currentValue","placeholder","valueField","args","helperText","renderInput","type","required","_updateValue","renderTextArea","error","renderDatePicker","fieldValue","fieldSize","date","timeStamp","onInputSelectChange","renderSubjectField","subjectPicklist","subjectDropdownsTracker","timeout","subject","renderSelectMenu","picklistOptions","propsDisabled","selectList","map","Object","target","renderRadio","disableAllFields","disableSaveLog","options","tickets","matches","whoid","defaultOption","styles","radioLabel","onRadioChange","root","radio","event","onUpdateCallLog","currentSessionId","ticketId","renderTicketSelectList","renderCondition","ticket","ticketSelectList","selectLabel","onSelectChange","customInputDataStruct","defaultLogData","isSaved","logData","fieldsRenderMap","reference","picklist","textarea","string","integer","combobox","debounce","enableScrollError","editSectionScrollBy","current","offsetTop","row","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { RcDatePicker, RcTypography } from '@ringcentral/juno';\n\nimport { setUTCTime, getDateFromUTCDay } from '../../../lib/timeFormatHelper';\nimport InputSelect from '../../InputSelect';\nimport { CallLogFieldsProps, FieldMetadata } from '../CallLogFields.interface';\nimport {\n  FieldItemOption,\n  FieldsMap,\n  PickListOption,\n} from './FieldItem.interface';\nimport { FullSelectField } from './FullSelectField';\nimport { LogFieldsInput } from './LogFieldsInput';\nimport { SelectField } from './SelectField';\nimport { RadioField } from './RadioField';\nimport styles from './styles.scss';\n\nconst DEFAULT_FINDER = {\n  getValue: (item: any) => (typeof item === 'object' ? item.id : item) || null,\n  searchOption: (option: any, text: string) =>\n    option.name && option.name.toLowerCase().includes(text.toLowerCase()),\n};\n\nconst appDefaultValue = '[None]';\n\nexport type FieldItemProps = {\n  fieldRef?: React.RefObject<HTMLDivElement>;\n  timeout: number;\n  fieldOption: FieldItemOption;\n  onSave(): any;\n  debounce(cb: any, time2?: any): void;\n} & CallLogFieldsProps;\n\nexport class FieldItem extends Component<FieldItemProps, {}> {\n  get currentValue() {\n    const {\n      fieldOption: { value },\n    } = this.props;\n    const {\n      currentLog: { task },\n    } = this.props;\n    return (task as any)[value];\n  }\n\n  // eslint-disable-next-line react/destructuring-assignment\n  fieldItemRef = this.props.fieldRef || React.createRef<HTMLDivElement>();\n\n  // this is click to new popup window page\n  private renderReference = () => {\n    const {\n      fieldOption: {\n        label,\n        value,\n        disabled: currentDisabled,\n        onChange: fieldOnChange,\n        onlyShowInMultipleMatches,\n        showOtherSection,\n      },\n      onSave,\n      onSelectViewVisible,\n      contactSearch,\n    } = this.props;\n    const {\n      currentLog,\n      startAdornmentRender,\n      referenceFieldOptions,\n      currentLocale,\n      showFoundFromServer,\n      disabled,\n    } = this.props;\n    const {\n      task,\n      currentLogCall: { phoneNumber },\n    } = currentLog;\n    const referenceFieldOption = referenceFieldOptions[value];\n    if (!referenceFieldOption) {\n      console.warn(\n        `Reference field \"${value}\" requires options in renderEditLogSection`,\n      );\n      return;\n    }\n    const {\n      getLabel,\n      getType,\n      getValue: _getValue,\n      onChange,\n      metadata = {} as FieldMetadata,\n      rightIconRender,\n      matchedEntitiesGetter,\n      otherEntitiesGetter,\n      associatedEntitiesGetter,\n      shouldShowAssociatedSection,\n      shouldDisable = () => false,\n      disableReason = '',\n      currentOptionFinder,\n      searchOptionFinder: _searchOptionFinder,\n      foundFromServerEntityGetter,\n      onBackClick,\n      backHeaderClassName,\n    } = referenceFieldOption;\n    const matchedEntities = matchedEntitiesGetter(currentLog);\n    if (onlyShowInMultipleMatches && matchedEntities.length <= 1) {\n      return;\n    }\n    const otherEntities = otherEntitiesGetter(currentLog);\n\n    const foundFromServerEntities =\n      typeof foundFromServerEntityGetter === 'function'\n        ? foundFromServerEntityGetter(currentLog)\n        : [];\n    const showAssociatedSection = shouldShowAssociatedSection\n      ? shouldShowAssociatedSection(currentLog)\n      : false;\n    const associatedEntities =\n      showAssociatedSection && associatedEntitiesGetter\n        ? associatedEntitiesGetter(currentLog)\n        : [];\n    const getValue = _getValue || DEFAULT_FINDER.getValue;\n    const searchOptionFinder =\n      _searchOptionFinder || DEFAULT_FINDER.searchOption;\n    const currentOption = [\n      ...matchedEntities,\n      ...otherEntities,\n      ...associatedEntities,\n      ...foundFromServerEntities,\n    ].find(currentOptionFinder(task));\n    const disabledReference =\n      currentDisabled || shouldDisable(task) || disabled;\n    const title = metadata.title || label;\n    const rightIcon = rightIconRender\n      ? rightIconRender(phoneNumber)\n      : undefined;\n\n    const currentValue =\n      getLabel(currentOption, matchedEntities.length, currentLog) || '';\n\n    return (\n      <FullSelectField\n        {...this.props}\n        backHeaderClassName={backHeaderClassName}\n        onBackClick={onBackClick}\n        title={title}\n        rightIcon={rightIcon}\n        placeholder={metadata.placeholder}\n        options={matchedEntities}\n        otherOptions={otherEntities}\n        associatedOptions={associatedEntities}\n        showOtherSection={showOtherSection}\n        showAssociatedSection={showAssociatedSection}\n        startAdornment={startAdornmentRender}\n        field={value}\n        value={(task as any)[metadata.valueField] || ''}\n        onChange={async (args) => {\n          await onChange(this.props)(args);\n          await onSave();\n          if (fieldOnChange) fieldOnChange(args);\n        }}\n        onSelectViewVisible={onSelectViewVisible}\n        valueFunction={getValue}\n        renderFunction={getLabel}\n        secondaryRenderFunction={getType}\n        searchOption={searchOptionFinder}\n        disabled={disabledReference}\n        currentLocale={currentLocale}\n        foundFromServerEntities={foundFromServerEntities}\n        contactSearch={contactSearch}\n        showFoundFromServer={showFoundFromServer}\n        TextFieldProps={{\n          helperText: disableReason,\n          value: currentValue,\n        }}\n      />\n    );\n  };\n\n  private renderInput = () => {\n    const {\n      fieldOption: { label, value, type, required },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        type={type === 'string' ? 'text' : 'number'}\n        required={required}\n        placeholder={label}\n        value={this.currentValue ?? ''}\n        data-sign={value}\n        onChange={(args: any) => this._updateValue(value, args, onSave)}\n      />\n    );\n  };\n\n  private renderTextArea = () => {\n    const {\n      fieldOption: { label, value, error, helperText, required, onChange },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        required={required}\n        error={error}\n        helperText={helperText}\n        placeholder={label}\n        data-sign={value}\n        multiline\n        value={this.currentValue || ''}\n        onChange={(text: any) => {\n          this._updateValue(value, text, onSave);\n          if (onChange) onChange(text);\n        }}\n      />\n    );\n  };\n\n  private renderDatePicker = () => {\n    const {\n      fieldOption: { label, value: fieldValue, required },\n      onSave,\n    } = this.props;\n    const { fieldSize } = this.props;\n    const date = this.currentValue\n      ? getDateFromUTCDay(this.currentValue)\n      : null;\n    return (\n      <RcDatePicker\n        fullWidth\n        size={fieldSize}\n        data-sign={fieldValue}\n        required={required}\n        label={label}\n        value={date}\n        onChange={async (value) => {\n          const timeStamp = value ? setUTCTime(value) : value;\n          await this.onInputSelectChange(fieldValue)(timeStamp);\n          await onSave;\n        }}\n        formatString=\"MM/DD/YYYY\"\n      />\n    );\n  };\n\n  private renderSubjectField = () => {\n    const {\n      currentLog: { task, subjectPicklist },\n      subjectDropdownsTracker,\n      timeout,\n    } = this.props;\n    const {\n      fieldOption: { required, label },\n      onSave,\n    } = this.props;\n    return (\n      <InputSelect\n        required={required}\n        subjectPicklist={subjectPicklist}\n        subject={task.subject || ''}\n        label={label}\n        onChange={this.onInputSelectChange('subject')}\n        onSelectOption={subjectDropdownsTracker}\n        onSave={onSave}\n        timeout={timeout}\n      />\n    );\n  };\n\n  private renderSelectMenu = () => {\n    const {\n      fieldOption: {\n        label,\n        value: fieldValue,\n        picklistOptions,\n        required,\n        helperText,\n        error,\n        onChange,\n        disabled: propsDisabled = false,\n        placeholder,\n      },\n      onSave,\n    } = this.props;\n\n    const selectList = (picklistOptions || []).map((item) => {\n      let value: string = item as any;\n      let label = item !== null ? (item as any) : appDefaultValue;\n      let disabled = false;\n\n      if (item instanceof Object) {\n        value = item.value;\n        label = item.label;\n        disabled = item.disabled;\n      }\n      return {\n        label,\n        value,\n        disabled,\n      };\n    });\n\n    return (\n      <SelectField\n        data-sign={fieldValue}\n        disabled={propsDisabled}\n        placeholder={placeholder}\n        fullWidth\n        helperText={helperText}\n        error={error}\n        required={required}\n        label={label}\n        value={this.currentValue}\n        onChange={async ({ target: { value } }) => {\n          if ((picklistOptions as any)[value]) {\n            value = (picklistOptions as any)[value].value;\n          }\n          await this.onInputSelectChange(fieldValue)(value);\n          await onSave();\n          if (onChange) onChange(value);\n        }}\n        options={selectList}\n      />\n    );\n  };\n\n  private renderRadio = () => {\n    const {\n      fieldOption: { picklistOptions, label },\n      currentLog,\n      disabled: disableAllFields,\n    } = this.props;\n    const { task, disableSaveLog } = currentLog;\n    const options = [\n      {\n        value: (picklistOptions[0] as PickListOption).value,\n        label: (picklistOptions[0] as PickListOption).label,\n        disabled: disableAllFields || disableSaveLog,\n      },\n      {\n        value: (picklistOptions[1] as PickListOption).value,\n        label: (picklistOptions[1] as PickListOption).label,\n        disabled: !!(\n          !task.tickets ||\n          task.tickets?.length === 0 ||\n          (task.matches?.length > 1 && !task.whoid) ||\n          disableAllFields\n        ),\n      },\n    ];\n    const defaultOption =\n      task.option || (picklistOptions[0] as PickListOption).value;\n    return (\n      <>\n        <RcTypography\n          color=\"inherit\"\n          variant=\"caption2\"\n          component=\"div\"\n          className={styles.radioLabel}\n        >\n          {label}\n        </RcTypography>\n        <RadioField\n          value={defaultOption}\n          options={options}\n          onChange={this.onRadioChange}\n          classes={{\n            root: styles.radio,\n          }}\n        />\n      </>\n    );\n  };\n\n  private onRadioChange = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    value: string,\n  ) => {\n    const { currentLog, onUpdateCallLog } = this.props;\n    const { currentSessionId, task = {} } = currentLog;\n    await onUpdateCallLog(\n      {\n        ...currentLog,\n        task: {\n          ...task,\n          option: value,\n          ticketId: task.ticketId || task.tickets[0]?.id,\n        },\n      },\n      currentSessionId,\n    );\n  };\n\n  // this is the dropdown to render ticket lists\n  private renderTicketSelectList = () => {\n    const { currentLog, fieldOption, disabled } = this.props;\n    const { renderCondition, label } = fieldOption;\n    const { task } = currentLog;\n    // TODO: consider move this logic to zendesk\n    if (task.option !== renderCondition || task.tickets?.length === 0) {\n      return null;\n    }\n    const options =\n      task.tickets && task.tickets.length > 0\n        ? task.tickets.map((ticket: any) => {\n            return {\n              value: ticket.id,\n              label: `#${ticket.id} ${ticket.subject}`,\n              title: `#${ticket.id} ${ticket.subject}`,\n            };\n          })\n        : [];\n    return (\n      <div className={styles.ticketSelectList}>\n        <SelectField\n          labelClassName={styles.selectLabel}\n          options={options}\n          fullWidth\n          disabled={options.length === 0 || disabled}\n          value={task.ticketId}\n          label={label}\n          onChange={(\n            event: React.ChangeEvent<{ name?: string; value: unknown }>,\n          ) => this.onSelectChange(event)}\n        />\n      </div>\n    );\n  };\n\n  private onSelectChange = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>,\n  ) => {\n    const { value } = event.target;\n    const { currentLog, onUpdateCallLog } = this.props;\n    const { currentSessionId, task = {} } = currentLog;\n    onUpdateCallLog(\n      { ...currentLog, task: { ...task, ticketId: value } },\n      currentSessionId,\n    );\n  };\n\n  private onInputSelectChange = (value: string) => async (item: any) => {\n    const {\n      currentLog: { currentSessionId, task = {} },\n      onUpdateCallLog,\n      customInputDataStruct,\n    } = this.props;\n    const defaultLogData = {\n      isSaved: false,\n      task: {\n        [value]: item,\n      },\n    };\n    const logData =\n      (customInputDataStruct &&\n        customInputDataStruct({\n          value,\n          item,\n          task,\n          currentSessionId,\n        })) ||\n      defaultLogData;\n    await onUpdateCallLog(logData, currentSessionId);\n  };\n\n  private _updateValue(value: any, args: any, onSave: Function) {\n    const { debounce } = this.props;\n    this.onInputSelectChange(value)(args);\n    debounce(onSave);\n  }\n\n  private fieldsRenderMap: FieldsMap = {\n    reference: this.renderReference,\n    picklist: this.renderSelectMenu,\n    textarea: this.renderTextArea,\n    date: this.renderDatePicker,\n    string: this.renderInput,\n    integer: this.renderInput,\n    double: this.renderInput,\n    long: this.renderInput,\n    combobox: this.renderSubjectField,\n    radio: this.renderRadio,\n    ticketSelectList: this.renderTicketSelectList,\n  };\n\n  render() {\n    const {\n      fieldOption: { value, type, error, enableScrollError },\n      editSectionScrollBy,\n    } = this.props;\n    if (this.fieldsRenderMap[type] && this.fieldsRenderMap[type]()) {\n      if (error && enableScrollError && this.fieldItemRef.current) {\n        editSectionScrollBy(this.fieldItemRef.current.offsetTop);\n      }\n      return (\n        <div\n          ref={this.fieldItemRef}\n          data-sign=\"callLogField\"\n          className={styles.row}\n        >\n          {this.fieldsRenderMap[type]()}\n        </div>\n      );\n    }\n    console.warn(`Not support field type '${type}' on ${value}.`);\n    return null;\n  }\n}\n"],"file":"FieldItem.js"}