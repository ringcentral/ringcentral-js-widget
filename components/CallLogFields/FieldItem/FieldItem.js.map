{"version":3,"sources":["components/CallLogFields/FieldItem/FieldItem.tsx"],"names":["DEFAULT_FINDER","getValue","item","id","searchOption","option","text","name","toLowerCase","includes","appDefaultValue","FieldItem","renderReference","props","fieldOption","label","value","currentDisabled","disabled","fieldOnChange","onChange","onSave","onSelectViewVisible","contactSearch","currentLog","startAdornmentRender","referenceFieldOptions","currentLocale","showFoundFromServer","task","phoneNumber","currentLogCall","referenceFieldOption","console","warn","getLabel","_getValue","metadata","rightIconRender","matchedEntitiesGetter","otherEntitiesGetter","associatedEntitiesGetter","shouldShowAssociatedSection","shouldDisable","disableReason","currentOptionFinder","_searchOptionFinder","searchOptionFinder","foundFromServerEntityGetter","onBackClick","backHeaderClassName","matchedEntities","otherEntities","foundFromServerEntities","showAssociatedSection","associatedEntities","currentOption","find","title","rightIcon","undefined","currentValue","length","placeholder","valueField","args","helperText","renderInput","type","required","_updateValue","renderTextArea","error","renderDatePicker","fieldValue","fieldSize","date","Date","timeStamp","onInputSelectChange","renderSubjectField","subjectPicklist","subjectDropdownsTracker","timeout","subject","fieldItemRef","React","createRef","renderSelectMenu","picklistOptions","defaultValue","propsDisabled","selectList","map","Object","target","currentSessionId","onUpdateCallLog","customInputDataStruct","defaultLogData","isSaved","logData","fieldsRenderMap","reference","picklist","textarea","string","integer","combobox","debounce","enableScrollError","editSectionScrollBy","current","offsetTop","styles","row","Component"],"mappings":"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","sourcesContent":["import { RcDatePicker } from '@ringcentral-integration/rcui';\nimport React, { Component } from 'react';\n\nimport { setUTCTime } from '../../../lib/timeFormatHelper';\nimport InputSelect from '../../InputSelect';\nimport { CallLogFieldsProps, FieldMetadata } from '../CallLogFields.interface';\nimport { FieldItemOption, FieldsMap } from './FieldItem.interface';\nimport { FullSelectField } from './FullSelectField';\nimport { LogFieldsInput } from './LogFieldsInput';\nimport { SelectField } from './SelectField';\nimport styles from './styles.scss';\n\nconst DEFAULT_FINDER = {\n  getValue: (item) => (typeof item === 'object' ? item.id : item) || null,\n  searchOption: (option, text) =>\n    option.name && option.name.toLowerCase().includes(text.toLowerCase()),\n};\n\nconst appDefaultValue = '[None]';\n\nexport type FieldItemProps = {\n  timeout: number;\n  fieldOption: FieldItemOption;\n  onSave(): any;\n  debounce(cb: any, time2?: any): void;\n} & CallLogFieldsProps;\n\nexport class FieldItem extends Component<FieldItemProps, {}> {\n  get currentValue() {\n    const {\n      fieldOption: { value },\n    } = this.props;\n    const {\n      currentLog: { task },\n    } = this.props;\n    return task[value];\n  }\n\n  // this is click to new popup window page\n  private renderReference = () => {\n    const {\n      fieldOption: {\n        label,\n        value,\n        disabled: currentDisabled,\n        onChange: fieldOnChange,\n      },\n      onSave,\n      onSelectViewVisible,\n      contactSearch,\n    } = this.props;\n    const {\n      currentLog,\n      startAdornmentRender,\n      referenceFieldOptions,\n      currentLocale,\n      showFoundFromServer,\n    } = this.props;\n    const {\n      task,\n      currentLogCall: { phoneNumber },\n    } = currentLog;\n    const referenceFieldOption = referenceFieldOptions[value];\n    if (!referenceFieldOption) {\n      console.warn(\n        `Reference field \"${value}\" requires options in renderEditLogSection`,\n      );\n      return;\n    }\n    const {\n      getLabel,\n      getValue: _getValue,\n      onChange,\n      metadata = {} as FieldMetadata,\n      rightIconRender,\n      matchedEntitiesGetter,\n      otherEntitiesGetter,\n      associatedEntitiesGetter,\n      shouldShowAssociatedSection,\n      shouldDisable = () => false,\n      disableReason = '',\n      currentOptionFinder,\n      searchOptionFinder: _searchOptionFinder,\n      foundFromServerEntityGetter,\n      onBackClick,\n      backHeaderClassName,\n    } = referenceFieldOption;\n    const matchedEntities = matchedEntitiesGetter(currentLog);\n    const otherEntities = otherEntitiesGetter(currentLog);\n\n    const foundFromServerEntities =\n      typeof foundFromServerEntityGetter === 'function'\n        ? foundFromServerEntityGetter(currentLog)\n        : [];\n    const showAssociatedSection = shouldShowAssociatedSection\n      ? shouldShowAssociatedSection(currentLog)\n      : false;\n    const associatedEntities =\n      showAssociatedSection && associatedEntitiesGetter\n        ? associatedEntitiesGetter(currentLog)\n        : [];\n    const getValue = _getValue || DEFAULT_FINDER.getValue;\n    const searchOptionFinder =\n      _searchOptionFinder || DEFAULT_FINDER.searchOption;\n    const currentOption = [\n      ...matchedEntities,\n      ...otherEntities,\n      ...associatedEntities,\n      ...foundFromServerEntities,\n    ].find(currentOptionFinder(task));\n    const disabled = currentDisabled || shouldDisable(task);\n    const title = metadata.title || label;\n    const rightIcon = rightIconRender\n      ? rightIconRender(phoneNumber)\n      : undefined;\n\n    const currentValue =\n      getLabel(currentOption, matchedEntities.length, currentLog) || '';\n\n    return (\n      <FullSelectField\n        {...this.props}\n        backHeaderClassName={backHeaderClassName}\n        onBackClick={onBackClick}\n        title={title}\n        rightIcon={rightIcon}\n        placeholder={metadata.placeholder}\n        options={matchedEntities}\n        otherOptions={otherEntities}\n        associatedOptions={associatedEntities}\n        showAssociatedSection={showAssociatedSection}\n        startAdornment={startAdornmentRender}\n        field={value}\n        value={task[metadata.valueField] || ''}\n        onChange={async (args) => {\n          await onChange(this.props)(args);\n          await onSave();\n          if (fieldOnChange) fieldOnChange(args);\n        }}\n        onSelectViewVisible={onSelectViewVisible}\n        valueFunction={getValue}\n        renderFunction={getLabel}\n        searchOption={searchOptionFinder}\n        disabled={disabled}\n        currentLocale={currentLocale}\n        foundFromServerEntities={foundFromServerEntities}\n        contactSearch={contactSearch}\n        showFoundFromServer={showFoundFromServer}\n        TextFieldProps={{\n          helperText: disableReason,\n          value: currentValue,\n        }}\n      />\n    );\n  };\n\n  private renderInput = () => {\n    const {\n      fieldOption: { label, value, type, required },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        type={type === 'string' ? 'text' : 'number'}\n        required={required}\n        placeholder={label}\n        value={this.currentValue || ''}\n        data-sign={value}\n        onChange={(args) => this._updateValue(value, args, onSave)}\n      />\n    );\n  };\n\n  private renderTextArea = () => {\n    const {\n      fieldOption: { label, value, error, helperText, required, onChange },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        required={required}\n        error={error}\n        helperText={helperText}\n        placeholder={label}\n        data-sign={value}\n        multiline\n        value={this.currentValue || ''}\n        onChange={(text) => {\n          this._updateValue(value, text, onSave);\n          if (onChange) onChange(text);\n        }}\n      />\n    );\n  };\n\n  private renderDatePicker = () => {\n    const {\n      fieldOption: { label, value: fieldValue, required },\n      onSave,\n    } = this.props;\n    const { fieldSize } = this.props;\n    const date = this.currentValue ? new Date(this.currentValue) : null;\n    return (\n      <RcDatePicker\n        fullWidth\n        size={fieldSize}\n        data-sign={fieldValue}\n        required={required}\n        label={label}\n        date={date}\n        onChange={async (value) => {\n          const timeStamp = setUTCTime(value);\n          await this.onInputSelectChange(fieldValue)(timeStamp);\n          await onSave;\n        }}\n        formatString=\"MM/DD/YYYY\"\n      />\n    );\n  };\n\n  private renderSubjectField = () => {\n    const {\n      currentLog: { task, subjectPicklist },\n      subjectDropdownsTracker,\n      timeout,\n    } = this.props;\n    const {\n      fieldOption: { required, label },\n      onSave,\n    } = this.props;\n    return (\n      <InputSelect\n        required={required}\n        subjectPicklist={subjectPicklist}\n        subject={task.subject || ''}\n        label={label}\n        onChange={this.onInputSelectChange('subject')}\n        onSelectOption={subjectDropdownsTracker}\n        onSave={onSave}\n        timeout={timeout}\n      />\n    );\n  };\n\n  fieldItemRef = React.createRef<HTMLDivElement>();\n\n  private renderSelectMenu = () => {\n    const {\n      fieldOption: {\n        label,\n        value: fieldValue,\n        picklistOptions,\n        required,\n        defaultValue,\n        helperText,\n        error,\n        onChange,\n        disabled: propsDisabled = false,\n        placeholder,\n      },\n      onSave,\n    } = this.props;\n\n    const selectList = (picklistOptions || []).map((item) => {\n      let value: string = item as any;\n      let label =\n        item !== null ? (item as any) : defaultValue || appDefaultValue;\n      let disabled = false;\n\n      if (item instanceof Object) {\n        value = item.value;\n        label = item.label;\n        disabled = item.disabled;\n      }\n      return {\n        label,\n        value,\n        disabled,\n      };\n    });\n\n    return (\n      <SelectField\n        data-sign={fieldValue}\n        disabled={propsDisabled}\n        placeholder={placeholder}\n        fullWidth\n        helperText={helperText}\n        error={error}\n        required={required}\n        label={label}\n        value={this.currentValue || defaultValue}\n        onChange={async ({ target: { value } }) => {\n          if (picklistOptions[value]) {\n            value = picklistOptions[value].value;\n          }\n          await this.onInputSelectChange(fieldValue)(value);\n          await onSave();\n          if (onChange) onChange(value);\n        }}\n        options={selectList}\n      />\n    );\n  };\n\n  private onInputSelectChange = (value) => async (item) => {\n    const {\n      currentLog: { currentSessionId, task = {} },\n      onUpdateCallLog,\n      customInputDataStruct,\n    } = this.props;\n    const defaultLogData = {\n      isSaved: false,\n      task: {\n        [value]: item || '',\n      },\n    };\n    const logData =\n      (customInputDataStruct &&\n        customInputDataStruct({\n          value,\n          item,\n          task,\n          currentSessionId,\n        })) ||\n      defaultLogData;\n    await onUpdateCallLog(logData, currentSessionId);\n  };\n\n  private _updateValue(value, args, onSave) {\n    const { debounce } = this.props;\n    this.onInputSelectChange(value)(args);\n    debounce(onSave);\n  }\n\n  private fieldsRenderMap: FieldsMap = {\n    reference: this.renderReference,\n    picklist: this.renderSelectMenu,\n    textarea: this.renderTextArea,\n    date: this.renderDatePicker,\n    string: this.renderInput,\n    integer: this.renderInput,\n    double: this.renderInput,\n    combobox: this.renderSubjectField,\n  };\n\n  render() {\n    const {\n      fieldOption: { value, type, error, enableScrollError },\n      editSectionScrollBy,\n    } = this.props;\n\n    if (this.fieldsRenderMap[type]) {\n      if (error && enableScrollError && this.fieldItemRef.current) {\n        editSectionScrollBy(this.fieldItemRef.current.offsetTop);\n      }\n      return (\n        <div\n          ref={this.fieldItemRef}\n          data-sign=\"callLogField\"\n          className={styles.row}\n        >\n          {this.fieldsRenderMap[type]()}\n        </div>\n      );\n    }\n    console.warn(`Not support field type '${type}' on ${value}.`);\n    return null;\n  }\n}\n"],"file":"FieldItem.js"}