{"version":3,"sources":["components/CallLogFields/FieldItem/FieldItem.tsx"],"names":["DEFAULT_FINDER","getValue","item","id","searchOption","option","text","name","toLowerCase","includes","appDefaultValue","FieldItem","renderReference","props","fieldOption","label","value","currentDisabled","disabled","fieldOnChange","onChange","onSave","onSelectViewVisible","contactSearch","currentLog","startAdornmentRender","referenceFieldOptions","currentLocale","showFoundFromServer","task","phoneNumber","currentLogCall","referenceFieldOption","console","warn","getLabel","_getValue","metadata","rightIconRender","matchedEntitiesGetter","otherEntitiesGetter","associatedEntitiesGetter","shouldShowAssociatedSection","shouldDisable","disableReason","currentOptionFinder","_searchOptionFinder","searchOptionFinder","foundFromServerEntityGetter","matchedEntities","otherEntities","foundFromServerEntities","showAssociatedSection","associatedEntities","currentOption","find","title","rightIcon","undefined","placeholder","valueField","args","renderTextField","dataSign","length","renderInput","type","required","currentValue","_updateValue","renderTextArea","error","helperText","renderDatePicker","fieldValue","fieldSize","date","Date","timeStamp","onInputSelectChange","renderSubjectField","subjectPicklist","subjectDropdownsTracker","timeout","subject","renderSelectMenu","picklistOptions","defaultValue","selectList","map","Object","classes","icon","styles","select","target","i","root","currentSessionId","onUpdateCallLog","customInputDataStruct","defaultLogData","isSaved","logData","fieldsRenderMap","reference","picklist","textarea","string","integer","combobox","input","customTextField","readOnly","endAdornment","getRightButtons","debounce","row","Component"],"mappings":"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","sourcesContent":["import {\n  RcDatePicker,\n  RcLineSelect,\n  RcMenuItem,\n  RcTextField,\n} from '@ringcentral-integration/rcui';\nimport React, { Component } from 'react';\n\nimport { setUTCTime } from '../../../lib/timeFormatHelper';\nimport InputSelect from '../../InputSelect';\nimport { CustomArrowButton } from '../../Rcui/CustomArrowButton';\nimport { SelectList } from '../../SelectList';\nimport { CallLogFieldsProps, FieldMetadata } from '../CallLogFields.interface';\nimport { FieldItemOption, FieldsMap } from './FieldItem.interface';\nimport styles from './styles.scss';\nimport { LogFieldsInput } from './utils';\n\nconst DEFAULT_FINDER = {\n  getValue: (item) => (typeof item === 'object' ? item.id : item) || null,\n  searchOption: (option, text) =>\n    option.name && option.name.toLowerCase().includes(text.toLowerCase()),\n};\n\nconst appDefaultValue = '[None]';\n\nexport type FieldItemProps = {\n  timeout: number;\n  fieldOption: FieldItemOption;\n  onSave(): any;\n  debounce(cb: any, time2?: any): void;\n} & CallLogFieldsProps;\n\nexport class FieldItem extends Component<FieldItemProps, {}> {\n  get currentValue() {\n    const {\n      fieldOption: { value },\n    } = this.props;\n    const {\n      currentLog: { task },\n    } = this.props;\n    return task[value];\n  }\n\n  // this is click to new popup window page\n  private renderReference = () => {\n    const {\n      fieldOption: {\n        label,\n        value,\n        disabled: currentDisabled,\n        onChange: fieldOnChange,\n      },\n      onSave,\n      onSelectViewVisible,\n      contactSearch,\n    } = this.props;\n    const {\n      currentLog,\n      startAdornmentRender,\n      referenceFieldOptions,\n      currentLocale,\n      showFoundFromServer,\n    } = this.props;\n    const {\n      task,\n      currentLogCall: { phoneNumber },\n    } = currentLog;\n    const referenceFieldOption = referenceFieldOptions[value];\n    if (!referenceFieldOption) {\n      console.warn(\n        `Reference field \"${value}\" requires options in renderEditLogSection`,\n      );\n      return;\n    }\n    const {\n      getLabel,\n      getValue: _getValue,\n      onChange,\n      metadata = {} as FieldMetadata,\n      rightIconRender,\n      matchedEntitiesGetter,\n      otherEntitiesGetter,\n      associatedEntitiesGetter,\n      shouldShowAssociatedSection,\n      shouldDisable = () => false,\n      disableReason = '',\n      currentOptionFinder,\n      searchOptionFinder: _searchOptionFinder,\n      foundFromServerEntityGetter,\n    } = referenceFieldOption;\n    const matchedEntities = matchedEntitiesGetter(currentLog);\n    const otherEntities = otherEntitiesGetter(currentLog);\n\n    const foundFromServerEntities =\n      typeof foundFromServerEntityGetter === 'function'\n        ? foundFromServerEntityGetter(currentLog)\n        : [];\n    const showAssociatedSection = shouldShowAssociatedSection\n      ? shouldShowAssociatedSection(currentLog)\n      : false;\n    const associatedEntities =\n      showAssociatedSection && associatedEntitiesGetter\n        ? associatedEntitiesGetter(currentLog)\n        : [];\n    const getValue = _getValue || DEFAULT_FINDER.getValue;\n    const searchOptionFinder =\n      _searchOptionFinder || DEFAULT_FINDER.searchOption;\n    const currentOption = [\n      ...matchedEntities,\n      ...otherEntities,\n      ...associatedEntities,\n      ...foundFromServerEntities,\n    ].find(currentOptionFinder(task));\n    const disabled = currentDisabled || shouldDisable(task);\n    const title = metadata.title || label;\n    const rightIcon = rightIconRender\n      ? rightIconRender(phoneNumber)\n      : undefined;\n    return (\n      <SelectList\n        {...this.props}\n        title={title}\n        rightIcon={rightIcon}\n        placeholder={metadata.placeholder}\n        options={matchedEntities}\n        otherOptions={otherEntities}\n        associatedOptions={associatedEntities}\n        showAssociatedSection={showAssociatedSection}\n        startAdornment={startAdornmentRender}\n        field={value}\n        value={task[metadata.valueField] || ''}\n        onChange={async (args) => {\n          await onChange(this.props)(args);\n          await onSave();\n          if (fieldOnChange) fieldOnChange(args);\n        }}\n        onSelectViewVisible={onSelectViewVisible}\n        valueFunction={getValue}\n        renderFunction={getLabel}\n        searchOption={searchOptionFinder}\n        disabled={disabled}\n        currentLocale={currentLocale}\n        foundFromServerEntities={foundFromServerEntities}\n        contactSearch={contactSearch}\n        showFoundFromServer={showFoundFromServer}\n      >\n        {this.renderTextField({\n          disabled,\n          title,\n          dataSign: value,\n          disableReason,\n          value: getLabel(currentOption, matchedEntities.length, currentLog),\n        })}\n      </SelectList>\n    );\n  };\n\n  private renderInput = () => {\n    const {\n      fieldOption: { label, value, type, required },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        type={type === 'string' ? 'text' : 'number'}\n        required={required}\n        placeholder={label}\n        value={this.currentValue || ''}\n        data-sign={value}\n        onChange={(args) => this._updateValue(value, args, onSave)}\n      />\n    );\n  };\n\n  private renderTextArea = () => {\n    const {\n      fieldOption: { label, value, error, helperText, required, onChange },\n      onSave,\n    } = this.props;\n    return (\n      <LogFieldsInput\n        label={label}\n        required={required}\n        error={error}\n        helperText={helperText}\n        placeholder={label}\n        data-sign={value}\n        multiline\n        value={this.currentValue || ''}\n        onChange={(text) => {\n          this._updateValue(value, text, onSave);\n          if (onChange) onChange(text);\n        }}\n      />\n    );\n  };\n\n  private renderDatePicker = () => {\n    const {\n      fieldOption: { label, value: fieldValue, required },\n      onSave,\n    } = this.props;\n    const { fieldSize } = this.props;\n    const date = this.currentValue ? new Date(this.currentValue) : null;\n    return (\n      <RcDatePicker\n        fullWidth\n        size={fieldSize}\n        data-sign={fieldValue}\n        required={required}\n        label={label}\n        date={date}\n        onChange={async (value) => {\n          const timeStamp = setUTCTime(value);\n          await this.onInputSelectChange(fieldValue)(timeStamp);\n          await onSave;\n        }}\n        formatString=\"MM/DD/YYYY\"\n      />\n    );\n  };\n\n  private renderSubjectField = () => {\n    const {\n      currentLog: { task, subjectPicklist },\n      subjectDropdownsTracker,\n      timeout,\n    } = this.props;\n    const {\n      fieldOption: { required },\n      onSave,\n    } = this.props;\n    return (\n      <InputSelect\n        required={required}\n        subjectPicklist={subjectPicklist}\n        subject={task.subject || ''}\n        onChange={this.onInputSelectChange('subject')}\n        onSelectOption={subjectDropdownsTracker}\n        onSave={onSave}\n        timeout={timeout}\n      />\n    );\n  };\n\n  private renderSelectMenu = () => {\n    const {\n      fieldOption: {\n        label,\n        value: fieldValue,\n        picklistOptions,\n        required,\n        defaultValue,\n        helperText,\n        error,\n        onChange,\n      },\n      onSave,\n    } = this.props;\n\n    const selectList = (picklistOptions || []).map((item) => {\n      let value: string = item as any;\n      let label =\n        item !== null ? (item as any) : defaultValue || appDefaultValue;\n      if (item instanceof Object) {\n        value = item.value;\n        label = item.label;\n      }\n      return {\n        label,\n        value,\n      };\n    });\n\n    return (\n      <RcLineSelect\n        data-sign={fieldValue}\n        SelectProps={{\n          classes: {\n            icon: styles.select,\n          },\n        }}\n        fullWidth\n        helperText={helperText}\n        error={error}\n        required={required}\n        label={label}\n        value={this.currentValue || defaultValue || ''}\n        onChange={async ({ target: { value } }) => {\n          if (picklistOptions[value]) {\n            value = picklistOptions[value].value;\n          }\n          await this.onInputSelectChange(fieldValue)(value);\n          await onSave();\n          if (onChange) onChange(value);\n        }}\n      >\n        {selectList.map((item, i) => (\n          <RcMenuItem\n            key={i}\n            value={`${item.value}`}\n            data-sign={`option${i}`}\n            classes={{ root: styles.item }}\n          >\n            {item.label}\n          </RcMenuItem>\n        ))}\n      </RcLineSelect>\n    );\n  };\n\n  private renderTextField({ disabled, title, dataSign, value, disableReason }) {\n    return (\n      <RcTextField\n        title={value}\n        disabled={disabled}\n        data-sign={dataSign}\n        InputProps={{\n          classes: {\n            input: styles.customTextField,\n          },\n          readOnly: true,\n          endAdornment: this.getRightButtons(disabled),\n        }}\n        helperText={disableReason}\n        label={title}\n        value={value || ''}\n        fullWidth\n        clearBtn={false}\n      />\n    );\n  }\n\n  private onInputSelectChange = (value) => async (item) => {\n    const {\n      currentLog: { currentSessionId, task = {} },\n      onUpdateCallLog,\n      customInputDataStruct,\n    } = this.props;\n    const defaultLogData = {\n      isSaved: false,\n      task: {\n        [value]: item || '',\n      },\n    };\n    const logData =\n      (customInputDataStruct &&\n        customInputDataStruct({\n          value,\n          item,\n          task,\n          currentSessionId,\n        })) ||\n      defaultLogData;\n    await onUpdateCallLog(logData, currentSessionId);\n  };\n\n  private _updateValue(value, args, onSave) {\n    const { debounce } = this.props;\n    this.onInputSelectChange(value)(args);\n    debounce(onSave);\n  }\n\n  private getRightButtons(disabled) {\n    return <CustomArrowButton disabled={disabled} />;\n  }\n\n  private fieldsRenderMap: FieldsMap = {\n    reference: this.renderReference,\n    picklist: this.renderSelectMenu,\n    textarea: this.renderTextArea,\n    date: this.renderDatePicker,\n    string: this.renderInput,\n    integer: this.renderInput,\n    double: this.renderInput,\n    combobox: this.renderSubjectField,\n  };\n\n  render() {\n    const {\n      fieldOption: { value, type },\n    } = this.props;\n\n    if (this.fieldsRenderMap[type]) {\n      return (\n        <div data-sign=\"callLogField\" className={styles.row}>\n          {this.fieldsRenderMap[type]()}\n        </div>\n      );\n    }\n    console.warn(`Not support field type '${type}' on ${value}.`);\n    return null;\n  }\n}\n"],"file":"FieldItem.js"}