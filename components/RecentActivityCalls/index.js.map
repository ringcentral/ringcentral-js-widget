{"version":3,"sources":["components/RecentActivityCalls/index.js"],"names":["getCurrentStatus","currentLocale","direction","result","status","i18n","getString","icon","dynamicsFont","missed","isMissedCall","inbound","outbound","CallItem","call","dateTimeFormatter","duration","startTime","utcTimestamp","Date","getTime","styles","callItem","dl","missedCall","iconWrapper","callIcon","time","propTypes","PropTypes","object","isRequired","func","string","RecentActivityCalls","nextProps","props","calls","isCallsLoaded","callListView","spinner","length","map","id","noRecords","Component","array","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport formatDuration from '../../lib/formatDuration';\nimport Spinner from '../Spinner';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction getCurrentStatus({ direction, result }, currentLocale) {\n  if (direction === 'Inbound') {\n    if (result === 'Missed') {\n      return {\n        status: i18n.getString('missed', currentLocale),\n        icon: dynamicsFont.missed,\n        isMissedCall: true,\n      };\n    }\n    return {\n      status: i18n.getString('inBound', currentLocale),\n      icon: dynamicsFont.inbound,\n    };\n  }\n  return {\n    status: i18n.getString('outBound', currentLocale),\n    icon: dynamicsFont.outbound,\n  };\n}\n\nfunction CallItem({ call, dateTimeFormatter, currentLocale }) {\n  let { duration, startTime } = call;\n  const { status, icon, isMissedCall } = getCurrentStatus(call, currentLocale);\n  startTime = dateTimeFormatter({\n    utcTimestamp: new Date(startTime).getTime(),\n  });\n  duration = formatDuration(duration);\n  return (\n    <div className={styles.callItem}>\n      <dl\n        className={classnames(styles.dl, isMissedCall ? styles.missedCall : '')}\n      >\n        <dt className={styles.status} title={status}>\n          <span className={styles.iconWrapper}>\n            <i className={classnames(icon, styles.callIcon)} title={status} />\n          </span>\n          <span title={status}>{status}</span>\n          <small className={styles.duration} title={duration}>\n            {duration}\n          </small>\n        </dt>\n        <dd className={styles.time} title={startTime}>\n          {startTime}\n        </dd>\n      </dl>\n    </div>\n  );\n}\n\nCallItem.propTypes = {\n  call: PropTypes.object.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default class RecentActivityCalls extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (\n      nextProps.currentLocale !== this.props.currentLocale ||\n      nextProps.calls !== this.props.calls ||\n      nextProps.isCallsLoaded !== this.props.isCallsLoaded\n    );\n  }\n\n  render() {\n    const {\n      currentLocale,\n      calls,\n      isCallsLoaded,\n      dateTimeFormatter,\n    } = this.props;\n    let callListView = null;\n    if (!isCallsLoaded) {\n      callListView = <Spinner className={styles.spinner} ringWidth={4} />;\n    } else if (calls.length > 0) {\n      callListView = calls.map((call) => (\n        <CallItem\n          key={call.id}\n          call={call}\n          currentLocale={currentLocale}\n          dateTimeFormatter={dateTimeFormatter}\n        />\n      ));\n    } else {\n      callListView = (\n        <p className={styles.noRecords}>\n          {i18n.getString('noRecords', currentLocale)}\n        </p>\n      );\n    }\n    return <div className={styles.calls}>{callListView}</div>;\n  }\n}\n\nRecentActivityCalls.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  calls: PropTypes.array.isRequired,\n  isCallsLoaded: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n};\n"],"file":"index.js"}