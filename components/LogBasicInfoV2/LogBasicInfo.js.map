{"version":3,"sources":["components/LogBasicInfoV2/LogBasicInfo.js"],"names":["callIconMap","callResults","missed","dynamicsFont","callDirections","inbound","outbound","telephonyStatuses","ringing","callHover","getInfoStatus","status","onHold","callConnected","LogBasicInfo","props","currentLog","call","logName","formatPhone","currentLocale","dataSign","disableLinks","dateTimeFormatter","isWide","className","recordStatus","showRecordingIndicator","direction","to","from","startTime","offset","duration","result","telephonyStatus","getDurationElm","durationElement","i18n","getString","number","phoneNumber","extensionNumber","formatNumber","statusI18n","isRinging","infoStatus","isRecording","recordStatusEnum","recording","styles","root","classic","top","leftSectionInfo","icon","recordingIndicator","callDisplay","info","follow","time","utcTimestamp","locale","propTypes","PropTypes","string","func","object","bool","isRequired","defaultProps","value","undefined"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport callResults from '@ringcentral-integration/commons/enums/callResults';\nimport telephonyStatuses from '@ringcentral-integration/commons/enums/telephonyStatus';\nimport recordStatusEnum from '@ringcentral-integration/commons/modules/Webphone/recordStatus';\nimport { isMissed } from '@ringcentral-integration/commons/lib/callLogHelpers';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DurationCounter from '../DurationCounter';\nimport { RecordingIndicator } from '../RecordingIndicator';\nimport formatDuration from '../../lib/formatDuration';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { CallIcon } from './CallIcon';\nimport { ShinyBar } from './ShinyBar';\n\nconst callIconMap = {\n  [callResults.missed]: dynamicsFont.missed,\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n  [telephonyStatuses.ringing]: dynamicsFont.callHover,\n};\n\nfunction getInfoStatus(status) {\n  switch (status) {\n    case telephonyStatuses.onHold:\n      return 'onHold';\n    case telephonyStatuses.callConnected:\n    case telephonyStatuses.ringing:\n      return 'active';\n    default:\n      return 'callEnd';\n  }\n}\n\nexport default function LogBasicInfo(props) {\n  const {\n    currentLog: { call, logName },\n    formatPhone,\n    currentLocale,\n    dataSign,\n    disableLinks,\n    dateTimeFormatter,\n    isWide,\n    className,\n    recordStatus,\n    showRecordingIndicator,\n  } = props;\n  if (!call) return null;\n  const {\n    direction,\n    to,\n    from,\n    startTime,\n    offset,\n    duration,\n    result,\n    telephonyStatus,\n  } = call;\n\n  function getDurationElm() {\n    let durationElement = null;\n    if (typeof duration === 'undefined') {\n      durationElement = disableLinks ? (\n        i18n.getString('unavailable', currentLocale)\n      ) : (\n        <DurationCounter startTime={startTime} offset={offset} />\n      );\n    } else {\n      durationElement = formatDuration(duration);\n    }\n    return durationElement;\n  }\n\n  const number =\n    direction === callDirections.outbound\n      ? to && (to.phoneNumber || to.extensionNumber)\n      : from && (from.phoneNumber || from.extensionNumber);\n  const formatNumber = formatPhone(number);\n  const missed = isMissed(call);\n\n  const durationElement = getDurationElm();\n  const status = result || telephonyStatus;\n\n  const statusI18n = i18n.getString(status, currentLocale);\n\n  const isRinging = status === telephonyStatuses.ringing;\n\n  const infoStatus = getInfoStatus(status);\n\n  const isRecording = recordStatus === recordStatusEnum.recording;\n\n  return (\n    <div\n      data-sign=\"logSection\"\n      className={classnames(\n        styles.root,\n        !isWide && styles.classic,\n        styles[infoStatus],\n        className,\n      )}\n    >\n      <ShinyBar\n        className={styles.top}\n        isRinging={isRinging}\n        status={infoStatus}\n      />\n      <div data-sign={dataSign} className={styles.leftSectionInfo}>\n        <CallIcon\n          title={\n            missed\n              ? i18n.getString(callResults.missed, currentLocale)\n              : i18n.getString(direction, currentLocale)\n          }\n          iconClassName={classnames(\n            styles.icon,\n            callIconMap[missed ? callResults.missed : direction],\n          )}\n        />\n        {showRecordingIndicator && isRecording && (\n          <RecordingIndicator customClass={styles.recordingIndicator} />\n        )}\n        <ul className={styles.callDisplay}>\n          <li className={styles.info}>\n            <p className={styles.logName} title={logName} data-sign=\"logName\">\n              {logName}\n            </p>\n            <p className={classnames(styles.follow, styles['text-ellipsis'])}>\n              <span title={formatNumber} data-sign=\"phoneNumber\">\n                {formatNumber}\n              </span>\n              <span data-sign=\"callStatus\" title={statusI18n}>\n                {statusI18n}\n              </span>\n            </p>\n          </li>\n          <li className={styles['flex-fill']} />\n          <li className={classnames(styles.follow, styles.time)}>\n            <p>{durationElement}</p>\n            <p>\n              {dateTimeFormatter({\n                utcTimestamp: startTime,\n                locale: currentLocale,\n              })}\n            </p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nLogBasicInfo.propTypes = {\n  currentLocale: PropTypes.string,\n  formatPhone: PropTypes.func,\n  currentLog: PropTypes.object,\n  dataSign: PropTypes.string,\n  disableLinks: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  isWide: PropTypes.bool,\n  className: PropTypes.string,\n  recordStatus: PropTypes.string,\n  showRecordingIndicator: PropTypes.bool,\n};\n\nLogBasicInfo.defaultProps = {\n  formatPhone: (value) => value,\n  currentLog: {},\n  dataSign: undefined,\n  disableLinks: false,\n  isWide: true,\n  currentLocale: 'en',\n  className: null,\n  recordStatus: '',\n  showRecordingIndicator: false,\n};\n"],"file":"LogBasicInfo.js"}