{"version":3,"sources":["components/BasicCallInfo/CallInfoList/CallInfoList.tsx"],"names":["CallInfoList","callInfos","className","length","map","i","name","content"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;AAOO,IAAMA,YAAwD,GAAG,SAA3DA,YAA2D,OAGlE;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,SACI,QADJA,SACI;AACJ,MAAI,CAACD,SAAD,IAAcA,SAAS,CAACE,MAAV,KAAqB,CAAvC,EAA0C,OAAO,IAAP;AAE1C,sBACE;AAAK,iBAAU,UAAf;AAA0B,IAAA,SAAS,EAAED;AAArC,KACGD,SAAS,CAACG,GAAV,CAAc,iBAAoBC,CAApB;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,OAAT,SAASA,OAAT;AAAA,wBACb,gCAAC,kBAAD;AAAU,MAAA,GAAG,EAAEF,CAAf;AAAkB,MAAA,IAAI,EAAEC,IAAxB;AAA8B,MAAA,OAAO,EAAEC;AAAvC,MADa;AAAA,GAAd,CADH,CADF;AAOD,CAbM","sourcesContent":["import React from 'react';\n\nimport { CallInfo, CallInfoProps } from '../CallInfo';\n\nexport interface CallInfoListProps {\n  callInfos?: Array<CallInfoProps>;\n  className?: string;\n}\n\nexport const CallInfoList: React.FunctionComponent<CallInfoListProps> = ({\n  callInfos,\n  className,\n}) => {\n  if (!callInfos || callInfos.length === 0) return null;\n\n  return (\n    <div data-sign=\"infoList\" className={className}>\n      {callInfos.map(({ name, content }, i) => (\n        <CallInfo key={i} name={name} content={content} />\n      ))}\n    </div>\n  );\n};\n"],"file":"CallInfoList.js"}