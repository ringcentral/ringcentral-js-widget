{"version":3,"sources":["components/BackHeaderV2/index.tsx"],"names":["initWidth","BackHeader","onBackClick","title","rightIcon","className","currentLocale","isWide","backIcon","maxWidth","setMaxWidth","rightRef","isClassic","current","clientWidth","rootClass","styles","root","classic","back","TOOLTIP_DEFAULT_DELAY_TIME","defaultProps","chevronLeftSvg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG,EAAlB;;AAYA,IAAMC,UAAsC,GAAG,SAAzCA,UAAyC,OAQzC;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,kBAC4B,qBAASR,SAAT,CAD5B;AAAA;AAAA,MACGS,QADH;AAAA,MACaC,WADb;;AAEJ,MAAMC,QAAQ,GAAG,oBAAjB;AACA,MAAMC,SAAS,GAAG,CAACL,MAAnB;AACA,wBAAU,YAAM;AACd,QAAIK,SAAJ,EAAe;AACb;AACAF,MAAAA,WAAW,CAACV,SAAS,IAAIW,QAAQ,CAACE,OAAT,CAAiBC,WAAjB,GAA+B,EAAnC,CAAV,CAAX;AACD;AACF,GALD,EAKG,CAACR,aAAD,EAAgBM,SAAhB,CALH;AAMA,MAAMG,SAAS,GAAG,4BAChBC,mBAAOC,IADS,EAEhBL,SAAS,IAAII,mBAAOE,OAFJ,EAGhBb,SAHgB,CAAlB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEU;AAAhB,kBACE,gCAAC,kBAAD;AACE,IAAA,SAAS,EAAE,4BAAWC,mBAAOG,IAAlB,CADb;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,EAAEX,QAJV;AAKE,iBAAU,YALZ;AAME,IAAA,OAAO,EAAEN;AANX,IADF,eASE;AAAK,IAAA,SAAS,EAAEc,mBAAOb;AAAvB,KACGA,KAAK,gBACJ,gCAAC,gBAAD;AAAS,IAAA,KAAK,EAAEA,KAAhB;AAAuB,IAAA,UAAU,EAAEiB;AAAnC,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAQ,EAAEG,SAAS,GAAGH,QAAH,GAAc;AAAnC;AAAb,KACGN,KADH,CADF,CADI,GAMF,IAPN,CATF,eAkBE;AAAK,IAAA,GAAG,EAAEQ;AAAV,KAAqBP,SAArB,CAlBF,CADF;AAsBD,CA7CD;;AA+CAH,UAAU,CAACoB,YAAX,GAA0B;AACxBlB,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE,IAFa;AAGxBI,EAAAA,QAAQ,EAAEc,4BAHc;AAIxBjB,EAAAA,SAAS,EAAE,IAJa;AAKxBC,EAAAA,aAAa,EAAE,OALS;AAMxBC,EAAAA,MAAM,EAAE;AANgB,CAA1B;eASeN,U","sourcesContent":["import { RcIconButton, RcIconButtonProps } from '@ringcentral-integration/rcui';\nimport chevronLeftSvg from '@ringcentral-integration/rcui/icons/icon-chevron_left.svg';\nimport classnames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Tooltip } from '../Rcui/Tooltip';\n\nimport styles from './styles.scss';\nimport { TOOLTIP_DEFAULT_DELAY_TIME } from '../../lib/toolTipDelayTime';\n\nconst initWidth = 67;\n\ntype BackHeaderProps = {\n  onBackClick: (...args: any[]) => any;\n  title?: string;\n  backIcon?: RcIconButtonProps['symbol'];\n  rightIcon?: React.ReactNode;\n  className?: string;\n  currentLocale?: string;\n  isWide?: boolean;\n};\n\nconst BackHeader: React.SFC<BackHeaderProps> = ({\n  onBackClick,\n  title,\n  rightIcon,\n  className,\n  currentLocale,\n  isWide,\n  backIcon,\n}) => {\n  const [maxWidth, setMaxWidth] = useState(initWidth);\n  const rightRef = useRef<HTMLDivElement>();\n  const isClassic = !isWide;\n  useEffect(() => {\n    if (isClassic) {\n      // this smallest clientWidth is 62.\n      setMaxWidth(initWidth - (rightRef.current.clientWidth - 62));\n    }\n  }, [currentLocale, isClassic]);\n  const rootClass = classnames(\n    styles.root,\n    isClassic && styles.classic,\n    className,\n  );\n  return (\n    <div className={rootClass}>\n      <RcIconButton\n        className={classnames(styles.back)}\n        variant=\"round\"\n        size=\"small\"\n        symbol={backIcon}\n        data-sign=\"backButton\"\n        onClick={onBackClick}\n      />\n      <div className={styles.title}>\n        {title ? (\n          <Tooltip title={title} enterDelay={TOOLTIP_DEFAULT_DELAY_TIME}>\n            <span style={{ maxWidth: isClassic ? maxWidth : null }}>\n              {title}\n            </span>\n          </Tooltip>\n        ) : null}\n      </div>\n      <div ref={rightRef}>{rightIcon}</div>\n    </div>\n  );\n};\n\nBackHeader.defaultProps = {\n  title: '',\n  rightIcon: null,\n  backIcon: chevronLeftSvg,\n  className: null,\n  currentLocale: 'en-US',\n  isWide: true,\n};\n\nexport default BackHeader;\n"],"file":"index.js"}