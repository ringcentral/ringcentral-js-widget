{"version":3,"sources":["components/TransferCallRecipient/InternalPanel.tsx"],"names":["InternalPanel","currentLocale","transferAgentList","goBack","transferAgentListUpdateTTL","fetchAgentList","transferAgentId","changeTransferAgentId","searchAgent","isWide","timerId","setInterval","clearInterval","i18n","getString","scrollCheck","map","agent","i","agentId","available","status","statusText","internalTransferName","styles","agentItem","content","undefined","agentName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAeA,IAAMA,aAAoD,GAAG,SAAvDA,aAAuD,OAUvD;AAAA,MATJC,aASI,QATJA,aASI;AAAA,MARJC,iBAQI,QARJA,iBAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,0BAMI,QANJA,0BAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,MAHJC,qBAGI,QAHJA,qBAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,wBAAU,YAAM;AACd,QAAMC,OAAO,GAAGC,WAAW,CAAC,YAAM;AAChCN,MAAAA,cAAc;AACf,KAF0B,EAExBD,0BAFwB,CAA3B;AAGA,WAAO;AAAA,aAAMQ,aAAa,CAACF,OAAD,CAAnB;AAAA,KAAP;AACD,GALD,EAKG,EALH;AAMA,sBACE,gCAAC,oCAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,WAAW,EAAEP,MAFf;AAGE,IAAA,KAAK,EAAEU,iBAAKC,SAAL,CAAe,uBAAf,EAAwCb,aAAxC,CAHT;AAIE,IAAA,WAAW,EAAEY,iBAAKC,SAAL,CAAe,QAAf,EAAyBb,aAAzB,CAJf;AAKE,IAAA,OAAO,EAAEC,iBALX;AAME,IAAA,YAAY,EAAEM,WANhB;AAOE,IAAA,aAAa,EAAEP,aAPjB;AAQE,IAAA,YAAY,EAAE,sBACZC,iBADY,EAEZa,WAFY,EAGT;AACH,0BACE,kEACGb,iBAAiB,CAACc,GAAlB,CAAsB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAAA,YAC3BC,OAD2B,GACJF,KADI,CAC3BE,OAD2B;AAAA,YAClBC,SADkB,GACJH,KADI,CAClBG,SADkB;AAEnC,YAAMC,MAAM,GAAGD,SAAS,GAAG,WAAH,GAAiB,aAAzC;;AACA,YAAME,UAAU,GAAGT,iBAAKC,SAAL,CAAeO,MAAf,EAAuBpB,aAAvB,CAAnB;;AACA,YAAMsB,oBAAoB,GAAG,+CAAwBN,KAAxB,CAA7B;AACA,4BACE,gCAAC,gDAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBAAMV,qBAAqB,CAACY,OAAD,CAA3B;AAAA,WADX;AAEE,UAAA,QAAQ,EAAEA,OAAO,KAAKb,eAFxB;AAGE,UAAA,GAAG,EAAEY,CAHP;AAIE,UAAA,WAAW,EAAEH,WAJf;AAKE,uBAAU;AALZ,wBAOE;AAAK,UAAA,SAAS,EAAES,mBAAOC;AAAvB,wBACE;AAAK,UAAA,SAAS,EAAED,mBAAOH,MAAP;AAAhB,UADF,eAEE;AAAK,UAAA,SAAS,EAAEZ,MAAM,GAAGe,mBAAOE,OAAV,GAAoBC;AAA1C,wBACE;AAAG,UAAA,SAAS,EAAEH,mBAAOI;AAArB,WAAiCL,oBAAjC,CADF,eAEE;AAAG,UAAA,SAAS,EAAEC,mBAAOF;AAArB,WAAkCA,UAAlC,CAFF,CAFF,CAPF,CADF;AAiBD,OAtBA,CADH,CADF;AA2BD;AAvCH,IADF;AA2CD,CA5DD","sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n  EvTransferCallUIFunctions,\n  EvTransferCallUIProps,\n} from '../../interfaces';\nimport { getInternalTransferName } from '../../modules/EvTransferCallUI';\nimport { ListItemWithScrollCheck } from '../ListItemWithScrollCheck';\nimport { SearchSelectField } from '../SearchSelectField';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type InternalPanelProps = Pick<\n  EvTransferCallUIProps & EvTransferCallUIFunctions,\n  | 'currentLocale'\n  | 'goBack'\n  | 'transferAgentList'\n  | 'transferAgentListUpdateTTL'\n  | 'fetchAgentList'\n  | 'transferAgentId'\n  | 'changeTransferAgentId'\n  | 'searchAgent'\n  | 'isWide'\n>;\n\nconst InternalPanel: FunctionComponent<InternalPanelProps> = ({\n  currentLocale,\n  transferAgentList,\n  goBack,\n  transferAgentListUpdateTTL,\n  fetchAgentList,\n  transferAgentId,\n  changeTransferAgentId,\n  searchAgent,\n  isWide,\n}) => {\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      fetchAgentList();\n    }, transferAgentListUpdateTTL);\n    return () => clearInterval(timerId);\n  }, []);\n  return (\n    <SearchSelectField\n      open\n      onBackClick={goBack}\n      title={i18n.getString('internalCallRecipient', currentLocale)}\n      placeholder={i18n.getString('search', currentLocale)}\n      options={transferAgentList}\n      searchOption={searchAgent}\n      currentLocale={currentLocale}\n      listRenderer={(\n        transferAgentList: EvTransferCallUIProps['transferAgentList'],\n        scrollCheck,\n      ) => {\n        return (\n          <>\n            {transferAgentList.map((agent, i) => {\n              const { agentId, available } = agent;\n              const status = available ? 'available' : 'unavailable';\n              const statusText = i18n.getString(status, currentLocale);\n              const internalTransferName = getInternalTransferName(agent);\n              return (\n                <ListItemWithScrollCheck\n                  onClick={() => changeTransferAgentId(agentId)}\n                  selected={agentId === transferAgentId}\n                  key={i}\n                  scrollCheck={scrollCheck}\n                  data-sign=\"agentItem\"\n                >\n                  <div className={styles.agentItem}>\n                    <div className={styles[status]} />\n                    <div className={isWide ? styles.content : undefined}>\n                      <p className={styles.agentName}>{internalTransferName}</p>\n                      <p className={styles.statusText}>{statusText}</p>\n                    </div>\n                  </div>\n                </ListItemWithScrollCheck>\n              );\n            })}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport { InternalPanel };\n"],"file":"InternalPanel.js"}