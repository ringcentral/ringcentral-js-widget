{"version":3,"sources":["components/TransferCallRecipient/InternalPanel.ut.tsx"],"names":["wrapper","currentLocale","defaultTransferAgentList","agentId","available","username","firstName","lastName","defaultSearchAgent","options","text","blankRegex","name","replace","toLowerCase","includes","setup","goBack","transferAgentListUpdateTTL","fetchAgentList","transferAgentId","changeTransferAgentId","searchAgent","transferAgentList","getAgentItems","find","at","getSearchInput","UTAgentListCheckBackButton","jest","fn","simulate","expect","toBeCalled","UTAgentListAutoSync","useFakeTimers","advanceTimersByTime","toHaveBeenCalledTimes","useRealTimers","UTAgentListDisplayAndHighlight","agentItems","length","toBe","selectedIndex","findIndex","x","prop","UTAgentListSearchCases","title","internalList","searchText","matchedResult","UTAgentListSearch","map","eventObj","target","value","Array","isArray","toHaveLength","resultItems","el","trim","toStrictEqual","UTCheckInternalPanelRender","internalOptions","dataSign","not","toBeUndefined","UTCheckTransferAgentSelectCases","internalItem","recipientDisplay","UTCheckTransferAgentSelect","selectIndex","toBeCalledWith","UTCheckAgentListRenderCases","agentState","stateColor","recipient","availableStatus","statusColor","UTCheckAgentListRender","agentItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StepFunction } from 'crius-test';\nimport { RcThemeProvider } from '@ringcentral-integration/rcui';\nimport { mount } from 'enzyme';\nimport { InternalPanel, InternalPanelProps } from './InternalPanel';\nimport { EvDirectAgentListItem } from '../../lib/EvClient';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst defaultTransferAgentList = [\n  {\n    agentId: '10002',\n    available: true,\n    username: 'amy liu',\n    firstName: 'amy',\n    lastName: 'liu',\n  },\n  {\n    agentId: '10003',\n    available: true,\n    username: 'susie liu',\n    firstName: 'susie',\n    lastName: 'liu',\n  },\n  {\n    agentId: '10004',\n    available: true,\n    username: 'geroge lin',\n    firstName: 'geroge',\n    lastName: 'lin',\n  },\n  {\n    agentId: '10005',\n    available: false,\n    username: 'amy liu',\n    firstName: 'amy',\n    lastName: 'liu',\n  },\n];\n\nconst defaultSearchAgent = (options: EvDirectAgentListItem, text: string) => {\n  const firstName = options.firstName ?? '';\n  const lastName = options.lastName ?? '';\n  const blankRegex = /\\s+/g;\n  const name = `${firstName}${lastName}`.replace(blankRegex, '').toLowerCase();\n  return text && name.includes(text.replace(blankRegex, '').toLowerCase());\n};\n\nfunction setup({\n  goBack = () => {},\n  transferAgentListUpdateTTL = 100,\n  fetchAgentList = () => {},\n  transferAgentId = '',\n  changeTransferAgentId = () => {},\n  searchAgent = defaultSearchAgent,\n  transferAgentList = defaultTransferAgentList,\n}: Partial<InternalPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <InternalPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        transferAgentList={transferAgentList}\n        transferAgentListUpdateTTL={transferAgentListUpdateTTL}\n        fetchAgentList={fetchAgentList}\n        transferAgentId={transferAgentId}\n        changeTransferAgentId={changeTransferAgentId}\n        searchAgent={searchAgent}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nconst getAgentItems = () =>\n  wrapper\n    .find('RcList')\n    .at(0)\n    .find('[data-sign=\"agentItem\"]');\n\nconst getSearchInput = () =>\n  wrapper\n    .find('RcOutlineTextField')\n    .at(0)\n    .find('input');\n\nexport const UTAgentListCheckBackButton: StepFunction = () => {\n  const goBack = jest.fn(() => {});\n  wrapper = setup({ goBack });\n  wrapper\n    .find('[data-sign=\"backButton\"]')\n    .at(0)\n    .find('button')\n    .simulate('click');\n  expect(goBack).toBeCalled();\n};\n\nexport const UTAgentListAutoSync: StepFunction = () => {\n  jest.useFakeTimers();\n  const fetchAgentList = jest.fn(() => {});\n  const transferAgentListUpdateTTL = 100;\n  wrapper = setup({ fetchAgentList, transferAgentListUpdateTTL });\n  jest.advanceTimersByTime(210);\n  expect(fetchAgentList).toHaveBeenCalledTimes(2);\n  jest.useRealTimers();\n};\n\nexport const UTAgentListDisplayAndHighlight: StepFunction = () => {\n  const transferAgentId = '10003';\n  wrapper = setup({\n    transferAgentId,\n  });\n  const agentItems = getAgentItems();\n  expect(agentItems.length).toBe(defaultTransferAgentList.length);\n  const selectedIndex = defaultTransferAgentList.findIndex(\n    (x) => x.agentId === transferAgentId,\n  );\n  expect(agentItems.at(selectedIndex).prop('selected')).toBe(true);\n};\n\nexport const UTAgentListSearchCases = [\n  {\n    title: 'AgentList can be searched',\n    internalList: ['DukeTest1', 'DukeTest2', 'EV demo'],\n    searchText: 'Duke',\n    matchedResult: ['DukeTest1', 'DukeTest2'],\n  },\n  {\n    title: 'AgentList can be searched',\n    internalList: ['DukeTest1', 'DukeTest2', 'EV demo'],\n    searchText: '2',\n    matchedResult: ['DukeTest2'],\n  },\n  {\n    title: 'AgentList can be searched',\n    internalList: ['DukeTest1', 'DukeTest2', 'EV demo'],\n    searchText: 'AA',\n    matchedResult: 'No result found for \"AA\"',\n  },\n];\n\ninterface UTAgentListSearchProps {\n  internalList: string[];\n  searchText: string;\n  matchedResult: string[] | string;\n}\n\nexport const UTAgentListSearch: StepFunction<UTAgentListSearchProps> = ({\n  internalList,\n  searchText,\n  matchedResult,\n}) => {\n  const searchAgent = jest.fn(defaultSearchAgent);\n  wrapper = setup({\n    searchAgent,\n    transferAgentList: internalList.map((name) => ({\n      firstName: name,\n      lastName: '',\n    })),\n  });\n  const eventObj = { target: { value: searchText } };\n  getSearchInput().simulate('change', eventObj);\n  const agentItems = getAgentItems();\n  if (Array.isArray(matchedResult)) {\n    expect(agentItems).toHaveLength(matchedResult.length);\n    const resultItems = agentItems.map((el) =>\n      el\n        .find('.agentName')\n        .text()\n        .trim(),\n    );\n    expect(resultItems).toStrictEqual(matchedResult);\n  } else {\n    expect(agentItems).toHaveLength(0);\n    expect(wrapper.find('[data-sign=\"searchResult\"]').text()).toBe(\n      `No result found for \"${searchText}\"`,\n    );\n  }\n};\n\ninterface UTCheckInternalPanelRenderProps {\n  internalOptions: string;\n}\n\nexport const UTCheckInternalPanelRender: StepFunction<UTCheckInternalPanelRenderProps> = async ({\n  internalOptions,\n}) => {\n  const wrapper = setup({});\n  const dataSign = {\n    'Search bar': 'searchBar',\n    'internal recipient list': 'searchResult',\n  };\n  expect(\n    wrapper.find(`[data-sign=\"${dataSign[internalOptions]}\"]`),\n  ).not.toBeUndefined();\n};\n\nexport const UTCheckTransferAgentSelectCases = [\n  {\n    title: 'User can select available agent to transfer',\n    internalItem: 'DukeTest1',\n    available: true,\n    recipientDisplay: 'DukeTest1',\n  },\n  {\n    title: 'User can select unavailable agent to transfer',\n    internalItem: 'DukeTest2',\n    available: false,\n    recipientDisplay: 'DukeTest2',\n  },\n];\ninterface UTCheckTransferAgentSelectProps {\n  internalItem: string;\n  available: boolean;\n  recipientDisplay: string;\n}\n\nexport const UTCheckTransferAgentSelect: StepFunction<UTCheckTransferAgentSelectProps> = async ({\n  internalItem,\n  available,\n  recipientDisplay,\n}) => {\n  const changeTransferAgentId = jest.fn(() => {});\n  const agentId = '10003';\n  wrapper = setup({\n    changeTransferAgentId,\n    transferAgentList: [\n      { agentId, firstName: internalItem, lastName: '', available },\n    ],\n  });\n  const selectIndex = 0;\n  const agentItems = getAgentItems();\n  agentItems\n    .at(selectIndex)\n    .find('[role=\"button\"]')\n    .at(0)\n    .simulate('click');\n  expect(changeTransferAgentId).toBeCalledWith(agentId);\n};\n\nexport const UTCheckAgentListRenderCases = [\n  {\n    title: 'internal recipient status',\n    agentState: 'Available',\n    stateColor: 'green',\n    available: true,\n    recipient: 'DukeAccount1',\n    availableStatus: 'Available',\n    statusColor: 'green',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'On Break',\n    stateColor: 'gray',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Training',\n    stateColor: 'yellow',\n    available: true,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Available',\n    statusColor: 'green',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Lunch',\n    stateColor: 'gray',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Working',\n    stateColor: 'yellow',\n    available: true,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Available',\n    statusColor: 'green',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Allow Offhook',\n    stateColor: 'red',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Disconnect Offhook',\n    stateColor: 'red',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Away',\n    stateColor: 'gray',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n];\ninterface UTCheckAgentListRenderProps {\n  agentState: string;\n  available: boolean;\n  recipient: string;\n  availableStatus: 'Available' | 'Unavailable';\n  statusColor: string;\n}\nexport const UTCheckAgentListRender: StepFunction<UTCheckAgentListRenderProps> = async ({\n  agentState,\n  available,\n  recipient,\n  availableStatus,\n  statusColor,\n}) => {\n  const wrapper = setup({\n    transferAgentList: [\n      { agentState, firstName: recipient, lastName: '', available },\n    ],\n  });\n  const agentItem = wrapper.find('[data-sign=\"agentItem\"]');\n  expect(\n    agentItem\n      .find('.agentName')\n      .text()\n      .trim(),\n  ).toBe(recipient);\n  expect(\n    agentItem\n      .find('.statusText')\n      .text()\n      .trim(),\n  ).toBe(availableStatus);\n  if (statusColor === 'green') {\n    expect(agentItem.find('.available')).toHaveLength(1);\n  } else if (statusColor === 'gray') {\n    expect(agentItem.find('.unavailable')).toHaveLength(1);\n  }\n};\n"],"file":"InternalPanel.ut.js"}