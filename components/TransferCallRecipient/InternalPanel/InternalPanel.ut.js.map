{"version":3,"sources":["components/TransferCallRecipient/InternalPanel/InternalPanel.ut.tsx"],"names":["wrapper","currentLocale","transferAgent","agentAuxState","agentId","agentState","available","firstName","lastName","pendingDisp","stateDuration","username","defaultTransferAgentList","defaultSearchAgent","options","text","blankRegex","name","replace","toLowerCase","includes","setup","goBack","transferAgentListUpdateTTL","fetchAgentList","transferAgentId","changeTransferAgentId","searchAgent","transferAgentList","getAgentItems","find","at","getSearchInput","UTAgentListCheckBackButton","jest","fn","simulate","expect","toBeCalled","UTAgentListAutoSync","useFakeTimers","advanceTimersByTime","toHaveBeenCalledTimes","useRealTimers","UTAgentListDisplayAndHighlight","agentItems","length","toBe","selectedIndex","findIndex","x","render","attr","toMatch","UTAgentListSearchCases","internalList","searchText","matchedResult","UTAgentListSearch","map","eventObj","target","value","Array","isArray","toHaveLength","resultItems","el","trim","toStrictEqual","UTCheckInternalPanelRender","internalOptions","dataSign","not","toBeUndefined","UTCheckTransferAgentSelectCases","title","internalItem","recipientDisplay","UTCheckTransferAgentSelect","selectIndex","toBeCalledWith","UTCheckAgentListRenderCases","stateColor","recipient","availableStatus","statusColor","UTCheckAgentListRender","agentItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StepFunction } from 'crius-test';\nimport { RcThemeProvider } from '@ringcentral/juno';\nimport { mount } from 'enzyme';\nimport { InternalPanel, InternalPanelProps } from './InternalPanel';\nimport { EvDirectAgentListItem } from '../../../lib/EvClient';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst transferAgent = {\n  agentAuxState: '',\n  agentId: '00000',\n  agentState: '',\n  available: true,\n  firstName: 'test',\n  lastName: 'test',\n  pendingDisp: true,\n  stateDuration: 'testState',\n  username: 'test username',\n};\nconst defaultTransferAgentList = [\n  {\n    ...transferAgent,\n    agentId: '10002',\n    available: true,\n    username: 'amy liu',\n    firstName: 'amy',\n    lastName: 'liu',\n  },\n  {\n    ...transferAgent,\n    agentId: '10003',\n    available: true,\n    username: 'susie liu',\n    firstName: 'susie',\n    lastName: 'liu',\n  },\n  {\n    ...transferAgent,\n    agentId: '10004',\n    available: true,\n    username: 'geroge lin',\n    firstName: 'geroge',\n    lastName: 'lin',\n  },\n  {\n    ...transferAgent,\n    agentId: '10005',\n    available: false,\n    username: 'amy liu',\n    firstName: 'amy',\n    lastName: 'liu',\n  },\n];\n\nconst defaultSearchAgent = (options: EvDirectAgentListItem, text: string) => {\n  const firstName = options.firstName ?? '';\n  const lastName = options.lastName ?? '';\n  const blankRegex = /\\s+/g;\n  const name = `${firstName}${lastName}`.replace(blankRegex, '').toLowerCase();\n  return text && name.includes(text.replace(blankRegex, '').toLowerCase());\n};\n\nfunction setup({\n  goBack = () => {},\n  transferAgentListUpdateTTL = 100,\n  fetchAgentList = () => {},\n  transferAgentId = '',\n  changeTransferAgentId = () => {},\n  searchAgent = defaultSearchAgent,\n  transferAgentList = defaultTransferAgentList,\n}: Partial<InternalPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <InternalPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        transferAgentList={transferAgentList}\n        transferAgentListUpdateTTL={transferAgentListUpdateTTL}\n        fetchAgentList={fetchAgentList}\n        transferAgentId={transferAgentId}\n        changeTransferAgentId={changeTransferAgentId}\n        searchAgent={searchAgent}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nconst getAgentItems = () =>\n  wrapper\n    .find('RcList')\n    .at(0)\n    .find('div[data-sign=\"agentItem\"]');\n\nconst getSearchInput = () =>\n  wrapper\n    .find('RcOutlineTextField')\n    .at(0)\n    .find('input');\n\nexport const UTAgentListCheckBackButton: StepFunction = () => {\n  const goBack = jest.fn(() => {});\n  wrapper = setup({ goBack });\n  wrapper\n    .find('[data-sign=\"backButton\"]')\n    .at(0)\n    .find('button')\n    .simulate('click');\n  expect(goBack).toBeCalled();\n};\n\nexport const UTAgentListAutoSync: StepFunction = () => {\n  jest.useFakeTimers();\n  const fetchAgentList = jest.fn(() => {});\n  const transferAgentListUpdateTTL = 100;\n  wrapper = setup({ fetchAgentList, transferAgentListUpdateTTL });\n  jest.advanceTimersByTime(210);\n  expect(fetchAgentList).toHaveBeenCalledTimes(2);\n  jest.useRealTimers();\n};\n\nexport const UTAgentListDisplayAndHighlight: StepFunction = () => {\n  const transferAgentId = '10003';\n  wrapper = setup({\n    transferAgentId,\n  });\n  const agentItems = getAgentItems();\n  expect(agentItems.length).toBe(defaultTransferAgentList.length);\n  const selectedIndex = defaultTransferAgentList.findIndex(\n    (x) => x.agentId === transferAgentId,\n  );\n  expect(\n    agentItems\n      .at(selectedIndex)\n      .render()\n      .attr('class'),\n  ).toMatch(/Mui-selected/g);\n};\n\nexport const UTAgentListSearchCases = [\n  {\n    internalList: ['DukeTest1', 'DukeTest2', 'EV demo'],\n    searchText: 'Duke',\n    matchedResult: ['DukeTest1', 'DukeTest2'],\n  },\n  {\n    internalList: ['DukeTest1', 'DukeTest2', 'EV demo'],\n    searchText: '2',\n    matchedResult: ['DukeTest2'],\n  },\n  {\n    internalList: ['DukeTest1', 'DukeTest2', 'EV demo'],\n    searchText: 'AA',\n    matchedResult: 'No result found for \"AA\"',\n  },\n];\n\ninterface UTAgentListSearchProps {\n  internalList: string[];\n  searchText: string;\n  matchedResult: string[] | string;\n}\n\nexport const UTAgentListSearch: StepFunction<UTAgentListSearchProps> = ({\n  internalList,\n  searchText,\n  matchedResult,\n}) => {\n  const searchAgent = jest.fn(defaultSearchAgent);\n  wrapper = setup({\n    searchAgent,\n    transferAgentList: internalList.map((name) => ({\n      firstName: name,\n      lastName: '',\n    })),\n  });\n  const eventObj = { target: { value: searchText } };\n  getSearchInput().simulate('change', eventObj);\n  const agentItems = getAgentItems();\n\n  if (Array.isArray(matchedResult)) {\n    expect(agentItems).toHaveLength(matchedResult.length);\n    const resultItems = agentItems.map((el) =>\n      el\n        .find('.agentName')\n        .text()\n        .trim(),\n    );\n    expect(resultItems).toStrictEqual(matchedResult);\n  } else {\n    expect(agentItems).toHaveLength(0);\n    expect(wrapper.find('[data-sign=\"searchResult\"]').text()).toBe(\n      `No result found for \"${searchText}\"`,\n    );\n  }\n};\n\ninterface UTCheckInternalPanelRenderProps {\n  internalOptions: string;\n}\n\nexport const UTCheckInternalPanelRender: StepFunction<UTCheckInternalPanelRenderProps> = async ({\n  internalOptions,\n}) => {\n  const wrapper = setup({});\n  const dataSign = {\n    'Search bar': 'searchBar',\n    'internal recipient list': 'searchResult',\n  };\n  expect(\n    wrapper.find(`[data-sign=\"${dataSign[internalOptions]}\"]`),\n  ).not.toBeUndefined();\n};\n\nexport const UTCheckTransferAgentSelectCases = [\n  {\n    title: 'User can select available agent to transfer',\n    internalItem: 'DukeTest1',\n    available: true,\n    recipientDisplay: 'DukeTest1',\n  },\n  {\n    title: 'User can select unavailable agent to transfer',\n    internalItem: 'DukeTest2',\n    available: false,\n    recipientDisplay: 'DukeTest2',\n  },\n];\ninterface UTCheckTransferAgentSelectProps {\n  internalItem: string;\n  available: boolean;\n  recipientDisplay: string;\n}\n\nexport const UTCheckTransferAgentSelect: StepFunction<UTCheckTransferAgentSelectProps> = async ({\n  internalItem,\n  available,\n  recipientDisplay,\n}) => {\n  const changeTransferAgentId = jest.fn(() => {});\n  const agentId = '10003';\n  wrapper = setup({\n    changeTransferAgentId,\n    transferAgentList: [\n      { agentId, firstName: internalItem, lastName: '', available },\n    ],\n  });\n  const selectIndex = 0;\n  const agentItems = getAgentItems();\n  agentItems\n    .at(selectIndex)\n    .find('[role=\"button\"]')\n    .at(0)\n    .simulate('click');\n  expect(changeTransferAgentId).toBeCalledWith(agentId);\n};\n\nexport const UTCheckAgentListRenderCases = [\n  {\n    title: 'internal recipient status',\n    agentState: 'Available',\n    stateColor: 'green',\n    available: true,\n    recipient: 'DukeAccount1',\n    availableStatus: 'Available',\n    statusColor: 'green',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'On Break',\n    stateColor: 'gray',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Training',\n    stateColor: 'yellow',\n    available: true,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Available',\n    statusColor: 'green',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Lunch',\n    stateColor: 'gray',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Working',\n    stateColor: 'yellow',\n    available: true,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Available',\n    statusColor: 'green',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Allow Offhook',\n    stateColor: 'red',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Disconnect Offhook',\n    stateColor: 'red',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n  {\n    title: 'internal recipient status',\n    agentState: 'Away',\n    stateColor: 'gray',\n    available: false,\n    recipient: 'AccountDuke2',\n    availableStatus: 'Unavailable',\n    statusColor: 'gray',\n  },\n];\ninterface UTCheckAgentListRenderProps {\n  agentState: string;\n  available: boolean;\n  recipient: string;\n  availableStatus: 'Available' | 'Unavailable';\n  statusColor: string;\n}\nexport const UTCheckAgentListRender: StepFunction<UTCheckAgentListRenderProps> = async ({\n  agentState,\n  available,\n  recipient,\n  availableStatus,\n  statusColor,\n}) => {\n  const wrapper = setup({\n    transferAgentList: [\n      { agentState, firstName: recipient, lastName: '', available },\n    ],\n  });\n  const agentItem = wrapper.find('[data-sign=\"agentItem\"]');\n  expect(\n    agentItem\n      .find('.agentName')\n      .text()\n      .trim(),\n  ).toBe(recipient);\n  expect(\n    agentItem\n      .find('.statusText')\n      .text()\n      .trim(),\n  ).toBe(availableStatus);\n  if (statusColor === 'green') {\n    expect(agentItem.find('.available')).toHaveLength(1);\n  } else if (statusColor === 'gray') {\n    expect(agentItem.find('.unavailable')).toHaveLength(1);\n  }\n};\n"],"file":"InternalPanel.ut.js"}