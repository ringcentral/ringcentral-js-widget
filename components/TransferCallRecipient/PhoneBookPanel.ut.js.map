{"version":3,"sources":["components/TransferCallRecipient/PhoneBookPanel.ut.tsx"],"names":["wrapper","currentLocale","defaultTransferCountryOptions","countryId","countryName","defaultTransferPhoneBook","destination","name","defaultSearchPhoneBook","option","text","toLowerCase","includes","setup","goBack","searchPhoneBook","transferPhoneBookSelectedIndex","changeTransferPhoneBookSelected","transferPhoneBook","getPhoneContacts","find","at","getSearchInput","UTPhoneBookCheckBackButton","jest","fn","simulate","expect","toBeCalled","UTPhoneBookContactListDisplayAndHighlight","phoneContacts","length","toBe","prop","UTPhoneBookContactCanBeClicked","selectIndex","toBeCalledWith","UTPhoneBookListSearchCases","title","phoneBookList","number","searchText","matchedResult","UTPhoneBookListSearchNoResultCases","UTPhoneBookListSearch","map","eventObj","target","value","Array","isArray","toHaveLength","resultItems","el","toStrictEqual","i","UTCheckPhoneBookPanelRender","internalOptions","dataSign","not","toBeUndefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;;;AAGA,IAAIA,OAAJ;AACA,IAAMC,aAAa,GAAG,OAAtB;AACA,IAAMC,6BAA6B,GAAG,CACpC;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CADoC,EAEpC;AAAED,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CAFoC,EAGpC;AAAED,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CAHoC,EAIpC;AAAED,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CAJoC,EAKpC;AAAED,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CALoC,EAMpC;AAAED,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CANoC,EAOpC;AAAED,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,WAAW,EAAE;AAAjC,CAPoC,CAAtC;AAUA,IAAMC,wBAAwB,GAAG,CAC/B;AAAEF,EAAAA,SAAS,EAAE,KAAb;AAAoBG,EAAAA,WAAW,EAAE,UAAjC;AAA6CC,EAAAA,IAAI,EAAE;AAAnD,CAD+B,EAE/B;AAAEJ,EAAAA,SAAS,EAAE,KAAb;AAAoBG,EAAAA,WAAW,EAAE,UAAjC;AAA6CC,EAAAA,IAAI,EAAE;AAAnD,CAF+B,EAG/B;AAAEJ,EAAAA,SAAS,EAAE,KAAb;AAAoBG,EAAAA,WAAW,EAAE,WAAjC;AAA8CC,EAAAA,IAAI,EAAE;AAApD,CAH+B,EAI/B;AAAEJ,EAAAA,SAAS,EAAE,KAAb;AAAoBG,EAAAA,WAAW,EAAE,YAAjC;AAA+CC,EAAAA,IAAI,EAAE;AAArD,CAJ+B,EAK/B;AAAEJ,EAAAA,SAAS,EAAE,KAAb;AAAoBG,EAAAA,WAAW,EAAE,WAAjC;AAA8CC,EAAAA,IAAI,EAAE;AAApD,CAL+B,CAAjC;;AAQA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BC,MAD6B,EAE7BC,IAF6B,EAG1B;AAAA;;AACH,SACGA,IAAI,qBAAID,MAAM,CAACF,IAAX,iDAAI,aAAaI,WAAb,GAA2BC,QAA3B,CAAoCF,IAAI,CAACC,WAAL,EAApC,CAAJ,CAAL,4BACAF,MAAM,CAACH,WADP,wDACA,oBAAoBK,WAApB,GAAkCC,QAAlC,CAA2CF,IAAI,CAACC,WAAL,EAA3C,CADA,CADF;AAID,CARD;;AAUA,SAASE,KAAT,OAMiC;AAAA,yBAL/BC,MAK+B;AAAA,MAL/BA,MAK+B,4BALtB,YAAM,CAAE,CAKc;AAAA,kCAJ/BC,eAI+B;AAAA,MAJ/BA,eAI+B,qCAJb,YAAM,CAAE,CAIK;AAAA,mCAH/BC,8BAG+B;AAAA,MAH/BA,8BAG+B,sCAHER,sBAGF;AAAA,mCAF/BS,+BAE+B;AAAA,MAF/BA,+BAE+B,sCAFG,YAAM,CAAE,CAEX;AAAA,oCAD/BC,iBAC+B;AAAA,MAD/BA,iBAC+B,uCADXb,wBACW;AAC/B,SAAO,iCACL,gCAAC,qBAAD,qBACE,gCAAC,8BAAD;AACE,IAAA,aAAa,EAAEJ,aADjB;AAEE,IAAA,MAAM,EAAEa,MAFV;AAGE,IAAA,iBAAiB,EAAEI,iBAHrB;AAIE,IAAA,8BAA8B,EAAEF,8BAJlC;AAKE,IAAA,+BAA+B,EAAEC,+BALnC;AAME,IAAA,eAAe,EAAEF,eANnB;AAOE,IAAA,sBAAsB,EAAEb;AAP1B,IADF,CADK,CAAP;AAaD;;AAED,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvBnB,OAAO,CACJoB,IADH,CACQ,QADR,EAEGC,EAFH,CAEM,CAFN,EAGGD,IAHH,CAGQ,4BAHR,CADuB;AAAA,CAAzB;;AAMA,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SACrBtB,OAAO,CACJoB,IADH,CACQ,oBADR,EAEGC,EAFH,CAEM,CAFN,EAGGD,IAHH,CAGQ,OAHR,CADqB;AAAA,CAAvB;;AAMO,IAAMG,0BAAwC,GAAG,SAA3CA,0BAA2C,GAAM;AAC5D,MAAMT,MAAM,GAAGU,IAAI,CAACC,EAAL,CAAQ,YAAM,CAAE,CAAhB,CAAf;AACAzB,EAAAA,OAAO,GAAGa,KAAK,CAAC;AAAEC,IAAAA,MAAM,EAANA;AAAF,GAAD,CAAf;AACAd,EAAAA,OAAO,CACJoB,IADH,CACQ,0BADR,EAEGC,EAFH,CAEM,CAFN,EAGGD,IAHH,CAGQ,QAHR,EAIGM,QAJH,CAIY,OAJZ;AAKAC,EAAAA,MAAM,CAACb,MAAD,CAAN,CAAec,UAAf;AACD,CATM;;;;AAWA,IAAMC,yCAAuD,GAAG,SAA1DA,yCAA0D,GAAM;AAC3E,MAAMb,8BAA8B,GAAG,CAAvC;AACAhB,EAAAA,OAAO,GAAGa,KAAK,CAAC;AACdG,IAAAA,8BAA8B,EAA9BA;AADc,GAAD,CAAf;AAGA,MAAMc,aAAa,GAAGX,gBAAgB,EAAtC;AACAQ,EAAAA,MAAM,CAACG,aAAa,CAACC,MAAf,CAAN,CAA6BC,IAA7B,CAAkC3B,wBAAwB,CAAC0B,MAA3D;AACAJ,EAAAA,MAAM,CACJG,aAAa,CAACT,EAAd,CAAiBL,8BAAjB,EAAiDiB,IAAjD,CAAsD,UAAtD,CADI,CAAN,CAEED,IAFF,CAEO,IAFP;AAGD,CAVM;;;;AAYA,IAAME,8BAA4C,GAAG,SAA/CA,8BAA+C,GAAM;AAChE,MAAMjB,+BAA+B,GAAGO,IAAI,CAACC,EAAL,CAAQ,YAAM,CAAE,CAAhB,CAAxC;AACAzB,EAAAA,OAAO,GAAGa,KAAK,CAAC;AAAEI,IAAAA,+BAA+B,EAA/BA;AAAF,GAAD,CAAf;AACA,MAAMkB,WAAW,GAAG,CAApB;AACAhB,EAAAA,gBAAgB,GACbE,EADH,CACMc,WADN,EAEGf,IAFH,CAEQ,iBAFR,EAGGC,EAHH,CAGM,CAHN,EAIGK,QAJH,CAIY,OAJZ;AAKAC,EAAAA,MAAM,CAACV,+BAAD,CAAN,CAAwCmB,cAAxC,CAAuDD,WAAvD;AACD,CAVM;;;AAYA,IAAME,0BAA0B,GAAG,CACxC;AACEC,EAAAA,KAAK,EAAE,2BADT;AAEEC,EAAAA,aAAa,EAAE,CACb;AAAEhC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GADa,EAEb;AAAEjC,IAAAA,IAAI,EAAE,QAAR;AAAkBiC,IAAAA,MAAM,EAAE;AAA1B,GAFa,CAFjB;AAMEC,EAAAA,UAAU,EAAE,MANd;AAOEC,EAAAA,aAAa,EAAE,CAAC,CAAD;AAPjB,CADwC,EAUxC;AACEJ,EAAAA,KAAK,EAAE,2BADT;AAEEC,EAAAA,aAAa,EAAE,CACb;AAAEhC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GADa,EAEb;AAAEjC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GAFa,CAFjB;AAMEC,EAAAA,UAAU,EAAE,IANd;AAOEC,EAAAA,aAAa,EAAE,CAAC,CAAD,EAAI,CAAJ;AAPjB,CAVwC,EAmBxC;AACEJ,EAAAA,KAAK,EAAE,2BADT;AAEEC,EAAAA,aAAa,EAAE,CACb;AAAEhC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GADa,EAEb;AAAEjC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GAFa,CAFjB;AAMEC,EAAAA,UAAU,EAAE,KANd;AAOEC,EAAAA,aAAa,EAAE,CAAC,CAAD,EAAI,CAAJ;AAPjB,CAnBwC,EA4BxC;AACEJ,EAAAA,KAAK,EAAE,2BADT;AAEEC,EAAAA,aAAa,EAAE,CACb;AAAEhC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GADa,EAEb;AAAEjC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GAFa,CAFjB;AAMEC,EAAAA,UAAU,EAAE,SANd;AAOEC,EAAAA,aAAa,EAAE,CAAC,CAAD;AAPjB,CA5BwC,EAqCxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEJ,EAAAA,KAAK,EAAE,2BADT;AAEEC,EAAAA,aAAa,EAAE,CACb;AAAEhC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GADa,EAEb;AAAEjC,IAAAA,IAAI,EAAE,QAAR;AAAkBiC,IAAAA,MAAM,EAAE;AAA1B,GAFa,CAFjB;AAMEC,EAAAA,UAAU,EAAE,IANd;AAOEC,EAAAA,aAAa,EAAE;AAPjB,CAvDwC,CAAnC;;AAkEA,IAAMC,kCAAkC,GAAG,CAChD;AACEL,EAAAA,KAAK,EAAE,2BADT;AAEEC,EAAAA,aAAa,EAAE,CACb;AAAEhC,IAAAA,IAAI,EAAE,WAAR;AAAqBiC,IAAAA,MAAM,EAAE;AAA7B,GADa,EAEb;AAAEjC,IAAAA,IAAI,EAAE,QAAR;AAAkBiC,IAAAA,MAAM,EAAE;AAA1B,GAFa,CAFjB;AAMEC,EAAAA,UAAU,EAAE,IANd;AAOEC,EAAAA,aAAa,EAAE;AAPjB,CADgD,CAA3C;;;AAiBA,IAAME,qBAA+D,GAAG,SAAlEA,qBAAkE,QAIzE;AAAA,MAHJL,aAGI,SAHJA,aAGI;AAAA,MAFJE,UAEI,SAFJA,UAEI;AAAA,MADJC,aACI,SADJA,aACI;AACJ,MAAM3B,eAAe,GAAGS,IAAI,CAACC,EAAL,CAAQjB,sBAAR,CAAxB;AACAR,EAAAA,OAAO,GAAGa,KAAK,CAAC;AACdE,IAAAA,eAAe,EAAfA,eADc;AAEdG,IAAAA,iBAAiB,EAAEqB,aAAa,CAACM,GAAd,CAAkB;AAAA,UAAGtC,IAAH,SAAGA,IAAH;AAAA,UAASiC,MAAT,SAASA,MAAT;AAAA,aAAuB;AAC1DjC,QAAAA,IAAI,EAAJA,IAD0D;AAE1DD,QAAAA,WAAW,EAAEkC,MAF6C;AAG1DrC,QAAAA,SAAS,EAAE;AAH+C,OAAvB;AAAA,KAAlB;AAFL,GAAD,CAAf;AAQA,MAAM2C,QAAQ,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAEP;AAAT;AAAV,GAAjB;AACAnB,EAAAA,cAAc,GAAGI,QAAjB,CAA0B,QAA1B,EAAoCoB,QAApC;AACA,MAAMhB,aAAa,GAAGX,gBAAgB,EAAtC;;AACA,MAAI8B,KAAK,CAACC,OAAN,CAAcR,aAAd,CAAJ,EAAkC;AAChCf,IAAAA,MAAM,CAACG,aAAD,CAAN,CAAsBqB,YAAtB,CAAmCT,aAAa,CAACX,MAAjD;AACA,QAAMqB,WAAW,GAAGtB,aAAa,CAACe,GAAd,CAAkB,UAACQ,EAAD;AAAA,aACpCA,EAAE,CAACjC,IAAH,CAAQ,gBAAR,EAA0BV,IAA1B,EADoC;AAAA,KAAlB,CAApB;AAGAiB,IAAAA,MAAM,CAACyB,WAAD,CAAN,CAAoBE,aAApB,CACEZ,aAAa,CAACG,GAAd,CAAkB,UAACU,CAAD;AAAA,aAAOhB,aAAa,CAACgB,CAAD,CAAb,CAAiBf,MAAxB;AAAA,KAAlB,CADF;AAGD,GARD,MAQO;AACLb,IAAAA,MAAM,CAACG,aAAD,CAAN,CAAsBqB,YAAtB,CAAmC,CAAnC;AACAxB,IAAAA,MAAM,CAAC3B,OAAO,CAACoB,IAAR,CAAa,4BAAb,EAA2CV,IAA3C,EAAD,CAAN,CAA0DsB,IAA1D,iCAC0BS,UAD1B;AAGD;AACF,CA/BM;;;;AAoCA,IAAMe,2BAA0E;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACxFC,YAAAA,eADwF,SACxFA,eADwF;AAGlFzD,YAAAA,OAHkF,GAGxEa,KAAK,CAAC,EAAD,CAHmE;AAIlF6C,YAAAA,QAJkF,GAIvE;AACf,4BAAc,WADC;AAEf,wDAA0C;AAF3B,aAJuE;AAQxF/B,YAAAA,MAAM,CACJ3B,OAAO,CAACoB,IAAR,wBAA4BsC,QAAQ,CAACD,eAAD,CAApC,SADI,CAAN,CAEEE,GAFF,CAEMC,aAFN;;AARwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA1EJ,2BAA0E;AAAA;AAAA;AAAA,GAAhF","sourcesContent":["import React from 'react';\nimport { StepFunction } from 'crius-test';\nimport { RcThemeProvider } from '@ringcentral-integration/rcui';\nimport { mount } from 'enzyme';\nimport { PhoneBookPanel, PhoneBookPanelProps } from './PhoneBookPanel';\nimport { EvTransferPhoneBookItem } from '../../lib/EvClient';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst defaultTransferCountryOptions = [\n  { countryId: 'CAN', countryName: 'Canada' },\n  { countryId: 'FRA', countryName: 'France' },\n  { countryId: 'GER', countryName: 'Germany' },\n  { countryId: 'MEX', countryName: 'Mexico' },\n  { countryId: 'MTQ', countryName: 'Martinique' },\n  { countryId: 'USA', countryName: 'US' },\n  { countryId: 'USX', countryName: 'US Extended' },\n];\n\nconst defaultTransferPhoneBook = [\n  { countryId: 'USA', destination: '48573454', name: 'amy liu' },\n  { countryId: 'USA', destination: '34534534', name: 'aermin huang' },\n  { countryId: 'CAN', destination: '435345564', name: 'duke' },\n  { countryId: 'CAN', destination: '5435345344', name: 'bruce li' },\n  { countryId: 'USA', destination: '345345345', name: 'amy li' },\n];\n\nconst defaultSearchPhoneBook = (\n  option: EvTransferPhoneBookItem,\n  text: string,\n) => {\n  return (\n    (text && option.name?.toLowerCase().includes(text.toLowerCase())) ||\n    option.destination?.toLowerCase().includes(text.toLowerCase())\n  );\n};\n\nfunction setup({\n  goBack = () => {},\n  searchPhoneBook = () => {},\n  transferPhoneBookSelectedIndex = defaultSearchPhoneBook,\n  changeTransferPhoneBookSelected = () => {},\n  transferPhoneBook = defaultTransferPhoneBook,\n}: Partial<PhoneBookPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <PhoneBookPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        transferPhoneBook={transferPhoneBook}\n        transferPhoneBookSelectedIndex={transferPhoneBookSelectedIndex}\n        changeTransferPhoneBookSelected={changeTransferPhoneBookSelected}\n        searchPhoneBook={searchPhoneBook}\n        transferCountryOptions={defaultTransferCountryOptions}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nconst getPhoneContacts = () =>\n  wrapper\n    .find('RcList')\n    .at(0)\n    .find('[data-sign=\"phoneContact\"]');\n\nconst getSearchInput = () =>\n  wrapper\n    .find('RcOutlineTextField')\n    .at(0)\n    .find('input');\n\nexport const UTPhoneBookCheckBackButton: StepFunction = () => {\n  const goBack = jest.fn(() => {});\n  wrapper = setup({ goBack });\n  wrapper\n    .find('[data-sign=\"backButton\"]')\n    .at(0)\n    .find('button')\n    .simulate('click');\n  expect(goBack).toBeCalled();\n};\n\nexport const UTPhoneBookContactListDisplayAndHighlight: StepFunction = () => {\n  const transferPhoneBookSelectedIndex = 1;\n  wrapper = setup({\n    transferPhoneBookSelectedIndex,\n  });\n  const phoneContacts = getPhoneContacts();\n  expect(phoneContacts.length).toBe(defaultTransferPhoneBook.length);\n  expect(\n    phoneContacts.at(transferPhoneBookSelectedIndex).prop('selected'),\n  ).toBe(true);\n};\n\nexport const UTPhoneBookContactCanBeClicked: StepFunction = () => {\n  const changeTransferPhoneBookSelected = jest.fn(() => {});\n  wrapper = setup({ changeTransferPhoneBookSelected });\n  const selectIndex = 1;\n  getPhoneContacts()\n    .at(selectIndex)\n    .find('[role=\"button\"]')\n    .at(0)\n    .simulate('click');\n  expect(changeTransferPhoneBookSelected).toBeCalledWith(selectIndex);\n};\n\nexport const UTPhoneBookListSearchCases = [\n  {\n    title: 'PhoneBook can be searched',\n    phoneBookList: [\n      { name: 'DukeTest1', number: '6509807610' },\n      { name: 'EVdemo', number: '6508797699' },\n    ],\n    searchText: 'Duke',\n    matchedResult: [0],\n  },\n  {\n    title: 'PhoneBook can be searched',\n    phoneBookList: [\n      { name: 'DukeTest1', number: '6509807610' },\n      { name: 'DukeTest2', number: '6509807688' },\n    ],\n    searchText: 'ke',\n    matchedResult: [0, 1],\n  },\n  {\n    title: 'PhoneBook can be searched',\n    phoneBookList: [\n      { name: 'DukeTest1', number: '6509807610' },\n      { name: 'DukeTest2', number: '6509807688' },\n    ],\n    searchText: '650',\n    matchedResult: [0, 1],\n  },\n  {\n    title: 'PhoneBook can be searched',\n    phoneBookList: [\n      { name: 'DukeTest1', number: '6509805610' },\n      { name: 'DukeTest2', number: '6509807688' },\n    ],\n    searchText: '6509807',\n    matchedResult: [1],\n  },\n  // { //skip this for it's a bug waiting to be fixed.\n  //   title: 'PhoneBook can be searched',\n  //   phoneBookList: [\n  //     { name: 'DukeTest1', number: '6509807610' },\n  //     { name: 'DukeTest2', number: '6509807688' },\n  //   ],\n  //   searchText: '(650)',\n  //   matchedResult: [0, 1],\n  // },\n  // {\n  //   title: 'PhoneBook can be searched',\n  //   phoneBookList: [\n  //     { name: 'DukeTest1', number: '6509805610' },\n  //     { name: 'DukeTest2', number: '6509807688' },\n  //   ],\n  //   searchText: '(650)9807',\n  //   matchedResult: [1],\n  // },\n  {\n    title: 'PhoneBook can be searched',\n    phoneBookList: [\n      { name: 'DukeTest1', number: '6509807610' },\n      { name: 'EVdemo', number: '6508797699' },\n    ],\n    searchText: 'AA',\n    matchedResult: [],\n  },\n];\n\nexport const UTPhoneBookListSearchNoResultCases = [\n  {\n    title: 'PhoneBook can be searched',\n    phoneBookList: [\n      { name: 'DukeTest1', number: '6509807610' },\n      { name: 'EVdemo', number: '6508797699' },\n    ],\n    searchText: 'AA',\n    matchedResult: 'No result found for \"AA\"',\n  },\n];\ninterface UTPhoneBookListSearchProps {\n  phoneBookList: { name: string; number: string }[];\n  searchText: string;\n  matchedResult: string[] | string;\n}\n\nexport const UTPhoneBookListSearch: StepFunction<UTPhoneBookListSearchProps> = ({\n  phoneBookList,\n  searchText,\n  matchedResult,\n}) => {\n  const searchPhoneBook = jest.fn(defaultSearchPhoneBook);\n  wrapper = setup({\n    searchPhoneBook,\n    transferPhoneBook: phoneBookList.map(({ name, number }) => ({\n      name,\n      destination: number,\n      countryId: 'USA',\n    })),\n  });\n  const eventObj = { target: { value: searchText } };\n  getSearchInput().simulate('change', eventObj);\n  const phoneContacts = getPhoneContacts();\n  if (Array.isArray(matchedResult)) {\n    expect(phoneContacts).toHaveLength(matchedResult.length);\n    const resultItems = phoneContacts.map((el) =>\n      el.find('.phoneBookDest').text(),\n    );\n    expect(resultItems).toStrictEqual(\n      matchedResult.map((i) => phoneBookList[i].number),\n    );\n  } else {\n    expect(phoneContacts).toHaveLength(0);\n    expect(wrapper.find('[data-sign=\"searchResult\"]').text()).toBe(\n      `No result found for \"${searchText}\"`,\n    );\n  }\n};\n\ninterface UTCheckInternalPanelRenderProps {\n  internalOptions: string;\n}\nexport const UTCheckPhoneBookPanelRender: StepFunction<UTCheckInternalPanelRenderProps> = async ({\n  internalOptions,\n}) => {\n  const wrapper = setup({});\n  const dataSign = {\n    'Search bar': 'searchBar',\n    'Phone Book recipient list with numbers': 'searchResult',\n  };\n  expect(\n    wrapper.find(`[data-sign=\"${dataSign[internalOptions]}\"]`),\n  ).not.toBeUndefined();\n};\n"],"file":"PhoneBookPanel.ut.js"}