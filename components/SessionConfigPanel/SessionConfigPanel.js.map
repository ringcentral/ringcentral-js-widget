{"version":3,"sources":["components/SessionConfigPanel/SessionConfigPanel.tsx"],"names":["SessionConfigPanel","currentLocale","selectedSkillProfileId","skillProfileList","setSkillProfileId","loginTypeList","loginType","setLoginType","extensionNumber","setExtensionNumber","takingCall","setTakingCall","autoAnswer","setAutoAnswer","setConfigure","children","inboundQueuesFieldText","isLoading","isExtensionNumber","navigateToInboundQueuesPage","styles","container","wrapperStyle","svgStyle","i18n","getString","root","customSelect","readOnly","endAdornment","length","e","maxLength","value","target","button"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-duplicate-props */\nimport { RcButton, RcTextField } from '@ringcentral-integration/rcui';\nimport React, { FunctionComponent } from 'react';\nimport { CustomArrowButton } from 'ringcentral-widgets/components/Rcui/CustomArrowButton';\n\nimport {\n  EvSessionConfigUIFunctions,\n  EvSessionConfigUIProps,\n} from '../../interfaces/EvSessionConfigUI.interface';\nimport { EvLoginHeader } from '../EvLoginHeader';\nimport { PickList } from '../PickList';\nimport { ToggleButton } from '../ToggleButton';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type SessionConfigPanelProps = EvSessionConfigUIProps &\n  EvSessionConfigUIFunctions;\n\nexport const SessionConfigPanel: FunctionComponent<SessionConfigPanelProps> = ({\n  currentLocale,\n  selectedSkillProfileId,\n  skillProfileList,\n  setSkillProfileId,\n  loginTypeList,\n  loginType,\n  setLoginType,\n  extensionNumber,\n  setExtensionNumber,\n  takingCall,\n  setTakingCall,\n  autoAnswer,\n  setAutoAnswer,\n  setConfigure,\n  children,\n  inboundQueuesFieldText,\n  isLoading,\n  isExtensionNumber,\n  navigateToInboundQueuesPage,\n}) => {\n  return (\n    <main className={styles.container}>\n      <EvLoginHeader\n        wrapperStyle={styles.wrapperStyle}\n        svgStyle={styles.svgStyle}\n      />\n      <RcTextField\n        data-sign=\"inboundQueues\"\n        label={i18n.getString('inboundQueues', currentLocale)}\n        title={inboundQueuesFieldText}\n        value={inboundQueuesFieldText}\n        fullWidth\n        classes={{\n          root: styles.customSelect,\n        }}\n        InputProps={{\n          readOnly: true,\n          endAdornment: <CustomArrowButton />,\n        }}\n        clearBtn={false}\n        onClick={navigateToInboundQueuesPage}\n      />\n      {skillProfileList.length > 0 && (\n        <PickList\n          data-sign=\"skillProfile\"\n          options={skillProfileList}\n          label={i18n.getString('skillProfile', currentLocale)}\n          value={selectedSkillProfileId}\n          optionValueKey=\"profileId\"\n          optionLabelKey=\"profileName\"\n          onChange={(e) => {\n            setSkillProfileId(e);\n          }}\n        />\n      )}\n      <PickList\n        data-sign=\"loginType\"\n        options={loginTypeList}\n        label={i18n.getString('voiceConnection', currentLocale)}\n        value={loginType}\n        onChange={(e) => {\n          setLoginType(e);\n        }}\n      />\n      {isExtensionNumber && (\n        <RcTextField\n          data-sign=\"extensionNumber\"\n          label={i18n.getString('extensionNumber', currentLocale)}\n          fullWidth\n          value={extensionNumber}\n          placeholder={i18n.getString('enterYourPhoneNumber', currentLocale)}\n          inputProps={{\n            maxLength: 255,\n          }}\n          clearBtn={false}\n          classes={{\n            root: styles.customSelect,\n          }}\n          onChange={({ target: { value } }) => {\n            setExtensionNumber(value);\n          }}\n        />\n      )}\n      {/* <ToggleButton\n        data-sign=\"takingCall\"\n        label={i18n.getString('takingCall', currentLocale)}\n        onChange={() => {\n          setTakingCall(!takingCall);\n        }}\n        classes={{\n          root: styles.takingCall,\n        }}\n        checked={takingCall}\n      />\n      <ToggleButton\n        data-sign=\"autoAnswer\"\n        label={i18n.getString('answerCalls', currentLocale)}\n        onChange={() => {\n          setAutoAnswer(!autoAnswer);\n        }}\n        checked={autoAnswer}\n      /> */}\n      <div className={styles.button}>\n        <RcButton\n          data-sign=\"setConfigure\"\n          fullWidth\n          disabled={isLoading}\n          loading={isLoading}\n          size=\"medium\"\n          onClick={() => {\n            setConfigure();\n          }}\n        >\n          {i18n.getString('continue', currentLocale)}\n        </RcButton>\n      </div>\n      {children}\n    </main>\n  );\n};\n"],"file":"SessionConfigPanel.js"}