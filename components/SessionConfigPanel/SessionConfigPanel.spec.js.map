{"version":3,"sources":["components/SessionConfigPanel/SessionConfigPanel.spec.tsx"],"names":["wrapper","currentLocale","defaultSkillProfileList","profileId","profileName","isDefault","profileDesc","defaultLoginTypeList","label","id","setup","selectedSkillProfileId","skillProfileList","setSkillProfileId","loginTypeList","loginType","setLoginType","extensionNumber","setExtensionNumber","setConfigure","inboundQueuesFieldText","isLoading","isExtensionNumber","resetFormGroup","searchOption","inboundQueues","submitInboundQueues","getAssignedInboundQueues","isAllAssign","isSeveralAssign","checkBoxOnChange","allCheckBoxOnChange","getConfigureButton","find","at","afterEach","unmount","describe","it","jest","fn","configureButton","simulate","expect","toBeCalled","toHaveLength","prop","toBe","not"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { RcThemeProvider } from '@ringcentral-integration/rcui';\nimport { mount } from 'enzyme';\nimport {\n  SessionConfigPanel,\n  SessionConfigPanelProps,\n} from './SessionConfigPanel';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst defaultSkillProfileList = [\n  {\n    profileId: '1001',\n    profileName: 'Work',\n    isDefault: '1',\n    profileDesc: 'like to work',\n  },\n  {\n    profileId: '1002',\n    profileName: 'eat',\n    isDefault: '1',\n    profileDesc: 'fat man',\n  },\n  {\n    profileId: '1003',\n    profileName: 'play',\n    isDefault: '1',\n    profileDesc: 'like to work',\n  },\n];\nconst defaultLoginTypeList = [\n  {\n    label: 'externalPhone',\n    id: '101',\n  },\n  {\n    label: 'externalPhone2',\n    id: '102',\n  },\n];\n\nfunction setup({\n  selectedSkillProfileId = '1002',\n  skillProfileList = defaultSkillProfileList,\n  setSkillProfileId = () => {},\n  loginTypeList = defaultLoginTypeList,\n  loginType = '102',\n  setLoginType = () => {},\n  extensionNumber = '',\n  setExtensionNumber = () => {},\n  setConfigure = () => null,\n  inboundQueuesFieldText = '',\n  isLoading = false,\n  isExtensionNumber = false,\n  // takingCall = false,\n  // setTakingCall = () => {},\n  // autoAnswer = true,\n  // setAutoAnswer = () => {},\n  resetFormGroup = () => {},\n  searchOption,\n  inboundQueues = [],\n  submitInboundQueues,\n  getAssignedInboundQueues = () => [],\n  isAllAssign = () => true,\n  isSeveralAssign = () => false,\n  checkBoxOnChange,\n  allCheckBoxOnChange,\n}: Partial<SessionConfigPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <SessionConfigPanel\n        currentLocale={currentLocale}\n        selectedSkillProfileId={selectedSkillProfileId}\n        skillProfileList={skillProfileList}\n        setSkillProfileId={setSkillProfileId}\n        loginTypeList={loginTypeList}\n        loginType={loginType}\n        setLoginType={setLoginType}\n        extensionNumber={extensionNumber}\n        setExtensionNumber={setExtensionNumber}\n        setConfigure={setConfigure}\n        inboundQueuesFieldText={inboundQueuesFieldText}\n        isExtensionNumber={isExtensionNumber}\n        isLoading={isLoading}\n        // takingCall={takingCall}\n        // setTakingCall={setTakingCall}\n        // autoAnswer={autoAnswer}\n        // setAutoAnswer={setAutoAnswer}\n        searchOption={searchOption}\n        inboundQueues={inboundQueues}\n        submitInboundQueues={submitInboundQueues}\n        getAssignedInboundQueues={getAssignedInboundQueues}\n        isAllAssign={isAllAssign}\n        isSeveralAssign={isSeveralAssign}\n        checkBoxOnChange={checkBoxOnChange}\n        allCheckBoxOnChange={allCheckBoxOnChange}\n        resetFormGroup={resetFormGroup}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nconst getConfigureButton = () =>\n  wrapper\n    .find('RcButton[data-sign=\"setConfigure\"]')\n    .at(0)\n    .find('button');\n\nafterEach(async () => {\n  wrapper.unmount();\n});\n\ndescribe('<SessionConfigPanel />', async () => {\n  it('When user click setConfigure Button, setConfigure is to be called', () => {\n    const setConfigure = jest.fn();\n    wrapper = setup({\n      setConfigure,\n    });\n    const configureButton = getConfigureButton();\n    configureButton.simulate('click');\n    expect(setConfigure).toBeCalled();\n  });\n\n  it('When loading, setConfigure Button is in loading state, and setConfigure cannot be fired', () => {\n    const setConfigure = jest.fn();\n    const isLoading = true;\n    wrapper = setup({\n      setConfigure,\n      isLoading,\n    });\n    const configureButton = getConfigureButton();\n    expect(configureButton.find('RcCircularProgress')).toHaveLength(1);\n    expect(configureButton.prop('disabled')).toBe(isLoading);\n    configureButton.simulate('click');\n    expect(setConfigure).not.toBeCalled();\n  });\n});\n"],"file":"SessionConfigPanel.spec.js"}