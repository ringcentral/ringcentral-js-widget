{"version":3,"sources":["components/AnimationAlert/index.js"],"names":["ANIMATION_DURATION","ENTRANCE_ANIMATION","EXIT_ANIMATION","AnimationMessage","animation","duration","props","second","animationDuration","propTypes","Message","PropTypes","string","number","defaultProps","undefined","AnimationAlert","state","messages","mounted","nextProps","entranceAnimation","exitAnimation","currentMessagesIDs","map","message","id","nextMessagesIDs","addedMessagesIDs","filter","removedMessagesIDs","allMessagesIDs","Set","concat","allMessages","isAddedMessage","isRemovedMessage","stateWithAnimation","length","setState","isCurrentEmpty","nextState","Component","AlertDisplay"],"mappings":"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","sourcesContent":["import { contains } from 'ramda';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport 'animate.css/animate.min.css';\nimport sleep from 'ringcentral-integration/lib/sleep';\n\nimport Message from '../Message';\nimport AlertDisplay from '../AlertDisplay';\n\nconst ANIMATION_DURATION = 500;\nconst ENTRANCE_ANIMATION = 'fadeInDown';\nconst EXIT_ANIMATION = 'fadeOutUp';\n\nfunction AnimationMessage({ animation, duration, ...props }) {\n  const second = duration / 1000;\n  return (\n    <div\n      className={classnames([animation, 'animated'])}\n      style={{\n        animationDuration: `${second}s`,\n      }}\n    >\n      <Message {...props} />\n    </div>\n  );\n}\n\nAnimationMessage.propTypes = {\n  ...Message.propTypes,\n  animation: PropTypes.string,\n  duration: PropTypes.number,\n};\nAnimationMessage.defaultProps = {\n  animation: undefined,\n  duration: ANIMATION_DURATION,\n};\n\nclass AnimationAlert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n    };\n  }\n  componentDidMount() {\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.props.messages === nextProps.messages) return;\n    (async () => {\n      const { duration, entranceAnimation, exitAnimation } = this.props;\n      const currentMessagesIDs = this.props.messages.map(\n        (message) => message.id,\n      );\n      const nextMessagesIDs = nextProps.messages.map((message) => message.id);\n      const addedMessagesIDs = nextMessagesIDs.filter(\n        (id) => !contains(id, currentMessagesIDs),\n      );\n      const removedMessagesIDs = currentMessagesIDs.filter(\n        (id) => !contains(id, nextMessagesIDs),\n      );\n      const allMessagesIDs = [\n        ...new Set(currentMessagesIDs.concat(nextMessagesIDs)),\n      ];\n      const allMessages = {};\n      this.props.messages.concat(nextProps.messages).map((message) => {\n        allMessages[message.id] = message;\n        return message;\n      });\n      const messages = allMessagesIDs.map((id) => {\n        const message = allMessages[id];\n        const isAddedMessage = contains(id, addedMessagesIDs);\n        const isRemovedMessage = contains(id, removedMessagesIDs);\n        let animation;\n        if (isAddedMessage) {\n          animation = entranceAnimation;\n        } else if (isRemovedMessage) {\n          animation = exitAnimation;\n        }\n        return {\n          ...message,\n          ...(animation ? { animation } : {}),\n          duration,\n        };\n      });\n      const stateWithAnimation = {\n        messages,\n      };\n      if (messages.length > 0) {\n        this.setState(stateWithAnimation);\n      }\n      await sleep(duration);\n      if (!this.mounted) return;\n      const isCurrentEmpty = currentMessagesIDs.length === 0;\n      this.setState({\n        messages: isCurrentEmpty ? messages : nextProps.messages,\n      });\n    })();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(\n      nextState.messages === this.state.messages ||\n      nextProps.messages === this.state.props\n    );\n  }\n\n  render() {\n    return (\n      <AlertDisplay\n        {...this.props}\n        component={AnimationMessage}\n        messages={this.state.messages}\n      />\n    );\n  }\n}\n\nAnimationAlert.propTypes = {\n  ...AlertDisplay.propTypes,\n  entranceAnimation: PropTypes.string,\n  exitAnimation: PropTypes.string,\n  duration: PropTypes.number,\n};\n\nAnimationAlert.defaultProps = {\n  ...AlertDisplay.defaultProps,\n  entranceAnimation: ENTRANCE_ANIMATION,\n  exitAnimation: EXIT_ANIMATION,\n  duration: ANIMATION_DURATION,\n};\n\nexport default AnimationAlert;\n"],"file":"index.js"}