{"version":3,"sources":["components/TabNavigationView/index.js"],"names":["TabNavigationView","props","navigationPosition","navBarClassName","onLoading","brandIcon","isVertical","navBar","TabNavigationButton","DropdownNavigationView","tabs","goTo","tabWidth","tabHeight","currentPath","undefined","currentVirtualPath","holdReady","styles","root","className","vertical","tabContainer","main","tabNavigationViewClassName","hasMaxHeight","children","propTypes","PropTypes","node","string","isRequired","func","oneOf","NavigationBar","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport NavigationBar from '../NavigationBar';\nimport TabNavigationButton from '../TabNavigationButton';\nimport DropdownNavigationView from '../DropdownNavigationView';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nfunction TabNavigationView(props) {\n  const { navigationPosition, navBarClassName, onLoading, brandIcon } = props;\n\n  if (onLoading) {\n    return <SpinnerOverlay />;\n  }\n\n  const isVertical = navigationPosition === 'left';\n  const navBar = (\n    <NavigationBar\n      button={TabNavigationButton}\n      childNavigationView={DropdownNavigationView}\n      tabs={props.tabs}\n      goTo={props.goTo}\n      tabWidth={props.tabWidth}\n      tabHeight={props.tabHeight}\n      currentPath={props.currentPath}\n      direction={isVertical ? 'vertical' : undefined}\n      currentVirtualPath={props.currentVirtualPath}\n      className={navBarClassName}\n    />\n  );\n  if (props.holdReady) return null;\n  return (\n    <div\n      className={classnames(\n        styles.root,\n        props.className,\n        navigationPosition === 'left' && styles.vertical,\n      )}\n    >\n      <div className={styles.tabContainer}>\n        {navigationPosition === 'top' || navigationPosition === 'left' ? (\n          <>\n            {navBar}\n            {navigationPosition === 'left' ? brandIcon : null}\n          </>\n        ) : null}\n      </div>\n      <div\n        data-sign=\"tabNavigationView\"\n        className={classnames(\n          styles.main,\n          props.tabNavigationViewClassName,\n          !isVertical && styles.hasMaxHeight,\n        )}\n      >\n        {' '}\n        {props.children}\n      </div>\n      {navigationPosition === 'bottom' ? navBar : null}\n    </div>\n  );\n}\n\nTabNavigationView.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentPath: PropTypes.string.isRequired,\n  currentVirtualPath: PropTypes.string,\n  goTo: PropTypes.func.isRequired,\n  navigationPosition: PropTypes.oneOf(['top', 'bottom', 'left']),\n  brandIcon: PropTypes.node,\n  tabWidth: PropTypes.string,\n  tabHeight: PropTypes.string,\n  tabs: NavigationBar.propTypes.tabs,\n  holdReady: PropTypes.bool,\n  navBarClassName: PropTypes.string,\n  tabNavigationViewClassName: PropTypes.string,\n  onLoading: PropTypes.bool,\n};\n\nTabNavigationView.defaultProps = {\n  children: null,\n  className: null,\n  currentVirtualPath: undefined,\n  navigationPosition: 'top',\n  brandIcon: null,\n  tabWidth: undefined,\n  tabHeight: undefined,\n  tabs: null,\n  holdReady: false,\n  navBarClassName: undefined,\n  tabNavigationViewClassName: undefined,\n  onLoading: false,\n};\n\nexport default TabNavigationView;\n"],"file":"index.js"}