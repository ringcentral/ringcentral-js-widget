{"version":3,"sources":["components/RecipientsInputV2/index.js"],"names":["isSplitterKey","e","key","keyCode","RecipientsInputV2","RcipientsInputV2","ref","className","enableTitle","recipients","multiple","useRCUI","value","removeFromRecipients","recipientsClassName","placeholder","currentLocale","onInputChange","onInputClear","label","i18n","getString","searchContactList","formatContactPhone","phoneTypeRenderer","phoneSourceNameRenderer","contactInfoRenderer","contactPhoneRenderer","addToRecipients","isLastInputFromDialpad","thisEl","listEl","inputEl","stateValue","setStateValue","selectedIndex","setSelectedIndex","isInputFocused","setIsInputFocused","lastInputTimestamp","focus","current","blur","handler","target","contains","window","addEventListener","removeEventListener","Date","now","toNumberInput","length","newValue","setScrollPosition","styles","container","rcuiStyle","prevIndex","scrollUp","scrollDown","preventDefault","selectedContact","name","replace","phoneNumber","rightPanel","contact","searchContactListType","PropTypes","arrayOf","shape","string","isRequired","entityType","phoneType","recipientsType","propTypes","func","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React, {\n  useRef,\n  useImperativeHandle,\n  useState,\n  forwardRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport ContactDropdownList from '../ContactDropdownListV2';\nimport SelectedRecipients from './SelectedRecipients';\nimport PhoneNumberInput from './PhoneNumberInput';\nimport i18n from '../RecipientsInput/i18n';\n\n/**\n * Specs:\n * 1. When dialer buttons are pressed, the cursor should be moved to the end of the string,\n *    and the focus set to the input field. RCINT-7706\n * 2. Simplify recipient/recipients property\n */\n\nfunction isSplitterKey(e) {\n  if (\n    e.key === ',' ||\n    e.key === ';' ||\n    e.key === 'Enter' ||\n    (e.key === 'Unidentified' && // for Safari (FF cannot rely on keyCode...)\n      (e.keyCode === 186 || // semicolon\n      e.keyCode === 188 || // comma\n        e.keyCode === 13)) // enter\n  ) {\n    return true;\n  }\n  return false;\n}\n\nconst RecipientsInputV2 = forwardRef(function RcipientsInputV2(\n  {\n    className,\n    enableTitle,\n    recipients,\n    multiple,\n    useRCUI,\n    value,\n    removeFromRecipients,\n    recipientsClassName,\n    placeholder,\n    currentLocale,\n    onInputChange,\n    onInputClear,\n    label = `${i18n.getString('to', currentLocale)}:`,\n    searchContactList,\n    formatContactPhone,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    contactInfoRenderer,\n    contactPhoneRenderer,\n    addToRecipients,\n    isLastInputFromDialpad,\n  },\n  ref,\n) {\n  const thisEl = useRef(null);\n  const listEl = useRef(null);\n  const inputEl = useRef(null);\n  const [stateValue, setStateValue] = useState(value);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [isInputFocused, setIsInputFocused] = useState(false);\n  const lastInputTimestamp = useRef(0);\n  useImperativeHandle(ref, () => ({\n    focus() {\n      setIsInputFocused(true);\n      if (inputEl.current) {\n        inputEl.current.focus();\n      }\n    },\n    blur() {\n      setIsInputFocused(false);\n      if (inputEl.current) {\n        inputEl.current.blur();\n      }\n    },\n  }));\n  useEffect(() => {\n    const handler = ({ target }) => {\n      if (thisEl.current && !thisEl.current.contains(target)) {\n        if (inputEl.current) {\n          inputEl.current.blur();\n        }\n        setIsInputFocused(false);\n      }\n    };\n    window.addEventListener('click', handler);\n    return () => {\n      window.removeEventListener('click', handler);\n    };\n  }, []); // pass [] so this only runs on mount and unmount\n\n  useEffect(() => {\n    if (value !== stateValue && Date.now() - lastInputTimestamp.current > 300) {\n      setStateValue(value);\n    }\n  }, [value]);\n\n  const toNumberInput =\n    !multiple && recipients.length ? null : (\n      <PhoneNumberInput\n        ref={inputEl}\n        placeholder={placeholder}\n        value={stateValue}\n        currentLocale={currentLocale}\n        onChange={(newValue) => {\n          lastInputTimestamp.current = Date.now();\n          setStateValue(newValue);\n          setSelectedIndex(0);\n          onInputChange(newValue);\n          if (listEl.current) {\n            listEl.current.setScrollPosition(0);\n          }\n        }}\n        onClear={() => {\n          setStateValue('');\n          onInputClear();\n        }}\n        onFocus={() => {\n          setIsInputFocused(true);\n        }}\n      />\n    );\n  return (\n    <div\n      className={classnames(\n        styles.container,\n        useRCUI ? styles.rcuiStyle : null,\n        className,\n      )}\n      ref={thisEl}\n      onKeyDown={(e) => {\n        if (isInputFocused && stateValue.length >= 3) {\n          if (e.key === 'ArrowUp') {\n            if (selectedIndex > 0) {\n              setSelectedIndex((prevIndex) => prevIndex - 1);\n              if (selectedIndex - 1 < searchContactList.length - 4) {\n                listEl.current.scrollUp();\n              }\n            }\n          } else if (e.key === 'ArrowDown') {\n            if (selectedIndex < searchContactList.length - 1) {\n              setSelectedIndex((prevIndex) => prevIndex + 1);\n              if (selectedIndex + 1 > 4) {\n                listEl.current.scrollDown();\n              }\n            }\n          }\n        }\n\n        if (isSplitterKey(e)) {\n          e.preventDefault();\n          if (stateValue.length === 0) {\n            return;\n          }\n          const selectedContact = searchContactList[selectedIndex];\n          if (selectedContact && e.key === 'Enter') {\n            addToRecipients({\n              ...selectedContact,\n            });\n          } else {\n            addToRecipients({\n              name: stateValue.replace(',', ''),\n              phoneNumber: stateValue.replace(',', ''),\n            });\n          }\n        }\n      }}\n    >\n      <span className={styles.label}>{label}</span>\n      <div\n        className={classnames(useRCUI && styles.rcuiStyle, styles.rightPanel)}\n      >\n        <SelectedRecipients\n          recipients={recipients}\n          onRemove={removeFromRecipients}\n          className={recipientsClassName}\n        />\n        {toNumberInput}\n      </div>\n      <ContactDropdownList\n        currentLocale={currentLocale}\n        ref={listEl}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={setSelectedIndex}\n        addToRecipients={(contact) => {\n          setStateValue('');\n          onInputChange('');\n          addToRecipients(contact);\n        }}\n        contacts={searchContactList}\n        formatContactPhone={formatContactPhone}\n        visibility={isInputFocused && !isLastInputFromDialpad}\n        enableTitle={enableTitle}\n        phoneTypeRenderer={phoneTypeRenderer}\n        phoneSourceNameRenderer={phoneSourceNameRenderer}\n        contactInfoRenderer={contactInfoRenderer}\n        contactPhoneRenderer={contactPhoneRenderer}\n      />\n    </div>\n  );\n});\n\nconst searchContactListType = PropTypes.arrayOf(\n  PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  }),\n);\nconst recipientsType = PropTypes.arrayOf(\n  PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  }),\n);\n\nRecipientsInputV2.propTypes = {\n  addToRecipients: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  contactInfoRenderer: PropTypes.func,\n  contactPhoneRenderer: PropTypes.func,\n  currentLocale: PropTypes.string.isRequired,\n  enableTitle: PropTypes.bool,\n  formatContactPhone: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  multiple: PropTypes.bool,\n  onInputChange: PropTypes.func.isRequired,\n  onInputClear: PropTypes.func.isRequired,\n  phoneSourceNameRenderer: PropTypes.func,\n  phoneTypeRenderer: PropTypes.func,\n  placeholder: PropTypes.string,\n  recipients: recipientsType.isRequired,\n  recipientsClassName: PropTypes.string,\n  removeFromRecipients: PropTypes.func.isRequired,\n  searchContactList: searchContactListType.isRequired,\n  useRCUI: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  isLastInputFromDialpad: PropTypes.bool,\n};\n\nRecipientsInputV2.defaultProps = {\n  className: undefined,\n  contactInfoRenderer: undefined,\n  contactPhoneRenderer: undefined,\n  enableTitle: false,\n  label: undefined,\n  multiple: false,\n  phoneSourceNameRenderer: undefined,\n  phoneTypeRenderer: undefined,\n  placeholder: undefined,\n  recipientsClassName: undefined,\n  useRCUI: false,\n  isLastInputFromDialpad: false,\n};\n\nexport default RecipientsInputV2;\n"],"file":"index.js"}