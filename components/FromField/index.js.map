{"version":3,"sources":["components/FromField/index.js"],"names":["PhoneNumber","formatPhone","usageType","currentLocale","phoneNumber","usageTypeDom","styles","i18n","getString","propTypes","PropTypes","func","isRequired","string","defaultProps","FromField","className","fromNumber","fromNumbers","onChange","hidden","showAnonymous","options","push","root","selectIcon","value","option","arrayOf","shape","bool","undefined"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DropdownSelect from '../DropdownSelect';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nfunction PhoneNumber({ formatPhone, usageType, currentLocale, phoneNumber }) {\n  const usageTypeDom = usageType ? (\n    <span className={styles.usageType}>\n      {i18n.getString(usageType, currentLocale)}\n    </span>\n  ) : null;\n  return (\n    <span className={styles.phoneNumber}>\n      {usageTypeDom}\n      <span>{formatPhone(phoneNumber)}</span>\n    </span>\n  );\n}\n\nPhoneNumber.propTypes = {\n  formatPhone: PropTypes.func.isRequired,\n  phoneNumber: PropTypes.string,\n  usageType: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nPhoneNumber.defaultProps = {\n  phoneNumber: null,\n  usageType: null,\n};\n\n// phone number formatting becomes expensive when there are lots of numbers\n// memo makes this a pure component to reduce rendering cost\nconst FromField = memo(function FromField({\n  className,\n  fromNumber,\n  fromNumbers,\n  onChange,\n  formatPhone,\n  hidden,\n  showAnonymous,\n  currentLocale,\n}) {\n  if (hidden) {\n    return null;\n  }\n  const options = [...fromNumbers];\n  if (showAnonymous) {\n    options.push({\n      phoneNumber: 'anonymous',\n    });\n  }\n  return (\n    <DropdownSelect\n      className={classnames(styles.root, className)}\n      iconClassName={styles.selectIcon}\n      value={fromNumber}\n      label={`${i18n.getString('from', currentLocale)}:`}\n      onChange={onChange}\n      options={options}\n      renderValue={(value) => {\n        if (value === 'anonymous') {\n          return <span>{i18n.getString('Blocked', currentLocale)}</span>;\n        }\n        return (\n          <PhoneNumber\n            formatPhone={formatPhone}\n            phoneNumber={value}\n            currentLocale={currentLocale}\n          />\n        );\n      }}\n      valueFunction={(option) => option.phoneNumber}\n      renderFunction={(option) => {\n        if (option.phoneNumber === 'anonymous') {\n          return <span>{i18n.getString('Blocked', currentLocale)}</span>;\n        }\n        return (\n          <PhoneNumber\n            formatPhone={formatPhone}\n            phoneNumber={option.phoneNumber}\n            usageType={option.usageType}\n            currentLocale={currentLocale}\n          />\n        );\n      }}\n    />\n  );\n});\n\nFromField.propTypes = {\n  fromNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  fromNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      usageType: PropTypes.string,\n    }),\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  hidden: PropTypes.bool.isRequired,\n  showAnonymous: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nFromField.defaultProps = {\n  fromNumber: null,\n  className: undefined,\n  showAnonymous: true,\n};\n\nexport default FromField;\n"],"file":"index.js"}