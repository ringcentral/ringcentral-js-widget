{"version":3,"sources":["components/MeetingAlert/index.js"],"names":["MeetingAlert","message","payload","currentLocale","application","msg","meetingStatus","insufficientPermissions","i18n","getString","permissionName","propTypes","PropTypes","string","isRequired","shape","defaultProps","undefined","handleMessage","emptyTopic","noPassword","scheduledSuccess","updatedSuccess","internalError"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,YAAT,OAIZ;AAAA,0BAHDC,OAGC;AAAA,MAHUA,OAGV,gBAHUA,OAGV;AAAA,MAHmBC,OAGnB,gBAHmBA,OAGnB;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAIC,GAAJ;;AACA,UAAQJ,OAAR;AACE,SAAKK,0BAAcC,uBAAnB;AACEF,MAAAA,GAAG,GACD,gCAAC,4BAAD;AACE,QAAA,OAAO,EAAEG,iBAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CADX;AAEE,QAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAXA,WADM;AAENM,UAAAA,cAAc,EAAER,OAAO,CAACQ;AAFlB;AAFV,QADF;AASA;;AACF;AACEL,MAAAA,GAAG,GAAGG,iBAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CAAN;AACA;AAdJ;;AAgBA,SAAO,8CAAOE,GAAP,CAAP;AACD;;AAEDL,YAAY,CAACW,SAAb,GAAyB;AACvBR,EAAAA,aAAa,EAAES,sBAAUC,MAAV,CAAiBC,UADT;AAEvBb,EAAAA,OAAO,EAAEW,sBAAUG,KAAV,CAAgB;AACvBd,IAAAA,OAAO,EAAEW,sBAAUC,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAJoB;AAKvBV,EAAAA,WAAW,EAAEQ,sBAAUC;AALA,CAAzB;AAQAb,YAAY,CAACgB,YAAb,GAA4B;AAC1BZ,EAAAA,WAAW,EAAEa;AADa,CAA5B;;AAIAjB,YAAY,CAACkB,aAAb,GAA6B;AAAA,MAAGjB,OAAH,SAAGA,OAAH;AAAA,SAC3BA,OAAO,KAAKK,0BAAca,UAA1B,IACAlB,OAAO,KAAKK,0BAAcc,UAD1B,IAEAnB,OAAO,KAAKK,0BAAcC,uBAF1B,IAGAN,OAAO,KAAKK,0BAAce,gBAH1B,IAIApB,OAAO,KAAKK,0BAAcgB,cAJ1B,IAKArB,OAAO,KAAKK,0BAAciB,aANC;AAAA,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport meetingStatus from 'ringcentral-integration/modules/Meeting/meetingStatus';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function MeetingAlert({\n  message: { message, payload },\n  currentLocale,\n  application,\n}) {\n  let msg;\n  switch (message) {\n    case meetingStatus.insufficientPermissions:\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{\n            application,\n            permissionName: payload.permissionName,\n          }}\n        />\n      );\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return <span>{msg}</span>;\n}\n\nMeetingAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  application: PropTypes.string,\n};\n\nMeetingAlert.defaultProps = {\n  application: undefined,\n};\n\nMeetingAlert.handleMessage = ({ message }) =>\n  message === meetingStatus.emptyTopic ||\n  message === meetingStatus.noPassword ||\n  message === meetingStatus.insufficientPermissions ||\n  message === meetingStatus.scheduledSuccess ||\n  message === meetingStatus.updatedSuccess ||\n  message === meetingStatus.internalError;\n"],"file":"index.js"}