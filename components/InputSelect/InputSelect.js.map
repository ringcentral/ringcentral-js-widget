{"version":3,"sources":["components/InputSelect/InputSelect.tsx"],"names":["InputSelect","props","checkPropsUpdate","debonce","timeout","wrapper","_renderPickList","subjectPicklist","expand","state","styles","select","map","option","i","onSelectChange","primary","listText","subject","setState","onSelectOption","onChange","then","onSave","toggleDropDownList","window","addEventListener","_handleDocumentClick","removeEventListener","e","contains","target","nextProps","required","hasError","trim","root","ref","maxLength","updateValue","value","disabled","length","time","Component","defaultProps","undefined"],"mappings":"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","sourcesContent":["import {\n  RcList,\n  RcListItem,\n  RcListItemText,\n  RcTextField,\n} from '@ringcentral-integration/rcui';\nimport React, { Component } from 'react';\n\nimport { bindDebonce } from '../../lib/bindDebonce';\nimport { bindNextPropsUpdate } from '../../lib/bindNextPropsUpdate';\nimport { CustomArrowButton } from '../Rcui/CustomArrowButton';\nimport styles from './styles.scss';\n\ntype InputSelectProps = {\n  required?: boolean;\n  subjectPicklist?: any[];\n  subject?: string;\n  onChange?: (...args: any[]) => any;\n  onSave?: (...args: any[]) => any;\n  timeout?: number;\n  onSelectOption?: (...args: any[]) => any;\n};\ntype InputSelectState = {\n  subject: any;\n  expand: boolean;\n};\nexport default class InputSelect extends Component<\n  InputSelectProps,\n  InputSelectState\n> {\n  static defaultProps: Partial<InputSelectProps> = {\n    required: false,\n    subjectPicklist: [],\n    subject: null,\n    onChange: undefined,\n    onSave: undefined,\n    timeout: 500,\n    onSelectOption: undefined,\n  };\n\n  checkPropsUpdate = bindNextPropsUpdate(this);\n  debonce = bindDebonce(this, this.props.timeout);\n\n  wrapper: HTMLDivElement;\n  constructor(props) {\n    super(props);\n    this.state = {\n      subject: this.props.subject,\n      expand: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.checkPropsUpdate(nextProps, 'subject');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this._handleDocumentClick, false);\n  }\n\n  _renderPickList = () => {\n    const { subjectPicklist } = this.props;\n    const { expand } = this.state;\n    if (!expand) {\n      return null;\n    }\n    return (\n      <div className={styles.select}>\n        <RcList>\n          {subjectPicklist.map((option, i) => (\n            <RcListItem\n              key={i}\n              button\n              singleLine\n              onClick={() => this.onSelectChange(option)}\n              data-sign={`match${i}`}\n            >\n              <RcListItemText\n                primary={option}\n                classes={{\n                  primary: styles.listText,\n                }}\n              />\n            </RcListItem>\n          ))}\n        </RcList>\n      </div>\n    );\n  };\n\n  render() {\n    const { subjectPicklist, required } = this.props;\n    const { subject = '' } = this.state;\n    const hasError = required && subject.trim() === '';\n    return (\n      <div\n        className={styles.root}\n        ref={(ref) => {\n          this.wrapper = ref;\n        }}\n      >\n        <RcTextField\n          label=\"Subject\"\n          data-sign=\"subject\"\n          title={subject}\n          fullWidth\n          required={required}\n          value={subject}\n          error={hasError}\n          inputProps={{\n            maxLength: 255,\n          }}\n          onChange={(e) => this.updateValue(e.target.value, 500)}\n          endAdornment={(disabled) =>\n            subjectPicklist.length > 0 && (\n              <CustomArrowButton\n                icon=\"arrow_down\"\n                disabled={disabled}\n                onClick={this.toggleDropDownList}\n              />\n            )\n          }\n        />\n        {this._renderPickList()}\n      </div>\n    );\n  }\n\n  updateValue(subject, time) {\n    this.setState({ subject }, () => {\n      this.debonce(() => {\n        this.props.onChange(this.state.subject).then(() => {\n          this.debonce(() => this.props.onSave(), this.props.timeout - time);\n        });\n      }, time);\n    });\n  }\n\n  onSelectChange = (subject) => {\n    this.setState({ subject }, () => {\n      this.debonce(() => {\n        if (this.props.onSelectOption) {\n          this.props.onSelectOption();\n        }\n        this.props.onChange(this.state.subject).then(() => this.props.onSave());\n      }, 0);\n    });\n    this.toggleDropDownList();\n  };\n\n  toggleDropDownList = () => {\n    const { expand } = this.state;\n    if (!expand) {\n      window.addEventListener('click', this._handleDocumentClick, false);\n    } else {\n      window.removeEventListener('click', this._handleDocumentClick, false);\n    }\n    this.setState({ expand: !expand });\n  };\n\n  _handleDocumentClick = (e) => {\n    if (this.wrapper && this.wrapper.contains(e.target)) {\n      return;\n    }\n    this.toggleDropDownList();\n  };\n}\n"],"file":"InputSelect.js"}