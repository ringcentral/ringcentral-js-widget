{"version":3,"sources":["components/ContactsView/index.js"],"names":["AddContact","className","onClick","styles","iconContainer","iconNode","propTypes","PropTypes","string","func","isRequired","defaultProps","undefined","RefreshContacts","onRefresh","refreshing","currentLocale","icon","iconWrappClass","refreshingIcon","refreshIcon","i18n","getString","bool","ContactsView","props","calculateContentSize","contentWrapper","current","getBoundingClientRect","rect","contentHeight","bottom","top","contentWidth","right","left","onSearchInputChange","value","target","setState","searchString","search","delay","onSourceSelect","searchSource","contactList","resetScrollTop","onResize","_mounted","state","unfold","React","createRef","onUnfoldChange","onVisitPage","window","addEventListener","nextProps","nextState","contactSourceNames","removeEventListener","clearTimeout","_searchTimeoutId","onSearchContact","setTimeout","contactGroups","showSpinner","getAvatarUrl","getPresence","onItemSelect","Filter","contactSourceFilterRenderer","sourceNodeRenderer","children","currentSiteCode","isMultipleSiteEnabled","showRefresh","refreshButton","actionButton","root","actionBar","searchInput","withRefresh","content","spinner","Component","arrayOf","shape","id","caption","contacts","ContactItem","contact","node","ContactSourceFilter"],"mappings":"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","sourcesContent":["import { contains } from 'ramda';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport debounce from 'ringcentral-integration/lib/debounce';\nimport Panel from '../Panel';\nimport SearchInput from '../SearchInput';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\n\nimport ContactList from '../ContactList';\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport AddContactIcon from '../../assets/images/ContactAdd.svg';\nimport RefreshContactIcon from '../../assets/images/RetryIcon.svg';\nimport RefreshingIcon from '../../assets/images/OvalLoading.svg';\n\nimport ContactSourceFilter from '../ContactSourceFilter';\n\nfunction AddContact({ className, onClick }) {\n  return (\n    <div className={className} onClick={onClick}>\n      <div className={styles.iconContainer}>\n        <AddContactIcon className={styles.iconNode} />\n      </div>\n    </div>\n  );\n}\nAddContact.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\nAddContact.defaultProps = {\n  className: undefined,\n};\n\nfunction RefreshContacts({ className, onRefresh, refreshing, currentLocale }) {\n  let icon = null;\n  let iconWrappClass = null;\n  if (refreshing) {\n    iconWrappClass = styles.refreshingIcon;\n    icon = (\n      <RefreshingIcon className={styles.iconNode} width={12} height={12} />\n    );\n  } else {\n    iconWrappClass = styles.refreshIcon;\n    icon = (\n      <RefreshContactIcon className={styles.iconNode} width={12} height={12} />\n    );\n  }\n  return (\n    <div\n      className={classnames(iconWrappClass, className)}\n      onClick={onRefresh}\n      title={i18n.getString('refresh', currentLocale)}\n    >\n      <div className={styles.iconContainer}>{icon}</div>\n    </div>\n  );\n}\nRefreshContacts.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  refreshing: PropTypes.bool.isRequired,\n};\nRefreshContacts.defaultProps = {\n  className: undefined,\n};\n\nexport default class ContactsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: props.searchString,\n      unfold: false,\n      contentHeight: 0,\n      contentWidth: 0,\n      refreshing: false,\n    };\n    this.contactList = React.createRef();\n    this.contentWrapper = React.createRef();\n    this.onUnfoldChange = (unfold) => {\n      this.setState({\n        unfold,\n      });\n    };\n  }\n\n  calculateContentSize = () => {\n    if (\n      this.contentWrapper &&\n      this.contentWrapper.current &&\n      this.contentWrapper.current.getBoundingClientRect\n    ) {\n      const rect = this.contentWrapper.current.getBoundingClientRect();\n      return {\n        contentHeight: rect.bottom - rect.top,\n        contentWidth: rect.right - rect.left,\n      };\n    }\n    return {\n      contentHeight: 0,\n      contentWidth: 0,\n    };\n  };\n\n  componentDidMount() {\n    this._mounted = true;\n    if (typeof this.props.onVisitPage === 'function') {\n      this.props.onVisitPage();\n    }\n    this.search({\n      searchSource: this.props.searchSource,\n      searchString: this.state.searchString,\n    });\n    this.setState({\n      ...this.calculateContentSize(),\n    });\n    window.addEventListener('resize', this.onResize);\n  }\n\n  UNSAFE_componentWillUpdate(nextProps, nextState) {\n    if (nextProps.searchString !== this.props.searchString) {\n      nextState.searchString = nextProps.searchString;\n    }\n    if (!contains(nextProps.searchSource, nextProps.contactSourceNames)) {\n      this.search({\n        searchSource: nextProps.contactSourceNames[0],\n        searchString: this.state.searchString,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    window.removeEventListener('resize', this.onResize);\n    clearTimeout(this._searchTimeoutId);\n  }\n\n  onSearchInputChange = ({ target: { value } }) => {\n    this.setState({\n      searchString: value,\n    });\n    this.search({\n      searchString: value,\n      delay: 100,\n    });\n  };\n\n  onSourceSelect = (searchSource) => {\n    if (\n      this.contactList &&\n      this.contactList.current &&\n      this.contactList.current.resetScrollTop\n    ) {\n      this.contactList.current.resetScrollTop();\n    }\n    this.search({\n      searchSource,\n    });\n  };\n\n  onResize = debounce(() => {\n    if (this._mounted) {\n      this.setState({\n        ...this.calculateContentSize(),\n      });\n    }\n  }, 300);\n\n  onRefresh = async () => {\n    if (typeof this.props.onRefresh !== 'function') {\n      return;\n    }\n    this.setState({ refreshing: true });\n    await this.props.onRefresh();\n    this.setState({ refreshing: false });\n  };\n\n  search({\n    searchSource = this.props.searchSource,\n    searchString = this.state.searchString,\n    delay = 0,\n  }) {\n    if (this.props.onSearchContact) {\n      if (this._searchTimeoutId) {\n        clearTimeout(this._searchTimeoutId);\n      }\n      if (delay) {\n        this._searchTimeoutId = setTimeout(\n          () =>\n            this.props.onSearchContact({\n              searchSource,\n              searchString,\n            }),\n          delay,\n        );\n      } else {\n        this.props.onSearchContact({\n          searchSource,\n          searchString,\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      contactSourceNames,\n      searchSource,\n      showSpinner,\n      getAvatarUrl,\n      getPresence,\n      onItemSelect,\n      contactSourceFilterRenderer: Filter,\n      sourceNodeRenderer,\n      onRefresh,\n      children,\n      currentSiteCode,\n      isMultipleSiteEnabled,\n    } = this.props;\n\n    const showRefresh = typeof onRefresh === 'function';\n    const refreshButton = showRefresh ? (\n      <RefreshContacts\n        className={styles.actionButton}\n        refreshing={this.state.refreshing}\n        currentLocale={currentLocale}\n        onRefresh={this.onRefresh}\n      />\n    ) : null;\n    return (\n      <div className={styles.root}>\n        <div className={styles.actionBar}>\n          <SearchInput\n            dataSign=\"contactsSearchInput\"\n            className={classnames(\n              styles.searchInput,\n              showRefresh ? styles.withRefresh : '',\n            )}\n            value={this.state.searchString || ''}\n            onChange={this.onSearchInputChange}\n            placeholder={i18n.getString('searchPlaceholder', currentLocale)}\n          />\n          {refreshButton}\n          <Filter\n            className={styles.actionButton}\n            currentLocale={currentLocale}\n            contactSourceNames={contactSourceNames}\n            onSourceSelect={this.onSourceSelect}\n            selectedSourceName={searchSource}\n            unfold={this.state.unfold}\n            onUnfoldChange={this.onUnfoldChange}\n          />\n        </div>\n        <Panel className={styles.content}>\n          <div className={styles.contentWrapper} ref={this.contentWrapper}>\n            <ContactList\n              ref={this.contactList}\n              currentLocale={currentLocale}\n              contactGroups={contactGroups}\n              getAvatarUrl={getAvatarUrl}\n              getPresence={getPresence}\n              onItemSelect={onItemSelect}\n              currentSiteCode={currentSiteCode}\n              isMultipleSiteEnabled={isMultipleSiteEnabled}\n              sourceNodeRenderer={sourceNodeRenderer}\n              width={this.state.contentWidth}\n              height={this.state.contentHeight}\n            />\n          </div>\n        </Panel>\n        {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n        {children}\n      </div>\n    );\n  }\n}\n\nContactsView.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n    }),\n  ).isRequired,\n  contactSourceNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  searchSource: PropTypes.string,\n  searchString: PropTypes.string,\n  onItemSelect: PropTypes.func,\n  onSearchContact: PropTypes.func,\n  contactSourceFilterRenderer: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  onVisitPage: PropTypes.func,\n  onRefresh: PropTypes.func,\n  children: PropTypes.node,\n};\n\nContactsView.defaultProps = {\n  searchSource: undefined,\n  searchString: undefined,\n  onItemSelect: undefined,\n  onSearchContact: undefined,\n  contactSourceFilterRenderer: ContactSourceFilter,\n  sourceNodeRenderer: undefined,\n  onVisitPage: undefined,\n  children: undefined,\n  onRefresh: undefined,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n};\n"],"file":"index.js"}