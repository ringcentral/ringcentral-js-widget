{"version":3,"sources":["components/CallMonitorBar/index.js"],"names":["CallInfoBar","label","onClick","currentLocale","shouldDisplayViewCallsBtn","styles","bar","currentCallInfo","viewCallsBtn","i18n","getString","propTypes","PropTypes","string","func","bool","defaultProps","undefined","CallMonitorBar","props","state","hoverBar","showBtn","currentCalls","length","setState","hideBtn","ringingCalls","onHoldCalls","otherDeviceCalls","onCurrentCallBtnClick","onViewCallBtnClick","shouldDisplayCurrentCallBtn","numberOfIncomingCalls","numberOfOnHoldCalls","numberOfOtherDeviceCalls","box","numberOf","duration","startTime","currentCallBtn","Component","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatMessage from 'format-message';\n\nimport DurationCounter from '../DurationCounter';\nimport { Button } from '../Button';\nimport CarrouselBar from '../CarrouselBar';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport function CallInfoBar({\n  label,\n  onClick,\n  currentLocale,\n  shouldDisplayViewCallsBtn,\n}) {\n  return (\n    <div className={styles.bar}>\n      <div className={styles.currentCallInfo} title={label} onClick={onClick}>\n        {label}\n      </div>\n      {shouldDisplayViewCallsBtn ? (\n        <Button\n          className={styles.viewCallsBtn}\n          tooltip={i18n.getString('viewCalls', currentLocale)}\n          onClick={onClick}\n        >\n          {i18n.getString('viewCalls', currentLocale)}\n        </Button>\n      ) : null}\n    </div>\n  );\n}\nCallInfoBar.propTypes = {\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  currentLocale: PropTypes.string,\n  shouldDisplayViewCallsBtn: PropTypes.bool,\n};\nCallInfoBar.defaultProps = {\n  label: '',\n  onClick: undefined,\n  currentLocale: '',\n  shouldDisplayViewCallsBtn: false,\n};\n\nexport default class CallMonitorBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverBar: false,\n    };\n    this.showBtn = () => {\n      if (this.props.currentCalls.length > 0) {\n        this.setState({\n          hoverBar: true,\n        });\n      }\n    };\n    this.hideBtn = () => {\n      this.setState({\n        hoverBar: false,\n      });\n    };\n  }\n\n  render() {\n    const {\n      ringingCalls,\n      onHoldCalls,\n      currentCalls,\n      otherDeviceCalls,\n      currentLocale,\n      onCurrentCallBtnClick,\n      onViewCallBtnClick,\n      shouldDisplayCurrentCallBtn,\n      shouldDisplayViewCallsBtn,\n    } = this.props;\n\n    const numberOfIncomingCalls = ringingCalls.length;\n    const numberOfOnHoldCalls = onHoldCalls.length;\n    const numberOfOtherDeviceCalls = otherDeviceCalls.length;\n\n    return (\n      <div\n        className={styles.bar}\n        onMouseOver={this.showBtn}\n        onMouseLeave={this.hideBtn}\n      >\n        <div className={styles.box}>\n          <CarrouselBar hoverBar={this.state.hoverBar}>\n            {numberOfOnHoldCalls > 0 ? (\n              <CallInfoBar\n                label={\n                  numberOfOnHoldCalls === 1\n                    ? formatMessage(\n                        i18n.getString('callOnHold', currentLocale),\n                        { numberOf: numberOfOnHoldCalls },\n                      )\n                    : formatMessage(\n                        i18n.getString('callsOnHold', currentLocale),\n                        { numberOf: numberOfOnHoldCalls },\n                      )\n                }\n                currentLocale={currentLocale}\n                onClick={onViewCallBtnClick}\n                shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n              />\n            ) : null}\n            {numberOfIncomingCalls > 0 ? (\n              <CallInfoBar\n                label={\n                  numberOfIncomingCalls === 1\n                    ? formatMessage(\n                        i18n.getString('incomingCall', currentLocale),\n                        { numberOf: numberOfIncomingCalls },\n                      )\n                    : formatMessage(\n                        i18n.getString('incomingCalls', currentLocale),\n                        { numberOf: numberOfIncomingCalls },\n                      )\n                }\n                currentLocale={currentLocale}\n                onClick={onViewCallBtnClick}\n                shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n              />\n            ) : null}\n            {numberOfOtherDeviceCalls > 0 ? (\n              <CallInfoBar\n                label={\n                  numberOfOtherDeviceCalls === 1\n                    ? formatMessage(\n                        i18n.getString('otherDeviceCall', currentLocale),\n                        { numberOf: numberOfOtherDeviceCalls },\n                      )\n                    : formatMessage(\n                        i18n.getString('otherDeviceCalls', currentLocale),\n                        { numberOf: numberOfOtherDeviceCalls },\n                      )\n                }\n                currentLocale={currentLocale}\n                onClick={onViewCallBtnClick}\n                shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n              />\n            ) : null}\n            {currentCalls.length > 0 ? (\n              <div className={styles.bar}>\n                <div\n                  data-sign=\"callDuration\"\n                  className={styles.duration}\n                  onClick={onCurrentCallBtnClick}\n                >\n                  <DurationCounter startTime={currentCalls[0].startTime} />\n                </div>\n                {shouldDisplayCurrentCallBtn && onCurrentCallBtnClick ? (\n                  <Button\n                    dataSign=\"currentCallButton\"\n                    className={styles.currentCallBtn}\n                    onClick={onCurrentCallBtnClick}\n                  >\n                    {i18n.getString('currentCall', currentLocale)}\n                  </Button>\n                ) : null}\n              </div>\n            ) : null}\n          </CarrouselBar>\n        </div>\n      </div>\n    );\n  }\n}\nCallMonitorBar.propTypes = {\n  ringingCalls: PropTypes.array,\n  currentCalls: PropTypes.array,\n  onHoldCalls: PropTypes.array,\n  otherDeviceCalls: PropTypes.array,\n  currentLocale: PropTypes.string.isRequired,\n  onCurrentCallBtnClick: PropTypes.func,\n  onViewCallBtnClick: PropTypes.func,\n  shouldDisplayCurrentCallBtn: PropTypes.bool,\n  shouldDisplayViewCallsBtn: PropTypes.bool,\n};\nCallMonitorBar.defaultProps = {\n  ringingCalls: [],\n  currentCalls: [],\n  onHoldCalls: [],\n  otherDeviceCalls: [],\n  onCurrentCallBtnClick: undefined,\n  onViewCallBtnClick: undefined,\n  shouldDisplayCurrentCallBtn: false,\n  shouldDisplayViewCallsBtn: false,\n};\n"],"file":"index.js"}