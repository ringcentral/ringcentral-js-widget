{"version":3,"sources":["components/MainViewPanel/WorkingStateSelect/WorkingStateButton/WorkingStateButton.tsx"],"names":["WorkingStateButton","label","options","optionIndex","color","onChange","disabled","timerText","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","menuOpened","Boolean","styles","state","fullWidth","stateDot","TOOLTIP_DEFAULT_DELAY_TIME","stateName","timer","icon","arrowUpSvg","arrowDownSvg","style","maxHeight","paper","map","i","selected","root","item","stateListItemDot","stateItemName","agentAuxState"],"mappings":"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","sourcesContent":["import {\n  RcButtonBase,\n  RcIcon,\n  RcMenu,\n  RcMenuItem,\n} from '@ringcentral-integration/rcui';\nimport arrowDownSvg from '@ringcentral-integration/rcui/icons/icon-arrow-down.svg';\nimport arrowUpSvg from '@ringcentral-integration/rcui/icons/icon-arrow-up.svg';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, useState } from 'react';\nimport { Tooltip } from 'ringcentral-widgets/components/Rcui/Tooltip';\nimport { TOOLTIP_DEFAULT_DELAY_TIME } from 'ringcentral-widgets/lib/toolTipDelayTime';\n\nimport { EvCustomAvailableAgentState } from '../../../../interfaces/EvMainViewUI.interface';\nimport styles from './styles.scss';\n\nexport interface WorkingStateButtonProps {\n  label: string;\n  optionIndex: number;\n  onChange(state: EvCustomAvailableAgentState): void;\n  options: EvCustomAvailableAgentState[];\n  color: string;\n  disabled: boolean;\n  timerText: string;\n  isWide: boolean;\n}\n\nexport const WorkingStateButton: FunctionComponent<WorkingStateButtonProps> = ({\n  label,\n  options,\n  optionIndex,\n  color,\n  onChange,\n  disabled,\n  timerText,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    if (!disabled) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuOpened = Boolean(anchorEl);\n\n  return (\n    <>\n      <div\n        className={classNames(styles.state, styles[color])}\n        onClick={handleClick}\n      >\n        <RcButtonBase disabled={disabled} className={styles.fullWidth}>\n          <div className={styles.stateDot} />\n          <Tooltip title={label} enterDelay={TOOLTIP_DEFAULT_DELAY_TIME}>\n            <div className={styles.stateName} data-sign=\"stateName\">\n              {label}\n            </div>\n          </Tooltip>\n          <div className={styles.timer} data-sign=\"timer\">\n            {timerText}\n          </div>\n          <RcIcon\n            className={styles.icon}\n            symbol={menuOpened ? arrowUpSvg : arrowDownSvg}\n          />\n        </RcButtonBase>\n      </div>\n      <RcMenu\n        PaperProps={{ style: { maxHeight: 280 } }}\n        classes={{ paper: styles.paper }}\n        anchorEl={anchorEl}\n        open={menuOpened}\n        onClose={handleClose}\n      >\n        {options.map((state, i) => {\n          const selected = optionIndex === i;\n          return (\n            <RcMenuItem\n              key={i}\n              classes={{ root: styles.item }}\n              onClick={() => {\n                handleClose();\n                onChange(state);\n              }}\n              size=\"medium\"\n              selected={selected}\n            >\n              <div\n                className={classNames(\n                  styles.stateListItemDot,\n                  styles[state.color],\n                )}\n              />\n              <div className={styles.stateItemName}>{state.agentAuxState}</div>\n            </RcMenuItem>\n          );\n        })}\n      </RcMenu>\n    </>\n  );\n};\n\nexport default WorkingStateButton;\n"],"file":"WorkingStateButton.js"}