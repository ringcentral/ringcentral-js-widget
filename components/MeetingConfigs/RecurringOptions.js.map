{"version":3,"sources":["components/MeetingConfigs/RecurringOptions.tsx"],"names":["RecurringOptions","isRecurring","currentLocale","update","meeting","styles","section","RecurringMeetingDiv","spaceBetween","label","i18n","getString","isCheckRecurring","meetingType","recurringDescribe","defaultProps","occurrenceDesc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;AAUA,IAAMA,gBAA0D,GAAG,SAA7DA,gBAA6D,OAK7D;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,SACE,kEACE,gCAAC,0BAAD;AAAgB,IAAA,SAAS,EAAEC,mBAAOC;AAAlC,KACE;AAAK,IAAA,SAAS,EAAED,mBAAOE;AAAvB,KACE;AAAK,IAAA,SAAS,EAAEF,mBAAOG;AAAvB,KACE;AAAM,IAAA,SAAS,EAAEH,mBAAOI;AAAxB,KACGC,iBAAKC,SAAL,CAAe,kBAAf,EAAmCT,aAAnC,CADH,CADF,EAIE,gCAAC,kBAAD;AACE,IAAA,OAAO,EAAED,WADX;AAEE,IAAA,QAAQ,EAAE,kBAACW,gBAAD,EAAsB;AAC9B,UAAMC,WAAW,GAAGD,gBAAgB,GAChC,oBADgC,GAEhC,WAFJ;AAGAT,MAAAA,MAAM,mBACDC,OADC;AAEJS,QAAAA,WAAW,EAAXA;AAFI,SAAN;AAID,KAVH;AAWE,IAAA,QAAQ,EAAC;AAXX,IAJF,CADF,EAmBGZ,WAAW,GACV;AAAK,IAAA,SAAS,EAAEI,mBAAOS;AAAvB,KACGJ,iBAAKC,SAAL,CAAe,mBAAf,EAAoCT,aAApC,CADH,CADU,GAIR,IAvBN,CADF,CADF,CADF;AA+BD,CArCD;;;AAsCAF,gBAAgB,CAACe,YAAjB,GAAgC;AAC9BC,EAAAA,cAAc,EAAE;AADc,CAAhC","sourcesContent":["import 'react-widgets/dist/css/react-widgets.css';\n\nimport React, { FunctionComponent } from 'react';\n\nimport MeetingSection from '../MeetingSection';\nimport Switch from '../Switch';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ninterface RecurringOptionsProps {\n  update: (...args: any[]) => any;\n  currentLocale: string;\n  meeting: any;\n  isRecurring: boolean;\n  occurrenceDesc?: string;\n}\n\nconst RecurringOptions: FunctionComponent<RecurringOptionsProps> = ({\n  isRecurring,\n  currentLocale,\n  update,\n  meeting,\n}) => {\n  return (\n    <>\n      <MeetingSection className={styles.section}>\n        <div className={styles.RecurringMeetingDiv}>\n          <div className={styles.spaceBetween}>\n            <span className={styles.label}>\n              {i18n.getString('recurringMeeting', currentLocale)}\n            </span>\n            <Switch\n              checked={isRecurring}\n              onChange={(isCheckRecurring) => {\n                const meetingType = isCheckRecurring\n                  ? 'ScheduledRecurring'\n                  : 'Scheduled';\n                update({\n                  ...meeting,\n                  meetingType,\n                });\n              }}\n              dataSign=\"recuttingMeeting\"\n            />\n          </div>\n          {isRecurring ? (\n            <div className={styles.recurringDescribe}>\n              {i18n.getString('recurringDescribe', currentLocale)}\n            </div>\n          ) : null}\n        </div>\n      </MeetingSection>\n    </>\n  );\n};\nRecurringOptions.defaultProps = {\n  occurrenceDesc: 'N/A',\n};\nexport { RecurringOptions };\n"],"file":"RecurringOptions.js"}