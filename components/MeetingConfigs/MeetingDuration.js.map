{"version":3,"sources":["components/MeetingConfigs/MeetingDuration.tsx"],"names":["minutesList","MINUTE_SCALE","hoursList","HOUR_SCALE","MeetingDuration","currentLocale","meeting","update","isRecurring","showRecurringMeetingV2","i18n","getString","styles","spaceBetween","duration","list","parseInt","schedule","durationInMinutes","value","restMinutes","isMax","slice","restHours","minutes"],"mappings":"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","sourcesContent":["import 'react-widgets/dist/css/react-widgets.css';\n\nimport classnames from 'classnames';\nimport React, { FunctionComponent } from 'react';\nimport DropdownList from 'react-widgets/lib/DropdownList';\n\nimport MeetingSection from '../MeetingSection';\nimport { HOUR_SCALE, MINUTE_SCALE } from './constants';\nimport { getHoursList, getMinutesList } from './helpers';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst minutesList = getMinutesList(MINUTE_SCALE);\nconst hoursList = getHoursList(HOUR_SCALE);\n\ninterface MeetingDurationProps {\n  update: (...args: any[]) => any;\n  currentLocale: string;\n  meeting: any;\n  isRecurring: boolean;\n  showRecurringMeetingV2: boolean;\n}\n\nconst MeetingDuration: FunctionComponent<MeetingDurationProps> = ({\n  currentLocale,\n  meeting,\n  update,\n  isRecurring,\n  showRecurringMeetingV2,\n}) =>\n  !isRecurring || showRecurringMeetingV2 ? (\n    <MeetingSection title={i18n.getString('duration', currentLocale)}>\n      <div className={classnames(styles.spaceBetween, styles.duration)}>\n        <div className={styles.list}>\n          <div className={styles.hoursList}>\n            <DropdownList\n              data={hoursList}\n              valueField=\"value\"\n              textField=\"text\"\n              value={parseInt(meeting.schedule.durationInMinutes / 60, 10)}\n              onChange={({ value }) => {\n                let restMinutes = meeting.schedule.durationInMinutes % 60;\n                const isMax = value === hoursList.slice(-1)[0].value;\n                restMinutes = isMax ? 0 : restMinutes;\n                const durationInMinutes = value * 60 + restMinutes;\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    durationInMinutes,\n                  },\n                });\n              }}\n            />\n          </div>\n        </div>\n        <div className={styles.list}>\n          <div className={styles.minutesList}>\n            <DropdownList\n              data={minutesList}\n              valueField=\"value\"\n              textField=\"text\"\n              value={meeting.schedule.durationInMinutes % 60 || 0}\n              onChange={({ value }) => {\n                const restHours = parseInt(\n                  meeting.schedule.durationInMinutes / 60,\n                  10,\n                );\n                const isMax = restHours === hoursList.slice(-1)[0].value;\n                const minutes = isMax ? 0 : value;\n                const durationInMinutes = restHours * 60 + minutes;\n                update({\n                  ...meeting,\n                  schedule: {\n                    ...meeting.schedule,\n                    durationInMinutes,\n                  },\n                });\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </MeetingSection>\n  ) : null;\n\nexport { MeetingDuration };\n"],"file":"MeetingDuration.js"}