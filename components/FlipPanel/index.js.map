{"version":3,"sources":["components/FlipPanel/index.js"],"names":["FlipPanel","props","onRadioSelect","value","setState","flipValue","onFlip","state","sessionId","flipEnabled","onComplete","flipNumbers","length","phoneNumber","isOnFlip","nextProps","session","onCallEnd","onBack","currentLocale","formatPhone","styles","root","headerTitle","i18n","getString","flipContainer","radioGroup","buttonGroup","button","flipButton","disabled","flipIcon","FlipIcon","completeButton","EndIcon","Component","propTypes","PropTypes","bool","array","isRequired","string","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport BackButton from '../BackButton';\nimport BackHeader from '../BackHeader';\nimport RadioButtonGroup from '../RadioBtnGroup';\nimport CircleButton from '../CircleButton';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class FlipPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipValue:\n        this.props.flipNumbers.length === 0\n          ? ''\n          : this.props.flipNumbers[0].phoneNumber,\n      flipEnabled: !this.props.isOnFlip,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { session, onCallEnd } = this.props;\n    if (session && !nextProps.session) {\n      onCallEnd();\n    }\n  }\n\n  onRadioSelect = (value) => {\n    this.setState({\n      flipValue: value,\n    });\n  }\n\n  onFlip = () => {\n    this.props.onFlip(this.state.flipValue, this.props.sessionId);\n    this.setState({\n      flipEnabled: false,\n    });\n  }\n\n  onComplete = () => {\n    this.props.onComplete(this.props.sessionId);\n  }\n\n  render() {\n    const {\n      isOnFlip,\n      onBack,\n      currentLocale,\n      flipNumbers,\n      formatPhone,\n    } = this.props;\n    const { flipEnabled } = this.state;\n    return (\n      <div className={styles.root} data-sign=\"flipPanel\">\n        <BackHeader\n          onBackClick={isOnFlip ? null : onBack}\n          backButton={<BackButton showIcon={!isOnFlip} />}\n        >\n          <span data-sign=\"flipTitle\" className={styles.headerTitle}>\n            {i18n.getString('flipHeader', currentLocale)}\n          </span>\n        </BackHeader>\n        <div className={styles.flipContainer}>\n          <RadioButtonGroup\n            dataSign=\"flipNumber\"\n            className={styles.radioGroup}\n            radioOptions={flipNumbers}\n            disabled={!flipEnabled}\n            formatPhone={formatPhone}\n            onRadioSelect={this.onRadioSelect}\n            currentLocale={currentLocale}\n          />\n          <div className={styles.buttonGroup}>\n            <div\n              data-sign=\"flip\"\n              className={styles.button}\n              title={i18n.getString('flip', currentLocale)}\n            >\n              <CircleButton\n                disabled={!flipEnabled}\n                className={classnames(\n                  styles.flipButton,\n                  flipEnabled ? '' : styles.disabled,\n                )}\n                iconClassName={styles.flipIcon}\n                onClick={this.onFlip}\n                icon={FlipIcon}\n                showBorder\n              />\n            </div>\n            <div\n              data-sign=\"flipComplete\"\n              className={styles.button}\n              title={i18n.getString('complete', currentLocale)}\n            >\n              <CircleButton\n                disabled={!isOnFlip}\n                className={classnames(\n                  styles.completeButton,\n                  isOnFlip ? '' : styles.disabled,\n                )}\n                onClick={this.onComplete}\n                icon={EndIcon}\n                showBorder\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFlipPanel.propTypes = {\n  isOnFlip: PropTypes.bool,\n  flipNumbers: PropTypes.array.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onBack: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onCallEnd: PropTypes.func.isRequired,\n  session: PropTypes.object,\n  sessionId: PropTypes.string.isRequired,\n};\n\nFlipPanel.defaultProps = {\n  session: null,\n  isOnFlip: false,\n};\n"],"file":"index.js"}