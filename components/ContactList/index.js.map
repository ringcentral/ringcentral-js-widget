{"version":3,"sources":["components/ContactList/index.js"],"names":["CAPTION_HEIGHT","ROW_HEIGHT","Placeholder","message","styles","placeholder","propTypes","PropTypes","string","isRequired","ContactList","props","calculateRowHeight","index","isBottomNoticeRow","bottomNoticeHeight","state","captionRows","findGroup","item","startIndex","contacts","length","groups","rowGetter","bottomNoticeRow","caption","group","onScroll","scrollTop","setState","cellRenderer","rowData","BottomNotice","bottomNotice","groupCaption","currentLocale","getAvatarUrl","getPresence","onItemSelect","sourceNodeRenderer","currentSiteCode","isMultipleSiteEnabled","type","id","onRowsRendered","groupIndex","captions","previousCaption","currentCaption","headerRenderer","getDerivedStateFromProps","list","React","createRef","prevProps","lastContactGroups","contactGroups","current","recomputeRowHeights","rowIndex","count","width","height","isSearching","content","renderList","i18n","getString","root","nextState","push","rowOffset","Component","arrayOf","shape","ContactItem","contact","func","bool","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Column } from 'react-virtualized';\nimport { reduce, find, findIndex } from 'ramda';\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst CAPTION_HEIGHT = 20;\nconst ROW_HEIGHT = 50;\n\nconst Placeholder = ({ message }) => {\n  return <p className={styles.placeholder}>{message}</p>;\n};\nPlaceholder.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ContactList.getDerivedStateFromProps(props);\n    this.list = React.createRef();\n  }\n\n  static getDerivedStateFromProps(\n    props,\n    state = { scrollTop: 0, currentCaption: '' },\n  ) {\n    if (props.contactGroups !== state.lastContactGroups) {\n      return {\n        ...reduce(\n          (nextState, group) => {\n            nextState.captions.push(group.caption);\n\n            // skip the caption row for the first group\n            const rowOffset = nextState.groups.length !== 0 ? 1 : 0;\n            if (rowOffset) {\n              nextState.captionRows[nextState.count] = group.caption;\n            }\n            nextState.groups.push({\n              ...group,\n              startIndex: nextState.count + rowOffset,\n            });\n            nextState.count += group.contacts.length + rowOffset; // with caption row\n            return nextState;\n          },\n          {\n            ...state,\n            groups: [],\n            captions: [],\n            captionRows: {},\n            count: 0,\n          },\n          props.contactGroups,\n        ),\n        lastContactGroups: props.contactGroups,\n      };\n    }\n    return state;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.lastContactGroups !== prevProps.contactGroups) {\n      if (\n        this.list &&\n        this.list.current &&\n        this.list.current.recomputeRowHeights\n      ) {\n        this.list.current.recomputeRowHeights(0);\n      }\n    }\n  }\n\n  isBottomNoticeRow(rowIndex) {\n    return this.props.bottomNotice && rowIndex === this.state.count;\n  }\n\n  calculateRowHeight = ({ index }) => {\n    if (this.isBottomNoticeRow(index)) {\n      return this.props.bottomNoticeHeight;\n    }\n    if (this.state.captionRows[index]) {\n      return CAPTION_HEIGHT;\n    }\n    return ROW_HEIGHT;\n  };\n\n  findGroup = ({ index }) =>\n    find(\n      (item) =>\n        index >= item.startIndex &&\n        index < item.startIndex + item.contacts.length,\n      this.state.groups,\n    );\n\n  rowGetter = ({ index }) => {\n    if (this.isBottomNoticeRow(index)) {\n      return {\n        bottomNoticeRow: true,\n      };\n    }\n    if (this.state.captionRows[index]) {\n      return {\n        caption: this.state.captionRows[index],\n      };\n    }\n    const group = this.findGroup({ index });\n    return group.contacts[index - group.startIndex];\n  };\n\n  onScroll = ({ scrollTop }) => {\n    if (scrollTop !== this.state.scrollTop) {\n      this.setState({\n        scrollTop,\n      });\n    }\n  };\n\n  resetScrollTop() {\n    this.setState({\n      scrollTop: 0,\n    });\n  }\n\n  cellRenderer = ({ rowData }) => {\n    if (rowData.bottomNoticeRow) {\n      const { bottomNotice: BottomNotice } = this.props;\n      return BottomNotice ? <BottomNotice /> : <span />;\n    }\n    if (rowData.caption) {\n      return <div className={styles.groupCaption}>{rowData.caption}</div>;\n    }\n    const {\n      currentLocale,\n      getAvatarUrl,\n      getPresence,\n      onItemSelect,\n      sourceNodeRenderer,\n      currentSiteCode,\n      isMultipleSiteEnabled,\n    } = this.props;\n    return (\n      <div key={`${rowData.type}-${rowData.id}`}>\n        <ContactItem\n          currentLocale={currentLocale}\n          currentSiteCode={currentSiteCode}\n          isMultipleSiteEnabled={isMultipleSiteEnabled}\n          contact={rowData}\n          getAvatarUrl={getAvatarUrl}\n          getPresence={getPresence}\n          onSelect={onItemSelect}\n          sourceNodeRenderer={sourceNodeRenderer}\n        />\n      </div>\n    );\n  };\n\n  onRowsRendered = ({ startIndex }) => {\n    if (this.isBottomNoticeRow(startIndex)) {\n      return;\n    }\n    // update header with the correct caption\n    if (this.state.captionRows[startIndex]) {\n      const groupIndex = findIndex(\n        (item) => item === this.state.captionRows[startIndex],\n        this.state.captions,\n      );\n      const previousCaption = this.state.captions[groupIndex - 1];\n      if (previousCaption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: previousCaption,\n        });\n      }\n    } else {\n      const group = this.findGroup({ index: startIndex });\n      if (group.caption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: group.caption,\n        });\n      }\n    }\n  };\n\n  headerRenderer = () => (\n    <div className={styles.groupCaption}>{this.state.currentCaption}</div>\n  );\n\n  renderList() {\n    // use table instead of list to allow caption header\n    return (\n      <Table\n        ref={this.list}\n        headerHeight={CAPTION_HEIGHT}\n        width={this.props.width}\n        height={this.props.height}\n        rowCount={this.state.count + (this.props.bottomNotice ? 1 : 0)}\n        rowHeight={this.calculateRowHeight}\n        rowGetter={this.rowGetter}\n        onRowsRendered={this.onRowsRendered}\n        onScroll={this.onScroll}\n        scrollTop={this.state.scrollTop}\n      >\n        <Column\n          dataKey=\"caption\"\n          disableSort\n          flexGrow={1}\n          width={this.props.width}\n          cellRenderer={this.cellRenderer}\n          headerRenderer={this.headerRenderer}\n        />\n      </Table>\n    );\n  }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      isSearching,\n      width,\n      height,\n    } = this.props;\n    let content = null;\n    if (width !== 0 && height !== 0) {\n      if (contactGroups.length) {\n        content = this.renderList();\n      } else if (isSearching) {\n        content = (\n          <Placeholder message={i18n.getString('onSearching', currentLocale)} />\n        );\n      } else {\n        content = (\n          <Placeholder message={i18n.getString('noContacts', currentLocale)} />\n        );\n      }\n    }\n    return <div className={styles.root}>{content}</div>;\n  }\n}\n\nContactList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n    }),\n  ).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  getPresence: PropTypes.func.isRequired,\n  onItemSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  isSearching: PropTypes.bool,\n  bottomNotice: PropTypes.func,\n  bottomNoticeHeight: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nContactList.defaultProps = {\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined,\n  isSearching: false,\n  bottomNotice: undefined,\n  bottomNoticeHeight: 0,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n};\n"],"file":"index.js"}