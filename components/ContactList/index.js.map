{"version":3,"sources":["components/ContactList/index.js"],"names":["CAPTION_HEIGHT","ROW_HEIGHT","NoContacts","currentLocale","styles","noContacts","i18n","getString","propTypes","PropTypes","string","isRequired","ContactList","props","calculateRowHeight","index","state","captionRows","findGroup","item","startIndex","contacts","length","groups","rowGetter","caption","group","onScroll","scrollTop","setState","cellRenderer","rowData","groupCaption","getAvatarUrl","getPresence","onItemSelect","sourceNodeRenderer","currentSiteCode","isMultipleSiteEnabled","type","id","onRowsRendered","groupIndex","captions","previousCaption","currentCaption","headerRenderer","getDerivedStateFromProps","list","React","createRef","prevProps","lastContactGroups","contactGroups","current","recomputeRowHeights","width","height","count","content","renderList","root","nextState","push","rowOffset","Component","arrayOf","shape","ContactItem","contact","func","bool","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Column } from 'react-virtualized';\nimport { reduce, find, findIndex } from 'ramda';\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst CAPTION_HEIGHT = 20;\nconst ROW_HEIGHT = 50;\n\nfunction NoContacts({ currentLocale }) {\n  return (\n    <p className={styles.noContacts}>\n      {i18n.getString('noContacts', currentLocale)}\n    </p>\n  );\n}\nNoContacts.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ContactList.getDerivedStateFromProps(props);\n    this.list = React.createRef();\n  }\n\n  static getDerivedStateFromProps(\n    props,\n    state = { scrollTop: 0, currentCaption: '' },\n  ) {\n    if (props.contactGroups !== state.lastContactGroups) {\n      return {\n        ...reduce(\n          (nextState, group) => {\n            nextState.captions.push(group.caption);\n\n            // skip the caption row for the first group\n            const rowOffset = nextState.groups.length !== 0 ? 1 : 0;\n            if (rowOffset) {\n              nextState.captionRows[nextState.count] = group.caption;\n            }\n            nextState.groups.push({\n              ...group,\n              startIndex: nextState.count + rowOffset,\n            });\n            nextState.count += group.contacts.length + rowOffset; // with caption row\n            return nextState;\n          },\n          {\n            ...state,\n            groups: [],\n            captions: [],\n            captionRows: {},\n            count: 0,\n          },\n          props.contactGroups,\n        ),\n        lastContactGroups: props.contactGroups,\n      };\n    }\n    return state;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.lastContactGroups !== prevProps.contactGroups) {\n      if (\n        this.list &&\n        this.list.current &&\n        this.list.current.recomputeRowHeights\n      ) {\n        this.list.current.recomputeRowHeights(0);\n      }\n    }\n  }\n\n  calculateRowHeight = ({ index }) => {\n    if (this.state.captionRows[index]) {\n      return CAPTION_HEIGHT;\n    }\n    return ROW_HEIGHT;\n  };\n\n  findGroup = ({ index }) =>\n    find(\n      (item) =>\n        index >= item.startIndex &&\n        index < item.startIndex + item.contacts.length,\n      this.state.groups,\n    );\n\n  rowGetter = ({ index }) => {\n    if (this.state.captionRows[index]) {\n      return {\n        caption: this.state.captionRows[index],\n      };\n    }\n    const group = this.findGroup({ index });\n    return group.contacts[index - group.startIndex];\n  };\n\n  onScroll = ({ scrollTop }) => {\n    if (scrollTop !== this.state.scrollTop) {\n      this.setState({\n        scrollTop,\n      });\n    }\n  };\n\n  resetScrollTop() {\n    this.setState({\n      scrollTop: 0,\n    });\n  }\n\n  cellRenderer = ({ rowData }) => {\n    if (rowData.caption) {\n      return <div className={styles.groupCaption}>{rowData.caption}</div>;\n    }\n    const {\n      currentLocale,\n      getAvatarUrl,\n      getPresence,\n      onItemSelect,\n      sourceNodeRenderer,\n      currentSiteCode,\n      isMultipleSiteEnabled,\n    } = this.props;\n    return (\n      <div key={`${rowData.type}-${rowData.id}`}>\n        <ContactItem\n          currentLocale={currentLocale}\n          currentSiteCode={currentSiteCode}\n          isMultipleSiteEnabled={isMultipleSiteEnabled}\n          contact={rowData}\n          getAvatarUrl={getAvatarUrl}\n          getPresence={getPresence}\n          onSelect={onItemSelect}\n          sourceNodeRenderer={sourceNodeRenderer}\n        />\n      </div>\n    );\n  };\n\n  onRowsRendered = ({ startIndex }) => {\n    // update header with the correct caption\n    if (this.state.captionRows[startIndex]) {\n      const groupIndex = findIndex(\n        (item) => item === this.state.captionRows[startIndex],\n        this.state.captions,\n      );\n      const previousCaption = this.state.captions[groupIndex - 1];\n      if (previousCaption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: previousCaption,\n        });\n      }\n    } else {\n      const group = this.findGroup({ index: startIndex });\n      if (group.caption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: group.caption,\n        });\n      }\n    }\n  };\n\n  headerRenderer = () => (\n    <div className={styles.groupCaption}>{this.state.currentCaption}</div>\n  );\n\n  renderList() {\n    // use table instead of list to allow caption header\n    return (\n      <Table\n        ref={this.list}\n        headerHeight={CAPTION_HEIGHT}\n        width={this.props.width}\n        height={this.props.height}\n        rowCount={this.state.count}\n        rowHeight={this.calculateRowHeight}\n        rowGetter={this.rowGetter}\n        onRowsRendered={this.onRowsRendered}\n        onScroll={this.onScroll}\n        scrollTop={this.state.scrollTop}\n      >\n        <Column\n          dataKey=\"caption\"\n          disableSort\n          flexGrow={1}\n          width={this.props.width}\n          cellRenderer={this.cellRenderer}\n          headerRenderer={this.headerRenderer}\n        />\n      </Table>\n    );\n  }\n\n  render() {\n    const { currentLocale, contactGroups, width, height } = this.props;\n    let content = null;\n    if (width !== 0 && height !== 0) {\n      content = contactGroups.length ? (\n        this.renderList()\n      ) : (\n        <NoContacts currentLocale={currentLocale} />\n      );\n    }\n    return <div className={styles.root}>{content}</div>;\n  }\n}\n\nContactList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n    }),\n  ).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  getPresence: PropTypes.func.isRequired,\n  onItemSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nContactList.defaultProps = {\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n};\n"],"file":"index.js"}