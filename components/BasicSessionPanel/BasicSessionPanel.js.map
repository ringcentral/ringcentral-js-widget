{"version":3,"sources":["components/BasicSessionPanel/BasicSessionPanel.tsx"],"names":["BasicSessionPanel","currentLocale","selectedSkillProfileId","skillProfileList","setSkillProfileId","loginTypeList","loginType","setLoginType","extensionNumber","setExtensionNumber","inboundQueuesFieldText","isExtensionNumber","searchOption","inboundQueues","submitInboundQueues","getAssignedInboundQueues","isAllAssign","isSeveralAssign","checkBoxOnChange","allCheckBoxOnChange","setAutoAnswer","autoAnswer","showAutoAnswer","classes","showInboundQueues","showSkillProfile","inboundQueuesPageShow","setInboundQueuesPageShow","root","i18n","getString","styles","customSelect","readOnly","endAdornment","maxLength","value","target","labelPlacement","labelPlacementStart","label","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AAIA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AASO,IAAMA,iBAA4D,GAAG,SAA/DA,iBAA+D,OA0BtE;AAAA,MAzBJC,aAyBI,QAzBJA,aAyBI;AAAA,MAxBJC,sBAwBI,QAxBJA,sBAwBI;AAAA,MAvBJC,gBAuBI,QAvBJA,gBAuBI;AAAA,MAtBJC,iBAsBI,QAtBJA,iBAsBI;AAAA,MArBJC,aAqBI,QArBJA,aAqBI;AAAA,MApBJC,SAoBI,QApBJA,SAoBI;AAAA,MAnBJC,YAmBI,QAnBJA,YAmBI;AAAA,MAlBJC,eAkBI,QAlBJA,eAkBI;AAAA,MAjBJC,kBAiBI,QAjBJA,kBAiBI;AAAA,MAhBJC,sBAgBI,QAhBJA,sBAgBI;AAAA,MAfJC,iBAeI,QAfJA,iBAeI;AAAA,MAdJC,YAcI,QAdJA,YAcI;AAAA,MAbJC,aAaI,QAbJA,aAaI;AAAA,MAZJC,mBAYI,QAZJA,mBAYI;AAAA,MAXJC,wBAWI,QAXJA,wBAWI;AAAA,MAVJC,WAUI,QAVJA,WAUI;AAAA,MATJC,eASI,QATJA,eASI;AAAA,MARJC,gBAQI,QARJA,gBAQI;AAAA,MAPJC,mBAOI,QAPJA,mBAOI;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,iBAEI,QAFJA,iBAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AAAA,kBACsD,qBAAS,KAAT,CADtD;AAAA;AAAA,MACGC,qBADH;AAAA,MAC0BC,wBAD1B;;AAGJ,sBACE,kEACGH,iBAAiB,iBAChB,gCAAC,8BAAD;AAAgB,IAAA,IAAI,EAAEE;AAAtB,kBACE,gCAAC,sCAAD;AACE,IAAA,YAAY,EAAEd,YADhB;AAEE,IAAA,aAAa,EAAEX,aAFjB;AAGE,IAAA,aAAa,EAAEY,aAHjB;AAIE,IAAA,mBAAmB,EAAEC,mBAJvB;AAKE,IAAA,wBAAwB,EAAEC,wBAL5B;AAME,IAAA,WAAW,EAAEC,WANf;AAOE,IAAA,eAAe,EAAEC,eAPnB;AAQE,IAAA,gBAAgB,EAAEC,gBARpB;AASE,IAAA,mBAAmB,EAAEC,mBATvB;AAUE,IAAA,MAAM,EAAE;AAAA,aAAMQ,wBAAwB,CAAC,KAAD,CAA9B;AAAA;AAVV,IADF,CAFJ,eAiBE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK;AAAxB,KACGJ,iBAAiB,iBAChB,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAEK,iBAAKC,SAAL,CAAe,eAAf,EAAgC7B,aAAhC,CADT;AAEE,IAAA,KAAK,EAAES,sBAFT;AAGE,IAAA,KAAK,EAAEA,sBAHT;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,OAAO,EAAE;AACPkB,MAAAA,IAAI,EAAEG,mBAAOC;AADN,KALX;AAQE,IAAA,UAAU,EAAE;AACV,mBAAa;AADH,KARd;AAWE,IAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,YAAY,eAAE,gCAAC,oCAAD;AAFJ,KAXd;AAeE,IAAA,QAAQ,EAAE,KAfZ;AAgBE,IAAA,OAAO,EAAE;AAAA,aAAMP,wBAAwB,CAAC,IAAD,CAA9B;AAAA;AAhBX,IAFJ,EAqBGF,gBAAgB,iBACf,gCAAC,kBAAD;AACE,iBAAU,cADZ;AAEE,IAAA,OAAO,EAAEtB,gBAFX;AAGE,IAAA,KAAK,EAAE0B,iBAAKC,SAAL,CAAe,cAAf,EAA+B7B,aAA/B,CAHT;AAIE,IAAA,KAAK,EAAEC,sBAJT;AAKE,IAAA,cAAc,EAAC,WALjB;AAME,IAAA,cAAc,EAAC,aANjB;AAOE,IAAA,QAAQ,EAAEE;AAPZ,IAtBJ,eAgCE,gCAAC,kBAAD;AACE,iBAAU,WADZ;AAEE,IAAA,OAAO,EAAEC,aAFX;AAGE,IAAA,KAAK,EAAEwB,iBAAKC,SAAL,CAAe,iBAAf,EAAkC7B,aAAlC,CAHT;AAIE,IAAA,KAAK,EAAEK,SAJT;AAKE,IAAA,QAAQ,EAAEC;AALZ,IAhCF,EAuCGI,iBAAiB,iBAChB,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAEkB,iBAAKC,SAAL,CAAe,iBAAf,EAAkC7B,aAAlC,CADT;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EAAEO,eAHT;AAIE,IAAA,WAAW,EAAEqB,iBAAKC,SAAL,CAAe,sBAAf,EAAuC7B,aAAvC,CAJf;AAKE,IAAA,UAAU,EAAE;AACVkC,MAAAA,SAAS,EAAE,GADD;AAEV,mBAAa;AAFH,KALd;AASE,IAAA,QAAQ,EAAE,KATZ;AAUE,IAAA,OAAO,EAAE;AACPP,MAAAA,IAAI,EAAEG,mBAAOC;AADN,KAVX;AAaE,IAAA,QAAQ,EAAE,yBAA2B;AAAA,UAAdI,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;AACnC3B,MAAAA,kBAAkB,CAAC2B,KAAD,CAAlB;AACD;AAfH,IAxCJ,EAyEGd,cAAc,iBACb,gCAAC,cAAD;AACE,iBAAU,YADZ;AAEE,IAAA,qBAAqB,EAAE;AACrBgB,MAAAA,cAAc,EAAE,OADK;AAErBf,MAAAA,OAAO,EAAE;AACPgB,QAAAA,mBAAmB,EAAER,mBAAOH,IADrB;AAEPY,QAAAA,KAAK,EAAET,mBAAOS;AAFP;AAFY,KAFzB;AASE,IAAA,KAAK,EAAEX,iBAAKC,SAAL,CAAe,aAAf,EAA8B7B,aAA9B,CATT;AAUE,IAAA,QAAQ,EAAE,oBAAM;AACdmB,MAAAA,aAAa,CAAC,CAACC,UAAF,CAAb;AACD,KAZH;AAaE,IAAA,OAAO,EAAEA;AAbX,IA1EJ,CAjBF,CADF;AA+GD,CA5IM;;;AA8IPrB,iBAAiB,CAACyC,YAAlB,GAAiC;AAC/BlB,EAAAA,OAAO,EAAE;AADsB,CAAjC","sourcesContent":["import { RcSwitch, RcTextField } from '@ringcentral/juno';\nimport React, { FunctionComponent, useState } from 'react';\nimport { AnimationPanel } from 'ringcentral-widgets/components/AnimationPanel';\nimport { CustomArrowButton } from 'ringcentral-widgets/components/Rcui/CustomArrowButton';\n\nimport { BasicSessionProps } from '../../interfaces/EvAgentSessionUI.interface';\nimport {\n  InboundQueuesPanel,\n  InboundQueuesPanelProps,\n} from '../InboundQueuesPanel';\nimport { PickList } from '../PickList';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type BasicSessionPanelProps = BasicSessionProps &\n  Omit<InboundQueuesPanelProps, 'goBack'> & {\n    classes?: {\n      root?: string;\n    };\n  };\n\nexport const BasicSessionPanel: FunctionComponent<BasicSessionPanelProps> = ({\n  currentLocale,\n  selectedSkillProfileId,\n  skillProfileList,\n  setSkillProfileId,\n  loginTypeList,\n  loginType,\n  setLoginType,\n  extensionNumber,\n  setExtensionNumber,\n  inboundQueuesFieldText,\n  isExtensionNumber,\n  searchOption,\n  inboundQueues,\n  submitInboundQueues,\n  getAssignedInboundQueues,\n  isAllAssign,\n  isSeveralAssign,\n  checkBoxOnChange,\n  allCheckBoxOnChange,\n  setAutoAnswer,\n  autoAnswer,\n  showAutoAnswer,\n  classes,\n  showInboundQueues,\n  showSkillProfile,\n}) => {\n  const [inboundQueuesPageShow, setInboundQueuesPageShow] = useState(false);\n\n  return (\n    <>\n      {showInboundQueues && (\n        <AnimationPanel open={inboundQueuesPageShow}>\n          <InboundQueuesPanel\n            searchOption={searchOption}\n            currentLocale={currentLocale}\n            inboundQueues={inboundQueues}\n            submitInboundQueues={submitInboundQueues}\n            getAssignedInboundQueues={getAssignedInboundQueues}\n            isAllAssign={isAllAssign}\n            isSeveralAssign={isSeveralAssign}\n            checkBoxOnChange={checkBoxOnChange}\n            allCheckBoxOnChange={allCheckBoxOnChange}\n            goBack={() => setInboundQueuesPageShow(false)}\n          />\n        </AnimationPanel>\n      )}\n      <div className={classes.root}>\n        {showInboundQueues && (\n          <RcTextField\n            label={i18n.getString('inboundQueues', currentLocale)}\n            title={inboundQueuesFieldText}\n            value={inboundQueuesFieldText}\n            fullWidth\n            classes={{\n              root: styles.customSelect,\n            }}\n            inputProps={{\n              'data-sign': 'inboundQueues',\n            }}\n            InputProps={{\n              readOnly: true,\n              endAdornment: <CustomArrowButton />,\n            }}\n            clearBtn={false}\n            onClick={() => setInboundQueuesPageShow(true)}\n          />\n        )}\n        {showSkillProfile && (\n          <PickList\n            data-sign=\"skillProfile\"\n            options={skillProfileList}\n            label={i18n.getString('skillProfile', currentLocale)}\n            value={selectedSkillProfileId}\n            optionValueKey=\"profileId\"\n            optionLabelKey=\"profileName\"\n            onChange={setSkillProfileId}\n          />\n        )}\n        <PickList\n          data-sign=\"loginType\"\n          options={loginTypeList}\n          label={i18n.getString('voiceConnection', currentLocale)}\n          value={loginType}\n          onChange={setLoginType}\n        />\n        {isExtensionNumber && (\n          <RcTextField\n            label={i18n.getString('extensionNumber', currentLocale)}\n            fullWidth\n            value={extensionNumber}\n            placeholder={i18n.getString('enterYourPhoneNumber', currentLocale)}\n            inputProps={{\n              maxLength: 255,\n              'data-sign': 'extensionNumber',\n            }}\n            clearBtn={false}\n            classes={{\n              root: styles.customSelect,\n            }}\n            onChange={({ target: { value } }) => {\n              setExtensionNumber(value);\n            }}\n          />\n        )}\n        {/* <RcSwitch\n        data-sign=\"takingCall\"\n        formControlLabelProps={{\n          labelPlacement: 'start',\n          classes: {\n            labelPlacementStart: styles.root,\n            label: styles.label,\n          },\n        }}\n        label={i18n.getString('takingCall', currentLocale)}\n        onChange={() => {\n          // setTakingCall(!takingCall);\n        }}\n        // checked={takingCall}\n      /> */}\n        {showAutoAnswer && (\n          <RcSwitch\n            data-sign=\"autoAnswer\"\n            formControlLabelProps={{\n              labelPlacement: 'start',\n              classes: {\n                labelPlacementStart: styles.root,\n                label: styles.label,\n              },\n            }}\n            label={i18n.getString('answerCalls', currentLocale)}\n            onChange={() => {\n              setAutoAnswer(!autoAnswer);\n            }}\n            checked={autoAnswer}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nBasicSessionPanel.defaultProps = {\n  classes: {},\n};\n"],"file":"BasicSessionPanel.js"}