{"version":3,"sources":["components/MeetingConfigsV2/index.tsx"],"names":["getHelperTextForPasswordField","meeting","currentLocale","isPasswordFocus","i18n","getString","password","isMeetingPasswordValid","getIsPasswordFieldError","getCheckboxCommProps","labelPlacement","formControlLabelProps","classes","root","styles","labelPlacementEnd","labelPlacementStart","label","fullWidthLabel","MeetingOptionLabel","children","isLocked","hasScrollBar","className","labelContent","placementLeft","optionLabel","placementRight","LockSvg","MeetingConfigs","updateMeetingSettings","disabled","personalMeetingId","switchUsePersonalMeetingId","init","recipientsSection","showTopic","showWhen","showDuration","showRecurringMeeting","meetingOptionToggle","audioOptionToggle","useTimePicker","showScheduleOnBehalf","delegators","updateScheduleFor","showSpinnerInConfigPanel","update","options","configRef","setHasScrollBar","current","scrollHeight","clientHeight","setPasswordFocus","audioOptions","join","setAudioOptions","audioHelpTextMap","Phone","ComputerAudio","Phone_ComputerAudio","updateAudioOptions","split","meetingType","isRecurring","setIsRecurring","toggleRecurring","MeetingType","RECURRING","SCHEDULED","isPmiConfirm","setPmiConfirm","onPmiChange","usePersonalMeetingId","isDisabled","settingsGroupExpandable","checkboxCommProps","videoConfig","meetingContent","meetingSection","meetingSettings","sideMargin","selectOption","scheduleForBoxSelect","autoFullWidth","e","target","value","host","id","map","item","userName","name","ASSISTED_USERS_MYSELF","boxSelectMenuItem","pmiLabel","AlertType","INFO","alertContainer","_lockRequireMeetingPassword","_requireMeetingPassword","_pmiPassword","passwordField","subPrefixPadding","noBottomMargin","maxLength","settingLock","startParticipantsVideo","startHostVideo","hackWidth","boxSelectWrapper","lockedIcon","allowJoinBeforeHost","recurringNote","defaultProps"],"mappings":"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","sourcesContent":["import {\n  RcBoxSelect,\n  RcCheckbox,\n  RcIcon,\n  RcLink,\n  RcMenuItem,\n  RcTextField,\n  RcTypography,\n} from '@ringcentral/juno';\nimport classnames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { generateRandomPassword } from 'ringcentral-integration/helpers/meetingHelper';\nimport {\n  isRecurringMeeting,\n  MeetingDelegators,\n  MeetingType,\n  RcMMeetingModel,\n  ASSISTED_USERS_MYSELF,\n} from 'ringcentral-integration/modules/Meeting';\n\nimport { formatMeetingId } from '../../lib/MeetingCalendarHelper';\nimport { Alert, AlertType } from '../Alert';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport { ExtendedTooltip as MeetingOptionLocked } from './ExtendedTooltip';\nimport i18n from './i18n';\nimport LockSvg from './icons/icon-lock_border.svg';\nimport styles from './styles.scss';\nimport { VideoSettingGroup } from './VideoSettingGroup';\n\n// TODO: wait for juno upgrade\nexport interface MeetingConfigsProps {\n  disabled: boolean;\n  showSpinnerInConfigPanel: boolean;\n  personalMeetingId: string;\n  updateMeetingSettings: (meeting: Partial<RcMMeetingModel>) => void;\n  switchUsePersonalMeetingId: (usePersonalMeetingId: boolean) => any;\n  update: (...args: any[]) => any;\n  init: (...args: any[]) => any;\n  meeting: RcMMeetingModel;\n  currentLocale: string;\n  recipientsSection?: React.ReactNode;\n  labelPlacement?: 'end' | 'start' | 'top' | 'bottom';\n  showTopic?: boolean;\n  showWhen?: boolean;\n  showDuration?: boolean;\n  showRecurringMeeting?: boolean;\n  meetingOptionToggle?: boolean;\n  showScheduleOnBehalf?: boolean;\n  passwordPlaceholderEnable?: boolean;\n  audioOptionToggle?: boolean;\n  useTimePicker?: boolean;\n  delegators: MeetingDelegators[];\n  updateScheduleFor: (userExtensionId: string) => any;\n}\n\nfunction getHelperTextForPasswordField(\n  meeting: RcMMeetingModel,\n  currentLocale: string,\n  isPasswordFocus: boolean,\n): string {\n  // when focus on password input, always show hint text\n  if (isPasswordFocus) {\n    return i18n.getString('rcmPasswordHintText', currentLocale);\n  }\n  if (!meeting.password) {\n    return i18n.getString('passwordEmptyError', currentLocale);\n  }\n  if (!meeting.isMeetingPasswordValid) {\n    return i18n.getString('rcmPasswordInvalidError', currentLocale);\n  }\n  // when correct input, show nothing\n  return '';\n}\n\nfunction getIsPasswordFieldError(\n  meeting: RcMMeetingModel,\n  isPasswordFocus: boolean,\n): boolean {\n  return (\n    !isPasswordFocus && (!meeting.password || !meeting.isMeetingPasswordValid)\n  );\n}\n\nfunction getCheckboxCommProps(\n  labelPlacement: 'end' | 'start' | 'top' | 'bottom',\n) {\n  return {\n    formControlLabelProps: {\n      classes: {\n        root:\n          labelPlacement === 'end'\n            ? styles.labelPlacementEnd\n            : styles.labelPlacementStart,\n        label: styles.fullWidthLabel,\n      },\n      labelPlacement,\n    },\n  };\n}\n\nconst MeetingOptionLabel: React.FunctionComponent<{\n  children: React.ReactNode;\n  isLocked?: boolean;\n  currentLocale?: string;\n  hasScrollBar?: boolean;\n  className?: string;\n  labelPlacement?: string;\n}> = ({\n  children,\n  labelPlacement,\n  isLocked = false,\n  currentLocale,\n  hasScrollBar = false,\n  className = '',\n}) => {\n  return (\n    <div className={styles.labelContent}>\n      <div\n        className={classnames(\n          styles.placementLeft,\n          { [styles.optionLabel]: labelPlacement === 'start' },\n          className,\n        )}\n      >\n        {children}\n      </div>\n      {isLocked ? (\n        <div className={styles.placementRight}>\n          <MeetingOptionLocked\n            hasScrollBar={hasScrollBar}\n            title={\n              <span>{i18n.getString('lockedTooltip', currentLocale)}</span>\n            }\n          >\n            <RcIcon size=\"small\" symbol={LockSvg} />\n          </MeetingOptionLocked>\n        </div>\n      ) : null}\n    </div>\n  );\n};\nexport const MeetingConfigs: React.FunctionComponent<MeetingConfigsProps> = ({\n  updateMeetingSettings,\n  disabled,\n  personalMeetingId,\n  switchUsePersonalMeetingId,\n  init,\n  meeting,\n  currentLocale,\n  recipientsSection,\n  showTopic,\n  showWhen,\n  showDuration,\n  showRecurringMeeting,\n  meetingOptionToggle,\n  audioOptionToggle,\n  useTimePicker,\n  showScheduleOnBehalf,\n  delegators,\n  updateScheduleFor,\n  labelPlacement,\n  showSpinnerInConfigPanel,\n}) => {\n  useEffect(() => {\n    if (init) {\n      init();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const update = (options: any) => {\n    return updateMeetingSettings({\n      ...meeting,\n      ...options,\n    });\n  };\n\n  const configRef = useRef<HTMLDivElement>();\n  const [hasScrollBar, setHasScrollBar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setHasScrollBar(\n      configRef.current.scrollHeight > configRef.current.clientHeight,\n    );\n  }, []);\n\n  /* Password */\n  const [isPasswordFocus, setPasswordFocus] = useState<boolean>(false);\n\n  /* AudioOptions */\n  const [audioOptions, setAudioOptions] = useState<string>(\n    meeting.audioOptions && meeting.audioOptions.join('_'),\n  );\n  const audioHelpTextMap: { [key: string]: string } = {\n    Phone: 'telephonyOnly',\n    ComputerAudio: 'voIPOnly',\n    Phone_ComputerAudio: 'both',\n  };\n  const updateAudioOptions = (audioOptions: string) => {\n    setAudioOptions(audioOptions);\n    update({\n      audioOptions: audioOptions.split('_'),\n    });\n  };\n  useEffect(() => {\n    setAudioOptions(meeting.audioOptions.join('_'));\n  }, [meeting.audioOptions]);\n\n  /* Recurring */\n  const [isRecurring, setIsRecurring] = useState<boolean>(\n    isRecurringMeeting(meeting.meetingType),\n  );\n  const toggleRecurring = (isRecurring: boolean) => {\n    update({\n      meetingType: isRecurring ? MeetingType.RECURRING : MeetingType.SCHEDULED,\n    });\n  };\n  useEffect(() => {\n    setIsRecurring(isRecurringMeeting(meeting.meetingType));\n  }, [meeting.meetingType]);\n\n  /* Use Personal MeetingId */\n  const [isPmiConfirm, setPmiConfirm] = useState<boolean>(false);\n  const onPmiChange = async (usePersonalMeetingId: boolean) => {\n    setPmiConfirm(false);\n    await switchUsePersonalMeetingId(usePersonalMeetingId);\n  };\n\n  /* Option Disable Status */\n  const isDisabled =\n    disabled || (meeting.usePersonalMeetingId && !isPmiConfirm);\n\n  const settingsGroupExpandable = false;\n\n  const checkboxCommProps = getCheckboxCommProps(labelPlacement);\n\n  return (\n    <div\n      ref={configRef}\n      className={styles.videoConfig}\n      data-sign=\"meetingConfigsPanel\"\n    >\n      <div className={styles.meetingContent}>\n        {showSpinnerInConfigPanel ? <SpinnerOverlay /> : null}\n        {recipientsSection ? (\n          <div className={styles.meetingSection}>{recipientsSection}</div>\n        ) : null}\n        <div className={styles.meetingSettings}>\n          {showScheduleOnBehalf ? (\n            <VideoSettingGroup\n              dataSign=\"scheduleForPanel\"\n              expandable={settingsGroupExpandable}\n              summary={i18n.getString('scheduleFor', currentLocale)}\n            >\n              <div\n                className={classnames(styles.sideMargin, styles.selectOption)}\n              >\n                <RcBoxSelect\n                  disabled={disabled}\n                  className={classnames(\n                    styles.scheduleForBoxSelect,\n                    styles.autoFullWidth,\n                  )}\n                  data-sign=\"scheduleFor\"\n                  automationId=\"scheduleFor\"\n                  onChange={(e) => {\n                    updateScheduleFor(e.target.value as string);\n                  }}\n                  value={meeting.host.id}\n                >\n                  {delegators.map((item: MeetingDelegators) => {\n                    const userName =\n                      item.name === ASSISTED_USERS_MYSELF\n                        ? i18n.getString(item.name, currentLocale)\n                        : item.name;\n                    return (\n                      <RcMenuItem\n                        value={item.id}\n                        key={item.id}\n                        title={userName}\n                        className={styles.boxSelectMenuItem}\n                      >\n                        {userName}\n                      </RcMenuItem>\n                    );\n                  })}\n                </RcBoxSelect>\n              </div>\n            </VideoSettingGroup>\n          ) : null}\n          {personalMeetingId ? (\n            <VideoSettingGroup\n              dataSign=\"meetingIdSection\"\n              expandable={settingsGroupExpandable}\n              summary={i18n.getString('meetingId', currentLocale)}\n            >\n              <>\n                <RcCheckbox\n                  {...checkboxCommProps}\n                  data-sign=\"usePersonalMeetingId\"\n                  checked={meeting.usePersonalMeetingId}\n                  onChange={async () => {\n                    onPmiChange(!meeting.usePersonalMeetingId);\n                  }}\n                  label={\n                    <MeetingOptionLabel\n                      labelPlacement={labelPlacement}\n                      className={styles.pmiLabel}\n                    >\n                      {i18n.getString('usePersonalMeetingId', currentLocale)}\n                      &nbsp;\n                      <span data-sign=\"personalMeetingId\">\n                        {formatMeetingId(personalMeetingId, '-')}\n                      </span>\n                    </MeetingOptionLabel>\n                  }\n                />\n                {meeting.usePersonalMeetingId ? (\n                  <Alert\n                    type={AlertType.INFO}\n                    className={styles.alertContainer}\n                  >\n                    {isPmiConfirm ? (\n                      i18n.getString('pmiSettingChangeAlert', currentLocale)\n                    ) : (\n                      <>\n                        {i18n.getString('pmiChangeConfirm', currentLocale)}\n                        <RcLink\n                          handleOnClick={() => setPmiConfirm(!isPmiConfirm)}\n                          data-sign=\"setPmiConfirm\"\n                        >\n                          {i18n.getString('changePmiSettings', currentLocale)}\n                        </RcLink>\n                      </>\n                    )}\n                  </Alert>\n                ) : null}\n              </>\n            </VideoSettingGroup>\n          ) : null}\n          <VideoSettingGroup\n            dataSign=\"passwordSection\"\n            expandable={settingsGroupExpandable}\n            summary={i18n.getString('password', currentLocale)}\n          >\n            <RcCheckbox\n              {...checkboxCommProps}\n              data-sign=\"requirePassword\"\n              disabled={isDisabled || meeting._lockRequireMeetingPassword}\n              checked={meeting._requireMeetingPassword}\n              onChange={() => {\n                let password = '';\n                // checked before\n                if (meeting._requireMeetingPassword) {\n                  password = '';\n                } else {\n                  password =\n                    meeting.usePersonalMeetingId && meeting._pmiPassword\n                      ? meeting._pmiPassword\n                      : generateRandomPassword();\n                }\n                update({\n                  _requireMeetingPassword: !meeting._requireMeetingPassword,\n                  password,\n                });\n              }}\n              label={\n                <MeetingOptionLabel\n                  labelPlacement={labelPlacement}\n                  isLocked={meeting._lockRequireMeetingPassword}\n                  currentLocale={currentLocale}\n                  hasScrollBar={hasScrollBar}\n                >\n                  {i18n.getString('requirePassword', currentLocale)}\n                </MeetingOptionLabel>\n              }\n            />\n            {meeting._requireMeetingPassword ? (\n              <div\n                className={classnames(styles.passwordField, {\n                  [styles.subPrefixPadding]: labelPlacement === 'end',\n                })}\n              >\n                <RcTextField\n                  disabled={isDisabled}\n                  error={getIsPasswordFieldError(meeting, isPasswordFocus)}\n                  helperText={getHelperTextForPasswordField(\n                    meeting,\n                    currentLocale,\n                    isPasswordFocus,\n                  )}\n                  label={i18n.getString('setPassword', currentLocale)}\n                  data-sign=\"password\"\n                  classes={{\n                    root: styles.noBottomMargin,\n                  }}\n                  fullWidth\n                  clearBtn\n                  value={meeting.password}\n                  inputProps={{\n                    maxLength: 255,\n                  }}\n                  onChange={(e) => {\n                    const password = e.target.value;\n                    update({ password });\n                  }}\n                  onFocus={() => {\n                    setPasswordFocus(true);\n                  }}\n                  onBlur={() => {\n                    setPasswordFocus(false);\n                  }}\n                />\n              </div>\n            ) : null}\n          </VideoSettingGroup>\n          <VideoSettingGroup\n            dataSign=\"videoSection\"\n            expandable={settingsGroupExpandable}\n            summary={i18n.getString('video', currentLocale)}\n          >\n            <RcCheckbox\n              {...checkboxCommProps}\n              data-sign=\"turnOffCamera\"\n              disabled={\n                isDisabled || meeting.settingLock.startParticipantsVideo\n              }\n              checked={!meeting.startParticipantsVideo}\n              onChange={() => {\n                update({\n                  startParticipantsVideo: !meeting.startParticipantsVideo,\n                });\n              }}\n              label={\n                <MeetingOptionLabel\n                  labelPlacement={labelPlacement}\n                  isLocked={meeting.settingLock.startParticipantsVideo}\n                  currentLocale={currentLocale}\n                  hasScrollBar={hasScrollBar}\n                >\n                  {i18n.getString('turnOffCamera', currentLocale)}\n                </MeetingOptionLabel>\n              }\n            />\n            <RcCheckbox\n              {...checkboxCommProps}\n              data-sign=\"turnOffHostCamera\"\n              disabled={isDisabled || meeting.settingLock.startHostVideo}\n              checked={!meeting.startHostVideo}\n              onChange={() => {\n                update({\n                  startHostVideo: !meeting.startHostVideo,\n                });\n              }}\n              label={\n                <MeetingOptionLabel\n                  labelPlacement={labelPlacement}\n                  isLocked={meeting.settingLock.startHostVideo}\n                  currentLocale={currentLocale}\n                  hasScrollBar={hasScrollBar}\n                >\n                  {i18n.getString('turnOffHostCamera', currentLocale)}\n                </MeetingOptionLabel>\n              }\n            />\n          </VideoSettingGroup>\n          <VideoSettingGroup\n            dataSign=\"audioSection\"\n            expandable={settingsGroupExpandable}\n            summary={i18n.getString('audio', currentLocale)}\n          >\n            <div\n              className={classnames(\n                styles.selectOption,\n                styles.labelContent,\n                styles.sideMargin,\n              )}\n            >\n              <div\n                className={classnames(styles.placementLeft, styles.hackWidth)}\n              >\n                <RcBoxSelect\n                  disabled={isDisabled || meeting.settingLock.audioOptions}\n                  title={i18n.getString(\n                    audioHelpTextMap[audioOptions],\n                    currentLocale,\n                  )}\n                  classes={{\n                    root: styles.boxSelectWrapper,\n                  }}\n                  className={styles.autoFullWidth}\n                  automationId=\"audioOptions\"\n                  onChange={(e) => {\n                    updateAudioOptions(e.target.value as string);\n                  }}\n                  value={audioOptions}\n                >\n                  <RcMenuItem value=\"Phone\">\n                    {i18n.getString('telephonyOnly', currentLocale)}\n                  </RcMenuItem>\n                  <RcMenuItem value=\"ComputerAudio\">\n                    {i18n.getString('voIPOnly', currentLocale)}\n                  </RcMenuItem>\n                  <RcMenuItem value=\"Phone_ComputerAudio\">\n                    {i18n.getString('both', currentLocale)}\n                  </RcMenuItem>\n                </RcBoxSelect>\n              </div>\n              {meeting.settingLock.audioOptions ? (\n                <div\n                  className={classnames(\n                    styles.placementRight,\n                    styles.lockedIcon,\n                  )}\n                >\n                  <MeetingOptionLocked\n                    hasScrollBar={hasScrollBar}\n                    title={\n                      <span>\n                        {i18n.getString('lockedTooltip', currentLocale)}\n                      </span>\n                    }\n                  >\n                    <RcIcon size=\"small\" symbol={LockSvg} />\n                  </MeetingOptionLocked>\n                </div>\n              ) : null}\n            </div>\n          </VideoSettingGroup>\n          <VideoSettingGroup\n            dataSign=\"meetingOptionsSection\"\n            expandable={settingsGroupExpandable}\n            summary={i18n.getString('meetingOptions', currentLocale)}\n          >\n            <RcCheckbox\n              {...checkboxCommProps}\n              disabled={isDisabled || meeting.settingLock.allowJoinBeforeHost}\n              data-sign=\"enableJoinToggle\"\n              checked={meeting.allowJoinBeforeHost}\n              onChange={() => {\n                update({\n                  allowJoinBeforeHost: !meeting.allowJoinBeforeHost,\n                });\n              }}\n              label={\n                <MeetingOptionLabel\n                  labelPlacement={labelPlacement}\n                  isLocked={meeting.settingLock.allowJoinBeforeHost}\n                  currentLocale={currentLocale}\n                  hasScrollBar={hasScrollBar}\n                >\n                  {i18n.getString('joinBeforeHost', currentLocale)}\n                </MeetingOptionLabel>\n              }\n            />\n            {showRecurringMeeting ? (\n              <>\n                <RcCheckbox\n                  {...checkboxCommProps}\n                  disabled={isDisabled}\n                  data-sign=\"recurringMeeting\"\n                  checked={isRecurring}\n                  onChange={() => {\n                    toggleRecurring(!isRecurring);\n                  }}\n                  label={\n                    <MeetingOptionLabel labelPlacement={labelPlacement}>\n                      {i18n.getString('recurringMeeting', currentLocale)}\n                    </MeetingOptionLabel>\n                  }\n                />\n                <RcTypography\n                  variant=\"caption1\"\n                  className={classnames(styles.recurringNote, {\n                    [styles.subPrefixPadding]: labelPlacement === 'end',\n                  })}\n                >\n                  {i18n.getString('recurringNote', currentLocale)}\n                </RcTypography>\n              </>\n            ) : null}\n          </VideoSettingGroup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMeetingConfigs.defaultProps = {\n  showRecurringMeeting: true,\n  labelPlacement: 'start',\n};\n"],"file":"index.js"}