{"version":3,"sources":["components/ActiveCallPanel/CallInfo.js"],"names":["CallInfo","props","avatar","avatarUrl","styles","userInfo","avatarContainer","userName","contactDisplay","dropdown","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","userPhoneNumber","formatPhone","propTypes","PropTypes","string","func","isRequired","array","number","bool","object","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactDisplay from '../ContactDisplay';\nimport styles from './styles.scss';\nimport CallAvatar from '../CallAvatar';\n\nexport default function CallInfo(props) {\n  let avatar;\n  if (props.avatarUrl) {\n    avatar = <CallAvatar avatarUrl={props.avatarUrl} />;\n  } else {\n    avatar = <CallAvatar avatarUrl={null} />;\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatar}>{avatar}</div>\n      </div>\n      <div className={styles.userName}>\n        <ContactDisplay\n          className={styles.contactDisplay}\n          selectClassName={styles.dropdown}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n          sourceIcons={props.sourceIcons}\n          phoneTypeRenderer={props.phoneTypeRenderer}\n          phoneSourceNameRenderer={props.phoneSourceNameRenderer}\n        />\n      </div>\n      <div className={styles.userPhoneNumber} data-sign=\"userPhoneNumber\">\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nCallInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nCallInfo.defaultProps = {\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n};\n"],"file":"CallInfo.js"}