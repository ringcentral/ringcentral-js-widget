{"version":3,"sources":["components/AlertDisplay/index.js"],"names":["AlertDisplay","props","RendererMessage","component","styles","root","className","messages","map","message","Renderer","getRenderer","animation","duration","id","level","currentLocale","brand","dismiss","propTypes","PropTypes","string","arrayOf","shape","isRequired","oneOf","Object","keys","alertLevels","payload","any","func","number","defaultProps","undefined","Message"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,eAAe,GAAGD,KAAK,CAACE,SAA9B;AACA,SACE;AAAK,IAAA,SAAS,EAAE,4BAAWC,mBAAOC,IAAlB,EAAwBJ,KAAK,CAACK,SAA9B;AAAhB,KACGL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmB,UAACC,OAAD,EAAa;AAC/B,QAAMC,QAAQ,GAAGT,KAAK,CAACU,WAAN,CAAkBF,OAAlB,CAAjB;AACA,QAAI,CAACC,QAAL,EAAe,OAAO,IAAP;AACf,WACE,gCAAC,eAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACG,SADrB;AAEE,MAAA,QAAQ,EAAEH,OAAO,CAACI,QAFpB;AAGE,MAAA,GAAG,EAAEJ,OAAO,CAACK,EAHf;AAIE,MAAA,KAAK,EAAEL,OAAO,CAACM,KAJjB;AAKE,MAAA,OAAO,EACL,gCAAC,QAAD;AACE,QAAA,OAAO,EAAEN,OADX;AAEE,QAAA,aAAa,EAAER,KAAK,CAACe,aAFvB;AAGE,QAAA,KAAK,EAAEf,KAAK,CAACgB;AAHf,QANJ;AAYE,MAAA,SAAS,EAAE,qBAAM;AACfhB,QAAAA,KAAK,CAACiB,OAAN,CAAcT,OAAO,CAACK,EAAtB;AACD;AAdH,MADF;AAkBD,GArBA,CADH,CADF;AA0BD;;AAEDd,YAAY,CAACmB,SAAb,GAAyB;AACvBb,EAAAA,SAAS,EAAEc,sBAAUC,MADE;AAEvBd,EAAAA,QAAQ,EAAEa,sBAAUE,OAAV,CACRF,sBAAUG,KAAV,CAAgB;AACdT,IAAAA,EAAE,EAAEM,sBAAUC,MAAV,CAAiBG,UADP;AAEdT,IAAAA,KAAK,EAAEK,sBAAUK,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYC,uBAAZ,CAAhB,EAA0CJ,UAFnC;AAGdf,IAAAA,OAAO,EAAEW,sBAAUC,MAAV,CAAiBG,UAHZ;AAIdK,IAAAA,OAAO,EAAET,sBAAUU;AAJL,GAAhB,CADQ,CAFa;AAUvBnB,EAAAA,WAAW,EAAES,sBAAUW,IAVA;AAWvBb,EAAAA,OAAO,EAAEE,sBAAUW,IAAV,CAAeP,UAXD;AAYvBR,EAAAA,aAAa,EAAEI,sBAAUC,MAAV,CAAiBG,UAZT;AAavBZ,EAAAA,SAAS,EAAEQ,sBAAUC,MAbE;AAcvBJ,EAAAA,KAAK,EAAEG,sBAAUC,MAdM;AAevBR,EAAAA,QAAQ,EAAEO,sBAAUY,MAfG;AAgBvB7B,EAAAA,SAAS,EAAEiB,sBAAUW;AAhBE,CAAzB;AAkBA/B,YAAY,CAACiC,YAAb,GAA4B;AAC1BtB,EAAAA,WAAW,EAAE;AAAA,WAAMuB,SAAN;AAAA,GADa;AAE1B/B,EAAAA,SAAS,EAAEgC,mBAFe;AAG1BlB,EAAAA,KAAK,EAAE;AAHmB,CAA5B;eAMejB,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport alertLevels from 'ringcentral-integration/modules/Alert/alertLevels';\n\nimport Message from '../Message';\nimport styles from './styles.scss';\n\nfunction AlertDisplay(props) {\n  const RendererMessage = props.component;\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      {props.messages.map((message) => {\n        const Renderer = props.getRenderer(message);\n        if (!Renderer) return null;\n        return (\n          <RendererMessage\n            animation={message.animation}\n            duration={message.duration}\n            key={message.id}\n            level={message.level}\n            message={\n              <Renderer\n                message={message}\n                currentLocale={props.currentLocale}\n                brand={props.brand}\n              />\n            }\n            onDismiss={() => {\n              props.dismiss(message.id);\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nAlertDisplay.propTypes = {\n  className: PropTypes.string,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      level: PropTypes.oneOf(Object.keys(alertLevels)).isRequired,\n      message: PropTypes.string.isRequired,\n      payload: PropTypes.any,\n    }),\n  ),\n  getRenderer: PropTypes.func,\n  dismiss: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  animation: PropTypes.string,\n  brand: PropTypes.string,\n  duration: PropTypes.number,\n  component: PropTypes.func,\n};\nAlertDisplay.defaultProps = {\n  getRenderer: () => undefined,\n  component: Message,\n  brand: 'RingCentral',\n};\n\nexport default AlertDisplay;\n"],"file":"index.js"}