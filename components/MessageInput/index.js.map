{"version":3,"sources":["components/MessageInput/index.js"],"names":["UIHeightOffset","MessageInput","props","context","onChange","e","_lastValueChange","Date","now","value","currentTarget","newHeight","calculateNewHeight","state","height","onHeightChange","setState","onKeyDown","key","shiftKey","preventDefault","onSend","disabled","minHeight","nextProps","inputExpandable","textArea","style","scrollHeight","maxHeight","currentLocale","maxLength","inputHeight","styles","root","textField","target","i18n","getString","submitField","sendButton","Component","propTypes","PropTypes","string","isRequired","bool","number","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst UIHeightOffset = 23;\n// the extra height of the entire field with paddings and borders\n\nexport default class MessageInput extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    minHeight: PropTypes.number,\n    maxHeight: PropTypes.number,\n    maxLength: PropTypes.number,\n    onSend: PropTypes.func,\n    onChange: PropTypes.func,\n    onHeightChange: PropTypes.func,\n    inputExpandable: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    onSend: undefined,\n    onChange: undefined,\n    onHeightChange: undefined,\n    minHeight: 63,\n    maxHeight: 300,\n    maxLength: 5000,\n    inputExpandable: true,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      value: props.value,\n      height: props.minHeight,\n    };\n    this._lastValueChange = 0;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.value !== this.state.value &&\n      // ignore value changes from props for 300ms after typing\n      // this is to prevent unnecessary value changes when used in chrome extension\n      // where value pushed back to background and back takes longer\n      Date.now() - this._lastValueChange > 300\n    ) {\n      // use setState(updater, callback) to recaculate height after value has been update to DOM\n      this.setState(\n        () => ({\n          value: nextProps.value,\n        }),\n        () => {\n          const newHeight = this.calculateNewHeight();\n          if (newHeight !== this.state.height) {\n            if (typeof this.props.onHeightChange === 'function') {\n              this.props.onHeightChange(newHeight);\n            }\n            this.setState({\n              height: newHeight,\n            });\n          }\n        },\n      );\n    }\n  }\n\n  componentDidMount() {\n    // do a initial size check in case the component is mounted with multi line value\n    const newHeight = this.calculateNewHeight();\n    if (newHeight !== this.state.height) {\n      if (typeof this.props.onHeightChange === 'function') {\n        this.props.onHeightChange(newHeight);\n      }\n      this.setState({\n        height: newHeight,\n      });\n    }\n  }\n\n  calculateNewHeight() {\n    if (!this.props.inputExpandable) {\n      return this.props.minHeight;\n    }\n    // temperarily set height to 0 to check scrollHeight\n    this.textArea.style.height = 0;\n    const newHeight = this.textArea.scrollHeight + 10 + UIHeightOffset;\n    // set height back to original to avoid messing with react\n    this.textArea.style.height = `${this.state.height - UIHeightOffset}px`;\n    const { minHeight, maxHeight } = this.props;\n    if (newHeight < minHeight) {\n      return minHeight;\n    }\n    if (newHeight > maxHeight) {\n      return maxHeight;\n    }\n    return newHeight;\n  }\n\n  onChange = (e) => {\n    this._lastValueChange = Date.now();\n    const {\n      currentTarget: { value },\n    } = e;\n    const newHeight = this.calculateNewHeight();\n    if (\n      newHeight !== this.state.height &&\n      typeof this.props.onHeightChange === 'function'\n    ) {\n      this.props.onHeightChange(newHeight);\n    }\n    this.setState({\n      value,\n      height: newHeight,\n    });\n    if (typeof this.props.onChange === 'function') {\n      this.props.onChange(value);\n    }\n  };\n\n  onKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      this.onSend();\n    }\n  };\n\n  onSend = () => {\n    if (!this.props.disabled && typeof this.props.onSend === 'function') {\n      this.props.onSend();\n    }\n  };\n\n  render() {\n    const { currentLocale, disabled, maxLength } = this.props;\n    const { value, height } = this.state;\n    const inputHeight = height - UIHeightOffset;\n    return (\n      <div className={styles.root}>\n        <div className={styles.textField}>\n          <textarea\n            data-sign=\"messageInput\"\n            ref={(target) => {\n              this.textArea = target;\n            }}\n            placeholder={i18n.getString('typeMessage', currentLocale)}\n            value={value}\n            maxLength={maxLength}\n            onChange={this.onChange}\n            onKeyPressCapture={this.onKeyDown}\n            style={{\n              height: inputHeight,\n            }}\n          />\n        </div>\n        <div className={styles.submitField}>\n          <input\n            data-sign=\"messageButton\"\n            type=\"button\"\n            value={i18n.getString('send', currentLocale)}\n            onClick={this.onSend}\n            className={styles.sendButton}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}