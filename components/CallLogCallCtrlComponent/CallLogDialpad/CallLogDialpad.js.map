{"version":3,"sources":["components/CallLogCallCtrlComponent/CallLogDialpad/CallLogDialpad.tsx"],"names":["cleanRegex","filter","value","replace","MAX_PASTE_LENGTH","CallLogDialpad","onChange","onClose","className","isWide","React","useState","setValue","audio","useEffect","document","createElement","playAudio","canPlayType","audios","paused","pause","src","currentTime","play","onButtonOutput","key","sendDTMFKeys","keys","split","forEach","index","setTimeout","onInputChange","e","currentTarget","onKeyDown","onPaste","item","clipboardData","items","getAsString","data","filteredValue","length","slice","styles","root","classic","closeBtn","dialInput","input","keypadContainer","dialPad"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport classnames from 'classnames';\nimport CloseDialpadIcon from '../../../assets/images/CloseDialpad.svg';\nimport DialPad from '../../DialPad';\nimport audios from '../../DialButton/audios';\nimport styles from './styles.scss';\nimport { CallLogDialpadProps, DtmfValue } from './CallLogDialpad.interface';\n\nconst cleanRegex = /[^\\d*#]/g;\nconst filter = (value) => value.replace(cleanRegex, '');\n\nconst MAX_PASTE_LENGTH = 15;\n\nconst CallLogDialpad: React.FunctionComponent<CallLogDialpadProps> = ({\n  onChange,\n  onClose,\n  className,\n  isWide,\n}) => {\n  const [value, setValue] = React.useState('');\n  let audio: any;\n  React.useEffect(() => {\n    if (typeof document !== 'undefined' && document.createElement) {\n      audio = document.createElement('audio');\n    }\n  });\n\n  const playAudio = (value: DtmfValue) => {\n    if (audio && audio.canPlayType('audio/ogg') !== '' && audios[value]) {\n      if (!audio.paused) {\n        audio.pause();\n      }\n      audio.src = audios[value];\n      audio.currentTime = 0;\n      audio.play();\n    }\n  };\n\n  const onButtonOutput = (key: DtmfValue) => {\n    setValue(value + key);\n    onChange(key);\n  };\n\n  const sendDTMFKeys = (keys: DtmfValue) => {\n    if (keys === '') {\n      return;\n    }\n    onChange(keys);\n    keys.split('').forEach((key, index) => {\n      setTimeout(() => {\n        playAudio(key);\n      }, 100 * index);\n    });\n  };\n\n  const onInputChange = (e) => {\n    const value = filter(e.currentTarget.value);\n    setValue(value);\n  };\n\n  const onKeyDown = (e: any) => {\n    const value = filter(e.key);\n    sendDTMFKeys(value);\n  };\n\n  const onPaste = (e: any) => {\n    const item = e.clipboardData.items[0];\n    item.getAsString((data) => {\n      const filteredValue = filter(data.replace(/<[^>]*>/g, '')); // remove HTML tag in firefox\n      let keys = filteredValue;\n      if (filteredValue.length > MAX_PASTE_LENGTH) {\n        keys = filteredValue.slice(0, MAX_PASTE_LENGTH);\n      }\n      sendDTMFKeys(keys);\n      if (filteredValue.length > MAX_PASTE_LENGTH) {\n        setValue(value.replace(filteredValue, keys));\n      }\n    });\n  };\n  return (\n    <div\n      data-sign=\"callLogDialPad\"\n      className={classnames(styles.root, className, {\n        [styles.classic]: !isWide,\n      })}\n    >\n      <div className={styles.closeBtn} onClick={onClose}>\n        <CloseDialpadIcon />\n      </div>\n      <div\n        className={classnames(styles.dialInput, { [styles.classic]: !isWide })}\n      >\n        <input\n          data-sign=\"input\"\n          className={styles.input}\n          value={value}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n          onPaste={onPaste}\n          autoFocus // eslint-disable-line\n        />\n      </div>\n      <div\n        className={classnames(styles.keypadContainer, {\n          [styles.classic]: !isWide,\n        })}\n      >\n        <DialPad\n          dataSign=\"keypad\"\n          className={styles.dialPad}\n          onButtonOutput={onButtonOutput}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { CallLogDialpad };\n"],"file":"CallLogDialpad.js"}