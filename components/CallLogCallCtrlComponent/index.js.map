{"version":3,"sources":["components/CallLogCallCtrlComponent/index.js"],"names":["recodingVoiceTime","CallLogCallCtrlComponent","props","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","recordStatus","currentLocale","callDirection","onTransfer","isOnTransfer","isOnHold","onUnHold","onHold","startRecord","stopRecord","disableLinks","isWide","transferRef","isCurrentDeviceCall","sendDTMF","forward","answer","forwardingNumbers","ignore","otherActiveCalls","answerAndHold","answerAndEnd","isInComingCall","callDirections","inbound","telephonyStatuses","ringing","muteIcon","MuteIcon","UnmuteIcon","muteAction","muteTitle","holdTitle","holdAction","endTitle","endAction","disabledCtrl","dialpadShow","onDialpadShow","toggleDialpadShow","anchorEl","setAnchorEl","recordPendingState","setRecordPendingState","timer","startRecordAction","res","setTimeout","clearTimeout","handleClick","event","currentTarget","handleClose","isWebRTCCall","onGoingActiveCalls","outbound","isRecording","recordStatusEnum","recording","recordingText","recordAction","keypadText","onHoldText","moreActions","icon","TransferSmallIcon","key","onClick","iconClassName","styles","moreActionIcon","text","i18n","getString","HoldIconInAction","holdActive","RecordIconActive","RecordIcon","recordingIcon","recordingDisabled","disabled","rootButtonProps","MoreIcon","tooltip","classic","root","button","buttonDisabled","DialpadIcon","dialpadIconActive","EndIcon","hangup","smallDialpad","smallDiapadShow","e","forwardTitle","ignoreTitle","voicemailTitle","answerTitle","onForward","stopPropagation","selectdValue","attributes","value","forwardList","map","phoneNumber","label","subText","push","ForwardIcon","className","rootButtonActive","paper","forwardPopover","IgnoreIcon","VoicemailIcon","AnswerIcon","answerButton","TransferIcon","buttonActive","HoldIcon","propTypes","PropTypes","func","bool","string","isRequired","oneOfType","shape","current","instanceOf","Element","array","defaultProps","undefined"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport telephonyStatuses from 'ringcentral-integration/enums/telephonyStatus';\nimport recordStatusEnum from 'ringcentral-integration/modules/Webphone/recordStatus';\nimport TransferSmallIcon from '@ringcentral/juno/icons/icon-transfer-call.svg';\nimport HoldIconInAction from '@ringcentral/juno/icons/icon-hold.svg';\nimport IgnoreIcon from '@ringcentral/juno/icons/icon-ignore.svg';\nimport VoicemailIcon from '@ringcentral/juno/icons/icon-voicemail.svg';\nimport ForwardIcon from '../../assets/images/Forward_white.svg';\nimport RecordIcon from '../../assets/images/RecordOff.svg';\nimport RecordIconActive from '../../assets/images/RecordOn.svg';\nimport CircleButton from '../CircleButton';\nimport { MoreActionComponent } from './MoreActionComponent';\nimport { CallLogDialpad } from './CallLogDialpad';\nimport EndIcon from '../../assets/images/End.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport DialpadIcon from '../../assets/images/Dialpad.svg';\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport MoreIcon from '../../assets/images/MoreIcon.svg';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { MoreActionWithForward } from './MoreActionWithForward';\nimport HoldAnswerIcon from '../../assets/images/HoldAnswer.svg';\nimport EndAnswerIcon from '../../assets/images/EndAnswer.svg';\n\nconst recodingVoiceTime = 6781;\n\nconst CallLogCallCtrlComponent = (props) => {\n  const {\n    onMute,\n    onUnmute,\n    onHangup,\n    onReject,\n    isOnMute,\n    callStatus,\n    recordStatus,\n    currentLocale,\n    callDirection,\n    onTransfer,\n    isOnTransfer,\n    isOnHold,\n    onUnHold,\n    onHold,\n    startRecord,\n    stopRecord,\n    disableLinks,\n    isWide,\n    transferRef,\n    isCurrentDeviceCall,\n    sendDTMF,\n    forward,\n    answer,\n    forwardingNumbers,\n    ignore,\n    otherActiveCalls,\n    answerAndHold,\n    answerAndEnd,\n  } = props;\n\n  // reject conditions: call direction is inbound & call status is ringing\n  const isInComingCall =\n    callDirections.inbound === callDirection &&\n    telephonyStatuses.ringing === callStatus;\n\n  const muteIcon = isOnMute ? MuteIcon : UnmuteIcon;\n  const muteAction = isOnMute ? onUnmute : onMute;\n  const muteTitle = isOnMute ? 'unmute' : 'mute';\n  const holdTitle = isOnHold ? 'onHold' : 'hold';\n  const holdAction = isOnHold ? onUnHold : onHold;\n  const endTitle = isInComingCall ? 'reject' : 'hangup';\n  const endAction = isInComingCall ? onReject : onHangup;\n  const disabledCtrl = callStatus === telephonyStatuses.ringing;\n  const [dialpadShow, onDialpadShow] = useState(false);\n  const toggleDialpadShow = () => {\n    onDialpadShow(!dialpadShow);\n  };\n  // WebRTC logic\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [recordPendingState, setRecordPendingState] = useState(false);\n  let timer;\n  const startRecordAction = async (...args) => {\n    const res = await startRecord(...args);\n    if (res) {\n      setRecordPendingState(true);\n      timer = setTimeout(() => {\n        setRecordPendingState(false);\n      }, recodingVoiceTime);\n    }\n  };\n  useEffect(() => () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  });\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const isWebRTCCall = isCurrentDeviceCall;\n  const onGoingActiveCalls = otherActiveCalls;\n  if (\n    (isWebRTCCall && callDirections.outbound === callDirection) ||\n    (isWebRTCCall &&\n      callDirections.inbound === callDirection &&\n      callStatus !== telephonyStatuses.ringing)\n  ) {\n    const isRecording = recordStatus === recordStatusEnum.recording;\n    const recordingText = isRecording ? 'stopRecord' : 'record';\n    const recordAction = isRecording ? stopRecord : startRecordAction;\n    const keypadText = dialpadShow ? 'hideKeypad' : 'showKeypad';\n    const onHoldText = isOnHold ? 'unHold' : 'hold';\n    const moreActions = [\n      {\n        icon: TransferSmallIcon,\n        key: 'transfer',\n        onClick: onTransfer,\n        iconClassName: classnames({\n          [styles.moreActionIcon]: true,\n        }),\n        text: i18n.getString('transfer', currentLocale),\n      },\n      {\n        icon: HoldIconInAction,\n        key: onHoldText,\n        onClick: holdAction,\n        iconClassName: classnames({\n          [styles.moreActionIcon]: true,\n          [styles.holdActive]: isOnHold,\n        }),\n        text: i18n.getString(onHoldText, currentLocale),\n      },\n      {\n        icon: isRecording ? RecordIconActive : RecordIcon,\n        key: recordingText,\n        onClick: recordAction,\n        iconClassName: classnames({\n          [styles.moreActionIcon]: true,\n          [styles.recordingIcon]: true,\n          [styles.recordingDisabled]: recordPendingState,\n        }),\n        disabled: recordPendingState || isOnHold,\n        text: i18n.getString(recordingText, currentLocale),\n      },\n    ];\n    const rootButtonProps = {\n      icon: MoreIcon,\n      tooltip: i18n.getString('more', currentLocale),\n    };\n    return (\n      <>\n        <div\n          className={classnames(!isWide ? styles.classic : null, styles.root)}\n        >\n          <span title={i18n.getString(muteTitle, currentLocale)}>\n            <CircleButton\n              dataSign={muteTitle}\n              icon={muteIcon}\n              onClick={muteAction}\n              className={classnames({\n                [styles.button]: true,\n                [styles.buttonDisabled]: disableLinks || disabledCtrl,\n              })}\n              disabled={disableLinks || disabledCtrl}\n            />\n          </span>\n          <span title={i18n.getString(keypadText, currentLocale)}>\n            <CircleButton\n              dataSign={keypadText}\n              icon={DialpadIcon}\n              className={classnames({\n                [styles.button]: true,\n                [styles.buttonDisabled]: isInComingCall || disableLinks,\n                [styles.dialpadIconActive]: dialpadShow,\n              })}\n              disabled={disableLinks || isInComingCall}\n              onClick={toggleDialpadShow}\n            />\n          </span>\n          <MoreActionComponent\n            rootButtonProps={rootButtonProps}\n            actionsList={moreActions}\n            currentLocale={currentLocale}\n            disabled={disableLinks || disabledCtrl}\n            handleClick={handleClick}\n            handleClose={handleClose}\n            anchorEl={anchorEl}\n          />\n          <span title={i18n.getString(endTitle, currentLocale)}>\n            <CircleButton\n              dataSign={endTitle}\n              showBorder={false}\n              icon={EndIcon}\n              onClick={endAction}\n              className={classnames({\n                [styles.hangup]: true,\n                [styles.button]: true,\n                [styles.buttonDisabled]: disableLinks,\n              })}\n              disabled={disableLinks}\n            />\n          </span>\n        </div>\n        {dialpadShow && (\n          <CallLogDialpad\n            className={classnames(styles.smallDialpad, {\n              [styles.smallDiapadShow]: dialpadShow,\n            })}\n            onChange={(e) => {\n              sendDTMF(e);\n            }}\n            onClose={toggleDialpadShow}\n            isWide={isWide}\n          />\n        )}\n      </>\n    );\n  }\n\n  if (isWebRTCCall && isInComingCall && !onGoingActiveCalls) {\n    const forwardTitle = i18n.getString('forward', currentLocale);\n    const ignoreTitle = i18n.getString('ignore', currentLocale);\n    const voicemailTitle = i18n.getString('voicemail', currentLocale);\n    const answerTitle = i18n.getString('answer', currentLocale);\n    const onForward = (e) => {\n      e.stopPropagation();\n      handleClose();\n      const selectdValue = e.currentTarget.attributes['data-value'].value;\n      forward(selectdValue);\n    };\n    const forwardList = forwardingNumbers.map((phoneNumber) => {\n      return {\n        key: phoneNumber.phoneNumber,\n        text: phoneNumber.label,\n        subText: phoneNumber.phoneNumber,\n        onClick: (e) => onForward(e),\n      };\n    });\n    forwardList.push({\n      key: 'custom',\n      text: i18n.getString('custom', currentLocale),\n      onClick: (e) => onForward(e),\n    });\n    const rootButtonProps = {\n      icon: ForwardIcon,\n      className: !!anchorEl && styles.rootButtonActive,\n      tooltip: forwardTitle,\n    };\n    return (\n      <div className={classnames(!isWide ? styles.classic : null, styles.root)}>\n        <MoreActionComponent\n          rootButtonProps={rootButtonProps}\n          actionsList={forwardList}\n          currentLocale={currentLocale}\n          handleClick={handleClick}\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          withSubText\n          popoverClasses={{ paper: styles.forwardPopover }}\n        />\n        <span title={ignoreTitle}>\n          <CircleButton\n            dataSign={ignoreTitle}\n            icon={IgnoreIcon}\n            iconWidth={250}\n            iconHeight={250}\n            iconX={125}\n            iconY={125}\n            className={classnames({\n              [styles.button]: true,\n            })}\n            disabled={disableLinks}\n            onClick={ignore}\n          />\n        </span>\n        <span title={voicemailTitle}>\n          <CircleButton\n            dataSign={voicemailTitle}\n            showBorder={false}\n            icon={VoicemailIcon}\n            iconWidth={250}\n            iconHeight={250}\n            iconX={125}\n            iconY={125}\n            onClick={endAction}\n            className={classnames({\n              [styles.hangup]: true,\n              [styles.button]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n        <span title={answerTitle}>\n          <CircleButton\n            dataSign={answerTitle}\n            showBorder={false}\n            icon={AnswerIcon}\n            onClick={answer}\n            className={classnames({\n              [styles.button]: true,\n              [styles.answer]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n      </div>\n    );\n  }\n\n  if (isWebRTCCall && onGoingActiveCalls && isInComingCall) {\n    const voicemailTitle = i18n.getString('voicemail', currentLocale);\n    return (\n      <div className={classnames(!isWide ? styles.classic : null, styles.root)}>\n        <span\n          title={i18n.getString('answerAndEnd', currentLocale)}\n          className={styles.answerButton}\n          onClick={answerAndEnd}\n        >\n          <EndAnswerIcon />\n        </span>\n        <span title={voicemailTitle}>\n          <CircleButton\n            dataSign={voicemailTitle}\n            showBorder={false}\n            icon={VoicemailIcon}\n            iconWidth={250}\n            iconHeight={250}\n            iconX={125}\n            iconY={125}\n            onClick={endAction}\n            className={classnames({\n              [styles.hangup]: true,\n              [styles.button]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n        <span\n          title={i18n.getString('answerAndHold', currentLocale)}\n          className={styles.answerButton}\n          onClick={answerAndHold}\n        >\n          <HoldAnswerIcon />\n        </span>\n        <MoreActionWithForward\n          currentLocale={currentLocale}\n          disabled={disableLinks}\n          forwardingNumbers={forwardingNumbers}\n          forward={forward}\n          ignore={ignore}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classnames(!isWide ? styles.classic : null, styles.root)}>\n      <span title={i18n.getString(muteTitle, currentLocale)}>\n        <CircleButton\n          dataSign={muteTitle}\n          icon={muteIcon}\n          onClick={muteAction}\n          className={classnames({\n            [styles.button]: true,\n            [styles.buttonDisabled]: disableLinks || disabledCtrl,\n          })}\n          disabled={disableLinks || disabledCtrl}\n        />\n      </span>\n      <span ref={transferRef} title={i18n.getString('transfer', currentLocale)}>\n        <CircleButton\n          dataSign=\"transfer\"\n          icon={TransferIcon}\n          onClick={onTransfer}\n          className={classnames({\n            [styles.button]: true,\n            [styles.buttonActive]: isOnTransfer,\n            [styles.buttonDisabled]: disableLinks || isInComingCall,\n          })}\n          disabled={disableLinks || isInComingCall}\n        />\n      </span>\n      <span title={i18n.getString(holdTitle, currentLocale)}>\n        <CircleButton\n          dataSign={holdTitle}\n          icon={HoldIcon}\n          onClick={holdAction}\n          className={classnames({\n            [styles.button]: true,\n            [styles.buttonActive]: isOnHold,\n            [styles.buttonDisabled]: isInComingCall || disableLinks,\n          })}\n          disabled={disableLinks || isInComingCall}\n        />\n      </span>\n      <span title={i18n.getString(endTitle, currentLocale)}>\n        <CircleButton\n          dataSign={endTitle}\n          showBorder={false}\n          icon={EndIcon}\n          onClick={endAction}\n          className={classnames({\n            [styles.hangup]: true,\n            [styles.button]: true,\n            [styles.buttonDisabled]: disableLinks,\n          })}\n          disabled={disableLinks}\n        />\n      </span>\n    </div>\n  );\n};\n\nCallLogCallCtrlComponent.propTypes = {\n  onMute: PropTypes.func,\n  onUnmute: PropTypes.func,\n  onHangup: PropTypes.func,\n  onReject: PropTypes.func,\n  onTransfer: PropTypes.func,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  onUnHold: PropTypes.func,\n  onHold: PropTypes.func,\n  startRecord: PropTypes.func,\n  stopRecord: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  callStatus: PropTypes.string,\n  recordStatus: PropTypes.string,\n  currentLocale: PropTypes.string,\n  callDirection: PropTypes.string.isRequired,\n  isWide: PropTypes.bool,\n  isCurrentDeviceCall: PropTypes.bool,\n  transferRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]),\n  isOnTransfer: PropTypes.bool,\n  sendDTMF: PropTypes.func,\n  forward: PropTypes.func,\n  answer: PropTypes.func,\n  forwardingNumbers: PropTypes.array,\n  ignore: PropTypes.func,\n  otherActiveCalls: PropTypes.bool,\n  answerAndHold: PropTypes.func,\n  answerAndEnd: PropTypes.func,\n};\nCallLogCallCtrlComponent.defaultProps = {\n  onMute() {},\n  onUnmute() {},\n  onHangup() {},\n  onReject() {},\n  onTransfer() {},\n  onUnHold() {},\n  onHold() {},\n  startRecord() {},\n  stopRecord() {},\n  isOnMute: false,\n  isOnHold: false,\n  callStatus: 'CallConnected',\n  currentLocale: 'en-US',\n  disableLinks: false,\n  isWide: true,\n  transferRef: undefined,\n  isOnTransfer: false,\n  sendDTMF() {},\n  forward() {},\n  answer() {},\n  forwardingNumbers: [],\n  ignore() {},\n  otherActiveCalls: false,\n  answerAndEnd() {},\n  answerAndHold() {},\n};\n\nexport default CallLogCallCtrlComponent;\n"],"file":"index.js"}