{"version":3,"sources":["components/LocalePicker/index.js"],"names":["renderFunction","locale","split","lang","tokens","region","join","i18n","getString","countryNames","LocalePicker","mounted","Promise","all","props","options","reduce","promises","l","push","_load","forceUpdate","Component","propTypes","value","PropTypes","string","isRequired","arrayOf","onChange","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAAA,sBACJA,MAAM,CAACC,KAAP,CAAa,MAAb,CADI;AAAA;AAAA,MACvBC,IADuB;AAAA,MACdC,MADc;;AAE9B,MAAMC,MAAM,GAAGD,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAf;AACA,mBAAUC,iBAAKC,SAAL,CAAeL,IAAf,EAAqBF,MAArB,CAAV,eAA2CQ,yBAAaD,SAAb,CACzCH,MADyC,EAEzCJ,MAFyC,CAA3C;AAID;;IACoBS,Y;;;;;;;;;;;;;wCACC;AAAA;;AAClB,WAAKC,OAAL,GAAe,IAAf;;AACA,8DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACOC,OAAO,CAACC,GAAR,CACJ,KAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0B,UAACC,QAAD,EAAWC,CAAX,EAAiB;AACzCD,kBAAAA,QAAQ,CAACE,IAAT,CAAcZ,iBAAKa,KAAL,CAAWF,CAAX,CAAd;AACAD,kBAAAA,QAAQ,CAACE,IAAT,CAAcV,yBAAaW,KAAb,CAAmBF,CAAnB,CAAd;AACA,yBAAOD,QAAP;AACD,iBAJD,EAIG,EAJH,CADI,CADP;;AAAA;AAQC,oBAAI,KAAI,CAACN,OAAT,EAAkB,KAAI,CAACU,WAAL;;AARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAUD;;;2CACsB;AACrB,WAAKV,OAAL,GAAe,KAAf;AACD;;;6BACQ;AACP,0BACE,gCAAC,0BAAD,eACM,KAAKG,KADX;AAEE,QAAA,aAAa,EAAC,MAFhB;AAGE,QAAA,WAAW,EAAEd,cAHf;AAIE,QAAA,cAAc,EAAEA;AAJlB,SADF;AAQD;;;;EA1BuCsB,gB;;;AA4B1CZ,YAAY,CAACa,SAAb,GAAyB;AACvBC,EAAAA,KAAK,EAAEC,sBAAUC,MAAV,CAAiBC,UADD;AAEvBZ,EAAAA,OAAO,EAAEU,sBAAUG,OAAV,CAAkBH,sBAAUC,MAA5B,EAAoCC,UAFtB;AAGvBE,EAAAA,QAAQ,EAAEJ,sBAAUK,IAAV,CAAeH;AAHF,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DropdownSelect from '../DropdownSelect';\nimport i18n from './i18n';\nimport countryNames from '../../lib/countryNames';\n\nfunction renderFunction(locale) {\n  const [lang, ...tokens] = locale.split(/[-_]/);\n  const region = tokens.join('-');\n  return `${i18n.getString(lang, locale)} (${countryNames.getString(\n    region,\n    locale,\n  )})`;\n}\nexport default class LocalePicker extends Component {\n  componentDidMount() {\n    this.mounted = true;\n    (async () => {\n      await Promise.all(\n        this.props.options.reduce((promises, l) => {\n          promises.push(i18n._load(l));\n          promises.push(countryNames._load(l));\n          return promises;\n        }, []),\n      );\n      if (this.mounted) this.forceUpdate();\n    })();\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  render() {\n    return (\n      <DropdownSelect\n        {...this.props}\n        dropdownAlign=\"left\"\n        renderValue={renderFunction}\n        renderFunction={renderFunction}\n      />\n    );\n  }\n}\nLocalePicker.propTypes = {\n  value: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n"],"file":"index.js"}