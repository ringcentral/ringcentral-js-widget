{"version":3,"sources":["components/GlipTeamCreation/index.js"],"names":["GlipTeamCreationModal","props","state","selectedContacts","teamName","creating","error","updateSeachString","e","setState","searchString","target","value","updateFilter","updateTeamName","name","removeContact","email","previousState","filter","c","onCancel","closeModal","onConfirm","length","createTeam","console","log","message","addContact","contact","emails","oldIndex","findIndex","concat","contacts","searchFilter","filteredContacts","slice","show","styles","errorMessage","searchInput","map","selectedContactItem","closeIcon","contactItem","contactName","contactEmail","Component","propTypes","PropTypes","bool","isRequired","func","string","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '@ringcentral-integration/widgets/components/Modal';\nimport { SearchInput } from '@ringcentral-integration/widgets/components/SearchInput';\nimport TextInput from '@ringcentral-integration/widgets/components/TextInput';\n\nimport styles from './styles.scss';\n\nexport default class GlipTeamCreationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedContacts: [],\n      teamName: '',\n      creating: false,\n      error: null,\n    };\n\n    this.updateSeachString = (e) => {\n      this.setState({\n        error: null,\n      });\n      const searchString = e.target.value;\n      this.props.updateFilter(searchString);\n    };\n\n    this.updateTeamName = (e) => {\n      const name = e.target.value;\n      this.setState({\n        teamName: name,\n        error: null,\n      });\n    };\n\n    this.removeContact = (email) => {\n      this.setState((previousState) => ({\n        selectedContacts: previousState.selectedContacts.filter(\n          (c) => c.email !== email,\n        ),\n      }));\n    };\n\n    this.onCancel = () => {\n      this.props.updateFilter('');\n      this.props.closeModal();\n      this.setState({\n        selectedContacts: [],\n        teamName: '',\n      });\n    };\n\n    this.onConfirm = async () => {\n      if (this.state.creating) {\n        return;\n      }\n      if (this.state.teamName === '') {\n        // TODO: update error message with i18n\n        this.setState({ error: 'Please enter a valid team name.' });\n        return;\n      }\n      if (this.state.selectedContacts.length === 0) {\n        // TODO: update error message with i18n\n        this.setState({ error: 'Please select team number.' });\n        return;\n      }\n      this.setState({ creating: true });\n      try {\n        await this.props.createTeam(this.state);\n        this.props.updateFilter('');\n        this.setState({\n          selectedContacts: [],\n          teamName: '',\n          creating: false,\n        });\n        this.props.closeModal();\n      } catch (e) {\n        console.log(e.message);\n        this.setState({ error: e.message, creating: false });\n      }\n    };\n\n    this.addContact = (contact) => {\n      this.setState({\n        error: null,\n      });\n      const email = contact.email || (contact.emails && contact.emails[0]);\n      const oldIndex = this.state.selectedContacts.findIndex(\n        (c) => c.email === email,\n      );\n      if (oldIndex > -1) {\n        return;\n      }\n\n      this.setState({\n        selectedContacts: [\n          {\n            name: contact.name,\n            email,\n          },\n        ].concat(this.state.selectedContacts),\n      });\n      this.props.updateFilter('');\n    };\n  }\n\n  render() {\n    let contacts;\n    if (this.props.searchFilter.length < 3) {\n      contacts = [];\n    } else {\n      contacts = this.props.filteredContacts\n        .filter((c) => c.emails.length)\n        .slice(0, 10);\n    }\n    // TODO: update title message with i18n\n    return (\n      <Modal\n        onConfirm={this.onConfirm}\n        onCancel={this.onCancel}\n        currentLocale=\"en-US\"\n        show={this.props.show}\n        title=\"Create Team\"\n        textCancel=\"Close\"\n        textConfirm={this.state.creating ? 'Creating' : 'Create'}\n      >\n        {this.state.error ? (\n          <div className={styles.errorMessage}>{this.state.error}</div>\n        ) : null}\n        <TextInput\n          className={styles.teamName}\n          value={this.state.teamName}\n          onChange={this.updateTeamName}\n          placeholder=\"Team name\"\n        />\n        <SearchInput\n          className={styles.searchInput}\n          value={this.props.searchFilter}\n          onChange={this.updateSeachString}\n          placeholder=\"Search and add people..\"\n        />\n        <div className={styles.selectedContacts}>\n          {this.state.selectedContacts.map((contact) => (\n            <span className={styles.selectedContactItem} key={contact.email}>\n              {contact.name}\n              <span\n                className={styles.closeIcon}\n                onClick={() => this.removeContact(contact.email)}\n              >\n                x\n              </span>\n            </span>\n          ))}\n        </div>\n        <div className={styles.contacts}>\n          {contacts.map((contact) => (\n            <div\n              className={styles.contactItem}\n              key={contact.email || (contact.emails && contact.emails[0])}\n              onClick={() => this.addContact(contact)}\n            >\n              <div className={styles.contactName} title={contact.name}>\n                {contact.name}\n              </div>\n              <div\n                className={styles.contactEmail}\n                title={contact.email || (contact.emails && contact.emails[0])}\n              >\n                {contact.email || (contact.emails && contact.emails[0])}\n              </div>\n            </div>\n          ))}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nGlipTeamCreationModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  createTeam: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired,\n  searchFilter: PropTypes.string.isRequired,\n  filteredContacts: PropTypes.array.isRequired,\n};\n"],"file":"index.js"}