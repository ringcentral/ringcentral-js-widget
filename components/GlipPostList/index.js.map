{"version":3,"sources":["components/GlipPostList/index.js"],"names":["GlipPostList","props","_onScroll","_listRef","_mounted","currentScrollTop","scrollTop","_scrollHeight","scrollHeight","clientHeight","_scrollTop","_scrollUp","setState","loadingNextPage","loadNextPage","state","_scrollToLastMessage","prevProps","groupId","posts","length","prevLastPost","lastPost","id","className","dateTimeFormatter","showName","atRender","viewProfile","lastDate","styles","root","list","loading","map","post","date","Date","creationTime","time","getMinutes","PureComponent","propTypes","PropTypes","string","array","bool","func","isRequired","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport GlipPostItem from '../GlipPostItem';\n\nexport default class GlipPostList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._scrollTop = 0;\n    this._scrollHeight = 0;\n    this.state = {\n      loadingNextPage: false,\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._scrollToLastMessage();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this._mounted) {\n      return;\n    }\n    if (prevProps.groupId !== this.props.groupId) {\n      this._scrollUp = false;\n      this._scrollToLastMessage();\n    } else if (prevProps.posts.length !== this.props.posts.length) {\n      const prevLastPost = prevProps.posts[prevProps.posts.length - 1] || {};\n      const lastPost = this.props.posts[this.props.posts.length - 1] || {};\n      if (\n        lastPost.id !== prevLastPost.id ||\n        prevProps.posts.length > this.props.posts.length\n      ) {\n        if (!this._scrollUp) {\n          this._scrollToLastMessage();\n        }\n      } else if (\n        this._listRef &&\n        this._scrollHeight !== this._listRef.scrollHeight\n      ) {\n        this._listRef.scrollTop =\n          this._listRef.scrollTop +\n          (this._listRef.scrollHeight - this._scrollHeight);\n      }\n    }\n    this._scrollHeight = this._listRef.scrollHeight;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _onScroll = async () => {\n    if (!this._listRef || !this._mounted) {\n      return;\n    }\n    const currentScrollTop = this._listRef.scrollTop;\n    this._scrollHeight = this._listRef.scrollHeight;\n    const clientHeight = this._listRef.clientHeight;\n    if (\n      currentScrollTop < this._scrollTop &&\n      currentScrollTop < this._scrollHeight - 200\n    ) {\n      // user scroll up\n      this._scrollUp = true;\n    } else if (currentScrollTop + clientHeight > this._scrollHeight - 200) {\n      // user scroll down to bottom\n      this._scrollUp = false;\n    }\n    if (currentScrollTop < 20 && this._scrollTop >= 20) {\n      this.setState({\n        loadingNextPage: true,\n      });\n      await this.props.loadNextPage();\n      if (!this._mounted) {\n        return;\n      }\n      this.setState({\n        loadingNextPage: false,\n      });\n    }\n    this._scrollTop = currentScrollTop;\n  };\n\n  _scrollToLastMessage() {\n    if (this._listRef) {\n      this._listRef.scrollTop = this._listRef.scrollHeight;\n    }\n  }\n\n  render() {\n    const {\n      posts,\n      className,\n      dateTimeFormatter,\n      showName,\n      atRender,\n      viewProfile,\n    } = this.props;\n    let lastDate;\n    return (\n      <div\n        className={classnames(styles.root, className)}\n        ref={(list) => {\n          this._listRef = list;\n        }}\n        onScroll={this._onScroll}\n      >\n        {this.state.loadingNextPage ? (\n          <div className={styles.loading}>Loading...</div>\n        ) : null}\n        {posts.map((post) => {\n          const date = new Date(post.creationTime);\n          const time =\n            date - lastDate < 60 * 1000 &&\n            date.getMinutes() === lastDate.getMinutes()\n              ? null\n              : dateTimeFormatter(post.creationTime);\n          lastDate = date;\n          return (\n            <GlipPostItem\n              post={post}\n              key={post.id}\n              creationTime={time}\n              showName={showName}\n              atRender={atRender}\n              viewProfile={viewProfile}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nGlipPostList.propTypes = {\n  className: PropTypes.string,\n  posts: PropTypes.array,\n  groupId: PropTypes.string,\n  showName: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  viewProfile: PropTypes.func.isRequired,\n  loadNextPage: PropTypes.func.isRequired,\n  atRender: PropTypes.func,\n};\n\nGlipPostList.defaultProps = {\n  className: undefined,\n  posts: [],\n  showName: true,\n  groupId: undefined,\n  atRender: undefined,\n};\n"],"file":"index.js"}