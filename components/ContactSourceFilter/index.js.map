{"version":3,"sources":["components/ContactSourceFilter/index.js"],"names":["ContactSourceItem","sourceName","sourceLabel","isSelected","onSelect","styles","contactSourceItem","selected","propTypes","PropTypes","string","isRequired","bool","func","ContactSourceFilter","props","hideList","_mounted","setState","unfold","onUnfoldChange","window","removeEventListener","showList","addEventListener","togglePanel","evt","stopPropagation","state","emitSelect","onSourceSelect","undefined","key","locale","i18n","getString","className","currentLocale","contactSourceNames","selectedSourceName","isAllSource","contactSourceFilter","filterIconContainer","filterIconNode","iconNoneFill","contactSourceList","e","map","Component","arrayOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport ContactFilterIcon from '../../assets/images/ContactFilter.svg';\nimport ContactFilterSolidIcon from '../../assets/images/ContactFilterSolid.svg';\n\nexport function ContactSourceItem({\n  sourceName,\n  sourceLabel,\n  isSelected,\n  onSelect,\n}) {\n  return (\n    <div\n      onClick={() => onSelect(sourceName)}\n      className={classnames(\n        styles.contactSourceItem,\n        isSelected ? styles.selected : '',\n      )}\n    >\n      {sourceLabel}\n    </div>\n  );\n}\nContactSourceItem.propTypes = {\n  sourceName: PropTypes.string.isRequired,\n  sourceLabel: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default class ContactSourceFilter extends Component {\n  constructor(props) {\n    super(props);\n    const unfold = props.unfold !== undefined ? props.unfold : false;\n    this.state = {\n      unfold,\n    };\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n    if (!this.state.unfold) {\n      window.removeEventListener('click', this.hideList);\n    }\n  }\n\n  getString(key, locale) {\n    return i18n.getString(key, locale);\n  }\n\n  hideList = () => {\n    if (this._mounted) {\n      this.setState({\n        unfold: false,\n      });\n      if (typeof this.props.onUnfoldChange === 'function') {\n        this.props.onUnfoldChange(false);\n      }\n    }\n    window.removeEventListener('click', this.hideList);\n  };\n\n  showList = () => {\n    this.setState({\n      unfold: true,\n    });\n    window.addEventListener('click', this.hideList);\n    if (typeof this.props.onUnfoldChange === 'function') {\n      this.props.onUnfoldChange(true);\n    }\n  };\n\n  togglePanel = (evt) => {\n    evt.stopPropagation();\n    if (!this.state.unfold) {\n      this.showList();\n      return;\n    }\n    this.hideList();\n  };\n\n  emitSelect = (sourceName) => {\n    const { onSourceSelect } = this.props;\n    if (onSourceSelect) {\n      onSourceSelect(sourceName);\n    }\n    this.hideList();\n  };\n\n  render() {\n    const {\n      className,\n      currentLocale,\n      contactSourceNames,\n      selectedSourceName,\n    } = this.props;\n\n    const isAllSource = selectedSourceName === contactSourceNames[0];\n    return (\n      <div\n        className={classnames(styles.contactSourceFilter, className)}\n        data-sign=\"contactSourceFilterButton\"\n        onClick={this.togglePanel}\n      >\n        <div\n          data-sign=\"filterIconContainer\"\n          className={styles.filterIconContainer}\n          title={this.getString(selectedSourceName, currentLocale)}\n        >\n          {isAllSource ? (\n            <ContactFilterIcon\n              className={classnames(styles.filterIconNode, styles.iconNoneFill)}\n            />\n          ) : (\n            <ContactFilterSolidIcon className={styles.filterIconNode} />\n          )}\n        </div>\n        {!this.state.unfold ? null : (\n          <div\n            className={styles.contactSourceList}\n            onClick={(e) => e.stopPropagation()}\n            data-sign=\"contactSourceList\"\n          >\n            {contactSourceNames.map((sourceName) => (\n              <ContactSourceItem\n                key={sourceName}\n                sourceName={sourceName}\n                sourceLabel={this.getString(sourceName, currentLocale)}\n                isSelected={sourceName === selectedSourceName}\n                onSelect={this.emitSelect}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nContactSourceFilter.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onSourceSelect: PropTypes.func,\n  selectedSourceName: PropTypes.string,\n  contactSourceNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  unfold: PropTypes.bool,\n  onUnfoldChange: PropTypes.func,\n};\n\nContactSourceFilter.defaultProps = {\n  className: undefined,\n  selectedSourceName: undefined,\n  onSourceSelect: undefined,\n  unfold: undefined,\n  onUnfoldChange: undefined,\n};\n"],"file":"index.js"}