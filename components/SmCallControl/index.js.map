{"version":3,"sources":["components/SmCallControl/index.js"],"names":["SmCallControl","props","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","currentLocale","callDirection","canRejectCall","callDirections","inbound","telephonyStatuses","ringing","muteIcon","MuteIcon","UnmuteIcon","muteAction","muteTitle","endTitle","endAction","disabledCtrl","styles","smWraper","i18n","getString","button","buttonDisabled","EndIcon","hangup","propTypes","PropTypes","func","bool","string","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport telephonyStatuses from '@ringcentral-integration/commons/enums/telephonyStatus';\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\n\nimport CircleButton from '../CircleButton';\n\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nexport default function SmCallControl(props) {\n  const {\n    onMute,\n    onUnmute,\n    onHangup,\n    onReject,\n    isOnMute,\n    callStatus,\n    currentLocale,\n    callDirection,\n  } = props;\n\n  // reject conditions: call direction is inbound & call status is ringing\n  function canRejectCall() {\n    return (\n      callDirections.inbound === callDirection &&\n      telephonyStatuses.ringing === callStatus\n    );\n  }\n\n  const muteIcon = isOnMute ? MuteIcon : UnmuteIcon;\n  const muteAction = isOnMute ? onUnmute : onMute;\n  const muteTitle = isOnMute ? 'unmute' : 'mute';\n  const endTitle = canRejectCall() ? 'reject' : 'hangup';\n  const endAction = canRejectCall() ? onReject : onHangup;\n  const disabledCtrl = callStatus === telephonyStatuses.ringing;\n  return (\n    <div className={styles.smWraper}>\n      <span title={i18n.getString(muteTitle, currentLocale)}>\n        <CircleButton\n          dataSign={muteTitle}\n          icon={muteIcon}\n          onClick={muteAction}\n          className={classnames(\n            styles.button,\n            disabledCtrl ? styles.buttonDisabled : null,\n          )}\n          disabled={disabledCtrl}\n        />\n      </span>\n      <span title={i18n.getString(endTitle, currentLocale)}>\n        <CircleButton\n          dataSign={endTitle}\n          showBorder={false}\n          icon={EndIcon}\n          onClick={endAction}\n          className={classnames(styles.hangup, styles.button)}\n        />\n      </span>\n    </div>\n  );\n}\n\nSmCallControl.propTypes = {\n  onMute: PropTypes.func,\n  onUnmute: PropTypes.func,\n  onHangup: PropTypes.func,\n  onReject: PropTypes.func,\n  isOnMute: PropTypes.bool,\n  callStatus: PropTypes.string,\n  currentLocale: PropTypes.string,\n  callDirection: PropTypes.string.isRequired,\n};\nSmCallControl.defaultProps = {\n  onMute() {},\n  onUnmute() {},\n  onHangup() {},\n  onReject() {},\n  isOnMute: false,\n  callStatus: 'CallConnected',\n  currentLocale: 'en-US',\n};\n"],"file":"index.js"}