{"version":3,"sources":["components/ActivityCallLogPanel/ActivityCallLogPanel.tsx"],"names":["ActivityCallLogPanel","currentLocale","currentLog","basicInfo","isInbound","disposeCall","status","saveStatus","goToRequeueCallPage","goToTransferCallPage","onMute","onUnmute","onHangup","onReject","onHold","onUnHold","isOnMute","isOnHold","smallCallControlSize","isInComingCall","currentCallControlPermission","allowTransferCall","allowRequeueCall","disableDispose","disableTransfer","disableInternalTransfer","disableHold","disableHangup","disableMute","disableActive","isOnActive","onActive","isWide","showMuteButton","ivrAlertData","onCopySuccess","rest","transferRef","transferEl","setTransferRef","isActivity","isCallEnd","isLoading","onTransfer","current","handleTransferClose","callControlRef","root","styles","callLogCallControl","noneShadow","smallCallControlRoot","EditLogSection","subject","followInfos","callInfos","panel","length","isOnTransfer","Boolean","paper","transferTypes","internal","i18n","getString","phoneBook","manualEntry","defaultProps"],"mappings":"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","sourcesContent":["import { RcButton, RcMenu, RcMenuItem } from '@ringcentral-integration/rcui';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, useRef, useState } from 'react';\nimport { BasicCallInfo } from 'ringcentral-widgets/components/BasicCallInfo';\nimport CallLogPanel, {\n  CallLogPanelProps,\n} from 'ringcentral-widgets/components/CallLogPanel';\n\nimport { transferTypes } from '../../enums';\nimport {\n  EvActivityCallUIFunctions,\n  EvActivityCallUIProps,\n} from '../../interfaces/EvActivityCallUI.interface';\nimport { EvSmallCallControl } from '../EvSmallCallControl';\nimport i18n from './i18n';\nimport { IvrInfo } from './IvrInfo';\nimport styles from './styles.scss';\nimport { EditLogSection, getButtonText } from './utils';\n\nexport type ActivityCallLogPanelProps = EvActivityCallUIProps &\n  EvActivityCallUIFunctions &\n  Pick<CallLogPanelProps, 'startAdornmentRender'>;\n\nexport const ActivityCallLogPanel: FunctionComponent<ActivityCallLogPanelProps> = ({\n  currentLocale,\n  currentLog,\n  basicInfo,\n  isInbound,\n  disposeCall,\n  status,\n  saveStatus,\n  goToRequeueCallPage,\n  goToTransferCallPage,\n  onMute,\n  onUnmute,\n  onHangup,\n  onReject,\n  onHold,\n  onUnHold,\n  isOnMute,\n  isOnHold,\n  smallCallControlSize,\n  isInComingCall,\n  currentCallControlPermission: { allowTransferCall, allowRequeueCall },\n  disableDispose,\n  disableTransfer,\n  disableInternalTransfer,\n  disableHold,\n  disableHangup,\n  disableMute,\n  disableActive,\n  isOnActive,\n  onActive,\n  isWide,\n  showMuteButton,\n  ivrAlertData,\n  onCopySuccess,\n  ...rest\n}) => {\n  const transferRef = useRef(null);\n  const [transferEl, setTransferRef] = useState(null);\n  const isActivity = status === 'active';\n  const isCallEnd = status === 'callEnd';\n  const isLoading = saveStatus === 'saving';\n\n  const onTransfer = () => {\n    setTransferRef(transferRef.current);\n  };\n\n  const handleTransferClose = () => {\n    setTransferRef(null);\n  };\n\n  const callControlRef = useRef<HTMLElement>(null);\n\n  return (\n    <CallLogPanel\n      {...rest}\n      currentLog={currentLog}\n      currentLocale={currentLocale}\n      classes={{\n        root: styles.root,\n        callLogCallControl: classNames(\n          styles.callLogCallControl,\n          isCallEnd ? styles.noneShadow : styles.smallCallControlRoot,\n        ),\n      }}\n      refs={{\n        callLogCallControl: callControlRef,\n      }}\n      isWide={isWide}\n      header={false}\n      showSpinner={false}\n      isInTransferPage={false}\n      // TODO: that need refactor CallLogPanel and then can remove that\n      currentIdentify=\"123\"\n      renderEditLogSection={EditLogSection}\n      renderBasicInfo={() => {\n        return (\n          <>\n            <BasicCallInfo\n              status={status}\n              currentLocale={currentLocale}\n              isInbound={isInbound}\n              isRinging={isActivity}\n              subject={basicInfo.subject}\n              followInfos={basicInfo.followInfos}\n              callInfos={basicInfo.callInfos}\n              callControlRef={callControlRef}\n              onCopySuccess={onCopySuccess}\n              classes={{\n                panel: isCallEnd && styles.noneShadow,\n              }}\n            />\n            {ivrAlertData?.length > 0 && (\n              <IvrInfo isCallEnd={isCallEnd} ivrAlertData={ivrAlertData} />\n            )}\n          </>\n        );\n      }}\n      renderCallLogCallControl={() => {\n        const isOnTransfer = Boolean(transferEl);\n        return isCallEnd ? (\n          <RcButton\n            data-sign=\"submit\"\n            size=\"large\"\n            fullWidth\n            disabled={disableDispose}\n            loading={isLoading}\n            onClick={() => disposeCall()}\n          >\n            {getButtonText(saveStatus, currentLocale)}\n          </RcButton>\n        ) : (\n          <>\n            <RcMenu\n              classes={{ paper: styles.paper }}\n              anchorEl={transferEl}\n              open={isOnTransfer}\n              onClose={handleTransferClose}\n              data-sign=\"transferMenu\"\n            >\n              <RcMenuItem\n                onClick={() => goToTransferCallPage(transferTypes.internal)}\n                disabled={!allowTransferCall || disableInternalTransfer}\n                data-sign=\"transferItem-internalTransfer\"\n              >\n                {i18n.getString('internalTransfer', currentLocale)}\n              </RcMenuItem>\n              <RcMenuItem\n                onClick={() => goToTransferCallPage(transferTypes.phoneBook)}\n                disabled={!allowTransferCall}\n                data-sign=\"transferItem-phoneBookTransfer\"\n              >\n                {i18n.getString('phoneBookTransfer', currentLocale)}\n              </RcMenuItem>\n              <RcMenuItem\n                onClick={() => goToRequeueCallPage()}\n                disabled={!allowRequeueCall}\n                data-sign=\"transferItem-queueTransfer\"\n              >\n                {i18n.getString('queueTransfer', currentLocale)}\n              </RcMenuItem>\n              <RcMenuItem\n                onClick={() => goToTransferCallPage(transferTypes.manualEntry)}\n                disabled={!allowTransferCall}\n                data-sign=\"transferItem-enterANumber\"\n              >\n                {i18n.getString('enterANumber', currentLocale)}\n              </RcMenuItem>\n            </RcMenu>\n            <EvSmallCallControl\n              onMute={onMute}\n              onUnmute={onUnmute}\n              onHangup={onHangup}\n              onReject={onReject}\n              onHold={onHold}\n              onTransfer={onTransfer}\n              onUnHold={onUnHold}\n              onActive={onActive}\n              isOnMute={isOnMute}\n              currentLocale={currentLocale}\n              isOnTransfer={isOnActive || isOnTransfer}\n              isOnHold={isOnHold}\n              transferRef={transferRef}\n              size={smallCallControlSize}\n              isInComingCall={isInComingCall}\n              disableTransfer={disableTransfer}\n              disableHold={disableHold}\n              disableHangup={disableHangup}\n              disableMute={disableMute}\n              disableActive={disableActive}\n              isOnActive={isOnActive}\n              showMuteButton={showMuteButton}\n            />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nActivityCallLogPanel.defaultProps = {\n  basicInfo: {},\n};\n"],"file":"ActivityCallLogPanel.js"}