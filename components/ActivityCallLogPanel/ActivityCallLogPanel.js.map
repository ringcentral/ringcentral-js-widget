{"version":3,"sources":["components/ActivityCallLogPanel/ActivityCallLogPanel.tsx"],"names":["ActivityCallLogPanel","currentLocale","currentLog","basicInfo","isInbound","disposeCall","status","saveStatus","goToRequeueCallPage","goToTransferCallPage","onMute","onUnmute","onHangup","onReject","onHold","onUnHold","isOnMute","isOnHold","smallCallControlSize","isInComingCall","currentCallControlPermission","allowTransferCall","allowRequeueCall","disableDispose","disableTransfer","disableInternalTransfer","disableHold","disableHangup","disableMute","disableActive","isOnActive","onActive","isWide","rest","transferRef","transferEl","setTransferRef","isOnTransfer","setOnTransfer","isActivity","isCallEnd","isLoading","onTransfer","current","handleTransferClose","callControlRef","root","styles","callLogCallControl","noneShadow","smallCallControlRoot","props","EditLogSection","subject","followInfos","callInfos","panel","paper","Boolean","transferTypes","internal","i18n","getString","phoneBook","manualEntry","defaultProps"],"mappings":"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","sourcesContent":["import { RcButton, RcMenu, RcMenuItem } from '@ringcentral-integration/rcui';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, useRef, useState } from 'react';\nimport { BasicCallInfo } from 'ringcentral-widgets/components/BasicCallInfo';\nimport CallLogPanel from 'ringcentral-widgets/components/CallLogPanel';\nimport SaveLogButton from 'ringcentral-widgets/components/SaveLogButton';\n\nimport { transferTypes } from '../../enums';\nimport {\n  EvActivityCallUIFunctions,\n  EvActivityCallUIProps,\n} from '../../interfaces/EvActivityCallUI.interface';\nimport { EvSmallCallControl } from '../EvSmallCallControl';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { EditLogSection, getButtonText } from './utils';\n\nexport type ActivityCallLogPanelProps = EvActivityCallUIProps &\n  EvActivityCallUIFunctions;\n\nexport const ActivityCallLogPanel: FunctionComponent<ActivityCallLogPanelProps> = ({\n  currentLocale,\n  currentLog,\n  basicInfo,\n  isInbound,\n  disposeCall,\n  status,\n  saveStatus,\n  goToRequeueCallPage,\n  goToTransferCallPage,\n  onMute,\n  onUnmute,\n  onHangup,\n  onReject,\n  onHold,\n  onUnHold,\n  isOnMute,\n  isOnHold,\n  smallCallControlSize,\n  isInComingCall,\n  currentCallControlPermission: { allowTransferCall, allowRequeueCall },\n  disableDispose,\n  disableTransfer,\n  disableInternalTransfer,\n  disableHold,\n  disableHangup,\n  disableMute,\n  disableActive,\n  isOnActive,\n  onActive,\n  isWide,\n  ...rest\n}) => {\n  const transferRef = useRef(null);\n  const [transferEl, setTransferRef] = useState(null);\n  const [isOnTransfer, setOnTransfer] = useState(false);\n  const isActivity = status === 'active';\n  const isCallEnd = status === 'callEnd';\n  const isLoading = saveStatus === 'saving';\n  const onTransfer = () => {\n    setOnTransfer(true);\n    setTransferRef(transferRef.current);\n  };\n  const handleTransferClose = () => {\n    setOnTransfer(false);\n    setTransferRef(null);\n  };\n\n  const callControlRef = useRef<HTMLElement>(null);\n\n  return (\n    <CallLogPanel\n      {...rest}\n      currentLog={currentLog}\n      currentLocale={currentLocale}\n      classes={{\n        root: styles.root,\n        callLogCallControl: classNames(\n          styles.callLogCallControl,\n          isCallEnd ? styles.noneShadow : styles.smallCallControlRoot,\n        ),\n      }}\n      refs={{\n        callLogCallControl: callControlRef,\n      }}\n      isWide={isWide}\n      header={false}\n      showSpinner={false}\n      isInTransferPage={false}\n      // TODO: that need refactor CallLogPanel and then can remove that\n      currentIdentify=\"123\"\n      renderSaveLogButton={(props) => <SaveLogButton {...props} />}\n      renderEditLogSection={EditLogSection}\n      renderBasicInfo={() => {\n        return (\n          <BasicCallInfo\n            status={status}\n            currentLocale={currentLocale}\n            isInbound={isInbound}\n            isRinging={isActivity}\n            subject={basicInfo.subject}\n            followInfos={basicInfo.followInfos}\n            callInfos={basicInfo.callInfos}\n            callControlRef={callControlRef}\n            classes={{\n              panel: isCallEnd && styles.noneShadow,\n            }}\n          />\n        );\n      }}\n      renderCallLogCallControl={() => {\n        return isCallEnd ? (\n          <RcButton\n            data-sign=\"submit\"\n            size=\"large\"\n            fullWidth\n            disabled={disableDispose}\n            loading={isLoading}\n            onClick={() => disposeCall()}\n          >\n            {getButtonText(saveStatus, currentLocale)}\n          </RcButton>\n        ) : (\n          <>\n            <RcMenu\n              classes={{ paper: styles.paper }}\n              anchorEl={transferEl}\n              open={Boolean(transferEl)}\n              onClose={handleTransferClose}\n              data-sign=\"transferMenu\"\n            >\n              <RcMenuItem\n                onClick={() => goToTransferCallPage(transferTypes.internal)}\n                disabled={!allowTransferCall || disableInternalTransfer}\n                data-sign=\"transferItem-internalTransfer\"\n              >\n                {i18n.getString('internalTransfer', currentLocale)}\n              </RcMenuItem>\n              <RcMenuItem\n                onClick={() => goToTransferCallPage(transferTypes.phoneBook)}\n                disabled={!allowTransferCall}\n                data-sign=\"transferItem-phoneBookTransfer\"\n              >\n                {i18n.getString('phoneBookTransfer', currentLocale)}\n              </RcMenuItem>\n              <RcMenuItem\n                onClick={() => goToRequeueCallPage()}\n                disabled={!allowRequeueCall}\n                data-sign=\"transferItem-queueTransfer\"\n              >\n                {i18n.getString('queueTransfer', currentLocale)}\n              </RcMenuItem>\n              <RcMenuItem\n                onClick={() => goToTransferCallPage(transferTypes.manualEntry)}\n                disabled={!allowTransferCall}\n                data-sign=\"transferItem-enterANumber\"\n              >\n                {i18n.getString('enterANumber', currentLocale)}\n              </RcMenuItem>\n            </RcMenu>\n            <EvSmallCallControl\n              onMute={onMute}\n              onUnmute={onUnmute}\n              onHangup={onHangup}\n              onReject={onReject}\n              onHold={onHold}\n              onTransfer={onTransfer}\n              onUnHold={onUnHold}\n              onActive={onActive}\n              isOnMute={isOnMute}\n              currentLocale={currentLocale}\n              isOnTransfer={isOnActive || isOnTransfer}\n              isOnHold={isOnHold}\n              transferRef={transferRef}\n              size={smallCallControlSize}\n              isInComingCall={isInComingCall}\n              disableTransfer={disableTransfer}\n              disableHold={disableHold}\n              disableHangup={disableHangup}\n              disableMute={disableMute}\n              disableActive={disableActive}\n              isOnActive={isOnActive}\n            />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nActivityCallLogPanel.defaultProps = {\n  basicInfo: {},\n};\n"],"file":"ActivityCallLogPanel.js"}