{"version":3,"sources":["components/ActivityCallLogPanel/ActivityCallLogPanel.tsx"],"names":["ActivityCallLogPanel","currentLocale","currentLog","basicInfo","isInbound","disposeCall","status","saveStatus","goToRequeueCallPage","goToTransferCallPage","onMute","onUnmute","onHangup","onReject","onHold","onUnHold","isOnMute","isOnHold","smallCallControlSize","isInComingCall","currentCallControlPermission","allowTransferCall","allowRequeueCall","disableDispose","disableTransfer","disableInternalTransfer","disableHold","disableHangup","disableMute","disableActive","isOnActive","onActive","isWide","showMuteButton","ivrAlertData","onCopySuccess","scrollTo","referenceFieldOptions","rest","transferRef","rootRef","transferEl","setTransferRef","isActivity","isCallEnd","isLoading","onTransfer","current","handleTransferClose","callControlRef","editLogSection","props","editSectionRef","root","styles","callLogCallControl","noneShadow","smallCallControlRoot","subject","followInfos","callInfos","panel","length","isOnTransfer","Boolean","paper","transferTypes","internal","i18n","getString","phoneBook","manualEntry","submitButton","defaultProps"],"mappings":"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","sourcesContent":["import { RcButton, RcMenu, RcMenuItem } from '@ringcentral/juno';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, useCallback, useRef, useState } from 'react';\nimport { BasicCallInfo } from 'ringcentral-widgets/components/BasicCallInfo';\nimport CallLogPanel, {\n  CallLogPanelProps,\n} from 'ringcentral-widgets/components/CallLogPanel';\n\nimport { transferTypes } from '../../enums';\nimport {\n  EvActivityCallUIFunctions,\n  EvActivityCallUIProps,\n} from '../../interfaces/EvActivityCallUI.interface';\nimport { EvSmallCallControl } from '../EvSmallCallControl';\nimport i18n from './i18n';\nimport { IvrInfo } from './IvrInfo';\nimport styles from './styles.scss';\nimport { EditLogSection, getButtonText } from './utils';\n\nexport type ActivityCallLogPanelProps = EvActivityCallUIProps &\n  EvActivityCallUIFunctions &\n  Pick<CallLogPanelProps, 'startAdornmentRender'>;\n\nexport const ActivityCallLogPanel: FunctionComponent<ActivityCallLogPanelProps> = ({\n  currentLocale,\n  currentLog,\n  basicInfo,\n  isInbound,\n  disposeCall,\n  status,\n  saveStatus,\n  goToRequeueCallPage,\n  goToTransferCallPage,\n  onMute,\n  onUnmute,\n  onHangup,\n  onReject,\n  onHold,\n  onUnHold,\n  isOnMute,\n  isOnHold,\n  smallCallControlSize,\n  isInComingCall,\n  currentCallControlPermission: { allowTransferCall, allowRequeueCall },\n  disableDispose,\n  disableTransfer,\n  disableInternalTransfer,\n  disableHold,\n  disableHangup,\n  disableMute,\n  disableActive,\n  isOnActive,\n  onActive,\n  isWide,\n  showMuteButton,\n  ivrAlertData,\n  onCopySuccess,\n  scrollTo,\n  referenceFieldOptions,\n  ...rest\n}) => {\n  const transferRef = useRef(null);\n  const rootRef = useRef<CallLogPanel>(null);\n\n  const [transferEl, setTransferRef] = useState(null);\n  const isActivity = status === 'active';\n  const isCallEnd = status === 'callEnd';\n  const isLoading = saveStatus === 'saving';\n\n  const onTransfer = () => {\n    setTransferRef(transferRef.current);\n  };\n\n  const handleTransferClose = () => {\n    setTransferRef(null);\n  };\n\n  const callControlRef = useRef<HTMLElement>(null);\n\n  const editLogSection = useCallback(\n    (props) => (\n      <EditLogSection\n        isWide={isWide}\n        {...props}\n        scrollTo={scrollTo}\n        rootRef={rootRef.current?.editSectionRef}\n        referenceFieldOptions={referenceFieldOptions}\n      />\n    ),\n    [isWide, scrollTo, referenceFieldOptions],\n  );\n\n  return (\n    <CallLogPanel\n      ref={rootRef}\n      {...rest}\n      currentLog={currentLog}\n      currentLocale={currentLocale}\n      classes={{\n        root: styles.root,\n        callLogCallControl: classNames(\n          styles.callLogCallControl,\n          isCallEnd ? styles.noneShadow : styles.smallCallControlRoot,\n        ),\n      }}\n      refs={{\n        root: rootRef,\n        callLogCallControl: callControlRef,\n      }}\n      isWide={isWide}\n      header={false}\n      showSpinner={false}\n      isInTransferPage={false}\n      // TODO: that need refactor CallLogPanel and then can remove that\n      currentIdentify=\"123\"\n      renderEditLogSection={editLogSection}\n      renderBasicInfo={() => {\n        return (\n          <>\n            <BasicCallInfo\n              status={status}\n              currentLocale={currentLocale}\n              isInbound={isInbound}\n              isRinging={isActivity}\n              subject={basicInfo.subject}\n              followInfos={basicInfo.followInfos}\n              callInfos={basicInfo.callInfos}\n              callControlRef={callControlRef}\n              onCopySuccess={onCopySuccess}\n              classes={{\n                panel: isCallEnd && styles.noneShadow,\n              }}\n            />\n            {ivrAlertData?.length > 0 && (\n              <IvrInfo isCallEnd={isCallEnd} ivrAlertData={ivrAlertData} />\n            )}\n          </>\n        );\n      }}\n      renderCallLogCallControl={() => {\n        const isOnTransfer = Boolean(transferEl);\n        return (\n          !isCallEnd && (\n            <>\n              <RcMenu\n                classes={{ paper: styles.paper }}\n                anchorEl={transferEl}\n                open={isOnTransfer}\n                onClose={handleTransferClose}\n                data-sign=\"transferMenu\"\n              >\n                <RcMenuItem\n                  onClick={() => goToTransferCallPage(transferTypes.internal)}\n                  disabled={!allowTransferCall || disableInternalTransfer}\n                  data-sign=\"transferItem-internalTransfer\"\n                >\n                  {i18n.getString('internalTransfer', currentLocale)}\n                </RcMenuItem>\n                <RcMenuItem\n                  onClick={() => goToTransferCallPage(transferTypes.phoneBook)}\n                  disabled={!allowTransferCall}\n                  data-sign=\"transferItem-phoneBookTransfer\"\n                >\n                  {i18n.getString('phoneBookTransfer', currentLocale)}\n                </RcMenuItem>\n                <RcMenuItem\n                  onClick={() => goToRequeueCallPage()}\n                  disabled={!allowRequeueCall}\n                  data-sign=\"transferItem-queueTransfer\"\n                >\n                  {i18n.getString('queueTransfer', currentLocale)}\n                </RcMenuItem>\n                <RcMenuItem\n                  onClick={() =>\n                    goToTransferCallPage(transferTypes.manualEntry)\n                  }\n                  disabled={!allowTransferCall}\n                  data-sign=\"transferItem-enterANumber\"\n                >\n                  {i18n.getString('enterANumber', currentLocale)}\n                </RcMenuItem>\n              </RcMenu>\n              <EvSmallCallControl\n                onMute={onMute}\n                onUnmute={onUnmute}\n                onHangup={onHangup}\n                onReject={onReject}\n                onHold={onHold}\n                onTransfer={onTransfer}\n                onUnHold={onUnHold}\n                onActive={onActive}\n                isOnMute={isOnMute}\n                currentLocale={currentLocale}\n                isOnTransfer={isOnActive || isOnTransfer}\n                isOnHold={isOnHold}\n                transferRef={transferRef}\n                size={smallCallControlSize}\n                isInComingCall={isInComingCall}\n                disableTransfer={disableTransfer}\n                disableHold={disableHold}\n                disableHangup={disableHangup}\n                disableMute={disableMute}\n                disableActive={disableActive}\n                isOnActive={isOnActive}\n                showMuteButton={showMuteButton}\n              />\n            </>\n          )\n        );\n      }}\n    >\n      {isCallEnd && (\n        <div className={classNames(styles.submitButton)}>\n          <RcButton\n            data-sign=\"submit\"\n            size=\"large\"\n            fullWidth\n            disabled={disableDispose}\n            loading={isLoading}\n            onClick={() => disposeCall()}\n          >\n            {getButtonText(saveStatus, currentLocale)}\n          </RcButton>\n        </div>\n      )}\n    </CallLogPanel>\n  );\n};\n\nActivityCallLogPanel.defaultProps = {\n  basicInfo: {},\n};\n"],"file":"ActivityCallLogPanel.js"}