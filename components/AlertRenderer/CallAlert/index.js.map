{"version":3,"sources":["components/AlertRenderer/CallAlert/index.js"],"names":["TELUS_ID","CallAlert","message","id","payload","brand","onAreaCodeLinkClick","currentLocale","callErrors","specialNumber","phoneNumber","i18n","getString","noAreaCode","areaCode","areaCodeLink","styles","link","e","preventDefault","alertId","noInternational","fullName","propTypes","PropTypes","func","shape","string","isRequired","object","defaultProps","undefined","handleMessage","noToNumber","connectFailed","internalError","notAnExtension","networkError","noRingoutEnable"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAG,MAAjB;;AACe,SAASC,SAAT,OAKZ;AAAA,0BAJDC,OAIC;AAAA,MAJUC,EAIV,gBAJUA,EAIV;AAAA,MAJcD,OAId,gBAJcA,OAId;AAAA,MAJuBE,OAIvB,gBAJuBA,OAIvB;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,mBAEC,QAFDA,mBAEC;AAAA,MADDC,aACC,QADDA,aACC;;AACD;AACA;AACA,MACEF,KAAK,IACLA,KAAK,CAACF,EAAN,KAAaH,QADb,IAEAE,OAAO,KAAKM,uBAAWC,aAFvB,IAGAL,OAHA,IAIAA,OAAO,CAACM,WAAR,KAAwB,KAL1B,EAME;AACA,wBAAO,8CAAOC,iBAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAAP,CAAP;AACD;;AACD,MAAIL,OAAO,KAAKM,uBAAWK,UAA3B,EAAuC;AACrC,QAAMC,QAAQ,GAAGH,iBAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAAjB;;AACA,QAAMQ,YAAY,GAAGT,mBAAmB,gBACtC;AACE,MAAA,SAAS,EAAEU,mBAAOC,IADpB;AAEE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,QAAAA,CAAC,CAACC,cAAF;AACAb,QAAAA,mBAAmB,CAAC;AAAEc,UAAAA,OAAO,EAAEjB;AAAX,SAAD,CAAnB;AACD;AALH,OAOGW,QAPH,CADsC,GAWtCA,QAXF;AAaA,wBACE,gCAAC,4BAAD;AACE,MAAA,OAAO,EAAEH,iBAAKC,SAAL,CAAeV,OAAf,EAAwBK,aAAxB,CADX;AAEE,MAAA,MAAM,EAAE;AAAEQ,QAAAA,YAAY,EAAZA;AAAF;AAFV,MADF;AAMD;;AACD,MAAIb,OAAO,KAAKM,uBAAWa,eAA3B,EAA4C;AAC1C,wBACE,gCAAC,4BAAD;AACE,MAAA,OAAO,EAAEV,iBAAKC,SAAL,CAAeV,OAAf,EAAwBK,aAAxB,CADX;AAEE,MAAA,MAAM,EAAE;AAAEF,QAAAA,KAAK,EAAEA,KAAK,CAACiB;AAAf;AAFV,MADF;AAMD;;AACD,sBAAO,8CAAOX,iBAAKC,SAAL,CAAeV,OAAf,EAAwBK,aAAxB,CAAP,CAAP;AACD;;AAEDN,SAAS,CAACsB,SAAV,GAAsB;AACpBjB,EAAAA,mBAAmB,EAAEkB,sBAAUC,IADX;AAEpBvB,EAAAA,OAAO,EAAEsB,sBAAUE,KAAV,CAAgB;AACvBxB,IAAAA,OAAO,EAAEsB,sBAAUG,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAJiB;AAKpBvB,EAAAA,KAAK,EAAEmB,sBAAUK,MAAV,CAAiBD,UALJ;AAMpBrB,EAAAA,aAAa,EAAEiB,sBAAUG,MAAV,CAAiBC;AANZ,CAAtB;AAQA3B,SAAS,CAAC6B,YAAV,GAAyB;AACvBxB,EAAAA,mBAAmB,EAAEyB;AADE,CAAzB;;AAIA9B,SAAS,CAAC+B,aAAV,GAA0B;AAAA,MAAG9B,OAAH,SAAGA,OAAH;AAAA,SACxBA,OAAO,KAAKM,uBAAWyB,UAAvB,IACA/B,OAAO,KAAKM,uBAAWK,UADvB,IAEAX,OAAO,KAAKM,uBAAWC,aAFvB,IAGAP,OAAO,KAAKM,uBAAW0B,aAHvB,IAIAhC,OAAO,KAAKM,uBAAW2B,aAJvB,IAKAjC,OAAO,KAAKM,uBAAW4B,cALvB,IAMAlC,OAAO,KAAKM,uBAAW6B,YANvB,IAOAnC,OAAO,KAAKM,uBAAWa,eAPvB,IAQAnB,OAAO,KAAKM,uBAAW8B,eATC;AAAA,CAA1B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport callErrors from '@ringcentral-integration/commons/modules/Call/callErrors';\nimport FormattedMessage from '../../FormattedMessage';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst TELUS_ID = '7310';\nexport default function CallAlert({\n  message: { id, message, payload },\n  brand,\n  onAreaCodeLinkClick,\n  currentLocale,\n}) {\n  // If brand is Telus and special number is 911,\n  // show messages of its own version.\n  if (\n    brand &&\n    brand.id === TELUS_ID &&\n    message === callErrors.specialNumber &&\n    payload &&\n    payload.phoneNumber === '911'\n  ) {\n    return <span>{i18n.getString('telus911', currentLocale)}</span>;\n  }\n  if (message === callErrors.noAreaCode) {\n    const areaCode = i18n.getString('areaCode', currentLocale);\n    const areaCodeLink = onAreaCodeLinkClick ? (\n      <a\n        className={styles.link}\n        onClick={(e) => {\n          e.preventDefault();\n          onAreaCodeLinkClick({ alertId: id });\n        }}\n      >\n        {areaCode}\n      </a>\n    ) : (\n      areaCode\n    );\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ areaCodeLink }}\n      />\n    );\n  }\n  if (message === callErrors.noInternational) {\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ brand: brand.fullName }}\n      />\n    );\n  }\n  return <span>{i18n.getString(message, currentLocale)}</span>;\n}\n\nCallAlert.propTypes = {\n  onAreaCodeLinkClick: PropTypes.func,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  brand: PropTypes.object.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\nCallAlert.defaultProps = {\n  onAreaCodeLinkClick: undefined,\n};\n\nCallAlert.handleMessage = ({ message }) =>\n  message === callErrors.noToNumber ||\n  message === callErrors.noAreaCode ||\n  message === callErrors.specialNumber ||\n  message === callErrors.connectFailed ||\n  message === callErrors.internalError ||\n  message === callErrors.notAnExtension ||\n  message === callErrors.networkError ||\n  message === callErrors.noInternational ||\n  message === callErrors.noRingoutEnable;\n"],"file":"index.js"}