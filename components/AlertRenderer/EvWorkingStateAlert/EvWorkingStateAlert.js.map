{"version":3,"sources":["components/AlertRenderer/EvWorkingStateAlert/EvWorkingStateAlert.tsx"],"names":["EvWorkingStateAlert","message","currentLocale","i18n","getString","handleMessage","messageTypes","INVALID_STATE_CHANGE","OVER_BREAK_TIME"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;;;AASe,SAASA,mBAAT,OAGc;AAAA,MAFhBC,OAEgB,QAF3BA,OAE2B,CAFhBA,OAEgB;AAAA,MAD3BC,aAC2B,QAD3BA,aAC2B;AAC3B,SAAOC,iBAAKC,SAAL,CAAeH,OAAf,EAAwBC,aAAxB,CAAP;AACD;;AAEDF,mBAAmB,CAACK,aAApB,GAAoC;AAAA,MAAGJ,OAAH,SAAGA,OAAH;AAAA,SAClC,qBAASA,OAAT,EAAkB,CAChBK,oBAAaC,oBADG,EAEhBD,oBAAaE,eAFG,CAAlB,CADkC;AAAA,CAApC","sourcesContent":["import { contains } from 'ramda';\n\nimport { messageTypes } from '../../../enums';\nimport i18n from './i18n';\n\ninterface EvWorkingStateAlertProps {\n  message: {\n    message: string;\n  };\n  currentLocale: string;\n}\n\nexport default function EvWorkingStateAlert({\n  message: { message },\n  currentLocale,\n}: EvWorkingStateAlertProps) {\n  return i18n.getString(message, currentLocale);\n}\n\nEvWorkingStateAlert.handleMessage = ({ message }: { message: string }) =>\n  contains(message, [\n    messageTypes.INVALID_STATE_CHANGE,\n    messageTypes.OVER_BREAK_TIME,\n  ]);\n"],"file":"EvWorkingStateAlert.js"}