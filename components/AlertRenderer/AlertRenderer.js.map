{"version":3,"sources":["components/AlertRenderer/AlertRenderer.tsx"],"names":["AlertRenderer","alert","brand","rateLimiter","routerInteraction","regionSettingsUrl","callingSettingsUrl","onRegionSettingsLinkClick","alertId","push","dismiss","onCallingSettingsLinkClick","message","AuthAlert","handleMessage","CallAlert","props","CallingSettingsAlert","code","name","RegionSettingsAlert","MessageSenderAlert","fullName","MessageStoreAlert","RateExceededAlert","timestamp","_throttleDuration","ConnectivityAlert","WebphoneAlert","MeetingAlert","appName","RolesAndPermissionsAlert","ConferenceAlert","ConferenceCallAlert","AudioSettingsAlert","CallLogAlert","CallControlAlert","undefined"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEO,SAASA,aAAT,CACLC,KADK,EAELC,KAFK,EAGLC,WAHK;AAIL;AACAC,iBALK,EAQL;AAAA,MAFAC,iBAEA,uEAFoB,kBAEpB;AAAA,MADAC,kBACA,uEADqB,mBACrB;;AACA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAkC;AAAA,mFAAP,EAAO;AAAA,4BAA/BC,OAA+B;AAAA,QAA/BA,OAA+B,6BAArB,SAAqB;;AAClEJ,IAAAA,iBAAiB,CAACK,IAAlB,CAAuBJ,iBAAvB;;AACA,QAAIG,OAAJ,EAAa;AACXP,MAAAA,KAAK,CAACS,OAAN,CAAcF,OAAd;AACD;AACF,GALD;;AAMA,MAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACvCP,IAAAA,iBAAiB,CAACK,IAAlB,CAAuBH,kBAAvB;AACD,GAFD;;AAGA,SAAO,UAACM,OAAD,EAAa;AAClB,QAAIC,sBAAUC,aAAV,CAAwBF,OAAxB,CAAJ,EAAsC;AACpC,aAAOC,qBAAP;AACD;;AACD,QAAIE,sBAAUD,aAAV,CAAwBF,OAAxB,CAAJ,EAAsC;AACpC,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,qBAAD,eACMA,KADN;AAEE,UAAA,KAAK,EAAEd,KAFT;AAGE,UAAA,mBAAmB,EAAEK;AAHvB,WADK;AAAA,OAAP;AAOD;;AACD,QAAIU,iCAAqBH,aAArB,CAAmCF,OAAnC,CAAJ,EAAiD;AAC/C,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,gCAAD,eACMA,KADN;AAEE,UAAA,SAAS,EAAEd,KAAK,CAACgB,IAFnB;AAGE,UAAA,SAAS,EAAEhB,KAAK,CAACiB,IAHnB;AAIE,UAAA,0BAA0B,EAAER;AAJ9B,WADK;AAAA,OAAP;AAQD;;AAED,QAAIS,gCAAoBN,aAApB,CAAkCF,OAAlC,CAAJ,EAAgD;AAC9C,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,+BAAD,eACMA,KADN;AAEE,UAAA,yBAAyB,EAAET;AAF7B,WADK;AAAA,OAAP;AAMD;;AACD,QAAIc,+BAAmBP,aAAnB,CAAiCF,OAAjC,CAAJ,EAA+C;AAC7C,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,8BAAD,eACMA,KADN;AAEE,UAAA,KAAK,EAAEd,KAAK,CAACoB,QAFf;AAGE,UAAA,cAAc,EAAEf;AAHlB,WADK;AAAA,OAAP;AAOD;;AAED,QAAIgB,8BAAkBT,aAAlB,CAAgCF,OAAhC,CAAJ,EAA8C;AAC5C,aAAOW,6BAAP;AACD;;AAED,QAAIC,8BAAkBV,aAAlB,CAAgCF,OAAhC,CAAJ,EAA8C;AAC5C,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,6BAAD,eACMA,KADN;AAEE,UAAA,SAAS,EAAEb,WAAW,CAACsB,SAFzB;AAGE,UAAA,QAAQ,EAAEtB,WAAW,CAACuB;AAHxB,WADK;AAAA,OAAP;AAOD;;AAED,QAAIC,8BAAkBb,aAAlB,CAAgCF,OAAhC,CAAJ,EAA8C;AAC5C,aAAOe,6BAAP;AACD;;AAED,QAAIC,0BAAcd,aAAd,CAA4BF,OAA5B,CAAJ,EAA0C;AACxC,aAAO,UAACI,KAAD;AAAA,4BAAW,gCAAC,yBAAD,eAAmBA,KAAnB;AAA0B,UAAA,KAAK,EAAEd;AAAjC,WAAX;AAAA,OAAP;AACD;;AACD,QAAI2B,yBAAaf,aAAb,CAA2BF,OAA3B,CAAJ,EAAyC;AACvC,aAAO,UAACI,KAAD;AAAA,4BAAW,gCAAC,wBAAD,eAAkBA,KAAlB;AAAyB,UAAA,WAAW,EAAEd,KAAK,CAAC4B;AAA5C,WAAX;AAAA,OAAP;AACD;;AACD,QAAIC,qCAAyBjB,aAAzB,CAAuCF,OAAvC,CAAJ,EAAqD;AACnD,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,oCAAD,eACMA,KADN;AAEE,UAAA,KAAK,EAAEd,KAAK,CAACoB,QAFf;AAGE,UAAA,WAAW,EAAEpB,KAAK,CAAC4B;AAHrB,WADK;AAAA,OAAP;AAOD;;AAED,QAAIE,4BAAgBlB,aAAhB,CAA8BF,OAA9B,CAAJ,EAA4C;AAC1C,aAAOoB,2BAAP;AACD;;AAED,QAAIC,gCAAoBnB,aAApB,CAAkCF,OAAlC,CAAJ,EAAgD;AAC9C,aAAOqB,+BAAP;AACD;;AAED,QAAIC,+BAAmBpB,aAAnB,CAAiCF,OAAjC,CAAJ,EAA+C;AAC7C,aAAO,UAACI,KAAD;AAAA,4BACL,gCAAC,8BAAD,eAAwBA,KAAxB;AAA+B,UAAA,WAAW,EAAEd,KAAK,CAAC4B;AAAlD,WADK;AAAA,OAAP;AAGD;;AAED,QAAIK,yBAAarB,aAAb,CAA2BF,OAA3B,CAAJ,EAAyC;AACvC,aAAO,UAACI,KAAD;AAAA,4BAAW,gCAAC,wBAAD,EAAkBA,KAAlB,CAAX;AAAA,OAAP;AACD;;AACD,QAAIoB,6BAAiBtB,aAAjB,CAA+BF,OAA/B,CAAJ,EAA6C;AAC3C,aAAO,UAACI,KAAD;AAAA,4BAAW,gCAAC,4BAAD,EAAsBA,KAAtB,CAAX;AAAA,OAAP;AACD;;AAED,WAAOqB,SAAP;AACD,GAlGD;AAmGD","sourcesContent":["import React from 'react';\n\nimport AudioSettingsAlert from './AudioSettingsAlert';\nimport AuthAlert from './AuthAlert';\nimport CallAlert from './CallAlert';\nimport CallControlAlert from './CallControlAlert';\nimport CallingSettingsAlert from './CallingSettingsAlert';\nimport CallLogAlert from './CallLogAlert';\nimport ConferenceAlert from './ConferenceAlert';\nimport ConferenceCallAlert from './ConferenceCallAlert';\nimport ConnectivityAlert from './ConnectivityAlert';\nimport MeetingAlert from './MeetingAlert';\nimport MessageSenderAlert from './MessageSenderAlert';\nimport MessageStoreAlert from './MessageStoreAlert';\nimport RateExceededAlert from './RateExceededAlert';\nimport RegionSettingsAlert from './RegionSettingsAlert';\nimport RolesAndPermissionsAlert from './RolesAndPermissionsAlert';\nimport WebphoneAlert from './WebphoneAlert';\n\nexport function AlertRenderer(\n  alert,\n  brand,\n  rateLimiter,\n  /** router interaction when need push `regionSettingsUrl` or `callingSettingsUrl` */\n  routerInteraction,\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n) {\n  const onRegionSettingsLinkClick = ({ alertId = 'default' } = {}) => {\n    routerInteraction.push(regionSettingsUrl);\n    if (alertId) {\n      alert.dismiss(alertId);\n    }\n  };\n  const onCallingSettingsLinkClick = () => {\n    routerInteraction.push(callingSettingsUrl);\n  };\n  return (message) => {\n    if (AuthAlert.handleMessage(message)) {\n      return AuthAlert;\n    }\n    if (CallAlert.handleMessage(message)) {\n      return (props) => (\n        <CallAlert\n          {...props}\n          brand={brand}\n          onAreaCodeLinkClick={onRegionSettingsLinkClick}\n        />\n      );\n    }\n    if (CallingSettingsAlert.handleMessage(message)) {\n      return (props) => (\n        <CallingSettingsAlert\n          {...props}\n          brandCode={brand.code}\n          brandName={brand.name}\n          onCallingSettingsLinkClick={onCallingSettingsLinkClick}\n        />\n      );\n    }\n\n    if (RegionSettingsAlert.handleMessage(message)) {\n      return (props) => (\n        <RegionSettingsAlert\n          {...props}\n          onRegionSettingsLinkClick={onRegionSettingsLinkClick}\n        />\n      );\n    }\n    if (MessageSenderAlert.handleMessage(message)) {\n      return (props) => (\n        <MessageSenderAlert\n          {...props}\n          brand={brand.fullName}\n          onAreaCodeLink={onRegionSettingsLinkClick}\n        />\n      );\n    }\n\n    if (MessageStoreAlert.handleMessage(message)) {\n      return MessageStoreAlert;\n    }\n\n    if (RateExceededAlert.handleMessage(message)) {\n      return (props) => (\n        <RateExceededAlert\n          {...props}\n          timestamp={rateLimiter.timestamp}\n          duration={rateLimiter._throttleDuration}\n        />\n      );\n    }\n\n    if (ConnectivityAlert.handleMessage(message)) {\n      return ConnectivityAlert;\n    }\n\n    if (WebphoneAlert.handleMessage(message)) {\n      return (props) => <WebphoneAlert {...props} brand={brand} />;\n    }\n    if (MeetingAlert.handleMessage(message)) {\n      return (props) => <MeetingAlert {...props} application={brand.appName} />;\n    }\n    if (RolesAndPermissionsAlert.handleMessage(message)) {\n      return (props) => (\n        <RolesAndPermissionsAlert\n          {...props}\n          brand={brand.fullName}\n          application={brand.appName}\n        />\n      );\n    }\n\n    if (ConferenceAlert.handleMessage(message)) {\n      return ConferenceAlert;\n    }\n\n    if (ConferenceCallAlert.handleMessage(message)) {\n      return ConferenceCallAlert;\n    }\n\n    if (AudioSettingsAlert.handleMessage(message)) {\n      return (props) => (\n        <AudioSettingsAlert {...props} application={brand.appName} />\n      );\n    }\n\n    if (CallLogAlert.handleMessage(message)) {\n      return (props) => <CallLogAlert {...props} />;\n    }\n    if (CallControlAlert.handleMessage(message)) {\n      return (props) => <CallControlAlert {...props} />;\n    }\n\n    return undefined;\n  };\n}\n"],"file":"AlertRenderer.js"}