{"version":3,"sources":["components/AlertRenderer/EvCallAlert/EvCallAlert.tsx"],"names":["EvCallAlert","message","currentLocale","i18n","getString","handleMessage","messageTypes","NO_SUPPORT_COUNTRY","FAILED_TO_CALL","OFFHOOK_INIT_ERROR","OFFHOOK_TERM_ERROR","ADD_SESSION_ERROR","DROP_SESSION_ERROR","HOLD_ERROR","LOGOUT_FAIL_WITH_CALL_CONNECTED"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;;;AASe,SAASA,WAAT,OAGM;AAAA,MAFRC,OAEQ,QAFnBA,OAEmB,CAFRA,OAEQ;AAAA,MADnBC,aACmB,QADnBA,aACmB;AACnB,SAAOC,iBAAKC,SAAL,CAAeH,OAAf,EAAwBC,aAAxB,CAAP;AACD;;AAEDF,WAAW,CAACK,aAAZ,GAA4B;AAAA,MAAGJ,OAAH,SAAGA,OAAH;AAAA,SAC1B,qBAASA,OAAT,EAAkB,CAChBK,oBAAaC,kBADG,EAEhBD,oBAAaE,cAFG,EAGhBF,oBAAaE,cAHG,EAIhBF,oBAAaG,kBAJG,EAKhBH,oBAAaI,kBALG,EAMhBJ,oBAAaK,iBANG,EAOhBL,oBAAaM,kBAPG,EAQhBN,oBAAaO,UARG,EAShBP,oBAAaQ,+BATG,CAAlB,CAD0B;AAAA,CAA5B","sourcesContent":["import { contains } from 'ramda';\n\nimport { messageTypes } from '../../../enums';\nimport i18n from './i18n';\n\ninterface EvCallAlertProps {\n  message: {\n    message: string;\n  };\n  currentLocale: string;\n}\n\nexport default function EvCallAlert({\n  message: { message },\n  currentLocale,\n}: EvCallAlertProps) {\n  return i18n.getString(message, currentLocale);\n}\n\nEvCallAlert.handleMessage = ({ message }: { message: string }) =>\n  contains(message, [\n    messageTypes.NO_SUPPORT_COUNTRY,\n    messageTypes.FAILED_TO_CALL,\n    messageTypes.FAILED_TO_CALL,\n    messageTypes.OFFHOOK_INIT_ERROR,\n    messageTypes.OFFHOOK_TERM_ERROR,\n    messageTypes.ADD_SESSION_ERROR,\n    messageTypes.DROP_SESSION_ERROR,\n    messageTypes.HOLD_ERROR,\n    messageTypes.LOGOUT_FAIL_WITH_CALL_CONNECTED,\n  ]);\n"],"file":"EvCallAlert.js"}