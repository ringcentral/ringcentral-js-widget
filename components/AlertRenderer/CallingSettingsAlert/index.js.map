{"version":3,"sources":["components/AlertRenderer/CallingSettingsAlert/index.js"],"names":["CallingSettingsAlert","message","currentLocale","brandCode","brandName","onCallingSettingsLinkClick","callingSettingsMessages","saveSuccess","saveSuccessWithSoftphone","webphonePermissionRemoved","emergencyCallingNotAvailable","saveSuccessWithJupiter","appName","i18n","getString","brand","permissionChanged","phoneNumberChanged","link","e","preventDefault","propTypes","PropTypes","shape","string","isRequired","func","defaultProps","undefined","handleMessage"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAIA;;AAEA;;;;AAEA,SAASA,oBAAT,OAMG;AAAA,MALUC,OAKV,QALDA,OAKC,CALUA,OAKV;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,SAEC,QAFDA,SAEC;AAAA,MADDC,0BACC,QADDA,0BACC;;AACD,UAAQJ,OAAR;AACE,SAAKK,oCAAwBC,WAA7B;AACA,SAAKD,oCAAwBE,wBAA7B;AACA,SAAKF,oCAAwBG,yBAA7B;AACA,SAAKH,oCAAwBI,4BAA7B;AACA,SAAKJ,oCAAwBK,sBAA7B;AAAqD;AACnD,YAAIC,OAAO,GAAGR,SAAd;;AACA,YAAIH,OAAO,KAAKK,oCAAwBK,sBAAxC,EAAgE;AAC9DC,UAAAA,OAAO,GAAG,6CAAkBT,SAAlB,EAA6BC,SAA7B,EAAwCF,aAAxC,CAAV;AACD,SAFD,MAEO,IAAID,OAAO,KAAKK,oCAAwBE,wBAAxC,EAAkE;AACvEI,UAAAA,OAAO,GAAG,+CAAoBT,SAApB,EAA+BC,SAA/B,EAA0CF,aAA1C,CAAV;AACD;;AACD,4BACE,gCAAC,4BAAD;AACE,UAAA,OAAO,EAAEW,iBAAKC,SAAL,CAAeb,OAAf,CADX;AAEE,UAAA,MAAM,EAAE;AAAEc,YAAAA,KAAK,EAAEH;AAAT;AAFV,UADF;AAMD;;AACD,SAAKN,oCAAwBU,iBAA7B;AACA,SAAKV,oCAAwBW,kBAA7B;AAAiD;AAC/C,YAAMC,IAAI,GAAGb,0BAA0B,gBACrC;AACE,UAAA,OAAO,EAAE,iBAACc,CAAD,EAAO;AACdA,YAAAA,CAAC,CAACC,cAAF;AACAf,YAAAA,0BAA0B;AAC3B;AAJH,WAMGQ,iBAAKC,SAAL,CAAe,MAAf,EAAuBZ,aAAvB,CANH,CADqC,GAUrCW,iBAAKC,SAAL,CAAe,MAAf,EAAuBZ,aAAvB,CAVF;AAYA,4BACE,gCAAC,4BAAD;AACE,UAAA,OAAO,EAAEW,iBAAKC,SAAL,CAAeb,OAAf,EAAwBC,aAAxB,CADX;AAEE,UAAA,MAAM,EAAE;AAAEgB,YAAAA,IAAI,EAAJA;AAAF;AAFV,UADF;AAMD;;AACD;AACE,aAAO,IAAP;AAzCJ;AA2CD;;AACDlB,oBAAoB,CAACqB,SAArB,GAAiC;AAC/BpB,EAAAA,OAAO,EAAEqB,sBAAUC,KAAV,CAAgB;AACvBtB,IAAAA,OAAO,EAAEqB,sBAAUE,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH4B;AAI/BvB,EAAAA,aAAa,EAAEoB,sBAAUE,MAAV,CAAiBC,UAJD;AAK/BtB,EAAAA,SAAS,EAAEmB,sBAAUE,MAAV,CAAiBC,UALG;AAM/BrB,EAAAA,SAAS,EAAEkB,sBAAUE,MAAV,CAAiBC,UANG;AAO/BpB,EAAAA,0BAA0B,EAAEiB,sBAAUI;AAPP,CAAjC;AASA1B,oBAAoB,CAAC2B,YAArB,GAAoC;AAClCtB,EAAAA,0BAA0B,EAAEuB;AADM,CAApC;;AAGA5B,oBAAoB,CAAC6B,aAArB,GAAqC;AAAA,MAAG5B,OAAH,SAAGA,OAAH;AAAA,SACnCA,OAAO,KAAKK,oCAAwBC,WAApC,IACAN,OAAO,KAAKK,oCAAwBE,wBADpC,IAEAP,OAAO,KAAKK,oCAAwBU,iBAFpC,IAGAf,OAAO,KAAKK,oCAAwBG,yBAHpC,IAIAR,OAAO,KAAKK,oCAAwBW,kBAJpC,IAKAhB,OAAO,KAAKK,oCAAwBI,4BALpC,IAMAT,OAAO,KAAKK,oCAAwBK,sBAPD;AAAA,CAArC;;eASeX,oB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport callingSettingsMessages from 'ringcentral-integration/modules/CallingSettings/callingSettingsMessages';\nimport {\n  getJupiterAppName,\n  getSoftphoneAppName,\n} from '../../CallingSettingsPanel';\nimport FormattedMessage from '../../FormattedMessage';\n\nimport i18n from './i18n';\n\nfunction CallingSettingsAlert({\n  message: { message },\n  currentLocale,\n  brandCode,\n  brandName,\n  onCallingSettingsLinkClick,\n}) {\n  switch (message) {\n    case callingSettingsMessages.saveSuccess:\n    case callingSettingsMessages.saveSuccessWithSoftphone:\n    case callingSettingsMessages.webphonePermissionRemoved:\n    case callingSettingsMessages.emergencyCallingNotAvailable:\n    case callingSettingsMessages.saveSuccessWithJupiter: {\n      let appName = brandName;\n      if (message === callingSettingsMessages.saveSuccessWithJupiter) {\n        appName = getJupiterAppName(brandCode, brandName, currentLocale);\n      } else if (message === callingSettingsMessages.saveSuccessWithSoftphone) {\n        appName = getSoftphoneAppName(brandCode, brandName, currentLocale);\n      }\n      return (\n        <FormattedMessage\n          message={i18n.getString(message)}\n          values={{ brand: appName }}\n        />\n      );\n    }\n    case callingSettingsMessages.permissionChanged:\n    case callingSettingsMessages.phoneNumberChanged: {\n      const link = onCallingSettingsLinkClick ? (\n        <a\n          onClick={(e) => {\n            e.preventDefault();\n            onCallingSettingsLinkClick();\n          }}\n        >\n          {i18n.getString('link', currentLocale)}\n        </a>\n      ) : (\n        i18n.getString('link', currentLocale)\n      );\n      return (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ link }}\n        />\n      );\n    }\n    default:\n      return null;\n  }\n}\nCallingSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  brandCode: PropTypes.string.isRequired,\n  brandName: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func,\n};\nCallingSettingsAlert.defaultProps = {\n  onCallingSettingsLinkClick: undefined,\n};\nCallingSettingsAlert.handleMessage = ({ message }) =>\n  message === callingSettingsMessages.saveSuccess ||\n  message === callingSettingsMessages.saveSuccessWithSoftphone ||\n  message === callingSettingsMessages.permissionChanged ||\n  message === callingSettingsMessages.webphonePermissionRemoved ||\n  message === callingSettingsMessages.phoneNumberChanged ||\n  message === callingSettingsMessages.emergencyCallingNotAvailable ||\n  message === callingSettingsMessages.saveSuccessWithJupiter;\n\nexport default CallingSettingsAlert;\n"],"file":"index.js"}