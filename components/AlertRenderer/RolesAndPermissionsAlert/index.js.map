{"version":3,"sources":["components/AlertRenderer/RolesAndPermissionsAlert/index.js"],"names":["RolesAndPermissionsAlert","message","currentLocale","brand","application","msg","permissionsMessages","invalidTier","i18n","getString","propTypes","PropTypes","shape","string","isRequired","defaultProps","undefined","handleMessage","insufficientPrivilege"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,wBAAT,OAKZ;AAAA,MAJUC,OAIV,QAJDA,OAIC,CAJUA,OAIV;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAIC,GAAJ;;AACA,UAAQJ,OAAR;AACE,SAAKK,yCAAoBC,WAAzB;AACEF,MAAAA,GAAG,gBACD,gCAAC,4BAAD;AACE,QAAA,OAAO,EAAEG,iBAAKC,SAAL,CAAeR,OAAf,EAAwBC,aAAxB,CADX;AAEE,QAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,WAAW,EAAXA;AAAT;AAFV,QADF;AAMA;;AACF;AACEC,MAAAA,GAAG,GAAGG,iBAAKC,SAAL,CAAeR,OAAf,EAAwBC,aAAxB,CAAN;AACA;AAXJ;;AAaA,sBAAO,6CAAMG,GAAN,CAAP;AACD;;AACDL,wBAAwB,CAACU,SAAzB,GAAqC;AACnCT,EAAAA,OAAO,EAAEU,sBAAUC,KAAV,CAAgB;AACvBX,IAAAA,OAAO,EAAEU,sBAAUE,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAHgC;AAInCX,EAAAA,KAAK,EAAEQ,sBAAUE,MAAV,CAAiBC,UAJW;AAKnCV,EAAAA,WAAW,EAAEO,sBAAUE,MALY;AAMnCX,EAAAA,aAAa,EAAES,sBAAUE,MAAV,CAAiBC;AANG,CAArC;AASAd,wBAAwB,CAACe,YAAzB,GAAwC;AACtCX,EAAAA,WAAW,EAAEY;AADyB,CAAxC;;AAIAhB,wBAAwB,CAACiB,aAAzB,GAAyC;AAAA,MAAGhB,OAAH,SAAGA,OAAH;AAAA,SACvCA,OAAO,KAAKK,yCAAoBC,WAAhC,IACAN,OAAO,KAAKK,yCAAoBY,qBAFO;AAAA,CAAzC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { permissionsMessages } from '@ringcentral-integration/commons/enums/permissionsMessages';\nimport FormattedMessage from '../../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function RolesAndPermissionsAlert({\n  message: { message },\n  currentLocale,\n  brand,\n  application,\n}) {\n  let msg;\n  switch (message) {\n    case permissionsMessages.invalidTier:\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ brand, application }}\n        />\n      );\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return <div>{msg}</div>;\n}\nRolesAndPermissionsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  brand: PropTypes.string.isRequired,\n  application: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nRolesAndPermissionsAlert.defaultProps = {\n  application: undefined,\n};\n\nRolesAndPermissionsAlert.handleMessage = ({ message }) =>\n  message === permissionsMessages.invalidTier ||\n  message === permissionsMessages.insufficientPrivilege;\n"],"file":"index.js"}