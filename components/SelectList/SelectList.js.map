{"version":3,"sources":["components/SelectList/SelectList.tsx"],"names":["SelectListBasicWithScrollCheck","SelectListBasic","SelectList","props","field","appName","children","disabled","otherTitle","matchedTitle","currentLocale","associatedTitle","sourceValue","value","backHeaderClassName","foundFromServerTitle","showFoundFromServer","onChange","valueFunction","renderFunction","startAdornment","onSelectViewVisible","open","setOpen","showSearchFromServerHint","setShowSearchFromServerHint","renderListView","data","type","filter","scrollCheck","document","activeElement","blur","elm","styles","e","preventDefault","stopPropagation","i18n","getString","defaultProps","options","otherOptions","associatedOptions","showAssociatedSection","placeholder","rightIcon","contactSearch","foundFromServerEntities"],"mappings":"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","sourcesContent":["import formatMessage from 'format-message';\nimport React, { FunctionComponent, useEffect, useState } from 'react';\n\nimport { SelectListBasic, SelectListBasicProps } from '../SelectListBasic';\nimport i18n from './i18n';\nimport { ListView, ListViewProps } from './ListView';\nimport styles from './styles.scss';\nimport { WithScrollCheck } from './WithScrollCheck';\n\nconst SelectListBasicWithScrollCheck: FunctionComponent<SelectListBasicProps> = WithScrollCheck(\n  SelectListBasic,\n);\n\nexport { SelectListBasicWithScrollCheck };\n\nexport type SelectListProps = {\n  title: string;\n  otherOptions?: object[];\n  associatedOptions?: object[];\n  showAssociatedSection?: boolean;\n  placeholder?: string;\n  searchOption: (...args: any[]) => any;\n  disabled?: boolean;\n  field?: string;\n  value?: any;\n  rightIcon?: JSX.Element;\n  onSelectViewVisible?: (...args: any[]) => any;\n  currentLocale: string;\n  matchedTitle?: string;\n  otherTitle?: string;\n  associatedTitle?: string;\n  backHeaderClassName?: string;\n  contactSearch?: (...args: any[]) => any;\n  appName?: string;\n} & Pick<\n  ListViewProps,\n  'options' | 'valueFunction' | 'renderFunction' | 'startAdornment' | 'onChange'\n> &\n  Pick<\n    SelectListBasicProps,\n    'foundFromServerEntities' | 'foundFromServerTitle' | 'showFoundFromServer'\n  >;\n\nexport const SelectList: FunctionComponent<SelectListProps> = (props) => {\n  const {\n    field,\n    appName,\n    children,\n    disabled,\n    otherTitle,\n    matchedTitle,\n    currentLocale,\n    associatedTitle,\n    value: sourceValue,\n    backHeaderClassName,\n    foundFromServerTitle,\n    showFoundFromServer,\n    onChange,\n    valueFunction,\n    renderFunction,\n    startAdornment,\n    onSelectViewVisible,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [showSearchFromServerHint, setShowSearchFromServerHint] = useState(\n    true,\n  );\n  useEffect(() => {\n    onSelectViewVisible(open, field);\n  }, [field, onSelectViewVisible, open]);\n  const renderListView = (data, type, filter, scrollCheck) => (\n    <ListView\n      filter={filter}\n      options={data}\n      value={sourceValue}\n      onChange={(value) => {\n        if (document.activeElement) {\n          (document.activeElement as HTMLInputElement).blur();\n        }\n        onChange(value);\n      }}\n      renderFunction={renderFunction}\n      valueFunction={valueFunction}\n      onSelect={(elm) => scrollCheck(elm, type)}\n      startAdornment={startAdornment}\n    />\n  );\n  return (\n    <div\n      className={disabled ? styles.disabled : null}\n      data-sign=\"select-list-panel\"\n    >\n      <div\n        className={styles.field}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (disabled) {\n            return;\n          }\n          setOpen(true);\n          if (showFoundFromServer) {\n            setShowSearchFromServerHint(true);\n          }\n        }}\n      >\n        {children}\n      </div>\n      <SelectListBasicWithScrollCheck\n        {...props}\n        matchedTitle={matchedTitle || i18n.getString('matched', currentLocale)}\n        otherTitle={otherTitle || i18n.getString('other', currentLocale)}\n        associatedTitle={\n          associatedTitle || i18n.getString('associated', currentLocale)\n        }\n        foundFromServerTitle={\n          foundFromServerTitle ||\n          formatMessage(i18n.getString('foundFromServer', currentLocale), {\n            appName,\n          })\n        }\n        renderListView={renderListView}\n        open={open}\n        setOpen={setOpen}\n        backHeaderClassName={backHeaderClassName}\n        showSearchFromServerHint={showSearchFromServerHint}\n        setShowSearchFromServerHint={setShowSearchFromServerHint}\n      />\n    </div>\n  );\n};\nSelectList.defaultProps = {\n  options: [],\n  otherOptions: [],\n  associatedOptions: [],\n  showAssociatedSection: false,\n  placeholder: '',\n  disabled: false,\n  matchedTitle: '',\n  otherTitle: '',\n  associatedTitle: '',\n  field: '',\n  value: {},\n  rightIcon: null,\n  onChange() {},\n  startAdornment() {},\n  onSelectViewVisible() {},\n  backHeaderClassName: null,\n  contactSearch: null,\n  appName: null,\n  showFoundFromServer: false,\n  foundFromServerTitle: null,\n  foundFromServerEntities: [],\n};\n"],"file":"SelectList.js"}