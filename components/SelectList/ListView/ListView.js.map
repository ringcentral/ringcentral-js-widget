{"version":3,"sources":["components/SelectList/ListView/ListView.js"],"names":["ListView","options","nonShow","startAdornment","props","length","map","option","i","propTypes","PropTypes","arrayOf","object","node","value","any","isRequired","onChange","func","valueFunction","filter","string","renderFunction","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAKlB;AAAA,0BAJJC,OAII;AAAA,MAJJA,OAII,6BAJM,EAIN;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADDC,KACC;;AACJ,MAAIF,OAAO,IAAID,OAAO,CAACI,MAAR,KAAmB,CAAlC,EAAqC;AACnC,WAAOH,OAAP;AACD;;AAED,SACE,gCAAC,YAAD,QACGD,OAAO,CAACK,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT;AAAA,WACX,gCAAC,0BAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAEA,CAFT;AAGE,MAAA,MAAM,EAAED,MAHV;AAIE,MAAA,cAAc,EAAEJ;AAJlB,OAKMC,KALN,EADW;AAAA,GAAZ,CADH,CADF;AAaD,CAvBM;;;AAyBPJ,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,OAAO,EAAES,sBAAUC,OAAV,CAAkBD,sBAAUE,MAA5B,CADU;AAEnBV,EAAAA,OAAO,EAAEQ,sBAAUG,IAFA;AAGnBC,EAAAA,KAAK,EAAEJ,sBAAUK,GAAV,CAAcC,UAHF;AAInBC,EAAAA,QAAQ,EAAEP,sBAAUQ,IAJD;AAKnBC,EAAAA,aAAa,EAAET,sBAAUQ,IAAV,CAAeF,UALX;AAMnBI,EAAAA,MAAM,EAAEV,sBAAUW,MANC;AAOnBC,EAAAA,cAAc,EAAEZ,sBAAUQ,IAAV,CAAeF,UAPZ;AAQnBb,EAAAA,cAAc,EAAEO,sBAAUQ;AARP,CAArB;AAWAlB,QAAQ,CAACuB,YAAT,GAAwB;AACtBtB,EAAAA,OAAO,EAAE,EADa;AAEtBC,EAAAA,OAAO,EAAE,IAFa;AAGtBkB,EAAAA,MAAM,EAAE,IAHc;AAItBH,EAAAA,QAJsB,sBAIX,CAAE,CAJS;AAKtBd,EAAAA,cALsB,4BAKL,CAAE;AALG,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport { RcList } from '@ringcentral-integration/rcui';\nimport React from 'react';\n\nimport { ListViewItem } from './ListViewItem';\n\nexport const ListView = ({\n  options = [],\n  nonShow,\n  startAdornment,\n  ...props\n}) => {\n  if (nonShow && options.length === 0) {\n    return nonShow;\n  }\n\n  return (\n    <RcList>\n      {options.map((option, i) => (\n        <ListViewItem\n          key={i}\n          index={i}\n          option={option}\n          startAdornment={startAdornment}\n          {...props}\n        />\n      ))}\n    </RcList>\n  );\n};\n\nListView.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  nonShow: PropTypes.node,\n  value: PropTypes.any.isRequired,\n  onChange: PropTypes.func,\n  valueFunction: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n  renderFunction: PropTypes.func.isRequired,\n  startAdornment: PropTypes.func,\n};\n\nListView.defaultProps = {\n  options: [],\n  nonShow: null,\n  filter: null,\n  onChange() {},\n  startAdornment() {},\n};\n"],"file":"ListView.js"}