{"version":3,"sources":["components/SelectList/ListView/ListViewItem/ListViewItem.js"],"names":["ListViewItem","renderFunction","startAdornment","filter","valueFunction","value","option","onChange","index","onSelect","selectElm","currentValue","thisValue","isSelected","type","current","getFilterResult","text","i","toLowerCase","indexOf","substring","background","length","styles","listItem","propTypes","PropTypes","object","any","isRequired","number","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { RcListItem, RcListItemText } from '@ringcentral-integration/rcui';\n\nimport styles from './styles.scss';\n\nexport function ListViewItem({\n  renderFunction,\n  startAdornment,\n  filter,\n  valueFunction,\n  value,\n  option,\n  onChange,\n  index,\n  onSelect,\n}) {\n  const selectElm = useRef();\n  const currentValue = valueFunction(value);\n  const thisValue = valueFunction(option);\n\n  const isSelected = thisValue === currentValue;\n\n  const { type } = option;\n\n  useEffect(() => {\n    if (isSelected) {\n      onSelect(selectElm.current);\n    }\n  }, []);\n\n  const getFilterResult = (option) => {\n    const text = renderFunction(option);\n    if (filter && typeof text === 'string') {\n      const i = text.toLowerCase().indexOf(filter.toLowerCase());\n      return (\n        <>\n          <span>{text.substring(0, i)}</span>\n          <span style={{ background: '#ffdfb1' }}>\n            {text.substring(i, i + filter.length)}\n          </span>\n          <span>{text.substring(i + filter.length)}</span>\n        </>\n      );\n    }\n    return text;\n  };\n\n  return (\n    <div ref={selectElm}>\n      <RcListItem\n        button\n        size=\"small\"\n        singleLine\n        onClick={() => onChange(isSelected ? {} : option)}\n        data-sign={`match${index}`}\n        className={classnames(styles.listItem)}\n        selected={isSelected}\n      >\n        {startAdornment && startAdornment(type)}\n        <RcListItemText primary={getFilterResult(option)} />\n      </RcListItem>\n    </div>\n  );\n}\n\nListViewItem.propTypes = {\n  option: PropTypes.object,\n  value: PropTypes.any.isRequired,\n  index: PropTypes.number.isRequired,\n  onChange: PropTypes.func,\n  valueFunction: PropTypes.func.isRequired,\n  startAdornment: PropTypes.func,\n  filter: PropTypes.string,\n  renderFunction: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nListViewItem.defaultProps = {\n  option: {},\n  filter: null,\n  onChange() {},\n  startAdornment() {},\n};\n"],"file":"ListViewItem.js"}