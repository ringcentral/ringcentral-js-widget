{"version":3,"sources":["components/InfoFieldWithAction/InfoFieldWithAction.tsx"],"names":["StyledInfo","breakSpace","fullSize","StyledContainer","InfoFieldWithAction","label","value","name","tooltip","btn","children","labelVariant","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,UAAU,GAAG,kBAGjB,SAHiB,CAAH,oBAKV,sBAAW,OAAX,CALU,EAMG;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,SACbA,UAAU,GAAG,cAAH,GAAoB,QADjB;AAAA,CANH,EAUV;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,SAAmBA,QAAQ,qBAAqB,EAAhD;AAAA,CAVU,EAWA,mBAAQ,CAAR,CAXA,CAAhB;AAeA,IAAMC,eAAe,GAAG,kBAAO,SAAP,CAAH,oBAArB;AAWO,IAAMC,mBAAiE,gBAAG,iBAC/E,iBAUM;AAAA,MATJC,KASI,SATJA,KASI;AAAA,MARJC,KAQI,SARJA,KAQI;AAAA,MAPJC,IAOI,SAPJA,IAOI;AAAA,MANJC,OAMI,SANJA,OAMI;AAAA,MALJC,GAKI,SALJA,GAKI;AAAA,MAJJC,QAII,SAJJA,QAII;AAAA,MAHJR,QAGI,SAHJA,QAGI;AAAA,MAFJD,UAEI,SAFJA,UAEI;AAAA,MADJU,YACI,SADJA,YACI;AACJ,sBACE,gCAAC,sCAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,OAAO,EAAEE,IAFX;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,YAAY,EAAEG;AAJhB,kBAME,gCAAC,eAAD,qBACE,gCAAC,UAAD;AACE,2BAAcJ,IAAd,UADF;AAEE,IAAA,QAAQ,EAAEL,QAFZ;AAGE,IAAA,UAAU,EAAED;AAHd,KAKGK,KALH,CADF,EAQGG,GARH,EASGC,QATH,CANF,CADF;AAoBD,CAhC8E,CAA1E;;AAmCPN,mBAAmB,CAACQ,YAApB,GAAmC;AACjCH,EAAAA,GAAG,EAAE,IAD4B;AAEjCP,EAAAA,QAAQ,EAAE,IAFuB;AAGjCD,EAAAA,UAAU,EAAE;AAHqB,CAAnC","sourcesContent":["import React, { FunctionComponent, memo, PropsWithChildren } from 'react';\n// eslint-disable-next-line import/no-unresolved\nimport { styled, typography, spacing } from '@ringcentral/juno';\nimport { FormFieldContainer } from '../FormFieldContainer';\nimport { IInfoFieldWithActionProps } from './interface';\n\nconst StyledInfo = styled<\n  PropsWithChildren<{ fullSize?: boolean; breakSpace?: boolean }>,\n  'section'\n>('section')`\n  & {\n    ${typography('body1')};\n    white-space: ${({ breakSpace }) =>\n      breakSpace ? 'break-spaces' : 'nowrap'};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    ${({ fullSize }) => (fullSize ? `flex-grow: 1;` : '')};\n    margin: 0 ${spacing(2)} 0 0;\n  }\n`;\n\nconst StyledContainer = styled('section')`\n  & {\n    display: flex;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    max-width: 100%;\n    justify-content: flex-start;\n    align-items: center;\n  }\n`;\n\nexport const InfoFieldWithAction: FunctionComponent<IInfoFieldWithActionProps> = memo(\n  ({\n    label,\n    value,\n    name,\n    tooltip,\n    btn,\n    children,\n    fullSize,\n    breakSpace,\n    labelVariant,\n  }) => {\n    return (\n      <FormFieldContainer\n        label={label}\n        htmlFor={name}\n        tooltip={tooltip}\n        labelVariant={labelVariant}\n      >\n        <StyledContainer>\n          <StyledInfo\n            data-sign={`${name}Field`}\n            fullSize={fullSize}\n            breakSpace={breakSpace}\n          >\n            {value}\n          </StyledInfo>\n          {btn}\n          {children}\n        </StyledContainer>\n      </FormFieldContainer>\n    );\n  },\n);\n\nInfoFieldWithAction.defaultProps = {\n  btn: null,\n  fullSize: true,\n  breakSpace: false,\n};\n"],"file":"InfoFieldWithAction.js"}