{"version":3,"sources":["components/CallHistoryPanel/CallHistoryActions/MenuButton.tsx"],"names":["MenuButton","icon","label","disabled","subMenu","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","renderMenuItem","action","menuIcon","map","styles","menu","Boolean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AASA;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,UAA8C,gBAAG,iBAC5D,gBAAwC;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACN,qBAAS,IAAT,CADM;AAAA;AAAA,MAC/BC,QAD+B;AAAA,MACrBC,WADqB;;AAGtC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgB;AAClCF,IAAAA,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,QAMA;AAAA,QALrBV,IAKqB,SALrBA,IAKqB;AAAA,QAJrBC,KAIqB,SAJrBA,KAIqB;AAAA,QAHrBC,QAGqB,SAHrBA,QAGqB;AAAA,QAFrBS,MAEqB,SAFrBA,MAEqB;AAAA,QADrBR,OACqB,SADrBA,OACqB;;AACrB,QAAMS,QAAQ,GAAGZ,IAAI,iBAAI,gCAAC,YAAD;AAAQ,MAAA,MAAM,EAAEA,IAAhB;AAAsB,MAAA,IAAI,EAAC;AAA3B,MAAzB;;AAEA,QAAIW,MAAJ,EAAY;AACV,0BACE,gCAAC,gBAAD;AACE,QAAA,OAAO,EAAEA,MADX;AAEE,QAAA,IAAI,EAAEC,QAFR;AAGE,QAAA,GAAG,EAAEX,KAHP;AAIE,QAAA,QAAQ,EAAEC;AAJZ,SAMGD,KANH,CADF;AAUD;;AAED,QAAIE,OAAJ,EAAa;AACX,0BACE,gCAAC,eAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,SAAS,EAAEW,QAFb;AAGE,QAAA,GAAG,EAAEX,KAHP;AAIE,QAAA,QAAQ,EAAEC;AAJZ,SAMGC,OAAO,CAACU,GAAR,CAAYH,cAAZ,CANH,CADF;AAUD;AACF,GAlCD;;AAoCA,sBACE;AAAK,IAAA,SAAS,EAAEI,mBAAOC;AAAvB,kBACE,gCAAC,kBAAD;AACE,IAAA,OAAO,EAAET,WADX;AAEE,IAAA,MAAM,EAAEN,IAFV;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,QAAQ,EAAEC;AANZ,IADF,eASE,gCAAC,YAAD;AACE,IAAA,QAAQ,EAAEE,QADZ;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAEY,OAAO,CAACZ,QAAD,CAJf;AAKE,IAAA,OAAO,EAAEK;AALX,KAOGN,OAAO,CAACU,GAAR,CAAYH,cAAZ,CAPH,CATF,CADF;AAqBD,CArE2D,CAAvD","sourcesContent":["import React, { useState, memo, FunctionComponent } from 'react';\nimport {\n  RcIconButton,\n  RcIcon,\n  RcMenu,\n  RcMenuItem,\n  RcSubMenu,\n} from '@ringcentral/juno';\nimport { CallLogMenuItem } from 'ringcentral-integration/interfaces/CallLog.interface';\n\nimport styles from './styles.scss';\n\nexport const MenuButton: FunctionComponent<CallLogMenuItem> = memo(\n  ({ icon, label, disabled, subMenu }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event: any) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const renderMenuItem = ({\n      icon,\n      label,\n      disabled,\n      action,\n      subMenu,\n    }: CallLogMenuItem) => {\n      const menuIcon = icon && <RcIcon symbol={icon} size=\"small\" />;\n\n      if (action) {\n        return (\n          <RcMenuItem\n            onClick={action}\n            icon={menuIcon}\n            key={label}\n            disabled={disabled}\n          >\n            {label}\n          </RcMenuItem>\n        );\n      }\n\n      if (subMenu) {\n        return (\n          <RcSubMenu\n            title={label}\n            titleIcon={menuIcon}\n            key={label}\n            disabled={disabled}\n          >\n            {subMenu.map(renderMenuItem)}\n          </RcSubMenu>\n        );\n      }\n    };\n\n    return (\n      <div className={styles.menu}>\n        <RcIconButton\n          onClick={handleClick}\n          symbol={icon}\n          size=\"medium\"\n          variant=\"plain\"\n          title={label}\n          disabled={disabled}\n        />\n        <RcMenu\n          anchorEl={anchorEl}\n          keepMounted\n          autoClose\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {subMenu.map(renderMenuItem)}\n        </RcMenu>\n      </div>\n    );\n  },\n);\n"],"file":"MenuButton.js"}