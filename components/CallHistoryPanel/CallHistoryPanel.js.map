{"version":3,"sources":["components/CallHistoryPanel/CallHistoryPanel.tsx"],"names":["DATE_ITEM_HEIGHT","CALL_ITEM_HEIGHT","ROOT_NODE","id","height","isSticky","formatCallDate","timestamp","now","today","clone","startOf","yesterday","subtract","mTimestamp","isSame","format","formatCallTime","CallHistoryPanel","calls","currentLocale","tree","_tree","root","name","depth","children","forEach","call","startTime","callDate","callTime","callWithFormattedDate","includes","push","Object","keys","getChildren","node","map","childId","childNode","rowRenderer","style","styles","date","i18n","getString","callHistoryPanel","length","width","empty"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { AutoSizer } from 'react-virtualized';\nimport React, { FunctionComponent, useMemo, useCallback } from 'react';\n\nimport { CallHistoryItem } from './CallHistoryItem';\nimport { StickyVirtualizedList } from './StickyVirtualizedList';\nimport { RowRendererProps } from './StickyVirtualizedList/StickyVirtualizedList.interface';\nimport { Call, CallsTree } from './CallHistoryPanel.interface';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport type CallHistoryPanelProps = {\n  calls: Call[];\n  currentLocale: string;\n};\n\nconst DATE_ITEM_HEIGHT = 32; // ./styles.scss .date\nconst CALL_ITEM_HEIGHT = 64; // ./CallHistoryItem/styles.scss .item\n\nconst ROOT_NODE = {\n  id: 'root',\n  height: DATE_ITEM_HEIGHT,\n  isSticky: true,\n};\n\nfunction formatCallDate(timestamp: number) {\n  const now = moment();\n  const today = now.clone().startOf('day');\n  const yesterday = now.clone().subtract(1, 'days').startOf('day');\n\n  const mTimestamp = moment(timestamp);\n  if (mTimestamp.isSame(today, 'd')) {\n    return 'today';\n  }\n  if (mTimestamp.isSame(yesterday, 'd')) {\n    return 'yesterday';\n  }\n  return mTimestamp.format('MM/DD/YYYY');\n}\n\nfunction formatCallTime(timestamp: number) {\n  return moment(timestamp).format('h:mmA');\n}\n\nexport const CallHistoryPanel: FunctionComponent<CallHistoryPanelProps> = ({\n  calls,\n  currentLocale,\n}) => {\n  const tree = useMemo(() => {\n    const _tree: CallsTree = {\n      root: {\n        name: 'root',\n        depth: 0,\n        children: [],\n      },\n    };\n\n    calls.forEach((call: Call) => {\n      const { id, startTime } = call;\n\n      const callDate = formatCallDate(startTime);\n      const callTime = formatCallTime(startTime);\n      const callWithFormattedDate = {\n        ...call,\n        callDate,\n        callTime,\n      };\n\n      if (!_tree.root.children.includes(callDate)) {\n        _tree.root.children.push(callDate);\n      }\n\n      if (!Object.keys(_tree).includes(callDate)) {\n        _tree[callDate] = {\n          name: callDate,\n          children: [id],\n          depth: 1,\n        };\n      } else {\n        _tree[callDate].children.push(id);\n      }\n\n      _tree[id] = {\n        name: id,\n        depth: 2,\n        call: callWithFormattedDate,\n      };\n    });\n\n    return _tree;\n  }, [calls]);\n\n  const getChildren = useCallback(\n    (id: string) => {\n      const node = tree[id];\n      if (node.children) {\n        return node.children.map((childId: string) => {\n          const childNode = tree[childId];\n\n          let height = CALL_ITEM_HEIGHT;\n          if (childNode.depth === 1) {\n            height = DATE_ITEM_HEIGHT;\n          }\n\n          return {\n            id: childId,\n            height,\n            isSticky: childNode.depth === 1,\n          };\n        });\n      }\n    },\n    [tree],\n  );\n\n  const rowRenderer = useCallback(\n    ({ id, style }: RowRendererProps) => {\n      const node = tree[id];\n\n      if (node.children) {\n        return (\n          <div className={styles.date} style={style} key={node.name}>\n            {i18n.getString(node.name, currentLocale)}\n          </div>\n        );\n      }\n      return (\n        <div style={style} key={node.call.id}>\n          <CallHistoryItem call={node.call} />\n        </div>\n      );\n    },\n    [tree, currentLocale],\n  );\n\n  return (\n    <div className={styles.callHistoryPanel}>\n      {tree.root.children.length ? (\n        <AutoSizer>\n          {({ width, height }) => (\n            <StickyVirtualizedList\n              root={ROOT_NODE}\n              getChildren={getChildren}\n              rowRenderer={rowRenderer}\n              defaultRowHeight={64}\n              width={width}\n              height={height}\n            />\n          )}\n        </AutoSizer>\n      ) : (\n        <div className={styles.empty}>\n          {i18n.getString('empty', currentLocale)}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"file":"CallHistoryPanel.js"}