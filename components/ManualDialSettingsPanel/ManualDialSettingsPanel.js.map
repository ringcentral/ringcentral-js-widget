{"version":3,"sources":["components/ManualDialSettingsPanel/ManualDialSettingsPanel.tsx"],"names":["ManualDialSettingsPanel","currentLocale","goBack","init","settingFields","save","i18n","getString","styles","container","map","key","select","input","dataSign","onChange","onBlur","value","renderValue","required","options","searchOption","label","transferPhoneBook","scrollCheck","toggleOpen","obj","i","thisValue","getItemValue","listItem","itemRenderer","min","max","type","placeholder","e","target","endAdornment","ManualDialSettingsPanelI18n","footer"],"mappings":"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","sourcesContent":["import { RcButton, RcTextField } from '@ringcentral/juno';\nimport React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n  EvManualDialSettingsUIFunctions,\n  EvManualDialSettingsUIProps,\n} from '../../interfaces/EvManualDialSettingsUI.interface';\nimport i18n from '../../modules/EvManualDialSettingsUI/i18n';\nimport { ListItemWithScrollCheck } from '../ListItemWithScrollCheck';\nimport { SearchSelectField } from '../SearchSelectField';\nimport ManualDialSettingsPanelI18n from './i18n';\nimport styles from './styles.scss';\nimport { BackHeader } from '../SelectList';\n\nexport type ManualDialSettingsPanelProps = EvManualDialSettingsUIProps &\n  EvManualDialSettingsUIFunctions;\n\nexport const ManualDialSettingsPanel: FunctionComponent<ManualDialSettingsPanelProps> = ({\n  currentLocale,\n  goBack,\n  init,\n  settingFields,\n  save,\n}) => {\n  useEffect(() => {\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <BackHeader\n        currentLocale={currentLocale}\n        title={i18n.getString('manualDialSettings', currentLocale)}\n        onBackClick={goBack}\n      />\n      <div className={styles.container}>\n        {settingFields.map(\n          ({ select, input, dataSign, onChange, onBlur, value }, key) => {\n            if (select) {\n              return (\n                <SearchSelectField\n                  input\n                  key={key}\n                  InputProps={{\n                    value: select.renderValue,\n                    required: select.required,\n                  }}\n                  options={select.options}\n                  currentLocale={currentLocale}\n                  searchOption={select.searchOption}\n                  title={select.label}\n                  listRenderer={(\n                    transferPhoneBook,\n                    scrollCheck,\n                    toggleOpen,\n                  ) => {\n                    return (\n                      <>\n                        {transferPhoneBook.map((obj, i) => {\n                          const thisValue = select.getItemValue(obj);\n                          return (\n                            <ListItemWithScrollCheck\n                              onClick={() => {\n                                onChange(thisValue);\n                                toggleOpen();\n                              }}\n                              key={i}\n                              selected={thisValue === value}\n                              scrollCheck={scrollCheck}\n                              className={styles.listItem}\n                              data-sign={`${dataSign}-${thisValue}`}\n                            >\n                              {select.itemRenderer(obj)}\n                            </ListItemWithScrollCheck>\n                          );\n                        })}\n                      </>\n                    );\n                  }}\n                />\n              );\n            }\n            if (input) {\n              return (\n                <RcTextField\n                  key={key}\n                  label={input.label}\n                  inputProps={{\n                    min: input.min,\n                    max: 120,\n                  }}\n                  clearBtn={false}\n                  type={input.type}\n                  required={input.required}\n                  placeholder={input.placeholder}\n                  value={value}\n                  data-sign={dataSign}\n                  onBlur={() => onBlur()}\n                  onChange={(e) => onChange(e.target.value)}\n                  fullWidth\n                  InputProps={{\n                    endAdornment: (\n                      <span>\n                        {ManualDialSettingsPanelI18n.getString(\n                          'second',\n                          currentLocale,\n                        )}\n                      </span>\n                    ),\n                  }}\n                />\n              );\n            }\n            return null;\n          },\n        )}\n      </div>\n      <div className={styles.footer}>\n        <RcButton\n          data-sign=\"saveButton\"\n          size=\"medium\"\n          fullWidth\n          onClick={() => save()}\n        >\n          {ManualDialSettingsPanelI18n.getString('save', currentLocale)}\n        </RcButton>\n      </div>\n    </>\n  );\n};\n"],"file":"ManualDialSettingsPanel.js"}