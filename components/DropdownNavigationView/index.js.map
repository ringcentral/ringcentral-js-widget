{"version":3,"sources":["components/DropdownNavigationView/index.js"],"names":["DropdownNavigationView","props","removeChildNavBar","bind","removeListener","el","setTimeout","childNavigationElement","addListener","window","addEventListener","removeEventListener","ev","target","contains","goTo","virtualPath","tabs","currentPath","currentVirtualPath","length","styles","root","setChildNavigationElement","map","tab","index","Icon","icon","ActiveIcon","activeIcon","active","isActive","path","isReverseFillIcon","Component","propTypes","NavigationBar","isRequired","PropTypes","func","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigationBar from '../NavigationBar';\nimport DropdownNavigationItem from '../DropdownNavigationItem';\nimport styles from './styles.scss';\n\nexport default class DropdownNavigationView extends Component {\n  constructor(props) {\n    super(props);\n    this.removeChildNavBar = this.removeChildNavBar.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  setChildNavigationElement(el) {\n    setTimeout(() => {\n      this.childNavigationElement = el;\n      if (this.childNavigationElement) {\n        this.addListener();\n      } else {\n        this.removeListener();\n      }\n    }, 0);\n  }\n\n  addListener() {\n    window.addEventListener('click', this.removeChildNavBar);\n  }\n\n  removeListener() {\n    window.removeEventListener('click', this.removeChildNavBar);\n  }\n\n  removeChildNavBar(ev) {\n    if (\n      !this.childNavigationElement ||\n      this.childNavigationElement === ev.target ||\n      this.childNavigationElement.contains(ev.target)\n    ) {\n      return;\n    }\n    this.removeListener();\n    this.props.goTo({\n      virtualPath: '',\n    });\n  }\n\n  render() {\n    const { tabs, goTo, currentPath, currentVirtualPath } = this.props;\n\n    return tabs.length ? (\n      <div\n        className={styles.root}\n        ref={(el) => {\n          this.setChildNavigationElement(el);\n        }}\n      >\n        {tabs.map((tab, index) => {\n          const Icon = tab.icon;\n          const ActiveIcon = tab.activeIcon;\n          const active =\n            (tab.isActive && tab.isActive(currentPath, currentVirtualPath)) ||\n            (tab.path && tab.path === currentPath) ||\n            (tab.virtualPath && tab.virtualPath === currentVirtualPath);\n          const isReverseFillIcon = tab.path === '/contacts' && !active;\n          return (\n            <DropdownNavigationItem\n              {...tab}\n              key={index}\n              onClick={() => {\n                goTo(tab);\n              }}\n              active={active}\n              icon={typeof Icon === 'function' ? <Icon /> : Icon}\n              isReverseFillIcon={isReverseFillIcon}\n              activeIcon={\n                typeof ActiveIcon === 'function' ? <ActiveIcon /> : ActiveIcon\n              }\n            />\n          );\n        })}\n      </div>\n    ) : null;\n  }\n}\n\nDropdownNavigationView.propTypes = {\n  tabs: NavigationBar.propTypes.tabs.isRequired,\n  goTo: PropTypes.func.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  currentVirtualPath: PropTypes.string,\n};\n\nDropdownNavigationView.defaultProps = {\n  currentVirtualPath: undefined,\n};\n"],"file":"index.js"}