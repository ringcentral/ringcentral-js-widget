{"version":3,"sources":["components/CallLogPanel/CallLogPanel.tsx"],"names":["CallLogPanel","pushLogPageStatus","props","currentLog","renderEditLogSection","showSpinner","styles","spinner","renderLogNotification","renderLogBasicInfo","editSection","getEditLogSection","genCallControlButtons","classes","callLogCallControl","renderCallLogCallControl","isWide","showSmallCallControl","call","telephonyStatus","result","telephonySessionId","status","isActive","callControlRoot","currentLocale","onSaveCallLog","onUpdateCallLog","additionalInfo","subjectDropdownsTracker","formatPhone","dateTimeFormatter","renderBasicInfo","renderSaveLogButton","loading","logNotification","onCloseNotification","onSaveNotification","onExpandNotification","onDiscardNotification","currentNotificationIdentify","currentSession","onReject","onHangup","shrinkNotification","disableLinks","useNewNotification","showNotiLogButton","goBack","currentIdentify","root","backIcon","header","isInTransferPage","classic","genSaveLogButtonV2","i18n","getString","renderLogSection","Component","defaultProps","nameEntities","relatedToEntities","environment","defaultLocale"],"mappings":"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","sourcesContent":["/**\n * Call log enhancement\n */\nimport classnames from 'classnames';\nimport React, { Component } from 'react';\n\nimport { environment } from '../../lib';\nimport BackHeader from '../BackHeaderV2';\nimport LogBasicInfo from '../LogBasicInfoV2';\nimport NotificationSection from '../NotificationSection';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport { CallLogPanelProps } from './CallLogPanel.interface';\nimport NotificationSectionV2 from '../NotificationSectionV2';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport default class CallLogPanel extends Component<CallLogPanelProps, {}> {\n  static defaultProps: Partial<CallLogPanelProps> = {\n    currentLog: {\n      nameEntities: [],\n      relatedToEntities: [],\n    },\n    currentIdentify: '',\n    currentLocale: environment.defaultLocale,\n    classes: {},\n    // Notification\n    currentNotificationIdentify: '',\n    shrinkNotification: () => null,\n    header: true,\n    showSmallCallControl: false,\n    isInTransferPage: false,\n    showSpinner: true,\n    isWide: true,\n    showNotiLogButton: true,\n    disableLinks: false,\n    useNewNotification: false,\n  };\n\n  componentWillMount() {\n    const { pushLogPageStatus } = this.props;\n    if (pushLogPageStatus) {\n      pushLogPageStatus(true);\n    }\n  }\n\n  componentWillUnmount() {\n    const { pushLogPageStatus } = this.props;\n    if (pushLogPageStatus) {\n      pushLogPageStatus(false);\n    }\n  }\n\n  renderLogSection() {\n    const { currentLog, renderEditLogSection } = this.props;\n    if (!currentLog) return null;\n    const { showSpinner } = this.props;\n    if (currentLog.showSpinner || showSpinner) {\n      return <SpinnerOverlay className={styles.spinner} />;\n    }\n    return (\n      <React.Fragment>\n        {this.renderLogNotification()}\n        {this.renderLogBasicInfo()}\n        <div className={classnames(styles.editSection)}>\n          {renderEditLogSection && this.getEditLogSection()}\n        </div>\n        {this.genCallControlButtons()}\n      </React.Fragment>\n    );\n  }\n\n  genCallControlButtons() {\n    const {\n      currentLog,\n      classes: { callLogCallControl = null },\n      renderCallLogCallControl,\n      isWide,\n      showSmallCallControl,\n    } = this.props;\n    const { call } = currentLog;\n    const { telephonyStatus, result, telephonySessionId } = call;\n    const status = telephonyStatus || result;\n    // if `result` is exist, call has been disconnect\n    // 'showSmallCallControl || isActive' can be replaced with 'showSmallCallControl'\n    // which include showSmallCallControl permission and isActive judgement(eg: canShowSmallCallControl && isActive) on UI module in the future\n    // Then we can remove the logic from component to UI module like 'engage-voice-widget/modules/EvActivityCallUI/EvActivityCallUI'\n    const isActive = !result;\n    if (showSmallCallControl || isActive) {\n      return (\n        <div className={classnames(styles.callControlRoot, callLogCallControl)}>\n          {renderCallLogCallControl &&\n            renderCallLogCallControl(status, telephonySessionId, isWide)}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  getEditLogSection() {\n    const {\n      renderEditLogSection,\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      currentLog,\n      additionalInfo,\n      subjectDropdownsTracker,\n    } = this.props;\n    return renderEditLogSection({\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      currentLog,\n      additionalInfo,\n      subjectDropdownsTracker,\n    });\n  }\n\n  renderLogBasicInfo() {\n    const {\n      isWide,\n      currentLog,\n      currentLocale,\n      formatPhone,\n      dateTimeFormatter,\n      renderBasicInfo,\n    } = this.props;\n    if (renderBasicInfo) {\n      return renderBasicInfo({ formatPhone, dateTimeFormatter, currentLog });\n    }\n    return (\n      <LogBasicInfo\n        dataSign=\"leftSectionInfo\"\n        isWide={isWide}\n        currentLog={currentLog}\n        currentLocale={currentLocale}\n        formatPhone={formatPhone}\n        dateTimeFormatter={dateTimeFormatter}\n      />\n    );\n  }\n\n  genSaveLogButtonV2() {\n    const {\n      renderSaveLogButton,\n      currentLocale,\n      onSaveCallLog,\n      currentLog,\n      isWide,\n      showSpinner,\n    } = this.props;\n    const loading = showSpinner || (currentLog && currentLog.showSpinner);\n    return renderSaveLogButton({\n      currentLocale,\n      onSaveCallLog,\n      currentLog,\n      loading,\n      isWide,\n    });\n  }\n\n  renderLogNotification() {\n    const {\n      formatPhone,\n      currentLocale,\n      logNotification,\n      onCloseNotification,\n      onSaveNotification,\n      onExpandNotification,\n      onDiscardNotification,\n      currentNotificationIdentify,\n      currentSession,\n      onReject,\n      onHangup,\n      shrinkNotification,\n      disableLinks,\n      useNewNotification,\n      showNotiLogButton,\n    } = this.props;\n    if (!currentNotificationIdentify) {\n      return null;\n    }\n    if (useNewNotification) {\n      return (\n        <NotificationSectionV2\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          logNotification={logNotification}\n          showNotiLogButton={showNotiLogButton}\n          onCloseNotification={onCloseNotification}\n          onSaveNotification={onSaveNotification}\n          onExpandNotification={onExpandNotification}\n          onDiscardNotification={onDiscardNotification}\n          currentNotificationIdentify={currentNotificationIdentify}\n          currentSession={currentSession}\n          onReject={onReject}\n          onHangup={onHangup}\n          shrinkNotification={shrinkNotification}\n        />\n      );\n    }\n    return (\n      <NotificationSection\n        formatPhone={formatPhone}\n        currentLocale={currentLocale}\n        logNotification={logNotification}\n        showNotiLogButton={showNotiLogButton}\n        onCloseNotification={onCloseNotification}\n        onSaveNotification={onSaveNotification}\n        onExpandNotification={onExpandNotification}\n        onDiscardNotification={onDiscardNotification}\n        currentNotificationIdentify={currentNotificationIdentify}\n        currentSession={currentSession}\n        onReject={onReject}\n        onHangup={onHangup}\n        disableLinks={disableLinks}\n      />\n    );\n  }\n\n  goBack() {\n    const { goBack } = this.props;\n    goBack();\n  }\n\n  render() {\n    const {\n      currentIdentify,\n      currentLocale,\n      classes: { root },\n      backIcon,\n      header,\n      isInTransferPage,\n      isWide,\n    } = this.props;\n    if (!currentIdentify || isInTransferPage) return null;\n    // console.log(this.props.currentLog);\n    return (\n      <div\n        className={classnames(\n          styles.root,\n          !isWide ? styles.classic : null,\n          root,\n        )}\n      >\n        {header && (\n          <BackHeader\n            currentLocale={currentLocale}\n            backIcon={backIcon}\n            isWide={isWide}\n            rightIcon={this.genSaveLogButtonV2()}\n            title={i18n.getString('createCallLog', currentLocale)}\n            className={styles.header}\n            onBackClick={() => this.goBack()}\n          />\n        )}\n        {this.renderLogSection()}\n      </div>\n    );\n  }\n}\n"],"file":"CallLogPanel.js"}