{"version":3,"sources":["components/PresenceDropdown/index.js"],"names":["PresenceDropdown","props","state","showSelects","toggleShow","isReady","setState","preState","userStatus","dndStatus","currentLocale","setAvailable","setBusy","setDoNotDisturb","setInvisible","className","showDropdown","styles","root","showBackground","bk","presence","presenceBar","presenceList","presenceItem","presenceStatus","available","DndStatus","takeAllCalls","doNotAcceptAnyCalls","busy","offline","Component","propTypes","PropTypes","string","isRequired","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { presenceStatus } from 'ringcentral-integration/enums/presenceStatus.enum';\nimport DndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Line from '../Line';\nimport PresenceItem from '../PresenceItem';\nimport styles from './style.scss';\n\nexport default class PresenceDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelects: false,\n    };\n    // TODO: Consider for the bubble event of click to set status.\n    // (maybe discuss in coding dojo)\n    this.toggleShow = () => {\n      const { isReady } = this.props;\n      if (isReady) {\n        this.setState((preState) => ({\n          showSelects: !preState.showSelects,\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      userStatus,\n      dndStatus,\n      currentLocale,\n      setAvailable,\n      setBusy,\n      setDoNotDisturb,\n      setInvisible,\n      className,\n    } = this.props;\n    const { showSelects } = this.state;\n    const showDropdown = classnames(\n      styles.root,\n      showSelects ? styles.showSelects : null,\n    );\n    const showBackground = classnames(\n      styles.bk,\n      showSelects ? styles.showSelects : null,\n    );\n    return (\n      <div>\n        <div\n          className={classnames(\n            styles.presence,\n            styles[userStatus],\n            styles[dndStatus],\n            className,\n          )}\n          onClick={this.toggleShow}\n        >\n          <div className={styles.presenceBar} />\n          <div className={showDropdown}>\n            <Line className={styles.presenceList}>\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.available}\n                dndStatus={DndStatus.takeAllCalls}\n                currentLocale={currentLocale}\n                onClick={setAvailable}\n                selected={\n                  userStatus === presenceStatus.available &&\n                  dndStatus !== DndStatus.doNotAcceptAnyCalls\n                }\n              />\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.busy}\n                dndStatus={DndStatus.takeAllCalls}\n                currentLocale={currentLocale}\n                onClick={setBusy}\n                selected={\n                  userStatus === presenceStatus.busy &&\n                  dndStatus !== DndStatus.doNotAcceptAnyCalls\n                }\n              />\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.busy}\n                dndStatus={DndStatus.doNotAcceptAnyCalls}\n                currentLocale={currentLocale}\n                onClick={setDoNotDisturb}\n                selected={dndStatus === DndStatus.doNotAcceptAnyCalls}\n              />\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.offline}\n                dndStatus={DndStatus.takeAllCalls}\n                currentLocale={currentLocale}\n                onClick={setInvisible}\n                selected={\n                  userStatus === presenceStatus.offline &&\n                  dndStatus !== DndStatus.doNotAcceptAnyCalls\n                }\n              />\n            </Line>\n          </div>\n        </div>\n        <div className={showBackground} onClick={this.toggleShow} />\n      </div>\n    );\n  }\n}\n\nPresenceDropdown.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  setAvailable: PropTypes.func.isRequired,\n  setBusy: PropTypes.func.isRequired,\n  setDoNotDisturb: PropTypes.func.isRequired,\n  setInvisible: PropTypes.func.isRequired,\n  isReady: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n};\n\nPresenceDropdown.defaultProps = {\n  dndStatus: null,\n  userStatus: null,\n  className: null,\n};\n"],"file":"index.js"}