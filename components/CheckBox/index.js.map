{"version":3,"sources":["components/CheckBox/index.js"],"names":["CheckBox","data","selected","onSelect","valueField","textField","className","dataSign","type","checked","onChecked","children","props","isListObject","map","item","key","isSelected","checkStyle","styles","selectedCheckButton","onClick","extraInfo","renderExtraInfo","undefined","disabled","checkButton","text","checkboxClassName","checkbox","checkboxWrapperClassNames","checkboxWrapper","propTypes","PropTypes","string","any","array","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction CheckBox({\n  data,\n  selected,\n  onSelect,\n  valueField,\n  textField,\n  className,\n  dataSign,\n  type,\n  checked,\n  onChecked,\n  children,\n  ...props\n}) {\n  const isListObject = !!(textField && valueField);\n  switch (type) {\n    case 'radio': {\n      return (\n        <div className={className} data-sign={dataSign}>\n          {data.map((item, key) => {\n            const isSelected =\n              selected === (isListObject ? item[valueField] : item);\n            const checkStyle = isSelected ? styles.selectedCheckButton : null;\n            const onClick = () => onSelect(item);\n            const extraInfo =\n              typeof item.renderExtraInfo === 'function' && isSelected\n                ? item.renderExtraInfo({ ...props })\n                : null;\n            return (\n              <div\n                key={key}\n                data-sign={isSelected ? 'selectedItem' : undefined}\n              >\n                <div\n                  onClick={onClick}\n                  className={classnames(\n                    styles.item,\n                    item && item.disabled ? styles.disabled : null,\n                  )}\n                >\n                  <div className={classnames(styles.checkButton, checkStyle)} />\n                  <div className={styles.text} data-sign=\"text\">\n                    {isListObject ? item[textField] : item}\n                  </div>\n                </div>\n                {extraInfo}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n    case 'checkbox': {\n      const checkboxClassName = classnames(\n        styles.checkbox,\n        checked ? styles.checked : '',\n      );\n      const checkboxWrapperClassNames = classnames(\n        styles.checkboxWrapper,\n        className,\n      );\n      return (\n        <div\n          className={checkboxWrapperClassNames}\n          data-sign={dataSign}\n          onClick={() => onChecked && onChecked(!checked)}\n        >\n          <div className={checkboxClassName}>âœ“</div>\n          {children}\n        </div>\n      );\n    }\n    default:\n      break;\n  }\n}\n\nCheckBox.propTypes = {\n  valueField: PropTypes.string,\n  textField: PropTypes.string,\n  selected: PropTypes.any,\n  data: PropTypes.array,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n  dataSign: PropTypes.string,\n  type: PropTypes.string,\n  onChecked: PropTypes.func,\n  checked: PropTypes.bool,\n};\n\nCheckBox.defaultProps = {\n  textField: null,\n  valueField: null,\n  className: null,\n  dataSign: undefined,\n  type: 'radio',\n  onChecked() {},\n  onSelect() {},\n  data: [],\n  selected: null,\n  checked: false,\n};\n\nexport default CheckBox;\n"],"file":"index.js"}