{"version":3,"sources":["components/ContactDropdownListV2/index.js"],"names":["ContactDropdownListV2","ContactDropDownListV2","ref","currentLocale","className","contacts","selectedIndex","formatContactPhone","setSelectedIndex","addToRecipients","enableTitle","visibility","phoneTypeRenderer","phoneSourceNameRenderer","contactInfoRenderer","contactPhoneRenderer","listEl","scrollUp","current","scrollTop","Math","floor","max","scrollDown","min","scrollHeight","setScrollPosition","length","styles","dropdownList","map","item","index","name","entityType","phoneType","phoneNumber","propTypes","PropTypes","string","isRequired","bool","arrayOf","shape","func","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport ContactEntry from './ContactEntry';\n\nconst ContactDropdownListV2 = forwardRef(function ContactDropDownListV2(\n  {\n    currentLocale,\n    className,\n    contacts,\n    selectedIndex,\n    formatContactPhone,\n    setSelectedIndex,\n    addToRecipients,\n    enableTitle,\n    visibility,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    contactInfoRenderer,\n    contactPhoneRenderer,\n  },\n  ref,\n) {\n  const listEl = useRef(null);\n  useImperativeHandle(ref, () => ({\n    scrollUp() {\n      if (listEl.current) {\n        listEl.current.scrollTop = Math.floor(\n          Math.max(listEl.current.scrollTop - 53, 0),\n        );\n      }\n    },\n    scrollDown() {\n      if (listEl.current) {\n        listEl.current.scrollTop = Math.floor(\n          Math.min(listEl.current.scrollTop + 53, listEl.current.scrollHeight),\n        );\n      }\n    },\n    setScrollPosition(scrollTop) {\n      if (listEl.current) {\n        listEl.current.scrollTop = Math.floor(scrollTop);\n      }\n    },\n  }));\n  if (!visibility || contacts.length === 0) {\n    return null;\n  }\n  return (\n    <ul className={classnames(styles.dropdownList, className)} ref={listEl}>\n      {contacts.map((item, index) => (\n        <ContactEntry\n          currentLocale={currentLocale}\n          active={selectedIndex === index}\n          name={item.name}\n          entityType={item.entityType}\n          phoneType={item.phoneType}\n          phoneNumber={item.phoneNumber}\n          phoneTypeRenderer={phoneTypeRenderer}\n          phoneSourceNameRenderer={phoneSourceNameRenderer}\n          formatContactPhone={formatContactPhone}\n          onHover={() => setSelectedIndex(index)}\n          onClick={() => addToRecipients(item)}\n          key={`${index}${item.phoneNumber}${item.name}${item.phoneType}`}\n          enableTitle={enableTitle}\n          contactInfoRenderer={contactInfoRenderer}\n          contactPhoneRenderer={contactPhoneRenderer}\n          splitter=\"|\"\n        />\n      ))}\n    </ul>\n  );\n});\n\nContactDropdownListV2.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      entityType: PropTypes.string.isRequired,\n      phoneType: PropTypes.string.isRequired,\n      phoneNumber: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n  setSelectedIndex: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  enableTitle: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  contactInfoRenderer: PropTypes.func,\n  contactPhoneRenderer: PropTypes.func,\n};\n\nContactDropdownListV2.defaultProps = {\n  className: null,\n  enableTitle: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  contactInfoRenderer: undefined,\n  contactPhoneRenderer: undefined,\n};\n\nexport default ContactDropdownListV2;\n"],"file":"index.js"}