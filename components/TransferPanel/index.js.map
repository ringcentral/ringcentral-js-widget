{"version":3,"sources":["components/TransferPanel/index.js"],"names":["TransferPanel","props","onButtonOutput","key","setState","isLastInputFromDialpad","state","recipient","preState","value","toNumber","onTransfer","_getTransferNumber","sessionId","onToNumberChange","clearToNumber","setRecipient","clearRecipient","load","nextProps","session","onCallEnd","setActiveSessionId","phoneNumber","controlBusy","onBack","currentLocale","searchContact","searchContactList","formatPhone","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","isOnTransfer","styles","root","i18n","getString","dialInput","padContainer","dialPad","buttonRow","button","disabled","undefined","TransferIcon","PureComponent","propTypes","PropTypes","func","isRequired","string","array","bool","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport DialPad from '../DialPad';\nimport RecipientsInput from '../RecipientsInput';\nimport BackHeader from '../BackHeader';\nimport CircleButton from '../CircleButton';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class TransferPanel extends PureComponent {\n  static propTypes = {\n    setActiveSessionId: PropTypes.func,\n    onTransfer: PropTypes.func.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    onBack: PropTypes.func.isRequired,\n    onCallEnd: PropTypes.func.isRequired,\n    searchContactList: PropTypes.array,\n    searchContact: PropTypes.func.isRequired,\n    formatPhone: PropTypes.func.isRequired,\n    phoneTypeRenderer: PropTypes.func,\n    phoneSourceNameRenderer: PropTypes.func,\n    recipientsContactInfoRenderer: PropTypes.func,\n    recipientsContactPhoneRenderer: PropTypes.func,\n    autoFocus: PropTypes.bool,\n    sessionId: PropTypes.string.isRequired,\n    session: PropTypes.object,\n    controlBusy: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    setActiveSessionId: null,\n    phoneTypeRenderer: undefined,\n    phoneSourceNameRenderer: undefined,\n    recipientsContactInfoRenderer: undefined,\n    recipientsContactPhoneRenderer: undefined,\n    autoFocus: true,\n    session: null,\n    searchContactList: [],\n    controlBusy: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      toNumber: '',\n      recipient: null,\n      isLastInputFromDialpad: false,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session && !nextProps.session) {\n      this.props.onCallEnd();\n    }\n  }\n\n  load() {\n    this.props.setActiveSessionId(this.props.sessionId);\n  }\n\n  _getTransferNumber() {\n    return (\n      (this.state.recipient && this.state.recipient.phoneNumber) ||\n      this.state.toNumber\n    );\n  }\n\n  onButtonOutput = (key) => {\n    this.setState({\n      isLastInputFromDialpad: true,\n    });\n    if (this.state.recipient) {\n      return;\n    }\n    this.setState((preState) => {\n      const value = preState.toNumber + key;\n      return { toNumber: value };\n    });\n  };\n\n  onTransfer = () => {\n    this.props.onTransfer(this._getTransferNumber(), this.props.sessionId);\n  };\n\n  onToNumberChange = (toNumber) => {\n    this.setState({\n      isLastInputFromDialpad: false,\n      toNumber,\n    });\n  };\n\n  clearToNumber = () => {\n    this.setState({\n      toNumber: '',\n    });\n  };\n\n  setRecipient = (recipient) => {\n    this.setState({\n      recipient,\n      toNumber: '',\n    });\n  };\n\n  clearRecipient = () => {\n    this.setState({ recipient: null });\n  };\n\n  render() {\n    const {\n      controlBusy,\n      session,\n      onBack,\n      currentLocale,\n      searchContact,\n      searchContactList,\n      formatPhone,\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      recipientsContactInfoRenderer,\n      recipientsContactPhoneRenderer,\n      autoFocus,\n    } = this.props;\n    if (!session) {\n      return null;\n    }\n    const isOnTransfer = !!session.isOnTransfer;\n    return (\n      <div className={styles.root}>\n        <BackHeader onBackClick={onBack}>\n          {i18n.getString('transferTo', currentLocale)}\n        </BackHeader>\n        <RecipientsInput\n          className={styles.dialInput}\n          value={this.state.toNumber}\n          onChange={this.onToNumberChange}\n          onClean={this.clearToNumber}\n          recipient={this.state.recipient}\n          addToRecipients={this.setRecipient}\n          removeFromRecipients={this.clearRecipient}\n          searchContact={searchContact}\n          searchContactList={searchContactList}\n          formatContactPhone={formatPhone}\n          currentLocale={currentLocale}\n          phoneTypeRenderer={phoneTypeRenderer}\n          phoneSourceNameRenderer={phoneSourceNameRenderer}\n          contactInfoRenderer={recipientsContactInfoRenderer}\n          contactPhoneRenderer={recipientsContactPhoneRenderer}\n          isLastInputFromDialpad={this.state.isLastInputFromDialpad}\n          titleEnabled\n          autoFocus={autoFocus}\n        />\n        <div className={styles.padContainer}>\n          <DialPad\n            dataSign=\"transfer\"\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            <div className={styles.button}>\n              <CircleButton\n                dataSign=\"transferBtn\"\n                className={isOnTransfer ? styles.disabled : undefined}\n                onClick={this.onTransfer}\n                icon={TransferIcon}\n                disabled={isOnTransfer || controlBusy}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}