{"version":3,"sources":["components/GlipGroupList/index.js"],"names":["GlipGroupList","props","_rowRenderer","index","key","style","group","groups","id","currentGroupId","onSelectGroup","styles","item","_rowHeight","_list","React","createRef","prevProps","current","forceUpdateGrid","width","height","className","length","PureComponent","propTypes","PropTypes","string","array","func","isRequired","number","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAiBnBC,YAjBmB,GAiBJ,gBAA2B;AAAA,UAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,UAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,UAAZC,KAAY,QAAZA,KAAY;AACxC,UAAMC,KAAK,GAAG,MAAKL,KAAL,CAAWM,MAAX,CAAkBJ,KAAlB,CAAd;AACA,0BACE;AAAK,QAAA,GAAG,EAAEC,GAAV;AAAe,QAAA,KAAK,EAAEC;AAAtB,sBACE,gCAAC,yBAAD;AACE,QAAA,KAAK,EAAEC,KADT;AAEE,QAAA,MAAM,EAAEA,KAAK,CAACE,EAAN,KAAa,MAAKP,KAAL,CAAWQ,cAFlC;AAGE,QAAA,aAAa,EAAE,yBAAM;AACnB,gBAAKR,KAAL,CAAWS,aAAX,CAAyBJ,KAAK,CAACE,EAA/B;AACD,SALH;AAME,QAAA,SAAS,EAAEG,mBAAOC;AANpB,QADF,CADF;AAYD,KA/BkB;;AAEjB,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,KAAL,gBAAaC,kBAAMC,SAAN,EAAb;AAHiB;AAIlB;;;;uCAEkBC,S,EAAW;AAC5B,UACE,KAAKhB,KAAL,CAAWM,MAAX,KAAsBU,SAAS,CAACV,MAAhC,IACA,KAAKN,KAAL,CAAWQ,cAAX,KAA8BQ,SAAS,CAACR,cAF1C,EAGE;AACA,YAAI,KAAKK,KAAL,IAAc,KAAKA,KAAL,CAAWI,OAA7B,EAAsC;AACpC,eAAKJ,KAAL,CAAWI,OAAX,CAAmBC,eAAnB;AACD;AACF;AACF;;;6BAkBQ;AAAA,wBACsC,KAAKlB,KAD3C;AAAA,UACCM,MADD,eACCA,MADD;AAAA,UACSa,KADT,eACSA,KADT;AAAA,UACgBC,MADhB,eACgBA,MADhB;AAAA,UACwBC,SADxB,eACwBA,SADxB;AAEP,0BACE,gCAAC,sBAAD;AACE,QAAA,GAAG,EAAE,KAAKR,KADZ;AAEE,QAAA,SAAS,EAAEQ,SAFb;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,MAAM,EAAEC,MAJV;AAKE,QAAA,QAAQ,EAAEd,MAAM,CAACgB,MALnB;AAME,QAAA,SAAS,EAAE,EANb;AAOE,QAAA,WAAW,EAAE,KAAKrB;AAPpB,QADF;AAWD;;;;EA/CwCsB,oB;;;AAkD3CxB,aAAa,CAACyB,SAAd,GAA0B;AACxBH,EAAAA,SAAS,EAAEI,sBAAUC,MADG;AAExBpB,EAAAA,MAAM,EAAEmB,sBAAUE,KAFM;AAGxBlB,EAAAA,aAAa,EAAEgB,sBAAUG,IAAV,CAAeC,UAHN;AAIxBrB,EAAAA,cAAc,EAAEiB,sBAAUC,MAJF;AAKxBP,EAAAA,KAAK,EAAEM,sBAAUK,MAAV,CAAiBD,UALA;AAMxBT,EAAAA,MAAM,EAAEK,sBAAUK,MAAV,CAAiBD;AAND,CAA1B;AASA9B,aAAa,CAACgC,YAAd,GAA6B;AAC3BV,EAAAA,SAAS,EAAEW,SADgB;AAE3B1B,EAAAA,MAAM,EAAE,EAFmB;AAG3BE,EAAAA,cAAc,EAAEwB;AAHW,CAA7B","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'react-virtualized';\n\nimport styles from './styles.scss';\n\nimport GlipGroupItem from '../GlipGroupItem';\n\nexport default class GlipGroupList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._rowHeight = 75;\n    this._list = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.groups !== prevProps.groups ||\n      this.props.currentGroupId !== prevProps.currentGroupId\n    ) {\n      if (this._list && this._list.current) {\n        this._list.current.forceUpdateGrid();\n      }\n    }\n  }\n\n  _rowRenderer = ({ index, key, style }) => {\n    const group = this.props.groups[index];\n    return (\n      <div key={key} style={style}>\n        <GlipGroupItem\n          group={group}\n          active={group.id === this.props.currentGroupId}\n          onSelectGroup={() => {\n            this.props.onSelectGroup(group.id);\n          }}\n          className={styles.item}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { groups, width, height, className } = this.props;\n    return (\n      <List\n        ref={this._list}\n        className={className}\n        width={width}\n        height={height}\n        rowCount={groups.length}\n        rowHeight={75}\n        rowRenderer={this._rowRenderer}\n      />\n    );\n  }\n}\n\nGlipGroupList.propTypes = {\n  className: PropTypes.string,\n  groups: PropTypes.array,\n  onSelectGroup: PropTypes.func.isRequired,\n  currentGroupId: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nGlipGroupList.defaultProps = {\n  className: undefined,\n  groups: [],\n  currentGroupId: undefined,\n};\n"],"file":"index.js"}