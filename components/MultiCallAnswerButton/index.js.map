{"version":3,"sources":["components/MultiCallAnswerButton/index.js"],"names":["MultiCallAnswerButton","props","Icon","isEndOtherCall","EndIcon","HoldIcon","iconClassName","styles","button","endButton","text","title","split","map","line","index","replace","className","width","height","x","y","onClick","answer","AnswerIcon","dataSign","buttonTitle","propTypes","PropTypes","string","isRequired","func","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport EndIcon from '../../assets/images/End.svg';\n\nimport CircleButton from '../CircleButton';\n\nimport styles from './styles.scss';\n\nexport default function MultiCallAnswerButton(props) {\n  const Icon = props.isEndOtherCall ? EndIcon : HoldIcon;\n  const iconClassName = classnames(\n    styles.button,\n    props.isEndOtherCall ? styles.endButton : '',\n  );\n  const text = props.title.split('\\n').map((line, index) => (\n    <tspan\n      dy={index ? '1.1em' : 0}\n      x=\"250\"\n      key={line}\n      data-sign={line.replace(' ', '_')}\n    >\n      {line}\n    </tspan>\n  ));\n  return (\n    <svg\n      className={props.className}\n      viewBox=\"0 0 500 600\"\n      width={props.width}\n      height={props.height}\n      x={props.x}\n      y={props.y}\n    >\n      <CircleButton\n        width=\"200\"\n        height=\"200\"\n        x={60}\n        y={50}\n        className={iconClassName}\n        onClick={props.onClick}\n        icon={Icon}\n      />\n      <CircleButton\n        width=\"250\"\n        height=\"250\"\n        x={200}\n        y={110}\n        className={classnames(styles.button, styles.answer)}\n        showBorder={false}\n        onClick={props.onClick}\n        icon={AnswerIcon}\n        dataSign={props.dataSign}\n      />\n      <text className={styles.buttonTitle} x=\"250\" y=\"500\" textAnchor=\"middle\">\n        {text}\n      </text>\n    </svg>\n  );\n}\n\nMultiCallAnswerButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  isEndOtherCall: PropTypes.bool,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n};\n\nMultiCallAnswerButton.defaultProps = {\n  className: null,\n  isEndOtherCall: true,\n  width: '100%',\n  height: '100%',\n  x: 0,\n  y: 0,\n};\n"],"file":"index.js"}