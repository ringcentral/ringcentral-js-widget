{"version":3,"sources":["components/TabNavigationButton/index.tsx"],"names":["NavigationButton","active","activeIcon","icon","label","noticeCounts","onClick","width","height","keepStyle","className","activeClassName","inActiveClassName","notice","styles","notices","navigationButton","iconHolder","iconStyles","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAiBA,IAAMA,gBAA0D,GAAG,SAA7DA,gBAA6D,OAa7D;AAAA,MAZJC,MAYI,QAZJA,MAYI;AAAA,MAXJC,UAWI,QAXJA,UAWI;AAAA,MAVJC,IAUI,QAVJA,IAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,YAQI,QARJA,YAQI;AAAA,MAPJC,OAOI,QAPJA,OAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,iBACI,QADJA,iBACI;AACJ,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIR,YAAY,IAAIA,YAAY,GAAG,CAAnC,EAAsC;AACpC,QAAIA,YAAY,GAAG,EAAnB,EAAuB;AACrBQ,MAAAA,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAEC,mBAAOC;AAAvB,eAAT;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAEC,mBAAOD;AAAvB,SAAgCR,YAAhC,CAAT;AACD;AACF;;AAED,sBACE;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,SAAS,EAAE,4BAAWQ,mBAAOE,gBAAlB,EAAoCf,MAAM,IAAIa,mBAAOb,MAArD,CAFb;AAGE,IAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAALA,KADK;AAELC,MAAAA,MAAM,EAANA;AAFK;AAHT,kBAQE,gCAAC,gBAAD;AAAS,IAAA,KAAK,EAAEJ;AAAhB,kBACE;AAAK,IAAA,SAAS,EAAEU,mBAAOG,UAAvB;AAAmC,iBAAWb;AAA9C,kBACE;AACE,IAAA,SAAS,EAAE,4BACTU,mBAAOX,IADE,EAET,CAACM,SAAD,GAAaK,mBAAOI,UAApB,GAAiC,IAFxB,EAGTR,SAHS,EAITT,MAAM,GAAGU,eAAH,GAAqBC,iBAJlB;AADb,KAQGX,MAAM,GAAGC,UAAH,GAAgBC,IARzB,CADF,EAWGU,MAXH,CADF,CARF,CADF;AA0BD,CAjDD;;AAmDAb,gBAAgB,CAACmB,YAAjB,GAAgC;AAC9BlB,EAAAA,MAAM,EAAE,KADsB;AAE9BQ,EAAAA,SAAS,EAAE;AAFmB,CAAhC;eAKeT,gB","sourcesContent":["import classnames from 'classnames';\nimport React, { DOMAttributes, FunctionComponent, ReactNode } from 'react';\n\nimport { Tooltip } from '../Rcui/Tooltip';\nimport styles from './styles.scss';\n\nexport interface NavigationButtonProps {\n  icon: ReactNode;\n  activeIcon: ReactNode;\n  active?: boolean;\n  label: string;\n  noticeCounts?: number;\n  width: number | string;\n  height: number | string;\n  onClick: DOMAttributes<HTMLDivElement>['onClick'];\n  keepStyle: boolean;\n  activeClassName: string;\n  inActiveClassName: string;\n  className?: string;\n}\n\nconst NavigationButton: FunctionComponent<NavigationButtonProps> = ({\n  active,\n  activeIcon,\n  icon,\n  label,\n  noticeCounts,\n  onClick,\n  width,\n  height,\n  keepStyle,\n  className,\n  activeClassName,\n  inActiveClassName,\n}) => {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notices}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n\n  return (\n    <div\n      onClick={onClick}\n      className={classnames(styles.navigationButton, active && styles.active)}\n      style={{\n        width,\n        height,\n      }}\n    >\n      <Tooltip title={label}>\n        <div className={styles.iconHolder} data-sign={label}>\n          <div\n            className={classnames(\n              styles.icon,\n              !keepStyle ? styles.iconStyles : null,\n              className,\n              active ? activeClassName : inActiveClassName,\n            )}\n          >\n            {active ? activeIcon : icon}\n          </div>\n          {notice}\n        </div>\n      </Tooltip>\n    </div>\n  );\n};\n\nNavigationButton.defaultProps = {\n  active: false,\n  keepStyle: false,\n};\n\nexport default NavigationButton;\n"],"file":"index.js"}