{"version":3,"sources":["components/VideoPanel/VideoPanel.tsx"],"names":["VideoPanel","ScheduleButton","scheduleButton","meeting","hidden","currentLocale","onOK","showSaveAsDefault","disableSaveAsDefault","disabled","openNewWindow","schedule","updateMeetingSettings","validatePasswordSettings","init","recipientsSection","showWhen","showDuration","brandName","showAdminLock","showPmiAlert","enableWaitingRoom","enablePersonalMeeting","enableJoinAfterMeCopy","personalMeetingId","switchUsePersonalMeetingId","topicRef","setTopicRef","styles","videoPanel","name","opener","window","open","current","props","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport { RcVMeetingModel } from 'ringcentral-integration/interfaces/Rcv.model';\n\nimport isSafari from '../../lib/isSafari';\nimport { VideoConfig, Topic } from './VideoConfig';\nimport styles from './styles.scss';\n\nexport const VideoPanel: React.FunctionComponent<VideoPanelProps> = ({\n  scheduleButton: ScheduleButton,\n  meeting,\n  hidden,\n  currentLocale,\n  onOK,\n  showSaveAsDefault,\n  disableSaveAsDefault,\n  disabled,\n  openNewWindow,\n  schedule,\n  updateMeetingSettings,\n  validatePasswordSettings,\n  init,\n  recipientsSection,\n  showWhen,\n  showDuration,\n  brandName,\n  showAdminLock,\n  showPmiAlert,\n  enableWaitingRoom,\n  enablePersonalMeeting,\n  enableJoinAfterMeCopy,\n  personalMeetingId,\n  switchUsePersonalMeetingId,\n}) => {\n  const [topicRef, setTopicRef] = useState(null);\n  return (\n    <div className={styles.videoPanel}>\n      <VideoConfig\n        currentLocale={currentLocale}\n        meeting={meeting}\n        updateMeetingSettings={updateMeetingSettings}\n        validatePasswordSettings={validatePasswordSettings}\n        recipientsSection={recipientsSection}\n        init={init}\n        showWhen={showWhen}\n        showDuration={showDuration}\n        brandName={brandName}\n        showAdminLock={showAdminLock}\n        showPmiAlert={showPmiAlert}\n        enableWaitingRoom={enableWaitingRoom}\n        enablePersonalMeeting={enablePersonalMeeting}\n        enableJoinAfterMeCopy={enableJoinAfterMeCopy}\n        personalMeetingId={personalMeetingId}\n        switchUsePersonalMeetingId={switchUsePersonalMeetingId}\n      >\n        <Topic\n          name={meeting.name}\n          updateMeetingTopic={(name) => {\n            updateMeetingSettings({ name });\n          }}\n          currentLocale={currentLocale}\n          setTopicRef={setTopicRef}\n        />\n      </VideoConfig>\n      {ScheduleButton ? (\n        <ScheduleButton\n          currentLocale={currentLocale}\n          hidden={hidden}\n          disabled={disabled}\n          meeting={meeting}\n          onOK={onOK}\n          onClick={async () => {\n            if (!disabled) {\n              await sleep(100);\n              const opener = openNewWindow && isSafari() ? window.open() : null;\n              await schedule(\n                {\n                  ...meeting,\n                  name: topicRef.current.props.value,\n                },\n                opener,\n              );\n            }\n          }}\n          update={updateMeetingSettings}\n          showSaveAsDefault={showSaveAsDefault}\n          disableSaveAsDefault={disableSaveAsDefault}\n        />\n      ) : null}\n    </div>\n  );\n};\n\ninterface VideoPanelProps {\n  currentLocale: string;\n  meeting: RcVMeetingModel;\n  schedule: (meeting: RcVMeetingModel, opener: Window) => any;\n  updateMeetingSettings: (meeting: Partial<RcVMeetingModel>) => void;\n  validatePasswordSettings: (password: string, isSecret: boolean) => boolean;\n  hidden: boolean;\n  disabled: boolean;\n  onOK: any;\n  onClick: any;\n  update: any;\n  showSaveAsDefault: boolean;\n  disableSaveAsDefault: boolean;\n  scheduleButton: any;\n  openNewWindow: any;\n  init: any;\n  brandName: string;\n  recipientsSection?: React.ReactNode;\n  showWhen?: boolean;\n  showDuration?: boolean;\n  showAdminLock?: boolean;\n  showPmiAlert?: boolean;\n  enableWaitingRoom?: boolean;\n  enablePersonalMeeting?: boolean;\n  enableJoinAfterMeCopy?: boolean;\n  personalMeetingId: string;\n  switchUsePersonalMeetingId: (usePersonalMeetingId: boolean) => any;\n}\n"],"file":"VideoPanel.js"}