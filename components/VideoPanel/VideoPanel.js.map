{"version":3,"sources":["components/VideoPanel/VideoPanel.tsx"],"names":["VideoPanel","ScheduleButton","scheduleButton","meeting","hidden","currentLocale","onOK","showSaveAsDefault","disabled","openNewWindow","invite","updateMeetingSettings","validatePasswordSettings","init","recipientsSection","showWhen","showDuration","brandName","topicRef","setTopicRef","styles","videoPanel","name","opener","window","open","current","props","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,UAAoD,GAAG,SAAvDA,UAAuD,OAiB9D;AAAA,MAhBYC,cAgBZ,QAhBJC,cAgBI;AAAA,MAfJC,OAeI,QAfJA,OAeI;AAAA,MAdJC,MAcI,QAdJA,MAcI;AAAA,MAbJC,aAaI,QAbJA,aAaI;AAAA,MAZJC,IAYI,QAZJA,IAYI;AAAA,MAXJC,iBAWI,QAXJA,iBAWI;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,aASI,QATJA,aASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,qBAOI,QAPJA,qBAOI;AAAA,MANJC,wBAMI,QANJA,wBAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,iBAII,QAJJA,iBAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,SACI,QADJA,SACI;;AAAA,kBAC4B,qBAAS,IAAT,CAD5B;AAAA;AAAA,MACGC,QADH;AAAA,MACaC,WADb;;AAEJ,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,kBACE,gCAAC,wBAAD;AACE,IAAA,aAAa,EAAEhB,aADjB;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,qBAAqB,EAAEQ,qBAHzB;AAIE,IAAA,wBAAwB,EAAEC,wBAJ5B;AAKE,IAAA,iBAAiB,EAAEE,iBALrB;AAME,IAAA,IAAI,EAAED,IANR;AAOE,IAAA,QAAQ,EAAEE,QAPZ;AAQE,IAAA,YAAY,EAAEC,YARhB;AASE,IAAA,SAAS,EAAEC;AATb,kBAWE,gCAAC,kBAAD;AACE,IAAA,IAAI,EAAEd,OAAO,CAACmB,IADhB;AAEE,IAAA,kBAAkB,EAAE,4BAACA,IAAD,EAAU;AAC5BX,MAAAA,qBAAqB,CAAC;AAAEW,QAAAA,IAAI,EAAJA;AAAF,OAAD,CAArB;AACD,KAJH;AAKE,IAAA,aAAa,EAAEjB,aALjB;AAME,IAAA,WAAW,EAAEc;AANf,IAXF,CADF,EAqBGlB,cAAc,gBACb,gCAAC,cAAD;AACE,IAAA,aAAa,EAAEI,aADjB;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,OAAO,EAAEL,OAJX;AAKE,IAAA,IAAI,EAAEG,IALR;AAME,IAAA,OAAO,uEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACFE,QADE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEC,uBAAM,GAAN,CAFD;;AAAA;AAGCe,cAAAA,MAHD,GAGUd,aAAa,IAAI,2BAAjB,GAA8Be,MAAM,CAACC,IAAP,EAA9B,GAA8C,IAHxD;AAAA;AAAA,qBAICf,MAAM,iCAELP,OAFK;AAGRmB,gBAAAA,IAAI,EAAEJ,QAAQ,CAACQ,OAAT,CAAiBC,KAAjB,CAAuBC;AAHrB,kBAKVL,MALU,CAJP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EANT;AAmBE,IAAA,MAAM,EAAEZ,qBAnBV;AAoBE,IAAA,iBAAiB,EAAEJ;AApBrB,IADa,GAuBX,IA5CN,CADF;AAgDD,CAnEM","sourcesContent":["import React, { useState } from 'react';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport { RcVMeetingModel } from 'ringcentral-integration/models/rcv.model';\n\nimport isSafari from '../../lib/isSafari';\nimport { VideoConfig, Topic } from './VideoConfig';\nimport styles from './styles.scss';\n\nexport const VideoPanel: React.FunctionComponent<VideoPanelProps> = ({\n  scheduleButton: ScheduleButton,\n  meeting,\n  hidden,\n  currentLocale,\n  onOK,\n  showSaveAsDefault,\n  disabled,\n  openNewWindow,\n  invite,\n  updateMeetingSettings,\n  validatePasswordSettings,\n  init,\n  recipientsSection,\n  showWhen,\n  showDuration,\n  brandName,\n}) => {\n  const [topicRef, setTopicRef] = useState(null);\n  return (\n    <div className={styles.videoPanel}>\n      <VideoConfig\n        currentLocale={currentLocale}\n        meeting={meeting}\n        updateMeetingSettings={updateMeetingSettings}\n        validatePasswordSettings={validatePasswordSettings}\n        recipientsSection={recipientsSection}\n        init={init}\n        showWhen={showWhen}\n        showDuration={showDuration}\n        brandName={brandName}\n      >\n        <Topic\n          name={meeting.name}\n          updateMeetingTopic={(name) => {\n            updateMeetingSettings({ name });\n          }}\n          currentLocale={currentLocale}\n          setTopicRef={setTopicRef}\n        />\n      </VideoConfig>\n      {ScheduleButton ? (\n        <ScheduleButton\n          currentLocale={currentLocale}\n          hidden={hidden}\n          disabled={disabled}\n          meeting={meeting}\n          onOK={onOK}\n          onClick={async () => {\n            if (!disabled) {\n              await sleep(100);\n              const opener = openNewWindow && isSafari() ? window.open() : null;\n              await invite(\n                {\n                  ...meeting,\n                  name: topicRef.current.props.value,\n                },\n                opener,\n              );\n            }\n          }}\n          update={updateMeetingSettings}\n          showSaveAsDefault={showSaveAsDefault}\n        />\n      ) : null}\n    </div>\n  );\n};\n\ninterface VideoPanelProps {\n  currentLocale: string;\n  meeting: RcVMeetingModel;\n  updateMeetingSettings: (meeting: Partial<RcVMeetingModel>) => void;\n  validatePasswordSettings: (password: string, isSecret: boolean) => boolean;\n  hidden: boolean;\n  disabled: boolean;\n  onOK: any;\n  onClick: any;\n  update: any;\n  showSaveAsDefault: any;\n  scheduleButton: any;\n  openNewWindow: any;\n  invite: any;\n  init: any;\n  brandName: string;\n  recipientsSection?: React.ReactNode;\n  showWhen?: boolean;\n  showDuration?: boolean;\n}\n"],"file":"VideoPanel.js"}