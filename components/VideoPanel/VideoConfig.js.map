{"version":3,"sources":["components/VideoPanel/VideoConfig.tsx"],"names":["MINUTE_SCALE","HOUR_SCALE","getMinutesList","result","index","length","value","text","slice","concat","Array","getHoursList","Error","getHelperTextForPasswordField","meeting","currentLocale","meetingPassword","i18n","getString","isMeetingPasswordValid","VideoConfig","props","updateMeetingSettings","validatePasswordSettings","recipientsSection","init","children","showWhen","showDuration","brandName","personalMeetingId","datePickerSize","timePickerSize","hoursList","minutesList","isRCBrand","setMeetingPassword","debouncedPassword","isMeetingSecret","startTime","Date","authUserTypeValue","isOnlyCoworkersJoin","authUserType","setAuthUserType","settingsGroupExpandable","styles","videoConfig","meetingContent","meetingSection","endAdornment","dateSvg","timeSvg","hourDuration","Math","floor","duration","e","target","restMinutes","durationInMinutes","root","select","map","item","i","minuteDuration","restHours","isMax","minutes","meetingSettings","toggleGroup","usePersonalMeetingId","personMeetingInfo","checkInputWrapper","classes","labelPlacementStart","labelPlacement","muteAudio","muteVideo","next","inputArea","maxLength","password","test","allowJoinBeforeHost","isOnlyAuthUserJoin","ev","checked","boxSelect","allowScreenSharing","InnerTopic","name","setTopicRef","updateMeetingTopic","topic","setTopic","topicRef","input","Topic","React","memo","prevProps","nextProps","defaultProps","undefined","showTopic"],"mappings":"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","sourcesContent":["import {\n  RcDatePicker,\n  RcFormGroup,\n  RcIconButton,\n  RcLineSelect,\n  RcMenuItem,\n  RcCheckbox,\n  RcTextField,\n  RcTimePicker,\n  RcBoxSelect,\n} from '@ringcentral-integration/rcui';\nimport dateSvg from '@ringcentral-integration/rcui/icons/icon-date_border.svg';\nimport timeSvg from '@ringcentral-integration/rcui/icons/icon-time_border.svg';\nimport { reduce } from 'ramda';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { RcVMeetingModel } from 'ringcentral-integration/models/rcv.model';\n\nimport { useDebounce } from '../../react-hooks';\nimport { VideoSettingsGroup } from './VideoSettingsGroup';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport const MINUTE_SCALE = 4;\nexport const HOUR_SCALE = 13;\n\nfunction getMinutesList(MINUTE_SCALE) {\n  return reduce(\n    (result) => {\n      const index = result.length;\n      const value = (60 / MINUTE_SCALE) * index;\n      const text = `${`${value}0`.slice(0, 2)} min`;\n      return result.concat({\n        value,\n        text,\n      });\n    },\n    [],\n    new Array(MINUTE_SCALE),\n  );\n}\n\nfunction getHoursList(HOUR_SCALE) {\n  if (HOUR_SCALE > 23) {\n    throw new Error('HOUR_SCALE must be less than 23.');\n  }\n  return reduce(\n    (result) => {\n      const value = result.length;\n      const text = `${`0${value}0`.slice(-3, -1)} hr`;\n      return result.concat({\n        value,\n        text,\n      });\n    },\n    [],\n    new Array(HOUR_SCALE),\n  );\n}\n\nfunction getHelperTextForPasswordField(\n  meeting: RcVMeetingModel,\n  currentLocale: string,\n): string {\n  if (!meeting.meetingPassword) {\n    return i18n.getString('passwordEmptyError', currentLocale);\n  }\n  if (!meeting.isMeetingPasswordValid) {\n    return i18n.getString('passwordInvalidError', currentLocale);\n  }\n  return i18n.getString('passwordHintText', currentLocale);\n}\n\ninterface VideoConfigProps {\n  currentLocale: string;\n  meeting: RcVMeetingModel;\n\n  updateMeetingSettings: (meeting: Partial<RcVMeetingModel>) => void;\n  validatePasswordSettings: (password: string, isSecret: boolean) => boolean;\n\n  recipientsSection?: React.ReactNode;\n  showTopic?: boolean;\n  showWhen?: boolean;\n  showDuration?: boolean;\n  brandName: string;\n  init: () => any;\n  personalMeetingId?: string;\n  datePickerSize?: string;\n  timePickerSize?: string;\n}\n\nexport const VideoConfig: React.FunctionComponent<VideoConfigProps> = (\n  props,\n) => {\n  const {\n    currentLocale,\n    meeting,\n    updateMeetingSettings,\n    validatePasswordSettings,\n    recipientsSection,\n    init,\n    children,\n    showWhen,\n    showDuration,\n    brandName,\n    personalMeetingId,\n    datePickerSize,\n    timePickerSize,\n  } = props;\n  const hoursList = getHoursList(HOUR_SCALE);\n  const minutesList = getMinutesList(MINUTE_SCALE);\n  const isRCBrand = brandName === 'RingCentral';\n\n  useEffect(() => {\n    if (init) {\n      init();\n    }\n  }, []);\n\n  const [meetingPassword, setMeetingPassword] = useState<string>(\n    meeting.meetingPassword,\n  );\n  useEffect(() => {\n    setMeetingPassword(meeting.meetingPassword);\n  }, [meeting.meetingPassword]);\n\n  const debouncedPassword = useDebounce<string>(meetingPassword, 200);\n  useEffect(() => {\n    const isMeetingPasswordValid = validatePasswordSettings(\n      debouncedPassword,\n      meeting.isMeetingSecret,\n    );\n    updateMeetingSettings({\n      ...meeting,\n      meetingPassword: debouncedPassword,\n      isMeetingPasswordValid,\n    });\n  }, [debouncedPassword]);\n\n  const startTime = useMemo(() => {\n    return new Date(meeting.startTime);\n  }, [meeting.startTime]);\n\n  const authUserTypeValue = meeting.isOnlyCoworkersJoin\n    ? 'signedInCoWorkers'\n    : 'signedInUsers';\n  const [authUserType, setAuthUserType] = useState<string>(authUserTypeValue);\n  useEffect(() => {\n    setAuthUserType(authUserTypeValue);\n  }, [authUserTypeValue]);\n\n  const settingsGroupExpandable = false;\n\n  return (\n    <div className={styles.videoConfig}>\n      <div className={styles.meetingContent}>\n        <div className={styles.meetingSection}>{children}</div>\n        {recipientsSection ? (\n          <div className={styles.meetingSection}>{recipientsSection}</div>\n        ) : null}\n        {showWhen ? (\n          <div className={styles.meetingSection}>\n            <RcDatePicker\n              label={i18n.getString('date', currentLocale)}\n              data-sign=\"date\"\n              date={startTime}\n              fullWidth\n              size={datePickerSize}\n              onChange={(value) => {\n                updateMeetingSettings({\n                  startTime: value,\n                });\n              }}\n              formatString=\"MM/DD/YYYY\"\n              InputProps={{\n                endAdornment: (\n                  <RcIconButton\n                    variant=\"round\"\n                    size=\"medium\"\n                    symbol={dateSvg}\n                  />\n                ),\n              }}\n            />\n          </div>\n        ) : null}\n        {showWhen ? (\n          <div className={styles.meetingSection}>\n            <RcTimePicker\n              fullWidth\n              size={timePickerSize}\n              label={i18n.getString('startTime', currentLocale)}\n              data-sign=\"startTime\"\n              value={startTime}\n              onChange={(value) => {\n                updateMeetingSettings({\n                  startTime: new Date(value),\n                });\n              }}\n              InputProps={{\n                endAdornment: (\n                  <RcIconButton\n                    variant=\"round\"\n                    size=\"medium\"\n                    symbol={timeSvg}\n                  />\n                ),\n              }}\n            />\n          </div>\n        ) : null}\n        {showDuration ? (\n          <div className={styles.meetingSection}>\n            <div className={styles.hourDuration}>\n              <RcLineSelect\n                // size=\"small\"\n                data-sign=\"durationHour\"\n                value={Math.floor(meeting.duration / 60)}\n                onChange={(e) => {\n                  const value = +e.target.value;\n                  const restMinutes = Math.floor(meeting.duration % 60);\n                  const durationInMinutes = value * 60 + restMinutes;\n                  updateMeetingSettings({\n                    duration: durationInMinutes,\n                  });\n                }}\n                classes={{\n                  root: styles.select,\n                }}\n                className={styles.select}\n                label={i18n.getString('duration', currentLocale)}\n              >\n                {hoursList.map((item, i) => (\n                  <RcMenuItem\n                    key={i}\n                    value={item.value}\n                    data-sign={`option${i}`}\n                  >\n                    {item !== null ? item.text : 'defaultValue'}\n                  </RcMenuItem>\n                ))}\n              </RcLineSelect>\n            </div>\n            <div className={styles.minuteDuration}>\n              <RcLineSelect\n                data-sign=\"durationMinute\"\n                required\n                value={Math.floor(meeting.duration % 60)}\n                onChange={(e) => {\n                  const value = +e.target.value;\n                  const restHours = Math.floor(meeting.duration / 60);\n                  const isMax = restHours === hoursList.slice(-1)[0].value;\n                  const minutes = isMax ? 0 : value;\n                  const durationInMinutes = restHours * 60 + minutes;\n                  updateMeetingSettings({\n                    duration: durationInMinutes,\n                  });\n                }}\n                classes={{\n                  root: styles.select,\n                }}\n              >\n                {minutesList.map((item, i) => (\n                  <RcMenuItem\n                    key={i}\n                    value={item.value}\n                    data-sign={`option${i}`}\n                  >\n                    {item !== null ? item.text : 'defaultValue'}\n                  </RcMenuItem>\n                ))}\n              </RcLineSelect>\n            </div>\n          </div>\n        ) : null}\n        <div className={styles.meetingSettings}>\n          <VideoSettingsGroup\n            dateSign=\"settingsPanel\"\n            expandable={settingsGroupExpandable}\n            summary={i18n.getString(\n              isRCBrand ? 'rcMeetingSettings' : 'meetingSettings',\n              currentLocale,\n            )}\n          >\n            <RcFormGroup\n              classes={{\n                root: styles.toggleGroup,\n              }}\n            >\n              {personalMeetingId ? (\n                <RcCheckbox\n                  data-sign=\"usePersonalMeetingId\"\n                  checked={meeting.usePersonalMeetingId}\n                  onChange={() => {\n                    updateMeetingSettings({\n                      usePersonalMeetingId: !meeting.usePersonalMeetingId,\n                    });\n                  }}\n                  label={\n                    <div>\n                      <div>\n                        {i18n.getString('usePersonalMeetingId', currentLocale)}\n                      </div>\n                      <div className={styles.personMeetingInfo}>\n                        {personalMeetingId}\n                      </div>\n                    </div>\n                  }\n                  classes={{ root: styles.checkInputWrapper }}\n                  formControlLabelProps={{\n                    classes: { root: styles.labelPlacementStart },\n                    labelPlacement: 'start',\n                  }}\n                />\n              ) : null}\n              <RcCheckbox\n                data-sign=\"muteAudio\"\n                checked={meeting.muteAudio}\n                onChange={() => {\n                  updateMeetingSettings({\n                    muteAudio: !meeting.muteAudio,\n                  });\n                }}\n                label={i18n.getString('muteAudio', currentLocale)}\n                classes={{ root: styles.checkInputWrapper }}\n                formControlLabelProps={{\n                  classes: { root: styles.labelPlacementStart },\n                  labelPlacement: 'start',\n                }}\n              />\n              <RcCheckbox\n                data-sign=\"turnOffCamera\"\n                checked={meeting.muteVideo}\n                onChange={() => {\n                  updateMeetingSettings({\n                    muteVideo: !meeting.muteVideo,\n                  });\n                }}\n                label={i18n.getString('turnOffCamera', currentLocale)}\n                classes={{ root: styles.checkInputWrapper }}\n                formControlLabelProps={{\n                  classes: { root: styles.labelPlacementStart },\n                  labelPlacement: 'start',\n                }}\n              />\n            </RcFormGroup>\n          </VideoSettingsGroup>\n          <VideoSettingsGroup\n            dateSign=\"securityPanel\"\n            expandable={settingsGroupExpandable}\n            summary={i18n.getString('meetingSettingsSecurity', currentLocale)}\n          >\n            <RcFormGroup\n              classes={{\n                root: styles.toggleGroup,\n              }}\n            >\n              <RcCheckbox\n                data-sign=\"requirePassword\"\n                checked={meeting.isMeetingSecret}\n                onChange={() => {\n                  const next = !meeting.isMeetingSecret;\n                  updateMeetingSettings({\n                    isMeetingSecret: next,\n                  });\n                }}\n                label={i18n.getString('requirePassword', currentLocale)}\n                classes={{ root: styles.checkInputWrapper }}\n                formControlLabelProps={{\n                  classes: { root: styles.labelPlacementStart },\n                  labelPlacement: 'start',\n                }}\n              />\n              {meeting.isMeetingSecret ? (\n                <div className={styles.inputArea}>\n                  <RcTextField\n                    error={!meeting.isMeetingPasswordValid}\n                    helperText={getHelperTextForPasswordField(\n                      meeting,\n                      currentLocale,\n                    )}\n                    placeholder={i18n.getString('setPassword', currentLocale)}\n                    data-sign=\"password\"\n                    fullWidth\n                    clearBtn\n                    spellCheck={false}\n                    value={meetingPassword}\n                    inputProps={{\n                      maxLength: 255,\n                    }}\n                    onChange={(e) => {\n                      const password = e.target.value;\n                      if (/^[A-Za-z0-9]{0,10}$/.test(password)) {\n                        setMeetingPassword(password);\n                      }\n                    }}\n                  />\n                </div>\n              ) : null}\n              <RcCheckbox\n                data-sign=\"allowJoinBeforeHost\"\n                checked={meeting.allowJoinBeforeHost}\n                onChange={() => {\n                  updateMeetingSettings({\n                    allowJoinBeforeHost: !meeting.allowJoinBeforeHost,\n                  });\n                }}\n                label={i18n.getString('joinBeforeHost', currentLocale)}\n                classes={{ root: styles.checkInputWrapper }}\n                formControlLabelProps={{\n                  classes: { root: styles.labelPlacementStart },\n                  labelPlacement: 'start',\n                }}\n              />\n              <RcCheckbox\n                data-sign=\"isOnlyAuthUserJoin\"\n                checked={meeting.isOnlyAuthUserJoin}\n                onChange={(ev, checked) => {\n                  updateMeetingSettings({\n                    isOnlyAuthUserJoin: checked,\n                    isOnlyCoworkersJoin: checked\n                      ? meeting.isOnlyCoworkersJoin\n                      : false,\n                  });\n                }}\n                label={i18n.getString('onlyAuthUserJoin', currentLocale)}\n                classes={{ root: styles.checkInputWrapper }}\n                formControlLabelProps={{\n                  classes: { root: styles.labelPlacementStart },\n                  labelPlacement: 'start',\n                }}\n              />\n              {meeting.isOnlyAuthUserJoin ? (\n                <div className={styles.authUserType}>\n                  <RcBoxSelect\n                    className={styles.boxSelect}\n                    isFullWidth\n                    automationId=\"authUserType\"\n                    onChange={(e) => {\n                      setAuthUserType(e.target.value as string);\n                      updateMeetingSettings({\n                        isOnlyCoworkersJoin:\n                          e.target.value === 'signedInCoWorkers',\n                      });\n                    }}\n                    value={authUserType}\n                  >\n                    <RcMenuItem value=\"signedInUsers\">\n                      {i18n.getString('signedInUsers', currentLocale)}\n                    </RcMenuItem>\n                    <RcMenuItem value=\"signedInCoWorkers\">\n                      {i18n.getString('signedInCoWorkers', currentLocale)}\n                    </RcMenuItem>\n                  </RcBoxSelect>\n                </div>\n              ) : null}\n              <RcCheckbox\n                data-sign=\"limitScreenSharing\"\n                checked={!meeting.allowScreenSharing}\n                onChange={() => {\n                  updateMeetingSettings({\n                    allowScreenSharing: !meeting.allowScreenSharing,\n                  });\n                }}\n                label={i18n.getString('limitScreenSharing', currentLocale)}\n                classes={{ root: styles.checkInputWrapper }}\n                formControlLabelProps={{\n                  classes: { root: styles.labelPlacementStart },\n                  labelPlacement: 'start',\n                }}\n              />\n            </RcFormGroup>\n          </VideoSettingsGroup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst InnerTopic: React.FunctionComponent<{\n  name: string;\n  currentLocale: string;\n  setTopicRef: (ref: any) => void;\n  updateMeetingTopic: (name: string) => void;\n}> = ({ name, currentLocale, setTopicRef, updateMeetingTopic }) => {\n  const [topic, setTopic] = useState(name);\n  const topicRef = useRef();\n  useEffect(() => {\n    setTopic(name);\n    setTopicRef(topicRef);\n  }, [name, setTopicRef]);\n  return (\n    <RcTextField\n      ref={topicRef}\n      // size=\"small\"\n      label={i18n.getString('topic', currentLocale)}\n      data-sign=\"topic\"\n      fullWidth\n      clearBtn={false}\n      value={topic}\n      inputProps={{\n        maxLength: 255,\n      }}\n      onChange={(e) => {\n        setTopic(e.target.value);\n      }}\n      onBlur={() => {\n        updateMeetingTopic(topic);\n      }}\n      classes={{\n        root: styles.input,\n      }}\n    />\n  );\n};\n\nexport const Topic = React.memo(\n  InnerTopic,\n  (prevProps, nextProps) =>\n    prevProps.name === nextProps.name &&\n    prevProps.currentLocale === nextProps.currentLocale,\n);\n\nVideoConfig.defaultProps = {\n  recipientsSection: undefined,\n  showTopic: true,\n  showWhen: true,\n  showDuration: true,\n  personalMeetingId: undefined,\n  datePickerSize: 'medium',\n  timePickerSize: 'medium',\n};\n"],"file":"VideoConfig.js"}