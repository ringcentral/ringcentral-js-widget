{"version":3,"sources":["components/GlipGroupsPanel/index.js"],"names":["GlipGroupsPanel","props","_onResize","_mounted","_calculateContentSize","state","searchString","searchFilter","showTeamCreationModal","contentHeight","contentWidth","updateSeachString","e","target","value","setState","updateSearchFilter","toggleShowTeamCreationModal","preState","_contentWrapper","React","createRef","window","addEventListener","removeEventListener","current","getBoundingClientRect","rect","bottom","top","right","left","groups","className","currentGroupId","showSpinner","currentPage","onNextPage","onSelectGroup","filteredContacts","updateContactSearchFilter","contactSearchFilter","spinner","styles","root","header","searchInput","addTeam","content","createTeam","PureComponent","propTypes","PropTypes","array","string","func","isRequired","bool","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { SearchInput } from 'ringcentral-widgets/components/SearchInput';\nimport { SpinnerOverlay } from 'ringcentral-widgets/components/SpinnerOverlay';\nimport debounce from 'ringcentral-integration/lib/debounce';\n\nimport GlipGroupList from '../GlipGroupList';\nimport GlipTeamCreationModal from '../GlipTeamCreation';\n\nimport styles from './styles.scss';\n\nexport default class GlipGroupsPanel extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: props.searchFilter,\n      showTeamCreationModal: false,\n      contentHeight: 0,\n      contentWidth: 0,\n    };\n    this.updateSeachString = (e) => {\n      const searchString = e.target.value;\n      this.setState({\n        searchString,\n      });\n      this.props.updateSearchFilter(searchString);\n    };\n    this.toggleShowTeamCreationModal = () => {\n      this.setState((preState) => ({\n        showTeamCreationModal: !preState.showTeamCreationModal,\n      }));\n    };\n    this._contentWrapper = React.createRef();\n    this._mounted = false;\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._calculateContentSize();\n    window.addEventListener('resize', this._onResize);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    window.removeEventListener('resize', this._onResize);\n  }\n\n  _onResize = debounce(() => {\n    if (this._mounted) {\n      this._calculateContentSize();\n    }\n  }, 300);\n\n  _calculateContentSize() {\n    if (\n      this._contentWrapper &&\n      this._contentWrapper.current &&\n      this._contentWrapper.current.getBoundingClientRect\n    ) {\n      const rect = this._contentWrapper.current.getBoundingClientRect();\n      this.setState({\n        contentHeight: rect.bottom - rect.top,\n        contentWidth: rect.right - rect.left,\n      });\n      return;\n    }\n    this.setState({\n      contentHeight: 0,\n      contentWidth: 0,\n    });\n  }\n\n  render() {\n    const {\n      groups,\n      className,\n      currentGroupId,\n      showSpinner,\n      currentPage,\n      onNextPage,\n      onSelectGroup,\n      filteredContacts,\n      updateContactSearchFilter,\n      contactSearchFilter,\n    } = this.props;\n    const spinner = showSpinner ? <SpinnerOverlay /> : null;\n    // TODO: update searching with i18n\n    return (\n      <div className={classnames(styles.root, className)}>\n        <div className={styles.header}>\n          <SearchInput\n            className={styles.searchInput}\n            value={this.state.searchString}\n            onChange={this.updateSeachString}\n            placeholder=\"Searching\"\n          />\n          <div\n            className={styles.addTeam}\n            onClick={this.toggleShowTeamCreationModal}\n          >\n            +\n          </div>\n        </div>\n        <div className={styles.content} ref={this._contentWrapper}>\n          <GlipGroupList\n            groups={groups}\n            onSelectGroup={onSelectGroup}\n            currentGroupId={currentGroupId}\n            onNextPage={onNextPage}\n            currentPage={currentPage}\n            width={this.state.contentWidth}\n            height={this.state.contentHeight}\n          />\n        </div>\n        <GlipTeamCreationModal\n          filteredContacts={filteredContacts}\n          updateFilter={updateContactSearchFilter}\n          searchFilter={contactSearchFilter}\n          closeModal={this.toggleShowTeamCreationModal}\n          createTeam={this.props.createTeam}\n          show={this.state.showTeamCreationModal}\n        />\n        {spinner}\n      </div>\n    );\n  }\n}\n\nGlipGroupsPanel.propTypes = {\n  groups: PropTypes.array,\n  className: PropTypes.string,\n  searchFilter: PropTypes.string,\n  currentGroupId: PropTypes.string,\n  onSelectGroup: PropTypes.func.isRequired,\n  updateSearchFilter: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n  currentPage: PropTypes.number,\n  onNextPage: PropTypes.func,\n  createTeam: PropTypes.func.isRequired,\n  filteredContacts: PropTypes.array,\n  updateContactSearchFilter: PropTypes.func.isRequired,\n  contactSearchFilter: PropTypes.string,\n};\n\nGlipGroupsPanel.defaultProps = {\n  groups: [],\n  className: undefined,\n  searchFilter: '',\n  currentGroupId: undefined,\n  showSpinner: false,\n  currentPage: 1,\n  onNextPage: undefined,\n  filteredContacts: [],\n  contactSearchFilter: '',\n};\n"],"file":"index.js"}