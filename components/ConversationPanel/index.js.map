{"version":3,"sources":["components/ConversationPanel/index.js"],"names":["ConversationPanel","props","onSend","replyToReceivers","onInputHeightChange","value","setState","inputHeight","onSelectContact","idx","selected","showContactDisplayPlaceholder","parseInt","_userSelection","autoLog","logConversation","redirect","prefill","getSelectedContact","state","conversation","contactMatches","correspondentMatches","length","bind","getInitialContactIndex","isLogging","loaded","showSpinner","loadConversation","_mounted","nextProps","conversationMatches","prevProps","prevState","messages","readMessages","conversationId","perPage","loadPreviousMessages","unloadConversation","headerHeight","alertHeight","restrictSendMessage","lastMatchedCorrespondentEntity","index","correspondentMatchId","id","findIndex","contact","correspondents","phoneNumber","extensionNumber","undefined","groupNumbers","map","correspondent","name","onLogConversation","correspondentEntity","styles","root","conversationBody","loading","recipients","messageSubjectRenderer","currentLocale","getMessageListHeight","dateTimeFormatter","formatPhone","loadingNextPage","onAttachmentDownload","getGroupPhoneNumbers","getPhoneNumber","fallbackName","getFallbackContactName","extraButton","renderExtraButton","logButton","disableLinks","header","brand","contactDisplay","contactDisplaySelect","areaCode","countryCode","enableContactFallback","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","showGroupNumberName","goBack","backButton","dynamicsFont","arrow","alert","messageText","updateMessageText","sendButtonDisabled","inputExpandable","attachments","supportAttachment","addAttachment","removeAttachment","Component","propTypes","PropTypes","string","isRequired","func","ConversationMessageList","arrayOf","shape","bool","object","number","size","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { RcAlert } from '@ringcentral/juno';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport ConversationMessageList from '../ConversationMessageList';\nimport LogButton from '../LogButton';\nimport ContactDisplay from '../ContactDisplay';\nimport MessageInput from '../MessageInput';\n\nimport styles from './styles.scss';\n\nclass ConversationPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      inputHeight: 63,\n      loaded: false,\n    };\n    this._userSelection = false;\n  }\n\n  componentDidMount() {\n    if (!this.props.showSpinner) {\n      this.loadConversation();\n    }\n    this._mounted = true;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      this.props.conversation &&\n      nextProps.conversation &&\n      (nextProps.conversation.conversationMatches !==\n        this.props.conversation.conversationMatches ||\n        nextProps.conversation.correspondentMatches !==\n          this.props.conversation.correspondentMatches)\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n    if (!nextProps.showSpinner && this.props.showSpinner) {\n      this.loadConversation();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.messages !== this.props.messages) {\n      this.props.readMessages(this.props.conversationId);\n    }\n    if (prevState.loaded === false && this.state.loaded === true) {\n      if (this.props.messages.length < this.props.perPage) {\n        this.props.loadPreviousMessages();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    this.props.unloadConversation();\n  }\n\n  onSend = (...args) => {\n    this.props.replyToReceivers(...args);\n  };\n\n  onInputHeightChange = (value) => {\n    this.setState({\n      inputHeight: value,\n    });\n  };\n\n  onSelectContact = (value, idx) => {\n    const selected = this.props.showContactDisplayPlaceholder\n      ? parseInt(idx, 10) - 1\n      : parseInt(idx, 10);\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (this.props.autoLog) {\n      this.logConversation({ redirect: false, selected, prefill: false });\n    }\n  };\n\n  getMessageListHeight() {\n    const headerHeight = 41;\n    const alertHeight = 88;\n    if (this.props.restrictSendMessage?.(this.getSelectedContact())) {\n      return `calc(100% - ${alertHeight + headerHeight}px)`;\n    }\n    return `calc(100% - ${this.state.inputHeight + headerHeight}px)`;\n  }\n\n  getSelectedContact = (selected = this.state.selected) => {\n    if (!this.props.conversation) {\n      return null;\n    }\n    const contactMatches = this.props.conversation.correspondentMatches;\n    return (\n      (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null\n    );\n  };\n\n  getInitialContactIndex(nextProps = this.props) {\n    const {\n      correspondentMatches,\n      lastMatchedCorrespondentEntity,\n      conversationMatches,\n    } = nextProps.conversation;\n    let index = null;\n    const correspondentMatchId =\n      (lastMatchedCorrespondentEntity && lastMatchedCorrespondentEntity.id) ||\n      (conversationMatches[0] && conversationMatches[0].id);\n    if (correspondentMatchId) {\n      index = correspondentMatches.findIndex(\n        (contact) => contact.id === correspondentMatchId,\n      );\n      if (index > -1) return index;\n    }\n    return -1;\n  }\n\n  getPhoneNumber() {\n    const { conversation: { correspondents = [] } = {} } = this.props;\n    return (\n      (correspondents.length === 1 &&\n        (correspondents[0].phoneNumber || correspondents[0].extensionNumber)) ||\n      undefined\n    );\n  }\n\n  getGroupPhoneNumbers() {\n    const { conversation: { correspondents = [] } = {} } = this.props;\n    const groupNumbers =\n      correspondents.length > 1\n        ? correspondents.map(\n            (correspondent) =>\n              correspondent.extensionNumber ||\n              correspondent.phoneNumber ||\n              undefined,\n          )\n        : null;\n    return groupNumbers;\n  }\n\n  getFallbackContactName() {\n    const { conversation: { correspondents = [] } = {} } = this.props;\n    return (correspondents.length === 1 && correspondents[0].name) || undefined;\n  }\n\n  loadConversation() {\n    this.props.loadConversation(this.props.conversationId);\n    this.setState({ loaded: true });\n  }\n\n  async logConversation({ redirect = true, selected, prefill = true } = {}) {\n    if (\n      typeof this.props.onLogConversation === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogConversation({\n        correspondentEntity: this.getSelectedContact(selected),\n        conversationId: this.props.conversation.conversationId,\n        redirect,\n        prefill,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n\n  logConversation = this.logConversation.bind(this);\n\n  render() {\n    if (!this.state.loaded) {\n      return (\n        <div className={styles.root}>\n          <SpinnerOverlay />\n        </div>\n      );\n    }\n    let conversationBody = null;\n    const loading = this.props.showSpinner;\n    const { recipients, messageSubjectRenderer } = this.props;\n    if (!loading) {\n      conversationBody = (\n        <ConversationMessageList\n          currentLocale={this.props.currentLocale}\n          height={this.getMessageListHeight()}\n          messages={this.props.messages}\n          className={styles.conversationBody}\n          dateTimeFormatter={this.props.dateTimeFormatter}\n          showSender={recipients && recipients.length > 1}\n          messageSubjectRenderer={messageSubjectRenderer}\n          formatPhone={this.props.formatPhone}\n          loadingNextPage={this.props.loadingNextPage}\n          loadPreviousMessages={this.props.loadPreviousMessages}\n          onAttachmentDownload={this.props.onAttachmentDownload}\n        />\n      );\n    }\n    const {\n      isLogging,\n      conversationMatches,\n      correspondentMatches,\n    } = this.props.conversation;\n    const groupNumbers = this.getGroupPhoneNumbers();\n    const phoneNumber = this.getPhoneNumber();\n    const fallbackName = this.getFallbackContactName();\n    const extraButton = this.props.renderExtraButton\n      ? this.props.renderExtraButton(this.props.conversation, {\n          logConversation: this.logConversation,\n          isLogging: isLogging || this.state.isLogging,\n        })\n      : null;\n    const logButton =\n      this.props.onLogConversation && !this.props.renderExtraButton ? (\n        <LogButton\n          className={styles.logButton}\n          onLog={this.logConversation}\n          disableLinks={this.props.disableLinks}\n          isLogged={conversationMatches.length > 0}\n          isLogging={isLogging || this.state.isLogging}\n          currentLocale={this.props.currentLocale}\n        />\n      ) : null;\n    return (\n      <div className={styles.root}>\n        <div data-sign=\"conversationPanel\" className={styles.header}>\n          <ContactDisplay\n            brand={this.props.brand}\n            className={styles.contactDisplay}\n            selectClassName={styles.contactDisplaySelect}\n            contactMatches={correspondentMatches || []}\n            selected={this.state.selected}\n            onSelectContact={this.onSelectContact}\n            disabled={this.props.disableLinks}\n            isLogging={isLogging || this.state.isLogging}\n            fallBackName={fallbackName}\n            areaCode={this.props.areaCode}\n            countryCode={this.props.countryCode}\n            phoneNumber={phoneNumber}\n            groupNumbers={groupNumbers}\n            showType={false}\n            currentLocale={this.props.currentLocale}\n            enableContactFallback={this.props.enableContactFallback}\n            showPlaceholder={this.props.showContactDisplayPlaceholder}\n            sourceIcons={this.props.sourceIcons}\n            phoneTypeRenderer={this.props.phoneTypeRenderer}\n            phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n            showGroupNumberName={this.props.showGroupNumberName}\n          />\n          <a\n            onClick={() => this.props.goBack()}\n            data-sign=\"backButton\"\n            className={styles.backButton}\n          >\n            <span className={dynamicsFont.arrow} />\n          </a>\n          {extraButton && <div className={styles.logButton}>{extraButton}</div>}\n          {logButton}\n        </div>\n        {conversationBody}\n        {this.props.restrictSendMessage?.(this.getSelectedContact()) ? (\n          <RcAlert severity=\"error\" className={styles.alert}>\n            This contact is on a Do Not Contact list.\n          </RcAlert>\n        ) : (\n          <MessageInput\n            value={this.props.messageText}\n            onChange={this.props.updateMessageText}\n            disabled={this.props.sendButtonDisabled}\n            currentLocale={this.props.currentLocale}\n            onSend={this.onSend}\n            onHeightChange={this.onInputHeightChange}\n            inputExpandable={this.props.inputExpandable}\n            attachments={this.props.attachments}\n            supportAttachment={this.props.supportAttachment}\n            addAttachment={this.props.addAttachment}\n            removeAttachment={this.props.removeAttachment}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nConversationPanel.propTypes = {\n  brand: PropTypes.string.isRequired,\n  replyToReceivers: PropTypes.func.isRequired,\n  messages: ConversationMessageList.propTypes.messages,\n  updateMessageText: PropTypes.func,\n  messageText: PropTypes.string,\n  recipients: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  disableLinks: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  onLogConversation: PropTypes.func,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  showGroupNumberName: PropTypes.bool,\n  messageSubjectRenderer: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  readMessages: PropTypes.func.isRequired,\n  loadPreviousMessages: PropTypes.func.isRequired,\n  unloadConversation: PropTypes.func.isRequired,\n  perPage: PropTypes.number,\n  conversationId: PropTypes.string.isRequired,\n  loadConversation: PropTypes.func,\n  renderExtraButton: PropTypes.func,\n  loadingNextPage: PropTypes.bool,\n  inputExpandable: PropTypes.bool,\n  attachments: PropTypes.arrayOf(\n    PropTypes.shape({\n      size: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  ),\n  supportAttachment: PropTypes.bool,\n  addAttachment: PropTypes.func,\n  removeAttachment: PropTypes.func,\n  onAttachmentDownload: PropTypes.func,\n  restrictSendMessage: PropTypes.func,\n};\nConversationPanel.defaultProps = {\n  disableLinks: false,\n  onLogConversation: undefined,\n  autoLog: false,\n  enableContactFallback: undefined,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  showGroupNumberName: false,\n  messageText: '',\n  updateMessageText: () => null,\n  messageSubjectRenderer: undefined,\n  perPage: undefined,\n  loadConversation: () => null,\n  renderExtraButton: undefined,\n  loadingNextPage: false,\n  inputExpandable: undefined,\n  attachments: [],\n  supportAttachment: false,\n  addAttachment: () => null,\n  removeAttachment: () => null,\n  onAttachmentDownload: undefined,\n  restrictSendMessage: undefined,\n};\n\nexport default ConversationPanel;\n"],"file":"index.js"}