{"version":3,"sources":["components/RecentActivityNavigationButton/index.js"],"names":["NavigationButton","active","icon","label","noticeCounts","onClick","width","notice","styles","notices","navigationButton","iconHolder","propTypes","PropTypes","node","isRequired","bool","string","number","oneOfType","func","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,gBAAT,OAOZ;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,KACC,QADDA,KACC;AACD,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIH,YAAY,IAAIA,YAAY,GAAG,CAAnC,EAAsC;AACpC,QAAIA,YAAY,GAAG,EAAnB,EAAuB;AACrBG,MAAAA,MAAM,GAAG;AAAK,QAAA,SAAS,EAAEC,mBAAOC;AAAvB,eAAT;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,GAAG;AAAK,QAAA,SAAS,EAAEC,mBAAOD;AAAvB,SAAgCH,YAAhC,CAAT;AACD;AACF;;AACD,SACE;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,SAAS,EAAE,4BAAWG,mBAAOE,gBAAlB,EAAoCT,MAAM,IAAIO,mBAAOP,MAArD,CAFb;AAGE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAALA;AADK;AAHT,KAOE;AAAK,IAAA,SAAS,EAAEE,mBAAOG,UAAvB;AAAmC,IAAA,KAAK,EAAER;AAA1C,KACE;AAAK,IAAA,SAAS,EAAEK,mBAAON;AAAvB,KAA8BA,IAA9B,CADF,EAEGK,MAFH,CAPF,CADF;AAcD;;AACDP,gBAAgB,CAACY,SAAjB,GAA6B;AAC3BV,EAAAA,IAAI,EAAEW,sBAAUC,IAAV,CAAeC,UADM;AAE3Bd,EAAAA,MAAM,EAAEY,sBAAUG,IAFS;AAG3Bb,EAAAA,KAAK,EAAEU,sBAAUI,MAHU;AAI3Bb,EAAAA,YAAY,EAAES,sBAAUK,MAJG;AAK3BZ,EAAAA,KAAK,EAAEO,sBAAUM,SAAV,CAAoB,CAACN,sBAAUK,MAAX,EAAmBL,sBAAUI,MAA7B,CAApB,EAA0DF,UALtC;AAM3BV,EAAAA,OAAO,EAAEQ,sBAAUO;AANQ,CAA7B;AAQApB,gBAAgB,CAACqB,YAAjB,GAAgC;AAC9BpB,EAAAA,MAAM,EAAE,KADsB;AAE9BE,EAAAA,KAAK,EAAEmB,SAFuB;AAG9BlB,EAAAA,YAAY,EAAEkB,SAHgB;AAI9BjB,EAAAA,OAAO,EAAEiB;AAJqB,CAAhC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nexport default function NavigationButton({\n  active,\n  icon,\n  label,\n  noticeCounts,\n  onClick,\n  width,\n}) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notices}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n  return (\n    <div\n      onClick={onClick}\n      className={classnames(styles.navigationButton, active && styles.active)}\n      style={{\n        width,\n      }}\n    >\n      <div className={styles.iconHolder} title={label}>\n        <div className={styles.icon}>{icon}</div>\n        {notice}\n      </div>\n    </div>\n  );\n}\nNavigationButton.propTypes = {\n  icon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onClick: PropTypes.func,\n};\nNavigationButton.defaultProps = {\n  active: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n};\n"],"file":"index.js"}