{"version":3,"sources":["components/GlipMarkdown/index.js"],"names":["ImageRender","props","alt","atRender","AtRender","src","replace","propTypes","PropTypes","string","isRequired","func","defaultProps","undefined","LinkRender","href","title","children","node","TextRender","map","child","split","reduce","lines","line","length","push","backgroundImage","emojiones","Markdown","className","text","renderers","image","link","paragraph","styles","root"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport ReactMarkdown from 'react-markdown';\nimport Emojify from 'react-emojione';\nimport emojiones from '../../assets/images/emojione.png';\n\nimport styles from './styles.scss';\n\nfunction ImageRender(props) {\n  if (props.alt === ':Person' || props.alt === ':Team') {\n    if (typeof props.atRender === 'function') {\n      const AtRender = props.atRender;\n      return <AtRender id={props.src} type={props.alt.replace(':', '')} />;\n    }\n    return <a href={`#${props.src}`}>@{props.src}</a>;\n  }\n  return <img src={props.src} alt={props.alt} />;\n}\n\nImageRender.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  atRender: PropTypes.func,\n};\n\nImageRender.defaultProps = {\n  alt: undefined,\n  atRender: undefined,\n};\n\nfunction LinkRender(props) {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={props.href}\n      title={props.title}\n    >\n      {props.children}\n    </a>\n  );\n}\n\nLinkRender.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nLinkRender.defaultProps = {\n  title: undefined,\n};\n\nfunction TextRender(props) {\n  const children = props.children.map((child) => {\n    if (child && child.split) {\n      return child.split('\\n').reduce((lines, line) => {\n        if (lines.length > 0) {\n          lines.push(<br />);\n        }\n        lines.push(line);\n        return lines;\n      }, []);\n    }\n    return child;\n  });\n  return (\n    <p>\n      <Emojify\n        style={{\n          backgroundImage: `url(\"${emojiones}\")`,\n        }}\n      >\n        {children}\n      </Emojify>\n    </p>\n  );\n}\n\nTextRender.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nfunction Markdown({ className, text, atRender }) {\n  const renderers = {\n    image: (props) => <ImageRender {...props} atRender={atRender} />,\n    link: LinkRender,\n    paragraph: TextRender,\n  };\n  return (\n    <div className={classnames(styles.root, className)}>\n      <ReactMarkdown\n        className={styles['markdown-body']}\n        source={text}\n        renderers={renderers}\n      />\n    </div>\n  );\n  /* eslint-enable */\n}\n\nMarkdown.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  atRender: PropTypes.func,\n};\n\nMarkdown.defaultProps = {\n  className: undefined,\n  atRender: undefined,\n};\n\nexport default Markdown;\n"],"file":"index.js"}