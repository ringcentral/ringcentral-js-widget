{"version":3,"sources":["components/ContactDetails/components/PhoneSection.tsx"],"names":["PhoneList","label","children","styles","item","content","PhoneListItem","contact","currentLocale","disableLinks","formatNumber","internalSmsPermission","isClickToDialEnabled","isCallButtonDisabled","isClickToTextEnabled","isMultipleSiteEnabled","onClickToDial","onClickToSMS","outboundSmsPermission","phoneNumber","rawPhoneNumber","phoneType","formattedNumber","displayedPhoneNumber","usedPhoneNumber","showCallButton","phoneTypes","fax","showTextButton","extension","text","number","menu","disabled","i18n","getString","dynamicsFont","call","composeText","PhoneSection","phoneNumbers","length","sortedPhoneNumbers","phoneMap","acc","lastType","map","push","section","contacts"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;;;AAiBA,IAAMA,SAA4C,GAAG,SAA/CA,SAA+C,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5E,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,kBACE;AAAK,IAAA,SAAS,EAAED,mBAAOF;AAAvB,kBACE,8CAAOA,KAAP,CADF,CADF,eAIE;AAAI,IAAA,SAAS,EAAEE,mBAAOE;AAAtB,KAAgCH,QAAhC,CAJF,CADF;AAQD,CATD;;AA0BA,IAAMI,aAAoD,GAAG,SAAvDA,aAAuD,QAgBvD;AAAA,MAfJC,OAeI,SAfJA,OAeI;AAAA,MAdJC,aAcI,SAdJA,aAcI;AAAA,MAbJC,YAaI,SAbJA,YAaI;AAAA,MAZJC,YAYI,SAZJA,YAYI;AAAA,MAXJC,qBAWI,SAXJA,qBAWI;AAAA,MAVJC,oBAUI,SAVJA,oBAUI;AAAA,MATJC,oBASI,SATJA,oBASI;AAAA,MARJC,oBAQI,SARJA,oBAQI;AAAA,MAPJC,qBAOI,SAPJA,qBAOI;AAAA,MANJC,aAMI,SANJA,aAMI;AAAA,MALJC,YAKI,SALJA,YAKI;AAAA,MAJJC,qBAII,SAJJA,qBAII;AAAA,MAHJC,WAGI,SAHJA,WAGI;AAAA,MAFJC,cAEI,SAFJA,cAEI;AAAA,MADJC,SACI,SADJA,SACI;AACJ,MAAMC,eAAe,GAAGZ,YAAY,CAACS,WAAD,CAApC,CADI,CAEJ;;AACA,MAAMI,oBAAoB,GAAGH,cAAc,IAAIE,eAA/C,CAHI,CAIJ;AACA;;AACA,MAAME,eAAe,GAAGT,qBAAqB,GAAGO,eAAH,GAAqBH,WAAlE;AACA,MAAMM,cAAc,GAAGb,oBAAoB,IAAIS,SAAS,KAAKK,uBAAWC,GAAxE;AACA,MAAMC,cAAc,GAAG,EACrB,CAACd,oBAAD,IACAO,SAAS,KAAKK,uBAAWC,GADzB,IAECN,SAAS,KAAKK,uBAAWG,SAAzB,IAAsC,CAAClB,qBAFxC,IAGCU,SAAS,KAAKK,uBAAWG,SAAzB,IAAsC,CAACX,qBAJnB,CAAvB;AAMA,sBACE,yDACE;AAAK,IAAA,SAAS,EAAE,4BAAWf,mBAAO2B,IAAlB,EAAwB3B,mBAAO4B,MAA/B;AAAhB,kBACE;AAAM,iBAAU,eAAhB;AAAgC,IAAA,KAAK,EAAEP;AAAvC,KACGD,oBADH,CADF,CADF,eAME;AAAK,IAAA,SAAS,EAAEpB,mBAAO6B;AAAvB,KACGP,cAAc,gBACb;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,4BAAWZ,oBAAoB,IAAIV,mBAAO8B,QAA1C,CAFb;AAGE,IAAA,KAAK,YAAKC,iBAAKC,SAAL,CACR,MADQ,EAER3B,aAFQ,CAAL,cAGAgB,eAHA,CAHP;AAOE,IAAA,QAAQ,EAAEX,oBAPZ;AAQE,IAAA,OAAO,EAAE;AAAA,aAAMG,aAAa,CAACT,OAAD,EAAUiB,eAAV,CAAnB;AAAA;AARX,kBAUE;AAAG,IAAA,SAAS,EAAEY,yBAAaC;AAA3B,IAVF,CADa,GAaX,IAdN,EAeGT,cAAc,gBACb;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,4BAAWnB,YAAY,IAAIN,mBAAO8B,QAAlC,CAFb;AAGE,IAAA,KAAK,YAAKC,iBAAKC,SAAL,CACR,MADQ,EAER3B,aAFQ,CAAL,cAGAgB,eAHA,CAHP;AAOE,IAAA,QAAQ,EAAEf,YAPZ;AAQE,IAAA,OAAO,EAAE;AAAA,aAAMQ,YAAY,CAACV,OAAD,EAAUiB,eAAV,CAAlB;AAAA;AARX,kBAUE;AAAG,IAAA,SAAS,EAAEY,yBAAaE;AAA3B,IAVF,CADa,GAaX,IA5BN,CANF,CADF;AAuCD,CArED;;AAsFO,IAAMC,YAAkD,GAAG,SAArDA,YAAqD,QAa5D;AAAA,MAZJhC,OAYI,SAZJA,OAYI;AAAA,MAXJC,aAWI,SAXJA,aAWI;AAAA,MAVJC,YAUI,SAVJA,YAUI;AAAA,MATJG,oBASI,SATJA,oBASI;AAAA,MARJC,oBAQI,SARJA,oBAQI;AAAA,MAPJC,oBAOI,SAPJA,oBAOI;AAAA,MANJC,qBAMI,SANJA,qBAMI;AAAA,MALJL,YAKI,SALJA,YAKI;AAAA,MAJJC,qBAII,SAJJA,qBAII;AAAA,MAHJK,aAGI,SAHJA,aAGI;AAAA,MAFJC,YAEI,SAFJA,YAEI;AAAA,MADJC,qBACI,SADJA,qBACI;;AACJ,MAAIX,OAAO,IAAIA,OAAO,CAACiC,YAAnB,IAAmCjC,OAAO,CAACiC,YAAR,CAAqBC,MAA5D,EAAoE;AAClE,QAAMC,kBAAkB,GAAG,uCACzB,yCAAmBnC,OAAO,CAACiC,YAA3B,CADyB,CAA3B;AAGA,QAAMG,QAAQ,GAAG,mBACf,UAACC,GAAD,EAAMxC,IAAN,EAAe;AACb,UAAIA,IAAI,CAACiB,SAAL,KAAmBuB,GAAG,CAACC,QAA3B,EAAqC;AACnCD,QAAAA,GAAG,CAACC,QAAJ,GAAezC,IAAI,CAACiB,SAApB;AACAuB,QAAAA,GAAG,CAACE,GAAJ,CAAQ1C,IAAI,CAACiB,SAAb,IAA0B,EAA1B;AACD;;AACDuB,MAAAA,GAAG,CAACE,GAAJ,CAAQ1C,IAAI,CAACiB,SAAb,EAAwB0B,IAAxB,CAA6B3C,IAA7B;AACA,aAAOwC,GAAP;AACD,KARc,EASf;AACEE,MAAAA,GAAG,EAAE,EADP;AAEED,MAAAA,QAAQ,EAAE;AAFZ,KATe,EAafH,kBAbe,EAcfI,GAdF;AAeA,wBACE;AACE,MAAA,SAAS,EAAE,4BAAW3C,mBAAO6C,OAAlB,EAA2B7C,mBAAO8C,QAAlC,CADb;AAEE,oBAAW;AAFb,OAIG,gBACC,UAAC5B,SAAD;AAAA,0BACE,gCAAC,SAAD;AACE,QAAA,GAAG,EAAEA,SADP;AAEE,QAAA,KAAK,EAAEa,iBAAKC,SAAL,CAAed,SAAf,EAA0Bb,aAA1B;AAFT,SAIG,gBACC;AAAA,YAAGW,WAAH,SAAGA,WAAH;AAAA,YAAgBC,cAAhB,SAAgBA,cAAhB;AAAA,4BACE,gCAAC,aAAD;AACE,UAAA,GAAG,EAAED,WADP;AAEE,UAAA,WAAW,EAAEA,WAFf;AAGE,UAAA,cAAc,EAAEC,cAHlB;AAIE,UAAA,SAAS,EAAEC,SAJb;AAKE,UAAA,OAAO,EAAEd,OALX;AAME,UAAA,YAAY,EAAEG,YANhB;AAOE,UAAA,aAAa,EAAEF,aAPjB;AAQE,UAAA,oBAAoB,EAAEI,oBARxB;AASE,UAAA,oBAAoB,EAAEC,oBATxB;AAUE,UAAA,oBAAoB,EAAEC,oBAVxB;AAWE,UAAA,qBAAqB,EAAEC,qBAXzB;AAYE,UAAA,YAAY,EAAEN,YAZhB;AAaE,UAAA,qBAAqB,EAAEE,qBAbzB;AAcE,UAAA,aAAa,EAAEK,aAdjB;AAeE,UAAA,YAAY,EAAEC,YAfhB;AAgBE,UAAA,qBAAqB,EAAEC;AAhBzB,UADF;AAAA,OADD,EAqBCyB,QAAQ,CAACtB,SAAD,CArBT,CAJH,CADF;AAAA,KADD,EA+BC,iBAAKsB,QAAL,CA/BD,CAJH,CADF;AAwCD;;AACD,SAAO,IAAP;AACD,CA3EM","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport classnames from 'classnames';\nimport { map, reduce, keys } from 'ramda';\nimport phoneTypes from 'ringcentral-integration/enums/phoneTypes';\nimport {\n  sortByPhoneTypes,\n  filterByPhoneTypes,\n} from 'ringcentral-integration/lib/phoneTypeHelper';\nimport { ContactModel } from 'ringcentral-integration/models/Contact.model';\nimport dynamicsFont from '../../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from '../styles.scss';\nimport i18n from '../i18n';\nimport {\n  onClickToSMS,\n  formatNumber,\n  onClickToDial,\n} from '../ContactDetails.interface';\n\n/**\n * TODO\n * 1. Refactor phone type and phoneTypeOrder into modules\n * 2. RawNumberDisplay\n */\n\ninterface PhoneListProps {\n  label: string;\n}\n\nconst PhoneList: FunctionComponent<PhoneListProps> = ({ label, children }) => {\n  return (\n    <div className={styles.item}>\n      <div className={styles.label}>\n        <span>{label}</span>\n      </div>\n      <ul className={styles.content}>{children}</ul>\n    </div>\n  );\n};\n\ninterface PhoneListItemProps extends formatNumber, onClickToDial, onClickToSMS {\n  currentLocale: string;\n  contact: ContactModel;\n  disableLinks: boolean;\n  internalSmsPermission: boolean;\n  isClickToDialEnabled: boolean;\n  isCallButtonDisabled: boolean;\n  isClickToTextEnabled: boolean;\n  isMultipleSiteEnabled: boolean;\n  outboundSmsPermission: boolean;\n  phoneNumber: string;\n  rawPhoneNumber: string;\n  phoneType: string;\n}\n\nconst PhoneListItem: FunctionComponent<PhoneListItemProps> = ({\n  contact,\n  currentLocale,\n  disableLinks,\n  formatNumber,\n  internalSmsPermission,\n  isClickToDialEnabled,\n  isCallButtonDisabled,\n  isClickToTextEnabled,\n  isMultipleSiteEnabled,\n  onClickToDial,\n  onClickToSMS,\n  outboundSmsPermission,\n  phoneNumber,\n  rawPhoneNumber,\n  phoneType,\n}) => {\n  const formattedNumber = formatNumber(phoneNumber);\n  // User will see, for example: (650) 123-4567\n  const displayedPhoneNumber = rawPhoneNumber || formattedNumber;\n  // User will use, for example: +16501234567\n  // In multi-site feature, \"user will see\" and \"user will use\" are the same\n  const usedPhoneNumber = isMultipleSiteEnabled ? formattedNumber : phoneNumber;\n  const showCallButton = isClickToDialEnabled && phoneType !== phoneTypes.fax;\n  const showTextButton = !(\n    !isClickToTextEnabled ||\n    phoneType === phoneTypes.fax ||\n    (phoneType === phoneTypes.extension && !internalSmsPermission) ||\n    (phoneType !== phoneTypes.extension && !outboundSmsPermission)\n  );\n  return (\n    <li>\n      <div className={classnames(styles.text, styles.number)}>\n        <span data-sign=\"contactNumber\" title={usedPhoneNumber}>\n          {displayedPhoneNumber}\n        </span>\n      </div>\n      <div className={styles.menu}>\n        {showCallButton ? (\n          <button\n            type=\"button\"\n            className={classnames(isCallButtonDisabled && styles.disabled)}\n            title={`${i18n.getString(\n              'call',\n              currentLocale,\n            )} ${usedPhoneNumber}`}\n            disabled={isCallButtonDisabled}\n            onClick={() => onClickToDial(contact, usedPhoneNumber)}\n          >\n            <i className={dynamicsFont.call} />\n          </button>\n        ) : null}\n        {showTextButton ? (\n          <button\n            type=\"button\"\n            className={classnames(disableLinks && styles.disabled)}\n            title={`${i18n.getString(\n              'text',\n              currentLocale,\n            )} ${usedPhoneNumber}`}\n            disabled={disableLinks}\n            onClick={() => onClickToSMS(contact, usedPhoneNumber)}\n          >\n            <i className={dynamicsFont.composeText} />\n          </button>\n        ) : null}\n      </div>\n    </li>\n  );\n};\n\nexport interface PhoneSectionProps\n  extends formatNumber,\n    onClickToDial,\n    onClickToSMS {\n  currentLocale: string;\n  contact: ContactModel;\n  disableLinks: boolean;\n  isClickToDialEnabled: boolean;\n  isCallButtonDisabled: boolean;\n  isClickToTextEnabled: boolean;\n  isMultipleSiteEnabled: boolean;\n  internalSmsPermission: boolean;\n  outboundSmsPermission: boolean;\n}\n\nexport const PhoneSection: FunctionComponent<PhoneSectionProps> = ({\n  contact,\n  currentLocale,\n  disableLinks,\n  isClickToDialEnabled,\n  isCallButtonDisabled,\n  isClickToTextEnabled,\n  isMultipleSiteEnabled,\n  formatNumber,\n  internalSmsPermission,\n  onClickToDial,\n  onClickToSMS,\n  outboundSmsPermission,\n}) => {\n  if (contact && contact.phoneNumbers && contact.phoneNumbers.length) {\n    const sortedPhoneNumbers = sortByPhoneTypes(\n      filterByPhoneTypes(contact.phoneNumbers),\n    );\n    const phoneMap = reduce(\n      (acc, item) => {\n        if (item.phoneType !== acc.lastType) {\n          acc.lastType = item.phoneType;\n          acc.map[item.phoneType] = [];\n        }\n        acc.map[item.phoneType].push(item);\n        return acc;\n      },\n      {\n        map: {},\n        lastType: null,\n      },\n      sortedPhoneNumbers,\n    ).map;\n    return (\n      <section\n        className={classnames(styles.section, styles.contacts)}\n        aria-label=\"phone\"\n      >\n        {map(\n          (phoneType) => (\n            <PhoneList\n              key={phoneType}\n              label={i18n.getString(phoneType, currentLocale)}\n            >\n              {map(\n                ({ phoneNumber, rawPhoneNumber }) => (\n                  <PhoneListItem\n                    key={phoneNumber}\n                    phoneNumber={phoneNumber}\n                    rawPhoneNumber={rawPhoneNumber}\n                    phoneType={phoneType}\n                    contact={contact}\n                    formatNumber={formatNumber}\n                    currentLocale={currentLocale}\n                    isClickToDialEnabled={isClickToDialEnabled}\n                    isCallButtonDisabled={isCallButtonDisabled}\n                    isClickToTextEnabled={isClickToTextEnabled}\n                    isMultipleSiteEnabled={isMultipleSiteEnabled}\n                    disableLinks={disableLinks}\n                    internalSmsPermission={internalSmsPermission}\n                    onClickToDial={onClickToDial}\n                    onClickToSMS={onClickToSMS}\n                    outboundSmsPermission={outboundSmsPermission}\n                  />\n                ),\n                phoneMap[phoneType],\n              )}\n            </PhoneList>\n          ),\n          keys(phoneMap),\n        )}\n      </section>\n    );\n  }\n  return null;\n};\n"],"file":"PhoneSection.js"}