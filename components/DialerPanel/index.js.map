{"version":3,"sources":["components/DialerPanel/index.js"],"names":["DialerPanel","currentLocale","callButtonDisabled","className","dialButtonsClassName","onToNumberChange","onCallButtonClick","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","showSpinner","dialButtonVolume","dialButtonMuted","searchContact","searchContactList","recipients","recipient","clearToNumber","setRecipient","clearRecipient","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","showFromField","children","withTabs","inConference","isLastInputFromDialpad","useV2","inputEl","current","focus","input","styles","inputField","recipientsField","root","dialButtons","dialPad","key","callBtnRow","callBtnRowWithTabs","callBtnRowInConference","callBtn","dialBtn","disabled","AnswerIcon","propTypes","PropTypes","string","isRequired","func","bool","arrayOf","shape","phoneNumber","usageType","number","name","entityType","phoneType","node","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DialPad from '../DialPad';\nimport RecipientsInput from '../RecipientsInput';\nimport { RecipientsInputV2 } from '../RecipientsInputV2';\nimport FromField from '../FromField';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport CircleButton from '../CircleButton';\nimport AnswerIcon from '../../assets/images/Answer.svg';\n\nimport styles from './styles.scss';\n\nfunction DialerPanel({\n  currentLocale,\n  callButtonDisabled,\n  className,\n  dialButtonsClassName,\n  onToNumberChange,\n  onCallButtonClick,\n  toNumber,\n  fromNumber,\n  fromNumbers,\n  changeFromNumber,\n  formatPhone,\n  isWebphoneMode,\n  showSpinner,\n  dialButtonVolume,\n  dialButtonMuted,\n  searchContact,\n  searchContactList,\n  recipients,\n  recipient,\n  clearToNumber,\n  setRecipient,\n  clearRecipient,\n  phoneTypeRenderer,\n  phoneSourceNameRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n  autoFocus,\n  showFromField = true,\n  children,\n  withTabs,\n  inConference,\n  isLastInputFromDialpad,\n  useV2,\n}) {\n  const inputEl = useRef(null);\n  useEffect(() => {\n    if (useV2 && autoFocus && inputEl.current) {\n      inputEl.current.focus();\n    }\n  }, []);\n\n  const input = useV2 ? (\n    <RecipientsInputV2\n      ref={inputEl}\n      value={toNumber}\n      onInputChange={onToNumberChange}\n      onInputClear={clearToNumber}\n      recipients={recipients}\n      addToRecipients={setRecipient}\n      removeFromRecipients={clearRecipient}\n      searchContactList={searchContactList}\n      formatContactPhone={formatPhone}\n      currentLocale={currentLocale}\n      phoneTypeRenderer={phoneTypeRenderer}\n      phoneSourceNameRenderer={phoneSourceNameRenderer}\n      contactInfoRenderer={recipientsContactInfoRenderer}\n      contactPhoneRenderer={recipientsContactPhoneRenderer}\n      isLastInputFromDialpad={isLastInputFromDialpad}\n      titleEnabled\n      className={\n        !showFromField\n          ? classnames(styles.inputField, styles.recipientsField)\n          : null\n      }\n    />\n  ) : (\n    <RecipientsInput\n      value={toNumber}\n      onChange={onToNumberChange}\n      onClean={clearToNumber}\n      recipient={recipient}\n      addToRecipients={setRecipient}\n      removeFromRecipients={clearRecipient}\n      searchContact={searchContact}\n      searchContactList={searchContactList}\n      formatContactPhone={formatPhone}\n      currentLocale={currentLocale}\n      phoneTypeRenderer={phoneTypeRenderer}\n      phoneSourceNameRenderer={phoneSourceNameRenderer}\n      contactInfoRenderer={recipientsContactInfoRenderer}\n      contactPhoneRenderer={recipientsContactPhoneRenderer}\n      isLastInputFromDialpad={isLastInputFromDialpad}\n      titleEnabled\n      autoFocus={autoFocus}\n      className={\n        !showFromField\n          ? classnames(styles.inputField, styles.recipientsField)\n          : null\n      }\n    />\n  );\n  return (\n    <div className={classnames(styles.root, className)}>\n      {input}\n      {showFromField ? (\n        <div className={styles.inputField}>\n          <FromField\n            fromNumber={fromNumber}\n            fromNumbers={fromNumbers}\n            onChange={changeFromNumber}\n            formatPhone={formatPhone}\n            currentLocale={currentLocale}\n            hidden={!isWebphoneMode}\n          />\n        </div>\n      ) : null}\n      <div className={classnames(styles.dialButtons, dialButtonsClassName)}>\n        <DialPad\n          className={styles.dialPad}\n          onButtonOutput={(key) => {\n            onToNumberChange(toNumber + key, true);\n            if (inputEl.current) {\n              inputEl.current.focus();\n            }\n          }}\n          dialButtonVolume={dialButtonVolume}\n          dialButtonMuted={dialButtonMuted}\n        />\n        <div\n          className={classnames(\n            styles.callBtnRow,\n            withTabs && styles.callBtnRowWithTabs,\n            inConference && styles.callBtnRowInConference,\n          )}\n        >\n          <div className={styles.callBtn}>\n            <CircleButton\n              dataSign=\"callButton\"\n              className={classnames(\n                styles.dialBtn,\n                callButtonDisabled && styles.disabled,\n              )}\n              onClick={onCallButtonClick}\n              disabled={callButtonDisabled}\n              icon={AnswerIcon}\n              showBorder={false}\n            />\n          </div>\n        </div>\n      </div>\n      {showSpinner ? <SpinnerOverlay /> : null}\n      {children}\n    </div>\n  );\n}\n\nDialerPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  dialButtonsClassName: PropTypes.string,\n  onCallButtonClick: PropTypes.func.isRequired,\n  callButtonDisabled: PropTypes.bool,\n  isWebphoneMode: PropTypes.bool,\n  toNumber: PropTypes.string,\n  onToNumberChange: PropTypes.func,\n  fromNumber: PropTypes.string,\n  fromNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      usageType: PropTypes.string,\n    }),\n  ),\n  changeFromNumber: PropTypes.func,\n  formatPhone: PropTypes.func,\n  showSpinner: PropTypes.bool,\n  dialButtonVolume: PropTypes.number,\n  dialButtonMuted: PropTypes.bool,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      entityType: PropTypes.string.isRequired,\n      phoneType: PropTypes.string.isRequired,\n      phoneNumber: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  recipient: PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  }),\n  recipients: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n  clearToNumber: PropTypes.func.isRequired,\n  setRecipient: PropTypes.func.isRequired,\n  clearRecipient: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  showFromField: PropTypes.bool,\n  children: PropTypes.node,\n  withTabs: PropTypes.bool,\n  inConference: PropTypes.bool,\n  isLastInputFromDialpad: PropTypes.bool,\n  useV2: PropTypes.bool,\n};\n\nDialerPanel.defaultProps = {\n  className: null,\n  dialButtonsClassName: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: () => null,\n  onToNumberChange: () => null,\n  formatPhone: (phoneNumber) => phoneNumber,\n  showSpinner: false,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n  recipient: [],\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  autoFocus: false,\n  showFromField: true,\n  children: undefined,\n  withTabs: false,\n  inConference: false,\n  isLastInputFromDialpad: false,\n  useV2: false,\n};\n\nexport default DialerPanel;\n"],"file":"index.js"}