{"version":3,"sources":["components/DialerPanel/tests/DialerPanel.spec.tsx"],"names":["wrapper","getCallButton","find","at","getDeleteButton","afterEach","unmount","describe","toNumber","desc","forEach","it","dialout","jest","fn","recipientsInput","RecipientsInput","callButton","expect","prop","toBe","join","simulate","toBeCalled","setToNumber","eventObj","target","value","toBeCalledWith","getDialButtonDisabled","render","attr","dialButtonDisabled","undefined","deleteButton","slice","useFakeTimers","advanceTimersByTime","exists","toBeFalsy","toBeTruthy","dialoutStatus","not","hangup","goToManualDialSettings","manualDialSettings","dialPad","digitButtons","typingIcons","button","i","buttonZero"],"mappings":"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","sourcesContent":["import { ReactWrapper } from 'enzyme';\nimport { act } from 'react-dom/test-utils';\nimport { RecipientsInput } from 'ringcentral-widgets/components/Rcui/RecipientsInput';\n\nimport { DialoutStatusesType } from '../../../enums/dialoutStatus';\nimport { createDialerPanel } from './createDialerPanel';\n\nlet wrapper: ReactWrapper;\n\nconst getCallButton = () => wrapper.find('[data-sign=\"callButton\"]').at(0);\nconst getDeleteButton = () => wrapper.find('[data-sign=\"deleteButton\"]').at(0);\n\nafterEach(async () => {\n  wrapper.unmount();\n});\n\ndescribe('<DialerPanel />', async () => {\n  [\n    { toNumber: '', desc: 'with no number filled' },\n    { toNumber: '6508652493', desc: 'without number filled' },\n  ].forEach(({ toNumber, desc }) => {\n    it(`Default state of dialpad(${desc}): Call Button be highlighted and can be clicked to dialout`, () => {\n      const dialout = jest.fn(() => {});\n      wrapper = createDialerPanel({ toNumber, dialout });\n      const recipientsInput = wrapper.find(RecipientsInput).at(0);\n      const callButton = getCallButton();\n      expect(recipientsInput.prop('value')).toBe(toNumber);\n      expect(callButton.prop<string[]>('color').join(',')).toBe(\n        ['semantic', 'positive'].join(','),\n      );\n      expect(callButton.prop('data-icon')).toBe('answer');\n      callButton.simulate('click');\n      expect(dialout).toBeCalled();\n    });\n  });\n\n  it('User can manually input numbers in the recipientsInput', async () => {\n    const toNumber = '';\n    const setToNumber = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, setToNumber });\n    const recipientsInput = wrapper.find(RecipientsInput).at(0);\n    const eventObj = { target: { value: '1243' } };\n    recipientsInput.find('input').at(0).simulate('change', eventObj);\n    expect(setToNumber).toBeCalledWith('1243');\n  });\n\n  it('dialButtonDisabled can set dial button disable attribute', () => {\n    const getDialButtonDisabled = () =>\n      getCallButton().render().attr('disabled');\n\n    wrapper = createDialerPanel({ dialButtonDisabled: true });\n    expect(getDialButtonDisabled()).toBe('disabled');\n\n    wrapper = createDialerPanel({ dialButtonDisabled: false });\n    expect(getDialButtonDisabled()).toBe(undefined);\n  });\n\n  it('Click Delete Button', async () => {\n    const toNumber = '6508652493';\n    const setToNumber = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, setToNumber });\n\n    const deleteButton = getDeleteButton();\n    deleteButton.simulate('mouseDown');\n    deleteButton.simulate('mouseUp');\n    expect(setToNumber).toBeCalledWith(toNumber.slice(0, -1));\n  });\n\n  it('Long press Delete Button', async () => {\n    jest.useFakeTimers();\n    const toNumber = '6508652493';\n    const setToNumber = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, setToNumber });\n    const deleteButton = getDeleteButton();\n    await act(async () => {\n      deleteButton.simulate('mouseDown');\n      jest.advanceTimersByTime(1100);\n      // here will hiden deleteButton when clear toNumber, so we don't need mouseUp\n      // deleteButton.simulate('mouseUp');\n    });\n    expect(setToNumber).toBeCalledWith('');\n  });\n\n  it('Delete button show switch', async () => {\n    wrapper = createDialerPanel({ toNumber: '' });\n    let deleteButton = getDeleteButton();\n    expect(deleteButton.exists()).toBeFalsy();\n\n    wrapper = createDialerPanel({ toNumber: '6508652493' });\n    deleteButton = getDeleteButton();\n    expect(deleteButton.exists()).toBeTruthy();\n  });\n\n  it(`Dialpad is not allowed to dialout in the state of dialing`, async () => {\n    const toNumber = '6508652493';\n    const dialoutStatus = 'dialing' as DialoutStatusesType;\n    const dialout = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, dialout, dialoutStatus });\n    const callButton = getCallButton();\n    expect(callButton.prop('data-icon')).toBe('hand-up');\n    callButton.simulate('click');\n    expect(dialout).not.toBeCalled();\n  });\n\n  it(`User can hangup a call in the state of callConnected`, async () => {\n    const toNumber = '6508652493';\n    const dialoutStatus = 'callConnected' as DialoutStatusesType;\n    const dialout = jest.fn(() => {});\n    const hangup = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, dialout, hangup, dialoutStatus });\n    const callButton = getCallButton();\n    expect(callButton.prop('data-icon')).toBe('hand-up');\n    callButton.simulate('click');\n    expect(dialout).not.toBeCalled();\n    expect(hangup).toBeCalled();\n  });\n\n  it('User clicks manualDialSettings', () => {\n    const goToManualDialSettings = jest.fn(() => {});\n    wrapper = createDialerPanel({ goToManualDialSettings });\n    const manualDialSettings = wrapper\n      .find('[data-sign=\"manualDialSettings\"]')\n      .at(0);\n    manualDialSettings.simulate('click');\n    expect(goToManualDialSettings).toBeCalled();\n  });\n\n  it(\"User can use digit virtual keyboard to input numbers, and press zero for 1 second will typing '+'\", async () => {\n    jest.useFakeTimers();\n    const toNumber = '1234';\n    const setToNumber = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, setToNumber });\n    const dialPad = wrapper.find('DialPad').at(0);\n    const digitButtons = dialPad.find('button');\n\n    const typingIcons = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '*',\n      '0',\n      '#',\n    ];\n\n    digitButtons.forEach((button, i) => {\n      button.simulate('mousedown');\n      button.simulate('mouseup');\n      expect(setToNumber).toBeCalledWith(`${toNumber}${typingIcons[i]}`);\n    });\n\n    const buttonZero = digitButtons.at(10);\n\n    buttonZero.simulate('mousedown');\n    await act(async () => {\n      jest.advanceTimersByTime(1100);\n    });\n    buttonZero.simulate('mouseup');\n\n    expect(setToNumber).toBeCalledWith('1234+');\n  });\n});\n"],"file":"DialerPanel.spec.js"}