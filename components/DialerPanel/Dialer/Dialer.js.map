{"version":3,"sources":["components/DialerPanel/Dialer/Dialer.tsx"],"names":["Dialer","value","setValue","children","placeholder","inputFocus","setInputFocus","styles","dialerWrapper","recipient","recipientInput","length","substring","dialerPad","addValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAKA;;;;;;;;;;;;;;;;;;;;AAOO,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAKhD;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,WACI,QADJA,WACI;;AAAA,kBACgC,qBAAS,KAAT,CADhC;AAAA;AAAA,MACGC,UADH;AAAA,MACeC,aADf;;AAGJ,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,kBACE;AAAK,IAAA,SAAS,EAAED,mBAAOE;AAAvB,kBACE,gCAAC,gCAAD;AACE,IAAA,KAAK,EAAER,KADT;AAEE,IAAA,SAAS,EAAEM,mBAAOG,cAFpB;AAGE,IAAA,QAAQ,EAAE,kBAACT,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAHZ;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMK,aAAa,CAAC,IAAD,CAAnB;AAAA,KAJX;AAKE,IAAA,MAAM,EAAE;AAAA,aAAMA,aAAa,CAAC,KAAD,CAAnB;AAAA,KALV;AAME,IAAA,QAAQ,EAAE,oBAAM;AACd,UAAIL,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEU,MAAX,EAAmB;AACjBT,QAAAA,QAAQ,CAACD,KAAK,CAACW,SAAN,CAAgB,CAAhB,EAAmBX,KAAK,CAACU,MAAN,GAAe,CAAlC,CAAD,CAAR;AACD;AACF,KAVH;AAWE,IAAA,OAAO,EAAE;AAAA,aAAMT,QAAQ,CAAC,EAAD,CAAd;AAAA,KAXX;AAYE,IAAA,WAAW,EAAEE;AAZf,IADF,CADF,eAiBE;AAAK,IAAA,SAAS,EAAEG,mBAAOM;AAAvB,kBACE,gCAAC,gBAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,QAAD;AAAA,aAAcZ,QAAQ,WAAID,KAAJ,SAAYa,QAAZ,EAAtB;AAAA,KADZ;AAEE,IAAA,wBAAwB,EAAET;AAF5B,IADF,CAjBF,EAuBGF,QAvBH,CADF;AA2BD,CAnCM","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport { DialPad } from 'ringcentral-widgets/components/Rcui/DialPad';\nimport {\n  RecipientsInput,\n  RecipientsInputProps,\n} from 'ringcentral-widgets/components/Rcui/RecipientsInput';\n\nimport styles from './styles.scss';\n\nexport type DialerProps = {\n  value: string;\n  setValue: (value: string) => void;\n} & Pick<RecipientsInputProps, 'placeholder'>;\n\nexport const Dialer: FunctionComponent<DialerProps> = ({\n  value,\n  setValue,\n  children,\n  placeholder,\n}) => {\n  const [inputFocus, setInputFocus] = useState(false);\n\n  return (\n    <div className={styles.dialerWrapper}>\n      <div className={styles.recipient}>\n        <RecipientsInput\n          value={value}\n          className={styles.recipientInput}\n          onChange={(value) => setValue(value)}\n          onFocus={() => setInputFocus(true)}\n          onBlur={() => setInputFocus(false)}\n          onDelete={() => {\n            if (value?.length) {\n              setValue(value.substring(0, value.length - 1));\n            }\n          }}\n          onClear={() => setValue('')}\n          placeholder={placeholder}\n        />\n      </div>\n      <div className={styles.dialerPad}>\n        <DialPad\n          onChange={(addValue) => setValue(`${value}${addValue}`)}\n          shouldHandleKeyboardEvts={inputFocus}\n        />\n      </div>\n      {children}\n    </div>\n  );\n};\n"],"file":"Dialer.js"}