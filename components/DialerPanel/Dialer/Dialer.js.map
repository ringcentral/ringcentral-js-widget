{"version":3,"sources":["components/DialerPanel/Dialer/Dialer.tsx"],"names":["Dialer","value","setValue","children","placeholder","actionRef","styles","dialerWrapper","recipient","recipientInput","current","playAudio","length","substring","dialerPad","addValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAKA;;;;;;;;AAOO,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAKhD;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,MAAMC,SAAS,GAAG,mBAAwB,IAAxB,CAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,kBACE;AAAK,IAAA,SAAS,EAAED,mBAAOE;AAAvB,kBACE,gCAAC,gCAAD;AACE,IAAA,KAAK,EAAEP,KADT;AAEE,IAAA,SAAS,EAAEK,mBAAOG,cAFpB;AAGE,IAAA,QAAQ,EAAE,kBAACR,KAAD,EAAW;AAAA;;AACnBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AAEA,4BAAAI,SAAS,CAACK,OAAV,0EAAmBC,SAAnB,CAA6BV,KAAK,CAACA,KAAK,CAACW,MAAN,GAAe,CAAhB,CAAlC;AACD,KAPH;AAQE,IAAA,QAAQ,EAAE,oBAAM;AACd,UAAIX,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEW,MAAX,EAAmB;AACjBV,QAAAA,QAAQ,CAACD,KAAK,CAACY,SAAN,CAAgB,CAAhB,EAAmBZ,KAAK,CAACW,MAAN,GAAe,CAAlC,CAAD,CAAR;AACD;AACF,KAZH;AAaE,IAAA,OAAO,EAAE;AAAA,aAAMV,QAAQ,CAAC,EAAD,CAAd;AAAA,KAbX;AAcE,IAAA,WAAW,EAAEE;AAdf,IADF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAEE,mBAAOQ;AAAvB,kBACE,gCAAC,gBAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,QAAD;AAAA,aAAcb,QAAQ,WAAID,KAAJ,SAAYc,QAAZ,EAAtB;AAAA,KADZ;AAEE,IAAA,MAAM,EAAEV;AAFV,IADF,CAnBF,EAyBGF,QAzBH,CADF;AA6BD,CArCM","sourcesContent":["import { RcDialPadAction } from '@ringcentral/juno';\nimport React, { FunctionComponent, useRef } from 'react';\nimport { DialPad } from 'ringcentral-widgets/components/Rcui/DialPad';\nimport {\n  RecipientsInput,\n  RecipientsInputProps,\n} from 'ringcentral-widgets/components/Rcui/RecipientsInput';\n\nimport styles from './styles.scss';\n\nexport type DialerProps = {\n  value: string;\n  setValue: (value: string) => void;\n} & Pick<RecipientsInputProps, 'placeholder'>;\n\nexport const Dialer: FunctionComponent<DialerProps> = ({\n  value,\n  setValue,\n  children,\n  placeholder,\n}) => {\n  const actionRef = useRef<RcDialPadAction>(null);\n\n  return (\n    <div className={styles.dialerWrapper}>\n      <div className={styles.recipient}>\n        <RecipientsInput\n          value={value}\n          className={styles.recipientInput}\n          onChange={(value) => {\n            setValue(value);\n\n            actionRef.current?.playAudio(value[value.length - 1]);\n          }}\n          onDelete={() => {\n            if (value?.length) {\n              setValue(value.substring(0, value.length - 1));\n            }\n          }}\n          onClear={() => setValue('')}\n          placeholder={placeholder}\n        />\n      </div>\n      <div className={styles.dialerPad}>\n        <DialPad\n          onChange={(addValue) => setValue(`${value}${addValue}`)}\n          action={actionRef}\n        />\n      </div>\n      {children}\n    </div>\n  );\n};\n"],"file":"Dialer.js"}