{"version":3,"sources":["components/DialerPanel/DialerPanel.tsx"],"names":["dialoutStatusMapping","dialing","callConnected","idle","DialerPanel","dialout","toNumber","currentLocale","size","hasDialer","setToNumber","goToManualDialSettings","checkOnCall","dialoutStatus","dialButtonDisabled","hangup","isIdle","isCallConnected","color","i18n","getString","phoneSvg","handUpSvg","styles","flexFill","link"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,oBAAoB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,UAAf,CADkB;AAE3BC,EAAAA,aAAa,EAAE,CAAC,UAAD,EAAa,UAAb,CAFY;AAG3BC,EAAAA,IAAI,EAAE,CAAC,UAAD,EAAa,UAAb;AAHqB,CAA7B;;AAQA,IAAMC,WAAgD,GAAG,SAAnDA,WAAmD,OAYnD;AAAA,MAXJC,OAWI,QAXJA,OAWI;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,aASI,QATJA,aASI;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,sBAKI,QALJA,sBAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,kBAEI,QAFJA,kBAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,wBAAU,YAAM;AACd,QAAIN,SAAJ,EAAe;AACbG,MAAAA,WAAW;AACZ,KAHa,CAId;;AACD,GALD,EAKG,EALH;;AAOA,MAAI,CAACH,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AACD,MAAMO,MAAM,GAAGH,aAAa,KAAK,MAAjC;AACA,MAAMI,eAAe,GAAGJ,aAAa,KAAK,eAA1C;AAEA,MAAMK,KAAK,GAAIlB,oBAAoB,CAACa,aAAD,CAApB,IACbb,oBAAoB,CAACG,IADvB;AAKA,sBACE,gCAAC,cAAD;AACE,IAAA,KAAK,EAAEG,QADT;AAEE,IAAA,QAAQ,EAAEI,WAFZ;AAGE,IAAA,WAAW,EAAES,iBAAKC,SAAL,CAAe,iBAAf,EAAkCb,aAAlC;AAHf,kBAKE,gCAAC,qBAAD;AACE,IAAA,IAAI,EAAEC,IADR;AAEE,IAAA,KAAK,EAAEU,KAFT;AAGE,iBAAWF,MAAM,GAAG,QAAH,GAAc,SAHjC;AAIE,IAAA,MAAM,EAAEA,MAAM,GAAGK,qBAAH,GAAcC,sBAJ9B;AAKE,iBAAU,YALZ;AAME,IAAA,QAAQ,EAAER,kBANZ;AAOE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIE,MAAJ,EAAY;AACVX,QAAAA,OAAO;AACR,OAFD,MAEO,IAAIY,eAAJ,EAAqB;AAC1BF,QAAAA,MAAM;AACP,OAFM,MAEA,CACL;AACD;AACF;AAfH,IALF,eAsBE;AAAG,IAAA,SAAS,EAAEQ,mBAAOC;AAArB,IAtBF,eAuBE;AAAK,IAAA,SAAS,EAAED,mBAAOE;AAAvB,kBACE,gCAAC,YAAD;AACE,IAAA,IAAI,EAAEjB,IADR;AAEE,IAAA,aAAa,EAAEG,sBAFjB;AAGE,iBAAU;AAHZ,KAKGQ,iBAAKC,SAAL,CAAe,oBAAf,EAAqCb,aAArC,CALH,CADF,CAvBF,CADF;AAmCD,CAlED","sourcesContent":["import { RcFabIconButton, RcLink } from '@ringcentral-integration/rcui';\nimport handUpSvg from '@ringcentral-integration/rcui/icons/icon-hand-up.svg';\nimport phoneSvg from '@ringcentral-integration/rcui/icons/icon-phone.svg';\nimport React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n  EvDialerUIFunctions,\n  EvDialerUIProps,\n} from '../../interfaces/EvDialerUI.interface';\nimport { DeepWriteableValues } from '../../typings/deepWriteableValues';\nimport { Dialer } from './Dialer';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst dialoutStatusMapping = {\n  dialing: ['background', 'disabled'],\n  callConnected: ['semantic', 'negative'],\n  idle: ['semantic', 'positive'],\n} as const;\n\nexport type DialerPanelProps = EvDialerUIProps & EvDialerUIFunctions;\n\nconst DialerPanel: FunctionComponent<DialerPanelProps> = ({\n  dialout,\n  toNumber,\n  currentLocale,\n  size,\n  hasDialer,\n  setToNumber,\n  goToManualDialSettings,\n  checkOnCall,\n  dialoutStatus,\n  dialButtonDisabled,\n  hangup,\n}) => {\n  useEffect(() => {\n    if (hasDialer) {\n      checkOnCall();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!hasDialer) {\n    return null;\n  }\n  const isIdle = dialoutStatus === 'idle';\n  const isCallConnected = dialoutStatus === 'callConnected';\n\n  const color = (dialoutStatusMapping[dialoutStatus] ||\n    dialoutStatusMapping.idle) as DeepWriteableValues<\n    typeof dialoutStatusMapping\n  >;\n\n  return (\n    <Dialer\n      value={toNumber}\n      setValue={setToNumber}\n      placeholder={i18n.getString('dialPlaceholder', currentLocale)}\n    >\n      <RcFabIconButton\n        size={size}\n        color={color}\n        data-icon={isIdle ? 'answer' : 'hand-up'}\n        symbol={isIdle ? phoneSvg : handUpSvg}\n        data-sign=\"callButton\"\n        disabled={dialButtonDisabled}\n        onClick={() => {\n          if (isIdle) {\n            dialout();\n          } else if (isCallConnected) {\n            hangup();\n          } else {\n            // unexpected state\n          }\n        }}\n      />\n      <i className={styles.flexFill} />\n      <div className={styles.link}>\n        <RcLink\n          size={size}\n          handleOnClick={goToManualDialSettings}\n          data-sign=\"manualDialSettings\"\n        >\n          {i18n.getString('manualDialSettings', currentLocale)}\n        </RcLink>\n      </div>\n    </Dialer>\n  );\n};\n\nexport { DialerPanel };\n"],"file":"DialerPanel.js"}