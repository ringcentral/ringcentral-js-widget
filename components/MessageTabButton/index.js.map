{"version":3,"sources":["components/MessageTabButton/index.js"],"names":["NavigationButton","active","icon","label","noticeCounts","onClick","width","fullSizeInk","notice","styles","notices","navigationButton","linearBorder","iconHolder","propTypes","PropTypes","node","isRequired","bool","string","number","oneOfType","func","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,gBAAT,OAQG;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,IAMC,QANDA,IAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJDC,YAIC,QAJDA,YAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIJ,YAAY,IAAIA,YAAY,GAAG,CAAnC,EAAsC;AACpC,QAAIA,YAAY,GAAG,EAAnB,EAAuB;AACrBI,MAAAA,MAAM,gBACJ;AAAK,qBAAU,cAAf;AAA8B,QAAA,SAAS,EAAEC,mBAAOC;AAAhD,eADF;AAKD,KAND,MAMO;AACLF,MAAAA,MAAM,gBACJ;AAAK,qBAAU,cAAf;AAA8B,QAAA,SAAS,EAAEC,mBAAOD;AAAhD,SACGJ,YADH,CADF;AAKD;AACF;;AACD,sBACE;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,SAAS,EAAE,4BACTI,mBAAOE,gBADE,EAETV,MAAM,IAAIQ,mBAAOR,MAFR,EAGTM,WAAW,GAAG,IAAH,GAAUE,mBAAOG,YAHnB,CAFb;AAOE,IAAA,KAAK,EAAE;AACLN,MAAAA,KAAK,EAALA;AADK;AAPT,kBAWE;AAAK,IAAA,SAAS,EAAEG,mBAAOI,UAAvB;AAAmC,IAAA,KAAK,EAAEV,KAA1C;AAAiD,iBAAWA;AAA5D,kBACE;AAAK,IAAA,SAAS,EAAEM,mBAAOP;AAAvB,KAA8BA,IAA9B,CADF,EAEGM,MAFH,CAXF,CADF;AAkBD;;AACDR,gBAAgB,CAACc,SAAjB,GAA6B;AAC3BZ,EAAAA,IAAI,EAAEa,sBAAUC,IAAV,CAAeC,UADM;AAE3BhB,EAAAA,MAAM,EAAEc,sBAAUG,IAFS;AAG3Bf,EAAAA,KAAK,EAAEY,sBAAUI,MAHU;AAI3Bf,EAAAA,YAAY,EAAEW,sBAAUK,MAJG;AAK3Bd,EAAAA,KAAK,EAAES,sBAAUM,SAAV,CAAoB,CAACN,sBAAUK,MAAX,EAAmBL,sBAAUI,MAA7B,CAApB,EAA0DF,UALtC;AAM3BZ,EAAAA,OAAO,EAAEU,sBAAUO,IANQ;AAO3Bf,EAAAA,WAAW,EAAEQ,sBAAUG;AAPI,CAA7B;AASAlB,gBAAgB,CAACuB,YAAjB,GAAgC;AAC9BtB,EAAAA,MAAM,EAAE,KADsB;AAE9BE,EAAAA,KAAK,EAAEqB,SAFuB;AAG9BpB,EAAAA,YAAY,EAAEoB,SAHgB;AAI9BnB,EAAAA,OAAO,EAAEmB,SAJqB;AAK9BjB,EAAAA,WAAW,EAAE;AALiB,CAAhC;eAOeP,gB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction NavigationButton({\n  active,\n  icon,\n  label,\n  noticeCounts,\n  onClick,\n  width,\n  fullSizeInk,\n}) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = (\n        <div data-sign=\"noticeCounts\" className={styles.notices}>\n          99+\n        </div>\n      );\n    } else {\n      notice = (\n        <div data-sign=\"noticeCounts\" className={styles.notice}>\n          {noticeCounts}\n        </div>\n      );\n    }\n  }\n  return (\n    <div\n      onClick={onClick}\n      className={classnames(\n        styles.navigationButton,\n        active && styles.active,\n        fullSizeInk ? null : styles.linearBorder,\n      )}\n      style={{\n        width,\n      }}\n    >\n      <div className={styles.iconHolder} title={label} data-sign={label}>\n        <div className={styles.icon}>{icon}</div>\n        {notice}\n      </div>\n    </div>\n  );\n}\nNavigationButton.propTypes = {\n  icon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onClick: PropTypes.func,\n  fullSizeInk: PropTypes.bool,\n};\nNavigationButton.defaultProps = {\n  active: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n  fullSizeInk: true,\n};\nexport default NavigationButton;\n"],"file":"index.js"}