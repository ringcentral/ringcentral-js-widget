{"version":3,"sources":["components/CallingSettingsPanel/index.js"],"names":["TooltipCom","Tooltip","CallingSettingsContent","props","onSave","state","callWith","myLocation","ringoutPrompt","onReset","setState","onCallWithChange","availableNumbers","defaultRingoutPrompt","onMyLocationChange","onMyLocationTextChange","e","target","value","onRingoutPromptChange","checked","renderHandler","option","brand","callingOptions","myphone","replace","i18n","getString","currentLocale","newProps","contentKeys","browser","softphone","map","contentKey","callWithOptions","disabled","locationSearchable","hasChanges","availableCallWithNumbers","ringout","styles","ringoutHint","select","locationSelect","text","includes","iconField","toolTip","getTooltipContent","offset","tooltipContainner","infoIcon","Component","propTypes","PropTypes","string","isRequired","arrayOf","bool","object","func","defaultProps","CallingSettingsPanel","className","onBackButtonClick","showSpinner","content","root"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\n\nimport callingOptions from 'ringcentral-integration/modules/CallingSettings/callingOptions';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap_white.css';\n\nimport InfoIcon from '../../assets/images/Info.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport Switch from '../Switch';\nimport IconField from '../IconField';\nimport InputField from '../InputField';\nimport TextInput from '../TextInput';\nimport DropdownSelect from '../DropdownSelect';\nimport SaveButton from '../SaveButton';\n\nconst TooltipCom = typeof Tooltip === 'function' ? Tooltip : Tooltip.default;\nclass CallingSettingsContent extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultRingoutPrompt = props.defaultRingoutPrompt;\n    this.state = {\n      callWith: props.callWith,\n      ringoutPrompt: props.ringoutPrompt,\n      myLocation: props.myLocation,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.callWith !== this.props.callWith) {\n      this.setState({\n        callWith: newProps.callWith,\n      });\n    }\n    if (newProps.ringoutPrompt !== this.props.ringoutPrompt) {\n      this.setState({\n        ringoutPrompt: newProps.ringoutPrompt,\n      });\n    }\n    if (newProps.myLocation !== this.props.myLocation) {\n      this.setState({\n        myLocation: newProps.myLocation,\n      });\n    }\n  }\n\n  onSave = () => {\n    if (typeof this.props.onSave === 'function') {\n      const { callWith, myLocation, ringoutPrompt } = this.state;\n      this.props.onSave({\n        callWith,\n        myLocation,\n        ringoutPrompt,\n      });\n    }\n  };\n\n  onReset = () => {\n    const { callWith, myLocation, ringoutPrompt } = this.props;\n    this.setState({\n      callWith,\n      myLocation,\n      ringoutPrompt,\n    });\n  };\n\n  onCallWithChange = (callWith) => {\n    if (callWith === this.props.callWith) {\n      this.setState({\n        callWith,\n        myLocation: this.props.myLocation,\n        ringoutPrompt: this.props.ringoutPrompt,\n      });\n      return;\n    }\n    this.setState({\n      callWith,\n      myLocation:\n        (this.props.availableNumbers[callWith] &&\n          this.props.availableNumbers[callWith][0]) ||\n        '',\n      ringoutPrompt: this.defaultRingoutPrompt,\n    });\n  };\n\n  onMyLocationChange = (myLocation) => {\n    this.setState({\n      myLocation,\n    });\n  };\n\n  onMyLocationTextChange = (e) => {\n    const myLocation = e.target.value;\n    this.setState({\n      myLocation,\n    });\n  };\n\n  onRingoutPromptChange = (checked) => {\n    this.setState({\n      ringoutPrompt: checked,\n    });\n  };\n\n  getTooltipContent() {\n    let contentKeys;\n    if (\n      this.state.callWith === callingOptions.browser ||\n      this.state.callWith === callingOptions.softphone\n    ) {\n      contentKeys = [`${this.state.callWith}Tooltip`];\n    } else {\n      contentKeys = [\n        `${this.state.callWith}Tooltip`,\n        `${this.state.callWith}Tooltip1`,\n      ];\n    }\n    return (\n      <div>\n        {contentKeys.map((contentKey) => (\n          <div key={contentKey}>\n            {formatMessage(\n              i18n.getString(contentKey, this.props.currentLocale),\n              { brand: this.props.brand },\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  renderHandler = (option) => {\n    let { brand } = this.props;\n    if (option === callingOptions.myphone) {\n      brand = brand.replace(/\\sPhone$/, '');\n    }\n    return formatMessage(i18n.getString(option, this.props.currentLocale), {\n      brand,\n    });\n  };\n\n  render() {\n    const {\n      currentLocale,\n      callWith,\n      callWithOptions,\n      myLocation,\n      ringoutPrompt,\n      availableNumbers,\n      disabled,\n      locationSearchable,\n    } = this.props;\n\n    const hasChanges =\n      this.state.callWith !== callWith ||\n      this.state.myLocation !== myLocation ||\n      this.state.ringoutPrompt !== ringoutPrompt;\n    const availableCallWithNumbers = availableNumbers[this.state.callWith];\n\n    const ringout =\n      this.state.callWith !== callingOptions.softphone &&\n      this.state.callWith !== callingOptions.browser ? (\n        <div>\n          <div className={styles.ringoutHint}>\n            {i18n.getString('ringoutHint', currentLocale)}\n          </div>\n          <InputField\n            dataSign=\"myLocation\"\n            label={i18n.getString('myLocationLabel', currentLocale)}\n          >\n            {availableCallWithNumbers ? (\n              <DropdownSelect\n                className={classnames(styles.select, styles.locationSelect)}\n                value={this.state.myLocation}\n                onChange={this.onMyLocationChange}\n                searchOption={\n                  locationSearchable\n                    ? (option, text) => option.includes(text)\n                    : null\n                }\n                options={availableCallWithNumbers}\n                disabled={disabled}\n                dropdownAlign=\"left\"\n                titleEnabled\n              />\n            ) : (\n              <TextInput\n                dataSign=\"myLocationInput\"\n                value={this.state.myLocation}\n                maxLength={30}\n                onChange={this.onMyLocationTextChange}\n              />\n            )}\n          </InputField>\n          <IconField\n            className={styles.iconField}\n            icon={\n              <Switch\n                dataSign=\"ringoutPromptToggle\"\n                checked={this.state.ringoutPrompt}\n                onChange={this.onRingoutPromptChange}\n              />\n            }\n          >\n            {i18n.getString('press1ToStartCallLabel', currentLocale)}\n          </IconField>\n        </div>\n      ) : null;\n\n    const toolTip = this.getTooltipContent();\n    return (\n      <React.Fragment>\n        <InputField\n          label={\n            <span>\n              {i18n.getString('makeCallsWith', currentLocale)}\n              <TooltipCom\n                placement=\"bottom\"\n                trigger=\"click\"\n                overlay={toolTip}\n                align={{\n                  offset: [0, 47],\n                }}\n                arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n                getTooltipContainer={() => this.tooltipContainner}\n              >\n                <InfoIcon width={14} height={14} className={styles.infoIcon} />\n              </TooltipCom>\n            </span>\n          }\n          noBorder\n        >\n          <DropdownSelect\n            dataSign=\"callingSetting\"\n            className={styles.select}\n            value={this.state.callWith}\n            onChange={this.onCallWithChange}\n            options={callWithOptions}\n            dropdownAlign=\"left\"\n            renderFunction={this.renderHandler}\n            renderValue={this.renderHandler}\n            disabled={disabled}\n            titleEnabled\n          />\n          <div\n            className={styles.tooltipContainner}\n            ref={(tooltipContainner) => {\n              this.tooltipContainner = tooltipContainner;\n            }}\n          />\n        </InputField>\n        {ringout}\n        <SaveButton\n          currentLocale={currentLocale}\n          onClick={this.onSave}\n          disabled={!hasChanges}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nCallingSettingsContent.propTypes = {\n  brand: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  callWithOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  callWith: PropTypes.string.isRequired,\n  myLocation: PropTypes.string.isRequired,\n  ringoutPrompt: PropTypes.bool.isRequired,\n  defaultRingoutPrompt: PropTypes.bool,\n  availableNumbers: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  locationSearchable: PropTypes.bool,\n};\n\nCallingSettingsContent.defaultProps = {\n  disabled: false,\n  locationSearchable: false,\n  defaultRingoutPrompt: true,\n};\n\nexport default function CallingSettingsPanel({\n  className,\n  onBackButtonClick,\n  currentLocale,\n  showSpinner,\n  ...props\n}) {\n  const content = showSpinner ? (\n    <SpinnerOverlay />\n  ) : (\n    <CallingSettingsContent {...props} currentLocale={currentLocale} />\n  );\n  return (\n    <div\n      data-sign=\"callingSettings\"\n      className={classnames(styles.root, className)}\n    >\n      <BackHeader onBackClick={onBackButtonClick}>\n        {i18n.getString('title', currentLocale)}\n      </BackHeader>\n      <Panel className={styles.content}>{content}</Panel>\n    </div>\n  );\n}\nCallingSettingsPanel.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n};\n\nCallingSettingsPanel.defaultProps = {\n  className: null,\n  showSpinner: false,\n};\n"],"file":"index.js"}