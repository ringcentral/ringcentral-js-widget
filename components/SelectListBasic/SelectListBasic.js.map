{"version":3,"sources":["components/SelectListBasic/SelectListBasic.tsx"],"names":["SelectListBasic","title","options","otherOptions","associatedOptions","showAssociatedSection","placeholder","searchOption","rightIcon","matchedTitle","otherTitle","associatedTitle","currentLocale","renderListView","open","setOpen","scrollCheck","selectListBasicClassName","backHeaderClassName","listContainerClassName","classes","onBackClick","contactSearch","field","foundFromServerTitle","showFoundFromServer","foundFromServerEntities","appName","isSearching","filter","setFilter","showSearchFromServerHint","setShowSearchFromServerHint","scrollElmRef","matchElmRef","hasSearch","matchOptions","option","matchOtherOptions","matchAssociatedOptions","hasResult","length","backHeaderOnclick","foundFromServerHint","styles","hint","i18n","getString","notResultFoundFromServer","loading","notFoundFromServer","showLoading","main","TOOLTIP_LONG_DELAY_TIME","search","searchInput","startAdornment","searchSvg","event","target","value","key","keyCode","searchString","trim","fromField","listContainer","text","elm","type","noResult","defaultProps","undefined"],"mappings":"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","sourcesContent":["import { RcIcon, RcTextField } from '@ringcentral/juno';\nimport searchSvg from '@ringcentral/juno/icon/Search';\nimport classNames from 'classnames';\nimport formatMessage from 'format-message';\nimport React, { FunctionComponent, useEffect, useRef, useState } from 'react';\n\nimport { AnimationPanel } from '../AnimationPanel';\nimport BackHeader from '../BackHeaderV2';\nimport { Tooltip } from '../Rcui/Tooltip';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { TOOLTIP_LONG_DELAY_TIME } from '../../lib/toolTipDelayTime';\n\nexport type SelectListBasicProps = {\n  title: string;\n  options?: object[];\n  otherOptions?: object[];\n  associatedOptions?: object[];\n  showAssociatedSection?: boolean;\n  placeholder?: string;\n  searchOption: (option: any, text: string) => any;\n  rightIcon?: JSX.Element;\n  currentLocale: string;\n  matchedTitle?: string;\n  otherTitle?: string;\n  associatedTitle?: string;\n  renderListView?: (\n    data: any,\n    type: string,\n    filter: string,\n    // TODO: need type check\n    scrollCheck: Function,\n  ) => React.ReactNode;\n  open?: boolean;\n  setOpen?: (...args: any[]) => any;\n  scrollCheck?: (scrollElmRef, matchElmRef, elm, type) => any;\n  selectListBasicClassName?: string;\n  backHeaderClassName?: string;\n  listContainerClassName?: string;\n  classes?: {\n    searchInput?: string;\n    noResult?: string;\n    placeholder?: string;\n  };\n  onBackClick?: () => any;\n  contactSearch?: (arg: {\n    searchString: string;\n    fromField: SelectListBasicProps['field'];\n  }) => any;\n  field?: string;\n  foundFromServerTitle?: string;\n  showFoundFromServer?: boolean;\n  foundFromServerEntities?: any[];\n  appName?: string;\n  isSearching?: boolean;\n  setShowSearchFromServerHint?: (state: boolean) => any;\n  showSearchFromServerHint?: boolean;\n};\n\nconst SelectListBasic: FunctionComponent<SelectListBasicProps> = ({\n  title,\n  options,\n  otherOptions,\n  associatedOptions,\n  showAssociatedSection,\n  placeholder,\n  searchOption,\n  rightIcon,\n  matchedTitle,\n  otherTitle,\n  associatedTitle,\n  currentLocale,\n  renderListView,\n  open,\n  setOpen,\n  scrollCheck,\n  selectListBasicClassName,\n  backHeaderClassName,\n  listContainerClassName,\n  classes,\n  onBackClick,\n  contactSearch,\n  field,\n  foundFromServerTitle,\n  showFoundFromServer,\n  foundFromServerEntities,\n  appName,\n  isSearching,\n}) => {\n  const [filter, setFilter] = useState(null);\n  const [showSearchFromServerHint, setShowSearchFromServerHint] = useState(\n    false,\n  );\n  const scrollElmRef = useRef();\n  const matchElmRef = useRef();\n\n  // When open change clear filter\n  useEffect(() => {\n    setFilter(null);\n    setShowSearchFromServerHint(true);\n  }, [open]);\n  useEffect(() => {\n    if (isSearching) {\n      setShowSearchFromServerHint(false);\n    }\n  }, [isSearching]);\n  const hasSearch = searchOption && filter;\n  const matchOptions = hasSearch\n    ? options.filter((option) => searchOption(option, filter))\n    : options;\n  const matchOtherOptions = hasSearch\n    ? otherOptions.filter((option) => searchOption(option, filter))\n    : otherOptions;\n  const matchAssociatedOptions = hasSearch\n    ? associatedOptions.filter((option) => searchOption(option, filter))\n    : associatedOptions;\n  const hasResult =\n    matchOptions.length +\n      matchOtherOptions.length +\n      matchAssociatedOptions.length >\n      0 ||\n    options.length + otherOptions.length + associatedOptions.length === 0;\n  const backHeaderOnclick = () => {\n    setOpen(false);\n    if (onBackClick) {\n      return onBackClick();\n    }\n  };\n  const foundFromServerHint = (\n    <p className={styles.hint}>\n      {formatMessage(i18n.getString('foundFromServerHint', currentLocale), {\n        appName,\n      })}\n    </p>\n  );\n  const notResultFoundFromServer = (\n    <p className={styles.loading}>\n      {' '}\n      {i18n.getString('notResultFoundFromServer', currentLocale)}\n    </p>\n  );\n  const loading = (\n    <p className={styles.loading}>{i18n.getString('loading', currentLocale)}</p>\n  );\n  const notFoundFromServer = showSearchFromServerHint\n    ? foundFromServerHint\n    : notResultFoundFromServer;\n  const showLoading = isSearching ? loading : notFoundFromServer;\n  return (\n    <AnimationPanel open={open} className={selectListBasicClassName}>\n      {open ? (\n        <>\n          <BackHeader\n            currentLocale={currentLocale}\n            title={title}\n            onBackClick={backHeaderOnclick}\n            rightIcon={rightIcon}\n            className={backHeaderClassName}\n          />\n          <main className={styles.main} data-sign=\"selectList\">\n            <Tooltip title={placeholder} enterDelay={TOOLTIP_LONG_DELAY_TIME}>\n              <div className={classNames(styles.search, classes.searchInput)}>\n                {!filter && (\n                  <span\n                    className={classNames(\n                      styles.placeholder,\n                      classes.placeholder,\n                    )}\n                  >\n                    {placeholder}\n                  </span>\n                )}\n                <RcTextField\n                  variant=\"outline\"\n                  size=\"small\"\n                  fullWidth\n                  radius=\"round\"\n                  InputProps={{\n                    startAdornment: (\n                      <RcIcon\n                        symbol={searchSvg}\n                        color=\"icon.subdued\"\n                        size=\"small\"\n                      />\n                    ),\n                  }}\n                  data-sign=\"searchBar\"\n                  onChange={(event: any) => {\n                    if (event.target) {\n                      const value = event.target.value || '';\n                      setFilter(value);\n                    }\n                  }}\n                  onKeyDown={(key) => {\n                    // Press enter to search contacts from server\n                    if ((key && key.keyCode !== 13) || !showFoundFromServer)\n                      return;\n                    if (contactSearch && typeof contactSearch === 'function') {\n                      const searchString = filter ? filter.trim() : '';\n                      if (searchString.length) {\n                        contactSearch({\n                          searchString,\n                          fromField: field,\n                        });\n                      }\n                    }\n                  }}\n                />\n              </div>\n            </Tooltip>\n            <div\n              className={classNames(\n                styles.listContainer,\n                listContainerClassName,\n              )}\n              ref={scrollElmRef}\n              data-sign=\"searchResult\"\n            >\n              {hasResult || showFoundFromServer ? (\n                <>\n                  <div\n                    ref={matchElmRef}\n                    className={styles.text}\n                    data-sign={matchedTitle}\n                  >\n                    {matchedTitle && (\n                      <div className={styles.title}>\n                        {matchedTitle} ({matchOptions.length})\n                      </div>\n                    )}\n                    {matchOptions.length > 0 &&\n                      renderListView(\n                        matchOptions,\n                        'matched',\n                        filter,\n                        (elm, type) =>\n                          scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                      )}\n                  </div>\n                  <div className={styles.text} data-sign={otherTitle}>\n                    {otherTitle && (\n                      <div className={styles.title}>\n                        {otherTitle} ({matchOtherOptions.length})\n                      </div>\n                    )}\n                    {matchOtherOptions.length > 0 &&\n                      renderListView(\n                        matchOtherOptions,\n                        'other',\n                        filter,\n                        (elm, type) =>\n                          scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                      )}\n                  </div>\n                  {showAssociatedSection && (\n                    <div className={styles.text}>\n                      {associatedTitle && (\n                        <div className={styles.title}>\n                          {associatedTitle} ({matchAssociatedOptions.length})\n                        </div>\n                      )}\n                      {matchAssociatedOptions.length > 0 &&\n                        renderListView(\n                          matchAssociatedOptions,\n                          'other',\n                          filter,\n                          (elm, type) =>\n                            scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                        )}\n                    </div>\n                  )}\n                  {showFoundFromServer && (\n                    <div className={styles.text}>\n                      {foundFromServerTitle && (\n                        <div className={styles.title}>\n                          {foundFromServerTitle} (\n                          {foundFromServerEntities.length})\n                        </div>\n                      )}\n                      {foundFromServerEntities &&\n                      foundFromServerEntities.length > 0\n                        ? renderListView(\n                            foundFromServerEntities,\n                            'custom',\n                            filter,\n                            (elm, type) =>\n                              scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                          )\n                        : showLoading}\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div\n                  className={classNames(\n                    styles.search,\n                    styles.text,\n                    classes.noResult,\n                  )}\n                >\n                  {`${i18n.getString(\n                    'noResultFoundFor',\n                    currentLocale,\n                  )} \"${filter}\"`}\n                </div>\n              )}\n            </div>\n          </main>\n        </>\n      ) : null}\n    </AnimationPanel>\n  );\n};\nSelectListBasic.defaultProps = {\n  options: [],\n  otherOptions: [],\n  associatedOptions: [],\n  showAssociatedSection: false,\n  placeholder: '',\n  rightIcon: null,\n  setOpen() {},\n  open: false,\n  renderListView() {\n    return null;\n  },\n  scrollCheck() {},\n  selectListBasicClassName: null,\n  backHeaderClassName: null,\n  listContainerClassName: null,\n  classes: {},\n  onBackClick: undefined,\n  matchedTitle: null,\n  otherTitle: null,\n  associatedTitle: null,\n  contactSearch: null,\n  field: null,\n  foundFromServerTitle: null,\n  showFoundFromServer: false,\n  foundFromServerEntities: [],\n  appName: null,\n  isSearching: false,\n  setShowSearchFromServerHint() {},\n  showSearchFromServerHint: true,\n};\nexport { SelectListBasic };\n"],"file":"SelectListBasic.js"}