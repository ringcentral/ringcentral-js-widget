{"version":3,"sources":["components/SelectListBasic/SelectListBasic.tsx"],"names":["SelectListBasic","title","options","otherOptions","associatedOptions","showAssociatedSection","placeholder","searchOption","rightIcon","matchedTitle","otherTitle","associatedTitle","currentLocale","renderListView","open","setOpen","scrollCheck","selectListBasicClassName","backHeaderClassName","listContainerClassName","onBackClick","contactSearch","field","foundFromServerTitle","showFoundFromServer","foundFromServerEntities","appName","isSearching","showSearchFromServerHint","setShowSearchFromServerHint","filter","setFilter","scrollElmRef","matchElmRef","hasSearch","matchOptions","option","matchOtherOptions","matchAssociatedOptions","hasResult","length","backHeaderOnclick","foundFromServerHint","styles","hint","i18n","getString","notResultFoundFromServer","loading","notFoundFromServer","showLoading","main","TOOLTIP_DEFAULT_DELAY_TIME","search","searchSvg","event","target","value","key","keyCode","searchString","fromField","listContainer","text","elm","type","defaultProps","undefined"],"mappings":"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","sourcesContent":["import { RcOutlineTextField } from '@ringcentral-integration/rcui';\nimport searchSvg from '@ringcentral-integration/rcui/icons/icon-search.svg';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\nimport React, { FunctionComponent, useEffect, useRef, useState } from 'react';\n\nimport { AnimationPanel } from '../AnimationPanel';\nimport BackHeader from '../BackHeaderV2';\nimport { Tooltip } from '../Rcui/Tooltip';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { TOOLTIP_DEFAULT_DELAY_TIME } from '../../lib/toolTipDelayTime';\n\nexport type SelectListBasicProps = {\n  title: string;\n  options?: object[];\n  otherOptions?: object[];\n  associatedOptions?: object[];\n  showAssociatedSection?: boolean;\n  placeholder?: string;\n  searchOption: (option: any, text: string) => any;\n  rightIcon?: JSX.Element;\n  currentLocale: string;\n  matchedTitle?: string;\n  otherTitle?: string;\n  associatedTitle?: string;\n  renderListView?: (\n    data: any,\n    type: string,\n    filter: string,\n    // TODO: need type check\n    scrollCheck: Function,\n  ) => React.ReactNode;\n  open?: boolean;\n  setOpen?: (...args: any[]) => any;\n  scrollCheck?: (scrollElmRef, matchElmRef, elm, type) => any;\n  selectListBasicClassName?: string;\n  backHeaderClassName?: string;\n  listContainerClassName?: string;\n  onBackClick?: () => any;\n  contactSearch?: (arg: {\n    searchString: string;\n    fromField: SelectListBasicProps['field'];\n  }) => any;\n  field?: string;\n  foundFromServerTitle?: string;\n  showFoundFromServer?: boolean;\n  foundFromServerEntities?: any[];\n  appName?: string;\n  isSearching?: boolean;\n  setShowSearchFromServerHint?: (state: boolean) => any;\n  showSearchFromServerHint?: boolean;\n};\n\nconst SelectListBasic: FunctionComponent<SelectListBasicProps> = ({\n  title,\n  options,\n  otherOptions,\n  associatedOptions,\n  showAssociatedSection,\n  placeholder,\n  searchOption,\n  rightIcon,\n  matchedTitle,\n  otherTitle,\n  associatedTitle,\n  currentLocale,\n  renderListView,\n  open,\n  setOpen,\n  scrollCheck,\n  selectListBasicClassName,\n  backHeaderClassName,\n  listContainerClassName,\n  onBackClick,\n  contactSearch,\n  field,\n  foundFromServerTitle,\n  showFoundFromServer,\n  foundFromServerEntities,\n  appName,\n  isSearching,\n  showSearchFromServerHint,\n  setShowSearchFromServerHint,\n}) => {\n  const [filter, setFilter] = useState(null);\n  const scrollElmRef = useRef();\n  const matchElmRef = useRef();\n\n  // When open change clear filter\n  useEffect(() => {\n    setFilter(null);\n  }, [open]);\n\n  const hasSearch = searchOption && filter;\n  const matchOptions = hasSearch\n    ? options.filter((option) => searchOption(option, filter))\n    : options;\n  const matchOtherOptions = hasSearch\n    ? otherOptions.filter((option) => searchOption(option, filter))\n    : otherOptions;\n  const matchAssociatedOptions = hasSearch\n    ? associatedOptions.filter((option) => searchOption(option, filter))\n    : associatedOptions;\n  const hasResult =\n    matchOptions.length +\n      matchOtherOptions.length +\n      matchAssociatedOptions.length >\n      0 ||\n    options.length + otherOptions.length + associatedOptions.length === 0;\n  const backHeaderOnclick = () => {\n    setOpen(false);\n    if (\n      showFoundFromServer &&\n      typeof setShowSearchFromServerHint === 'function'\n    ) {\n      setShowSearchFromServerHint(false);\n    }\n    if (onBackClick) {\n      return onBackClick();\n    }\n  };\n  const foundFromServerHint = (\n    <p className={styles.hint}>\n      {formatMessage(i18n.getString('foundFromServerHint', currentLocale), {\n        appName,\n      })}\n    </p>\n  );\n  const notResultFoundFromServer = (\n    <p className={styles.loading}>\n      {' '}\n      {i18n.getString('notResultFoundFromServer', currentLocale)}\n    </p>\n  );\n  const loading = (\n    <p className={styles.loading}>{i18n.getString('loading', currentLocale)}</p>\n  );\n  const notFoundFromServer =\n    !isSearching && !showSearchFromServerHint\n      ? notResultFoundFromServer\n      : foundFromServerHint;\n  const showLoading = isSearching ? loading : notFoundFromServer;\n  return (\n    <AnimationPanel open={open} className={selectListBasicClassName}>\n      {open ? (\n        <>\n          <BackHeader\n            currentLocale={currentLocale}\n            title={title}\n            onBackClick={backHeaderOnclick}\n            rightIcon={rightIcon}\n            className={backHeaderClassName}\n          />\n          <main className={styles.main} data-sign=\"selectList\">\n            <Tooltip\n              title={placeholder}\n              enterDelay={TOOLTIP_DEFAULT_DELAY_TIME}\n            >\n              <div className={styles.search}>\n                {!filter && (\n                  <span className={styles.placeholder}>{placeholder}</span>\n                )}\n                <RcOutlineTextField\n                  size=\"small\"\n                  radiusType=\"circle\"\n                  iconPosition=\"left\"\n                  symbol={searchSvg}\n                  data-sign=\"searchBar\"\n                  onChange={(event: any) => {\n                    if (event.target) {\n                      const value = event.target.value || '';\n                      setFilter(value);\n                    }\n                  }}\n                  onKeyDown={(key) => {\n                    // Press enter to search contacts from server\n                    if (\n                      showFoundFromServer &&\n                      contactSearch &&\n                      typeof contactSearch === 'function'\n                    ) {\n                      if (\n                        key &&\n                        key.keyCode === 13 &&\n                        filter &&\n                        filter.length\n                      ) {\n                        contactSearch({\n                          searchString: filter,\n                          fromField: field,\n                        });\n                        if (\n                          setShowSearchFromServerHint &&\n                          typeof setShowSearchFromServerHint === 'function' &&\n                          filter &&\n                          filter.length > 1\n                        ) {\n                          setShowSearchFromServerHint(false);\n                        }\n                      }\n                    }\n                  }}\n                />\n              </div>\n            </Tooltip>\n            <div\n              className={classnames(\n                styles.listContainer,\n                listContainerClassName,\n              )}\n              ref={scrollElmRef}\n              data-sign=\"searchResult\"\n            >\n              {hasResult || showFoundFromServer ? (\n                <>\n                  <div ref={matchElmRef} className={styles.text}>\n                    {matchedTitle && (\n                      <div className={styles.title}>\n                        {matchedTitle} ({matchOptions.length})\n                      </div>\n                    )}\n                    {matchOptions.length > 0 &&\n                      renderListView(\n                        matchOptions,\n                        'matched',\n                        filter,\n                        (elm, type) =>\n                          scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                      )}\n                  </div>\n                  <div className={styles.text}>\n                    {otherTitle && (\n                      <div className={styles.title}>\n                        {otherTitle} ({matchOtherOptions.length})\n                      </div>\n                    )}\n                    {matchOtherOptions.length > 0 &&\n                      renderListView(\n                        matchOtherOptions,\n                        'other',\n                        filter,\n                        (elm, type) =>\n                          scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                      )}\n                  </div>\n                  {showAssociatedSection && (\n                    <div className={styles.text}>\n                      {associatedTitle && (\n                        <div className={styles.title}>\n                          {associatedTitle} ({matchAssociatedOptions.length})\n                        </div>\n                      )}\n                      {matchAssociatedOptions.length > 0 &&\n                        renderListView(\n                          matchAssociatedOptions,\n                          'other',\n                          filter,\n                          (elm, type) =>\n                            scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                        )}\n                    </div>\n                  )}\n                  {showFoundFromServer && (\n                    <div className={styles.text}>\n                      {foundFromServerTitle && (\n                        <div className={styles.title}>\n                          {foundFromServerTitle} (\n                          {foundFromServerEntities.length})\n                        </div>\n                      )}\n                      {foundFromServerEntities &&\n                      foundFromServerEntities.length > 0\n                        ? renderListView(\n                            foundFromServerEntities,\n                            'custom',\n                            filter,\n                            (elm, type) =>\n                              scrollCheck(scrollElmRef, matchElmRef, elm, type),\n                          )\n                        : showLoading}\n                    </div>\n                  )}\n                </>\n              ) : (\n                <div className={classnames(styles.search, styles.text)}>\n                  {`${i18n.getString(\n                    'noResultFoundFor',\n                    currentLocale,\n                  )} \"${filter}\"`}\n                </div>\n              )}\n            </div>\n          </main>\n        </>\n      ) : null}\n    </AnimationPanel>\n  );\n};\nSelectListBasic.defaultProps = {\n  options: [],\n  otherOptions: [],\n  associatedOptions: [],\n  showAssociatedSection: false,\n  placeholder: '',\n  rightIcon: null,\n  setOpen() {},\n  open: false,\n  renderListView: () => null,\n  scrollCheck() {},\n  selectListBasicClassName: null,\n  backHeaderClassName: null,\n  listContainerClassName: null,\n  onBackClick: undefined,\n  matchedTitle: null,\n  otherTitle: null,\n  associatedTitle: null,\n  contactSearch: null,\n  field: null,\n  foundFromServerTitle: null,\n  showFoundFromServer: false,\n  foundFromServerEntities: [],\n  appName: null,\n  isSearching: false,\n  setShowSearchFromServerHint() {},\n  showSearchFromServerHint: true,\n};\nexport { SelectListBasic };\n"],"file":"SelectListBasic.js"}