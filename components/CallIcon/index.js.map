{"version":3,"sources":["components/CallIcon/index.js"],"names":["callIconMap","callDirections","inbound","dynamicsFont","outbound","newCallIconMap","InCall","OutCall","CallIcon","direction","ringing","inboundTitle","outboundTitle","isOnConferenceCall","showAvatar","avatarUrl","extraNum","newCallIcon","title","symbol","CallDirectionIco","styles","callIcon","avatar","activeCall","newRinging","propTypes","PropTypes","string","isRequired","bool","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,WAAW,qDACdC,2BAAeC,OADD,EACWC,yBAAaD,OADxB,iCAEdD,2BAAeG,QAFD,EAEYD,yBAAaC,QAFzB,gBAAjB;AAKA,IAAMC,cAAc,2DACjBJ,2BAAeC,OADE,EACQI,wBADR,oCAEjBL,2BAAeG,QAFE,EAESG,yBAFT,mBAApB;;AAKA,SAASC,QAAT,OAUG;AAAA,MATDC,SASC,QATDA,SASC;AAAA,MARDC,OAQC,QARDA,OAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,aAMC,QANDA,aAMC;AAAA,MALDC,kBAKC,QALDA,kBAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,2BAFDC,QAEC;AAAA,MAFDA,QAEC,8BAFU,CAEV;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAMC,KAAK,GACTT,SAAS,KAAKR,2BAAeC,OAA7B,GAAuCS,YAAvC,GAAsDC,aADxD;AAEA,MAAIO,MAAJ;AACA,MAAMC,gBAAgB,GAAGf,cAAc,CAACI,SAAD,CAAvC;;AACA,MAAIK,UAAJ,EAAgB;AACdK,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAE,6BAAWE,mBAAOC,QAAlB,EAA4BD,mBAAOE,MAAnC;AAAhB,oBACE,gCAAC,sBAAD;AACE,MAAA,kBAAkB,EAAEV,kBADtB;AAEE,MAAA,SAAS,EAAEE,SAFb;AAGE,MAAA,QAAQ,EAAEC;AAHZ,MADF,CADF;AASD,GAVD,MAUO,IAAIC,WAAJ,EAAiB;AACtBE,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAEE,mBAAOJ;AAAvB,oBACE;AAAM,MAAA,KAAK,EAAEC,KAAb;AAAoB,mBAAU;AAA9B,oBACE,gCAAC,gBAAD;AACE,MAAA,SAAS,EAAE,6BAAWG,mBAAOG,UAAlB,sBACRH,mBAAOI,UADC,EACYf,OADZ;AADb,MADF,CADF,CADF;AAWD,GAZM,MAYA;AACLS,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAEE,mBAAOC;AAAvB,oBACE;AACE,MAAA,SAAS,EAAE,6BACTtB,WAAW,CAACS,SAAD,CADF,EAETY,mBAAOG,UAFE,EAGTd,OAAO,IAAIW,mBAAOX,OAHT,CADb;AAME,MAAA,KAAK,EAAEQ,KANT;AAOE,mBAAU;AAPZ,MADF,CADF;AAaD;;AACD,SAAOC,MAAP;AACD;;AAEDX,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,SAAS,EAAEkB,sBAAUC,MAAV,CAAiBC,UADT;AAEnBnB,EAAAA,OAAO,EAAEiB,sBAAUG,IAFA;AAGnBjB,EAAAA,kBAAkB,EAAEc,sBAAUG,IAHX;AAInBnB,EAAAA,YAAY,EAAEgB,sBAAUC,MAJL;AAKnBhB,EAAAA,aAAa,EAAEe,sBAAUC,MALN;AAMnBd,EAAAA,UAAU,EAAEa,sBAAUG,IANH;AAOnBf,EAAAA,SAAS,EAAEY,sBAAUC,MAPF;AAQnBX,EAAAA,WAAW,EAAEU,sBAAUG;AARJ,CAArB;AAWAtB,QAAQ,CAACuB,YAAT,GAAwB;AACtBrB,EAAAA,OAAO,EAAE,KADa;AAEtBG,EAAAA,kBAAkB,EAAE,KAFE;AAGtBF,EAAAA,YAAY,EAAEqB,SAHQ;AAItBpB,EAAAA,aAAa,EAAEoB,SAJO;AAKtBlB,EAAAA,UAAU,EAAE,KALU;AAMtBC,EAAAA,SAAS,EAAE,IANW;AAOtBE,EAAAA,WAAW,EAAE;AAPS,CAAxB;eAUeT,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport OutCall from '@ringcentral/juno/icon/OutcallBorder';\nimport InCall from '@ringcentral/juno/icon/IncallBorder';\nimport CallAvatar from '../CallAvatar';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nconst callIconMap = {\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n};\n\nconst newCallIconMap = {\n  [callDirections.inbound]: InCall,\n  [callDirections.outbound]: OutCall,\n};\n\nfunction CallIcon({\n  direction,\n  ringing,\n  inboundTitle,\n  outboundTitle,\n  isOnConferenceCall,\n  showAvatar,\n  avatarUrl,\n  extraNum = 0,\n  newCallIcon,\n}) {\n  const title =\n    direction === callDirections.inbound ? inboundTitle : outboundTitle;\n  let symbol;\n  const CallDirectionIco = newCallIconMap[direction];\n  if (showAvatar) {\n    symbol = (\n      <div className={classnames(styles.callIcon, styles.avatar)}>\n        <CallAvatar\n          isOnConferenceCall={isOnConferenceCall}\n          avatarUrl={avatarUrl}\n          extraNum={extraNum}\n        />\n      </div>\n    );\n  } else if (newCallIcon) {\n    symbol = (\n      <div className={styles.newCallIcon}>\n        <span title={title} data-sign=\"callDirection\">\n          <CallDirectionIco\n            className={classnames(styles.activeCall, {\n              [styles.newRinging]: ringing,\n            })}\n          />\n        </span>\n      </div>\n    );\n  } else {\n    symbol = (\n      <div className={styles.callIcon}>\n        <span\n          className={classnames(\n            callIconMap[direction],\n            styles.activeCall,\n            ringing && styles.ringing,\n          )}\n          title={title}\n          data-sign=\"callDirection\"\n        />\n      </div>\n    );\n  }\n  return symbol;\n}\n\nCallIcon.propTypes = {\n  direction: PropTypes.string.isRequired,\n  ringing: PropTypes.bool,\n  isOnConferenceCall: PropTypes.bool,\n  inboundTitle: PropTypes.string,\n  outboundTitle: PropTypes.string,\n  showAvatar: PropTypes.bool,\n  avatarUrl: PropTypes.string,\n  newCallIcon: PropTypes.bool,\n};\n\nCallIcon.defaultProps = {\n  ringing: false,\n  isOnConferenceCall: false,\n  inboundTitle: undefined,\n  outboundTitle: undefined,\n  showAvatar: false,\n  avatarUrl: null,\n  newCallIcon: false,\n};\n\nexport default CallIcon;\n"],"file":"index.js"}